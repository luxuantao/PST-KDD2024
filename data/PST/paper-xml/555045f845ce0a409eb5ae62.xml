<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Context-Based Zero-Interaction Pairing and Key Evolution for Advanced Personal Devices</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Markus</forename><surname>Miettinen</surname></persName>
							<email>markus.miettinen@trust.cased.de</email>
							<affiliation key="aff0">
								<orgName type="institution">Technische Universität Darmstadt</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">N</forename><surname>Asokan</surname></persName>
							<email>asokan@acm.org</email>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">Aalto University</orgName>
								<orgName type="institution" key="instit2">University of Helsinki</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Thien</forename><forename type="middle">Duc</forename><surname>Nguyen</surname></persName>
							<email>ducthien.nguyen@trust.cased.de</email>
							<affiliation key="aff2">
								<orgName type="institution">Technische Universität Darmstadt</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ahmad-Reza</forename><surname>Sadeghi</surname></persName>
							<email>ahmad.sadeghi@trust.cased.de</email>
							<affiliation key="aff3">
								<orgName type="institution">Technische Universität Darmstadt</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Majid</forename><surname>Sobhani</surname></persName>
							<email>majid.sobhani@trust.cased.de</email>
							<affiliation key="aff4">
								<orgName type="institution">Technische Universität Darmstadt</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Context-Based Zero-Interaction Pairing and Key Evolution for Advanced Personal Devices</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C76274F8D14786894E540FD9343C9C3D</idno>
					<idno type="DOI">10.1145/2660267.2660334</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T04:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Security and Protection-Authentication contextual security</term>
					<term>context-based pairing</term>
					<term>zero-interaction</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Solutions for pairing devices without prior security associations typically require users to actively take part in the pairing process of the devices. Scenarios involving new types of devices like Internet-of-Things (IoT) appliances and wearable devices make it, however, desirable to be able to pair users' personal devices without user involvement.</p><p>In this paper, we present a new approach for secure zerointeraction pairing suitable for IoT and wearable devices. We primarily require pairing to happen between "correct" devices -the devices that the user intends to pair. Our pairing scheme identifies the correct devices based on measuring sustained co-presence over time. We do this by having the devices compute a fingerprint of their ambient context using information gathered through commonly available sensor modalities like ambient noise and luminosity. We introduce a novel robust and inexpensive approach for fingerprinting contexts over time. Co-present devices will observe roughly similar context fingerprints that we use in a key evolution protocol to gradually increase the confidence in the authenticity of the correct devices. Our experiments show the effectiveness of this approach for zero-interaction pairing.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Traditional approaches for key agreement between personal devices without any prior security association (also known as "pairing") typically rely on some form of active user involvement to authenticate the key agreement. For example, the user may be asked to compare authentication strings displayed on the devices or to bring the devices close enough so that they can communicate via a Near Field Communication channel <ref type="bibr" target="#b17">[17]</ref>. Such measures are required to thwart man-in-the middle attacks targeting the initial key agreement. Relying on user involvement to authenticate pairing is cumbersome, error-prone and does not scale well. It is therefore desirable to devise zero-interaction pairing mechanisms which do not require any user interaction.</p><p>In this paper, we consider the challenge of zero-interaction pairing for two particularly important emerging classes of personal devices: Internet-of-Things (IoT) appliances and wearables. There has been an increasing interest in both of these classes accompanied by a steady stream of product announcements and media coverage. IoT devices are intelligent network-enabled appliances utilizing connectivity and local computation to enable richer functionality and improved user experience. Examples of IoT devices include Nest smoke detectors and thermostats <ref type="bibr" target="#b12">[12]</ref>, the Oral-B connected toothbrush <ref type="bibr" target="#b13">[13]</ref>, the Bee+ smart injection tracker for diabetic patients <ref type="bibr" target="#b21">[21]</ref>, and the Spotter smart home sensor <ref type="bibr" target="#b14">[14]</ref>. According to a recent Gartner forecast, the total installed base of IoT devices will grow to 26 billion units by 2020 <ref type="bibr">[8]</ref>. Such devices will therefore play a significant role in the future end-user computing infrastructures. Similarly, new wearable devices include wristbands used for activity monitoring (e.g., LG LifeBand Touch, POLAR Loop Activity Tracker), augmented reality gadgets like the Google Glass near-eye display device, smart watch devices (e.g., Samsung Galaxy Gear) and many more. It is estimated that by 2017, 50% of all smartphone app interactions will involve wearable devices <ref type="bibr" target="#b7">[7]</ref>, emphasizing the important role that wearables are expected to play in future smartphone usage scenarios.</p><p>Both IoT devices and wearables process sensitive information and critical operations. Thus securing their communications is essential. On the other hand, in both cases ordi-nary users may own and manage many devices. The devices themselves may not have any user interfaces. Therefore, zero-interaction pairing will greatly improve the usability of configuring these devices.</p><p>The security goal of pairing personal devices is to ensure that the key agreement takes place between the devices owned by the user. In traditional pairing schemes, users are required to demonstratively identify the correct devices <ref type="bibr" target="#b1">[1]</ref>. The requirement of zero-interaction, however, rules out demonstrative identification.</p><p>Existing pairing solutions that do not require direct user involvement can be broadly divided into two classes: key predistribution and context-based pairing approaches. Key predistribution-based approaches (e.g., <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b2">2,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b18">18]</ref>) are mainly intended for digital sensor network (DSN) scenarios and require key material to be distributed to all network nodes before their deployment in the field. In IoT scenarios, however, such predistribution is not feasible due to the overwhelmingly large number of devices deployed and the fact that there are hundreds if not thousands of different device vendors that do not necessarily share any security associations with each other. Furthermore, in our scenarios multiple authentication domains may exist in overlapping physical spaces, such as the IoT domains of two neighboring apartments. Therefore the pairing solution must be capable of automatically distinguishing between such overlapping domains.</p><p>Context-based pairing approaches (e.g., <ref type="bibr" target="#b20">[20,</ref><ref type="bibr" target="#b16">16]</ref>), on the other hand, use co-presence of devices to identify the devices to be paired. These schemes leverage the fact that co-present devices will perceive roughly the same ambient context via their on-board sensors -thus each device takes a momentary snapshot of its ambient context using a given sensor modality (e.g., acoustic or electromagnetic) and uses the resulting "context fingerprint" to authenticate key agreement. Relying on a one-shot fingerprint for zero-interaction pairing has some drawbacks in the scenarios we consider. First, to ensure security the context fingerprint must have sufficient entropy (e.g., 128 bits). This imposes strict requirements on the fingerprinting technique such as the need for tight time synchronization between devices (as in <ref type="bibr" target="#b16">[16]</ref>) or access to low-level information like raw WiFi packets that is typically not available to apps in commodity devices (as in <ref type="bibr" target="#b20">[20]</ref>). Second, momentary co-presence of two devices does not always imply that the devices belong to the same user.</p><p>Our goal and contributions. In this paper, we present a novel approach for zero-interaction pairing that is suitable for IoT and wearable device scenarios. Unlike previous schemes, we identify correct devices based on the notion of sustained co-presence: our scheme uses sensed context fingerprints to evolve the pairing key periodically in a way that is only possible for devices co-present over extended periods of time. This is based on the intuition that in the long run, a user's personal devices are much more likely to be co-present with one another as compared to other users' devices. We use readily available context sensor modalities like audio and luminosity. An initial (potentially insecure) pairing is gradually strengthened using a key evolution approach that stepby-step establishes and increases the authenticity of correct peers, while making it increasingly difficult for wrong devices to maintain an authenticated pairing with the user's devices.</p><p>The context fingerprints we use are based on observable changes in the average luminosity and noise levels of the devices' ambient context over a longer time period. Use of longer time periods implies that our fingerprinting scheme does not require tight time synchronization and is thus robust. Fingerprints are used to authenticate each key evolution step.</p><p>Our main contributions are the following:</p><p>• We describe a robust context-based shared entropy extraction scheme for audio and luminosity modalities and demonstrate its effectiveness using real context data (Section 4).</p><p>• We incorporate the entropy extraction into a novel key evolution approach for automatically pairing personal devices of the user (Section 3) and reason about its security (Section 5). The key evolution ensures that pairing succeeds between devices that exhibit sustained copresence, which is typical for personal devices in IoT and wearable device scenarios.</p><p>The rest of this paper is structured as follows: In Sect. 2, we describe the context-based pairing scenario and problem setting. In Sect. 3 we describe the key evolution approach, which utilizes a fingerprinting scheme presented and evaluated in Sect. 4. An analysis of the security properties of our approach is presented in Sect. 5. We conclude the paper with a presentation of related work in Sect. 6 and a conclusion in Sect. 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PROBLEM DESCRIPTION</head><p>We focus on the problem of pairing between two devices. By "pairing", we mean the process of setting up a shared security association (e.g., a shared symmetric key) between the devices. Pairing must be established only between the devices that the user intends to pair, i.e., devices belonging to the same user. We refer to these as the correct peers. Conversely devices owned by other users are wrong peers. The security goal of pairing is to ensure that only a pairing between correct peers is accepted as genuine. Our approach is to develop a context-based pairing scheme to this end. "Context" means here the ambient environment of a device. A device can characterize its context by using context data that can be sensed using on-board sensor modalities. In this paper, we use ambient audio (sensed by microphones) and luminosity (sensed by lux sensors) for characterizing a context.</p><p>We consider the pairing problem in two particular scenarios: a static setting primarily concerning IoT devices installed at the user's home, and, a mobile setting for wearable personal devices.</p><p>IoT Scenario. The IoT scenario is shown in Fig. <ref type="figure">1</ref>. A user has installed some IoT devices d1 and d2. Her neighbor also has an IoT device A in his apartment. IoT devices are typically equipped with WiFi or Bluetooth connectivity and hence may be placed within each other's communication range. We can assume that all devices are able to communicate with one another and are equipped with context sensors to sense contextual parameters. Over time, the devices d1 and d2 in the user's home should establish a secure pairing between each other without user interaction, while making sure that a trusted pairing is not erroneously established with device A. Wearable Scenario. The second scenario is concerned with the secure pairing of personal wearable devices, as depicted in Fig. <ref type="figure" target="#fig_3">2</ref>. The user has a smartphone d1 and buys a smart watch d2, turns it on and starts using it. The newly activated smart watch d2 actively searches for smartphones nearby and establishes an initial pairing with all such devices that it can find nearby. Similarly d1 will accept any initial pairing from any wearable device that contacts it.</p><p>In order to establish the authenticity of such initial pairings, the two devices then attempt to evolve their pairing key using a key evolution protocol during a gestation period. If at the end of the gestation period the two devices have sufficient confidence in the authenticity of each other belonging to the same domain, i.e., being owned by the same user, they accept the pairing key as genuine. Otherwise, they discard the pairing the key. If the wearable device d2 accepts a key, it stops making new key pairing requests, since it is already associated with the correct user's smartphone. Also in this scenario, we need to make sure that the pairing key of a device A not belonging to the user is not erroneously accepted as genuine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Threat Model and Assumptions</head><p>The threat we are concerned with is that an adversary device A succeeds in making a legitimate device d1 accept a pairing with A as genuine.</p><p>IoT Scenario. In the IoT scenario, the adversary A is an IoT device in the neighbor's apartment. This device can be benign, just trying to pair with other devices it can discover in its proximity, or, malicious, if infected with malware, aggressively trying to pair with and infiltrate any IoT networks it can discover. The wrong peer A is permanently near device d1 and can communicate with it over a wireless link, but it is not able to monitor d1's ambient context, since it is separated from it by a solid wall.</p><p>If the neighboring apartment where the wrong device A is located has large windows facing the same direction as the user's apartment, A may have visibility to any changes in the outside luminosity affecting the lighting conditions in the user's apartment, but it is not able to directly observe the lighting conditions in the ambient context of d1. Specifically, A is not capable of mounting targeted attacks, i.e., attacks that are executed by directly monitoring the target apartment where d1 is located, e.g., from another apartment over the street. Since A is assumed to be a regular IoT device, it neither has the directional high-fidelity sensors required for monitoring a specific target over large distances nor the functional logic for mounting such attacks.</p><p>Wearable Scenario. In the wearable device scenario, the adversary A is either a malicious attacker trying to play a man-in-the-middle attack on the user and his wearable device, in order to obtain sensitive information exchanged between them, or it could be just someone else's device searching for its own peer device. We assume that the wrong peer A is from time to time present in the same context as d1, e.g., while d1 is visiting a place where also A is located (cf. <ref type="bibr">Fig 2)</ref> and hence A can observe the same contextual parameters as d1. However, A is not able to follow the user constantly. The amount of time A is able to monitor d1's context is therefore limited and significantly smaller than the time that d1 and d2 spend co-located in the same contexts. We follow a standard Dolev-Yao adversary model <ref type="bibr" target="#b4">[4]</ref> and assume that A has full control over all communication channels.</p><p>In both scenarios we assume that the user's own devices d1 and d2 consistently spend most of the time in the same contexts. In the IoT scenario, the context is spatially static, e.g., the user's home, since typically IoT devices are household appliances (smart TVs, smart thermostats, etc.) that are relatively static objects. Wearable devices like a smart watch, on the other hand, are continuously carried by the user and are therefore sharing the same, although changing context during the day as the user moves around.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Objectives</head><p>Our main objectives are as follows. Authenticated pairing. User devices (IoT devices and wearables) securely establish authenticated pairings with the correct peer devices, i.e., a user's device d1 accepts a pairing with d2 after a gestation period if, and only if, d1 and d2 are owned by the same user and thus are co-present for longer periods of time. Authenticated pairings are not established with wrong peers A, including attacker devices playing manin-the middle and impersonation attacks against the correct peers. Zero-interaction. The pairing must happen without user interaction, i.e., based solely on information that the involved devices can communicate and sense from their ambient context without human involvement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Solution Approach</head><p>Previous approaches for context-based pairing presented in literature use context information to establish a one-shot secure pairing <ref type="bibr" target="#b20">[20,</ref><ref type="bibr" target="#b16">16]</ref>. The security of these approaches depends on the assumption that the adversary is not present sufficiently close in the context of the user devices d1 and d2 when the pairing is performed and thus unable to observe the same contextual parameters as d1 and d2. These approaches rely, however, on the user to visually determine that no adversary A is present in the proximity of the devices d1 and d2 before the pairing is initiated. In a zero-interaction setting, this is not possible. For example, in a situation in which wearable devices are taken into use at a moment when several parties are present in the same room, an adversary A might very well be present.</p><p>Therefore, we follow a more in-depth defense strategy by utilizing a key evolution approach described in Sect. 3. In our approach, the target device d1 is initially entitled to establish pairings with all other devices in proximity, including correct and wrong peers. These pairings are, however, assigned an authenticity rating that is initially zero, meaning that the authenticity of the counterpart has not been verified. Key evolution is then used to gradually increment the authenticity rating of correct peers, so that over time only pairings with correct peers will be accepted as genuine.</p><p>In earlier approaches, context fingerprints used for oneshot pairing must have sufficient entropy (e.g. 128 bits). Obtaining a sufficient amount of entropy from a short context snapshot requires therefore tight time synchronization between the devices d1 and d2 to be paired <ref type="bibr" target="#b16">[16]</ref>. On commodity devices achieving sufficiently accurate synchronization might not be technically feasible. To overcome this limitation, we utilize a more robust fingerprinting approach that operates on longitudinal context measurements and is thus not as sensitive to time synchronization issues. The fingerprinting scheme used is described in Sect. 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">CONTEXT-BASED KEY EVOLUTION</head><p>Our key evolution approach is based on the assumption that two devices that have established an initial pairing can utilize the common information about their ambient context observed over time to iteratively evolve their pairing key. With each successful iteration, the belief in the authenticity of the counterpart is increased, since the protocol is designed in a way that makes it hard for devices not continuously sharing the same context to execute it successfully.</p><p>In the approach, both peers extract context fingerprints from their surroundings by continuously monitoring their context. If the peers spend prolonged periods of time in the same context, observing the same contextual information, the fingerprints they extract will be similar as well. We will define the extraction of fingerprints in section 4.</p><p>The key evolution approach utilizes three conceptual components: key evolution, key confirmation, and, key acceptance. Key evolution and key confirmation are executed iteratively between the peer devices in what we call a key evolution step: evolving the pairing key and verifying the success or failure of each key evolution. After a sufficient number of key evolution steps have been performed, key acceptance is used to ultimately determine, whether a pairing counterpart is a correct or wrong peer.</p><p>To perform a key evolution based on context fingerprints, we require a fuzzy commitment scheme that is ideal w.r.t. the hiding property. Such a scheme is able to transform a secret value s into a commitment / opening value pair (δ, λ), such that δ does not reveal any information about the secret s, and all pairs (δ, λ) will reveal s if the Hamming distance Ham(λ, λ) ≤ t, but it is not feasible to find an opening value λ , for which Ham(λ, λ ) &gt; t, such that (δ, λ ) would reveal the secret s. In this scheme, the value t is a parameter and denotes the maximum Hamming distance that the scheme allows for an opening value λ to have from λ, so that the secret s is revealed. In other words, if party d1 commits to a secret s to obtain a commitment / opening pair (δ, λ) ← Commit(s), and a subsequent opening of the commitment by party d2 yields ŝ ← Open(δ, λ), then s = ŝ iff Ham(λ, λ) ≤ t.</p><p>We could utilize any key agreement scheme that provides such a fuzzy commitment (e.g., <ref type="bibr" target="#b3">[3]</ref>), but for the purpose of this paper, we adopt and adapt the approach of Schürmann and Sigg in <ref type="bibr" target="#b16">[16]</ref>. It is based on the fuzzy vault construction of Juels and Sudan <ref type="bibr" target="#b9">[9]</ref>. It utilizes the error-correcting properties of Reed-Solomon codes <ref type="bibr" target="#b15">[15]</ref> to enable two peers to agree on a common key, if the context fingerprints that peers extracted from information in their ambient context differ in at most t bits. The value of t depends on the parameterization of the Reed-Solomon code and can thus be selected freely based on the number of bit errors to be expected between the fingerprints of legitimate peers. The details of the key evolution approach are shown in Fig. <ref type="figure" target="#fig_2">3</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Key Evolution</head><p>Initially, two devices d1 and d2 look for other devices to pair with. When they encounter each other for the first time, they establish an initial pairing key K 0 d 1 ,d 2 (e.g., by using a Diffie-Hellman key exchange). This initial key agreement is unauthenticated, i.e., neither device knows, whether the pairing counterpart belongs to the same owner or not. Our goal is to use subsequent key evolution to determine whether the pairing counterpart belongs to the same user or not.</p><p>Device d1 initiates the protocol by sending a key evolution request EVO_REQ to device d2. The request contains timestamps t1 and t2, specifying the starting and ending times on which to synchronize the generation of the context fingerprints. From the context observations C d 1 (t1, t2) and C d 2 (t1, t2) falling between the specified timestamps, both peers extract context fingerprints After generating the fingerprints, device d1 selects a random key evolution diversifier Kr ∈ F m 2 k , and uses the fuzzy commitment scheme to transform it into a commitment / opening value pair (δ, λ) ← Commit(Kr). The opening value λ ∈ F n 2 k is calculated as the codeword for Kr using Reed-Solomon (RS) encoding: λ ← RS(2 k , m, n, Kr). The commitment value δ is then calculated as the difference of the fingerprint FC d 1 and the codeword λ: δ = FC d 1 λ, where denotes subtraction in the field F n 2 k . Device d1 then transmits the commitment value δ to device d2, which in turn obtains an opening value λ and retrieves the key evolution diversifier by opening the commitment of d1 : Kr ← Open(δ, λ). It does so by decoding the opening value using the Reed-Solomon decoding function. Given that the fuzzy commitment scheme fulfils the hiding property requirement, Kr = Kr only if Ham(λ, λ) ≤ t. Since λ is calculated as λ = FC d 2 δ, and δ as δ = FC d 1 λ, it means that the fingerprints FC d 1 and FC d 2 can differ in at most t bits, which in this case is the maximum number of bits the RS coding can correct. Otherwise, d2 will not be able to open the commitment correctly, and the retrieved key derivation keys will not be identical, i.e., Kr = Kr .</p><formula xml:id="formula_0">FC d 1 = φ(C d 1 (t1, t2)) and FC d 2 = φ(C d 2 (t1, t2)),</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Key Confirmation</head><p>To determine whether the key evolution was successful, both devices calculate candidate pairing keys by using a key derivation function KDF applied on the old pairing key</p><formula xml:id="formula_1">K i d 1 ,d 2 Device d1 K i d 1 ,d 2 Device d2 EVO_REQ (t1, t2) FC d 1 = φ(C d 1 (t1, t2)) FC d 2 = φ(C d 2 (t1, t2)) random Kr ∈ F m 2 k encode: λ ∈ F n 2 k ← RS(2 k , m, n, Kr) δ = FC d 1 λ λ = FC d 2 δ δ decode: Kr ← RS(2 k , m, n, λ) K + = KDF(K i d 1 ,d 2 , Kr ) K + = KDF(K i d 1 ,d 2 , Kr)</formula><p>Symmetric-key authentication protocol and the key evolution diversifier, i.e., Kr or Kr , respectively. The peers then execute a symmetric-key authentication protocol with the candidate keys to determine, whether they are identical. The used protocol needs to be tolerant to offline guessing attacks. For example, a passwordauthenticated key-exchange scheme <ref type="bibr" target="#b22">[22]</ref> can be used (although they are intended for long-lived short shared secrets).</p><formula xml:id="formula_2">K i+1 d 1 ,d 2 = K + K i+1 d 1 ,d 2 = K + if result == success</formula><p>If the protocol succeeds, the key evolution step is considered successfully completed and the peers start using the candidate keys as their new pairing keys, i.e., device d1 sets</p><formula xml:id="formula_3">K i+1 d 1 ,d 2 = K + and device d2 sets K i+1 d 1 ,d 2 = K + .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Key Acceptance</head><p>To ultimately determine whether a pairing counterpart is a correct or a wrong peer, we apply the following strategy: assuming that a wrong peer A is spatially or temporally limited in its ability to continuously monitor the context of a target device d1, it is likely that A will fail in key evolution much more often than a correct peer d2, who is predominantly co-present in d1's context. By keeping track of the number of successful key evolutions each pairing counterpart is able to follow, it becomes therefore possible to distinguish the correct peer d2 from wrong peer A.</p><p>We need to take into account that wrong peers may appear at any point in the pairing and key evolution process. A wrong peer A may initiate the pairing first and impersonate a correct peer d2 which will come into communication range only later, or, A may appear after an initial pairing with the correct peer d2 has already been established, and may claim to be d2. Since we assume that there is no prior security association between any of the devices, we can't distinguish with certainty whether the former or the latter device requesting the pairing is the correct personal device d2. Therefore, we need to initially accept all pairing requests for a particular device identity and use the key evolution protocol to verify, which device actually is the authentic one.</p><p>To be able to distinguish different devices from each other, we assign a key chain identifier ID X d = Hash(K 0 d ) for each device d . The chain identifier is a hash value of the key K 0 d derived during the initial unauthenticated pairing with d , and X is the identity that d claims to represent. We denote the set of all devices d claiming identity X with DX . We evolve the pairing key K i d independently for each device's key chain and keep track of the number of successful key evolution steps associated with each key chain identifier ID X d as well as the total number of successful key evolution steps for the claimed identity X . The ratio of successful key evolution steps for each key chain identifier ID X d to the total number of successful key evolution steps for the related identity X becomes therefore a measure for the authenticity of the device associated with that key chain identifier.</p><p>Definition 1 (Authenticity rating α). Let γ(ID X d ) denote the number of successful key evolution steps that a device has performed with a peer device d with key chain identifier ID X d under the claimed identity X . The authenticity rating α(ID X d ) is the ratio of successful key evolution steps for the key chain ID X d to the overall number of successful key evolution steps for identity X :</p><formula xml:id="formula_4">α(ID X d ) = γ(ID X d ) d i ∈D X γ(ID X d i )</formula><p>.</p><p>(</p><formula xml:id="formula_5">)<label>1</label></formula><p>The key evolution is performed during predetermined key evolution cycles. During each key evolution cycle, device d1 will try to perform key evolution for an identity X with each device d ∈ DX claiming to represent that identity. If these attempts succeed, the count of successful key evolution steps for identity X is incremented. Our key evolution approach is designed in a way that only devices d that are in the same context as the target device d1 for the majority of the time during a key evolution cycle will succeed in the key evolution step. Thus, since correct peers are significantly more often in the same context than wrong peers, the value γ(ID X d ) for any correct peers d will, over time, grow larger than for any wrong peers that will inevitably 'miss' such key evolution steps during which the wrong peers are not in the same context as d1, or are unable to observe d1's context.</p><p>The context-based pairing approach can therefore be summarized as follows:</p><p>1. Establish pairing key with device d claiming to be X .</p><p>Assign initial authenticity rating α(ID X d ) = 0 to it.</p><p>2. Monitor the context and regularly evolve pairing keys with other devices based on derived context information.</p><p>3. After the number of successful key evolution steps for identity X reaches a specified threshold value α thr , check if the acceptance criteria listed below hold. If either criterion does not hold, the key evolution process is continued, and acceptance criteria re-evaluated after each successful key evolution step for identity X .</p><p>The first acceptance criterion requires that in order to be accepted as genuine, a peer device d 's pairing key under an identity X needs to have a sufficient authenticity rating α(ID X d ), and this rating has to be higher than any other peer's rating for X by a specified margin αmarg in order to make the determination of the correct peer unambiguous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Criterion 1 (Authenticity dominance).</head><p>Let αmin , αmarg ∈ [0, 1] denote a minimal authenticity threshold and an authenticity margin, respectively. If there is a device d ∈ DX claiming to represent identity X , such that Threshold αmin determines the minimal authenticity rating required for a peer to be considered genuine. Margin factor αmarg ∈ [0, 1] determines, how much the authenticity rating of a correct peer has to dominate over the authenticity ratings of all other peers in order for it to be considered genuine.</p><formula xml:id="formula_6">α(ID X d ) &gt; αmin ∧ ∀di ∈ DX , di = d : α(ID X d ) • αmarg &gt; α(ID X d i ),</formula><p>The second criterion requires that the key evolution with a device needs to be attempted at least ρmin times, before the authenticity rating can be regarded as representative. In addition, the number of key evolution cycles during which the key evolution is attempted needs to cover at least a fraction of ρcov of the total key evolution cycles after the initial pairing. Otherwise, an adversary A in the wearable scenario could just selectively attempt key evolution only when d1 is in its context and thereby slowly accumulate a high authenticity rating even though it only occasionally shares the same context with d1. Once a device d 's pairing is accepted as genuine, there are two options: other key chains may be removed and pairing stopped (e.g., when a smartwatch has found its host smartphone), or, the accepting device may continue to evolve pairing keys for other devices (e.g., in the case of smart TV that can accommodate multiple remote controls).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">ROBUST CONTEXT FINGERPRINTS</head><p>We apply our context fingerprinting method on two different contextual modalities: ambient noise and light. As mentioned before, the fingerprinting scheme is inspired by Schürmann and Sigg <ref type="bibr" target="#b16">[16]</ref>, but it is different in several ways: The scheme in <ref type="bibr" target="#b16">[16]</ref> requires tight time synchronization, whereas our scheme does not. Their scheme is intended to extract enough entropy within a very short time to be used as a cryptographic key, whereas our fingerprints have a longitudinal orientation. Finally, our scheme is equally applicable to both audio and luminosity and the fingerprints represent more sustained changes in the contextual characteristics of the ambient context over several hours. Thereby, the fingerprints will also capture phenomena originating from the user's actions (such as switching on the lights, chatter, silence, etc.). These events are inherently random and therefore difficult to predict even for advanced attackers that may try to utilize profiled information about the target context in attempting to fabricate context fingerprints.</p><p>Using a longitudinal approach in fingerprint generation and key evolution has also the advantage that the scheme is more robust against attackers that are occasionally colocated with the paired devices. This is different to earlier approaches, where the security of the pairing is dependent on the fact that the attacker is not sharing the context with the paired devices at the time of pairing <ref type="bibr" target="#b20">[20,</ref><ref type="bibr" target="#b16">16]</ref>. Our longitudinal approach, on the other hand, can gracefully handle situations in which the attacker is occasionally in the same context with the paired devices, as we will show in Sect. 5.</p><p>In our scheme, the devices are continuously monitoring their context by scanning context snapshots cw(t). Every f seconds, a snapshot of w seconds is recorded. Each snapshot consists of a sequence of measurements mi in a particular contextual modality like ambient luminosity or noise level, such that cw(t) = (mi, mi+1, . . . , mi+n), where the timestamp associated with an individual measurement mi is denoted with t(mi), and, t(mi+n) -t(mi) = w. Since the used snapshot length w is fixed and usually clear from the context, we omit it in the following and denote a context snapshot just with c(t) for better readability.</p><p>We average the measurements within each context snapshot c(t) and denote the snapshot's average value as</p><formula xml:id="formula_7">c(t) = m i ∈c(t) mi |{mi ∈ c(t)}| ,<label>(2)</label></formula><p>where | • | denotes set cardinality.</p><p>Based on a sequence of context snapshots C(t, t + nf ) = (c(t), c(t+f ), c(t+2f ), . . . , c(t+nf )), we calculate its context fingerprint as a sequence of bits, in which each bit denotes the change of the snapshot's average value in comparison with the previous snapshot's average. The fingerprint bit corresponding to a context snapshot is set to "1" if the relative change between the snapshot's average value and the previous snapshot's average value is larger than a specified relative threshold ∆ rel and if the difference between the values exceeds an absolute threshold value ∆ abs . Otherwise, the bit is "0". Definition 2. Let C(t, t + nf ) be a sequence of context snapshots, i.e., c(ti) ∈ C(t, t + nf ), t &lt; ti ≤ t + nf, n ∈ N + . We define the fingerprint bit b(ti) corresponding to each snapshot c(ti) as</p><formula xml:id="formula_8">b(ti) = 1, | c(t i ) c(t i -f ) -1| &gt; ∆ rel ∧ |c(ti) -c(ti -f )| &gt; ∆ abs 0, otherwise.<label>(3)</label></formula><p>Definition 3. We define the fingerprint φ(C(t, t + nf )) of a sequence of context snapshots C(t, t+nf ), n∈N + as</p><formula xml:id="formula_9">φ(C(t, t + nf )) = (b(t), b(t + f ), . . . , b(t + nf )). (4)</formula><p>The rationale for our notion of fingerprints is that two devices that share the same context for an extended period of time will also experience changes in context parameters in a similar way. For example, if the user switches on the lights in a room, the increase in luminosity in the room will be sensed by all devices located inside the room, whereas other devices not in the same room will not be able to sense it. Therefore, bits generated this way will be shared only with the co-located devices. The same applies to fingerprints based on audio. The alternating patterns between chatter, silence and possible other persistent ambient sounds will generate fingerprint bits in a way that is similar between devices in the same audio context (e.g., the same room). Devices outside the audio context will, however, not be able to sense these changes.</p><p>The same logic applies also to mobile personal devices like wearables, which are usually always carried together. Even though the context in which the devices are located may change as the user moves, the changes will be sensed in a similar way by both devices.</p><p>We will evaluate our fingerprint extraction scheme in both static and mobile scenarios in Sect. 4.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Implementation and Evaluation</head><p>To analyze the feasibility of our approach, we performed several experiments in different contexts investigating, how similar fingerprints extracted from ambient luminosity and noise levels are in real contextual settings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">System Set-Up</head><p>To simulate the capability of IoT and wearable devices to sense their ambient context and to use the context information for key evolution, we used Android OS smartphones (Samsung Galaxy Nexus, Nexus S and Galaxy S III devices) running dedicated context data collection software. The collection software on each device continuously measured the luminosity and noise levels in the device's context and routinely sent the collected data to a server for off-line data analysis. In these experiments we used a static placement of the test devices to simulate IoT device pairing scenarios, whereas for personal wearable pairing scenarios test persons carried the data collection devices with them.</p><p>In both settings, the orientation of the luminosity sensors of the devices impacts the magnitude of observed luminosity readings. However, since our method for deriving fingerprint bits from luminosity readings is not based on absolute luminosity values, but on relative changes in the ambient illumination, the exact placement and orientation of the devices plays only a minor role.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">IoT Scenario</head><p>In this scenario, we investigated whether IoT devices located in the same room can successfully establish similar enough fingerprints to be used for context-based key evolution. We tested the scenario in different set-ups and locations over several months, varying the placement of the devices with regard to each other and within the room. Table <ref type="table" target="#tab_1">1</ref> shows one example of the placement of devices in two settings at two different locations: office and home.</p><p>In the office setting, two devices simulating correct peers were placed on the wall of an office room, three meters apart from each other. Other smartphones simulating wrong peers were placed in nearby rooms, but without direct visibility to the room with the correct peers. In the home setting, the correct peers were placed in the living room of the test participant's house. A smartphone simulating a wrong peer in a neighboring apartment was placed in another room of the house, but on a different floor.</p><p>To eliminate effects that possible differences in the orientation of windows of the rooms could have on lighting conditions, we selected rooms that had relatively large windows facing the same direction, allowing outdoor light to illuminate all rooms used in the experiment in a similar way during daytime. In addition, to obtain a baseline measurement of the outdoor lighting conditions that affect the illumination of the room with the correct peers, we dedicated in each scenario one device for measuring the direct outdoor light falling into the room.</p><p>Results. We collected luminosity and audio measurements during the course of several weeks. We extracted contextbased fingerprints based on a time window of w = 120 seconds for each device and compared the average bit differences of the fingerprints of correct and wrong peers. In both settings, hardly any bits were generated during nighttime. We will show in Sect. 5 that fingerprints generated from nighttime data contain only very little entropy and can therefore not be used for fingerprint generation. Therefore, we concentrate our analysis in the office setting during business hours between 8 a.m. and 6 p.m. and in the home setting during active hours of a household between 6 a.m. and 10 p.m. The results are shown in Tab. 2.</p><p>In the office setting, the co-located devices clearly show the largest bit similarity in their respective fingerprints. For the luminosity data, the difference between the co-located devices d1 and d2 and the adversary device A2 in the adjacent office is relatively small, i.e., only 6.3%. This is so because the lighting conditions affecting the rooms are almost identical and the effect of sunlight dominates the overall lighting conditions during business hours<ref type="foot" target="#foot_0">1</ref> .</p><p>For audio, the differences are clearer. Adversary A2 in the adjacent office has only 71.7 % similarity compared to 91.8 % for the co-located devices d1 and d2. This is so, even though the doors of the rooms in question to a common hallway were mostly kept open, so that some parts of the acoustic environment could be shared by the devices in these rooms. However, adversary device A3 located in the coffee room was farther away, so that it was acoustically more clearly decoupled from the co-located devices. Therefore the similarity percentage of its fingerprints to the fingerprints of the co-located devices is significantly lower, i.e., 62.6 %.</p><p>In the home setting, the results were similar. Here, the similarity between co-located devices was on the average 82.9 % for luminosity and 87.5 % for audio. There was also a clear difference to the adversary devices, which could only achieve bit similarity values of 70.8 % for luminosity and 77.0 % for audio fingerprints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Wearable Device Scenario</head><p>In this scenario, we simulated the contextual environment that typical wearable devices are confronted with. We did this by equipping test users with smartphones, each playing the role of a wearable device. We considered two alternative settings: a 'smart watch' scenario, in which one device plays the role of a smart watch, and the other device is used like a regular smartphone. The other, 'cycling' scenario, simulates the use of wearable devices as fitness gadgets.</p><p>In the smart watch scenario, users were equipped with two smartphones which they carried with them continuously. One of the devices simulated a smart watch that is worn on the user's wrist. It was therefore placed in a translucent carrying pouch so that its light sensor was constantly exposed to the ambient light. The other device was used like a regular smartphone.</p><p>In the 'cycling' scenario, we used two smartphones to simulate wearable fitness gadgets, currently one of the most popular classes of wearable devices. In our scenario, we considered a cyclist, who is using a heart rate monitor to record his physical performance and a near-eye display device to visually follow the key characteristics of his workout, including the heart rate. The smartphone playing the role of a near-eye display device was attached on the side of the bicycle helmet of the cyclist, with the light sensor showing outwards. The other device played the role of the smart heart rate sensor. It was placed in a translucent carrying pouch on the chest of the cyclist, facing forward, which is also a typical placement for heart rate sensors. In the cycling scenario, ambient light and noise data were collected during the workouts of the cyclist.</p><p>Results. We collected traces from co-located devices carried by test persons in a number of mobile and static contexts: walking, in public transport, as well as stays in the home and office contexts. Since the mobility of the user introduces a significant amount of changes into the devices' contexts, the bit similarity of fingerprints from the co-located devices was relatively high, 92.6 % on average (minimum 87.3 %, maximum 96.7 %). This provides a good basis for successful key evolution between the co-located devices. In the wearable device scenario, however, also the presence of wrong peer devices in the context plays a role. We analyze the effect of such devices on the key evolution scheme in more detail in Section 5.1.</p><p>For the cycling scenario we collected 10 traces of context measurements captured along a back-and-forth journey on a fixed route of approximately 10 miles. The exercises were spread out over several weeks, encompassing varying road and weather conditions ranging from rainy, overcast to sunny days. Since the contextual environment changes in this scenario much faster than in the static scenario, we chose a shorter time window w = 5 sec and higher sampling rate f = 5 sec for luminosity-based fingerprint generation. Using this fingerprinting scheme, the fingerprints for the exercises contained 665 to 784 bits. For audio data, a slightly longer time window of w = 6 sec was used, giving us fingerprints of 501 to 550 bits. The bit similarity between the fingerprints of the co-located devices d1 and d2 was on the average 68.6 % for luminosity-based fingerprints (minimum 62.8 %, maximum 74.5 %) and 65.9 % for audio-based fingerprints (minimum 63.6 %, maximum 67.1 %).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">Context Replay Attacks</head><p>In addition to testing the bit similarities of co-located devices we also examined the effect of context replay attacks by analyzing whether an attacker, who knows the route that a user is going to use could record the context parameters along this route and use this recording to produce a context fingerprint that could fool a target device into believing that the attacker has been sharing the same context. We therefore used the set of fingerprints from the cycling scenario generated on different days on the same route and measured their bit similarity. We did this in order to find out what an attacker in the optimal (worst) case could achieve. We iterated over all exercise fingerprints, using one fingerprint at a time as the target device d1's fingerprint and the remaining fingerprints as fingerprints of the adversary A. Since the fingerprints were recorded at different times, it was not clear how to optimally align them. We therefore calculated the bit difference for each target-attacker fingerprint pair for all possible overlapping alignments of the fingerprints and used the minimal bit difference to choose the optimal alignment. We then averaged the bit similarity values over the adversarial fingerprints with optimal alignments.</p><p>The fingerprint similarity of simulated replay attacks with the target devices was 59.5 % (minimum 55.9 %, maximum 62.3 %) for luminosity-based fingerprints and 56.4 % (minimum 55.0 %, maximum 56.8 %) for audio-based fingerprints. The margin between the actually co-located device pair d1 and d2 to the replayed adversarial fingerprints was on the average 52.5 bits (minimum 4 bits, maximum 104 bits) for luminosity and 42.8 bits (minimum 27 bits, maximum 51 bits) for audio in favor of the co-located pair.</p><p>The clear margins between the bit similarities of co-located and attacker fingerprints suggest that it's in most cases possible to define a parameter value t for the fuzzy commitment scheme so that co-located peers will be able to successfully perform key evolution steps, while blocking most attackers from doing so. The analysis here also involves two rather optimistic assumptions in favor of the attacker, namely that the attacker is able to record the trace in exactly the same way as the targeted user and that the attacker is able to guess the optimal alignment of his fingerprint with the target user's fingerprint. In practice, it is unlikely that an attacker would be able to always guess the optimal alignment, or record context traces with the same rhythm and speed as the targeted users. Hence in practice the margins in favor of the correct peers will be much larger than the ones presented above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SECURITY ANALYSIS</head><p>In our analysis we assume that the legitimate personal devices of the user have not been compromised and execute context sensing, key agreement, key evolution and authentication protocols as specified.</p><p>Let us consider an adversary A impersonating X , having a key chain identity ID X A . The only way for A to get its pairing with a target device d1 accepted as genuine is to achieve a high enough authenticity rating α(ID X A ). To do this, it needs to successfully participate in the key evolution process. A can do so in two cases: </p><formula xml:id="formula_10">1. A is</formula><formula xml:id="formula_11">, F C A ) ≤ t.</formula><p>We will first analyze the effect of A being in the same context with d1 on his authenticity rating, and then analyze the success probability of the attacker fabricating context fingerprints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Attacker in Same Context as Target</head><p>Let us denote with θ the probability that A is able to extract a fingerprint FC A having Ham(FC d 1 , FC A ) ≤ t and with β the probability that a co-located device d2 extracts a fingerprint</p><formula xml:id="formula_12">FC d 2 having Ham(FC d 1 , FC d 2 ) ≤ t.</formula><p>If A is present in the same context as d1, A can extract fingerprints FC A that have the same probability to have a bit difference of t or lower than the co-located device d2. Therefore, θ = β. However, to simplify the analysis, let us assume a perfect attacker that always succeeds in key evolution when it is in the context, i.e., θ = 1.</p><p>We denote with n the number of key evolution steps that a correct peer d2 will attempt during a specific time period and with m the number of key evolution steps that the wrong peer A will attempt during the same time. To maximally increase its authenticity rating, A will attempt to do key evolution steps every time it is co-located with the target device in the same context. When A is not in the same context, the probability to successfully evolve the key is less than β. Therefore A will not participate in key evolution. Since d2 is a benign peer, it will regularly attempt to evolve its pairing key with d1 each time it is co-located with it.</p><p>According to Def. 1 the authenticity rating α(ID X d 2 ) of the correct peer d2 will be higher, if it has performed more successful key evolution steps than the attacker A, i.e., if <ref type="figure"></ref>and<ref type="figure">, if β</ref> • n &gt; m holds, then attacker A will never be able to obtain an authenticity rating that is higher than the rating of the correct peer. However, since we assume that n &gt;&gt; m, and, in particular β • n &gt; m, it is clear that the attacker will not succeed in getting his pairing accepted as genuine in our scheme.</p><formula xml:id="formula_13">γ(ID X d 2 ) &gt; γ(ID X A ). Since γ(ID X d 2 ) = β • n and γ(ID X A ) = θ • m = m,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Attacker not in Same Context as Target</head><p>The fuzzy commitment scheme used in the key evolution protocol provides the hiding property as mentioned in Sect. 3. A will not be able to reveal the correct key derivation key Kr and thus participate successfully in the key evolution protocol if it can't find a context fingerprint F C A that has a Hamming distance of at most t bits to the fingerprint FC d 1 of the targeted device d1. We focus our analysis therefore on examining whether an attacker is able to fabricate fingerprints F C A satisfying this criterion.</p><p>When the attacker A has no access to actual context measurements based on which FC d 1 is extracted, A has the following options for fabricating the fingerprint F C d 1 : a random guess, a profiling-based guess, or, the use of partial information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Random Guess.</head><p>In a random guess, the probability to guess one bit correctly is 0.5. Consequently, for a fingerprint of length k, the likelihood for a successful guess is therefore 2 -k . The success probability is negligibly small for typical fingerprints of tens or hundreds of bits. For example, using a fingerprinting window of w = 120 sec and fingerprinting periods of two hours, one already gets fingerprints of 60 bits, which would be excessively difficult to guess with random guesses.</p><p>Profiling-Based Guesses.</p><p>An obvious improvement to this attack would be to use profiled information about the distribution of bits to improve A's chances to fabricate valid fingerprints F C A . Depending on the used fingerprinting parameters, the type of context in question as well as the time of the day, the distribution of fingerprint bits in the fingerprint changes. For example, during nighttime, when it typically is silent and dark, and thus no significant changes in the context parameters take place, an overwhelming majority of bits in d1's fingerprint FC d 1 will be "0" bits, with only a few "1" bits (if any) in-between. Fig. <ref type="figure" target="#fig_4">4</ref> shows for the office context and the audio modality examined in our evaluation experiments the distribution of "1" vs. "0" bits changing according to the time of day. If A can obtain such profile information about a context where d1 is going to be, A can utilize the profiled information in fabricating fingerprints F C A that are more likely to have a lower Hamming distance Ham(FC d 1 , FC A ) to the fingerprint FC d 1 of device d1 extracted in that context.</p><p>The strength of a fingerprint against profiling-based guessing attacks can be analyzed by looking at the surprisal associated with individual bits b ∈ FC d 1 using a frequentist interpretation of probability. We do this by calculating the occurrence probability of a particular bit b in the fingerprint during a specific time of the day. Thus, the probability of a particular bit (i.e., "1" or "0") is equal to the fraction of that bit's occurrences in the context fingerprints during that time of the day. Given the occurrence probability of a particular bit, we define the surprisal associated with individual bits as follows. For example, we can see based on Fig. <ref type="figure" target="#fig_4">4</ref> that context measurements made during the night are not suitable for generating hard-to-guess context fingerprints. This is because, e.g., during the time window of 2 a.m. to 4 a.m. on the average only 1 % of the extracted fingerprint bits are "1" bits. Each of these bits has a surprisal value of 6.3 bits per fingerprint bit, but the remaining "0" bits only have a surprisal of 0.02 bits per fingerprint bit. This means that, e.g., a 60-bit fingerprint extracted during this time frame would have only 5.8 bits of total surprisal on the average. In other words, the attacker would have a 2 -5.8 ≈ 1.8% chance of guessing the exactly correct context fingerprint by utilizing profiling information.</p><p>However, since we are using a fuzzy commitment scheme, the attacker A does not even have to guess the exact fingerprint. Any fingerprint F C A that is within Hamming distance t of the fingerprint FC d 1 of target device d1, will enable the attacker A to open the commitment and retrieve the correct key derivation key Kr.</p><p>From the evaluation results (cf. Tab. 2) we can see that in the office environment, and for the audio modality, the context fingerprints of co-located devices will deviate on the average in ca. 10 % of the bits. In order to let correct peers perform key evolution successfully, we need to tune the parameter t of the fuzzy commitment scheme so that it allows fingerprints deviating in 10 % of the bits to still open the fuzzy commitments. Coming back to our example of Fig. <ref type="figure" target="#fig_4">4</ref>, this would mean that for fingerprints of 60 bits we would need to set t = 6 bits. A could use this to his advantage and fabricate during nighttime context fingerprints F C A = {0} 60 containing nothing but "0" bits. The fuzzy commitment scheme would correct the errors this fingerprint has with regard to d1's fingerprint FC d 1 , since it on the average contains less than t = 6 "1" bits during the night. The attacker A could thus successfully evolve the key nearly every time just by targeting fingerprints generated from nighttime context data.</p><p>To thwart such attacks against fingerprints with very low surprisal values, we need to add an additional requirement: only fingerprints FC d having sufficient total surprisal may be taken into account when evaluating authenticity ratings.</p><p>Requirement 1 (Surprisal threshold σ thr ). When d1 calculates the number of successful key evolution steps with another device d , only such evolution steps may be taken into account that have been based on fingerprints FC d 1 having a surprisal value σ(FC d 1 ) &gt; t + σmarg .</p><p>Here σmarg denotes a surprisal margin required in addition to the bits that the fuzzy commitment scheme will correct. In effect, σmarg defines, how hard it is for an attacker to guess a fingerprint F C A that is required for successful key evolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Use of Partial Information.</head><p>In addition to profiling-based guesses, the attacker A may be in the position to utilize partial information about the context fingerprint FC d 1 of the target device d1. Such partial information may be available to the attacker based on the fact that the contextual separation between the attacker's context and the target context, where d1 is located, is not complete. In the case of the luminosity, this may be caused by the fact that outdoor light is influencing the lighting con-  ditions in both the target device d1's context, as well as the context of the attacker A. In the case of audio, partial information may be because of acoustic events that are heard in both contexts.</p><p>The existence of such partial information has the effect that the fingerprints FC d 1 and FC A share common bits attributable to this partial information. The effect of the partial information is significant. If one looks at the bit similarities of adversarial devices to the co-located ones, we can see that the attacker devices share ca. 65 -85 % of common bits, depending on the placement of the attacker devices.</p><p>The partial information plays therefore in the attacker's favor. If A can assume that his fingerprint FC A contains partial information about the target device d1's fingerprint FC d 1 , A can use its own fingerprint FC A as a basis for fabricating a fake fingerprint F C A . If we denote the bit difference of A's fingerprint FC A and the target fingerprint FC d 1 with t , then A needs to guess only ∆t = t -t bit modifications to FC A correctly to fabricate a fake fingerprint F C A having Ham(FC d 1 , F C A ) ≤ t, and thus allowing A to participate successfully in the key evolution.</p><p>Since the A does not know which of the bits in FC A differ from d1's fingerprint FC d 1 , A needs to guess a set of at least ∆t bit positions to correct in FC A in order to obtain a fingerprint F C A having Ham(FC d 1 , F C A ) ≤ t. This means he needs to select ∆t bits from the total set of t bits differing with FC d 1 and flip them. A can select these with a probability of</p><formula xml:id="formula_14">P (∆t successful corrections) = t ∆t |F C | ∆t ,<label>(5)</label></formula><p>where |FC | denotes the bit length of the used fingerprints.</p><p>Consider as an example 360-bit fingerprints corresponding to, e.g., 6 hours of 1-minute observations. Assume that A has a fingerprint FC A that has a bit difference of 15 %, i.e., t = 54 bits. Assume also that the fuzzy commitment scheme corrects up to 10 % of bit differences, i.e., t = 36 bits. How difficult is it for A to guess a fingerprint F C d 1 with Ham(FC d 1 , F C A ) ≤ t = 36? To do this, the attacker would need to correct ∆t = 18 bits. We can calculate the success probability for A as ( 54 18 ) ( 360 18 )</p><p>≈ 9.27 × 10 -17 . This is equivalent to ca. 53 bits of entropy and demonstrates that guessing correct fingerprints will be excessively difficult for the attacker, if the used fingerprints are long enough. Note that the length of the used fingerprints can be freely chosen depending on the security requirements of a specific use case.</p><p>The only limiting factor is the time required to acquire the context measurements for generating the fingerprints. Some of the changes in d1's ambient context, especially in the ambient luminosity, can originate from environmental changes that can also be observable by the attacker A in a close-by room (e.g., if direct sunlight is suddenly obscured by a cloud). A could utilize this information to give more confidence to bits b in its fingerprint FC A that A knows to originate from such environmental events. Thus, he could limit the search space of bit positions to be flipped to fabricate F C A , thus decreasing the effective length |FC | of the fingerprint in Eq. 5 and thereby improving his chances for success. However, in our attacker model, A is an off-the-shelf IoT device, and does in general not have the technology to interpret the causes behind changes in sensor readings in an automated way. Therefore it wouldn't be straightforward for A to distinguish which changes in the sensor readings are caused by such changes in the environment that are observable also in d1's context and which are not. On the other hand, should such technology become available in the future, it could not only be used by A to improve its guesses, but also by d1 to defend against guessing. While generating its fingerprint, d1 could keep track of the number of fingerprint bits b ∈ FC d 1 that were influenced by changes in the environment outside of its proximate context. The target device d1 could then disregard such key evolution steps, for which the number of influenced fingerprint bits is too high.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">RELATED WORK</head><p>There are various approaches proposed to establish a secure pairing between devices. These approaches can be broadly divided into two main categories: utilizing key predistribution mainly addressing nodes in digital sensor networks (DSN), and utilizing context information for key establishment or co-presence verification.</p><p>Key predistribution-based approaches. A scheme for key distribution in DSNs based on predistributing keys to nodes was presented by Eschenauer and Gligor <ref type="bibr" target="#b6">[6]</ref>. Their scheme ensured that when deployed, each sensor node shares a key with a neighboring node. Chan et al. <ref type="bibr" target="#b2">[2]</ref> extend this basic scheme and design three enhanced key pre-distribution schemes: the q-composite scheme, multipath reinforcement scheme, and, random pairwise key predistribution scheme. Liu et al. <ref type="bibr" target="#b10">[10]</ref> propose key predistribution schemes based on preassignment of polynomial shares to sensor network nodes: a random subset assignment scheme and a hypercube-based key predistribution scheme.</p><p>Traynor et al. <ref type="bibr" target="#b18">[18]</ref> extend the key predistribution schemes by removing the assumption of homogeneous sensor nodes and key predistribution by introducing unbalanced probabilistic key distribution. They also extend their approach to hybrid settings in which key distribution centers (KDC) may be available.</p><p>However, all of the above schemes are mainly targeted at DSNs deployed in a geographically limited area. Hence they are as such not applicable nor scalable in practice to our setting, which involves arbitrary subsets of devices coming from a pool of potentially millions of IoT and wearable devices deployed anywhere on the planet. Also, in contrast to DSNs that typically are deployed by a single or a few organizations sharing trust associations, IoT and wearable devices are expected to come from hundreds if not thousands of different manufacturers. It is highly unlikely that all potential IoT and wearable device vendors would share mutual security associations necessary for pre-keying of devices. These factors make any solutions based on predistributing keys between devices infeasible to deploy in practice.</p><p>Therefore, our approach presented in this paper does not utilize key predistribution to devices, but builds on utilizing ambient context information for evolving a pairing key between devices consistently sharing the same context.</p><p>Context information-based approaches. Varshavsky et al. <ref type="bibr" target="#b20">[20]</ref> proposed to use the fluctuations in the received signal strength of WiFi broadcast packets for verifying the immediate proximity of the to-be-paired parties. This approach is, however not suitable for IoT scenarios: it is unlikely to work in situations in which peers are located farther away from each other than one meter, due to the local nature of the fluctuations in WiFi signals. The authors also acknowledge that it does not protect against man-in-the middle attacks that are mounted by an attacker immediately behind a wall to the user's location, since WiFi signals are unaffected by some wall materials.</p><p>Narayanan et al. <ref type="bibr" target="#b11">[11]</ref> propose a similar approach, in which WiFi broadcast packets are monitored to determine location tags that peers can compare to determine whether they are co-located or not. Their solution addresses, however, the problem of privacy-preserving determination of co-location and does not address the problem of pairing previously unknown peers with each other, whereas we explicitly address the problem of pairing personal devices.</p><p>Schürmann and Sigg <ref type="bibr" target="#b16">[16]</ref> propose to use audio for generating a shared secret between co-located peers to be used as a pairing key. They record audio samples and calculate audio fingerprints based on them. Using Reed-Solomon encoding for fuzzy extraction of a common key they show that in various audio environments, cryptographic keys can be derived from the surrounding audio context. Their approach attempts to extract a large amount of entropy from a short audio snapshot and requires therefore very exact temporal alignment of the sound samples, which is difficult to achieve with off-the shelf devices. Our approach is different, since our method does not require exact temporal alignment, and it operates on longitudinal data, extracting entropy from the user's context over a longer period of time. Contrary to the approaches in <ref type="bibr" target="#b20">[20,</ref><ref type="bibr" target="#b11">11,</ref><ref type="bibr" target="#b16">16]</ref>, our approach can also handle situations in which an adversary is present in the correct peers' context without breaking the authenticity of the pairing.</p><p>The problem of zero-interaction authentication utilizing contextual proofs of presence has been discussed by Truong et al. <ref type="bibr" target="#b19">[19]</ref>. While their work also addresses a zero-interaction scenario, their problem is different: they consider the problem of co-location verification using context information in a setting, in which both endpoints are trusted and already have an established security association, whereas our approach addresses the problem of pairing devices that do not have any prior security associations with each other.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head><p>We have presented a novel key evolution approach for pairing personal IoT and wearable devices. The approach builds on a robust scheme for extracting shared entropy from the ambient context of such devices. We have also evaluated the approach based on experiments with luminosity and ambient noise in a number of different environments. These results should be understood as indicative, primarily establishing the overall feasibility of our proposed approach. Currently we are working on more large-scale testing in different scenarios and different contexts, which we think is of importance for further research in this area.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>Figure 1: Scenario 1: Pairing of personal IoT devices</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>respectively, by applying a fingerprint extraction function φ(•) on the collected context sequences. The extraction function is defined in Def. 3 in Sect. 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The Key Evolution Protocol</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Criterion 2 (</head><label>2</label><figDesc>Confidence). Let ρ d denote the number of key evolution cycles during which device d has attempted key evolution and ρ * d the total amount of key evolution cycles since establishing the initial pairing for d . Let also ρmin ∈ N + denote a key evolution attempt threshold and ρcov ∈ [0, 1] a key evolution coverage threshold. The pairing of a device d is accepted as genuine only if ρ d &gt; ρmin and ρ d ρ * d &gt; ρcov .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Definition 4 (</head><label>4</label><figDesc>Surprisal σ of a fingerprint bit). Let B be a random variable modelling the occurrence of a bit as a fingerprint bit in fingerprint F . The surprisal σ associated with the occurrence of a fingerprint bit b ∈ {0, 1} is the self-information of this bit σ(b) = I(b) = log( 1 P (B=b) ) = -log(P (B = b)), and is measured in bits. Definition 5 (Surprisal of a fingerprint). The surprisal σ(F ) of a fingerprint F is the sum of the surprisal values of its individual bits, i.e., σ(F ) = b∈F σ(b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Distribution of bits and surprisal of fingerprints in office context depending on time of day (audio)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>accept d as authentic, if also criterion 2 for d holds. If |DX | = 1, i.e., there is only one device d claiming the identity X , d is accepted as authentic, if α(ID X d ) &gt; αmin , and criterion 2 holds for it.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Placement of test devices in an IoT scenario</figDesc><table><row><cell>Device</cell><cell>Placement</cell></row><row><cell></cell><cell>Office setting</cell></row><row><cell cols="2">Device d1 User's office</cell></row><row><cell cols="2">Device d2 User's office</cell></row><row><cell>A1</cell><cell>Outdoor light</cell></row><row><cell>A2</cell><cell>Adjacent office</cell></row><row><cell>A3</cell><cell>Coffee room, one room apart</cell></row><row><cell></cell><cell>Home setting</cell></row><row><cell cols="2">Device d1 Living room, ground floor</cell></row><row><cell cols="2">Device d2 Living room, ground floor</cell></row><row><cell>A1</cell><cell>Outdoor light</cell></row><row><cell>A2</cell><cell>Studio, 2 nd floor</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Average fingerprint similarity between the co-located and adversary devices in the IoT scenario</figDesc><table><row><cell cols="3">Average fingerprint similarity with co-located devices</cell></row><row><cell></cell><cell>Luminosity</cell><cell>Audio</cell></row><row><cell cols="2">Office setting, 8 a.m. to 6 p.m.</cell><cell></cell></row><row><cell>d1 and d2</cell><cell>95.0 %</cell><cell>91.8 %</cell></row><row><cell>A1</cell><cell>70.0 %</cell><cell>-</cell></row><row><cell>A2</cell><cell>88.7 %</cell><cell>71.7 %</cell></row><row><cell>A3</cell><cell>68.3 %</cell><cell>62.6 %</cell></row><row><cell cols="2">Home setting, 6 a.m. to 10 p.m.</cell><cell></cell></row><row><cell>d1 and d2</cell><cell>82.9 %</cell><cell>87.5 %</cell></row><row><cell>A1</cell><cell>70.8 %</cell><cell>-</cell></row><row><cell>A2</cell><cell>70.6 %</cell><cell>77.0 %</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>in the same context as d1 and can generate context fingerprints FC A sufficiently similar to the fingerprint FC d 1 of d1, i.e., Ham(FC d 1 , FC A ) ≤ t, or, 2. A is not in the same context as d1 but is able to fabricate context fingerprints F C A sufficiently similar with the fingerprint of d1, i.e., Ham(FC d 1</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The measurements were done less than two months from the summer solstice in the northern hemisphere, i.e., the brightest time in the year. The influence of sunlight is likely to be be smaller during other times of the year.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was supported in part by the Intel Institute for Collaborative Research in Secure Computing (ICRI-SC) and the Academy of Finland ("Contextual Security" project).</p><p>We thank Jan-Erik Ekberg for originally suggesting the idea of strengthening a shared key between two devices over time <ref type="bibr" target="#b5">[5]</ref>. We would also like to thank our shepherd Florian Kerschbaum and the anonymous reviewers for their insightful feedback.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Talking to strangers: Authentication in ad-hoc wireless networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Balfanz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">K</forename><surname>Smetters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Stewart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">C</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Network and Distributed System Security Symposium (NDSS)</title>
		<meeting>Network and Distributed System Security Symposium (NDSS)<address><addrLine>San Diego, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-02">Feb. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Random key predistribution schemes for sensor networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2003 IEEE Symposium on Security and Privacy</title>
		<meeting>2003 IEEE Symposium on Security and Privacy</meeting>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
			<biblScope unit="page" from="197" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Robust fuzzy extractors and authenticated key agreement from close secrets</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Dodis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Reyzin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology -CRYPTO 2006</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4117</biblScope>
			<biblScope unit="page" from="232" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On the security of public key protocols</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dolev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="198" to="208" />
			<date type="published" when="1983-03">Mar 1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Key establishment in constrained devices. graduate seminar paper in T-110.7290 -Research Seminar on Network Security</title>
		<author>
			<persName><forename type="first">J.-E</forename><surname>Ekberg</surname></persName>
		</author>
		<ptr target="http://www.tcs.hut.fi/Studies/T-79.7001/2006AUT/seminar-papers/Ekberg-paper-final.pdf" />
		<imprint>
			<date type="published" when="2006-10">Oct. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A key-management scheme for distributed sensor networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Eschenauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">D</forename><surname>Gligor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 9th ACM Conference on Computer and Communications Security, CCS &apos;02</title>
		<meeting>9th ACM Conference on Computer and Communications Security, CCS &apos;02<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="41" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Gartner says by 2017, mobile users will provide personalized data streams to more than 100 apps and services every day</title>
		<author>
			<persName><surname>Gartner</surname></persName>
		</author>
		<ptr target="http://www.gartner.com/newsroom/id/2654115" />
		<imprint>
			<date type="published" when="2014-01">Jan. 2014</date>
		</imprint>
	</monogr>
	<note>Referenced 2014-04-28</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Gartner says the internet of things installed base will grow to 26 billion units by 2020</title>
		<author>
			<persName><surname>Gartner</surname></persName>
		</author>
		<ptr target="http://www.gartner.com/newsroom/id/2636073" />
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>Referenced on 2014-04-28</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A fuzzy vault scheme</title>
		<author>
			<persName><forename type="first">A</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sudan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Designs, Codes and Cryptography</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="237" to="257" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Establishing pairwise keys in distributed sensor networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Inf. Syst. Secur</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="41" to="77" />
			<date type="published" when="2005-02">Feb. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Location privacy via private proximity testing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Narayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Thiagarajan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lakhani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hamburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Network and Distributed System Security Symposium (NDSS)</title>
		<meeting>Network and Distributed System Security Symposium (NDSS)<address><addrLine>San Diego, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011-02">Feb. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Nest thermostat and nest smoke and CO alarm</title>
		<ptr target="http://nest.com/" />
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
		<respStmt>
			<orgName>Nest Labs</orgName>
		</respStmt>
	</monogr>
	<note>Referenced on 2014-04-28</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">ORAL-B R debuts world&apos;s first available interactive electric toothbrush at mobile wold congress 2014</title>
		<author>
			<persName><forename type="first">Oral-B</forename></persName>
		</author>
		<ptr target="http://connectedtoothbrush.com/" />
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>Referenced 2014-04-28</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Spotter multipurpose sensor</title>
		<author>
			<persName><surname>Quirky</surname></persName>
		</author>
		<ptr target="https://www.quirky.com/shop/609-spotter-multi-purpose-sensor" />
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>Referenced 2014-04-28</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Polynomial codes over certain finite fields</title>
		<author>
			<persName><forename type="first">I</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Solomon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Society for Industrial and Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="300" to="304" />
			<date type="published" when="1960">1960</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Secure communication based on ambient audio</title>
		<author>
			<persName><forename type="first">D</forename><surname>Schürmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sigg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="358" to="370" />
			<date type="published" when="2013-02">Feb 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Security associations in personal networks: A comparative analysis</title>
		<author>
			<persName><forename type="first">J</forename><surname>Suomalainen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Valkonen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Asokan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security and Privacy in Ad-hoc and Sensor Networks</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Stajano</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Meadows</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Capkun</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Moore</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4572</biblScope>
			<biblScope unit="page" from="43" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Efficient hybrid security mechanisms for heterogeneous sensor networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Traynor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">La</forename><surname>Porta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="663" to="677" />
			<date type="published" when="2007-06">June 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Comparing and fusing different sensor modalities for relay attack resistance in zero-interaction authentication</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T T</forename><surname>Truong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Shrestha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Saxena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Asokan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Nurmi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Int. Conf. on Pervasive Computing and Communications (PerCom)</title>
		<meeting><address><addrLine>Budapest, Hungary</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-03">Mar. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Amigo: Proximity-based authentication of mobile devices</title>
		<author>
			<persName><forename type="first">A</forename><surname>Varshavsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Scannell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lamarca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Lara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UbiComp 2007: Ubiquitous Computing</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Krumm</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Abowd</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Seneviratne</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Strang</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4717</biblScope>
			<biblScope unit="page" from="253" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Vigilant unveils smart IoT innovation for diabetic patients</title>
		<ptr target="http://vigilant.ch/en/News/Company_News/2014/0221/53.html" />
		<imprint>
			<date type="published" when="2014-02">Feb. 2014</date>
		</imprint>
	</monogr>
	<note>Referenced 2014-08-23</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The secure remote password protocol</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Network and Distributed Systems Security Symposium (NDSS)</title>
		<meeting>Network and Distributed Systems Security Symposium (NDSS)<address><addrLine>San Diego, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-03">Mar. 1998</date>
			<biblScope unit="page" from="97" to="111" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
