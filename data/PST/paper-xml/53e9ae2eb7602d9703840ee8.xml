<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PAN: Providing Reliable Storage in Mobile Ad Hoc Networks with Probabilistic Quorum Systems *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jun</forename><surname>Luo</surname></persName>
							<email>jun.luo@epfl.ch</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer and Communication Sciences Swiss Federal Institute of Technology (EPFL)</orgName>
								<address>
									<postCode>CH-1015</postCode>
									<settlement>Lausanne</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jean-Pierre</forename><surname>Hubaux</surname></persName>
							<email>jean-pierre.hubaux@epfl.ch</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer and Communication Sciences Swiss Federal Institute of Technology (EPFL)</orgName>
								<address>
									<postCode>CH-1015</postCode>
									<settlement>Lausanne</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Patrick</forename><surname>Th</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer and Communication Sciences Swiss Federal Institute of Technology (EPFL)</orgName>
								<address>
									<postCode>CH-1015</postCode>
									<settlement>Lausanne</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><surname>Eugster</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer and Communication Sciences Swiss Federal Institute of Technology (EPFL)</orgName>
								<address>
									<postCode>CH-1015</postCode>
									<settlement>Lausanne</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PAN: Providing Reliable Storage in Mobile Ad Hoc Networks with Probabilistic Quorum Systems *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">B89ED7C3DD09CDD0AF33B19A3A73E232</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.1 [Computer-Communication Networks]: Network Architecture and Design</term>
					<term>C.2.2 [Computer-Communica tion Networks]: Network Protocols</term>
					<term>C.2.4 [Computer-Communication Networks]: Distributed Systems</term>
					<term>C.4 [Performance of Systems]: Fault Tolerance, Reliability</term>
					<term>I.6 [Simulation and Modeling]: Modeling Methodologies Algorithms, Design, Experimentation, Performance, Reliability Mobile Ad Hoc Networks, Quorum Systems, Reliable Data Storage, Replication, Gossiping, Multicast</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Reliable storage of data with concurrent read/write accesses (or query/update) is an ever recurring issue in distributed settings. In mobile ad hoc networks, the problem becomes even more challenging due to highly dynamic and unpredictable topology changes. It is precisely this unpredictability that makes probabilistic protocols very appealing for such environments. Inspired by the principles of probabilistic quorum systems, we present a Probabilistic quorum system for ad hoc networks (Pan), a collection of protocols for the reliable storage of data in mobile ad hoc networks. Our system behaves in a predictable way due to the gossipbased diffusion mechanism applied for quorum accesses, and the protocol overhead is reduced by adopting an asymmetric quorum construction. We present an analysis of our Pan system, in terms of both reliability and overhead, which can be used to fine tune protocol parameters to obtain the desired tradeoff between efficiency and fault tolerance. We confirm the predictability and tunability of Pan through simulations with ns-2.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>As in any traditional distributed setting, reliable storage of data with concurrent read/write (query/update) accesses still appears to be a challenging problem in mobile ad hoc networks. In this paper, we aim at making, at a reasonable cost, small data objects highly available to nodes in an ad hoc network. This need arises in various data sharing services. Mobility management <ref type="bibr" target="#b1">[1,</ref><ref type="bibr" target="#b2">2,</ref><ref type="bibr" target="#b3">3]</ref>, for instance, continuously tracks locations of mobile nodes and serves requests to these data. The distributed management of cryptographic keys or certificates <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b5">5,</ref><ref type="bibr" target="#b6">6]</ref> represents another class of applications. In addition, a distributed naming or addressing service <ref type="bibr" target="#b7">[7,</ref><ref type="bibr">8,</ref><ref type="bibr" target="#b9">9]</ref> is essential in order to provide each mobile node with an unambiguous name or IP address, or to convert the former to the latter. Due to the peculiarities of these applications, we consider a relaxed consistency model.</p><p>The "classic" academic approach to providing highly available data objects, the state-machine approach <ref type="bibr" target="#b10">[10]</ref>, consists in synchronizing a set of server replicas, each hosting a copy of the data, to handle all updates and queries in the same way ("write all -read one"). This approach provides perfect guarantees in theory, yet is expensive to implement even in wired networks. In particular, the atomic broadcast <ref type="bibr" target="#b11">[11]</ref> protocol ensures that each server replica obtains all updates and in the same order, but it comes with a prohibitively large overhead. Clearly, with an underlying highly dynamic ad hoc network, the synchronism required for state machine replication becomes unpracticable. Even with weaker consistency guarantees (e.g., without ordering guarantees), state machine replication leads to poor performance in ad hoc networks. Further sacrificing safety guarantees such as atomicity through the use of a probabilistic dissemination of updates (e.g., probabilistic broadcast <ref type="bibr" target="#b12">[12]</ref>) is indeed an option, yet the incurred overhead is not low enough to address a broad application context. A more drastic shift seems to be necessary. Such a step has been initiated (again first in wired networks) through the introduction of quorum systems <ref type="bibr" target="#b13">[13]</ref>. This approach improves the efficiency of the replication of the stored data by better balancing the load between updates and queries. A quorum system is, roughly, a set of quorums, each consisting of a subset of server replicas. By ensuring that the intersections of quorums meet certain properties, it is guaranteed that by issuing queries, as with updates, to individual quorums only, the most recent value is obtained. Hence, in contrast to the state machine approach, this approach is also referred to as "write manyread many". Through the way quorums, and in particular their intersections, are formed, one can trade fault tolerance (reliability) against protocol efficiency (overhead). A similar approach applied for mobility management in ad hoc networks appeared in <ref type="bibr" target="#b2">[2]</ref>. Unfortunately, "original" quorum systems, also termed strict quorum systems, do not apply well to highly dynamic environments <ref type="bibr" target="#b3">[3]</ref>. This is because the very construction of these quorums is not a trivial task, as their outcome is strongly subject to membership changes.</p><p>Probabilistic quorum systems <ref type="bibr" target="#b14">[14]</ref>, thanks to their less strict design rules, seem to be more appropriate for highly dynamic environments. By introducing probabilities for the intersection of individual quorums, the construction rules for these quorums are relaxed, and more freedom is left for trading protocol overhead for reliability. As this smoother tradeoff has constituted the driving force behind probabilistic quorum systems, it also turns out that the resulting reduced determinism makes such an approach more viable than a strict approach for ad hoc networks. However, it is not exactly clear whether a direct application of probabilistic quorum systems for wired networks adapts well to ad hoc networks (e.g., <ref type="bibr" target="#b3">[3]</ref>) without specific protocols designed for quorum accesses. Furthermore, the traditional symmetric construction of quorum systems (i.e., the same size for all quorums), is not suitable for all replication systems, for instance when the arrival rates of queries and updates, respectively, diverge strongly.</p><p>In this paper, we first define the problem of probabilistic reliable data storage in ad hoc networks, as well as metrics for a solution. We then present our protocol suite, called Probabilistic quorum system for ad hoc networks (Pan) <ref type="foot" target="#foot_0">1</ref> , as a solution. Innovating on the principles of probabilistic quorum systems, Pan applies an asymmetric quorum construction scheme for efficiency and relies on a gossip-based multicast protocol (rather than a multicast primitive from the network layer, e.g., MAODV <ref type="bibr" target="#b15">[15]</ref>, ODMRP <ref type="bibr" target="#b16">[16]</ref>, CAMP <ref type="bibr" target="#b17">[17]</ref>) for quorum accesses in order to improve the robustness and to combat the high probability of channel failures due to node mobility. We present analytical results predicting the performance of Pan in terms of message overhead and reliability degree. We then compare these results with simulation results obtained with the ns-2 simulator to confirm the predictability of Pan. The work presented in this paper is part of the Terminodes <ref type="bibr" target="#b18">[18]</ref> Project.</p><p>The remainder of this paper is structured as follows. Section 2 details the problem to be solved and the system model. Section 3 presents our Pan system. Section 4 analyzes Pan in terms of reliability degree and message overhead. Section 5 compares those values with simulation results, and also investigates other aspects of Pan. Section 6 discusses our contributions and overviews related work. Finally, Section 7 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">GOALS AND ASSUMPTIONS</head><p>This section states the problem to be solved and models the considered environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Problem Statement</head><p>We consider an ad hoc network consisting of a set N of nodes, where reliable access to shared data is required by mobile nodes. Let Ω ⊂ N be a storage entity and ρ be a set of access protocols for Ω. Given access rates λu and λq for updates and queries, respectively, the access protocol set ρ is probabilistic in nature if a query access ρR(Ω, λq) obtains, with a certain probability, the latest version of a data object resulting from an update access ρW (Ω, λu). Two metrics for ρ are:</p><p>• Reliability Degree R d : The probability that a query operation acquires the most recent update of the corresponding data object, considering both node and channel failures.</p><p>• Network Load N l : The average number of mes-sage×hop per unit time to achieve a certain R d . This definition is adapted to ad hoc networks by taking into account the number of hops to route a particular message. N l takes into account only the load generated by our protocols, which is independent of the different possible networking implementations.</p><p>Our goal is to design a set of access protocols ρ that achieve a high reliability degree R d even under large access rates λu and λq, while incurring reasonable overhead N l . We target relatively large scale networks, i.e., networks with tens or even hundreds of nodes, with a random mobility pattern. The optimal performance with respect to both metrics does not exist, since one can always be sacrificed to improve the other. Hence, we will study the trade-off between the two metrics and show how to fine tune parameters to trade R d with N l , or the other way around.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Model</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Network Model</head><p>We assume that every node i ∈ N has a unique physical address or id. Nodes may fail only by crashing, i.e., stopping to function. Failures are not permanent and can be recovered from. <ref type="foot" target="#foot_1">2</ref> All communications between different nodes are assumed to rely on the underlying unicast protocol. We use DSR <ref type="bibr" target="#b19">[19]</ref> as an example in this paper but, in practice, our solution can be made to work with any unicast routing protocol. We also assume that all messages for our protocols have relatively small sizes such that they can be fit into single network packets. This requirement is justified by considering the applications we aim at. For example, a public key is only hundreds of bits long and location information might be just a three-dimension coordinate. We further require that each message be uniquely identified by its identifier mid, which is a tuple [source ID (sid ), object ID (oid ), version no. (ver )]<ref type="foot" target="#foot_2">3</ref> , and that there is a way to establish a FIFO order among mid s<ref type="foot" target="#foot_3">4</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Replication and Consistency Model</head><p>We assume that a subset of network nodes are elected to hold shared data in a replicated fashion. This set, an implementation of the storage entity Ω upon which our quorum systems are built, is termed Storage Set (StS). An StS can be predefined before the network initialization by choosing relatively powerful nodes <ref type="bibr" target="#b20">[20]</ref>, or it can be dynamically assigned with a specific distributed algorithm <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b22">22,</ref><ref type="bibr" target="#b23">23]</ref>. The membership of an StS is subject to changes due to the joining and leaving of nodes . The algorithm used to initialize and maintain an StS will not be discussed here since it is out of the scope of this paper. Any node i ∈ StS is termed server, whereas the rest of the nodes are termed clients of the StS. It is not necessary that either a server or a client has a full membership view on the StS, but a proper lower bound on the view size is needed to guarantee the performance of our protocols. It is not the goal of this paper to find the optimal size for an StS, but we note that generally, the larger the size, the heavier the network is loaded, whereas the load on individual servers becomes smaller. Fig. <ref type="figure" target="#fig_0">1</ref> shows an example of an StS. To reduce the complexity of our protocols, we consider a relaxed consistency model for the replicated data. More precisely, our protocols do not commit themselves to any message ordering, except FIFO order. The shared-private <ref type="bibr" target="#b24">[24]</ref> model can be a good example of the relaxed consistency. This type of data object is owned by a particular node. It can only be modified by that node but be shared with, i.e, read by, any other node. We can find many application examples of such a model in ad hoc networks, such as key management, that justify the resulting trade-off between data consistency and protocol complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PAN SYSTEM ARCHITECTURE</head><p>Our Pan system includes two protocols: a client protocol and a server protocol, as shown in Fig. <ref type="figure" target="#fig_1">2</ref>. In both cases of update and query, a client sends a request to an arbitrary server in the StS. This server, termed agent for that client, then performs a corresponding operation of the server protocol. Schemes, by which some servers are known to a certain client, may vary with different implementations of the StS maintenance algorithm. For example, if an StS is elected as a set of cluster heads resulting from a particular clustering algorithm, a cluster member, also a client of the StS, knows its cluster head or even other heads of neighbor clusters. Otherwise certain request mechanisms can always be applied to reach a predefined StS. Since the client protocol can always implement certain mechanisms (e.g., ARQ <ref type="bibr" target="#b25">[25]</ref>) to ensure reliability, we will not consider this protocol in our analysis and simulations later. In the rest of this section we focus on the server protocol.</p><p>The server protocol maintains a quorum system building upon the StS. We distinguish two types of quorums within the quorum system. A quorum can be a write quorum, accessed by an update, or a read quorum in the case of an access by query. Throughout the presentation, as well as the analysis and simulations of the server protocol we will use two symbols ξ ? and ξ? to represent nominal quorum size and real quorum size, where "?" can be "W" or "R" depending on if the quorum is a write quorum or a read quorum. The nominal size is the number of servers supposed to be accessed by a certain update or query, while the real size is the result of the access.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Server Update Protocol</head><p>In the case of an update, the agent diffuses the update message within the StS, with assistance from other servers. For this purpose, each server keeps three records. The first two are used for the data management part of the protocol. midList stores the mid s of the most recent updates, while Buffer temporarily stores these updates. The third record, View, is for the membership management of the protocol. It is composed of three fields: (1) AView stores the id s of known servers, whose corresponding routing or location information is known; (2) PView stores the id s of known servers, whose corresponding routing or location information is currently unavailable; and (3) RView stores the id s of servers having indicated their willingness to leave the StS. In addition, each record has a maximum size, noted |R|M , for a given record R. We will show later that this seemingly complicated scheme provides a robust membership tracking in highly dynamic environments. Fig. <ref type="figure">3</ref> provides the pseudo-codes of the protocol.</p><p>Each server receiving a new update, including the agent, puts the update message into its Buffer and the correspond-  (3)  Send(mq, idagent)</p><p>(3) The data object is retrieved from the upper layer with certain callback procedures. The server update protocol is gossip-based <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b26">26]</ref> in nature since these receivers are randomly chosen. At last, all servers that effectively receive a message make a write quorum. The size of the quorum, ξW , is predictable thanks to the epidemic nature of the gossip-based protocol. The Send primitive is a direct call to the underlying unicast protocol. While performing the message dissemination, the server update protocol also takes the responsibility of tracking the membership. Due to the node mobility and frequent membership changes, it is not practical to have a full membership view at each server. In fact, even if it is possible to have the id s of all servers, there is no guarantee that the corresponding routing or location information is available. Our routing/location oriented membership management scheme tries to provide each server a partial view, approximately random in nature, by exchanging membership information between servers. The underlying principle is that the scheme has a similar effect as the reshuffling of the partial view, together with sporadic losses and discoveries of the routing or location information <ref type="foot" target="#foot_4">5</ref> .</p><p>Considering the fact that the locality of the traffic can reduce the network load, we apply a general optimization by raising the awareness of topology. This optimization is based on the assumption that the underlying routing protocol can provide partial topological information, e.g., we can have the path length information from the routing table of DSR, or the mobility management service itself can provide distance information. Our heuristics, in the case of DSR, works like (aspect ratio is not kept for the sake of space). When node 25 wants to perform an update, it sends a request to its agent, node 1. The request of this update is diffused to other servers by node 1, using gossip-based scheme (Only the valid transmissions are shown here. Duplicated transmissions are omitted to simplify the visualization.). If node 27 wants to access the data, it also requests its agent, node 0. Node 0 in turn requests other servers, nodes 8, 10, and 12. In this case, node 12 is the intersection of the read and write quorums.</p><p>It is able to reply the requested data of node 25 to node 27. The query reply is omitted here for simplicity.</p><p>this: for a given server, different weights are assigned to the servers in AView according to the length of the routing paths to them, i.e., the longer the path the lower the weight, such that it chooses a "near" server with higher probability to forward an update. A simple way to implement this is to choose weights inversely proportional to the length of the corresponding routing paths. This server update protocol is inspired by the Route Driven Gossip (RDG) protocol in <ref type="bibr" target="#b27">[27]</ref>, with modifications to the usage of some records (e.g., Buffer and midList). More detailed implementation can be found in that paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Server Query Protocol</head><p>In the case of a query, we apply the scheme traditionally implied for quorum systems, i.e., the agent directly uses the unicast protocol from the network layer to disseminate the query message to ξR-1 other servers. Since we consider that the arrival rate of queries is higher than that of updates in most cases, it is justifiable to have a relatively small read quorum, with a simple access scheme. <ref type="foot" target="#foot_5">6</ref> Fig. <ref type="figure">4</ref> provides the pseudo-codes of the protocol.</p><p>After receiving a query message from a client, the agent sends it to other servers immediately, with the version number of the corresponding local data object. Each server belonging to the read quorum, upon receiving the message, responds with its own copy of the data object, if its version is more recent than the one of the agent. The agent always Commits a new update returned from other servers. It invokes the corresponding client protocol after every request either yields a reply or times out.</p><p>The topology-awareness optimization used for the update protocol is also applied here. Depending on the protocol complexity that a particular application can afford, two further optimizations can be applied are: (1) using an overlay tree for the message diffusion <ref type="bibr" target="#b28">[28]</ref>, or (2) applying the concept of expanding ring search when choosing the value of ξR, i.e, instead of having the large value of ξR at the beginning, it is assigned a relatively small value. The value is increased for another search only if the results of the previous search are not satisfactory.</p><p>Fig. <ref type="figure" target="#fig_3">5</ref> illustrates a simple execution of our Pan system in a network of 50 nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">ANALYSIS</head><p>In this section, we show that the two metrics, R d and N l (defined in Section 2.1), are predictable given certain design parameters and information about the network. These analytical results are confirmed by simulations in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Model</head><p>We consider only the server protocol (including both update and query protocols) for analysis. The StS is assumed to consist of n servers. Query and update accesses arrive randomly at an arbitrary server, following Poisson processes with the intensity of λq and λu, respectively. By further assuming these two processes are independent, the overall access rate is given by λo = λq + λu.</p><p>For the server update, the diffusion process is emulated by a recurrence relation derived from epidemic theory <ref type="bibr" target="#b29">[29]</ref>. According to the terminology of epidemiology, a server that has received a certain update message is termed infected, otherwise susceptible. An infected server attempting to forward the corresponding message to others is called infectious. As the diffusion process finishes, all infected servers form a write quorum with real size ξW following a certain probabilistic distribution. We also assume that infectious servers forward a new message in synchronous rounds (every T ms, identical for all servers). The influence of particular network conditions is represented by p f , the probability of packet loss for a certain link. Since the diffusion process is relatively short in time, we approximate p f by considering only the effects of node mobility, buffer overflow, and packet collision, but omitting packet loss due to node crashes.</p><p>We consider only the second query to a data object modified by the most recent update, while considering the first query as happening before the update. 7 For example, as shown in Fig. <ref type="figure">6</ref>, only the pairs of (update β, query β2) and (update γ, query γ2) are considered, whereas queries β1 or γ1 are supposed to request previous updates (i.e., updates α and β, respectively). This assumption makes sense when we consider the time with respect to a server where updates and queries arrive, and also the property of a Poisson process shown in Fig. <ref type="figure" target="#fig_5">7</ref>. Since there is always some delay for the message dissemination, the probability that the actual events occurrence will follow the order of our assumption at that server is very high, according to different distributions of time interval between two events within a Poisson process. This makes the present analysis a "viable" lower bound. We continue using p f to represent the network condition, but an empirical value pe is used to represent the server unavailability due to failure, at any time instant. One might argue that the server failure should be treated as a random process with the time as its parameter <ref type="bibr" target="#b3">[3]</ref>, this is however not justifiable with a failure recovery model, which is a general case in ad hoc networks (e.g., nodes switching off for the purpose of battery replacement or operating system rebooting).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Stochastic Behavior of PAN System</head><p>We convey the predictability of the metrics for Pan, R d and N l , in two subsections. Certain preliminary results presented in <ref type="bibr" target="#b27">[27]</ref> are omitted for conciseness. 7 The time of an event is when it happens at an agent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Reliability Degree R d</head><p>According to the definition and the protocol description, this value is in fact the probability that a read quorum intersects the most recent corresponding write quorum. More precisely, we are looking for the probability that two subsets with sizes ξW and ξR, taken from a set of n servers, intersect. Note that ξR is defined as the number of servers that effectively reply to the query back to its forwarding agent.</p><p>We use ξr W and ∆ ξr</p><formula xml:id="formula_0">W = E[ ξr W -ξr-1 W ]</formula><p>for the values of real quorum size after r gossip rounds accomplished by the server update protocol and the average increment of this size within round r, respectively. According to the analysis in <ref type="bibr" target="#b27">[27]</ref>, ξr W is estimated with the following recurrence relation:</p><formula xml:id="formula_1">ν T r+1 = ν T r P δ<label>(1)</label></formula><p>where νr(i) = P ( ξr W = i) is the ith element of the column vector νr, with the initial value ν0(1) = 1. There exists an r for which the diffusion process is finished, i.e., no new server is infected afterwards, when r ≥ r. We denote ξr W | r≥r by ξW with distribution ν. Here P δ is the transition matrix with its element p (i,j)δ expressed as follows:</p><formula xml:id="formula_2">p (i,j)δ = P ( ξr+1 W = j| ξr W = i, ∆ ξr W = δ) = n-i j-i (1 -q δ ) j-i q δ(n-j) j ≥ i 0 j &lt; i<label>(2)</label></formula><p>where q = f (F, p f ), a function of fanout F and p f , is the probability that a certain server is not infected in a given gossip round. The detailed computation of q is omitted here.</p><p>Based on the assumption of synchronization, we divide the time axis after a given update event β into r + 1 intervals, as shown in Fig. <ref type="figure" target="#fig_7">8</ref>. A read quorum, resulting from a query  happening in-between two consecutive gossip rounds r and r + 1, would have to intersect a write quorum of size ξr W with a distribution νr. In order to find the probability of intersection, we need to calculate the read quorum size ξR (with the distribution µ) and pr, the probability that the query event occurs in-between rounds r and r + 1.</p><formula xml:id="formula_3">x W x W 3 x W 2 x W 1 ^x R s-1 s x | R x R =s x | R x R =s-1 x | R x R =s-1 x | R x</formula><p>The distribution of ξR, conditioned on ξR = s, is calculated according to the following recursive procedure, with an initial value P ( ξR = 1|ξR = 1) = 1 and the convention that P ( ξR = k|ξR = s) = 0 if s &lt; 0, k ≤ 0 or k &gt; s :</p><formula xml:id="formula_4">µ(k) = P ( ξR = k|ξR = s) = P ( ξR = k -1|ξR = s -1) • p + P ( ξR = k|ξR = s -1) • (1 -p) (3) k = 1, • • • , s where p = EH [(1 -p f ) 2H ](1 -pe)</formula><p>is the probability that the agent forwarding a query receives the reply from a server belonging to the corresponding read quorum. Here H is defined as a random variable representing the length of an arbitrarily chosen routing path. The distribution of this value is discussed in <ref type="bibr" target="#b27">[27]</ref>. The estimation of µ is somewhat conservative because servers with relatively old version data do not reply to a query.</p><p>The time interval between an update and the second query to it is characterized by an Erlang distribution λ 2 q te -λq t , with the assumption that the event arrival is described by a Poisson process. Therefore, we have</p><formula xml:id="formula_5">pr = t r+1 tr λ 2 q te -λq t dt r &lt; r ∞ tr λ 2 q te -λq t dt r = r<label>(4)</label></formula><p>Now, the probability of intersection, i.e., R d , is expressed by taking an average over all possible cases:</p><formula xml:id="formula_6">R d = r r=0 n i=1 ξ R j=1 (1 - ξR n-ξr W ξR n )µ(j)νr(i)pr<label>(5)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Network Load N l</head><p>For a certain R d with its parameter pair F and ξR, we evaluate the corresponding N l by averaging the load over a certain time unit (e.g., 1s), taking into account the arrival rate of updates and queries.</p><p>The loads generated by a single update and query are calculated separately, and then N l is obtained by summing products of the loads of the individual operations and their corresponding arrival rates:</p><formula xml:id="formula_7">LW = n i=1 h ( ξW • F • h)P (H = h)ν(i) = E[ ξW ] • F • E[H]<label>(6)</label></formula><formula xml:id="formula_8">LR = h (2 • ξR • h)P (H = h) = 2 • ξR • E[H]<label>(7)</label></formula><formula xml:id="formula_9">N = λuLW + λqLR (<label>8</label></formula><formula xml:id="formula_10">)</formula><p>This estimation is conservative in the same sense as we mentioned before. Again, it is relatively rough compared with the one for R d , because we do not take into account the following two facts: (1) many packets get dropped before reaching their destinations, and (2) packets, especially those eventually dropped, may travel quite a long way due to stale routing information. We will show with simulation that the former factor has a dominating effect in most cases, but these factors tend to offset each other in some cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SIMULATION</head><p>This section presents the simulation results of our Pan system. Some results are compared with the corresponding analytical ones, to confirm our claim that both the reliability degree R d and the network load N l of Pan are predictable. The flexibility of Pan, as well as its sensitivity to server failures, are also investigated by simulations in different settings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Model and Parameters</head><p>The simulator we use is ns-2 <ref type="bibr" target="#b30">[30]</ref> with the Monarch Project wireless and mobile extensions. It provides both implementations of DSR and wireless MAC, based on the Lucent WaveLAN IEEE 802.11 product, with a 2Mbps transmission rate and a nominal range of 250m. We adopt the two-ray ground reflection model <ref type="bibr" target="#b31">[31]</ref> as the radio propagation model.</p><p>We simulate ad hoc networks with 50 and 100 nodes in a square area of 1km 2 . The movement pattern is defined by the "random waypoint" model <ref type="bibr" target="#b32">[32]</ref> where the following process is repeated: nodes randomly choose a destination, move towards it at a speed uniformly distributed between zero and a maximum speed, and upon reaching the destination stay there for some pause time. In our simulations, each node has a maximum speed of 2m/s, 5m/s, 10m/s, and 20m/s, and a corresponding average pause time of 10s, 20s, 40s, and 80s, respectively. We pair the two simulation parameters in order to make the scenario more realistic, since it is a common knowledge that low speed nodes, like pedestrians, tend to be more restless than high speed nodes, like cars.</p><p>The StS contains half of the network nodes. We do not justify this number, but only use it as an example. The servers in the StS are assumed to be predefined in order to simplify the simulation. <ref type="foot" target="#foot_6">8</ref> The client protocol is omitted to reduce side effects. There is a Poisson traffic source, generating packets of 128 bytes, attached to each server to emulate the arrivals of queries or updates. If there is an update message, the server diffuses it with the update protocol (the gossip period is set to T = 200ms), otherwise the message is disseminated by the query protocol. The impact of the overall access rate λo on the performance of Pan is first investigated, then an appropriate value is taken for all simulations. We further assume that λo = aλu. Due to space limitations, we use a = 8 for most simulations, and change to a = 4 in Section 5.5 in order to show the fact that Pan is tunable. As the last simulation parameter, pe is first set to 1%, and then varied to show the sensitivity of Pan to server failures in Section 5.6. For some cases, i.e., certain values for the network size, maximum speed, pause time, and other simulation parameters, we vary the design parameters F and ξR in order to show the trade-off between the two metrics R d and N l .</p><p>Pan is operated over 400 seconds of simulated time. The first 50 seconds of the simulation are used for system initialization. Then each traffic source continues generating traffic according to the predefined intensity until the end. Each simulation was carried out 10 times with different scenario files created by ns-2.   <ref type="formula" target="#formula_9">8</ref>). However, it may seem somewhat odd to observe that R d is very low in high mobility scenarios, when λo &lt; 1.5s -1 . The main reason for this is the increased amount of stale routing information. In practice, this effect does not appear in the presence of background traffic. This problem can also be solved actively by requiring each StS server to send control packets during idle time in order to keep routing information fresh. Based on these observations, we apply λo = 2s -1 for all other simulations. The evaluations of R d are presented in two ways. The "pessimistic" R d refers to the probability that a query reaches the most recent update (with the same assumption as in Section 4.1 about the event order), whereas for the "optimistic" one, we consider a query to be successful even if it only retrieves the result of an update that occurred right before the most recent update. This second evaluation makes sense because, in practice, there are different data objects stored in an StS, and the probability that a queried data object has been modified by the most recent update is quite low. We will use these two notations for all graph illustrations in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Impact of λ o on PAN Performance</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Optimization vs. Non-optimization</head><p>As described in Section 3.1 and 3.2, raising the topology awareness improves the performance of Pan. Fig. <ref type="figure" target="#fig_0">10</ref> highlights this point. It shows that the optimized version has nearly the same R d as the non-optimized one (the difference is around 1%), but with a remarkable reduction (up to 20%) on N l . Therefore, we will provide simulation results of the optimized version throughout the rest of this section.</p><p>We also observe that N l diminishes when the node speed increases. This is not a surprise because the definition of N l considers not only the number of messages sent but also the number of hops that each message travels. As a result, N l decreases as more and more packets get lost due to increased channel failure probability in high mobility scenario. The abnormal increase of N l in very high speed scenario is a direct result of the second factor explained in Section 4.2.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Comparisons between Analytical and Simulation Results</head><p>Fig. <ref type="figure" target="#fig_9">11</ref> shows comparisons between simulation and analytical results for networks of normal density, i.e., 50 nodes in an area of 1km 2 , and high density, i.e., 100 nodes in an area of 1km 2 . The maximum speed and pause time are varied to test the impact of mobility on the performance of Pan. The design parameters F and ξR are adjusted to cope with the increased network size. We note that a real number x.y for the value of F means that each server, when gossiping the update, takes F = x with probability 1-y/10 and F = x+1 with probability y/10.</p><p>The following conclusions can be drawn: (1) the simu-  (2) the analytical results of N l are quite rough due to the reason we stated in Section 4.2.2, as well as the optimization we apply, but they still provide certain information about the system overhead such as the trend of its changes in different situations; (3) the optimistic R d is always much higher than the pessimistic one. This basically means that the potential of Pan is much higher than what could be expected from the analytical results; (4) as the network size and the maximum node speed grow, design parameters have to be adjusted to maintain a good performance of R d , at a cost of increased system overhead.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Adapting PAN to a New Environment</head><p>We simulate a new application environment by setting a = 4, i.e., increasing the update rate and decreasing the query rate. Intuitively, one would expect that shrinking the write quorum (decreasing F ) and enlarging the read quorum (increasing ξR) would reduce N l , while still maintaining R d . We investigate this hypothesis with simulations shown in Fig. <ref type="figure" target="#fig_1">12</ref>.</p><p>The first set of design parameter adjustments (changing F from 2 to 1.7 and ξR from 4 to 5) results in a reduction of N l (more than 5%) with virtually no expense of R d . Further parameter adjustments (reducing ξR to 4) yield significant reduction on N l (up to 25%), but with a modest degradation of R d (less than 5%). These results confirm what our intuition suggested.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Sensitivity to Server Unavailability p e</head><p>According to the simulation results shown in Fig. <ref type="figure" target="#fig_0">13</ref>, the sensitivity of Pan to pe increases as the maximum node speed grows. In addition, the sensitivity of Pan considering optimistic R d is lower than the sensitivity considering pessimistic R d .</p><p>We also observe that the increase of pe leads to an improvement of R d in some cases. This paradox indeed suggests a way to optimize our Pan system, i.e., a server belonging to a certain read quorum does not always try to reply to a query back to its agent, even if the server is "alive" and has a new version of the queried data object. With such a behavior, Pan can avoid that more than one server replies to an agent with the same data object, thereby reducing the probability of packet collisions and, in turn, improving R d . However, we do not put it as a formal optimization of Pan, because it is not as stable as the topology-awareness optimization in dynamic environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISCUSSION AND RELATED WORK</head><p>In this section, we summarize the novelties of the design of our Pan system and overview relevant work on quorum system designs and data management schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Characteristics of PAN</head><p>We explain the three main characteristics of Pan as follows:</p><p>We have proposed a gossip-based protocol for quorum access to cope with the "hostile" environment and to avoid the need for a global membership tracking for quorum systems. The design of access protocols and membership management schemes for quorum systems was not well covered in previous literature. This problem, however, has to be explicitly tackled in ad hoc networks for the following reasons: (1) Unicast protocols, as one choice to access As a consequence of gossip-based access protocol, the design of quorum systems becomes more straightforward. According to the theory of probabilistic quorum systems <ref type="bibr" target="#b14">[14]</ref>, the ξ is designed to meet the requirement of a certain intersection property ε in a replication system with n servers. However, as any unreliable access protocol is concerned, the difference between ξ and ξ does exist. Also, it is ξ that is essential to the estimation of reliability. Our design is more straightforward in the sense that we directly obtain ξ, probabilistic in nature, from the access protocol. Our approach is friendly to quorum systems in ad hoc networks since it does not require any global membership tracking in order to design ξ, a function of n and ε, beforehand.</p><p>An asymmetric quorum construction is applied, with a flexibility to fine tune design parameters, in order to have different sizes for individual quorums. An important factor that limits the application of traditional quorum systems is their symmetric construction (i.e., the same size for each quorum). By considering the shared-private data model, for instance, it becomes clear that the arrival rate of queries could be quite higher than that of updates, since the number of potential clients that may send a query is much larger than the number of the update generator, which is basically one for each data object. Therefore, in order to reduce the N l required for achieving a certain R d , it is reasonable to have a large write quorum, but a relatively small read quorum. The flexibility of tuning quorum sizes improves the adaptability of our Pan system to various application requirements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Probabilistic Quorum Systems</head><p>Probabilistic quorum systems were first proposed in <ref type="bibr" target="#b14">[14]</ref>. The authors demonstrate that, compared with strict quorum systems, probabilistic quorum systems yield a substantial improvement on the load while keeping high fault tolerance. A simple construction of a probabilistic quorum system, called ε-intersecting quorum system, is also proposed.</p><p>The construction shows that the probability of nonintersection between two arbitrary quorums is less than ε = e -l 2 by taking ξ = l √ n servers as a quorum in a system of n servers. The load considered in <ref type="bibr" target="#b14">[14]</ref> is the charge of computation for an individual server. We define the load in a different way by focusing on the charge of network resources, since computation is much cheaper than communication in wireless networks.</p><p>Haas and Liang <ref type="bibr" target="#b3">[3]</ref> first introduced probabilistic quorum systems into ad hoc networks for mobility management, under the name of randomized database groups. They propose a very interesting way to express both fault tolerance and load as costs of their system, and optimize those costs numerically. Considering the similarity between their system and Pan, it is unfortunate that there are no simulation results provided to evaluate the system performance and to confirm the precision of the numerical analysis in <ref type="bibr" target="#b3">[3]</ref>, otherwise making comparisons between the two systems would have been desirable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Data Management in Ad Hoc Networks</head><p>The 7DS system presented in <ref type="bibr" target="#b33">[33]</ref> shares certain features of our Pan system with respect to the diffusion scheme used for data spreading. However, since the two systems are designed for different network environments (7DS assumes a rarely connected network, whereas Pan considers networks of relatively high density), the underlying diffusion mechanisms are quite different. 7DS passively exploits node mobility to relay data from one node to the other, which results in a considerable delay for data spreading but has a potential to improve power and bandwidth usages (a recent research work <ref type="bibr" target="#b34">[34]</ref> applies a similar scheme to exchange security data), whereas Pan more actively "pushes" data to other nodes with a gossip-based protocol. As a result, the analytical models for the two diffusion processes are also different (diffusion controlled process for 7DS and epidemic model for Pan).</p><p>The work of Hara <ref type="bibr" target="#b35">[35]</ref> assumes that all mobile nodes can carry a set of data replicas, which would be a special case for Pan with its StS being the whole network. In order to guarantee data accessibility upon network partitioning, their work focuses on optimizing the location of data replicas within a network, based on the assumptions that (1) the memory space on nodes are limited, (2) data items are not updated, and (3) access frequencies to data items from each node are known and fixed. Although it is interesting to consider the impact of memory space on data allocation, the other two assumptions are too strong to capture the reality of mobile networks, hence limiting the application scope of their protocol.</p><p>Similarly to <ref type="bibr" target="#b35">[35]</ref>, Wang and Li <ref type="bibr" target="#b36">[36]</ref> consider the problem of replica allocation. However, their approach is more practical in the sense that it takes into consideration topology information (e.g., connection stability) when replicating data, while data replication only happens when necessary according to certain partition detection schemes. As far as system models are concerned, the problem we solve is somewhat orthogonal to theirs. The mobility model they propose assumes strong correlations between different nodes such that nodes in a network are organized into mobility groups, which might lead to frequent network partitions. Whereas we consider a purely random mobility pattern, in which network partitions seldom happen and mobility prediction can hardly make sense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSIONS</head><p>In this paper, we are concerned with the high availability of relatively small data objects in mobile ad hoc networks. We have defined the problem of probabilistic reliable data storage and two performance metrics that take the peculiarities of ad hoc networks into account. We have proposed our Pan system, based on the principle of probabilistic quorum systems, as a solution to this problem. The performance of Pan has been analyzed by making use of, notably, epidemic theory. The evaluation and investigation of Pan have also been carried out by simulations in ns-2.</p><p>The probabilistic reliability problem and corresponding metrics that we have defined can be considered as a general framework for evaluating protocols designed to address similar issues. As one solution to the probabilistic reliability problem, our Pan system diffuses updates to a random set (write quorum) in a storage entity StS. It also accesses a random set (read quorum) in the StS, upon queries, to get the most recent update. The main contributions we have made on the design of Pan can be summarized in three aspects, namely (1) gossip-based quorum access protocol, (2) straightforward quorum systems design, and (3) asymmetric quorum construction.</p><p>We have proposed an analytical model to predict the performance of our Pan system. The validity of predictions is evaluated by simulations. The results show that our analytical model provides quite accurate predictions on the reliability degree R d , while the prediction on the network load N l is relatively rough due to various factors. We are in the process of improving this model by further investigating the effects of those factors. In addition, it would also be interesting to have an analytical model based on random graph theory, as in <ref type="bibr" target="#b37">[37]</ref>.</p><p>In addition to confirming the predictability of our Pan system, we have also investigated other aspects of it with intensive simulations. Our simulation results show that, even under frequent topology changes, the reliability degree of our Pan system is high enough to guarantee its quality of service. These results also confirm the robustness of Pan, in the sense that it can sustain a large access rate λo, different network sizes, and a certain amount of server failures. Finally, the results illustrate the tunabilty property of Pan, by which the system can adapt to various application environments. It is a part of our future work to further study the performance of Pan under different access rates and to propose an upgraded Pan that adapts itself well to changes of access rate.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: An STS in an ad hoc network (the servers are in black whereas the clients are in white).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The message exchanges for updating and querying the STS in PAN.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( a )Figure 4 :</head><label>a4</label><figDesc>Figure 4: QUERY operation and the responses to it</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure5: Illustration of an operation pair within a network of 50 nodes located in a square area of 1km 2 (aspect ratio is not kept for the sake of space). When node 25 wants to perform an update, it sends a request to its agent, node 1. The request of this update is diffused to other servers by node 1, using gossip-based scheme (Only the valid transmissions are shown here. Duplicated transmissions are omitted to simplify the visualization.). If node 27 wants to access the data, it also requests its agent, node 0. Node 0 in turn requests other servers, nodes 8, 10, and 12. In this case, node 12 is the intersection of the read and write quorums. It is able to reply the requested data of node 25 to node 27. The query reply is omitted here for simplicity.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>time axis update b update g query b 1 query b 2 query g 1 query g 2 update a Figure 6 :</head><label>2a6</label><figDesc>Figure 6: The occurrence of events in terms of absolute time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: The distributions of time interval between two events. (a) exponential distribution for consecutive events; (b) Erlang distribution for nonconsecutive events.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Incremental processes of read and write quorum size: ξW increases round by round, while ξR increases with the amount of queries sent by an agent.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9</head><label>9</label><figDesc>Fig.9shows the performance of Pan with respect to λo, the overall access rate. We observe that Pan performs in a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Analytical and simulation results for reliability degree R d and network load N l vs. mobility</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Buffer ∪ {m} for all entry ∈ midList such that entry &lt; m.mid do midList ← midList \ {entry} midList ← midList ∪ {m.mid} Commit(m) /* Step 2: Remove obsolete server from view */ AView ← AView \ {m.rmb} PView ← PView \ {m.rmb} RView ← RView ∪ {m.rmb} while |RView | &gt; |RView |</figDesc><table><row><cell cols="2">(1) DS stands for destination set.</cell></row><row><cell>(2) A subscript</cell><cell>stands for random selection.</cell></row></table><note><p>procedure Leave leaveFlag ← true task Update /* Executed every T ms */ if leaveFlag = true then m.rmb ← id DS (1) ← set ⊂ AView such that |set| = F (2) for all id ∈ DS do Send(m, id) else while Buffer = ∅ do m ← entry ∈ Buffer Buffer ← Buffer \ {entry} m.rmb ← entry ∈ RView m.mb ← entry ∈ AView ∪ PView DS ← set ⊂ AView such that |set| = F for all id ∈ DS do Send(m, id) (a) Update/Leave emission upon receiveUpdate(m) do /* Step 1: Update Buffer with new messages */ if ∃ entry ∈ midList such that entry ≥ m.mid then Buffer ← M do RView ← RView \ {entry ∈ RView } /* Step 3: Add new server to view */ if m.mb ∈ (AView ∪ PView ) then if ∃ routing/location info. for m.mb then AView ← AView ∪ {m.mb} else PView ← PView ∪ {m.mb} (b) Update reception Figure 3: Data update and membership management at node i upon Query(mq) /* mq infused by client query */ do if ∃ entry ∈ midList such that entry &gt; mq.mid then mq.ver ← entry.ver Counter mq ← 0 DS ← set ⊂ AView such that |set| = ξ R -1 for all id ∈ DS do Send(mq, id) timer id ← 0 /* set a timer for the id */ upon receiveQuery(mq) do if ∃ entry ∈ midList such that entry &gt; mq.mid then mq.mid ← entry mq.data ← queried data object</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Figure 9: Reliability degree R d vs. overall access rate λo for 50 nodes networks in a 1km 2 square, with F = 2 and ξR = 4.</figDesc><table><row><cell>1.00</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.00</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>90</cell><cell></cell><cell></cell></row><row><cell>0.98</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>80</cell><cell></cell><cell></cell></row><row><cell>0.96</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.98</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.94</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>70</cell><cell></cell><cell></cell></row><row><cell>0.92</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.96</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>60</cell><cell></cell><cell></cell></row><row><cell>0.82 0.84 0.86 0.88 0.90</cell><cell></cell><cell cols="4">Speed max =2m/s Speed max =5m/s Speed max =10m/s Speed max =20m/s</cell><cell></cell><cell>0.92 0.94</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">Speed max =2m/s Speed max =5m/s Speed max =10m/s Speed max =20m/s</cell><cell></cell><cell></cell><cell>50 40 30</cell><cell></cell><cell></cell><cell>Speed max =2m/s Speed max =5m/s Speed max =10m/s Speed max =20m/s</cell></row><row><cell>0.80</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.90</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>20</cell><cell></cell><cell></cell></row><row><cell>0.78</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>10</cell><cell></cell><cell></cell></row><row><cell>76</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">0.5 0.88</cell><cell>1.0</cell><cell>1.5</cell><cell>2.0</cell><cell>2.5</cell><cell>3.0</cell><cell>3.5</cell><cell>4.0</cell><cell></cell><cell>4.5</cell><cell>5.0</cell><cell></cell><cell></cell><cell>0.5 0</cell><cell>1.0</cell><cell>1.5</cell><cell>2.0</cell><cell>2.5</cell><cell>3.0</cell><cell>3.5</cell><cell>4.0</cell><cell>4.5</cell><cell>5.0</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">lo ( s -1 )</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>lo ( s -1 )</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>42</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1.00</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Analysis</cell><cell></cell></row><row><cell></cell><cell>0.99</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>40</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">Simulation of optimized PAN Simulation of PAN</cell></row><row><cell>Reliability Degree Rd</cell><cell>0.91 0.92 0.93 0.94 0.95 0.96 0.98 0.97</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="5">Analysis Simulation of optimized P (Optimistic) AN Simulation of P (Optimistic) AN Simulation of optimized P (Pessimistic) AN Simulation of P (Pessimistic) AN</cell><cell></cell><cell>Network Load * Nl (msg hop/s)</cell><cell>32 34 36 38</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.90</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>30</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.89</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell>2</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>10</cell><cell>12</cell><cell>14</cell><cell>16</cell><cell>18</cell><cell>20</cell><cell>22</cell><cell></cell><cell>0</cell><cell>2</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>10</cell><cell>12</cell><cell>14</cell><cell>16</cell><cell>18</cell><cell>20</cell><cell>22</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">maximum speed ( m/s )</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">maximum speed ( m/s )</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="6">(a) Reliability degree</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="5">(b) Network load</cell><cell></cell></row></table><note><p><p>Figure 10: Comparisons between optimized and non-optimized PAN for 50 nodes networks in a 1km 2 square, with F = 2 and ξR = 4.</p>relatively stable way for 1.5s -1 ≤ λo &lt; 3s -1 , and R d begins to degrade if we further increase λo, since the request arrival rate becomes larger than the service rate that Pan can provide. It is also natural to see that N l increases linearly with λo by Equation (</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Figure 12: Reliability degree R d and network load N l vs. maximum speed with a = 4, for 50 nodes networks in a 1km 2 square.Figure 13: Reliability degree R d and network load N l vs. server unavailability pe for 50 nodes networks in a 1km 2 square, with F = 2 and ξR = 4.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.99</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Reliability Degree (Pessimistic) Rd</cell><cell>0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">F=2 F=1.7 =5 =4 x R x R F=1.7 =4 x R</cell><cell>Reliability Degree Rd (Optimistic)</cell><cell>0.96 0.97 0.98</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">F=2 F=1.7 =5 =4 x R x R F=1.7 =4 x R</cell><cell>Network Load * Nl (msg hop/s)</cell><cell>38 40 42 44 46 50 48</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">F=2 F=1.7 =5 =4 x R x R F=1.7 =4 x R</cell></row><row><cell></cell><cell>0.90</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.95</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>36</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.89</cell><cell>0</cell><cell>2</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>10</cell><cell>12</cell><cell>14</cell><cell>16</cell><cell>18</cell><cell>20</cell><cell>22</cell><cell>0</cell><cell>2</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>10</cell><cell>12</cell><cell>14</cell><cell>16</cell><cell>18</cell><cell>20</cell><cell>22</cell><cell>34</cell><cell>0</cell><cell>2</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>10</cell><cell>12</cell><cell>14</cell><cell>16</cell><cell>18</cell><cell>20</cell><cell>22</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">maximum speed ( m/s )</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">maximum speed ( m/s )</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">maximum speed ( m/s )</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="10">(a) Pessimistic reliability degree</cell><cell></cell><cell></cell><cell cols="10">(b) Optimistic reliability degree</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="5">(c) Network load</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.00</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>35</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.98</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>34</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Reliability Degree (Pessimistic) Rd</cell><cell>0.88 0.90 0.92 0.94 0.96</cell><cell></cell><cell></cell><cell cols="3">Speed max =2m/s Speed max =5m/s Speed max =10m/s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Reliability Degree Rd (Optimistic)</cell><cell>0.95 0.96 0.97 0.98 0.99</cell><cell></cell><cell cols="3">Speed max =2m/s Speed max =5m/s Speed max =10m/s Speed max =20m/s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Network Load * Nl (msg hop/s)</cell><cell>28 29 30 31 32 33</cell><cell></cell><cell></cell><cell cols="3">Speed max =10m/s Speed max =20m/s Speed max =2m/s Speed max =5m/s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.86</cell><cell></cell><cell></cell><cell cols="3">Speed max =20m/s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>27</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>0.01</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">0.1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell>0.94</cell><cell>0.01</cell><cell></cell><cell></cell><cell></cell><cell cols="2">0.1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell>0.01</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">0.1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>p e</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>p e</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>p e</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="10">(a) Pessimistic reliability degree</cell><cell></cell><cell></cell><cell cols="10">(b) Optimistic reliability degree</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="5">(c) Network Load</cell><cell></cell><cell></cell></row><row><cell cols="19">quorum systems, are not as stable as those for wired net-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">works; Even worse, the performance of the unicasting can</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">hardly be predicted due to node mobility and packet col-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">lision, which invalidates the commitment made by quorum</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">systems. (2) Multicast protocols for ad hoc networks (e.g.,</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">MAODV), as another choice, always have a relatively large</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">overhead for maintaining the multicast group, and are there-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">fore not suitable for delivering packets in several groups with</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">memberships that change frequently, such as probabilistic</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">quorum systems. (3) It is a main purpose of ad hoc net-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">works to refrain from any centralized membership tracking</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">that is an often made assumption for quorum systems. Our</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">gossip-based protocol, as demonstrated before, behaves in</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="19">a predictable way, while requiring no separate membership</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">tracking.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Pan is a god from Greek mythology usually represented as having the legs, horns, and ears of a goat. As protector of pastures and flocks, Pan is in particular worshipped by shepherds. In our setting, a quorum system can be thought of as a flock of mobile nodes.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>This failure model also captures the case where nodes are deliberately switched off (e.g., for the purpose of battery replacement or operating system rebooting, or because the users do not intend to make use of their devices for a while).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>The two elements sid and oid stand for the ID of the message sender and the ID of the data object to be queried or updated, respectively.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>4 mid 1&gt;mid 2 implies that mid 1.sid =mid 2.sid ∧ mid 1.oid =mid 2.oid ∧ mid 1.ver &gt;mid 2.ver.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>The information could be lost due to the node mobility or the timeout of route cache timer. On the other hand, a node can also obtain new information by requesting it or tapping it from packets under transmission.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>Depending on different application requirements, it is possible for Pan to either behave the other way around, i.e., exchanging the accessing schemes for read and write, or to access both quorums with a gossip-based protocol.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_6"><p>Although the clustering algorithm is a popular way to elect some representatives of the network, introducing such an algorithm into our simulation may only bring more overhead to this task, without any help to show the essence of our system.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>* The work presented in this paper was supported (in part) by the National Competence Center in Research on Mobile Information and Communication Systems (NCCR-MICS), a center supported by the Swiss National Science Foundation under grant number 5005-67322.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Mobility management for hierarchical wireless networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mario</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM/Kluwer Mobile Networks and Applications (MONET)</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="331" to="337" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Ad hoc mobility management with uniform quorum systems</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. on Networking</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="228" to="240" />
			<date type="published" when="1999-04">Apr 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Ad hoc mobility management with randomized database groups</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICC&apos;99</title>
		<meeting>of ICC&apos;99</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1756" to="1762" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Securing ad hoc networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="24" to="30" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Providing robust and ubiquitous security support for mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Zerfos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICNP&apos;01</title>
		<meeting>of ICNP&apos;01</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="251" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The quest for security in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyán</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Čapkun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of MobiHoc&apos;01</title>
		<meeting>of MobiHoc&apos;01</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="146" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">IP address autoconfiguration for ad hoc networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Malinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wakikawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-07">July 2002</date>
		</imprint>
	</monogr>
	<note>Internet-Draft, draft-ietf-manet-autoconf-01.txt. Work in progress</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Weak duplicate address detection in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of MobiHoc&apos;02</title>
		<meeting>of MobiHoc&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="206" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">MANETconf: configuration of hosts in a mobile ad hoc network</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nesargi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prakash</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of INFOCOM&apos;02</title>
		<meeting>of INFOCOM&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="1059" to="1068" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Replication management using the state-machine approach</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">B</forename><surname>Schneider</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Addison-Wesley</publisher>
			<biblScope unit="page" from="169" to="197" />
		</imprint>
	</monogr>
	<note>in Distributed Systems, chapter 6. 2 edition</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Fault-tolerant broadcasts and related problems</title>
		<author>
			<persName><forename type="first">V</forename><surname>Hadzilacos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Toueg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Addison-Wesley</publisher>
			<biblScope unit="page" from="97" to="145" />
		</imprint>
	</monogr>
	<note>in Distributed Systems, chapter 5. 2 edition</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Bimodal multicast</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Birman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hayden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Ozkasap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Budiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Minsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Computer Systems</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="41" to="88" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The reliability of vote mechanisms</title>
		<author>
			<persName><forename type="first">D</forename><surname>Barbara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Garcia-Molina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Computers</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1197" to="1208" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Probabilistic quorum systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Malkhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Reiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wool</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Computation</title>
		<imprint>
			<biblScope unit="volume">170</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="184" to="206" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Multicast operation of the ad-hoc on-demand distance vector routing protocol</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of MobiCom&apos;99</title>
		<meeting>of MobiCom&apos;99</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="207" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">On-demand multicast routing protocol</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of WCNC&apos;99</title>
		<meeting>of WCNC&apos;99</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1298" to="1302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The core-assisted mesh protocol</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Garcia-Luna-Aceves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Madruga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications (Special Issue on Ad-hoc Routing)</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1380" to="1394" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Toward self-organized mobile ad hoc networks: the terminodes project</title>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-Y. Le</forename><surname>Boudec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vetterli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="118" to="124" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">The dynamic source routing protocol for mobile ad hoc networks (DSR)</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-C</forename><surname>Hu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003-02">February 2003</date>
		</imprint>
	</monogr>
	<note>Internet-Draft, draft-ietf-manet-dsr-08.txt. Work in progress</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An ad hoc network with mobile backbones</title>
		<author>
			<persName><forename type="first">K</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICC&apos;02</title>
		<meeting>of ICC&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="3138" to="3143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A cluster-based approach for routing in dynamic networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Krishna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chatterjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">K</forename><surname>Pradhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM/SIGCOMM Computer Communication Review</title>
		<meeting>of ACM/SIGCOMM Computer Communication Review</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="372" to="387" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Adaptive clustering for mobile wireless networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1265" to="1275" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">CEDAR: a core-extraction distributed ad hoc routing algorithm</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sivakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications (Special Issue on Ad-hoc Routing)</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1454" to="1465" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A transaction replication scheme for a replicated database with node autonomy</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Cheung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of VLDB&apos;94)</title>
		<meeting>of VLDB&apos;94)</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="214" to="225" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">L.-G</forename><surname>Alberto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Widjaja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Communications</forename><surname>Networks</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>McGraw Hill Higher Education</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Gossip-based ad hoc routing</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Halpern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of INFOCOM&apos;02</title>
		<meeting>of INFOCOM&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="1707" to="1716" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Route driven gossip: Probabilistic reliable multicast in ad hoc networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Th</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Eugster</surname></persName>
		</author>
		<author>
			<persName><surname>Hubaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of INFOCOM&apos;03</title>
		<meeting>of INFOCOM&apos;03</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Effective location-guided tree construction algorithms for small group multicast in MANET</title>
		<author>
			<persName><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nahrstedt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of INFOCOM&apos;02</title>
		<meeting>of INFOCOM&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="1192" to="1201" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Murray</surname></persName>
		</author>
		<title level="m">Mathematical Biology</title>
		<meeting><address><addrLine>Berlin, 2nd edition</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<ptr target="http://www.isi.edu/nsnam/ns/" />
		<title level="m">The ns Manual, The VINT Project, UC Berkeley, LBL, USC/ISI, and Xerox PARC</title>
		<editor>
			<persName><forename type="first">K</forename><surname>Fall</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Varadhan</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2002-04">Apr. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Rappaport</surname></persName>
		</author>
		<title level="m">Wireless Communications: Principles and Practice</title>
		<meeting><address><addrLine>Upper Saddle River, New Jersey</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Dynamic source routing in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mobile Computing, Tomasz Imielinski and Hank korth</title>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="153" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Effects of power conservation, wireless coverage and cooperation on data dissemination among mobile devices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Papadopouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schulzrinne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of MobiHoc&apos;01</title>
		<meeting>of MobiHoc&apos;01</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="117" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Mobility helps security in ad hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Čapkun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyán</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of MobiHoc&apos;03</title>
		<meeting>of MobiHoc&apos;03</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Effective replica allocation in ad hoc networks for improving data accessibility</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of INFOCOM&apos;01</title>
		<meeting>of INFOCOM&apos;01</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="1568" to="1576" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Efficient and guaranteed service coverage in partitionable mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of INFOCOM&apos;02</title>
		<meeting>of INFOCOM&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="1089" to="1098" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Probabilistic reliable dissemination in large-scale systems</title>
		<author>
			<persName><forename type="first">A.-M</forename><surname>Kermarrec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Massoulie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ganesh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Parallel and Distributed Systems</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>to appear)</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
