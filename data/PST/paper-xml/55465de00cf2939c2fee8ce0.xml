<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Electrical and Engineering</orgName>
								<orgName type="department" key="dep2">Institute of Science and Technology</orgName>
								<address>
									<postCode>305-701</postCode>
									<settlement>Dajeon</settlement>
									<country>Korea Advanced, Korea</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8F3B9E609F7641B622DE63A121995E4B</idno>
					<idno type="DOI">10.1109/TII.2015.2416435</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T10:14+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Trajectory Optimization With Particle Swarm Optimization for Manipulator Motion Planning</head><p>Jeong-Jung Kim, Student Member, IEEE, and Ju-Jang Lee, Fellow, IEEE Abstract-Optimization-based methods have been recently proposed to solve motion planning problems with complex constraints. Previous methods have used optimization methods that may converge to a local minimum. In this study, particle swarm optimization (PSO) is proposed for trajectory optimization. PSO is a population-based stochastic global optimization method inspired by group behaviors in wildlife, and has the advantages of simplicity and fast convergence. Trajectory modifications are encoded in particles that are optimized with PSO. The normalized step cost (NSC) concept is used for the initialization of the particles in PSO. A method for reusing previously optimized parameters is also developed. The optimized parameters are stored together with corresponding NSC vectors, and when a constraint violation occurs, the parameters associated with an NSC vector that is similar to the query NSC vector are selected. The selected vector is used for initializing the particles. The reuse of the previously optimized parameters improves the convergence of the PSO in motion planning. The effectiveness of these methods is shown with simulations and an experiment using a three-dimensional problem with constraints. The proposed algorithm successfully optimized a trajectory while satisfying the constraints and is less likely to converge to a local minimum. Index Terms-Manipulator, motion planning, particle swarm optimization (PSO), trajectory optimization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>M OTION planning is the process of finding a sequence of actions that moves an object from an initial configuration to a goal configuration while satisfying certain constraints. The problem can be solved optimally with methods such as the A-star algorithm, Dijkstra's algorithm, and value iteration when the dimension of the workspace and the number of actions are low. However, when the dimension of the workspace is high and additional constraints such as obstacles and velocity and force limits are added to the problem, there is no algorithm that is guaranteed to find the optimal solution <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>.</p><p>The primary goal in motion planning is collision avoidance. Previously, simple methods such as the potential field method <ref type="bibr" target="#b2">[3]</ref> and the elastic band method <ref type="bibr" target="#b3">[4]</ref> were used to produce collision-free trajectories. However, those methods are limited to low-dimensional problems and cannot deal with complex constraints. Sampling-based motion planning algorithms <ref type="bibr" target="#b4">[5]</ref>- <ref type="bibr" target="#b7">[8]</ref> that consider complex constraints have been proposed. Although these approaches produce trajectories that satisfy constraints, the trajectory is not optimal, and the computation time exponentially increases as the order of the search space increases.</p><p>Optimization-based methods have been recently proposed to address motion-planning problems with complex constraints. In these approaches, a trajectory is divided into N steps, and incremental changes in the trajectory are encoded into a set of parameters. The parameters can be optimized with methods including covariant Hamiltonian optimization <ref type="bibr" target="#b8">[9]</ref>- <ref type="bibr" target="#b10">[11]</ref> and derivative-free stochastic optimization <ref type="bibr" target="#b11">[12]</ref>, which uses path integrals <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>. The stochastic optimization method <ref type="bibr" target="#b11">[12]</ref> has a fast convergence rate, a high success rate, and can include various constraints. However, the method optimizes individual steps and may converge to a local minimum rather than the global minimum.</p><p>In this study, trajectory optimization using particle swarm optimization (PSO) is investigated. PSO is a population-based stochastic optimization method inspired by the behavior of wildlife in groups such as flocks of birds or schools of fish <ref type="bibr" target="#b14">[15]</ref>. The main advantages of PSO are that it is simple to understand, easy to implement, and converges rapidly compared with other traditional global optimization methods, such as genetic algorithms (GA) and simulated annealing (SA). PSO has been applied to various fields <ref type="bibr" target="#b15">[16]</ref>- <ref type="bibr" target="#b23">[24]</ref> and has shown good performance.</p><p>A parameterization of the incremental changes to a trajectory and a cost function that addresses constraints are developed for PSO. A normalized step cost (NSC) concept is used to initialize the particles for the optimization. A method for reusing previously optimized parameters is also investigated. The optimized parameters are stored with NSC feature vectors, and when a constraint violation occurs, the parameters stored with an NSC vector that is similar to the query NSC vector are selected. The selected parameters are used for initializing the particles. The reuse of the previously optimized parameters improves the convergence of the PSO in motion planning. The trajectory optimization method developed in this study is applicable to motion planning problems that include various constraints and is less likely to converge to a local minimum.</p><p>The organization of this paper is as follows. In Section II, trajectory optimization using PSO is discussed, including the parameter encoding method, the choice of the cost function for trajectory modification, and the initialization method for the particles. A method for reusing previously optimized parameters is provided in Section III. Simulation results are presented in Section IV, and an experiment with an actual manipulator is described in Section V. Finally, concluding remarks and a discussion are provided in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. TRAJECTORY OPTIMIZATION WITH PSO FOR MOTION PLANNING</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. PSO for Trajectory Optimization</head><p>Motion planning is a complex, multidimensional problem, and an algorithm should generate a trajectory that satisfies constraints and does not converge to a local minimum. Among the various motion-planning methods, optimization-based approaches have been recently proposed and have produced good results with complex constraints <ref type="bibr" target="#b8">[9]</ref>- <ref type="bibr" target="#b11">[12]</ref>. In these approaches, the trajectory is divided into N steps, and the incremental changes in the trajectory are encoded into parameters, which are then optimized. However, these methods require long computation times and are likely to converge to a local minimum.</p><p>Stochastic optimization algorithms such as GA <ref type="bibr" target="#b24">[25]</ref>, evolution strategy (ES) <ref type="bibr" target="#b25">[26]</ref>, differential evolution (DE) <ref type="bibr" target="#b26">[27]</ref>, and PSO <ref type="bibr" target="#b14">[15]</ref> can find a globally optimal solution, i.e., they are less likely to converge to a local minimum. Variants of these algorithms have been proposed to improve the performance, usually requiring control parameters and tuning for each problem. Research into methods for eliminating the control parameters has also been conducted. These methods include the covariance matrix adaptation ES (CMA-ES) <ref type="bibr" target="#b27">[28]</ref>, which is a variant of ES, bare-bones DE (BBDE) <ref type="bibr" target="#b28">[29]</ref>, which is a variant of DE, and Gaussian swarm (GS) <ref type="bibr" target="#b29">[30]</ref>, which is a variant of PSO. Among these algorithms, the GS has a fast convergence rate and uses very simple but effective optimization steps that can reduce the computation time. Given the importance of these factors for motion planning, PSO was selected for the trajectory optimization problem.</p><p>In PSO, the candidate solutions are encoded into positions of particles, and the best results are stored during the optimization process. One optimization step for a particle s is shown in (1) and ( <ref type="formula" target="#formula_1">2</ref>)</p><formula xml:id="formula_0">V i+1 (s) = |randn|(p best (s) -X i (s)) + |randn|(g best -X i (s))<label>(1)</label></formula><formula xml:id="formula_1">X i+1 (s) = X i (s) + V i+1 (s)<label>(2)</label></formula><p>where V i+1 (s) is the velocity and X i+1 (s) is the position of the particle at the i + 1 iteration, |randn| is a positive random number generated according to the absolute value of the normal distribution, i.e., abs[Normal(0, 1)], p best (s) is the previous best position for each particle and g best (s) is the best position among all of the particles obtained thus far. As the number of iterations increases, the particles cooperate and determine the optimal values of the parameters by preserving and sharing their previous best positions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Encoding of Trajectory Modification Vector for PSO</head><p>Modifications to the trajectory are encoded in the particles, which are then optimized with PSO to find the optimal </p><p>The structure of a particle is shown in Fig. <ref type="figure" target="#fig_1">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Cost Function Design</head><p>The particles are optimized by minimizing the cost function</p><formula xml:id="formula_3">Cost(P[n]) = NC i=1 W i Const i (P[n])<label>(5)</label></formula><p>where Const i (•) are functions that represent each of the constraints, W i are weighting factors that balance the relative importance of each constraint, and NC is the number of constraints.</p><p>The first constraint is for obstacle avoidance and has the form</p><formula xml:id="formula_4">Const obsavo (P[n]) = O o=1 δ(R obs [o] + R end , ||Obs[o] -P[n]||), for n = 1, . . . , T N -2<label>(6)</label></formula><p>where Obs[o] is the location of the center of the obstacle, R obs [o] is the radius of the obstacle o, O is the number of obstacles, R end is the radius of the end-effector, and the function δ(a 1 , a 2 ) is an activation function whose value is 1, when a 2 is less than a 1 and 0 otherwise. In this study, obstacles are assumed to be spheres because any complex obstacle can be modeled with a collection of spheres, and spheres simplify the computation of collisions, as shown in <ref type="bibr" target="#b30">[31]</ref> and <ref type="bibr" target="#b31">[32]</ref>. The constraint can be modified to use the minimum distance from the trajectory to an obstacle bound, and a method such as the signed distance field <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b32">[33]</ref> can be used for complex structures. It is assumed that the obstacles are static and their positions and shapes are known a priori.</p><p>The second constraint is for the minimum distance between steps and has the form</p><formula xml:id="formula_5">Const mindis (P[n]) = ||P[n + 1] -P[n]||, for n = 0, . . . , T N -2<label>(7)</label></formula><p>where the ||p 1p 2 || is the Euclidean distance measure between two points, p 1 and p 2 . Trajectories with shorter distances produce lower values of the cost. The third constraint is for minimum acceleration and has the form</p><formula xml:id="formula_6">Const minacc (P[n]) = |acc(P[n])|, for n = 1, . . . , T N -2<label>(8)</label></formula><p>where |acc(p)| is the magnitude of the acceleration for a step and can be calculated with finite differences. The finite difference equation for each dimension is</p><formula xml:id="formula_7">acc(P [n]) = P [n + 1] -2P [n] + P [n -1] dt 2 . (<label>9</label></formula><formula xml:id="formula_8">)</formula><p>In this study, dt is the same for all steps, dt 2 has a value of 1, and acc(P [n]) is calculated for each dimension of the workspace. Usually, minimizing the acceleration is important for saving energy and avoiding a sudden change in the motion.</p><p>The fourth constraint minimizes the modifications to a trajectory and has the form</p><formula xml:id="formula_9">Const minmod (P[n]) = W D d=1 |P d mod [n]|, for n = 0, . . . , T N -1. (<label>10</label></formula><formula xml:id="formula_10">)</formula><p>The constraint is applied when some parts of an initial trajectory should be maintained. The total cost function to be optimized is</p><formula xml:id="formula_11">Cost(P) = T N-1 n=0 {W obsavo Const obsavo (P[n]) + W mindis Const mindis (P[n]) + W minacc Const minacc (P[n]) + W minmod Const minmod (P[n])}.<label>(11)</label></formula><p>The total cost is the sum of the costs for steps 0 and T N -1, and it can be rewritten as</p><formula xml:id="formula_12">Cost(P) = W obsavo Cost obsavo + W mindis Cost mindis + W minacc Cost minacc + W minmod Cost minmod (<label>12</label></formula><formula xml:id="formula_13">)</formula><p>where </p><formula xml:id="formula_14">Cost obsavo = T N-2 n=1 Const obsavo (P[n]) Cost mindis = T N-2 n=0 Const mindis (P[n]) Cost minacc = T N-2 n=1 Const minacc (P[n]) Cost minmod = T N-1 n=0 Const minmod (P[n]).<label>(13)</label></formula><p>where</p><formula xml:id="formula_16">Cost d sum = Cost d obsavo + Cost d mindis + Cost d minacc + Cost d minmod . (<label>15</label></formula><formula xml:id="formula_17">)</formula><p>After comparing <ref type="bibr" target="#b11">(12)</ref> with <ref type="bibr" target="#b13">(14)</ref>, a relation between the weighting factors and desired costs can be defined. The relations are</p><formula xml:id="formula_18">W obsavo = Cost d sum Cost d obsavo , W mindis = Cost d sum Cost d mindis W minacc = Cost d sum Cost d minacc , W minmod = Cost d sum Cost d minmod . (<label>16</label></formula><formula xml:id="formula_19">)</formula><p>The relation shows that a weighting factor is a ratio between a desired cost and other costs. The weighting factors can be set by the user's preference, and a high weighting is assigned to a cost that is considered important. Violations for other constraints should be minimized. Meanwhile, the obstacle avoidance constraints should be avoided with the cost function. That is, the weighting factor for the obstacle avoidance constraint should have a higher value than the weighting factors for the other constraints to prevent a collision. Although the choice of weighting factors depends on the size of the workspace, the total distance of the initial trajectory, and the volume of the obstacles, the relations in <ref type="bibr" target="#b16">(17)</ref> are normally suitable for selecting the weighting factors.</p><formula xml:id="formula_20">W obsavo ≥ W i , for i = mindis, minacc, minmod.<label>(17)</label></formula><p>W obsavo should be large enough to find a collision-free trajectory. However, other constraints are not minimized when the factor value is too large. Thus, weighting factors that generate the desired trajectory should be determined by trial and error method, considering ( <ref type="formula" target="#formula_18">16</ref>) and <ref type="bibr" target="#b16">(17)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. NSC for Particle Initialization</head><p>The initialization of the particles in PSO is an important step because it affects the quality of the solution. A common method for initializing the particles is to use a uniform distribution in the search space. However, for the trajectory optimization problem in this study, this method produces poor results because the search space is huge. In this section, a step-cost-based particle initialization method is proposed. In the previous section, the cost for PSO was calculated for entire trajectories. The cost for each step is used for initializing the particles. The cost is calculated by multiplying the degree of a constraint violation with a weighting factor. The NSC vector is calculated by dividing the step cost by the weighting factor with the maximum value, i.e.,</p><formula xml:id="formula_21">NSC(P[n]) = NC i=1 W i Const i (P[n])/W max . (<label>18</label></formula><formula xml:id="formula_22">)</formula><p>The procedure for obtaining the vector is shown in Algorithm 1. The NSC is used as the standard deviation of a normal distribution with zero mean for initializing the particles. Thus, each particle is initialized with the normal distribution, N (0, NSC[n] 2 ). In the motion-planning problem, the weight for obstacle avoidance usually has the largest value. Therefore, the standard deviation linearly increases with the distance between the trajectory and the obstacle bound. The steps with high costs are explored more than other steps to find parameters that reduce the cost. The procedure for initializing the particles with the NSC is shown in Algorithm 2.  5:</p><formula xml:id="formula_23">X[idx] = Normal(μ = 0, σ 2 = NSC[n]</formula><p>2 ) 6: end for 7: end for 8: return X An example when the number of steps is 50, the number of obstacles is 2, and the number of particles is 5, is shown in Fig. <ref type="figure" target="#fig_2">2</ref>. The top graph shows the NSC, the middle graph shows the positions of the particles initialized with a standard normal distribution, and the bottom graph shows the positions of the particles initialized with a normal distribution in which the standard deviation is obtained from the NSC. The particles initialized with the standard normal distribution are distributed equally for all steps, whereas the particles initialized with NSC are more tightly grouped in low-cost steps and more dispersed in high-cost steps. These results demonstrate that the NSC leads to the exploration of the steps that have high costs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Overall Optimization Process for Trajectory Optimization</head><p>The optimization procedure for trajectory optimization is summarized in Algorithm 3. The procedure is similar to PSO except for the initialization step and the encoding method. First, the NSC is calculated with Algorithm 1, and then the positions of the particles are initialized in the search space with Algorithm 2. Then, the cost for each particle is evaluated with <ref type="bibr" target="#b10">(11)</ref>, and the positions of the particles are updated until the stopping condition is met. The final trajectory P is the sum of the initial trajectory P init and the modifications P mod that are encoded in g best at the final iteration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. REUSE METHOD FOR OPTIMIZED PARAMETERS</head><p>When we apply PSO to optimize parameters in a robot application, the fitness evaluations are conducted using the robot or a simulation, which is time-consuming. The convergence speed Algorithm 3. OptimizeTrajectory(P init ) 1: P = P init 2: NSC = CalculateN SC(P) // Algorithm 1 3: i = 0 4: for each particle s = 1, . . . , S do 5:</p><p>X i (s) = InitializeP article(NSC) // Algorithm 2 p best (s) = X i (s) 6: end for 7: for iteration i = 1, . . . , MaxIteration do 8: for each particle s = 1, . . . , S do 9:</p><formula xml:id="formula_24">V i+1 (s) = 10: |randn|(p best (s)-X i (s))+|randn|(g best -X i (s)) 11: X i+1 (s) = X i (s) + V i+1 (s) 12:</formula><p>for wd = 0, . . . , W D -1 do 13:</p><p>for n = 0, . . . , T N -1 do 14:  P wd [n] mod = g best [wd × T N + n] 29: end for 30: end for 31: P = P init + P mod 32: return P is an important factor for selecting an optimization method: a large number of function evaluations result in lengthy computation times and may cause damage to the robot. In this study, a method for reusing optimized parameters is developed to improve the convergence speed. The optimized trajectory modification vectors P mod and their NSC vectors are stored in the trajectory modification storage (TMS) vector, and these are used for matching previously optimized trajectories and the given trajectory. The NSC vector reflects a violation of the constraints, and the most similar pair is selected when a trajectory that violates the constraints is given. The NSC is a T N-dimensional vector that can be used as a feature vector as in information retrieval, text mining, and image matching. The similarity between the vectors can be calculated with a distance measure. In this study, the cosine similarity is used for the measure, i.e.,</p><formula xml:id="formula_25">P wd [n] mod = X(</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S(a</head><formula xml:id="formula_26">, b) = a • b a b = ab T a b<label>(19)</label></formula><p>where a and b are NSC vectors. The measure has a value of 1 when the two vectors are identical, 0 when there is no similarity, Fig. <ref type="figure">3</ref>. Trajectory modification storage vector (TMS). When a trajectory that violates the constraints is given, the NSC is calculated and a previously optimized parameter vector P mod * in the TMS that has a similar NSC value is selected.</p><p>and -1 when the two vectors have opposite signs. When all of the elements in the vector are positive, the result is bounded in [0, 1]. The two NSC vectors that have a similarity value closest to 1 are the most similar. The matching procedure for selecting a suitable trajectory modification vector is shown in Fig. <ref type="figure">3</ref>. The input is the NSC vector, and the output is the trajectory modification vector P mod * , which is chosen based on the NSC vector that is most similar to the input vector. If P mod * produces a trajectory that does not violate the obstacle avoidance constraint, the trajectory is used for motion planning. However, if the trajectory violates the constraint, the matched parameter is used for initializing the PSO. Each value in the P mod * vector is used as the mean of a normal distribution, and NSC new , which is the NSC calculated using P mod * , is used as the standard deviation of the distribution. The procedure for initializing the particles with a previously optimized parameter vector is shown in Algorithm 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 4. InitializeParticle(P</head><formula xml:id="formula_27">mod * ,NSC new ) 1: X[idx] ← 0, idx = 0, . . . , T N × W D -1 2: for wd = 0, . . . , W D -1 do 3: for n = 0, . . . , T N -1 do 4: idx = wd * T N + n 5: μ = P wd mod * [idx] 6: σ = NSC new [n] 7:</formula><p>X[idx] = Normal(μ, σ 2 ) 8: end for 9: end for 10: return X As the number of stored trajectories increases, the time required for matching NSC vectors increases and the accuracy decreases. A large-scale feature matching method such as a vocabulary tree <ref type="bibr" target="#b33">[34]</ref>, which can find a match among a large number of stored features, can be considered because the matching procedure is similar to feature matching in image processing.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. SIMULATIONS</head><p>In this section, the proposed method is verified with simulations. The robot being simulated is shown in Fig. <ref type="figure" target="#fig_4">4</ref>. The values of the parameters in the figure were L1 = 1.7 cm, L2 = 1.7 cm, L3 = 6.7 cm, and L4 = 10 cm. The final time of the trajectory was 5 s, and the sampling time was 0.1 s. We generated a minimum-jerk trajectory <ref type="bibr" target="#b34">[35]</ref> in the joint space that starts from (0, 1.7, 18.4) and ends at (12.0, 4.0, 4.0), where the positions are in centimeters, and this trajectory was used as an initial trajectory. Static obstacles were placed at (15.0, 1.0, 5.0) and (10.0, 2.0, 14.0), and their radii were 4 and 2 cm, respectively. In this example, the initial trajectory collides with the obstacles, so the optimization searches for a trajectory that avoids the obstacles and minimizes the costs of the other constraints. The radius of the end-effector was assumed to be 0 cm. The parameters for the initial trajectory and the obstacles are shown in Fig. <ref type="figure" target="#fig_5">5</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Comparison of Trajectory Optimization Methods</head><p>To compare methods, the trajectory was modified using three methods: STOMP <ref type="bibr" target="#b11">[12]</ref>, trajectory optimization with DE (TOD),     and the proposed trajectory optimization with PSO (TOP). The number of samples in STOMP was 100, the size of the population in DE was 100, and number of particles in PSO was 100; the maximum number of iterations was 100 for all of the methods. The simulations were conducted 20 times for each method, and the maximum, minimum, and mean values were computed, because STOMP, DE, and TOP are stochastic methods. The cost function in <ref type="bibr" target="#b10">(11)</ref> was used, and the weighting factors were W mindis = W minacc = W minmod = 10 and W obsavo = 1000. The weighting factor W obsavo was given a larger value than the other weighting factors, because obstacle avoidance is the most important element in motion planning. W obsavo was set as 10 at the initial stage and gradually increased until the value for collision-free trajectories was achieved. In our simulation environment, W obsavo = 1000 was suitable for generating collision-free trajectories. The algorithms attempt to minimize the cost function. For the implementation of STOMP,   we transferred the best five samples to the next iteration, as recommended in <ref type="bibr" target="#b11">[12]</ref>, and removed the smoothing stage of the trajectory to improve the convergence. The specific form of DE used was parameter-free, BBDE (PFBBDE) <ref type="bibr" target="#b28">[29]</ref>, which has better performance than basic DE and does not require tuning parameters.</p><p>The trajectories in each axis after optimization with STOMP, TOD and TOP are shown in Figs. <ref type="figure" target="#fig_6">6</ref><ref type="figure">7</ref><ref type="figure">8</ref>. The steps in which collisions with obstacles occurred were modified. The trajectory generated with TOP is smoother than the trajectories generated with STOMP and TOD. The cost for each generation is shown in Fig. <ref type="figure" target="#fig_8">9</ref>. As shown in Fig. <ref type="figure" target="#fig_8">9</ref>, TOP produced a modification vector with a lower cost than those of the other methods. In the later generations, the cost in STOMP remained constant, whereas the cost in TOP decreased continuously. These results highlight the differences between a local optimization method and a global optimization method. STOMP calculates the individual cost for each step and updates that step based on the cost, whereas TOP calculates the cost for all steps and updates the steps based  on the cost of the entire trajectory. Usually, local optimization methods are more likely to converge to a local minimum. This characteristic was observed in the results. Although the cost in DE continuously decreased, the convergence was slow and the final trajectory was not satisfactory. Candidate solutions in stochastic optimization methods usually are initialized with a uniform distribution in the search space and explore the search space widely to avoid local minima, which can cause slow convergence. Therefore, DE, which is a global optimization method, was slower to converge than STOMP. TOP converged rapidly because of the NSC-based initialization, which reduces the search space.</p><p>To show how the cost for each constraint was minimized, the costs for each constraint were compared. The trajectories with the minimum cost among the 20 simulations for each method were selected, and the results are summarized in Table <ref type="table" target="#tab_2">I</ref>. As shown in the table, the cost for obstacle avoidance was 0, and the costs for the other constraints were higher. Zero values for the obstacle avoidance cost indicate that all of the methods produced modifications to the initial trajectory were collision-free. It can be observed that the TOP produced the lowest cost.</p><p>To evaluate the scalability of the proposed method, the final time T was fixed and the sampling time was changed to 0.005 and 0.05, so that the number of steps was 100 and 10, respectively. Hence, the dimension of the problem was 300 in the former case and 30 in the latter case, because the dimension of the workspace is three. The cost for each generation when the total number of steps was 10 is shown in Fig. <ref type="figure" target="#fig_9">10</ref>.</p><p>TOP produced a modification vector with a lower cost than STOMP or TOD. The 30th-order optimization problem is a relatively low-dimensional problem in motion planning, and TOD converged rapidly with a continuously decreasing cost, thus avoiding local minima. The cost for each generation when the total number of steps was 100 is shown in Fig. <ref type="figure" target="#fig_10">11</ref>. The results are similar to those when the number of steps was 50. Although STOMP produced a modification vector that had a similar cost at the final iteration, the algorithm converged to a local minimum and the cost did not decrease. In the case of the 300th-order optimization problem, TOD converged more slowly, although the cost continuously decreased.</p><p>The costs at the final iteration for both problems are summarized in Table <ref type="table" target="#tab_3">II</ref>. Although for higher order problems the difference in the costs with TOP and STOMP decreased, the trajectories produced by TOP had lower costs than those produced by STOMP and TOD.</p><p>The computation times for STOMP, TOD, and TOP are summarized in Table <ref type="table" target="#tab_4">III</ref>. The computation times linearly increased as the order of the problem increased, but the computation times with TOP were lower than those of STOMP and TOD. This difference occurs because the update equation of STOMP is more complex than that of TOP, and STOMP uses mathematical functions that result in long computation times. The computation times with TOD are slightly slower than those of TOP because TOD uses more random functions than TOP, although TOD does not use complex equations for optimization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Comparison of Weighting Factors</head><p>It was stated previously that the weighting factor for collision avoidance W obsavo should have a higher value than the other constraint weighting factors in <ref type="bibr" target="#b16">(17)</ref>, although the selection of the weighting factor values depends on the size of the workspace, the total distance of the initial trajectory, and the volumes of the obstacles. A comparison of the costs for various values of the weighting factor W obsavo is given in Table <ref type="table" target="#tab_5">IV</ref>. The value of W obsavo was changed from 10, which is equal to the values of the other weighting factors, to 100 and 1000. As shown in the table, although the total costs for all values were minimized, the cost for obstacle avoidance was not 0 when W obsavo = 10 and W obsavo = 100. A trajectory with a collision cannot be used for motion planning. The weighting factor W obsavo depends on the environment for motion planning and  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Comparison of Particle Initialization Methods</head><p>In this section, simulation results for two initialization methods are shown. Initialization with the standard normal distribution (TOP-SI) and the new method, i.e., a normal distribution that uses the NSC vector for the standard deviation of the distribution (TOP), were compared. In the case of TOP-SI, a scaling factor was tuned to obtain satisfactory results. The results with the distribution after scaling the sampling by 0.01 (TOP-0.01SI) showed good performance. Although we also computed the result for initialization with a uniform distribution, we did not include this result because the performance was so poor. The cost for each generation is shown in Fig. <ref type="figure" target="#fig_11">12</ref>, and the costs at the final iteration for each method are summarized in Table <ref type="table" target="#tab_6">V</ref>. The proposed NSC-based particle initialization method showed better results than initialization with the standard normal distribution. In the case of TOP-0.01SI, the result was similar to that of TOP but not as good, and manual tuning of the scale parameter was required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Result for Reuse of Optimized Parameters</head><p>In this section, results for the suggested method of reusing previously optimized parameters are shown. In this method, a TMS vector is constructed first. Two or three obstacles were randomly placed in the environment. The environmental parameters are listed in Table <ref type="table" target="#tab_7">VI</ref>. The pairs of NSC vectors and previously optimized trajectory modifications P[n] mod , which were optimized with TOP for each environment, were stored in the TMS.</p><p>To compare TOP with and without the TMS (TOP-TMS vs. TOP), an environment with three obstacles was defined. Obstacle 1 was placed at (8.0, 5.0, 1.0) and had a radius of 4.0 cm, obstacle 2 was placed at (5.0, 2.0, 16.0) and had a radius of 5.0 cm, and obstacle 3 was placed at (10.0, 2.0, 12.0) and  had a radius of 3.0 cm. The NSC in the environment was compared with the NSCs in the TMS, and the optimized parameter in the 15th environment shown in Table VI was selected after calculating the similarity measure in <ref type="bibr" target="#b18">(19)</ref>.</p><p>The parameter vector was used for initializing the TOP-TMS and optimizing the trajectory for the new environment. The costs for each generation are shown in Fig. <ref type="figure" target="#fig_0">13</ref>, and the costs at the final iteration are summarized in Table <ref type="table" target="#tab_7">VII</ref>. As shown in the figure and table, TOP-TMS converged faster than TOP and can be considered for real-time trajectory optimization. We expect that when the TMS is suitably constructed for a task, there will be many cases that do not require the trajectories to be optimized again and previously optimized parameters can be used, which can reduce the computation time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENT</head><p>The trajectory optimization method was also applied to an actual robot manipulator. The configuration of the robot, which was the same in the simulations, is shown in Fig. <ref type="figure" target="#fig_13">14</ref>, and the joints were implemented with Dynamixel AX-12A. 1 The robot 1 Robotis Dynamixel [Online]. Available: http://www.robotis.com  The end effector of the robot was set to start from (0, 1.7, 18.4) and end at (12.0, 4.0, 4.0). The end effector was modeled as a sphere with a radius of 2 cm. A static obstacle with a height of 21 cm, a width of 5 cm, and a length of 5 cm was placed at (12.5, 1.5, 11.5), and the obstacle was modeled with five spheres having a radius of 4 cm each. The trajectory was optimized to avoid the obstacle. The number of particles was 200, the maximum number of iterations was 200, and the values of the weighting factors for the constraints, the sampling time, and the total travel time were identical to those used in the simulations.</p><p>The cost versus the number of generations is shown in Fig. <ref type="figure" target="#fig_14">15</ref>, and the trajectory produced by the optimization is shown in Fig. <ref type="figure" target="#fig_15">16</ref>. As shown in Fig. <ref type="figure" target="#fig_14">15</ref>, the initial cost was 13797, and the cost was reduced to 1433 at the final iteration. It can be observed in Fig. <ref type="figure" target="#fig_15">16</ref> that the trajectory was modified in the vicinity of the obstacle. The target joint angles for the robot at each sampling time were calculated using inverse kinematics. The joint angles shown in Fig. <ref type="figure" target="#fig_16">17</ref> were used for the commands. The optimal trajectory is shown in Fig. <ref type="figure" target="#fig_17">18</ref>, and photographs of the robot executing the trajectory are shown  in Fig. <ref type="figure" target="#fig_18">19</ref>, and the robot successfully followed the optimal trajectory. The costs for each constraint are summarized in Table <ref type="table" target="#tab_8">VIII</ref>. The total cost was minimized, and the value of the obstacle-avoidance constraint was converged to 0, which indicates that the trajectory was collision-free. The suggested trajectory optimization method permits obstacle avoidance constraints and other constraints that are essential for manipulator motion planning applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>In this study, PSO was used for trajectory optimization. A cost function was chosen to include various constraints, an NSC approach was used, and a new method for initializing the particles for motion planning was introduced. A method for reusing previously optimized parameters was also described. Trajectories in three-dimensional space with a goal configuration were generated. Simulations and experiments were conducted using a three-link robot manipulator. The proposed optimization method was compared with other recent stochastic trajectory optimization methods for motion planning. The proposed method produced a trajectory modification vector that had a lower cost and converged faster. The proposed particle initialization method produces particles that modify the parts of the trajectory that have a high cost and leave the parts with a low cost unchanged. A method for reusing previously optimized parameters enabled PSO to converge faster for the motion-planning problems. We expect that the method can be effectively applied to constrained trajectory optimization problems and is less likely to converge to a local minimum.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 . 3 )</head><label>13</label><figDesc>Fig. 1. D = W D × T N dimensional modification vector. The modification vector in each workspace consists of a T N-dimensional vector. The D-dimensional vector is encoded into a particle for PSO.</figDesc><graphic coords="2,330.50,67.25,194.88,93.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Algorithm 1 .</head><label>1</label><figDesc>CalculateNSC(P) 1: Cost[n] ← 0, n = 0, . . . , T N -1 2: NSC[n] ← 0, n = 0, . . . , T N -1 3: W max ← max{W minmod , W obsavo , W minacc , W minmod } 4: for n = 0, . . . , T N -1 do 5: if n == T N -1 then 6: Cost[n]+ = W minmod Const minmod (P[n]) 7: else if n == 0 then 8: Cost[n]+ = W minmod Const minmod (P[n]) 9: Cost[n]+ = W mindis Const mindis (P[n]) 10: else 11: Cost[n]+ = W minmod Const minmod (P[n]) 12: Cost[n]+ = W mindis Const mindis (P[n]) 13: Cost[n]+ = W obsavo Const obsavo (P[n]) 14: Cost[n]+ = W minacc Const minacc (P[n]) 15: end if 16: end for 17: for n = 0, . . . , T N -1 do 18: NSC[n] = Cost[n]/W max 19: end for 20: return NSC Algorithm 2. InitializeParticle(NSC) 1: X[idx] ← 0, idx = 0, . . . , T N × W D -1 2: for wd = 0, . . . , W D -1 do 3: for n = 0, . . . , T N -1 do 4: idx = wd × T N + n</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Initialization of the particles with a normal distribution with the standard deviation = 1.0 and with the standard deviation given by the NSC.</figDesc><graphic coords="4,310.49,67.17,234.96,223.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>sC</head><label></label><figDesc>i+1 (s), s = 1, . . . , S 24: g best = X i+1 (g index ) 25: end for 26: for wd = 0, . . . , W D -1 do 27: for n = 0, . . . , T N -1 do 28:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Kinematic model of the robot arm. The robot has three joints and four links. The first joint rotates about the y-axis, and the second and third joints rotate about the x-axis.</figDesc><graphic coords="6,122.48,67.05,84.96,167.04" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Settings for the initial trajectory and the obstacles. The trajectory optimization method modifies the initial trajectory to reduce constraint violations.</figDesc><graphic coords="6,64.98,280.87,199.92,181.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Trajectory after optimization with STOMP. The final trajectory is a combination of the initial trajectory and the trajectory modifications, which were optimized with STOMP.</figDesc><graphic coords="6,322.99,66.69,210.00,170.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Trajectory after optimization with TOD. The final trajectory is a combination of the initial trajectory and the trajectory modifications, which were optimized with DE.</figDesc><graphic coords="6,322.99,306.22,210.00,172.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Cost for each generation when the total number of steps was 50.</figDesc><graphic coords="7,61.00,67.09,210.00,156.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Cost value for each generation when the total number of steps was 10.</figDesc><graphic coords="7,61.00,358.67,210.00,157.44" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Cost for each generation when the total number of steps was 100.</figDesc><graphic coords="7,324.02,67.29,210.00,154.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Costs for each generation with various initialization methods.</figDesc><graphic coords="8,54.98,179.83,220.08,166.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Costs in TOP and TOP-TMS for each generation.TABLE VII COSTS AT THE FINAL ITERATION FOR TOP AND TOP-TMS</figDesc><graphic coords="9,56.01,269.11,220.08,167.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 14 .</head><label>14</label><figDesc>Fig.14. Manipulator for the experiment. The robot had the same configuration as in the simulation, and the end effector was modeled as a sphere with a radius of 2 cm.</figDesc><graphic coords="9,385.52,269.59,87.12,184.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Cost for trajectory optimization with the manipulator.</figDesc><graphic coords="10,54.98,66.77,220.08,166.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. Trajectory for manipulator in Cartesian coordinates.</figDesc><graphic coords="10,54.98,265.56,220.08,180.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 17 .</head><label>17</label><figDesc>Fig. 17. Commanded joint angles for the manipulator.</figDesc><graphic coords="10,318.00,67.57,220.08,113.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 18 .</head><label>18</label><figDesc>Fig. 18. Trajectories before and after optimization. The initial trajectory was optimized for the constraints</figDesc><graphic coords="10,322.99,217.36,210.00,204.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 19 .</head><label>19</label><figDesc>Fig. 19. Experimental manipulator. The suggested trajectory optimization method modified the original trajectory to avoid an obstacle and satisfy other constraints.</figDesc><graphic coords="11,56.01,66.69,220.08,140.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>When we assume that desired cost of Cost obsavo , Cost mindis , Cost minacc , and Cost minmod are Cost d obsavo , Cost d mindis , Cost d minacc , and Cost d minmod , (12) is changed to</figDesc><table><row><cell>Cost(P) =</cell><cell cols="2">Cost d sum Cost d obsavo</cell><cell cols="3">Cost obsavo +</cell><cell>Cost d sum mindis Cost d</cell><cell>Cost mindis</cell></row><row><cell></cell><cell>+</cell><cell cols="2">Cost d sum minacc Cost d</cell><cell cols="2">Cost minacc</cell></row><row><cell></cell><cell>+</cell><cell cols="3">Cost d sum minmod Cost d</cell><cell>Cost minmod</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE I COMPARISON</head><label>I</label><figDesc>OF COSTS FOR EACH CONSTRAINT</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE II COSTS</head><label>II</label><figDesc>AT THE FINAL ITERATION FOR STOMP, TOD, AND TOP</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE III COMPUTATION</head><label>III</label><figDesc>TIMES FOR STOMP, TOD, AND TOP</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE IV COMPARISON</head><label>IV</label><figDesc>OF COSTS WITH VARIOUS WEIGHTING FACTORS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE V COSTS</head><label>V</label><figDesc>AT THE FINAL ITERATION FOR TWO INITIALIZATION METHODS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>TABLE VI ENVIRONMENTAL</head><label>VI</label><figDesc>PARAMETERS FOR CONSTRUCTING TMS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>TABLE VIII COSTS</head><label>VIII</label><figDesc>FOR EACH CONSTRAINT IN THE EXPERIMENT</figDesc><table /></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported by the Ministry of Trade, Industry, and Energy (MOTIE), Korea, under the Technology Innovation Program supervised by the Korea Evaluation Institute of Industrial Technology (KEIT), under Grant 10045252, Development of Robot Task Intelligence Technology. Paper no. TII-14-0566.R2.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Planning Algorithms</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lavalle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Cambridge Univ. Press</publisher>
			<pubPlace>Cambridge, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Motion planning</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lavalle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Robot. Autom. Mag</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="79" to="89" />
			<date type="published" when="2011-03">Mar. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Real-time obstacle avoidance for manipulators and mobile robots</title>
		<author>
			<persName><forename type="first">O</forename><surname>Khatib</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Robot. Res</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="90" to="98" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Elastic bands: Connecting path planning and control</title>
		<author>
			<persName><forename type="first">S</forename><surname>Quinlan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Khatib</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Robot. Autom</title>
		<meeting>IEEE Conf. Robot. Autom</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="802" to="807" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Rapidly-exploring random trees: A new tool for path planning</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lavalle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dept. Comp. Sci., Iowa State Univ</title>
		<imprint>
			<biblScope unit="page" from="98" to="109" />
			<date type="published" when="1998">1998</date>
			<pubPlace>Ames, IA, USA</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Task space regions: A framework for pose-constrained manipulation planning</title>
		<author>
			<persName><forename type="first">D</forename><surname>Berenson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Srinivasa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Kuffner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Robot. Res</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1435" to="1460" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A sampling-based tree planner for systems with complex dynamics</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">A</forename><surname>Şucan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">E</forename><surname>Kavraki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Robot</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="116" to="131" />
			<date type="published" when="2012-02">Feb. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Sampling-based robot motion planning: A review</title>
		<author>
			<persName><forename type="first">M</forename><surname>Elbanhawi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Simic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="56" to="77" />
			<date type="published" when="2014-02">Feb. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">CHOMP: Gradient optimization techniques for efficient motion planning</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">D</forename><surname>Ratliff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Bagnell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Srinivasa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf</title>
		<meeting>IEEE Conf</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="489" to="494" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Manipulation planning with goal sets using constrained trajectory optimization</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Dragan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">D</forename><surname>Ratliff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Srinivasa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Robot. Autom</title>
		<meeting>IEEE Conf. Robot. Autom</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="4582" to="4588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">CHOMP: Covariant hamiltonian optimization for motion planning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Robot. Res</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">9-10</biblScope>
			<biblScope unit="page" from="1164" to="1193" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">STOMP: Stochastic trajectory optimization for motion planning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kalakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chitta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Theodorou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pastor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schaal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Robot. Autom</title>
		<meeting>IEEE Conf. Robot. Autom</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="4569" to="4574" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A generalized path integral control approach to reinforcement learning</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Theodorou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Buchli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schaal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="3137" to="3181" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Reinforcement learning of motor skills in high dimensions: A path integral approach</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Theodorou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Buchli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schaal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Robot. Autom</title>
		<meeting>IEEE Conf. Robot. Autom</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="2397" to="2403" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Particle swarm optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Eberhart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Neural Netw</title>
		<meeting>IEEE Int. Conf. Neural Netw</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1942" to="1948" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Real-time PID control strategy for maglev transportation system via particle swarm optimization</title>
		<author>
			<persName><forename type="first">R.-J</forename><surname>Wai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-D</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-L</forename><surname>Chuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Electron</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="629" to="646" />
			<date type="published" when="2011-02">Feb. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Optimal dispatch of electric vehicles and wind power using enhanced particle swarm optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">Y</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Informat</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="889" to="899" />
			<date type="published" when="2012-11">Nov. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Optimizing RFID network planning by using a particle swarm optimization algorithm with redundant reader elimination</title>
		<author>
			<persName><forename type="first">Y.-J</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Informat</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="900" to="912" />
			<date type="published" when="2012-11">Nov. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Comparison of parallel genetic algorithm and particle swarm optimization for real-time UAV path planning</title>
		<author>
			<persName><forename type="first">V</forename><surname>Roberge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tarbouchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Labonté</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Informat</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="132" to="141" />
			<date type="published" when="2013-02">Feb. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Solving the power economic dispatch problem with generator constraints by random drift particle swarm optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Palade</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Informat</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="222" to="232" />
			<date type="published" when="2014-02">Feb. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An intelligent particle swarm optimization for short-term traffic flow forecasting using on-road sensor systems</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">Y</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Dillon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Electron</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="4714" to="4725" />
			<date type="published" when="2013-10">Oct. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A fast color information setup using EP-like PSO for manipulator grasping color objects</title>
		<author>
			<persName><forename type="first">T.-H</forename><forename type="middle">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-C</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-J</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Informat</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="645" to="654" />
			<date type="published" when="2014-02">Feb. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Bi-velocity discrete particle swarm optimization and its application to multicast routing problem in communication networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Electron</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="7141" to="7151" />
			<date type="published" when="2014-12">Dec. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Particle swarm optimization of the multi-oscillatory LQR for a 3-phase 4-wire voltage source inverter with an LC output filter</title>
		<author>
			<persName><forename type="first">B</forename><surname>Ufnalski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kaszewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Grzesiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Electron</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="484" to="493" />
			<date type="published" when="2015-01">Jan. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Genetic Algorithms + Data Structures = Evolution Programs</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Michalewicz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Springer</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">An overview of evolutionary algorithms for parameter optimization</title>
		<author>
			<persName><forename type="first">T</forename><surname>Bäck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Schwefel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="23" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Differential evolution: A survey of the stateof-the-art</title>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="4" to="31" />
			<date type="published" when="2011-02">Feb. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Adapting arbitrary normal mutation distributions in evolution strategies: The covariance matrix adaptation</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ostermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Evol. Comput</title>
		<meeting>IEEE Int. Conf. Evol. Comput</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="312" to="317" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Bare bones differential evolution</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G H</forename><surname>Omran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Engelbrecht</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Salman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">196</biblScope>
			<biblScope unit="page" from="123" to="139" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Gaussian swarm: A novel particle swarm optimization algorithm</title>
		<author>
			<persName><forename type="first">R</forename><surname>Krohling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf</title>
		<meeting>IEEE Conf</meeting>
		<imprint>
			<date type="published" when="2004-12">Dec. 2004</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="372" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Approximating polyhedra with spheres for time-critical collision detection</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Hubbard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="179" to="210" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Medial spheres for shape approximation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Stolpner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Siddiqi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern. Anal. Mach. Intell</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1234" to="1240" />
			<date type="published" when="2012-06">Jun. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Distance transforms of sampled functions</title>
		<author>
			<persName><forename type="first">P</forename><surname>Felzenszwalb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Huttenlocher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory Comput</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="415" to="428" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Scalable recognition with a vocabulary tree</title>
		<author>
			<persName><forename type="first">D</forename><surname>Nister</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Stewenius</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE Comput. Soc. Conf. Comput. Vis. Pattern Recognit</title>
		<imprint>
			<biblScope unit="page" from="2161" to="2168" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">The coordination of arm movements: An experimentally confirmed mathematical model</title>
		<author>
			<persName><forename type="first">T</forename><surname>Flash</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hogan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Neurosci</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1688" to="1703" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
