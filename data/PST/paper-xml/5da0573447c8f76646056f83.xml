<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Intelligent Approach to Build A Deep Neural Network Based IDS for Cloud Environment Using Combination of Machine Learning Algorithms</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Zouhair</forename><surname>Chiba</surname></persName>
							<email>chiba.zouhair@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Noreddine</forename><surname>Abghour</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Khalid</forename><surname>Moussaid</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Amina</forename><surname>El Omri</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>LIMSAD</roleName><forename type="first">Mohamed</forename><surname>Rida</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Amina</forename><surname>El</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Labs Faculty of Sciences Ain Chock</orgName>
								<orgName type="institution">Hassan II University of Casablanca</orgName>
								<address>
									<postCode>20100</postCode>
									<settlement>Casablanca</settlement>
									<country key="MA">Morocco</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Intelligent Approach to Build A Deep Neural Network Based IDS for Cloud Environment Using Combination of Machine Learning Algorithms</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">1E00B2E41E39697999A0B8FAA08A0C0C</idno>
					<idno type="DOI">10.1016/j.cose.2019.06.013</idno>
					<note type="submission">Received date: 29 January 2019 Revised date: 11 June 2019 Accepted date: 22 June 2019</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T02:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Computers &amp; Security Cloud computing</term>
					<term>Network intrusion detection system</term>
					<term>Deep neural network</term>
					<term>Genetic algorithm</term>
					<term>Simulated annealing algorithm</term>
					<term>CICIDS dataset 2017</term>
					<term>NSL-KDD dataset</term>
					<term>CIDDS-001 dataset</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The appealing features of Cloud Computing continue to fuel its adoption and its integration in many sectors such industry, governments, education and entertainment. Nevertheless, uploading sensitive data to public cloud storage services poses security risks such as integrity, availability and confidentiality to organizations. Moreover, the open and distributed (decentralized) structure of the cloud has resulted this class of computing, prone to cyber attackers and intruders. Thereby, it is imperative to develop an anomaly network intrusion system to detect and prevent both inside and outside assaults in cloud environment with high detection precision and low false warnings. In this work, we propose an intelligent approach to build automatically an efficient and effective Deep Neural Network (DNN) based anomaly Network IDS using a hybrid optimization framework (IGASAA) based on Improved Genetic Algorithm (IGA) and Simulated Annealing Algorithm (SAA). The IDS resulted is called "MLIDS" (Machine Learning based Intrusion Detection System). Genetic Algorithm (GA) is improved through optimization strategies, namely Parallel Processing and Fitness Value Hashing, which reduce execution time, convergence time and save processing power. Moreover, SAA was incorporated to IGA with the aim to optimize its heuristic search. Our approach consists of using IGASAA in order to search the optimal or near-optimal combination of most relevant values of the parameters included in construction of DNN based IDS or impacting its performance, like feature selection, data normalization, architecture of DNN, activation function, learning rate and Momentum term, which ensure high detection rate, high accuracy and low false alarm rate. For simulation and validation of the proposed method, CloudSim 4.0 simulator platform and three benchmark IDS datasets were used, namely CICIDS2017, NSL-KDD version 2015 and CIDDS-001. The implementation results of our model demonstrate its ability to detect intrusions with high detection accuracy and low false alarm rate, and indicate its superiority in comparison with state-of-the-art methods.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In recent years, cloud computing has revolutionized the IT world with rapidly emerging and widely accepted paradigm for computing systems. The appealing features of Cloud computing (CC) continue to fuel its integration in many sectors including governments, industry, education, entertainment, to name few <ref type="bibr" target="#b0">[1]</ref>. CC is defined by the National Institute of Standards and Technology (NIST) as computational model that delivers convenient, on-demand, network access to a shared pool of configurable computing resources (e.g. networks, servers, applications, storage, etc.) as "service" over the Internet for satisfying computing demand of users. Those offered resources can be quickly provisioned and released with minimal management effort or service provider interactions <ref type="bibr" target="#b1">[2]</ref>. NIST introduces CC by considering its 5 main features (i.e., bandwidth, rapid flexibility, measurable, on-demand service, and Resource Pooling) and its 3 service delivering models (i.e., software as a service (SaaS), platform as a service (PaaS), and infrastructure as a service (IaaS)) <ref type="bibr" target="#b2">[3]</ref>. The pay-asyou-go and the on-demand elastic operation Cloud characteristics are changing the enterprise computing model, shifting on-premises infrastructures to off premises data centers, accessed over the Internet and managed by cloud hosting providers <ref type="bibr" target="#b3">[4]</ref>. Development of CC has aroused as a multifaceted technology with the capability to support a broad spectrum of applications. It emerged as a breakaway in usage of Internet. Hence, CC is now a topic of great impact and has proved itself as a driver for small companies in rapidly developing world. It is an anatomy for providing various beneficial services using the Internet <ref type="bibr" target="#b4">[5]</ref>.Other attractive advantages of cloud computing are hardware cost reduction (since users do not need to accommodate powerful processors or any hardware resources), continuous and quick upgrading/updating of services, high capacity of storage, global access to documents (users could access their required documents and applications just by connecting to the Internet wherever they are), parallel processing, resource sharing, acceleration and time saving. However, some of the most important challenges of cloud computing are efficiency, security, privacy and trust, control and ownership, availability, fault tolerance and fault recovery, and the costs of connection bandwidth <ref type="bibr" target="#b5">[6]</ref>.</p><p>Since cloud computing services are offered over the Internet, the data security and privacy are the major hurdles to the success of CC and its large scale adoption by organizations and companies. Moreover, the open and distributed (decentralized) nature of CC has resulted this class of computing, prone to cyber attacks and intrusions <ref type="bibr" target="#b5">[6]</ref>. NIST defines intrusion as an attempt to endanger security policies (privacy, integrity and availability) or skip computer and network security mechanisms. One of major security issues in Cloud is to detect and prevent network intrusions since the network is the backbone of Cloud, and hence vulnerabilities in network directly affect the security of Cloud.</p><p>With each passing year, not only has the sheer volume of threats increased, but the threat landscape has become more diverse, with attackers working harder to discover new avenues of attack and cover their tracks while doing so. Regardless the important evolution of the information security technologies in recent years, intrusions and attacks continue to defeat existing intrusion detection systems in Cloud environments <ref type="bibr" target="#b6">[7]</ref>. Attackers developed new sophisticated techniques able to bring down an entire Cloud platform or even many within minutes. Recently a destructive DDoS attack have brought down more than 70 vital services of Internet including Github, Twitter, Amazon, Paypal, etc. Attackers have exploiting advantages of Cloud Computing and IoT (Internet of Things) to generate a tremendous amount of attack traffic; more than 665 Gb/s <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>. Further, Epsilon leaked millions of names and email addresses from its customer database, and from Stratfor in the United States, 75,000 credit card numbers and 860,000 usernames and passwords were stolen <ref type="bibr" target="#b9">[10]</ref>. In 2017, ransomware attacks affected many banks, National Health Service hospitals in the United Kingdom, large telecom companies, and natural gas companies, while in 74 countries tens of thousands of systems were hacked <ref type="bibr" target="#b10">[11]</ref>.Thus, intrusion and attack tools have become more sophisticated challenging existing network Cloud IDSs by large volumes of network traffic data, dynamic and complex behaviors and new types of attacks. It is obvious that a network Cloud IDS should analyze large volumes of network traffic data, detect efficiently the new attack behaviors and reach high accuracy with low false. However, preprocessing, analyzing and detecting intrusions in Cloud environments using traditional techniques have become very costly in terms of computation, time and budget. Therefore, efficient intrusions detection in Cloud environments requires adoption of new intelligent techniques such as Machine Learning (ML) techniques <ref type="bibr" target="#b3">[4]</ref>.</p><p>One of the main ML techniques that has successful used in solving complex practical problems is DNN. DNNs have the ability to solve several problems confronted by the other present techniques used in intrusion detection <ref type="bibr" target="#b11">[12]</ref>. There are four advantages of intrusion detection based on DNN <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b14">15]</ref>:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head><p> DNN provides elasticity in intrusion detection process, where DNN has the ability to analyze and ensure that data right or partially right. Likewise, DNN is capable of performing analysis on data in nonlinear fashion;  DNN has the ability to process data from a number of sources in a non-linear fashion .This is very important especially when coordinated attack by multiple attackers is conducted against the network;  High speed in processing data;  High capability of generalization;  Remarkable classification performance.</p><p>In this work, we present a Machine Learning based intrusion detection system for Cloud environments. We propose an intelligent approach to build automatically a network intrusion detection system (NIDS) based on Deep Neural Network (DNN), by using a novel hybrid Framework (IGASAA) that combines an improved Genetic Algorithm (GA) by means of optimization strategies, which are Fitness Value Hashing (FVH) and Parallel Processing. SAA is incorporated to IGA in order to optimize its heuristic search. DNN has been widely studied in a machine learning research field and ambly used for practical applications in image processing computer vision and speech recognition, etc. <ref type="bibr" target="#b15">[16]</ref>. DNN is adopted to this study due to its appealing features in terms of intrusion detection cited previously. Our goal is to develop an effective and efficient Anomaly Network Intrusion Detection System called "MLIDS" (Machine Learning based Intrusion Detection System), based on Deep Neural Network (DNN), Genetic Algorithm (GA) and Simulated Annealing Algorithm (SAA), with the purpose to reduce impact of network attacks (known attacks, and unknown attacks), while ensuring higher detection rate, lower false positive rate, higher accuracy and higher precision with an affordable computational cost. Further, the proposed system is designed to be deployed both in front-end and back-end of the cloud. Consequently, that helps to detect attacks from external network of the cloud and also internal attacks either in internal physical network or virtual network within hypervisors.</p><p>The rest of this paper is organized as follows: Section 2 gives the literature surrounding network intrusion detection systems (NIDS) in Cloud Environments. Section 3 explains the background related to this study, such Deep Neural Network, Simulated Annealing Algorithm, Genetic Algorithm and its optimization strategies as Parallel processing and Fitness value hashing. Section 4 introduces the proposed system in detail, describes its work, explains the role of Simulated Annealing Algorithm in this system and provides the framework of our model. Section 5 presents positions of the proposed system in a Cloud Network. Detailed description of CICIDS 2017 NSL-KDD and CIDDS-001 datasets, experimental results obtained based on those datasets and analysis are provided in section 6. Finally, section 7 ends with the conclusions and Future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Literature Review</head><p>Hatef et al. <ref type="bibr" target="#b5">[6]</ref> have proposed a hybrid network intrusion detection system called HIDCC, which combines signature-based detection technique and anomaly-based detection technique, in order to identify efficiently the internal and external attacks in the cloud environment. Snort was used as a signature-based intrusion detection module to detect known attacks by using the known attacks rules database and derived attacks database. For trapping unknown attacks that were not detected by Snort, the anomaly detection module built by combination of learning vector quantization algorithm and C4.5 algorithm comes into play to detect those attacks. If the input packet received by that module is detected as an unknown attack, the packet is removed and a warning is generated. Therefore, the pattern of this attack is added to the known attacks database so that in the following step, when a similar attack occurs, snort would be able to detect it immediately and prevent it from penetrating the system. Further, the Apriori algorithm was used to generate a pattern for the derived attacks to update derived attack database. The implementation results of the proposed method using NSL-KDD and Eucalyptus (Open source framework for cloud computing) framework show that the intrusion coverage, intrusion detection accuracy, availability, and reliability in cloud computing systems are considerably boosted and false alarms are significantly reduced.</p><p>Saljoughi et al. <ref type="bibr" target="#b16">[17]</ref> have presented a network intrusion detection system (NIDS) for Cloud environment using Multilayer Perceptron Neural Network (MLP) and Particle Swarm Optimization Algorithm (PSO) to detect intrusions and attacks. The PSO algorithm was utilized to find the best weights and biases of the neural network (MLP), which is then trained by trained data and the obtained optimal weights. In order to have the most efficiency and security, the proposed NIDS is placed in the network, and it is connected directly to the router of the Cloud, and the others similar NIDS are installed on the processing servers. All NIDS send attack incidents to a central server with a large storage space; and if necessary, this data will be used by the proposed system. The results obtained from optimization of the neural network using the Particle Swarm algorithm showed a substantial improvement in the function of the NIDS based on MLP, in terms of the precision of detecting attacks faced by the networks and reduction of time complexities.</p><p>Mehibs and Hakims <ref type="bibr" target="#b17">[18]</ref> proposed a network intrusion detection system in cloud computing environment based Fuzzy c mean (FCM) algorithm to detect intrusion event from normal behavior, and thus,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head><p>defend network accessible Cloud resources and services from various kinds of threads and attacks. The aim of fuzzy clustering algorithm is partition the dataset into two clusters, one for attack and another for normal behavior. The proposed module consists of two-phases; the first phase is training phase where the optimum cluster centers obtain. The second phase is testing phase which used the cluster centers result from training stage to determine the cluster of new unseen samples. The KDD cup 99 dataset was used to training and testing FCM algorithm. The experiences conducted by authors' show that the proposed system is characterized by a high detection rate with low false positive alarm.</p><p>With a view to ensuring the cloud security, singh et al. <ref type="bibr" target="#b18">[19]</ref> have developed an anomaly-based IDS using a combination of Cuckoo Optimisation Feature Selection (COFS) and Naïve Bayes Algorithm (NBA). In the proposed system, COFS is employed as feature selection algorithm, while NBA is used as classification algorithm. Development of the intrusion detection model passes through the following steps; initially, the network flow data is gathered and prepared as data set. Then, irrelevant and redundant features from the data set are eliminated using the COFS. The relevant/significant features are then providen to the naïve Bayes classification algorithm to develop the intrusion-detection model. Subsequently, this model is deployed in the network to monitor the network traffic in order to detect intrusions and malicious activities. To compare the performance of the proposed system, the existing feature-selection algorithms, namely information gain-based feature selection (IGFS), chi-square feature selection (CSFS), information gain ratio-based feature selection (GRFS) and OneR feature selection (ORFS) are used jointly with NBA. As result, the obtained outcomes demonstrate that the developed model produces the better accuracy that the other methods compared.</p><p>Sharma et al. <ref type="bibr" target="#b19">[20]</ref> have presented an intrusion detection system called Hypervisor Detector developed at the hypervisor layer for detecting the intrusion behavior of the cloud network. The Hypervisor Detector is designed with a hybrid algorithm which is a fusion of WLI-FCM clustering algorithm and Back Propagation Artificial Neural Network to improve the detection accuracy of this cloud intrusion detection system. This model works in three phases. In first phase, the fuzzy clustering (WLI-FCM) module is used to split the large dataset into small distinctive clusters so as to improve the learning capability of ANN (Artificial Neural Network). Then, in second phase, the resultant clustered result is given as input to the training algorithm for learning process. A back propagation neural network is used for the training goal. Thus, different ANN modules are trained according to their cluster values. In last phase, the results of various ANN from the second phase are combined to obtain the final result. The proposed system is implemented in Cloudsim 3.0 and compared with K-means and classic FCM by means of different evaluation criterions such as number of clusters, number of Features used. The DARPA's KDD cup dataset 1999 was used for simulation. The obtained performance results demonstrate that the proposed WLI-ANN outperforms the K-means and the classic FCM algorithms for more TPR, Accuracy and low FPR. Therefore, the proposed Hypervisor Detector is more convenient for detecting the anomalies and various attacks with high detection accuracy and low false alarm rate.</p><p>Idhammad et al. <ref type="bibr" target="#b3">[4]</ref> have proposed a distributed Machine Learning based intrusion detection system for Cloud environments. The proposed system is designed to be integrated in the Cloud side by side with the edge network components of the Cloud provider. This allows to capture and analyze incoming network traffic to the edge network routers of the Cloud. The proposed IDS constitutes of five modules; namely Cloud network traffic data collector module, Network traffic data preprocessing module, anomaly detection module, network traffic synchronization module and attacks traffic classification module. The Cloud network traffic data collector module captures the incoming network traffic to the Cloud on each one of the edge network routers in a 5 minutes time window basis. The captured data are then preprocessed by Network traffic data preprocessing module. In preprocessing operation, several techniques are used to format, clean and normalize the network traffic data. Afterwards, the preprocessed data are passed to anomaly detection module which utilizes anomaly detection Naïve Bayes model to classify the network traffic data into normal or abnormal traffic. Next, the suspected traffic at each network router side is synchronized to central server by network traffic synchronization module. Finally, the attacks traffic classification module come in play; it uses an ensemble learning classifier based on Random Forest to perform a multi-class classification on the malicious network traffic data available on the central storage server and detect the types of each attack, and so, early take suitable action for it. The proposed IDS is implemented on the Google Cloud Platform and tested using the CIDDS-001public dataset. The obtained results indicate that the proposed system outperforms the standard Random Forest tested directly on the CIDDS-001 dataset in terms of accuracy, false positive rate and running time. This system achieved an average accuracy of 97%, an average false positive rate of 0.21% and an average running time of 6.23s.</p><p>Navimipour and Hajimirzaei <ref type="bibr" target="#b20">[21]</ref> have developed new intrusion detection system (IDS) based on a combination of a multilayer perceptron (MLP) network, and artificial bee colony (ABC) and Fuzzy C-means (FCM) clustering algorithm. An ANN can operate alone in an IDS, but the combination of ANN, ABC, and fuzzy clustering makes an IDS more powerful and efficient. The proposed method involves three phases, which are training, validation, and testing. The homogeneous subsets of training data are prepared with fuzzy clustering. Consequently, the training speed rate is enhanced by separating the dataset into uniform subsets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head><p>During training phase, after performing the clustering, MLP network with backpropagation (BP) algorithm is used to build and train the IDS model. The steepest descent method is adapted to the BP learning rule. The weight and threshold value of the network are adjusted by BP to reach a low-error sum of squares. With BP, the gradient descent method is used to balance the weight values of all layers. Generally, the initial weights of the network are generated in random way within a certain interval; the training starts with this starting point and proceeds step by step to a minimum error. The ABC helps the MLP to determine ideal/optimal values for linkage weights and biases more rapidly. The performance of the system is precisely assessed in the validation phase. Finally, in the testing phase, intrusion detection is processed by passing the test data through the previouslytrained model. The CloudSim simulator and NSL-KDD dataset are used to verify the proposed model. Various evaluation criteria, such Mean absolute error (MAE), root mean square error (RMSE), and the kappa statistic are used to compare similar IDSs with the proposed method. The obtained results have demonstrated the superiority of the proposed method in comparison with other state-of-the-art methods.</p><p>As Eliminating all the irrelevant features from training dataset is a better way to enhance the classification accuracy and yield a proficient IDS, Ghosh et al. <ref type="bibr" target="#b21">[22]</ref> have proposed and implemented a novel feature selection method CS-PSO for producing an efficient IDS that classify attacks accurately and rapidly in cloud environment. Further, existence of trivial feature set in the training data enhances the memory space and training time. The proposed IDS model is comprised of two components; the first is CS-PSO algorithm, which is prepared by combining the CS and PSO methods, is used for feature selection. While the second is Logistic Regression (LR) classifier that classify samples extracted from NSL-KDD dataset as normal or attack. In the experiments conducted by the authors based on NSL-KDD dataset, the CS-PSO algorithm proves its efficacy by solving the trade compromisation between exploitation and exploration. In the proposed model, authors have employed the efficiency of PSO in finding the best value in a local area and is a very good example of exploitation concept. To take care of the exploration process the CS approach does its job through the use of Levy Flight technique. It jumps into random positions to get better global optimized value. The conjunction of these two nature inspired techniques have brought some fruitful results with high accuracy reached by Logistic Regression classifier and thus producing proficient IDS in Cloud Environment.</p><p>Deshpande et al. <ref type="bibr" target="#b22">[23]</ref> have presented a network-based IDS framework for the cloud scenario to detect and prevent the DDoS attack. The proposed model relies on an adaptive mechanism based on statistical anomaly detection and distributed network-based filtering algorithm for early DDoS attack detection in Cloud environment. In Cloud, DDoS filters are distributed on different hosts. Each host holds two kinds of nodes or VMs, i.e. a coordinator VM and an ordinary VM (OVM). Each OVM generates a local profile on the basis of normal user behavior and shares this profile with the coordinator VM. The coordinator VM, then, generates an averaged profile for new or migrated VM by the weekly local profile. As soon as a VM is installed and it generates or receives profiles, it is converted into the existing state (ordinary VM). Any node/VM from the available existing nodes may be chosen as a coordinator node by way of static or dynamic selection. Each VM, either OVM or coordinator VM comprises a DDoS filter. A DDoS filter implemented in an OVM includes two components, namely Packet Filter and Profile Generator. While, for the DDoS filter hosted in on coordinator VM, it contains three items that is to say Packet Filter, Node Monitor and Adaptive Profile Generator. The developed model goes through two phases; non-intrusive phase (profile generation phase) and intrusive phase (also known as packet filtering and updating phase). The laboratory experimentations were carried out to validate the accuracy and effectiveness of the developed approach, by using DARPA data set and various DDoS attacks in OpenNebula Cloud environment. The obtained results demonstrate that the proposed model is able to detect attacks with admissible rates, and is achieves a very low false positive rate and acceptable false negative rate.</p><p>In the paper <ref type="bibr" target="#b23">[24]</ref>, an anomaly-based network intrusion detection system (NIDS) have been developed to detect different types of attacks (R2L, U2R, Dos, Probe) in the cloud environment. In the proposed model, Support Vector Machine (SVM) was employed as the classifier of the network connections. To reinforce the efficiency of intrusion detection process, decrease its detection time and build a lightweight IDS, the binarybased Particle Swarm Optimization (BPSO) was adopted to reduce the dimensionality of the network connection features by selecting the most relevant/optimal features subset from the incoming network data flow. Further, as the values of the SVM control parameters, namely the penalty parameter (C) and the RBF kernel parameter (σ) have a great impact on its performance; SPSO (standard-based binary-based Particle Swarm Optimization) was chosen to search the best values these parameters in order to optimize the SVM performance. The proposed NIDS was trained and tested on the benchmark NSL-KDD dataset, and the evaluation results proved that it outperforms other related IDSs with a higher classification accuracy, TPR, TNR and a lower FPR.</p><p>Ghanshala et al. <ref type="bibr" target="#b24">[25]</ref> have proposed a light weighted and adaptable intrusion detection approach named as Behavior-based Network Intrusion Detection (BNID) at network-layer in Cloud Environment. A security framework was developed by the authors for deployment of BNID at Cloud Network Node (CNN) of the cloud network to defend the cloud machines against network attacks. BNID captures the behavior of TVM (Tenant Virtual Machines) communication, analyzes it and detects the malicious network pattern at the network-layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head><p>Thus, the need of deploying security tool at each TVM is eliminated. For traffic behavior analysis, BNID uses statistical learning techniques with feature selection. In fact, firstly, Network traffic is captured and important features are extracted using fusion of two popular feature selection methods i.e. Recursive Feature Elimination (RFE) and Chi Square. This removes the less relevant features and accelerate the processing of data, which improves the classifiers' performance. Secondly, the processed traffic resulted from the former step (capture &amp; feature selection), is analyzed using Random Forest (RF) classifier for detecting intrusive activities. Like other supervised learning techniques, RF works in two stages; learning stage and detection stage. BNID compromises four detection modules namely (1) Packet Capture (PacCap()), (2) Packet Pre-processor (PacPre()), (3) Detection Engine (DetEng()) and (4) Alert and Log Generator (AltGen()). PacCap() generates the collection of packet capture information logs. It also loads the known attack dataset that serves as training dataset providing the behavior statistics of different types of attacks. DetEng() is responsible for learning and detecting the attack behavior. AltGen() generates the alerts once attack signal is received from DetEng() module. A report is generated and sent to cloud administrator for further analysis. Experimental results based on ITOC dataset demonstrates that BNIDS yields better performance than Naive Bayes (NB) and Decision Tree C 4.5 (DT) techniques in terms of intrusion detection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Related Background</head><p>This section provides the necessary background to understand the problem in hand. First subsection shed the light on Deep Neural Network (DNN). Next subsection introduces and describes the operation of a standard GA, followed by a presentation in the third subsection of some optimization strategies applied to GA in this study, namely Parallel Processing and Fitness Value Hashing. Finally, the last subsection presents Simulated Annealing Algorithm (SAA).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Deep Neural Network (DNN)</head><p>Deep Neural Network (DNN) is a multilayer feed forward neural network <ref type="bibr" target="#b25">[26]</ref>. DNN contains an input layer, a number of hidden layers and an output layer. In this network, the information moves in only one direction, forward from the input nodes, through the hidden nodes and to the output nodes. There are no cycles or loops in the network. Each neuron in one layer has direct connections to the neurons in the subsequent layers. The Back Propagation Learning Algorithm is used for learning the weights of the network <ref type="bibr" target="#b26">[27]</ref>.</p><p>Feed forward neural networks are popular due to two factors <ref type="bibr" target="#b26">[27]</ref>:</p><p> They have the ability to give very closely related approximations for complex multivariate nonlinear function directly from input values;  They have a strong modelling capability for a large class of natural and artificial phenomena.</p><p>In the past, with limited computational power, deep neural networks were already overtaken by other approaches such as kernel methods. However, in recent years, with the significant growth in computational power (particularly in GPUs and distributed computing) and access to large labeled datasets paved the way for its return <ref type="bibr" target="#b27">[28]</ref>.</p><p>DNN grew to prominence in 2007, with promising results on perceptual problems such as hearing and seeing problems that humans are very good at, but have long been subtle for the machines. It has enabled the computer scientists to harness the vast computational power and use large volumes of data audio, video, to teach computers how to do things that seem natural and intuitive for humans, such as spotting objects in the photos, recognizing words or sentences, and translating a document into other language. It has made it possible for machines to output the transcript from an audio clip speech recognition, to identify whether a mail is spam or not, likelihood of whether a customer will repay his loan and so on; as long as there is enough data to train machines, the possibilities are endless. It has achieved state of-the-art results on many applications, such as natural language parsing, language modeling, computer vision and image processing, speech recognition <ref type="bibr" target="#b28">[29]</ref>, playing the challenging game of Go, pixels-to-controls video game playing, and in other applications. Today, many tech giant companies Facebook, Baidu, Amazon, Microsoft, and Google have commercially deployed DNN applications. These companies have vast amount of data and DNN works well whenever there are vast volumes of data and complex problems to solve <ref type="bibr" target="#b27">[28]</ref>. In particular, DNN has made good impact in historically difficult areas of machine learning: o Ability to answer natural language questions.</p><formula xml:id="formula_0">A C C E P T E D M A N U S C</formula><p>The exceptional performance of DNN models can be mainly attributed to their flexibility in representing a rich set of highly nonlinear functions <ref type="bibr" target="#b15">[16]</ref> as well as the devised methods for efficient training of these powerful networks. Furthermore, employing various regularization techniques ensured that DNN models with huge numbers of free parameters are statistically desirable in the sense that they will generalize well to unseen data. DNN are used across different applications (e.g., image classification, speech recognition, language modeling, and information retrieval) with relatively little adjustments. Therefore, DNN models seem to be domainoblivious in the sense that in order to use it across different applications, only a small amount of domain specific customizations is required. Ideally, the domain-obliviousness of DNN is advantageous, as having access to a universal and generic model reduces the hassles of adapting for new applications.</p><p>DNN will have many successes in the near future as it requires little hand engineering and thus can take advantage of vast amount of data and computation power. DNN has succeeded in previously unsolved problems which were quite difficult to resolve using machine learning as well as other shallow networks. In near future, DNN may herald an age where it may assist humans in software development, science, and many more. Integrating DNN with the whole toolbox of other artificial intelligence techniques may accomplish startling things that will have great impact in the field of technology <ref type="bibr" target="#b27">[28]</ref>.</p><p>For the reasons cited above, we have chosen DNN for building a powerful and efficient newark IDS for cloud environment with the aim to reduce impact of network attacks (known attacks, and unknown attacks), while ensuring higher detection rate, lower false positive rate, higher accuracy and higher precision with an affordable computational cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Operation of Deep Neural Network</head><p>Deep neural network <ref type="bibr" target="#b27">[28]</ref> map input to desired or expected output through a succession of layered transformations, and that these layered transformations are learned by exposure to the training examples. DNN learns per example. You give DNN samples of what you wish it to do and it modifies the network's weights so that, whenever training is accomplished, it will deliver you the demanded output for a peculiar input.</p><p>The transformations that a layer performs to its input are determined by the layer's weights, which are fundamentally a group of numbers. In other way, transformations carried out by a layer are parameterized by its weights. In this context, learning can be defined as the process of finding the values of the weights of connections of all layers in the network in such a way that input examples can be accurately mapped to their corresponding targets. A DNN compromises thousands of connections, and finding the appropriate values of their weights is not an easy task, notably when the value of one weight has an influence on the value of other weight.</p><p>With a view to train a deep network one needs to find out how far the computed output of the network is from the target value. This measure is procured by using a loss function, also named as objective function. The objective function computes the gap between the forecasted output obtain from the network and the right expected value for a particular example. This provides a measurement of how well the network has learnt a peculiar example. The aim of the training is to find the values for the weights that lessen the selected error function. The difference procured is afterwards utilized as a feedback signal to adjust the weights of the network, in a manner that loss score for the ongoing example is reduced. This adjustment is performed by the optimizer backpropagation algorithm, the principal algorithm in DNN.</p><p>As shown by figure <ref type="figure" target="#fig_0">1</ref>, Backpropagation algorithm implies attributing arbitrary values to the weight vectors in the beginning, so that the network just performs a series of random transformations. At the start, the output procured from the network can be far from what it should be, and consequently the loss score may be very elevated. With each example that is presented to the network, the weights are adjusted in such a direction that makes the loss score to diminish. This process is repeated a number of times, till the weight values that minimize the loss function are gained. A network is said to have learned when the output values produced by the network are as near as possible to the desired values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Role of Learning Rate and Momentum Term in Learning Phase of DNN</head><p>As highlighted in the former subsection, the learning process of Back Propagation Learning Algorithm, which used to train DNN, is divided into two parts: the forward propagation process and the error back propagation process. Durant this process, Back Propagation Learning Algorithm uses two prominent and crucial parameters namely Learning rate (η) and Momentum term (α) shown in figure <ref type="figure" target="#fig_0">1</ref> to adjust the weights of connections between neurons in neural network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head> Learning rate (η):</head><p>The learning rate is a relatively small constant that indicates the relative modification in weights. If the learning rate is too low, the network will learn very slowly. However, if the learning rate is too high, the network may oscillate around minimum point, overshooting the lowest point with each weight adjustment, but never actually reaching it. Habitually, the learning rate is very small, located in the interval [0; 1].  Momentum term (α): The introduction of the momentum term is used to accelerate the learning process by "encouraging" the weight changes to continue in the same direction with larger steps. Furthermore, the momentum term prevents the learning process from settling in a local minimum by "over stepping" the small "hill". Typically, the momentum term has a value between 0 and 1 <ref type="bibr" target="#b29">[30]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Genetic Algorithm</head><p>John Holland <ref type="bibr" target="#b30">[31]</ref> in 1970s introduced familiar problem solving algorithms called Genetic Algorithms (GAs) which is based on the principles of biological development, natural selection and genetic recombination. GAs are computational intelligence techniques and search procedures often used for optimization problems <ref type="bibr" target="#b31">[32]</ref>. The solution to a given problem is encoded in chromosome (each chromosome represents an individual) like data structure. Each parameter in a chromosome is called as gene. Genes are selected according to the problem definition. These are encoded on bits, character or numbers. The set of generated chromosome is called a population <ref type="bibr" target="#b32">[33]</ref>. An evaluation function is used to calculate the goodness of each chromosome according to the desired solution; this function is known as "Fitness Function". GA evolves the group of chromosomes to a population of quality individuals through: selection (usually random selection), cross-over (recombination to Figure <ref type="figure" target="#fig_2">2</ref> illustrates the process of a genetic algorithm. GA process begins with series of initial solutions is initially generated (random population) and through a combination of algorithms similar to an evolutionary process (often a combination of elitism, selection, crossover and mutation) the process works towards evolving solutions having better "goodness" as evaluated by the fitness function. In every generation, the fitness of these chromosomes is checked. To determine the fitness of the chromosomes fitness function is used and then fittest chromosomes are selected. The chromosomes which have poor fitness value are discarded. The selected fit chromosomes undergo crossover, mutation to form a new population. This new population is used for the next generation. Normally, the algorithm terminates when either a set number of generations or a satisfactory fitness level has been achieved. Genetic algorithm is composed of three operators. They are reproduction or selection, crossover or recombination and mutation <ref type="bibr" target="#b33">[34]</ref>. In the present day, genetic algorithms are used by large companies to optimize schedules and design products that range from large aircraft to tiny computer chips to medicines <ref type="bibr" target="#b34">[36]</ref>. The Los Alamos National Laboratory has used them to analyze the data from satellites. Furthermore, the 2007 NASA ST5 spacecraft antenna; this complicated shape was found by an evolutionary computer design program based on GA to create the best  Not guarantee the optimal solution, it can find a near-optimal solution even for big and complex problems in a short computational time <ref type="bibr" target="#b35">[38]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Goldberg Schema Theory of Genetic Algorithm</head><p>Historically, genetic algorithms are the oldest and have therefore been the most studied theoretically. Goldberg <ref type="bibr" target="#b36">[39]</ref> has largely developed the theory of schemas, which gives a theoretical justification for the efficacy of the field of genetic algorithms <ref type="bibr" target="#b37">[40]</ref>.</p><p>The schema theorem explains the power of the GA in terms of how schemata are processed. Individuals in the population are given opportunities to reproduce and produce offspring. The number of such opportunities an individual receives is in proportion to its fitness, hence the better individuals contribute more of their genes to the next generation. It is assumed that an individual's high fitness is due to the fact that it contains good schemata. By passing on more of these good schemata to the next generation, we increase the likelihood of finding even better solutions. Holland showed that the optimum way to explore the search space is to allocate reproductive trials to individuals in proportion to their fitness relative to the rest of the population. In this way, good schemata receive an exponentially increasing number of trials in successive generations. This is called the schema theorem. Schemata are implicitly handled by the GA in parallel, which Holland calls implicit parallelism. This is one of the explanations for the good performance of GAs. The intention of the schema theory is to form the basis for a better understanding of how the genetic algorithm works <ref type="bibr" target="#b38">[41]</ref>. Schema Theory demonstrates the following for GA:  The information represented by portions of strings (genes) will be more easily transmitted and the "best" portions will be gradually selected and assembled within the same (or some) individual (s);  The schemas (genes) best adapted to the optimization problem appear with an exponentially increasing occurrence over the generations;  The place reserved for individuals whose adaptation is above average is increasing exponentially over the generations.</p><p>GAs are very promising in the computer security field, especially in IDSs. They have been applied for intrusion detection since the 1990's, and still being used up until the current time <ref type="bibr" target="#b39">[42]</ref>.</p><p>As mentioned in section 1, our aim in this study is to build automatically an optimal IDS based on DNN. To accomplish that, we have conducted an analysis study of related works, in order to determinate the parameters and their pertinent values involved in building of such IDS or affecting its performance. As our problem is an optimization problem, and taking in consideration the strong characteristics cited above of GA, we have selected GA to reach this goal. GA allows to convert the problem in hand into a model by using a chromosome-like data structure and evolve the initial population of chromosomes using selection, crossover, and mutation operators until convergence of GA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Optimization Strategies for Genetic Algorithm</head><p>With the fitness function, typically being the most processing demanding component of genetic algorithm (GA), it makes sense to focus on improvement of the fitness function to see the best return in performance. In this subsection, we will explore two optimization strategies that are used in this work to improve performance of GA by optimizing the fitness function, namely Parallel Processing and Fitness Value Hashing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Parallel Processing</head><p>One of the easiest approaches to achieve a performance enhancement of GA is by optimizing the fitness function. The fitness function is typically the most computationally expensive component; and it is often going</p><formula xml:id="formula_1">ACCEPTED MANUSCRIPT A C C E P T E D M A N U S C R I P T</formula><p>to be the bottleneck of GA. This makes it an ideal candidate for multi-core optimization. By using multiple cores, it is possible to compute the fitness of numerous individuals simultaneously, which makes a tremendous difference when there are often hundreds of individuals to evaluate per population. Java 8 provides some very useful libraries that make supporting parallel processing in our GA much easier. Using Java's IntStream, we can implement parallel processing in our fitness function without worrying about the fine details of parallel processing (such as the number of cores we need to support); it will instead create an optimal number of threads depending on the number of cores available in our multi-core system. Hence, by using parallel processing, fitness function will be able to run across multiple cores of the computer, consequently, it is possible to considerably reduce the amount of time the GA spends evaluating individuals and, so reduce the overall time of execution of GA, and accelerate convergence process <ref type="bibr" target="#b40">[43]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Fitness Value Hashing</head><p>Fitness Value Hashing is another strategy that can reduce the amount of time spent computing fitness values by storing previously calculated fitness values in a hash table <ref type="bibr" target="#b40">[43]</ref>. During running of GA, solutions found previously will occasionally be revisited due to the random mutations and recombinations of individuals. This occasional revisiting of solutions becomes more common as GA converges and begins to find solutions in an increasingly smaller area of the search space. Each time a solution is revisited its fitness value needs to be recalculated, wasting processing power on recurrent, duplicate computations. Luckily, this can be easily fixed by storing fitness values in a hash table after they have been computed. When a previously visited solution is revisited, its fitness value can be retrieved from the hash table, avoiding the need to recalculate it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Simulated Annealing Algorithm</head><p>Simulated Annealing is a meta-heuristic and a popular search algorithm that has proven to be effective in solving many difficult problems, including NP-hardy combinatorial problems by an analogy to statistical mechanics. The idea of SA comes from a paper published by Metropolis et al <ref type="bibr" target="#b41">[44]</ref> in 1953. The algorithm in this paper simulated the cooling of material in a heat bath. This is a process known as annealing in statistical mechanics. It is a physical process which is often performed in order to relax the system to a state with minimum free energy. In this process, a solid in a heat bath is heated up by increasing the temperature of the bath until the solid melts into liquid, and then the temperature is lowered slowly. In the liquid phase, all particles of the solid arrange themselves randomly. In the ground state, the particles are arranged in a highly structured lattice and the energy of the system is minimal. The ground state of the solid is obtained only if the maximum temperature is sufficiently high and the cooling is performed sufficiently slow. Otherwise, the solid will be frozen into a metastable state rather than into the ground state.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The Proposed System</head><p>This section describes in detail our new proposed IDS and gives the model of that IDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Approach of Our Proposed System</head><p>In this work, we propose an intelligent approach to build automatically a network intrusion detection system (NIDS) based on Deep Neural Network (DNN), by using a novel hybrid Framework (IGASAA) that combines an improved Genetic Algorithm (IGA) and Simulated Annealing Algorithm (SAA). Genetic Algorithm (GA) is improved through optimization strategies that are Parallel Processing and Fitness Value Hashing, which reduce execution time, convergence time and save processing power <ref type="bibr" target="#b40">[43]</ref>. Our DNN is a Back Propagation Neural network (BPNN) with one input layer, two hidden layers and one output layer. The number of nodes in the input layer corresponds to the number of attributes/features in the vector of connection instance extracted form IDS dataset and presented to DNN, while the number of nodes in each hidden layer will be generated by IGA. Whereas, the output layer comprises one node, which gives a value of 1 in case of classification of input pattern by DNN as normal traffic; otherwise, it provides a value of 0 to indicate an intrusion. Our approach consists of mainly four stages. In two first stages, we have studied deeply several works related to intrusion detection systems based on BPNN and DNN.</p><p>The first stage was focused on the determination of the most relevant parameters employed to construct that type of classifier or that impact its performance. As shown by table 1, at the end of our study, we have concluded that the most important parameters are <ref type="bibr" target="#b42">[45]</ref>:</p><p>o The number of selected features/attributes, that corresponds to the number of nodes in the input layer;  The most of the existing network traffic datasets that are publicly available are either outdated, unlabelled or unreliable. Some of these suffer from lack of traffic diversity and volume, some do not cover the variety of known attacks, while others are missing or hiding features that are present in the most common network protocols. However, the CICIDS 2017 dataset <ref type="bibr" target="#b52">[55]</ref> generated in 2017 by the Canadian Institute of Cybersecurity overcomes those issues <ref type="bibr" target="#b53">[56]</ref>. It represents a dataset that satisfy the eleven indispensable characteristics of a valid IDS dataset, namely Anonymity, Attack Diversity, Complete Capture, Complete Interaction, Complete Network Configuration, Available Protocols, Complete Traffic, Feature Set, Metadata, Heterogeneity and Labelling <ref type="bibr" target="#b54">[57]</ref> . Thus, for the purpose of training and evaluating our proposed system, the CICIDS2017 dataset was primarily used. Thereby, the number of inputs in our DNN is fixed at 70 inputs, which corresponds to the number of features selected from CICIDS2017 dataset (subsection 6.2). In addition, we have tested our approach on NSL-KDD and CIDD-001 datasets as outlined in subsections 6.3 and 6.4 respectively. Accordingly, we have also build two other DNNs, on one hand with 12 inputs when using the NSL-KDD dataset, and on the other hand with 10 inputs while using CIDDS-001 dataset.</p><p>The third stage: For successful use of IGA, two key elements must be well defined; the representation/encoding of chromosomes and the Fitness Function:</p><p> Chromosome encoding/representation: In our study, we have chosen the binary representation for chromosomes. Each chromosome is a possible combination of values of the pertinent parameters mentioned previously, that will be used to construct an instance of IDS based DNN. Each parameter constitutes a gene in the chromosome, as indicated by table 2. Hence, each chromosome takes the form of a binary string of 58 bits. Binary substrings corresponding to learning rate and Momentum term genes of a chromosome are converted into decimal values, then normalized using the Min-Max normalization technique to get values between 0 and 1, which will be serve as Learning rate and Momentum term of the IDS generated based on that chromosome.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head> Fitness Function or Evaluation Function:</head><p>We have chosen the AUC metric <ref type="bibr" target="#b55">[58]</ref> as a score (fitness function) of individuals of IGA to assess their adaptability to the optimization problem. The AUC is a performance metric of IDSs, that represents the ability to avoid misclassifications of network packets. From our point of view, it is a good trade-off between DR (Detection Rate) metric and FPR (False Positive Rate) metric. In effect, this is due to the fact that AUC is the arithmetic mean of DR and TNR (1-FPR) as shown by equation 1 of the AUC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Number of attributes/features Normalization Activation function</head><p>Different values</p><formula xml:id="formula_2">-- Mean range [0,1] (Min- Max) [51] - Statistical normalization (Z-score) [52] - Hyperbolic tangent [53] - Sigmoid [54] A C C E P T E D M A N U S C R I P T 1 22 DR FPR DR TNR AUC (1)</formula><p>As it is known, a good IDS is one that achieves a high detection rate (DR) and a low positive rate (FPR). As demonstrated by equation 1, as the value of the DR measure increases and that of FPR measure decreases, consequently, the value of AUC increases. Therefore, from our point of view, AUC is the best metric for evaluating an IDS. That is the reason of choice of AUC as fitness function.</p><p>The fourth stage: As shown by figure <ref type="figure">3</ref>, IGA process begins with a randomly generated population of 1000 individuals (potential solutions) represented by their chromosomes; each chromosome takes the form of a binary string of 58 bits. Then, this population evolves through several generations by means of genetic operations such elitism, selection, recombination (crossover) and mutation until stopping or optimization criterion of IGA is met. At each generation, for each chromosome, the Fitness Hash Table (FHT) is checked to verify if this chromosome is already visited, in this case, its fitness value is pulled from FHT. Otherwise, this chromosome is used to create an instance of an IDS based on DNN. Afterwards, this IDS firstly goes through the learning phase, then passes to the test/evaluation phase and returns the values of performance metrics calculated at the end of last phase. Among those performance metrics, we select the pertinent of them, namely AUC metric to serve as "Fitness Function" for evaluation of goodness of chromosomes, and the AUC (fitness value) is stored in FHT. From one generation to the next, IGA converges towards the global optimum through genetic operations cited previously. Finally, the best individual (chromosome) is picked out as the final result once the optimization criterion is met. In our work, termination condition adopted for IGA is production of 200 generations. Hence, the best chromosome resulted corresponds to the optimal or near-optimal values of parameters used to build an ideal IDS based DNN, which yields high detection rate and low false alarm rate.</p><p>In IGA module, we have employed the following algorithms/methods: The aim of using Simulated Annealing Algorithm in our framework of optimization is to optimize Improved Genetic Algorithm (IGA) process. Simulated Annealing Algorithm is a hill climbing algorithm which initially accepts worse solutions at a high rate; then as the algorithm runs, it gradually reduces the rate in which worse solutions are accepted. One of the easiest methods to implement this characteristic into a genetic algorithm is by updating the mutation and crossover rate to start with a high rate then gradually decrease the rate of mutation and crossover as the algorithm progresses. This initial high mutation and crossover rate will drive IGA to search a large area of the search space. Then as the mutation and crossover rate is slowly reduced, IGA should begin to focus its search on areas of the search space where fitness values are higher.</p><p>To vary the mutation and crossover rate/probability, we have used a temperature variable, which starts high, or "hot", and slowly decreases, or "cools" by means of a Cool rate function as the algorithm runs. This heating and cooling technique is directly inspired by the process of annealing found in metallurgy. As displayed in figure <ref type="figure" target="#fig_6">4</ref>, at the end of each iteration/generation of IGA, the temperature is cooled slightly, which decreases the mutation and crossover rate that will be used in the next generation of IGA <ref type="bibr" target="#b40">[43]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Framework of Our Proposed MLIDS</head><p>In this section, with the purpose of explanation of operation of our framework, we use CICIDS 2017 as IDS dataset. However, experimentation has been performed with three datasets, that is to say, CICIDS 2017, NSL-KDD and CIDDS-001 datasets.</p><p>Our system "MLIDS" passes firstly through an optimization stage by using IGASAA in order to find the optimal or near-optimal values of the parameters used to build an ideal IDS based DNN. Consequently, it becomes ready to operate in operation/normal mode. The framework of our system MLIDS in optimization mode consists of four modules as illustrated in figure <ref type="figure" target="#fig_6">4</ref>. achieved at the end of IGA process. Thus, the optimal values of the parameters to construct an IDS based DNN are found.</p><p>After passing through optimization phase and finding the optimal parameters to construct an IDS based DNN, the ideal MLIDS operates in operation/normal mode as shown in figure <ref type="figure" target="#fig_7">5</ref>, to predict the class of the given records or packets extracted from CICIDS2017 dataset. In case of normal sample, it is allowed to access to Cloud infrastructure, else it is discarded and the alert system module is notified.</p><p> Alert System: Generates alerts about intrusions that are determined by optimized detection module based on DNN, and sends them to the security administrator for warning and further investigation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Positions of the Proposed System in a Cloud Network</head><p>The goal of the proposed MLIDS is to detect intruders and suspicious activities in and around the cloud computing environment by monitoring network traffic, while maintaining confidentiality, availability, integrity and performance of cloud resources and offered services. It allows detecting and stopping attacks in real time impairing the security of the Cloud Datacenter. As shown in figure <ref type="figure" target="#fig_8">6</ref>, we propose to deploy our NIDS on two strategic positions:</p><p> Front-End of Cloud: Placing NIDS on front end of Cloud helps to detect network intrusions or attacks coming from external network of Cloud, launched from zombie hosts or by hackers connected to the Internet who attempt to bypass the firewall in order to access the internal cloud, which can be a private one. Therefore, NIDS plays the role of the second line of defense behind the firewall to overcome its limitations <ref type="bibr" target="#b56">[59]</ref>, and acts as an additional preventive layer of security <ref type="bibr" target="#b57">[60]</ref>.  Back-End of Cloud: Positioning NIDS sensors on processing servers located at back end of Cloud helps to detect intrusions occurring on its internal network. In a virtual environment, we have many virtual machines on the same physical server, and they can inter-communicate through the virtual switch without leaving the physical server. Thus, network security devices on the LAN can't monitor this network traffic; if the traffic does not need to pass through security appliances primarily a firewall, therefore, a loophole for all kinds of security attacks will be opened. Thus, the starting point of an attacker/hacker is compromising only one VM, and using it as a springboard to take control of the other VMs within the same hypervisor. This is generally done without being monitored or detected, giving the attacker a huge hack domain. Moreover, the virtual environment is exposed to various threats and risks, centered mostly on the hypervisor: Hyper jacking, VM escape, VM migration, VM theft and Inter-VM traffic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M</head><p>A N U S C R I P T Our NIDS is designed to monitor that virtual traffic, and also the flow of traffic from or to the processing server on the physical network. We haven't chosen to install the NIDS on each virtual machine because it will be an additional burden; it will weigh down the work of the VM. Further, such configuration requires multiple instances of NIDS, which makes complex management of NIDS whereas VMs are dynamically migrated, provisioned or de-provisioned.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Experimentation and Discussion</head><p>The experiments have been conducted using a Windows 10 -64 bits PC with 32 GB RAM and CPU Intel(R) Core-i7 2700K CPU. For simulation, we have used CloudSim simulator 4.0. In the first subsection of the current section, we give the performance metrics employed for assessment of our model. Next, the second subsection presents in detail the main dataset used in our study namely CICIDS2017 for implementation and validation of our model, along with the data pre-processing procedure, followed by experimental results obtained. Furthermore, evaluation of our approach on other IDS datasets was carried out, hence we give the outcomes of the experiments performed on NSL-KDD version 2015 and CIDD-001 dataset in subsections three and four respectively. At the close of this section, we provide a comparative study between performance of our model and other recent state-of art approaches on the basis of experimental results obtained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Performance Metrics</head><p>The ability of IDS to making the correct predictions, consider the measure of its effectiveness. Depending on the comparisons between the results that predict via intrusion detection system and the true nature of the event, there are four prospect outputs which are illustrated in table 3 known as confusion matrix. These four outcomes are true negative (TN) which indicates the correct prediction of normal behavior, true positive (TP) which indicates the correct predication of attack behavior, false positive (FP) which indicates the wrong predication of normal behavior as attack and false negative (FN) which indicates mistake predication of attack behavior as normal. Both (TN) and (TP) are considered guide of the correct operation of the IDS. Besides, FN and FP rates reduce the effectiveness of IDS where FP reduce the capability of system in detection and FN will make the system susceptible to intrusion <ref type="bibr" target="#b17">[18]</ref>.Therefore, for an IDS to be effective, the FP and FN rates should be minimized, and TP and TN rates to be maximized. Based on confusion matrix shown in table <ref type="table">3</ref>, to determine the performance of our generated IDSs the following metrics used for the numerical evaluation. These performance criteria are not dependent on the size of the training and testing samples and can be really helpful in assessing the performance of the ensemble model <ref type="bibr" target="#b58">[61,</ref><ref type="bibr" target="#b59">62]</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Data Preprocessing</head><p>With the aim to make the records in both training and testing subsets extracted from the three IDS datasets used in this study ready for processing by our proposed IDS, they must be handled using the two following operations:</p><p>1) Numericalization or categorical encoding: This operation refers to the process of assigning numeric values to nonnumeric features/attributes so as to make the processing task much simpler, as numeric data ca be easily handled upon <ref type="bibr" target="#b42">[45]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head><p>2) Normalization: The attributes with high values can dominate the results than the attributes with lower values .This dominance can be reduced by the process of normalization, i.e., scaling the values within certain range. Normalization is defined as is the process of enclosing the values of attributes to a specific range to minimize the complexity involved in handling data spread over an absolute range and type of values. Various features have values spread over large ranges and types. Hence, they are to be minimized to a specific range being useful to enable proper processing and analysis of the data <ref type="bibr" target="#b43">[46]</ref>. To normalize data, the mean-range [0, 1] (Min-Max) normalization and Statistical normalization (Z-score) methods are used. The reason for choosing these approaches is that they yield better results in terms of time and classification rate <ref type="bibr" target="#b42">[45]</ref>.</p><p>Mean range [0,1] (Min-Max normalization): As shown by equation 10, the mean range technique normalizes an attribute value by subtracting minimum value of that attribute from the current value. This value is further divided by the difference between maximum and minimum values of that attribute.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>'</head><p>x MinA X MaxA MinA <ref type="bibr" target="#b9">(10)</ref> x and x′ are value to be normalized and the normalized attribute value respectively. MinA and MaxA are the minimum and maximum possible values for attribute A before normalization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Statistical normalization (Z-score normailization):</head><p>X'</p><p>x <ref type="bibr" target="#b10">(11)</ref> The value x of an attribute A is transformed in ' X according to formula (11). is the mean and is standard deviation of given attribute.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Machine Learning Optimization Framework IGASAA</head><p>Table <ref type="table">4</ref> presents the parameters of our machine-learning framework used in this study with the purpose to build automatically an optimal or near optimal IDS based on DNN. This framework combines an Improved Genetic Algorithm and Simulated Annealing Algorithm, and it is employed later during the experiments carried out with the CICIDS2017, NSL-KDD and CIDDS-001 datasets. To successfully build efficient anomaly detection and threat classification model, a big amount of data is required to train and test its detection accuracy. At the same time, most of the existing network traffic datasets that are publicly available are outdated, unreliable or unlabelled. Some of these suffer from lack of traffic diversity and volume, some do not cover the variety of known attacks, while others are missing or hiding features that are present in the most common network protocols <ref type="bibr" target="#b52">[55]</ref>. The CICIDS 2017 dataset <ref type="bibr" target="#b53">[56]</ref> generated in 2017 by the Canadian Institute of Cybersecurity overcomes these issues. It represents a data set that satisfy the eleven indispensable characteristics of a valid IDS dataset, namely Anonymity, Attack Diversity, Complete Capture, Complete Interaction, Complete Network Configuration, Available Protocols, Complete Traffic, Feature Set, Metadata, Heterogeneity, and Labelling <ref type="bibr" target="#b54">[57]</ref>. This dataset contains benign traffic along with the most up-to-date common attacks, approaching real-world data as much as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C C E P T E D M A N U S C R I P T</head><p>The CICIDS2017 benchmark dataset contains the abstract behaviour of 25 users based on the HTTP, HTTPS, FTP, SSH, and email protocols. The data capturing period starts at 9 a.m., Monday, July 3, 2017 and ends at 5 p.m. on Friday July 7, 2017, for a total of 5 days. Monday is the only day that contains exclusively normal activity so that only benign traffic is created for this day. For the rest of the days, apart from benign traffic, several different attacks are performed, including Brute Force FTP, Brute Force SSH, DoS, Heartbleed, Web Attack, Infiltration, Botnet and DDoS. As follows <ref type="bibr" target="#b52">[55]</ref>:</p><p> Monday: Benign traffic only;  Tuesday: Bruteforce attack using a variety of password cracking tools (Hydra, Me-dusa, Ncrack, Metasploit etc.) and multi-threaded FTP-Patator and SSH-Patator;  Wednesday: DoS attacks using a 4 different tools (Hulk, GoldenEye, Slowloris, Slowhttptest) and Heartbleed attack using Heartleech to scan for vulnerabilities;  Thursday morning: Web attack using the Damn Vulnerable Web App (DVWA), which is a vulnerable PHP/MySQL web application;  Thursday afternoon: Infiltration attack using Metasploit to infect a victim using a malicious file from the cloud or USB, then nmap and portscan on the victim network;  Friday morning: Botnet attack using ARES, a Python-based botnet, which can provide remote shell, file upload/download, capturing screenshots and key logging;  Friday Afternoon: DDoS attack using the Low Orbit Ion Canon (LOIC) to send UDP, TCP, or HTTP requests to the victim;  Friday Afternoon-2: Portscan attack over the all Windows machines, by the main nmap switches.</p><p>The CICIDS 2017 dataset spanned over 08 different files available in packet (PCAP) format, containing five days normal and attacks traffic data. After capturing the network traffic, the.pcap file has been converted into 08 CSV files through CICFlowMeter of Canadian Institute of Cybersecurity (CIC) <ref type="bibr" target="#b60">[63]</ref>. Total rows contained in those 08 files are 2,830,743 rows; each row having 80 features and is labelled as Benign or one of fourteen type of attack. A short description of all those files are presented in table 5. Later, table <ref type="table">6</ref> shows 80 features proposed by Canadian Institute of Cybersecurity <ref type="bibr" target="#b61">[64]</ref>. As outlined in the paper <ref type="bibr" target="#b62">[65]</ref>, CICIDS2017 dataset contains the following few shortcomings that must be handled: a) Scattered Presence: It can be seen from table 5 that CICIDS2017 dataset contains attack and benign information as five days traffic data. Thursday working hour afternoon and Friday data are well appropriate for binary classification. Likewise, Tuesday, Wednesday and Thursday morning data are best for designing multiclass detection model. Nevertheless, it should be noted that a best detection model should be able to detect attacks of any kind. Thus, to design such a typical IDS, the traffic data of all the day should be merged together to form a single dataset to be used by IDS <ref type="bibr" target="#b62">[65]</ref>. Thereby, we have merged the 8 files in one same file that compromises all benign and attacks rows. As result, the obtained dataset compromises 2,830,743 rows and 15 class labels (1 normal + 14 attack labels). b) Irrelevant features: There are some rows in dataset, which have the feature "Flow Bytes/s" equal to 'Infinity' or 'NaN'. As the classifier based on DNN cannot utilize this feature either in training or in testing phases due to its values, to resolve this concern, we have removed all those rows. After that, we have eliminated the features that have the same values for all rows, namely "Bwd PSH Flags","Bwd URG Flags", "Fwd Avg Bytes/Bulk", "Fwd Avg Packets/Bulk", "Fwd Avg Bulk Rate", "Bwd Avg Bytes/Bulk", "Bwd Avg Packets/Bulk", "Bwd Avg Bulk Rate" and "Fwd Avg Bytes/Bulk". The reason of that action it that, as those features have the same values for all rows, they will be useless during the learning of the DNN classifier and their presence will consume more overhead for loading and processing. <ref type="bibr" target="#b45">[48]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Component of the</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c) Huge Volume of Data and High class imbalance:</head><p>o Huge Volume of Data: After merging all the eight files of CICIDS 2017 mentioned in the subsection 6.4.1, we noticed that the combined dataset comprises data of all the possible recent attack labels at one place. Nevertheless, at the same time the size of the merged dataset becomes great. This big volume of data itself becomes a shortcoming. The drawback is that it consumes more overhead for loading and processing. The drawback of huge volume can be surmounted by sampling the dataset. o High class imbalance: High class imbalance <ref type="bibr" target="#b63">[66,</ref><ref type="bibr" target="#b64">67]</ref> is a state of a dataset where if the dataset is utilized for training of a classifier or detector, in such a case the detector will biased towards the majority class <ref type="bibr" target="#b64">[67,</ref><ref type="bibr" target="#b65">68]</ref>. Consequently, the detector achieves lower accuracy with higher false alarm. In the case of CICIDS2017, this dataset is too prone/susceptible to high-class imbalance <ref type="bibr" target="#b62">[65]</ref>. As stated in the paper <ref type="bibr" target="#b62">[65]</ref>, the prevalence of majority class (Benign) is 83.34% where as for the minority class is 0.00039% (Heartbleed). With such a great gap of prevalence rate a potential detector may tilt towards normal class. The situation becomes worst when a detector is based on an arbitrary sample of this dataset. It is due to the fact that, when a random sample on this dataset is taken for training and testing of a detector there is a significant probability that instances of a peculiar attack label such as "Heartbleed" or "Web Attack -Sql Injection" may not found in training set. Accordingly, the detector will fail to discover such attack when an instance of type such attack turns up. This is a main shortcoming identified in CICIDS2017 dataset. There are several manners to treat class imbalance problem of a dataset <ref type="bibr" target="#b63">[66,</ref><ref type="bibr" target="#b66">69]</ref>. One of the main techniques to overcome class imbalance issue is relabeling of classes. Relabeling of classes to include dividing of majority classes to form more classes or fusing of few minority classes to form a class; thus; enhancing prevalence ratio and diminishing class imbalance concern. In the case of CI-CIDS2017, it is very challenging to split majority classes to form discrete classes equivalent to minority classes. Due to the difference in prevalence is 83.34367%, which seems to be too elevated. For this reason, we have decided to adopt the approach of merging the minority classes.</p><p>Hence, the drawback of huge volume of CICIDS 2017 is surmounted by sampling the dataset, using the same approach performed in the paper <ref type="bibr" target="#b45">[48]</ref>. By this way, all classes of CICIDS2017 will be presents in both training and testing subsets with reduced volumes, proportionally to their volumes in the original dataset. In fact, we extract the training and test subsets based on the distribution described in table <ref type="bibr" target="#b6">7</ref>. In each subset, we attempted to include rows that contain all the attacks but the same row cannot appear in both subsets. For the training subset, we select the first rows of each type. Then, for the test subset, we select randomly the rows after the removal of the training subset rows . The reason behind adoption of the method applied in the paper <ref type="bibr" target="#b45">[48]</ref> to construct our training and testing subsets is that with this distribution, the model developed in <ref type="bibr" target="#b45">[48]</ref>   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.3">Experimental Results</head><p>From the complete CICIDS2017 dataset, we have extracted two independents subsets, namely training dataset and testing dataset, following the approach explained in the subsection 6.2.2. Table <ref type="table">8</ref> summarizes the distribution and size of these subsets. The experiments conducted on our proposed system show that at the end of IGA process optimized by SAA that is to say after 200 generations, the best individual (chromosome) found contains the genes displayed in the table 9 with its values. This fittest chromosome allows building the best Machine learning IDS.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Label</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>6.5</head><p>Experimentation Based on NSL-KDD Dataset</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.1">Description of NSL-KDD Dataset</head><p>Traditionally, most of the research work conducted on the field of intrusion detection utilized the popular benchmark dataset KDD99, which has a huge size and includes many duplicate and redundant records. The large size of the data set causes the classification task to be long and exhausting. Consequently, the researchers in general select a small portion of the training and testing data set for their experiments. The very high number of redundant records makes the classification task be biased toward the frequent samples. The detection for smaller classes i.e. U2R and R2L, which are more harmful attacks, will not be efficient enough.</p><p>Moreover, the existence of these redundant records in the test set will also cause the evaluation results to be biased by the algorithms, which have better detection rates on frequent samples. In this study, we used the NSL-KDD data set <ref type="bibr">[71]</ref>, which is the refined version of KDDcup99 and has eliminated some of the drawbacks of that dataset. It has the following advantages <ref type="bibr" target="#b58">[61]</ref>:  There are no redundant records in the training set, so the bias toward more frequent records will not happen during the learning process;  There are no duplicate records in the new test set, so the evaluation of the learners will not be biased by the methods which have higher detection accuracy for the frequent records;  The number of selected records from each difficulty level group is inversely proportional to the percentage of records in the original KDD data set. As a result, the classification rates of distinct machine learning methods vary in a wider range, which makes it more efficient to have an accurate evaluation of different learning techniques;  The number of records in the train and test sets are reasonable, which makes it affordable to run the experiments on the complete set without the need to randomly select a small portion. Consequently, evaluation results of different research works will be consistent and comparable.</p><p>Each NSL-KDD record is related to a network connection and consists of 41 features (The feature vector consists of three categorical values; five symbolic values and the rest of them are continuous values) related to  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.2">Experimental Results</head><p>For experimentation, we have utilized two types of NSL-KDD dataset version 2015. The first one is NSL-KDD Train+ (training dataset) and the second is NSL-KDD Test+ (testing dataset) (subsection 6.5.1). For feature selection, we have opted for A modified Kolmogorov-Smirnov Correlation Based Filter Algorithm, which allows selection of a set of 12 relevant features among 41 features of NSL-KDD datasets. The set of 12 features resulted has given good results in anomaly-based intrusion detection <ref type="bibr" target="#b42">[45,</ref><ref type="bibr" target="#b43">46]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table. 12. Configuration and performances of best MLIDS_ NSL-KDD</head><p>The experiments driven on our model show that at the end of running of our framework IGASAA, that is to say after 200 generations, the best individual (chromosome) found leads to construction of the best MLIDS 2, called "MLIDS_ NSL-KDD".  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.2">Experimental Results</head><p>The Original version of CIDDS-001 contains 5 i.e. normal, suspicious, unknown, attacker, and victim, and since our objective is to evaluate anomaly based IDS, we only included normal and attacker classes in our experimental dataset. Thus, as shown by table 14, the reduced version of CIDDS-001 dataset used in this work contains 953298 normal instances and 65652 attacker instances, extracted from both week 1 and week 2 of OpenStack and ExternalServer traffic folders respectively. The experiments conducted on our model points that on completion of executing of our framework IGASAA, that is to say after 200 generations, the best individual (chromosome) found allows building the best MLIDS 3, called "MLIDS_ CIDDS-001". Table <ref type="table">16</ref> displays configuration and performances achieved by that IDS. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.7">Comparison with Related Works and Discussion</head><p>The subsections 6.4, 6.5 and 6.6 provide the outcomes of implementation and evaluation of our model, which consists of building automatically an IDS based DNN through our machine learning framework IGASAA (combination of improved Genetic Algorithm (GA) and Simulated Annealing Algorithm (SAA)), by means of three different IDS datasets namely CICIDS2017, NSL-KDD version 2015 and CIDDS-001 2017. In consequence, we have obtained the three best Machine Learning IDS (MLID) according to the datasets employed, which are MLIDS_CICIDS2017, MLIDS_NSL-KDD and MLIDS_CIDDS-001. Thereafter, we have compared those IDS between them, and also with various state-of-art approaches.</p><p>Analysis of the table 17 and figures, 7, 8, 9 and 10 leads to the following conclusions:</p><p> Our IDSs obtained; MLIDS_CICIDS2017, MLIDS_NSL-KDD and MLIDS_CIDDS-001 achieve nearly the same performances, and all of them yield high detection rate, high accuracy, great precision, elevated AUC and low false positive rate;</p><p> Our three MLIDS outperform the state-of-the-art approaches listed in table <ref type="table" target="#tab_7">17</ref> in terms of detection rate and false positive rate;</p><p> Using of an improved Genetic Algorithm, further boosted by Simulated Annealing Algorithm allow to explore intelligently and efficiently the search space in order to found the best set of values of parameters, which are involved in building of IDS based on Deep Neural Network. Avoiding us to tuning those parameters manually through the approach trial and error.</p><p>We noticed also that using of IGA in our framework IGASAA, obtained by application of optimization strategies to the fitness function of a standard GA, namely Parallel Processing and Fitness Value Hashing have brought several benefits. These advantages are: an average of 87% reduction of execution time compared to a standard GA, acceleration of the IGA convergence process and save of processing power.     In order to develop an efficient and an effective anomaly network intrusion system (ANIDS) for detection and prevention of both inside and outside assaults in cloud environment with high detection precision and low false warnings, we have adopted an intelligent approach to build automatically such IDS based on Deep Neural network (DNN). Our method consists of using a hybrid framework called "IGASAA" that combines machine learning techniques, namely Improved Genetic Algorithm (IGA) and Simulated Annealing Algorithm (SAA), with the purpose of searching the optimal values of the parameters included in construction of IDS based DNN (IDSDNN) or affecting its performance. GA was improved through optimization strategies that are Parallel Processing and Fitness Value Hashing. In addition, SAA was incorporated to IGA with the aim to optimize its heuristic search. In IGA process, we have used binary encoding for chromosomes, while AUC metric was selected as a fitness function for evaluating the goodness of the chromosomes generated versus the optimization problem in hand. In each generation of IGA, each chromosome produced is used to create an instance of IDSDNN, which thereafter goes through learning phase and a test phase. At the end of the last phase, AUC measure is computed. IGA process begins with a randomly generated population, which evolves through elitism, selection, recombination (crossover) and mutation. Finally, the best individual (chromosome) is picked out as the final result once the optimization criterion is met. In our work, termination condition adopted for IGA is production of 200 generations. As result, at the end IGA process, the optimal or near-optimal values of parameters used to build an ideal IDSDNN are found, which allows constructing a powerful machine learning IDS called "MLIDS" reaching high detection rate and low false positive rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Datasets</head><p>Experimental results conducted using CloudSim 4.0 and three IDS datasets, namely CICIDS2017, NSL-KDD and CIDDS-001 dataset demonstrate that our three MLIDSs obtained outperform several recent works. Moreover, performance improvement strategies applied to GA have reduced execution time, convergence time and saved processing power.</p><p>We have chosen to place our proposed IDS on Front-End and Back-End of the Cloud, to detect and stop attacks in real time impairing the security of the Cloud Datacenter.</p><p>We plan in our future work to adopt the approach proposed by Goh et al. in <ref type="bibr" target="#b81">[85]</ref>, with the view to allow our proposed IDS to detect intrusions within encrypted packets. Also, we intend to use other meta-heuristic algorithms (such particle swarm optimization, artificial bee colony (ABC) algorithm, ant colony optimization (ACO) , crow search algorithm or whale optimization algorithm) to compare them with Improved Genetic Algorithm employed in this paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Operation of DNN learning process</figDesc><graphic coords="9,155.76,303.01,259.67,290.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>A C C E P T E D M A N U S C R I P Tproduce new chromosomes), and mutation operators.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Flow of Genetic Algorithm Although GA is an old algorithm, its appealing features continue to fuel its adoption by various emerging domains [35];  Automotive Design;  Engineering Design;  Robotics;  Evolvable Hardware;  Optimized Telecommunications Routing;  Joke and Pun Generation;  Biomimetic Invention;  Trip, Traffic and Shipment Routing;  Computer Gaming;  Encryption and Code Breaking;  Computer-Aided Molecular Design;  Gene Expression Profiling;  Optimizing Chemical Kinetic Analysis;  Finance and Investment Strategies;  Marketing and Merchandising.</figDesc><graphic coords="10,107.00,191.36,356.71,278.35" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>A C C E P T E D M A N U S C R I P T radiation pattern [37]. AGs are distinguished from conventional (enumerative or gradient-based) search methods in a state space because they: o Use a coding of the parameters of the problem; o Work on a population and not on a single;  Avoid the trap of a local minimum o Use values of the studied function;  Not its derivative nor an auxiliary function o Use probabilistic transition rules;  Not deterministic o Are very powerful and computationally fast;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>o</head><label></label><figDesc>Normalization of data; o Architecture of Neural Network, specifically the number of nodes in the hidden layer(s); o Activation function or transfer function; o Learning rate; o Momentum term.The second stage consists of comparison of studied works in order to select for each parameter cited above, between two and four relevant values, which have given the best results in terms of intrusion detection.In our work, IGA will generate randomly the number of nodes of both hidden layers of DNN and the values of Learning rate and Momentum term. Through genetic operations such selection, elitism, crossover and mutation, IGA algorithm is able to found the ideal values of those parameters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>o 2 .Fig. 3 . 4 . 2</head><label>2342</label><figDesc>Fig. 3. Workflow of proposed system</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Framework of MLIDS in optimization stage  Feature selection module: Feature selection is the most critical stage in building intrusion detection models. Our intrusion detection model incorporates a feature selection module mainly to select useful features for intrusion detection. This module allows selection of a set of 70 relevant features among 80 features of CICIDS2017 dataset (subsection 6.2).  Data preprocessing module: Data Preprocessing includes two operations; data conversion (Categorical encoding) and Normalization. "Categorical encoding" refers to the process of assigning numeric values to nonnumeric features/attributes, so as to make the processing task much simpler, as numeric data can be easily handled upon. Whereas, "Normalization or Scaling" refers to the process of scaling the feature values to a small range that can help to obtain better detection results and avoid numerical difficulties during the calculation. Our data-preprocessing module uses Min-Max normalization and Statistical normalization methods.  Detection module based on DNN and optimization module based on IGA &amp; SAA: Detection module based on DNN interacts with an optimization module based on IGA &amp; SAA as explained in detail in subsection 4.1 with the goal to search optimal or near-optimal values of parameters used to build ideal IDS based DNN. The period of optimization is called "optimization stage". This period is</figDesc><graphic coords="16,58.69,374.31,449.57,156.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Framework of MLIDS in operation/normal mode</figDesc><graphic coords="17,61.59,180.36,447.79,161.73" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Positions of proposed MLIDS in a cloud network</figDesc><graphic coords="18,105.50,64.85,359.34,271.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Comparison of Detection rate (DR) of proposed MLIDS model and other works</figDesc><graphic coords="30,112.05,409.02,394.15,232.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Comparison of Accuracy of proposed MLIDS model and other works</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="15,94.70,370.89,408.31,375.07" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="31,106.05,75.84,402.31,219.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="31,111.21,424.50,397.03,217.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>R I P T o Near-human-level image classification; o Near-human-level speech recognition; o Near-human-level handwriting transcription; o Improved self-driving cars; o Digital assistants such as Google Now, Microsoft Cortana, Apple's Siri, and Amazon Alexa; o Improved ad targeting, as used by Google, Baidu, and Bing; o Improved search results on the web;</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table . 1</head><label>.</label><figDesc>. List of parameters influencing the performance of a BPNN or a DNN based IDS and their different values</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>:</figDesc><table><row><cell cols="3">() Accuracy ACC</cell><cell cols="2">TP TN TP TN FP FN</cell><cell>(2)</cell></row><row><cell cols="3">( Detection Rate DR</cell><cell cols="2">/ Re call TP FN ) TP</cell><cell>(3)</cell></row><row><cell cols="4">TP Precision TP FP</cell><cell>(4)</cell></row><row><cell cols="5">() False Alarm Rate FAR</cell><cell>FP FP TN</cell><cell>(5)</cell></row><row><cell cols="2">F score</cell><cell cols="2">2 Re Re call call</cell><cell>Precision Precision</cell><cell>(6)</cell></row><row><cell>AUC</cell><cell>0.5</cell><cell cols="3">TP TP FN TN FP TN</cell><cell>(7)</cell></row><row><cell cols="5">() True Negative Rate TNR</cell><cell>TN TN FP</cell><cell>(8)</cell></row><row><cell cols="5">() False Negative Rate FNR</cell><cell>FN FN TN</cell><cell>(9)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>has reached high performance (the highest overall detection rate (DR Overall) with 94.475%, highest accuracy with 96.665% , and lowest false alarm rate (FAR) with 1.145%). Certainly, one of the factors for that achievement is the distribution of subsets adopted. In addition, to resolve the issue of high class imbalance, we have merged all minority attack classes to form a unique attack class. To do that, the value of the feature label of all records belong to different attack classes is replaced by the value 1. Hence, as shown by table 8, finally we construct balanced training and testing subtests, each of them contains 4000 records; 2000 of them are attack records with feature label fixed at 1, while the other 2000 records are normal records with the label feature putted at 0. Our training and testing subsets derived from CICIDS2017 benchmark dataset contains one non-numeric feature namely Label feature, while the other features are numerical. As this study does not distinguish between different categories of attack, all attributes corresponding the 14 attack classes such 'DoS', Slowloris', 'Dos Slowhttptest', 'DoS Hulk', 'DoS Goldeneye', 'Heartbleed' etc.. are converted into 1. Whereas, the attribute 'BENIGN' is converted to 0. 2) Normalization: In CICIDS 2017 dataset, there are some features such as "Flow Duration", "Fwd Packet Length Std", "Flow Bytes/s", "Flow Packets/s", "Flow IAT Mean", where the difference between the maximum and minimum values has a very large scope. To normalize them, the mean-range [0, 1] (Min-Max) normalization or Statistical (Z-score) normalization methods are used, because they yield better results in terms of time and classification rate<ref type="bibr" target="#b67">[70]</ref>.</figDesc><table><row><cell>In order to make the records in both training and testing datasets ready for processing by our proposed IDS,</cell></row><row><cell>they must be handled using the two following operations:</cell></row><row><cell>1) Numericalization or categorical encoding:</cell></row><row><cell>M A N U S C R I P T</cell></row><row><cell>A C C E P T E D</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 7 .</head><label>7</label><figDesc>Composition of training and testing subsets<ref type="bibr" target="#b45">[48]</ref> </figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table . 8</head><label>.</label><figDesc>. Distribution and size of training and testing datasets</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 10</head><label>10</label><figDesc>indicates configuration and also performances reached by that best MLIDS 1 based DNN using CICIDS2017 dataset, called "MLIDS_ CICIDS2017". Table. 9. Genes of fittest chromosome found by IGASAA Table. 10. Configuration and performances of best MLIDS_ CICIDS2017</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head></head><label></label><figDesc>the connection characteristics of the network traffics. In addition, those records are labeled as normal or one of the specific attack names. All attacks fall into four major categories: (1) DOS (Denial of Service) are attacks that aim to making a service or a resource unavailable by depleting the victim's resources, thereby making it unable to handle legitimate requests e.g. syn flooding. (2) U2R (User to Root) where an attacker uses a normal account to login into a victim system and tries to gain root/administrator privileges by exploiting some vulnerability in the victim e.g. buffer overflow attacks. (3) R2L (Remote to Local) where attacker attempts to gain access (account) locally on a remote machine accessible via the network by exploiting some vulnerability of the victim machine e.g. password guessing. (4) PROBE, which represents any attempt to collect information about the network, the users or the security policy in order to avoid security tools or discover known vulnerability e.g. port scanning. The NSL-KDD dataset comes essentially with two training set and one test set that contains DoS, Probe, U2R, R2L attack classes beside normal label. Table11shows the details of both training set and test set. Test set contains in addition to the attack types presented in the training set 17 supplementary attack types, thereby, we can evaluate the proposed model by unseen attacks to show its effectiveness<ref type="bibr" target="#b68">[72]</ref>.</figDesc><table><row><cell cols="2">Gene of chromosome</cell><cell>Value</cell></row><row><cell cols="2">Normalization</cell><cell>0 (Min-Max normalization)</cell></row><row><cell cols="2">Activation function</cell><cell>1 (Sigmoid Function</cell></row><row><cell cols="2">Number of nodes in hidden layer 01</cell><cell>53</cell></row><row><cell cols="2">Number of nodes in hidden layer 02</cell><cell>27</cell></row><row><cell>Learning rate</cell><cell></cell><cell>8.412874497406361E-7</cell></row><row><cell cols="2">Momentum term</cell><cell>1.264876945375064E-4</cell></row><row><cell>Parameters Number of nodes in Input layer Number of nodes in Hidden layer 01 Number of nodes in Hidden layer 02 Number of nodes in Output layer Activation function Normalization of data Learning rate Momentum term</cell><cell cols="2">Value Min-Max 70 53 27 1 Sigmoid 8.412874497406361E-7 F-score Performance Metric Accuracy Precision Detection Rate (DR) False Negative Rate (FNR) False Positive Rate (FPR) True Negative Rate (TNR) 1.264876945375064E-4 AUC (Ability to avoid misclassifications) M A N U S C R I P T Value 99.93% 99.95% 99.92% 0.08% 0.05% 99.95% 0.99 99.93%</cell></row><row><cell cols="2">A C C E P T E D</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head></head><label></label><figDesc>Table 12  displays configuration and performances attained by that IDS. Cloud environment based on OpenStack platform. This dataset contains unidirectional NetFlow data. It consists of traffic data from two server's i.e. OpenStack and External server. The dataset is generated by emulating small business environment which consist of OpenStack environment having internal servers (web, file, backup and mail) and an External Server (file synchronization and web server) which is deployed on the internet to capture real and up-to-date traffic from the internet. It consists of three logs files (attack logs, client configurations and client logs) and traffic data from two servers where each server traffic comprises of 4 four week captured traffic data<ref type="bibr" target="#b71">[75]</ref>. CIDDS-001 contains realistic normal and attack traffic allowing important benchmarking of network intrusion detection systems in a Cloud environment. It contains 14 attribute, the first 10 attributes are the default NetFlow attributes and the last four attributes are additional attributes, names and descriptions of features are tabulated in table13. A total of 32 million of normal and attack flows are captured in the dataset within four weeks. Ring et. al<ref type="bibr" target="#b70">[74]</ref> have exploited 92 types of attacks to create this dataset. This makes it an important benchmark for intrusion detection systems. The reasons above motivated us to use this dataset in this article. As mentioned previously, The CIDDS-001 has 14 attributes out of which the first 11 features have been used in this study.</figDesc><table><row><cell>ACCEPTED MANUSCRIPT</cell></row><row><cell>6.6 Experimentation Based on CIDDS-001 Dataset 6.6.1 Description of CIDDS-001 Dataset CIDDS-001 (Coburg Network Intrusion Detection Dataset) [73] is a labelled flow based dataset created by 01 Number of nodes in Hidden layer 02 5 Detection Rate (DR) 99.83% Number of nodes in Output layer 1 False Negative Rate (FNR) 0.17% Activation function Sigmoid False Positive Rate (FPR) 0.09% Normalization of data Min-Max True Negative Rate (TNR) 99.91% Learning rate 8.412874497406361E-7 F-score 0.99 Momentum term 1.264876945375064E-4 AUC (Ability to avoid misclassifications) 99.87% A C C E P T E D M. Ring et. al [74] in a Datasets Total Records Intrusive Records Normal Records Train+_20 % 25192 11743 13449 Train+ 125973 58630 67343 Test+ 22544 12833 9711 Parameters of configuration Value Performance Metric Value Number of nodes in Input layer 12 Accuracy 99.86% Number of nodes in Hidden layer 8 Precision 99.93% M A N U S C R I P T</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head>Table 13 :</head><label>13</label><figDesc>Attributes within the CIDDS-001 data set</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15"><head>Table .</head><label>.</label><figDesc>14. Construction of a reduced version of CIDDS-001 datasetThis reduced version of CIDDS-001 dataset is then splited into train and test subsets using a configuration of 60% for training and 40% for testing. Table15presents distribution and size of those subsets. Table. 15. Distribution and size of testing and training CIDDS-001 subsets</figDesc><table><row><cell>Nr.</cell><cell>Feature</cell><cell cols="2">Description</cell></row><row><cell>1 2 3 4 5 6 7 8 9 10 11 12 13 14</cell><cell cols="3">Src IP Src Port Dest IP Dest Port Proto Date first seen Duration Bytes Packets Flags Class AttackType AttackID AttackDescription M A N U S C R I P T Source IP Address Source Port Destination IP Address Destination Port Transport Protocol (e.g. ICMP, TCP, or UDP) Start time flow first seen Duration of the flow Number of transmitted bytes Number of transmitted packets OR concatenation of all TCP Flags Class label (normal, attacker, victim, suspicious or unknown) Type of Attack (PortScan, DoS, Bruteforce, PingScan) Unique attack id. All flows which belong to the same attack carry the same attack id. Provides additional information about the set attack parameters (e.g. the number of attempted password guesses for SSH-Brute-Force attacks)</cell></row><row><cell cols="2">Traffic folder OpenStack ExternalServer CIDDS-001-external-week2.csv File source CIDDS-001-internal-week1.csv reduced CIDDS-001 dataset A C C E P T E D</cell><cell>Normal records 924862 28436 953298</cell><cell>Attacker records 63263 2389 65652</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16"><head>Table .</head><label>.</label><figDesc><ref type="bibr" target="#b15">16</ref>. Configuration and performances of best MLIDS_ CIDDS-001 2017</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head></head><label></label><figDesc>Table. 17. Comparison of performances of our three Machine Learning IDSs and other works</figDesc><table><row><cell></cell><cell cols="4">ACCEPTED MANUSCRIPT</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>Normal</cell><cell cols="2">Intrusive</cell><cell>Total</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>Records</cell><cell cols="2">Records</cell><cell>Records</cell><cell></cell><cell></cell></row><row><cell>Training subset</cell><cell></cell><cell>571979</cell><cell cols="2">39392</cell><cell>611371</cell><cell></cell><cell></cell></row><row><cell>Testing subset</cell><cell></cell><cell>381319</cell><cell cols="2">26260</cell><cell>407579</cell><cell></cell><cell></cell></row><row><cell>esearch work</cell><cell cols="2">Year Precision</cell><cell>FPR</cell><cell>Accuracy</cell><cell>DR</cell><cell>F-score</cell><cell>AUC</cell></row><row><cell>Intrusion Detection Based on Minimax</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Probability Machine with Immune</cell><cell>2008</cell><cell></cell><cell>0.13%</cell><cell></cell><cell>93.255%</cell><cell></cell><cell>96.57%</cell></row><row><cell>Clonal Feature Optimized [76]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Gaussian process latent variable model</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>for dimensionality reduction in intrusion</cell><cell></cell><cell></cell><cell></cell><cell>91.06%</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="8">Parameters of configuration Number of nodes in Input layer Number of nodes in Hidden layer 01 Number of nodes in Hidden layer 02 Number of nodes in Output layer Activation function Normalization of data Learning rate Momentum term detection [77] Artificial Neural Network Classifier for 10 7 4 1 Sigmoid Min-Max Value 8.412874497406361E-7 F-score Performance Metric Accuracy Precision Detection Rate (DR) False Negative Rate (FNR) False Positive Rate (FPR) True Negative Rate (TNR) 1.264876945375064E-4 AUC (Ability to avoid misclassifications) Intrusion Detection System in Computer Network [46] 2016 5.56% 99.39% 94.05% 99.92% 98.87% 99.86% 0.14% 0.08% 99.92% Value 0.99 99.89% Another fuzzy anomaly detection system based on ant clustering algorithm [75] 2017 10.03% 92.11% Two-tier network anomaly detection model-a machine learning approach [72] 2017 4.83% 72.19% A Hybrid Methodologies for Intrusion Detection Based Deep Neural Network with Support Vector Machine and Clustering Technique [78] 2018 92.03% 91.35% Network Anomaly Detection System using Genetic Algorithm and Fuzzy Logic [79] 2018 95.23% 0.56% 96.53% 76.50% 0.8484 An Enhanced Approach to Fuzzy C-means Clustering for Anomaly Detection [80] 2018 99.4567% 95.2992% 95.764% A N U S C R I P T 96.75% 91.04% 83.68% 87.97% An Enhanced Intrusion Detection System Based on Clustering [81] 2018 25% 90% 82.50% A New Distributed Intrusion Detection M System Based on Multi-Agent System 2018 12.43% 72.03% 79.80%</cell></row><row><cell cols="3">for Cloud Environment [83] Cuckoo Optimisation based Intrusion Detection System for Cloud Computing [19] Network Intrusion Detection Using Clustering and Gradient Boosting [82] CS-PSO based Intrusion Detection System in Cloud Environment [22] Network Intrusion Detection System based PSO-SVM for Cloud Computing [24] BNID: A Behavior-based Network Intrusion Detection at Network-Layer in Cloud Environment [25] An Efficient Hybrid Self-Learning Intrusion Detection System Based on Neural Networks [84] A C C E P T E D 2018 2018 87.116% 2019 96.46% 2019 99.50% 2019 2019 97.6% Our proposed MLIDS_NSL-KDD 2019 99.93%</cell><cell>2.87% 0.87% 1.517% 1.02% 0.09%</cell><cell>96.880% 84.253% 75.51% 99.10% 98.888% 99.86%</cell><cell>83.866% 59.16% 99.08% 99.182% 98.2% 99.83%</cell><cell>83.867 0.73 0.99 0.99</cell><cell>78.14% 99.10% 98.69% 99.87%</cell></row><row><cell>Our proposed MLIDS_CIDDS-001</cell><cell>2019</cell><cell>98.87%</cell><cell>0.08%</cell><cell>99.92%</cell><cell>99.86%</cell><cell>0.99</cell><cell>99.89%</cell></row><row><cell>Our proposed MLIDS_CICIDS2017</cell><cell>2019</cell><cell>99.95%</cell><cell>0.05%</cell><cell>99.93%</cell><cell>99.92%</cell><cell>0.99</cell><cell>99.93%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_18"><head>80.0% 90.0% 100.0% 99.92% 99.86% 99.83% 59.16% 99.08% 99.18% 94.05% 72.19% 92.11% 93.26% 91.35% 76.50% 95.76% 90.00% 83.87% 72.03% 98.20% DR 0.00% 10.00% 20.00% 30.00% 40.00% 50.00% 60.00% 70.00% 80.00% 90.00% 100.00% 99.93% 99.89% 99.87% 78.14% 99.10% 98.69% 96.75% 83.68% 91.04% 96.57% 87.97% 82.50% 79.80%</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_19"><head>80.00% 90.00% 100.00% 99.93% 99.92% 99.86% 96.88% 75.51% 99.10% 98.89% 99.39% 91.06% 92.03% 96.53% 95.30% 84.25% Accuracy 0.0% 5.0% 10.0% 15.0% 20.0% 25.0% 0.05% 0.08% 0.09% 2.87% 0.87% 1.52% 5.56% 4.83% 10.03% 0.13% 0.56% 25.00% 12.43% 1.02% FPR</head><label></label><figDesc></figDesc><table><row><cell>ACCEPTED MANUSCRIPT</cell></row><row><cell>7. Conclusions and Future Work</cell></row><row><cell>M A N U S C R I P T</cell></row><row><cell>A C C E P T E D</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_0"><p>attributes NSL-KDD [45,46] -10 attributes CIDDS-001 [47] -70 attributes CICIDS2017 [48] -14 attributes Kyoto 2006+ [49,50]</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>We would like to thank all members of LIMSAD Labs for their help and support.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Security issues in cloud environments: a survey</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Fernandes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">F</forename><surname>Soares</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">V</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Freire</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Inácio</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10207-013-0208-7</idno>
		<ptr target="https://doi.org/10.1007/s10207-013-0208-7" />
	</analytic>
	<monogr>
		<title level="j">International Journal of Information Security</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="113" to="170" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><surname>Mell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Grance</surname></persName>
		</author>
		<ptr target="http://csrc.nist.gov/publications/nistpubs/800-145/SP800-145.pdf" />
		<title level="m">The NIST definition of cloud computing</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Security guidance for critical areas of focus in cloud computing v2. 1. Cloud Secure Alliance</title>
		<author>
			<persName><forename type="first">G</forename><surname>Brunette</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mogull</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Distributed Intrusion Detection System for Cloud Environments based on Data Mining techniques</title>
		<author>
			<persName><forename type="first">M</forename><surname>Idhammad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Afdel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Belouch</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.procs.2018.01.095</idno>
		<ptr target="https://doi.org/10.1016/j.procs.2018.01.095" />
	</analytic>
	<monogr>
		<title level="j">Procedia Computer Science</title>
		<imprint>
			<biblScope unit="volume">127</biblScope>
			<biblScope unit="page" from="35" to="41" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Intrusion Detection System Based on BCS-GA in Cloud Environment</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Dutta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Phadikar</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-10-4741-1_35</idno>
		<ptr target="https://doi.org/10.1007/978-981-10-4741-1_35" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Emerging Research in Computing, Information, Communication and Applications</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016-07">2016, July</date>
			<biblScope unit="page" from="393" to="403" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">HIDCC: A hybrid intrusion detection approach in cloud computing</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Hatef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Shaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Jabbarpour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zarrabi</surname></persName>
		</author>
		<idno type="DOI">10.1002/cpe.4171</idno>
		<ptr target="https://doi.org/10.1002/cpe.4171" />
	</analytic>
	<monogr>
		<title level="j">Concurrency and Computation: Practice and Experience</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">4171</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On cloud security attacks: A taxonomy and intrusion detection and prevention as a service</title>
		<author>
			<persName><forename type="first">S</forename><surname>Iqbal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L M</forename><surname>Kiah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Dhaghighi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hussain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K R</forename><surname>Choo</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jnca.2016.08.016</idno>
		<ptr target="https://doi.org/10.1016/j.jnca.2016.08.016" />
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="98" to="120" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName><surname>Wikipedia</surname></persName>
		</author>
		<ptr target="https://en.wikipedia.org/wiki/2016_Dyn_cyberattack" />
		<imprint>
			<date type="published" when="2016">2016 dyn cyberattack</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">DDoS attack that disrupted internet was largest of its kind in history, experts say</title>
		<ptr target="https://www.theguardian.com/technology/2016/oct/26/ddos-attack-dyn-mirai-botnet" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Security threats on cloud computing vulnerabilities</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Chou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Science &amp; Information Technology</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">79</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Targeted ransomware attacks in the cloud</title>
		<author>
			<persName><forename type="first">Ismael</forename><surname>Valenzuela</surname></persName>
		</author>
		<ptr target="https://files.sans.org/summit/healthcare2016/PDFs/Prediction-2017-I-Survived-a-Ransomware-Attack-in-my-Cloud-Ismael-Valenzuela.pdf" />
	</analytic>
	<monogr>
		<title level="m">Foundstone Consulting Services</title>
		<imprint>
			<date type="published" when="2019-01-20">January 20, 2019</date>
		</imprint>
	</monogr>
	<note>GSE #132 -Global Director</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Proposed Network Intrusion Detection System In Cloud Environment Based on Back Propagation Neural Network</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Mehibs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Hashim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of University of Babylon for Pure and Applied Sciences</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="40" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A cloud-based intrusion detection service framework</title>
		<author>
			<persName><forename type="first">W</forename><surname>Yassin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">I</forename><surname>Udzir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Muda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Abdullah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T</forename><surname>Abdullah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 International Conference on Cyber Security, Cyber Warfare and Digital Forensic (CyberSec)</title>
		<meeting><address><addrLine>Kuala Lumpur, Malaysia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="213" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The use of computational intelligence in intrusion detection systems: A review</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">X</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Banzhaf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="35" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Imagenet classification with deep convolutional neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1097" to="1105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups</title>
		<author>
			<persName><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Dahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">.</forename><forename type="middle">.</forename><surname>Kingsbury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename></persName>
		</author>
		<idno type="DOI">10.1109/MSP.2012.2205597</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal processing magazine</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="82" to="97" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Attacks and Intrusion Detection in Cloud Computing Using Neural Networks and Particle Swarm Optimization Algorithms</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Saljoughi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mehrvarz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mirvaziri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Emerging Science Journal</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Proposed Network Intrusion Detection System Based on Fuzzy c Mean Algorithm in Cloud Computing Environment</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Mehibs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Hashim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of University of Babylon</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="27" to="35" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Cuckoo Optimisation based Intrusion Detection System for Cloud Computing</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A A G</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Priyadharshini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">J</forename><surname>Leavline</surname></persName>
		</author>
		<idno type="DOI">10.5815/ijcnis.2018.11.05</idno>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Network and Information Security</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page">42</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">WLI-FCM and Artificial Neural Network Based Cloud Intrusion Detection System</title>
		<author>
			<persName><forename type="first">P</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sengupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">K</forename><surname>Suri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Advanced Networking and Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">01</biblScope>
			<biblScope unit="page" from="3698" to="3703" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Intrusion detection for cloud computing using neural networks and artificial bee colony optimization algorithm</title>
		<author>
			<persName><forename type="first">B</forename><surname>Hajimirzaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J</forename><surname>Navimipour</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
			<publisher>ICT Express</publisher>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="56" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">CS-PSO based Intrusion Detection System in Cloud Environment</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karmakar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Phadikar</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-13-1951-8_24</idno>
	</analytic>
	<monogr>
		<title level="m">Emerging Technologies in Data Mining and Information Security</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="261" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A Network-Based Intrusion Detection System</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">S</forename><surname>Deshpande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">K</forename><surname>Peddoju</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-13-6089-3_3</idno>
	</analytic>
	<monogr>
		<title level="m">Security and Data Storage Aspect in Cloud Computing</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="35" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Network Intrusion Detection System based PSO-SVM for Cloud Computing</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Sakr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Tawfeeq</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>El-Sisi</surname></persName>
		</author>
		<idno type="DOI">10.5815/ijcnis.2019.03.04</idno>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Network and Information Security</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">22</biblScope>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">BNID: A Behavior-based Network Intrusion Detection at Network-Layer in Cloud Environment</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Ghanshala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sharma</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICSCCC.2018.8703265</idno>
	</analytic>
	<monogr>
		<title level="m">2018 First International Conference on Secure Cyber Computing and Communication (ICSCCC)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019-05">2019, May</date>
			<biblScope unit="page" from="100" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Speech emotion recognition using deep neural network and extreme learning machine</title>
		<author>
			<persName><forename type="first">K</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Tashev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fifteenth annual conference of the international speech communication association</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A deep learning based artificial neural network approach for intrusion detection</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mallik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gulati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Obaidat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">V</forename><surname>Krishna</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-10-4642-1_5</idno>
		<ptr target="https://doi.org/10.1007/978-981-10-4642-1_5" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Mathematics and Computing</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017-01">2017. January</date>
			<biblScope unit="page" from="44" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Wani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">A</forename><surname>Bhat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Afzal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Khan</surname></persName>
		</author>
		<title level="m">Advances in Deep Learning</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A novel intrusion detection method using deep neural network for invehicle network security</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Kang</surname></persName>
		</author>
		<idno type="DOI">10.1109/VTCSpring.2016.7504089</idno>
	</analytic>
	<monogr>
		<title level="m">Vehicular Technology Conference (VTC Spring)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016-05">2016. May. 2016</date>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Multi-Layer</forename><surname>Perceptron</surname></persName>
		</author>
		<ptr target="http://www.cse.unsw.edu.au/~cs9417ml/MLP2/" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Genetic Algorithm Approach to Intrusion Detection System</title>
		<author>
			<persName><forename type="first">B</forename><surname>Uppalaiah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Anand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Narsimha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Swaraj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Bharat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCST</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Fuzzy data mining and genetic algorithms applied to intrusion detection</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Bridges</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">B</forename><surname>Vaughn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 12th Annual Canadian Information Technology Security Symposium</title>
		<meeting>12th Annual Canadian Information Technology Security Symposium</meeting>
		<imprint>
			<date type="published" when="2000-10">2000, October</date>
			<biblScope unit="page" from="109" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Detection of Intrusions in KDDCup Dataset using GA by Enumeration Technique</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Chaudhary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Bichkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Innovative Research in Computer and Communication Engineering</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="2365" to="2369" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Rules Based Intrusion Detection System Using Genetic Algorithm</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">S</forename><surname>Maniyar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Musande</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Science and Network</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="554" to="558" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">An introduction to genetic algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Carr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Senior Project</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">40</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Mathematical Models and Genetic Algorithm Approaches to Simultaneously Perform Workforce Overtime Capacity Planning and Schedule Cells (Doctoral dissertation</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mathur</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
		<respStmt>
			<orgName>Ohio University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Genetic Algorithms</title>
		<author>
			<persName><forename type="first">D</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Addison Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>White</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1401.2651</idno>
		<title level="m">An overview of schema theory</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">The Generic Mathematical Model for Dynamic Genetic Algorithm Optimization</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Tsai</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Detectors generation using genetic algorithm for a negative selection inspired anomaly network intrusion detection system</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S A</forename><surname>Aziz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Salama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ella Hassanien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Sanaa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 Federated Conference on Computer Science and Information Systems (FedCSIS)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012-09">2012, September)</date>
			<biblScope unit="page" from="597" to="602" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kanbe</surname></persName>
		</author>
		<title level="m">Genetic algorithms in Java basics</title>
		<meeting><address><addrLine>New York, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Apress</publisher>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Equation of state calculations by fast computing machines</title>
		<author>
			<persName><forename type="first">N</forename><surname>Metropolis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Rosenbluth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Rosenbluth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Teller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Teller</surname></persName>
		</author>
		<idno type="DOI">10.1063/1.1699114</idno>
		<ptr target="https://doi.org/10.1063/1.1699114" />
	</analytic>
	<monogr>
		<title level="j">The journal of chemical physics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1087" to="1092" />
			<date type="published" when="1953">1953</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">A novel architecture combined with optimal parameters for back propagation neural networks applied to anomaly network intrusion detection</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Chiba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Abghour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Moussaid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>El Omri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rida</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.cose.2018.01.023</idno>
		<ptr target="https://doi.org/10.1016/j.cose.2018.01.023" />
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Security</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="36" to="58" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Artificial Neural Network Classifier for Intrusion Detection System in Computer Network</title>
		<author>
			<persName><forename type="first">N</forename><surname>Lokeswari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Rao</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-81-322-2526-3_60</idno>
		<ptr target="https://doi.org/10.1007/978-81-322-2526-3_60" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second International Conference on Computer and Communication Technologies</title>
		<meeting>the Second International Conference on Computer and Communication Technologies<address><addrLine>New Delhi</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="581" to="591" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Attack Classification Analysis of IoT Network via Deep Learning Approach</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Tama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rhee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Research Briefs on Information &amp; Communication Technology Evolution (ReBICTE)</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1" to="9" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Ahmim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Maglaras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Ferrag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Derdour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Janicke</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1812.09059</idno>
		<title level="m">A Novel Hierarchical Intrusion Detection System based on Decision Tree and Rules-based Models</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Statistical analysis of honeypot data and building of Kyoto 2006+ dataset for NIDS evaluation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Takakura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Okabe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Eto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Inoue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nakao</surname></persName>
		</author>
		<idno type="DOI">10.1145/1978672.1978676</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Workshop on Building Analysis Datasets and Gathering Experience Returns for Security</title>
		<meeting>the First Workshop on Building Analysis Datasets and Gathering Experience Returns for Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011-04">2011, April</date>
			<biblScope unit="page" from="29" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Ensemble Learning Approach for the Enhancement of Performance of Intrusion Detection System</title>
		<author>
			<persName><forename type="first">D</forename><surname>Musbau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Alhassan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Information and Communication Technology and its Applications</title>
		<meeting><address><addrLine>Minna, Nigeria</addrLine></address></meeting>
		<imprint>
			<publisher>ICTA</publisher>
			<date type="published" when="2018">2018. 2018</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Attribute normalization in network intrusion detection</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gombault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Knapskog</surname></persName>
		</author>
		<idno type="DOI">10.1109/I-SPAN.2009.49</idno>
	</analytic>
	<monogr>
		<title level="m">Pervasive systems, algorithms, and networks (ISPAN), 2009 10th international symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009-12">2009. December</date>
			<biblScope unit="page" from="448" to="453" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Increasing performance of intrusion detection system using neural network</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Yadav</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICACCCT.2014.7019145</idno>
	</analytic>
	<monogr>
		<title level="m">Advanced Communication Control and Computing Technologies (ICACCCT), 2014 International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014-05">2014. May</date>
			<biblScope unit="page" from="546" to="550" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">An efficient approach to develop an intrusion detection system based on multi layer backpropagation neural network algorithm: Ids using bpnn algorithm</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chattopadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sen</surname></persName>
		</author>
		<idno type="DOI">10.1145/2751957.2751979</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 ACM SIGMIS Conference on Computers and People Research</title>
		<meeting>the 2015 ACM SIGMIS Conference on Computers and People Research</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015-06">2015. June</date>
			<biblScope unit="page" from="105" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Intrusion detection and attack classification using Backpropagation Neural Network</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gaidhane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Vaidya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Raghuwanshi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Engineering Research and Technology</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1112" to="1115" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<ptr target="https://www.unb.ca/cic/datasets/ids-2017.html" />
		<title level="m">CICIDS2017 data set</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Toward Generating a New Intrusion Detection Dataset and Intrusion Traffic Characterization</title>
		<author>
			<persName><forename type="first">I</forename><surname>Sharafaldin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Lashkari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Ghorbani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICISSP</title>
		<imprint>
			<date type="published" when="2018-01">2018. January</date>
			<biblScope unit="page" from="108" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">An evaluation framework for intrusion detection dataset</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gharib</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sharafaldin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Lashkari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Ghorbani</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICISSEC.2016.7885840</idno>
	</analytic>
	<monogr>
		<title level="m">Information Science and Security (ICISS), 2016 International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016-12">2016, December</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">A systematic analysis of performance measures for classification tasks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sokolova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lapalme</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.ipm.2009.03.002</idno>
		<ptr target="https://doi.org/10.1016/j.ipm.2009.03.002" />
	</analytic>
	<monogr>
		<title level="j">Information Processing &amp; Management</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="427" to="437" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">A cooperative and hybrid network intrusion detection framework in cloud computing based on snort and optimized back propagation neural network</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Chiba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Abghour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Moussaid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rida</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.procs.2016.04.249</idno>
		<ptr target="https://doi.org/10.1016/j.procs.2016.04.249" />
	</analytic>
	<monogr>
		<title level="j">Procedia Computer Science</title>
		<imprint>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="1200" to="1206" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Bayesian Classifier and Snort based network intrusion detection system in cloud computing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">N</forename><surname>Modi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Muttukrishnan</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICCCNT.2012.6396086</idno>
	</analytic>
	<monogr>
		<title level="m">Computing Communication &amp; Networking Technologies (ICCCNT), 2012 Third International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012-07">2012, July)</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">A neural network ensemble classifier for effective intrusion detection using fuzzy clustering and radial basis function networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Amini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rezaeenour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hadavandi</surname></persName>
		</author>
		<idno type="DOI">10.1142/S0218213015500335</idno>
		<ptr target="https://doi.org/10.1142/S0218213015500335" />
	</analytic>
	<monogr>
		<title level="j">International Journal on Artificial Intelligence Tools</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">02</biblScope>
			<biblScope unit="page">1550033</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">False positives reduction in intrusion detection systems using Alert correlation and datamining techniques</title>
		<author>
			<persName><forename type="first">E</forename><surname>Chakir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">K</forename><surname>Youness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Moughit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int J Adv Res Comput Sci Softw Eng</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="77" to="85" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Extreme Gradient Boosting Based Tuning for Classification in Intrusion Detection Systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kaur</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-13-1810-8_37</idno>
		<ptr target="https://doi.org/10.1007/978-981-13-1810-8_37" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Advances in Computing and Data Sciences</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018-04">2018, April</date>
			<biblScope unit="page" from="372" to="380" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Towards a reliable intrusion detection benchmark dataset</title>
		<author>
			<persName><forename type="first">I</forename><surname>Sharafaldin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gharib</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Lashkari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Ghorbani</surname></persName>
		</author>
		<idno type="DOI">10.13052/jsn2445-9739.2017.009</idno>
		<ptr target="https://doi.org/10.13052/jsn2445-9739.2017.009" />
	</analytic>
	<monogr>
		<title level="j">Software Networking</title>
		<imprint>
			<biblScope unit="volume">2018</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="177" to="200" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">A detailed analysis of CICIDS2017 dataset for designing Intrusion Detection Systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Panigrahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Borah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Engineering &amp; Technology</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note>7(3.24</note>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">A survey on class imbalance learning on automatic visual inspection</title>
		<author>
			<persName><forename type="first">C</forename><surname>Mera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Branch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Latin America Transactions</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="657" to="667" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">A systematic study of online class imbalance learning with concept drift</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Minku</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE transactions on neural networks and learning systems</title>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A comprehensive investigation of the role of imbalanced learning for software defect prediction</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shepperd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Multiclass imbalance problems: Analysis and potential solutions</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man, and Cybernetics, Part B (Cybernetics)</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1119" to="1130" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Network intrusion detection using naive bayes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Panda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Patra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International journal of computer science and network security</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="258" to="263" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Two-tier network anomaly detection model: a machine learning approach</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">H</forename><surname>Pajouh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Dastghaibyfard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hashemi</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10844-015-0388-x</idno>
		<ptr target="https://doi.org/10.1007/s10844-015-0388-x" />
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent Information Systems</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="61" to="74" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<monogr>
		<ptr target="https://www.hs-coburg.de/forschung-kooperation/forschungsprojekte-oeffentlich/ingenieurwissenschaften/cidds-coburg-intrusion-detection-data-sets.html" />
		<title level="m">CIDDS-001 dataset</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Flow-based benchmark data sets for intrusion detection</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wunderlich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Grüdl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Landes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hotho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th European Conference on Cyber Warfare and Security. ACPI</title>
		<meeting>the 16th European Conference on Cyber Warfare and Security. ACPI</meeting>
		<imprint>
			<date type="published" when="2017-06">2017. June</date>
			<biblScope unit="page" from="361" to="369" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Another fuzzy anomaly detection system based on ant clustering algorithm</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Aminanto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kim</surname></persName>
		</author>
		<idno type="DOI">10.1587/transfun.E100.A.176</idno>
		<ptr target="https://doi.org/10.1587/transfun.E100.A.176" />
	</analytic>
	<monogr>
		<title level="j">IEICE Transactions on Fundamentals of Electronics, Communications and Computer Sciences</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="176" to="183" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Intrusion Detection Based on Minimax Probability Machine with Immune Clonal Feature Optimized</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ren</surname></persName>
		</author>
		<idno type="DOI">10.1109/KAM.2008.86</idno>
		<ptr target="https://doi.org/10.1109/KAM.2008.86" />
	</analytic>
	<monogr>
		<title level="m">2008 International Symposium on Knowledge Acquisition and Modeling</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008-12">2008, December</date>
			<biblScope unit="page" from="329" to="332" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Gaussian process latent variable model for dimensionality reduction in intrusion detection</title>
		<author>
			<persName><forename type="first">B</forename><surname>Abolhasanzadeh</surname></persName>
		</author>
		<idno type="DOI">10.1109/IranianCEE.2015.7146299</idno>
	</analytic>
	<monogr>
		<title level="m">2015 23rd Iranian Conference on Electrical Engineering</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015-05">2015. May</date>
			<biblScope unit="page" from="674" to="678" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">A Hybrid Methodologies for Intrusion Detection Based Deep Neural Network with Support Vector Machine and Clustering Technique</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-10-3187-8_13</idno>
		<ptr target="https://doi.org/10.1007/978-981-10-3187-8_13" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Frontier Computing</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016-07">2016, July</date>
			<biblScope unit="page" from="123" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Network anomaly detection system using genetic algorithm and fuzzy logic</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Hamamoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">F</forename><surname>Carvalho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D H</forename><surname>Sampaio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Abrão</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Proença</surname><genName>Jr</genName></persName>
		</author>
		<idno type="DOI">10.1016/j.eswa.2017.09.013</idno>
		<ptr target="https://doi.org/10.1016/j.eswa.2017.09.013" />
	</analytic>
	<monogr>
		<title level="j">Expert Systems with Applications</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="page" from="390" to="402" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">An Enhanced Approach to Fuzzy C-means Clustering for Anomaly Detection</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chaurasia</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-10-5828-8_60</idno>
		<ptr target="https://doi.org/10.1007/978-981-10-5828-8_60" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of First International Conference on Smart System, Innovations and Computing</title>
		<meeting>First International Conference on Smart System, Innovations and Computing<address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="623" to="636" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">An Enhanced Intrusion Detection System Based on Clustering</title>
		<author>
			<persName><forename type="first">S</forename><surname>Borah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Panigrahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chakraborty</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-981-10-6875-1_5</idno>
		<ptr target="https://doi.org/10.1007/978-981-10-6875-1_5" />
	</analytic>
	<monogr>
		<title level="m">Progress in Advanced Computing and Intelligent Engineering</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="37" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Network Intrusion Detection Using Clustering and Gradient Boosting</title>
		<author>
			<persName><forename type="first">P</forename><surname>Verma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Anwar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Mane</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICCCNT.2018.8494186</idno>
	</analytic>
	<monogr>
		<title level="m">2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018-07">2018, July</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">A New Distributed Intrusion Detection System Based on Multi-Agent System for Cloud Environment</title>
		<author>
			<persName><forename type="first">O</forename><surname>Achbarou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>El Kiram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Bourkoukou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Elbouanani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Communication Networks and Information Security (IJCNIS)</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="526" to="533" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">An Efficient Hybrid Self-Learning Intrusion Detection System Based on Neural Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mohammadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Amiri</surname></persName>
		</author>
		<idno type="DOI">10.1142/S1469026819500019</idno>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computational Intelligence and Applications</title>
		<imprint>
			<date type="published" when="2019">2019. 1950001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">He had a Master in Computer and Internet Engineering in 2013, and a Bachelor of Mathematical Sciences. He research interests are in the area of Security</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">T</forename><surname>Goh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zimmermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Looi</surname></persName>
		</author>
		<idno type="DOI">10.1109/ARES.2009.76</idno>
		<ptr target="https://doi.org/10.1109/ARES.2009.76" />
	</analytic>
	<monogr>
		<title level="m">2009 International Conference on Availability, Reliability and Security</title>
		<imprint>
			<publisher>Big Data on Cloud Infrastructures</publisher>
			<date type="published" when="2009-03">2009. March</date>
			<biblScope unit="page" from="540" to="545" />
		</imprint>
		<respStmt>
			<orgName>Hassan II University of Casablanca (Morocco</orgName>
		</respStmt>
	</monogr>
	<note>Biographical Note Mr Zouhair Chiba is a PhD Student at LIMSAD Labs within Faculty of Sciences. Computer Networks, Mobile Computing and Distributed Systems. Email: chiba.zouhair@gmail.com</note>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Noreddine Abghour is currently associate professor in the Faculty of Science of Hassan II University</title>
		<author>
			<persName><surname>Dr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">His research mainly deals</title>
		<meeting><address><addrLine>Morocco</addrLine></address></meeting>
		<imprint/>
	</monogr>
	<note>He received his Ph.D. degree from National Polytechnic Institute of Toulouse (France) in 2004. with Security in Distributed Computing Systems. E-mail: NOREDDINE.ABGHOUR@univh2c.ma</note>
</biblStruct>

<biblStruct xml:id="b83">
	<monogr>
		<title level="m" type="main">Khalid Moussaid is recently appointed director of Computer Science, Modeling Systems and Decision Support laboratory of the Hassan II University of Casablanca. He has a PhD in Oriented Object Database; a Master in Computer Science and a Bachelor of Science in Applied Mathematics. He is interested in Optimization, Algorithmic and especially in the field of Big Data and Cloud Computing</title>
		<author>
			<persName><surname>Dr</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>E-mail: KHALID.MOUSSAID@univh2c.ma</note>
</biblStruct>

<biblStruct xml:id="b84">
	<monogr>
		<title level="m" type="main">Her main scientific interests concern Algorithms, Optimization, Transport and the Logistic problems. She has participated with a lot of research papers in workshops and conferences</title>
		<author>
			<persName><surname>Dr</surname></persName>
		</author>
		<imprint>
			<pubPlace>University Hassan II Casablanca, Morocco</pubPlace>
		</imprint>
	</monogr>
	<note>Amina El omri is a professor of Higher Education in Computer Science at the Faculty of Sciences. and published several journal articles. E-mail: AMINA.ELOMRI@univh2c.ma</note>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">Mohamed Rida is a professor in Computer Science at the Faculty of Sciences, University Hassan II Casablanca (Morocco) and member of LIMSAD Labs within the same Faculty. He received his Ph.D. degree from University Hassan II Mohammadia in 2005, and his thesis subject was &quot;Virtual Container Terminal: Design and Development of an object platform for the simulation of the operations of a container terminal</title>
		<author>
			<persName><surname>Dr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">His research area includes Transport, Geographic Information System and Big Data</title>
		<imprint/>
	</monogr>
	<note>Email: MOHAMED.RIDA@univh2c.ma</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
