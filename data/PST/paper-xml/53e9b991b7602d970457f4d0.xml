<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On-Line and First Fit</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">A</forename><surname>Gvarfas</surname></persName>
						</author>
						<author>
							<persName><forename type="first">J</forename><forename type="middle">'</forename><surname>Le</surname></persName>
						</author>
						<title level="a" type="main">On-Line and First Fit</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8CA47EEBD490EBCBB7902CDC2C3B27BC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T06:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A graph coloring algorithm that immediately colors the vertices taken from a list without looking ahead or changing colors already assigned is called "on-line coloring." The properties of on-line colorings are investigated in several classes of graphs. In many cases w e find on-line colorings that use no more colors than some function of the largest clique size of the graph. We show that the first fit on-line coloring has an absolute performance ratio of two for the complement of chordal graphs. We prove an upper bound for the performance ratio of the first fit coloring on interval graphs. It is also shown that there are simple families resisting any on-line algorithm: no on-line algorithm can color all trees by a bounded number of colors.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>A coloring (or proper coloring) of a graph G is an assignment of positive integers called "colors" to the vertices of G so that adjacent vertices have different colors.</p><p>An on-line coloring is a coloring algorithm that immediately colors the vertices of a graph G taken from a list without looking ahead or changing colors already assigned. To be more precise, an on-line coloring of G is an algorithm that properly colors G by receiving its vertices in some order u , , . . . , u,,. The color of u, is assigned by only looking at the subgraph of G induced by the set { u , , . . . , u,}, and the color of u, never changes during the algorithm.</p><p>Let A be an on-line coloring algorithm and consider the colorings of a graph G produced by A for all orderings of the vertices of G. The maximum number of colors used among these colorings is denoted by x,,(G). Clearly, x,\(G) measures the worst-case behavior of A on G.</p><p>On-line coloring can be viewed as a two-person game on a graph G. In each step player I reveals the vertices of G and player I1 answers by immediately coloring the current vertex. The aim of I1 might be to use as few colors as possible and then thc strategy of I against I1 consists in finding the "worst" order of vertices that forces as much color as possible.</p><p>The simplest on-line coloring is the first fit algorithm, for which we use the abbreviation "FF" throughout the paper. The first fit algorithm (FF) is an online coloring that works by assigning the smallest possible integer as color to the current vertex of the graph.</p><p>Obviously, FF produces a maximal stable sequence partition V ( G ) = S , U . . . U S,, where S, is a maximal nonempty stable set in the subgraph induced by S, U * * U S I , for every i, 1 5 i 5 k . The converse is also true: every maximal stable sequence partition of G can be reproduced by FF if an appropriate ordering of the vertices is taken. Therefore, xFF(G) coincides with the canonical achromatic number of a graph G introduced in [S].</p><p>Our interest in on-line graph coloring algorithms is motivated by the fact that certain situations necessitate the performance of on-line operations. Such situations occur, for instance, in dynamic storage allocation <ref type="bibr" target="#b8">[9]</ref>. In some cases these problems are formulated as two-dimensional packing problems (see [ 1 and 31). Certain algorithms can be interpreted as on-line colorings in special families of graphs. In particular, the rectangle packing problem of M. Chrobak and M. Slusarek <ref type="bibr">([4,5]</ref>) can be formulated as follows: how powerful are the on-line and FF colorings on the family of interval graphs? It is asked in <ref type="bibr">[4]</ref> whether FF has a constant performance ratio in the family of interval graphs. This fascinating problem inspired the present paper.</p><p>Our main concern is to get upper bounds for xa(G), in particular for xFF(G). in terms of w ( G ) for several classes of graphs. Here w ( G ) denotes the clique number of G, i.e., the maximum number of vertices in a complete subgraph of G.</p><p>First we consider FF in the case of subfamilies of perfect graphs. We prove the following results:</p><formula xml:id="formula_0">XFF(G) 5 o ( G ) + 1 XFF(G) 5 ; w ( G ) xFF(G) 5 2 . w(G) -I if G is split graph (Proposition 2.2); if G is the complement of a bipartite graph (Theorem 2.3); if G is the complement of a chordal graph (Theorem 2.4).</formula><p>For perfect graphs w(G) = x(G), where x(G) denotes the chromatic number of G, i.e., the minimum number of colors in a proper coloring of G. Therefore the (tight) bounds given above show that the performance ratio xJG)/x(G) of FF coloring is constant for the appropriate perfect graphs. The positive answer to the question of Chrobak and Slusarek would imply the analogous result concerning interval graphs. The authors proved that for every n there is a constant We are grateful to him for allowing us to present his result as Theorem 3.4 in this paper.</p><p>Although no linear upper bound is known, the computer experiences of T. F. Liska [personal communication] with random interval families seems encouraging to accept FF coloring as a practical approximation algorithm for the on-line coloring problem of interval graphs. (The performance ratio obtained varies between 1.3 and 1.4). A result of <ref type="bibr">Kierstead and Trotter ([lo]</ref>) can be interpreted as an on-line algorithm to color interval graphs with at most 3w(G) -2 colors. This result is sharp, i.e., no on-line algorithm can color all interval graphs with less than 3w(G) -2 colors.</p><p>We It is well known that FF coloring is ineffective on the family of bipartite graphs. We prove that bipartite graphs also resist any on-line algorithm: for all n there is a tree T, such that xA(T,,) 2 n for all on-line algorithms A (Theorem 2.5).</p><p>The power of on-line colorings depend to some extent on the absence of certain induced forests in the graphs to be colored. A graph G will be called "F-free" if G does not contain an induced subgraph isomorphic to F. It is easy to see, for example, that FF works "perfectly" on P,-free graphs, that is, xFF(G) = x ( G ) if G is P,-free (Proposition 2.1). On the other hand, no on-line algorithm can be effective on the family of P,-free graphs: for all n there exists a P,-free graph G,, such that x(G,,) = 2 and xA(Gn) 2 n for all on-line algorithms A (Theorem 4.5).</p><p>Concerning small forests, we prove among other things that xFF(G) can be bounded in terms of w ( G ) if G is claw-free (Theorem 4.1) or 2K,-free (Theorem 4.2). The family of all ( K 2 + 2K,)-free graphs G is an example where FF is ineffective but there exists a more sophisticated on-line coloring A for which xA(G) can be bounded in terms of w(G) (Theorem 4.4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">FIRST FIT COLORINGS ON PERFECT GRAPHS</head><p>In this section xFF(G) 2 k is interpreted as follows: the vertex set of G has a maximal stable sequence partition into k or more nonempty stable sets S,, S,, . . . satisfying that every S, (i = 1,2, . . .) is a maximal stable set in the subgraph of G induced by S, U s,,, U . . . .  If G is a P,-free graph (i.e., contains no path of four vertices Proof. It is well-known (see 121) that any maximal stable set of a P,-free graph meets all maximal cliques of the graph. Thus the proposition follows by induction on w ( G ) . I Concerning the role of P, subgraphs in on-line colorings, we note that xFF(G) = 2 if and only if G is a P,-free bipartite graph-i.e., the union of disjoint complete bipartite graphsand has at least one edge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 2.2.</head><p>set with arbitrary edges between them), then x,..,(G)</p><formula xml:id="formula_1">5 w(G) + 1.</formula><p>If G is a split graph (i.e., the union of a clique and a stable I Since the complement of a split graph is also a split graph, by definition, we immediately obtain that SFF(G) 5 a(G) + 1 holds for every split graph G. If G ' has more components than G, then the claim easily follows by using the inductive hypothesis. Otherwise, C has a simplicia] vertex (a vertex whose neighborhoods induce a clique) in C,. This vertex can be added to any maximum independent set of GI and again the proof follows by induction:</p><formula xml:id="formula_2">(k -1) + I k + l + 1 &gt; - 2 2 . a(G) 2 a(G') + 1 2</formula><p>The path uo, u , , . . . , u3,-, with additional edges uj,uj,, for every i = 0 , 1 , . . . , n -I is an example of a graph G with SFF(G) = 2a(G) -1 . I Theorem 2.4 says that xFF is bounded in terms of the clique number for the complement of chordal graphs. Our next result will show that this is not true for the family of chordal graphs, even more, there is no bounded on-line algorithm for trees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 2.5. h ( T , j ) 2 n holds for every on-line algorithm A .</head><p>For every positive integer n there exists a tree T,, such that Proof. In the proof, on-line colorings are viewed as a two-person game; the vertices of a graph are revealed by player I and player 11 colors the current vertex. Suppose that I wins when 11 is forced to use at least n colors. We will show a winning strategy for 1 by defining "winning" trees T , for every n = 1 , 2 , . . . .</p><p>Let TI be the single vertex tree and assume that TI, . . . , T,,-, have already been defined. Then T, is obtained as follows: We take for every k , 1 S k 5 n -1, IV(T,)I disjoint copies of T, and in all copies we distinguish distinct vertices as roots. Tree T, is formed as the union of all these rooted copies of TI, . . . , T,-I plus a new vertex .r joined to every root. Now we show how I has to play on T,, against 11, who can apply an arbitrary on-line coloring algorithm A . One can assume that there are strategies for I that forces at least k distinct colors when playing on T, (1 5 k 5 n -1).</p><p>We argue that I is able to obtain n -1 distinct colors at the roots. Assume that 1 has only revealed vertices from copies of T , , . . . , Tk-I and forced k -1 distinct colors at the corresponding roots (1 5 k 5 n -1). Now continue the game with a copy of Tk until forcing a kth distinct color at some vertex u. Then I can freely identify Tk with its copy in T,, , which has the root corresponding to u.</p><p>Obtaining in this way n -1 distinct colors at the roots, I wins by revealing vertex x of T,. This proves the theorem. I</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">FIRST FIT COLORING ON INTERVAL GRAPHS</head><p>The "rectangle problem" of M. Chrobak and M. Slusarek 141 can be formulated as the question of whether FF achieves a constant performance ratio on the family of interval graphs. In more explicit form the problem is as follows: </p><formula xml:id="formula_3">Problem</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">ON-LINE COLORINGS OF GRAPHS WITH FORBIDDEN FORESTS</head><p>The results of this section concern the power of FF and on-line colorings in families of graphs that do not contain a fixed forest F as induced subgraph. In [6], it was conjectured that graphs in these families have proper colorings when the number of colors depends only on F and the clique number of the graph. We show that such proper colorings can be provided by FF (if F is one of the forests K,,,, 2K2, and K,,: + K,) or by an on-line algorithm (when F = Kz + 2K,). On the other hand, x ( G ) is bounded in terms of w(G) if C is P,-free ([7]) but no on-line algorithm can produce such a coloring of G.</p><p>Let R ( k , 3) denote the Ramsey function, i.e., R ( k , 3) is the smallest n for which any graph on ti vertices contains either a complete subgraph on k vertices or three vertices inducing a stable set. Proposition 4.1. If G is a claw-free graph, then Proof. Let A , , . . . ,A,,, be the color classes defined by FF for some order of the vertices of G (which is a maximal stable sequence partition). Then for some fixed vertex x E A,,, there exist vertices x, E A , , 1 5 i 5 m -I , such that xx, E E(G). Since the subgraph of G induced by the set {xl, . . . , x , ~-~} contains neither a clique of w(G) vertices nor a stable set of three vertices, m 5 R(w(C), 3) follows. I Theorem 4.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>w(G).</head><p>If G is a 2K2-free graph, then x+(G) is bounded in terms of Proof. It is known that x ( G ) 5 ("'"i I) if G is 2K,-free (see [ 11 I). Let A , , . . . ,A,, denote the stable sets in a proper coloring of G such that m 5 I). Let B , , . . . , B k denote a maximal stable sequence partition formed by FF. We say that B, is of type ( j , , . . . ,J,) for 1 5 j , &lt; . * . &lt; j , 5 m when B, r l A, # 0 if and only i f j E { j , , . . . ,J,}.</p><p>We claim that all B, are of different type. Assume that B , and B2 are of the same type, say type ( 1 , . . . , t ) . We choose q, E A, f l B, for all i, 1 d i 5 z. Clearly y, is adjacent to some vertex of B , , 1 5 i 5 t . Therefore we can choose an edge set of G in the form { q l , p I 2 , q r 2 p l 3 , colors during stage i of A. (In fact, a second color may come only at the last vertex of A: during stage i of A . )</p><p>We prove that the number of colors used by A is bounded above by a function of w ( G ) .</p><p>It is clear that there are at most w ( G ) stages during It is worth noting that the idea used in the proof of' Theorem 4.4 can be extended to get an on-line algorithm A for which xA(G) is bounded in terms of w(G) and t , for all rK,-free graphs G.</p><p>We also note that A cannot be changed to FF in Theorem 4.4. To see this, let G,, denote the graph obtained from the complete n -IZ bipartite graph by rimoving IZ independent edges. Clearly, G, is ( K , + 2K,)-free. Moreover, G, is the standard example to demonstrate x(G,,) = 2 and xFF(G,,) = n (see, e.g., (81). We note that there is an obvious on-line coloring that uses three colors for all G,, .</p><p>Our final result in this section shows that on-line colorings are ineffective on P,-free graphs. For every positive integer n there exists a bipartite P,-free Proof. This proof is similar to that of Theorem 2.5, where on-line colorings are viewed as a two-person game. The vertices of a graph are revealed by player I and player I1 colors the current vertex. Suppose that I wins when I1 is forced to use at least n colors. We give winning strategy for I by defining P6free bipartite graphs G,, G2, . . . .</p><p>Let G, be a single vertex and assume that G I , . . . , G ,,-, have already been given. Then G, is defined as follows: We take for every k , 1 5 k I n -I , disjoint copies of G,, say G l and G:. We add a new vertex x and join with every vertex of G i lying in the first bipartite class and with every vertex of G: lying in the second bipartite class, 1 5 k 5 n -1. (For k = I the two classes coincide.) One can easily check that G, is bipartite and contains no induced P,,. Now we show how to play on G, against 11.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>c(n) such that xF(G) 5 c(n) . w(G)' ' ( I "' if G is interval graph. W. Just proved [personal communication] a better upper bound, xJG) S m ( G ) log(w(G)).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>should mention a result of C. McDiarmid in 181, which says that FF behaves quite well asymptotically, since xrF(G) 5 (2 + E ) * x ( G ) holds for almost all graphs G.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>For convenience, we also introduce the complementary notion of first fit clique covering as SFF(G) = xkF(E), where denotes the comprement of graph G, and we refer to the stability number a(G) = w ( G ) .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Proposition 2</head><label>2</label><figDesc>.1. as induced subgraph), then</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Theorem 2. 3 .</head><label>3</label><figDesc>is tight. If C is bipartite graph, then SFF(G) 5 * a ( G ) , and this bound Proof. A maximal clique sequence partition of G consists of a set F of independent edges and a stable set X U Y of the nonsaturated vertices (X and Y are, respectively, in the first and second bipartition class of G). Obviously, IF1 + 1x1 5 &amp; ( G I , IFI + IYI 5 &amp;(GI, and IX u YI = 1x1 + IYI 5 a ( G ) . From these three inequalities SFF(G) = IF\ + I X U YI 5 f . a(G) follows. To see that the bound is tight, let V(G) = A U B U C U D . Suppose that A , B , C, and D are pairwise disjoint stable sets of k vertices, and that A U B , B U C, and C U D induce complete bipartite subgraphs. Then clearly, tFI(G) = 3k and a(G) = 2k. I A graph is called chordal if it has no induced subgraph isomorphic to a cycle with at least four vertices. Note that the split graphs considered in Proposition 2.2 are chordal (in fact, as one can verify easily, G is a split graph if and only if both G and G are chordal graphs); furthermore, trees and interval graphs also belong to the family of chordal graphs. Theorem 2.4. graphs satisfying equality.If G is chordal, then SFF(G) 5 2 * a(G) -1, and there are Proof. To prove the upper bound we use induction on IV(G)l. The theorem is true if G is a complete graph. Let C , , C, , . . . , C, be a first fit clique partition of G -that is, C, is a maximal clique in the subgraph of G induced by C, U . . * U C, for every i, 1 5 i 5 k . We shall show that a(G) 2 ( k + 1)/2. Let GI = G\V(C,). Obviously, C2,C,, . . . ,Ck is a first fit clique partition of GI.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>.</head><label></label><figDesc>Is there an absolute constant c such that x1+.(G) d c * w(G) for every interval graph G ? For the family of unit interval graphs, M. Chrobak and M . h s a r e k proved xFF I 2 . w -1 in 151 and there arc unit interval graphs (intersection graphs of unit intervals in the real line) for which the bound is tight.For the family of all interval graphs it is easy to see that x,.~. 5 w'. This was improved by A. Krawczyk IM. Chrobak, personal communication] to xFF 5 On the other hand, xFk 2 40 -9 has been proved in (51 and it was reported [M. Chrobak, personal communication] that this lower bound is improved by M. husarek to xFF 2 (22/5)w + c with some constant c . The main result of this section (Theorem 3.4) is due to W. Just [personal communication]. It says that x,, S cw log w , which improves the bound of Lemma 3.2. Throughout this section 3 denotes a finite family of closed intervals of the real line R . (An interval can appear more than once in the family.) Let G,j denote the intersection graph of 3. It is natural to use the notation ~~~( 3 ) = x,.~(G,~-) and w ( 3 ) = w(G,). We need some further notation. Let 3 be a family of intervals. p E R and I E 3. Then we introduce w? -2 . w + 4. p ( p , 5) = /{I : I E 3 , p E /}I, p ( l , 5) = min p ( p , 3 ) , Pel and p ( 5 ) = rnax p ( / , 3 ) . It is easy to see that w ( 3 ) = maxPER p ( p , 5) holds for every interval family 3. f(k) 5 g ( k ) follows from the definition. (Equality never holds; for example,f(l) = I,g(l) = 3.) The recursion of Lemma 3.3 clearly implies g ( k ) 5 ck log k . Recall that f(k) 5 g ( k ) and we have Theorem 3.4 (W. Just). If G is an interval graph, x , , ( G ) S cw(G) log(w(G)). I</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Theorem 4. 5 .</head><label>5</label><figDesc>graph G,, such that xA(G,,) 2 IZ holds for every on-line algorithm A .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>A , since at stage i there exists a clique of G with i vertices. For a fixed i ( 1 5 j &lt; k 5 i ) the vertices of Bf,L colored during stage i of A induce a clique in G, since G is ( K ? + 2K,)free. Therefore at most w ( G ) colors are used on B ; ~k during stage i of A (for fixed i , j , and k ) . As we noted before, the vertices of A; for fixed j and i, 1 5 j 5 i , are colored with at most two colors. Therefore, the number of colors used by A at stage i is at most w ( G ) . (;) + 2 i . The total number of colors used</figDesc><table><row><cell>by A can be estimated as</cell></row><row><cell>&lt;"(GI c w ( G ) -( 1) + 2 i . I 1-I</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors are grateful to one of the referees who gave a proof for Theorem 2.4 and allowed us to present it in this paper. Our original proof was longer.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this section we interpret FF on 3 as a partition of 3. A partition 3 = TI U . * . U 5," is produced by FF if and only if every TI contains pairwise disjoint intervals, and for all i andj, I 5 i &lt; j I rn, J E 3l implies I fl J # 0 for some I E 3,. Obviously, subfamilies 3i, . . . ,3", correspond to a maximal stable sequence partition of G , produced by FF. 3' C = {Ii, . . . , I k } a set of pairwise intersecting intervals, and p € n;=l I,. We choose the first L(k -1)/2J intervals of YG in "increasing left end-point'' order and then choose the first L(k -1)/2J intervals of X in "decreasing right end-point'' order. At most 2 . L(k -1)/2J &lt; k intervals are chosen and they cover any further I, € X separate L(k -1)/2J-times.</p><p>The following lemma comes easily from Proposition 3.1.</p><p>For small values of k , Lemma 3.2 gives f(2) 5 4, f ( 3 ) 5 7, f(4) 5 12, f ( 5 ) 5 17, etc. These upper bounds are tight only for k = 2 and k = 3 (f(4) = 11). The best upper bound that one can derive from Lemma 3.2 is f ( k ) 5 c(n)kit"" for all n . We do not prove Lemma 3.2 since the following lemma of W. Just gives a better upper bound off(k):</p><p>Proof. Assume that g(2k) L 2g(k) + 6k -1 = n. Then there exists a family 5 with p ( 3 ) = 2k such that 3 is partitioned into Ti U $2 U . . . U Tn by FF. Consider the family 3' = Ur-,,,3, where rn = g ( k ) + 6k -1. Clearly</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3' is partitioned into</head><p>Let A be defined as the set of those elements j from { 1, . . . , m -1) for which 5, has an interval containing at least one end-point of 1. Let B = { 1, . . . , m -l}M. For any fixedj E B , let 57 denote the set of intervals in 5, that are in the interior of I . The definition of FF implies that 3: # 0 for all j E B . Lct 5* = U,EB5,?. It is obvious that $* is partitioned into IBI parts by FF.</p><p>On the other hand, Suppose that this edge set is chosen so that s is as small as possible.</p><p>Consider the subgraph H induced by the vertices q t , , P , ~, q,', and p,, in G. If s = 2, then H is isomorphic to 2Kz, a contradiction. If s &gt; 2, then q,\pl2 4 E(C) (from minimality of s), and again H is isomorphic to 2K2. Thus we proved the claim that shows</p><p>We state our next theorem without proof.</p><p>Theorem 4.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>terms of w(G). I</head><p>If G is a (K,,? + K,)-free graph, then xFF(G) is bounded in</p><p>in terms of w ( G ) for all (K, + 2K,)-free graphs G.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>There exists an on-line algorithm A such that h ( G ) is bounded</head><p>Proof. Assume that the vertices of G are given in the order u , , . . . , u,. Let K denote a complete subgraph of G that may change during the algorithm. Initially K = { u , } and color u , with color one. We say that the algorithm is in stage i if ]KI = i. The algorithm A runs as follows: Assume that we are in stage i , K = {s,, . . . , si}. The vertices to be colored at state i may belong to A ; , A \ , . . . , A : or to B i z , B',3, . . . , B : -, , , according to the following rule:</p><p>If y E V ( G ) is adjacent to all vertices of K\(s,} or i = 1, then y E A ; . Assume that 1 5 j &lt; k 5 i. The sct Bj. k denotes those vertices of V(G)\( U : = , A : U K ) that are not adjacent to s, and to s k , but adjacent to all vertices of {s,, . . . , s k -,}\{s,}. The definition of A i t . . . , A,' implies that the sets A J (for j = I , 2 , . . . , i) and B;,, (for all pairs j , k satisfying 1 5 j &lt; k S i) form a partition of V(G)\K. The algorithm A proceeds at stage i as follows: Let u," be the next vertex of G to be colored. If urn E BI,p for some j and k , 1 5 j &lt; k 5 i, then u , ~ gets a new color and A remains at stage i. If u,, E A; for some j , 1 5 j 5 i, then color of urn is the smallest color that was not used in { u , , . . . . u m } \ A ) and allowed by the previous colors assigned to Aj\{u,} during stage i of A . If the vertices of { u , , . . . , urn} that belong to A; during stage i of A determine a stable set in G, then A remains at stage i. Otherwise, there exists an m ' &lt; m such that u,.u,,, is an edge of G and urn. E A; during stage i of A . In this case stage i is finished and K is redefined as (K\{.Y,}) U u , , . , ~, } .</p><p>Clearly, K is a clique of G and IKI = i + 1.</p><p>We can change the notation to write K as {s,, . . . , s, , s, ,} and A enters stage i + 1. Note that, for a fixed j , the vertices of A : are colored with at most two We argue that I is able to obtain I I -1 neighbors of ,r colored with distinct colors. Assume that I revealed only vertices from copies of G , , . . . , G L -, and forced k -1 distinct colors on the neighbors of .r. Now I can continue the game with revealing vertices from a copy of G, until forcing a new color at some vertex u . Let us identify this copy with G: or G i according to which u lies in the first or second bipartite class of (2,. Obtaining n -1 distinct colors at the neighbors of x in this way, I wins by revealing vertex x. I</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Shelf algorithms for two-dimensional</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">S</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Schwartz</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Strongly perfect graphs</title>
		<author>
			<persName><forename type="first">C</forename><surname>Berge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Duchet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Discrete Math</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Lower bounds for on-line twodimensional packing algorithms</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">S</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">P</forename><surname>Katseff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Informatica</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="207" to="225" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Problem 84-23</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chrobak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Slusarek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J . Algorithms</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">588</biblScope>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">On some packing problems related to dynamic storage allocation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chrobak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Slusarek</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
	<note>Manuscript</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">On Ramsey covering numbers. Infinite and Finite Sets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gybrfbs</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>North Holland</publisher>
			<biblScope unit="page" from="801" to="816" />
			<pubPlace>Amsterdam</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Problems from the World Surrounding Perfect Graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gyarfas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer and Automation Institute Studies</title>
		<imprint>
			<biblScope unit="volume">177</biblScope>
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Coloring random graphs badly. Graph Theory and Combinatorics</title>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdiarmid</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
			<publisher>San Francisco</publisher>
			<biblScope unit="page" from="76" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An estimate of the store size necessary for dynamic storage allocation</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Robson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="416" to="423" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An extremal problem in recursive combinatorics</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T</forename><surname>Trotter</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Kierstead</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Congressus Numerantiurn</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="143" to="153" />
			<date>198</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A bound on the chromatic number of graphs without certain induced subgraphs</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Wagon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J . Combinat. Theory Ser. B</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="57" to="61" />
			<date type="published" when="1980">1980. 1983. 1984</date>
		</imprint>
	</monogr>
	<note>SIAM J . Comput.</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
