<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Future Generation Computer Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2020-01-31">31 January 2020</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Zi-Min</forename><surname>Gu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Ocean University of China</orgName>
								<address>
									<postCode>266100</postCode>
									<settlement>Qingdao</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Gai-Ge</forename><surname>Wang</surname></persName>
							<email>gaigewang@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Ocean University of China</orgName>
								<address>
									<postCode>266100</postCode>
									<settlement>Qingdao</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Future Generation Computer Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2020-01-31">31 January 2020</date>
						</imprint>
					</monogr>
					<idno type="MD5">095B55C54D125C319E7CEDC0C371EB97</idno>
					<idno type="DOI">10.1016/j.future.2020.01.048</idno>
					<note type="submission">Received 1 August 2019 Received in revised form 21 December 2019 Accepted 27 January 2020</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Terms-Information feedback models NSGA-III IFM-NSGAIII Many-objective Large-scale optimization</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recently, more and more multi/many-objective algorithms have been proposed. However, most evolutionary algorithms only focus on solving small-scale multi/many-objective optimization problems, and few researchers pay attention to solving large-scale optimization problems. Like NSGA-III, although it performs well in solving many-objective optimization problems, it does not perform well in largescale optimization problems. To solve this problem, in this paper, we introduce the information feedback models to improve the ability of NSGA-III to solve large-scale optimization problems. In the feedback models, the historical information of individuals in the previous generations is used in the update process of the current generation. According to the different ways of selecting individual, information feedback models are divided into two categories: one is to select individuals in a fixed way (called M-F) and the other is to select individuals randomly (called M-R). For each type of model, if the number of individuals selected is different, the information feedback models also have some difference. According to the number and mode of individual selection, there are six models in this paper. These six models are respectively embedded into NSGA-III to generate six improving NSGA-III algorithms (these six algorithms are collectively referred to as IFM-NSGAIII). These six algorithms are compared with the original NSGA-III on 9 benchmark problems to search the best information feedback model and the best IFM-NSGAIII algorithm. Then the two best IFM-NSGAIII algorithms are compared with four state-of-the-art algorithms on 9 test functions. Experiments show that the proposed algorithms are highly competitive on test problems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Everyone always hopes to get the greatest benefit at the lowest cost. This hope is mathematically an optimization problem. However, in real life, there are lots of optimization problems with multiple objectives, and there are often contradictions among these objectives. It is often impossible to find the optimal solution that satisfies all the goals at the same time. Therefore, multiobjective optimization problems usually have a set of solutions rather than a single solution and multi-objective optimization algorithms have attracted more and more researchers' attention. Usually, optimization problems with two or three objectives are called multi-objective optimization problems (MOP), while problems with four or more objectives are called manyobjective optimization problems (MaOP). After decades of research, the research on MOPs has been fully developed, and more and more attention has been paid to solving MaOPs. Currently, methods of solving optimization problems are usually divided into two categories. One is the classical optimization algorithms, such as gradient descent method, Newton method and quasinewton method, and conjugate gradient method. The other is heuristic algorithms, which are inspired by person's experience in solving some problems or behavior of some living things in nature. Classical optimization algorithms usually need to calculate derivatives or differentials, so it is difficult to apply to many complicated problems in reality. Usually when we solve a MOP, we use heuristic algorithms, such as genetic algorithms (GAs) <ref type="bibr" target="#b0">[1]</ref>, simulated annealing (SA) <ref type="bibr" target="#b1">[2]</ref>, particle swarm optimization (PSO) <ref type="bibr" target="#b2">[3]</ref>, ant colony optimization (ACO) <ref type="bibr" target="#b3">[4]</ref>, and differential evolution (DE) <ref type="bibr" target="#b4">[5]</ref>.</p><p>In the past decades, multi-objective evolutionary algorithms (MOEAs) based on heuristic algorithms, such as NSGA <ref type="bibr" target="#b5">[6]</ref>, NSGA-II <ref type="bibr" target="#b6">[7]</ref>, and MOEA/D <ref type="bibr" target="#b7">[8]</ref>, have been well developed to solve MOPs and realistic problems, such as scheduling <ref type="bibr" target="#b8">[9]</ref>, image <ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref>, feature selection <ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref><ref type="bibr" target="#b14">[15]</ref> and detection <ref type="bibr" target="#b15">[16]</ref>, path planning <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref>, texture discrimination <ref type="bibr" target="#b18">[19]</ref>, factor evaluation <ref type="bibr" target="#b19">[20]</ref>, saliency detection <ref type="bibr" target="#b20">[21]</ref>, classification <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref>, object extraction <ref type="bibr" target="#b23">[24]</ref>, gesture segmentation <ref type="bibr" target="#b24">[25]</ref>, economic load dispatch <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b26">27]</ref>, shape design <ref type="bibr" target="#b27">[28]</ref>, unit commitment <ref type="bibr" target="#b28">[29]</ref>, vehicle routing <ref type="bibr" target="#b29">[30]</ref>, knapsack problem <ref type="bibr" target="#b30">[31]</ref><ref type="bibr" target="#b31">[32]</ref><ref type="bibr" target="#b32">[33]</ref>, and fault diagnosis <ref type="bibr" target="#b33">[34]</ref><ref type="bibr" target="#b34">[35]</ref><ref type="bibr" target="#b35">[36]</ref>, and test-sheet composition <ref type="bibr" target="#b36">[37]</ref>. However, the performances of MOEAs are poor in solving many-objective problems, because the number of nondominated solutions increases exponentially with the increment of the objectives. Therefore, more and more attention has been paid to the many-objective evolutionary algorithms (MaOEAs). Now lots of MaOEAs are developed on the basis of the original MOEAs with some new strategies, such as NSGA-III <ref type="bibr" target="#b37">[38]</ref> and UMOEA/D <ref type="bibr" target="#b38">[39]</ref>. These algorithms not only inherit the original algorithm frameworks and advantages, but also add new strategies, including information from the reference point, neighbor, or elite individual, to solve the shortcomings of the original algorithms. The results also prove that these new strategies are effective, so more and more researchers begin to use different strategies to join the research of algorithms. For example, Sieni et al. <ref type="bibr" target="#b39">[40]</ref> proposed migration NSGA (M-NSGA) to improve the performance of original NSGA algorithm by using a migration strategy. The migration strategy is to introduce new individuals into the population to simulate the effects of migration in nature, and experiments show that the migration strategy can improve the approximation of the Pareto-optimal solutions. In 2018, Sieni et al. <ref type="bibr" target="#b40">[41]</ref> proposed self-adaptive migration NSGA (SA-M-NSGA) which can further improve the performance of NSGA on the basis of M-NSGA, and applied SA-M-NSGA to the optimal design of inductors for magneto-fluid hyperthermia.</p><p>However, few researchers utilize the historical information of individual in the previous iterations to improve the performance of the algorithm. Even if the individuals are saved, only the best individuals at the last iteration process are selected and other bad individuals are deleted, which may lead to the loss of some information conducive to population evolution. In addition, most of evolutionary multi-objective optimization (EMO) algorithms are mainly used to solve small-scale optimization problems whose number of decision variables is small and usually less than 100, but there are many large-scale optimization problems in real life whose number of decision variables may even reach thousands. Considering the needs of the real society, it is necessary to improve the algorithm to solve large-scale optimization problems.</p><p>In this paper, we introduce information feedback models <ref type="bibr" target="#b41">[42]</ref> into the original NSGA-III framework <ref type="bibr" target="#b37">[38]</ref> to solve the large-scale optimization problems. The principle of the models is to use the information of the individuals in the previous iterations to influence the generation of offspring. The main process is divided into two steps. Firstly, in the current iteration, the individual is generated by the selection, crossover, and mutation operators of the original NSGA-III algorithm. Then, the historical information of one, two, or three individuals is selected in a random or fixed way, and the original update individual is combined with the selected historical information based on the weighted sum method to get the new update result of the individual.</p><p>In this paper, the information feedback models are divided into two categories according to the mode of individual selection. Then, for each type of model, we can select s individuals. But a large number of individuals selected would complicate the method, so we use the same values as in the <ref type="bibr" target="#b41">[42]</ref>, s ∈ {1, 2, 3}.</p><p>According to the value of s, there are six models (M-F1, M-F2, M-F3, M-R1, M-R2, and M-R3). These six models are respectively combined with NSGA-III algorithm to get six new IFM-NSGAIII algorithms (NSGAIII-F1/F2/F3/R1/R2/R3). These six variants are compared with the original NSGA-III algorithm on 9 benchmark problems to choose the best model. Then, the best model is compared with other state-of-the-art algorithms. The experimental results show that the algorithm with information feedback model has better performance.</p><p>The remainder of this paper is as follows. Section 2 introduces the related work. Section 3 provides the background of EMO. In Section 4, we will explain in detail the six feedback models and the six proposed variants of NSGA-III. In Section 5, the experimental settings and the final experimental results are given. Section 6 is a summary of this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related work</head><p>Since Schaffer <ref type="bibr" target="#b42">[43]</ref> first successfully used evolutionary algorithm (EA) to solve MOPs, MOEAs have been greatly developed in the following decades. With the in-depth research, researchers are not satisfied with the research of multi-objective problems, but pay more and more attention to many-objective problems. In recent years, more and more MaOEAs have been proposed to solve many-objective problems and practical problems. However, most of these algorithms only focused on small-scale multi/many-objective problems, and few of them focused on large-scale optimization problems. Here we will briefly introduce some related EAs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">MOEAs</head><p>Schaffer proposed a vector evaluated genetic algorithm (VEGA) to solve MOPs <ref type="bibr" target="#b42">[43]</ref>, which combined the GA with multi-objective optimization for the first time. Since then, more and more people have applied GAs to solve MOPs. In 1989, Goldberg <ref type="bibr" target="#b43">[44]</ref> was the first person to combine Pareto domination method with EA to solve MOPs. Many classical MOEAs are influenced by the idea of Goldberg and Schaffer, like NPGA <ref type="bibr" target="#b44">[45]</ref>, NPGA2 <ref type="bibr" target="#b45">[46]</ref>, NSGA <ref type="bibr" target="#b5">[6]</ref>, and NSGA-II <ref type="bibr" target="#b6">[7]</ref>.</p><p>In 1994, Deb et al. <ref type="bibr" target="#b5">[6]</ref> proposed an evolution algorithm which combined Goldberg's idea, non-dominated sorting method, with GAs to find the set of Pareto optimal solutions (this algorithm is called NSGA). Because of its superiority in dealing with MOPs, NSGA had attracted the attention of researchers. However, after the extensive use of NSGA, researchers also found the shortcomings of NSGA which included the high computational complexity, lack of elitism, and need for specifying the sharing parameter. Then, in 2002, Deb et al. <ref type="bibr" target="#b6">[7]</ref> suggested a fast and elitist multi-objective genetic algorithm (NSGA-II) which mitigated these shortcomings through a fast non-dominated sorting method and a crowding distance method. NSGA-II was very competitive in solving MOPs, many MOEAs based on the original NSGA-II algorithm framework were proposed. A new dominance relation (g-dominance) was proposed by Molina et al. <ref type="bibr" target="#b46">[47]</ref>, which was based on the information from reference point, and then they combined the g-dominance with NSGA-II algorithm to deal with some MOPs with complicated PFs better. To improve the diversity of NSGA-II, Vachhani et al. <ref type="bibr" target="#b47">[48]</ref> presented an improved NSGA-II algorithm which used a new diversity method that followed agglomerative hierarchical clustering method and extreme solutions preservation to replace the crowding-distance method. The experimental results showed that the proposed method did improve the diversity of original NSGA-II on two-objective test instances.</p><p>Unlike the Pareto-dominated based MOEAs, Zhang et al. <ref type="bibr" target="#b7">[8]</ref> suggested a decomposition-based multi-objective evolutionary algorithm (MOEA/D) in 2007. By using decomposition method, a MOP was decomposed into several simple sub-problems and optimized at the same time. MOEA/D only used the information of the neighboring sub-problems of every sub-problem to optimize these sub-problems. Although MOEA/D is very competitive in solving MOPs, the performance of MOEA/D is not very good when solving MOPs with complicated PFs. To enhance the capability of MOEA/D in solving MOPs with complicated PFs (like PF with low tail), some different approaches have been proposed. Qi et al. <ref type="bibr" target="#b48">[49]</ref> put forward an adaptive weight vector adjustment approach to improve the performance of MOEA/D (this algorithm is called MOEA/D-AWA), they not only used a new way to initialize weight vector and an strategy which can adjust weight vector adaptively to obtain better solutions, but also used an external elite population information to help adding new sub-problems into the actual sparse region of the complicated PF.</p><p>The fundamental goal of algorithmic design is to apply algorithms to practical problems which often have more complicated objectives. In order to deal with the complicated MOPs in the real world, researchers proposed many algorithms. Ho-Huu et al. <ref type="bibr" target="#b49">[50]</ref> presented an improved MOEA/D algorithm (iMOEA/D) to deal with two-objective optimization problems with complicated PFs and applied this algorithm to structural optimization. In iMOEA/D, the authors divided the weight vectors into two subsets, including odd-weight vectors and even-weight vectors, and used a two-phase search strategy to optimize MOPs. The experimental results proved that this algorithm was effective in dealing with the complicated MOPs. Wang et al. <ref type="bibr" target="#b50">[51]</ref> used EMO algorithms which combined B*-tree with a multistep simulated annealing (MSA) algorithm as a method of high performance computing to deal with the MOP in cyber physical social systems. In the real world, Pareto optimal sets of lots of MOPs will change with the passage of time and the change of environment, so it is very important to solve the dynamic MOPs. In 2019, Guo et al. <ref type="bibr" target="#b51">[52]</ref> proposed ensemble prediction methods which consisted of moving average(MA), autoregressive(AR), and single exponential smoothing(SES) to better deal with dynamic robust MOPs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">MaOEAs</head><p>These algorithms mentioned above are very effective in solving MOPs, but many of them have poor performance in dealing with MaOPs. For example, NSGA-II is very competitive in solving MOPs, but it performs not good when dealing with MaOPs. In order to improve the ability to solving MaOPs, Deb et al. <ref type="bibr" target="#b37">[38]</ref> suggested an evolutionary algorithm (EA) based on reference point and NSGA-II framework (NSGA-III) that used the information from a set of supplied reference points and niche technology to select the new parent population, which greatly improved the diversity of population and the ability to solving MaOPs. But one disadvantage of NSGA-III was that it used a fixed rate for mutation operators. To solve this problem, Yi et al. <ref type="bibr" target="#b52">[53]</ref> used adaptive mutation operators to improve the performance of the NSGA-III algorithm. The improved NSGA-III algorithms based on adaptive mutation operators can be well used to deal with big data optimization problems.</p><p>Because the performance of traditional EAs based on Pareto dominance deteriorated with the increment of objectives in MaOPs, researchers began to study improved Pareto dominance and other new dominance relationships, such as ϵ-dominance <ref type="bibr" target="#b53">[54]</ref> and fuzzy Pareto dominance <ref type="bibr" target="#b54">[55,</ref><ref type="bibr" target="#b55">56]</ref>. Amarjeet et al. <ref type="bibr" target="#b56">[57]</ref> proposed a fuzzy Pareto dominance driven artificial bee colony (FP-ABC) to solve MaOPs better. In FP-ABC, besides fuzzy-Pareto dominance, two external archives have also been combined into artificial bee colony (ABC) algorithm to improve the performance of ABC. In 2015, Yuan et al. <ref type="bibr" target="#b57">[58]</ref> introduced a new dominance relation (θ dominance) and proposed a new MaOEAs based on θ dominance (θ -DEA) to overcome the shortcomings of the traditional Pareto dominance-based algorithms. Before performing θ dominance-based sorting, population members were assigned to different clusters and there may be a dominant relationship between the two solutions when and only when the two solutions belonged to the same cluster. In 2013, Yang et al. <ref type="bibr" target="#b58">[59]</ref> put forward a grid-based evolutionary algorithm (GrEA), which introduced grid dominance, grid difference, three grid-based criteria (grid ranking, grid crowding distance, and grid coordinate point distance) and the modified fitness assignment, to obtain the optimal solutions for the equilibrium of convergence and diversity.</p><p>Although some MaOEAs, like NSGA-III, were good in solving MaOPs, they were mainly applied to unconstrained problems and practical problems with box constraints. To deal with constrained MaOPs, Deb et al. <ref type="bibr" target="#b59">[60]</ref> suggested NSGA-III with constrainthandling approach. They used a constraint-domination method and modified tournament selection operation to handle constrained problems without adding any new parameters. Xiang et al. <ref type="bibr" target="#b60">[61]</ref> proposed an angle based EA for constrained MaOPs (CVaEA). CVaEA mainly modified mating selection and environmental selection based on the original VaEA framework. The experiment compared CVaEA with the original VaEA and two state-of-the-art MaOEAs (CNSGAIII and CMOEA/DD). The results showed that CVaEA was effective in dealing with constrained MaOPs. Interval MaOPs (IMaOPs) is one of the most important and widely faced optimization problems in practical application, to deal with IMaOPs, Gong et al. <ref type="bibr" target="#b61">[62]</ref> proposed a new EA which constructed a preference polyhedron by using the information of a set of non-dominated solutions and decision maker, and experimental results showed that this method was effective. In 2018, Gong et al. <ref type="bibr" target="#b62">[63]</ref> presented a set-based genetic algorithm where a MaOP was reduced to a bi-objective problem, and a setbased Pareto dominance relation was used to modify the fast nondominated sorting approach in NSGA-II. The results showed that this method was effective in dealing with IMaOPs. In 2019, Sun et al. <ref type="bibr" target="#b63">[64]</ref> suggested a memetic algorithm (MA) and combined several local searches into an existing IMOEA to deal with IMaOPs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Large-scale many-objective optimization problems</head><p>Whether for MOPs or MaOPs, the current optimization algorithms mainly focus on solving small-scale MOPs or MaOPs, and the researchers rarely focus on large-scale optimization problems <ref type="bibr" target="#b64">[65]</ref>. For large-scale many-objective optimization problems, many-objective optimization problems are the problems with 4 or more objectives, while large-scale optimization problems are problems with hundreds or even thousands of decision variables. However, many practical problems involve large-scale decision variables. In order to solve these problems, lots of optimization algorithms are proposed. Zhang et al. <ref type="bibr" target="#b65">[66]</ref> proposed a EA based on decision variable clustering to deal with large-scale MaOPs (LMEA). In LMEA, the decision variables were divided into convergence-related variables and diversity-related variables according to decision variable clustering method. In the decision variable clustering method, selecting a certain number of sample solutions and disturbing the decision variables of these solutions for a certain number of times to get new sample solutions, a line L is generated to fit each set of normalized sample solutions and the angle between every line L with the normal line of hyperplane</p><formula xml:id="formula_0">f 1 + f 2 + • • • + f m = 1 represents</formula><p>its corresponding decision variables contribution to convergence and diversity. The larger the angle is, the more contribution the variable makes to the diversity. On the contrary, the more contribution the variable makes to the convergence. According to this principle, k-means clustering method is used to divide variables into convergencerelated variables and diversity-related variables. Then, the two kinds of decision variables were optimized through a convergence optimization strategy and a diversity optimization strategy. The experimental results showed that the algorithm was feasible for large-scale optimization problems.</p><p>Qi et al. <ref type="bibr" target="#b66">[67]</ref> suggested an improved self-adaptive MOEA/D algorithm (SaMOEA/D), which could change the size of neighborhood and choose the genetic operator adaptively, to solve large-scale MOPs (LS-MOPs). The size of neighborhood defined the size of the search range, and the selection of genetic operator defined the search action and the new solutions. The experimental results proved that the algorithm was very competitive in dealing with LS-MOPs.</p><p>Zille et al. <ref type="bibr" target="#b67">[68]</ref> presented a weighted optimization framework (WOF). In WOF, the transformation of the original optimization problem was based on grouping variables and optimization of weights. WOF could be incorporated into each algorithm which was based on population. The experiment combined WOF with two state-of-the-art algorithms (NSGA-II and SMPSO <ref type="bibr" target="#b68">[69]</ref>), and then tested them on the 2-or 3-objective large-scale test problems. The results demonstrated that the superiority of WOF.</p><p>The algorithms mentioned above used a variety of strategies to deal with MOPs or MaOPs. Most of these algorithms are not suitable for solving large-scale multi-or many-objective problems, including the famous NSGA-III and MOEA/D. To improve the ability to deal with large-scale optimization problems of NSGA-III algorithm, in this paper, we introduce the information feedback models which use the historical information of individuals in previous iterations to participate in the generation of offspring regardless of whether individuals are good or bad, instead of the best individual information that researchers often used. The information feedback models select individuals in previous iterations with a fixed or random manner, not just the best ones. According to the different ways of selecting individual, information feedback models are divided into two categories: one is to M-F which choose individuals in previous iterations with a fixed manner and the other is M-R which choose individuals randomly. For each type of model, we can select s individuals. But a large number of individuals selected would complicate the method, so we use the same values as in <ref type="bibr" target="#b41">[42]</ref>, s ∈ {1, 2, 3}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Background</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Basic definitions</head><p>In real life, the so-called minimization problem is to obtain the maximum benefit at the minimum cost. In the scope of mathematics, the minimization problem is embodied in the minimization of the objective function (that is, to minimize all objective values of the objective function as far as possible). Assuming that MOP is a minimization problem with m optimization objectives, the MOP can be expressed as follows <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b69">70,</ref><ref type="bibr" target="#b70">71]</ref>:</p><formula xml:id="formula_1">min F (x) = (f 1 (x), f 2 (x), . . . , f m (x)) T Subject to x ∈ Ω g j (x) ≤ 0, j = 1, 2, . . . , J h k (x) = 0, k = 1, 2, . . . , K<label>(1)</label></formula><p>where x = (x 1 , x 2 , . . . , x n ) T is an n-dimensional decision variable vector, Ω is decision space and m is the number of objectives. g j (x) ≤ 0 and h k (x) = 0 are inequality and equality constraints, respectively.</p><p>Definition 1 (Pareto Dominance). For any two decision vectors x, y, when they satisfy the following conditions, we call x Pareto dominates y, which is denoted as x ≺ y.</p><formula xml:id="formula_2">f i (x) ≤ f i (y) ∀i ∈ (1, 2, . . . , m) f i (x) &lt; f i (y) ∃i ∈ (1, 2, . . . , m)<label>(2)</label></formula><p>Definition 2 (Pareto Optimal). Assuming that x * ∈ Ω, if there is no solution x ∈ Ω satisfying x ≺ x * , then x * is the Pareto optimal solution. Definition 3 (PS and PF). All the Pareto optimal solutions constitute the Pareto optimal set (PS). All the objective vectors of the solutions in PS constitute the Pareto front (PF).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">NSGA-III</head><p>NSGA-III is a GA based on reference points which is mainly used to solve MaOPs. This algorithm adopts the framework of NSGA-II except the selection operation of NSGA-II. For ease of understanding, we briefly introduce NSGA-III.</p><p>The first step is to initialize reference points and population (the size of the population is N). Reference points are a predefined set using Das and Dennis's method <ref type="bibr" target="#b71">[72]</ref>. The second step to generate offspring population Q t through selection, crossover, and mutation operators performing on the individuals of parent population P t . The third step is to arrange the solutions in a non-dominant order. Supposing it is the tth iteration of the population. then it will be regarded as the next parent population P t+1 directly. Otherwise, solutions in S t \F l are included in P t+1 and the remaining solutions of P t+1 are selected from F l according to the selection mechanism. The selection mechanism in NSGA-III is different from that in NSGA-II. In NSGA-II, the way to select solutions is according to the crowding distance of solutions in F l . The larger the crowding distance, the higher the probability of selection. However, in NSGA-III, the selection method is based on the reference point. The method first finds the ideal point z * of the population S t (z * = (</p><formula xml:id="formula_3">z * 1 , z * 2 , . . . , z * i , . . . , z * m )</formula><p>, z * i is the minimum value of the ith objective values of all solutions in the population S t ). Then normalizing the population and reference points. In this case, the ideal point is the zero vector and the reference line is the line connecting the ideal point and the reference point. We need to calculate the vertical distance of each solution in S t to each reference line and then connect the solution to the reference point with the shortest vertical distance. After that, a new nichepreserving operation is used to select individuals in F l . The niche count ρ j is the number of individuals in population S t \F l which is connected to the jth reference point. The fundamental goal of this niche technology is to improve the diversity of NSGA-III, so it first needs to find the reference point i with the lowest niche count ρ i value. Then see if there are any individuals in F l connected with the reference point i. If there are individuals connected with the reference point i, then choose one individual as the member of P t+1 according to the value of ρ i . If there are no individuals connected with the reference point, then this iteration will not consider the reference point again and repeat the niche-preserving operation with another reference point with the smallest niche count value until |P t+1 | = N. Then, the final step is to determine whether termination condition is met. If the termination condition is satisfied, output the final population. If it is unsatisfied, repeat the second step above. The pseudo-code for the same basic framework for NAGA-II and NSGA-III is shown in the algorithm 1. The flow chart of NSGA-III and NSGA-II can be shown in Fig. <ref type="figure" target="#fig_0">1</ref>. Fig. <ref type="figure" target="#fig_0">1</ref> is a brief description of the same basic framework for NSGA-III and NSGA-II. For other details, please refer to the original paper <ref type="bibr" target="#b37">[38]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Improving NSGA-III algorithms with information feedback models</head><p>In this section, we first introduce six kinds of information feedback models (IFMs) in detail and then explain the proposed IFM-NSGAIII algorithms with NSGAIII-F1 algorithm as an example (IFM-NSGAIII algorithms are improved NSGA-III algorithms based on information feedback models which are abbreviated as IFM, and NSGAIII-F1 is the improved NSGA-III algorithm with IFM M-F1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Six information feedback models</head><p>As mentioned above, in order to reduce the computational complexity, the IFMs can use the historical information of s individuals at the previous generations at a time to influence the generation of a new individual. According to the way and number of individuals selected, there are six IFMs: M-F1, M-F2, M-F3, M-R1, M-R2, and M-R3. We couple two by two these models according to the number of individuals selected. For example, both M-F1 and M-R1 select only one individual to generate a new individual of the offspring population every time.</p><p>For ease of understanding, assuming that the current generation is t, x t i represents the ith individual at tth generation. u t+1 i represents the ith individual at the (t + 1)th generation generated through the original NSGA-III and the fitness value of</p><formula xml:id="formula_4">u t+1 i is f t+1 i .</formula><p>(1) M-F1 and M-R1: Both models only need to select an individual from generation t to generate a new individual of the offspring population every time, so x t+1 i of the two models can be expressed by the same equation as follows:</p><formula xml:id="formula_5">x t+1 i = ∂ 1 u t+1 i + ∂ 2 x t k (3) ∂ 1 = f t k f t+1 i + f t k ∂ 2 = f t+1 i f t+1 i + f t k (4)</formula><p>where x t k is the kth individual we chose from the tth generation, the fitness value of of the two models can be defined as follows:</p><formula xml:id="formula_6">x t k is f t k , ∂</formula><formula xml:id="formula_7">x t+1 i = ∂ 1 u t+1 i + ∂ 2 x t k1 + ∂ 3 x t-1 k2 (5) ∂ 1 = 1 2 • f t k1 + f t-1 k2 f t+1 i + f t k1 + f t-1 k2 ∂ 2 = 1 2 • f t+1 i + f t-1 k2 f t+1 i + f t k1 + f t-1 k2 ∂ 3 = 1 2 • f t+1 i + f t k1 f t+1 i + f t k1 + f t-1 k2 (6)</formula><p>where x t k1 is the individual k 1 at the tth generation, f t k1 is the fitness value of (3) M-F3 and M-R3: Both models need to select three individuals from tth, (t -1)th, and (t -2)th generations, so we can define x t+1 i of the two models as follows:  </p><formula xml:id="formula_8">x t+1 i = ∂ 1 u t+1 i + ∂ 2 x t k1 + ∂ 3 x t-1 k2 + ∂ 4 x t-2 k3 (7)</formula><formula xml:id="formula_9">∂ 1 = 1 3 • f t k1 + f t-1 k2 + f t-2 k3 f t+1 i + f t k1 + f t-1 k2 + f t-2 k3 ∂ 2 = 1 3 • f t+1 i + f t-1 k2 + f t-2 k3 f t+1 i + f t k1 + f t-1 k2 + f t-2 k3 ∂ 3 = 1 3 • f t+1 i + f t k1 + f t-2 k3 f t+1 i + f t k1 + f t-1 k2 + f t-2 k3 ∂ 4 = 1 3 • f t+1 i + f t k1 + f t-1 k2 f t+1 i + f t k1 + f t-1 k2 + f t-2 k3 (<label>8</label></formula><formula xml:id="formula_10">)</formula><p>where x t-2 k3 is the individual k 3 at the (t -2)th generation, f t-2 k3 is the fitness value of x t-2 k3 . ∂ 1 , ∂ 2 , ∂ 3 , and ∂ 4 are weight coefficients which satisfy</p><formula xml:id="formula_11">∂ 1 + ∂ 2 + ∂ 3 + ∂ 4 = 1.</formula><p>Then, the model in Eq. <ref type="bibr" target="#b6">(7)</ref> can be divided into M-F3 and M-R3 according to the different ways of selecting individual k 1 , k 2 , and k 3 . When we use a fixed way to select individuals (in other words,</p><formula xml:id="formula_12">k 1 = k 2 = k 3 = i),</formula><p>this model is M-F3. When k 1 , k 2 , and k 3 are randomly selected integers between 1 and N, this model is M-R3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">NSGAIII-F1</head><p>Here we will describe in detail how M-F1 is combined with NSGA-III and explain the workflow of NSGAIII-F1 algorithm. The workflows of IFM-NSGAIII algorithms generated by the other five models are similar to that of NSGAIII-F1. The main process of NSGAIII-F1 can be expressed as follows:</p><p>Step 1: Initialize. Generate reference point set Λ, randomly initialize population P 0 and initialize ideal point Z min .</p><p>Step 2: Update. Supposing it is the tth generation of the population.</p><p>Step 2.1: Generate offspring population Q t . Firstly, we need to use the crossover operator and mutation operator of the original NSGA-III algorithm and the parent population P t to generate u t+1  <ref type="formula">4</ref>)).</p><p>Step 2.2: R t is obtained by combining the parent population P t with the offspring population Q t . In order to obtain the next parent population P t+1 , we need performing non-dominated sorting on R t firstly. Through non-dominated sorting, R t is divided into w different non-dominant levels (F 1 , F 2 , . . . , F l , . . . , F w ). Begin from F 1 , every time one non-dominant level is moved into the population S t until F l which is the first level making |S t | ≥ N. Then, it is necessary to observe whether |S t | = N. If so, then it will be regarded as the next generation P t+1 directly. Otherwise, solutions in S t \F l are included in P t+1 and the remaining solutions of P t+1 are selected from F l .</p><p>Step 2.3: For selecting individuals from F l , we use the selection mechanism of the original NSGA-III algorithm, including reference point information, normalization operation, and niche technology. We will not elaborate here, but refer to the original paper.</p><p>Step 2.4: Determine whether termination condition is met. If the termination condition is not satisfied, t = t + 1 and repeat</p><p>Step 2, and if it is satisfied, perform Step 3.</p><p>Step 3: Output. Output final population P t+1 .</p><p>The flow chart of NSGAIII-F1 can be shown in Fig. <ref type="figure" target="#fig_5">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Experiments</head><p>In this section, we will study the performances of the six improved NSGA-III algorithms based on six IFMs through twostage experiments. The first stage is to observe whether the six The bold font represents that this algorithm has the best performance on this problem. The number in the brackets represents the standard deviation of GD values, and the number out of the brackets represents the mean of GD values. '+' means that the relevant algorithm performs better than the NSGA-III algorithm in terms of GD values. '-' means that the relevant algorithm performs worse than the NSGA-III algorithm in terms of GD values. '=' means that the relevant algorithm performs as well as the NSGA-III algorithm in terms of GD values. IFMs improve the performance of the original NSGA-III algorithm in dealing with large-scale MaOPs and find the best model. In this stage, we compare these six IFM-NSGAIII algorithms with the original NSGA-III algorithm on 9 analytical benchmark functions (LSMOP1-9 <ref type="bibr" target="#b64">[65]</ref>) whose objectives number m ranges from 3 to 15 <ref type="bibr">(3, 5, 8, 10, and 15)</ref>, as shown in Table <ref type="table" target="#tab_2">2</ref>. Optimization problems with hundreds or thousands of decision variables are large-scale optimization problems and LSMOP1-9 is a set of typical largescale optimization problems. LSMOP1-9 is defined by specifying the shape functions, the landscape functions, the correlation matrix, and the linkage function. As for the PFs, LSMOP1-4 have a linear PF, LSMOP5-8 have a convex PF, and LSMOP9 has a disconnected PF. There are three parameters in LSMOP1-9 objective functions that need to be set, including the number of objectives m, dimensions of decision variables n, and the number of subcomponents in each variable group nk (m ∈ {3, 5, 8, 10, 15}, n = 100 * m, nk = 5). It is emphasized that the setting of LSMOP1-9 parameters is consistent with the paper <ref type="bibr" target="#b64">[65]</ref> that proposed LSMOP1-9 problem and please refer to <ref type="bibr" target="#b64">[65]</ref> for details. The second stage is to make further comparison on the basis of the first stage. In this stage, we will test whether the IFMs are more competitive in solving large-scale MaOPs than other state-of-the-art algorithms. We select the two best algorithms of the six IFM-NSGAIII algorithms according to the results of the first stage experiment and compare them with four state-of-theart algorithms, as shown in Table <ref type="table" target="#tab_2">12</ref>. The experiment is also carried out on LSMOP1-9 objective functions whose number of objectives m ranges from 3 to 15 (3, 5, 8, 10, and 15). All the above experiments were carried out on PlatEMO2017 platform.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Performance metrics</head><p>Usually the performance metrics we use to measure these algorithms' performance are divided into four kinds <ref type="bibr" target="#b72">[73]</ref>. The first is capacity metrics, which calculate the number of nondominated solutions, satisfied with pre-set conditions, in optimal solution set. The second is the convergence metrics, which measure the distance between the solutions in optimal solution set and the solutions of the real PF' approximation set. The third is the diversity metrics, which measure the distribution degree of solutions in optimal solution set. The fourth is the convergencediversity metrics, which measure the convergence and diversity of solutions at the same time.</p><p>Considering the convergence and diversity of these algorithms, we adopt the generational distance (GD) <ref type="bibr" target="#b73">[74,</ref><ref type="bibr" target="#b74">75]</ref> and inverted generational distance (IGD) <ref type="bibr" target="#b72">[73,</ref><ref type="bibr" target="#b75">76,</ref><ref type="bibr" target="#b76">77]</ref> as performance metrics. GD is a classical convergence metric and IGD is a classical convergence-diversity metrics. Assuming that O is the optimal solution set and A is the approximate set of real PF, GD, and IGD can be explained as follows:</p><formula xml:id="formula_13">GD(O, A) = √ ∑ |O| i=1 d 2 i |O| IGD(A, O) = √ ∑ |A| i=1 d 2 i |A| (9)</formula><p>where d i is the minimum Euclidean distance from the individual i in O to the solutions in A for GD. For IGD, the calculation of d i is contrary to GD. It is the minimum Euclidean distance from individual i in A to the solutions in O. The bigger the values of GD and IGD, the worse the performance of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Performance of six IFM-NSGAIIII algorithms</head><p>In this subsection, in order to test whether the six IFMs can improve the performance of the algorithm and find the best model, we will compare these six IFM-NSGAIII algorithms with the original NSGA-III algorithm on 9 benchmark objective functions whose objectives number is 3, 5, 8, 10 and 15, as shown in Table <ref type="table" target="#tab_3">3</ref>. In order to reduce the experimental complexity, the parameter settings of these six NSGA-III variants are consistent with the original NSGA-III algorithm. Table <ref type="table" target="#tab_1">1</ref> shows the parameters of these algorithms. In order to improve the credibility of the experimental results, each method is run independently 20 times on each problem. The maximum number of iterations is 10,000.</p><p>Table <ref type="table" target="#tab_2">2</ref> shows some abbreviations for algorithms. Table <ref type="table" target="#tab_3">3</ref> shows the experimental results for 9 three-objective test problems. As shown in Table <ref type="table" target="#tab_3">3</ref>, it contains the mean and standard  The data in Table <ref type="table" target="#tab_10">13</ref> is a statistic of the bold data in Tables <ref type="table" target="#tab_3">3</ref><ref type="table" target="#tab_4">4</ref><ref type="table" target="#tab_5">5</ref><ref type="table" target="#tab_6">6</ref><ref type="table" target="#tab_7">7</ref><ref type="table" target="#tab_8">8</ref><ref type="table">9</ref><ref type="table" target="#tab_9">10</ref><ref type="table" target="#tab_1">11</ref><ref type="table" target="#tab_2">12</ref>. The bold font in Tables <ref type="table" target="#tab_3">3</ref><ref type="table" target="#tab_4">4</ref><ref type="table" target="#tab_5">5</ref><ref type="table" target="#tab_6">6</ref><ref type="table" target="#tab_7">7</ref><ref type="table" target="#tab_8">8</ref><ref type="table">9</ref><ref type="table" target="#tab_9">10</ref><ref type="table" target="#tab_1">11</ref><ref type="table" target="#tab_2">12</ref>indicates that the corresponding algorithm performs best on a corresponding LSMOP problem. For example, in Table <ref type="table" target="#tab_10">13</ref>, for GD values, m = 3, and LSMOP1-9 test instances, NSGAIII-R1 performs best on four out of 9 test instances, NSGAIII-R3 performs best on one out of 9 test instances, and NSGA-III performs best on four out of 9 test instances. The last row in Table <ref type="table" target="#tab_10">13</ref> is a simple summation of the previous rows, representing the sum of the times that the corresponding algorithm performed best.    From Table <ref type="table" target="#tab_4">4</ref>, the IGD values of M-F1 are best on LSMOP1/3/5/6 and the IGD values of M-R1 are best on LSMOP2/7, and each of NSGAIII-R2, NSGAIII-R3, and NSGA-III performs best on only one out of the nine problems. From Tables <ref type="table" target="#tab_3">3</ref><ref type="table" target="#tab_4">4</ref>, we can see that the information feedback models are really helpful to improve the performance of the algorithm on the three-objective problems. Among them, M-R1 is the best model, followed by M-F1. From Tables <ref type="table" target="#tab_5">5</ref><ref type="table" target="#tab_6">6</ref>, we can know that M-F1 is the best model and M-R1 is the second best model for the five-objective test problems. The improved NSGA-III algorithms based on the two models are obviously better than the original algorithm, so the IFMs can really improve the performance of the algorithm for the 5-objective optimization test problems.</p><p>For eight-objective benchmark problems, as shown in Table <ref type="table" target="#tab_7">7</ref>, M-F1 is the best performing model which performs best on three out of the nine instances, and M-F2 and M-R1 are only second to it where each of them is best on two instances. The improved algorithms based on these models are obviously better than the original NSGA-III algorithm. From Table <ref type="table" target="#tab_7">7</ref>, M-F1 and M-R1 are the best models where NSGAIII-F1 is best on LSMOP6/7 and NSGAIII-R1 performs best on LSMOP5/8, followed by M-F2/F3/R2. Besides, from Table <ref type="table" target="#tab_8">8</ref>, we can see that NSGA-III performs best on LSMOP2/4 and the performance of NSGAIII-F1 and NSGAIII-R1 are good as NSGA-III. Overall, Tables <ref type="table" target="#tab_7">7</ref><ref type="table" target="#tab_8">8</ref>show that M-F1 is the best model, and the second is M-R1 for 9 test instances. The improved algorithm based on M-R3 have the worst performance for the 9 test instances.</p><p>As shown in Table <ref type="table">9</ref>, for GD values of 9 ten-objective test instances, M-F1 is best model where NSGAIII-F1 has the smallest GD values on LSMOP2/5/8, and the second best model is M-R1 which are best on LSMOP2/6. NSGA-III algorithm has the smallest GD values on LSMOP1/3/9, so the performance of NSGA-III and NSGAIII-F1 are the two best algorithms among these seven algorithms for 10-objective test instances according to Table <ref type="table">9</ref>. As shown in Table <ref type="table" target="#tab_9">10</ref>, NSGA-III algorithm also performs best on three examples, and M-F1 and M-F2 are the two best models where NSGAIII-F1 performs best on two instances and NSGAIII-F2 is also best on another two instances. According to Tables 9-10, the best model of the six models is M-F1, and then is M-R1. These models improve the performance of NSGA-III algorithm on some problems, but in general, the original NSGA-III algorithm performs best for 10-objective test problems.  <ref type="table" target="#tab_2">12</ref>, each of NSGAIII-F1, NSGAIII-R2, and NSGA-III performs best on three out of 9 test instances. According to Tables <ref type="table" target="#tab_1">11</ref><ref type="table" target="#tab_2">12</ref>, the improved algorithms which are based on information feedback models are better on most of the 9 instances, and M-F1 is the best model of the six models, followed by M-R1.</p><p>Table <ref type="table" target="#tab_10">13</ref> shows that statistical results of NSGAIII-F1/F2/F3/R1/ R2/R3 and NSGAI-III on LSMOP1-9 of 3-/5-/8-/10-/15-objective. As shown in the second row and sixth column of Table <ref type="table" target="#tab_10">13</ref>, some MOPs with complicated PFs better. A-NSGA-III <ref type="bibr" target="#b59">[60]</ref> was the variant of NSGA-III with constraint-handling approach. PESA-II <ref type="bibr" target="#b77">[78]</ref> presented a new selection method in which selective fitness is assigned to the hyperboxes in objective space, instead of an individual. The test functions are LSMOP1-9 problems. In order to improve the credibility of the experimental results, each method is run 20 times independently on each problem. It can be said that NSGA-III is also added to this experiment as a comparative algorithm to obtain exact experimental results. Table <ref type="table" target="#tab_11">14</ref> contains the mean and standard deviation of GD values and the bold font represents that this algorithm has the best performance on this test problem.</p><p>Table <ref type="table" target="#tab_11">14</ref> shows the GD values of these six algorithms for threeobjective LSMOP1-9 problems. From Table <ref type="table" target="#tab_11">14</ref>, we can know that NSGAIII-R1 and g-NSGA-II are the two best algorithms for 3objective test problems. The performance of NSGAIII-R1 is best on LSMOP3/5/6. While g-NSGA-II performs best on LSMOP2/4/9. PEASII is only second to NSGAIII-R1 and g-NSGA-II. Table <ref type="table" target="#tab_5">15</ref> shows the IGD values of these six algorithms for three-objective LSMOP1-9 problems. As shown in Table <ref type="table" target="#tab_5">15</ref>, the performances of NSGAIII-F1 and NSGAIII-R1 are the best on six out of LSMOP1-9 problems. These results fully demonstrate that the improved algorithms have strong competitiveness on the three-objective test problems.</p><p>Table <ref type="table" target="#tab_12">16</ref> shows the GD values of these six algorithms for fiveobjective LSMOP1-9 problems. From Table <ref type="table" target="#tab_12">16</ref>, we can know that NSGAIII-R1 is the best algorithm for the nine five-objective test problems. The performance of NSGAIII-R1 is best on LSMOP3/6/ 7/8. NSGAIII-F1 has the best performance among the six algorithms for LSMOP1/5. Table <ref type="table" target="#tab_7">17</ref> shows the IGD values of these six algorithms for five-objective LSMOP1-9 problems. As shown in Table <ref type="table" target="#tab_7">17</ref>, NSGAIII-F1 and NSGAIII-R1 perform best on seven out of the nine test instances. The experimental results show that M-F1 and M-R1 can improve the performance of NSGA-III algorithm when dealing with five-objective optimization problems.</p><p>Tables <ref type="table" target="#tab_8">18</ref><ref type="table" target="#tab_13">19</ref>show the GD and IGD values of these six algorithms for eight-objective LSMOP1-9 problems respectively. According to Tables <ref type="table" target="#tab_8">18</ref><ref type="table" target="#tab_13">19</ref>, we can know that NSGAIII-F1 and NSGAIII-R1 perform best on at least half of the nine instances. From Tables 20-21, we can know that NSGAIII-F1 and NSGAIII-R1 also perform best on at least half of the ten-objective LSMOP1-9 problems. For the fifteen-objective LSMOP1-9 problems, as shown in Tables 22-23, NSGAIII-F1 and NSGAIII-R1 also perform best on at least half of these problems. Why do NSGAIII-F1 and NSGAIII-R1 perform best? Here's a brief analysis of the reasons. Based on the original NSGA-III, the models M-F1 and M-R1 adds the historical information of individuals in previous iterations to the generation of offspring. The individuals selected in this model are chosen randomly or in a fixed way, rather than the optimal individuals in the population, which leads to the individuals selected may be bad or good. To a certain extent, it will reduce the convergence speed of the algorithm and avoid falling into local optimum because of the fast convergence speed. Besides, this way of randomly selecting individuals also improve the diversity of the algorithm, resulting in a smaller IGD value. As a classical convergence-diversity metrics, IGD is closely related to the diversity and convergence of algorithms. The better the diversity and convergence, the smaller the IGD value. The proposed algorithms in this paper make great contributions to the improvement of diversity and convergence of the original NSGA-III. From the above experimental results, it can be seen that the IGD values of the improved algorithms using the IFMs, especially the M-F1 and M-R1 models, is better than that of the original NSGA-III algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>In this paper, we introduced IFMs to reuse the historical information of individuals in previous iterations into the generation of new individuals. IFMs were divided into two categories according to the way of choosing individuals and then the two kinds of models were further subdivided into M-F1, M-F2, M-F3, M-R1, M-R2, and M-R3. We combined six information feedback models with NSGA-III algorithm respectively to get six variants of NSGA-III. By comparing the six variants with the original NSGA-III algorithm, we could see that NSGAIII-F1 and NSGAIII-R1 performed best on test problems, which were obviously superior to the other four variants of NSGA-III and the original NSGA-III algorithm. Then, by comparing the two best variants of NSGA-III with the other four state-of-the-art algorithms including the original NSGA-III algorithm, we proved once again that NSGAIII-F1 and NSGAIII-R1 did improve the performance of NSGA-III algorithm to some extent, and proved that the two variants were very competitive in solving large-scale many-objective test problems.</p><p>In the future, we will try to apply the information feedback models to other improved NSGA-II and NSGA-III algorithms, and further study the effect of the model on a series of NSGA algorithms. Then, we will combine the information feedback model with other MOEAs to see if the model can improve the abilities to solving large-scale optimization problems of other algorithms. In addition, we will try to select more individuals (s &lt; 3) and see whether the number of individuals selected affects the performance of the algorithm.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The main process of NSGA-III and NSGA-II.</figDesc><graphic coords="5,42.52,468.23,240.14,147.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>1 and ∂ 2 are weight coefficients which satisfy ∂ 1 + ∂ 2 = 1. Then, the model in Eq. (3) can be divided into M-F1 and M-R1 according to the different ways of selecting individual k. If we use a fixed way to select the individual (in other words, k = i), then this model is M-F1. If k is an integer randomly selected from 1 to N, then this model is M-R1. (2) M-F2 and M-R2: Both models only need to select two individuals from generation t and generation (t -1) to generate a new individual of the offspring population, so x t+1 i</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>x t k1 . x t-1 k2 is the individual k 2 at the (t -1)th generation, f t-1 k2 is the fitness value of x t-1 k2 . ∂ 1 , ∂ 2 , and ∂ 3 are weight coefficients which satisfy ∂ 1 + ∂ 2 + ∂ 3 = 1. Then, the model in Eq. (5) can be divided into M-F2 and M-R2 according to the different ways of selecting individual k 1 and individual k 2 . If we use a fixed way to select individuals (in other words, k 1 = k 2 = i), then this model is M-F2. If k 1 and k 2 are integers randomly selected from 1 to N, then this model is M-R2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>III algorithm based on IFM M-F1 NSGAIII-F1 Improved NSGA-III algorithm based on IFM M-F2 NSGAIII-F2 Improved NSGA-III algorithm based on IFM M-F3 NSGAIII-F3 Improved NSGA-III algorithm based on IFM M-R1 NSGAIII-R1 Improved NSGA-III algorithm based on IFM M-R2 NSGAIII-R2 Improved NSGA-III algorithm based on IFM M-R3 NSGAIII-R3 Improved NSGA-III algorithms based on IFM M-F1/2/3, M-R1/2/3 IFM-NSGAIII</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>i</head><label></label><figDesc>and then calculate its fitness value by test problems (u t+1 i is the ith individual at the (t + 1)th generation generated by the original NSGA-III). U t+1 is the set of u t+1 i . Then, we can calculate x t+1 i according to u t+1 i and Eq. (3). Q t is the set of x t+1 i (x t+1 i represents the ith individual at generation (t + 1), ∂ 1 and ∂ 2 are weight coefficients which are satisfied with ∂ 1 + ∂ 2 = 1, ∂ 1 and ∂ 2 can be calculated according to Eq. (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. The main process of NSGAIII-F1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. GD and IGD values of six IFM-NSGAIII algorithms and NSGA-III algorithm on LSMOP5 for 3-15 objectives. As shown in Table 11, for 9 fifteen-objective test instances, NSGA-III algorithm only performs best on one instance, and NSGAIII-F1 and NSGAIII-R1 respectively perform best on three examples and another three examples. As shown in Table12, each of NSGAIII-F1, NSGAIII-R2, and NSGA-III performs best on three out of 9 test instances. According to Tables11-12, the improved</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. GD and IGD values on LSMOP5 for 3-15 objectives.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. (continued).</figDesc><graphic coords="18,246.84,427.03,91.58,84.07" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 4</head><label>4</label><figDesc>illustrates the performance of the two best IFM-NSGAIII algorithms and four state-of-the-art algorithms by taking LSMOP5 problem as an example. Fig. 4(a)-(j) depict the GD and IGD values of these algorithms for 3-15 objective LSMOP5 problems. As can be seen from Fig. 4, NSGAIII-F1 and NSGAIII-R1 are the two best performing algorithms on 3-15 objective LSMOP5 problems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Then a new population R t is obtained by mixing P t and Q t (R t = P t ∪ Q t ). The size of R t is 2N. The solutions in R t are ranked and divided into different non-dominant levels (F 1 , F 2 , . . . , F l , . . . , F w ). The fourth step is to make a new population S t through each time moving one non-dominant level into S t , begin with F 1 , until |S t | ≥ N for the first time (|S t | is the number of solutions in S t ). If F l is the level that make |S t | ≥ N for the first time, then S t = ⋃ l i=1 F i . The fifth step is to select the solutions from the population S t to produce the next parent population P t+1 . If |S t | = N,</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc>Parameter settings.</figDesc><table><row><cell>Parameter</cell><cell>Value</cell></row><row><cell>Population size (N)</cell><cell>100</cell></row><row><cell>Maximum number of evaluations</cell><cell>10 000</cell></row><row><cell>Crossover probability (p c )</cell><cell>1</cell></row><row><cell>Mutation probability (p m )</cell><cell>1/n</cell></row><row><cell>Distribution index of crossover (disC )</cell><cell>20</cell></row><row><cell>Distribution index of mutation (disM)</cell><cell>20</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc>Abbreviations.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3</head><label>3</label><figDesc>GD values for 9 three-objective benchmark problems. .4445 * 10 + 0 (6.67 * 10 -1) -2.4985 * 10 + 0 (5.45 * 10 -1) -2.8871 * 10 + 0 (1.33 * 10 + 0) -2.3995 * 10 + 0 (7.29 * 10 -1) -2.2935 * 10 + 0 (7.23 * 10 -1) -</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>3</cell><cell>2.3948  *  10 + 0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.7641  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(5.23  *  10 -1) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(2.53  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>3</cell><cell>8.6547  *  10 -3</cell><cell>8.6354  *  10 -3</cell><cell>8.9427  *  10 -3</cell><cell>7.9535  *  10 -3</cell><cell>8.5949  *  10 -3</cell><cell>8.2639  *  10 -3</cell><cell>1.0230  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(4.26  *  10 -4) +</cell><cell>(3.78  *  10 -4) +</cell><cell>(3.82  *  10 -4) +</cell><cell>(4.00  *  10 -4) +</cell><cell>(4.60  *  10 -4) +</cell><cell>(4.29  *  10 -4) +</cell><cell>(8.06  *  10 -5)</cell></row><row><cell>LSMOP3</cell><cell>3</cell><cell>2.2307  *  10 + 3</cell><cell>2.4810  *  10 + 3</cell><cell>3.0674  *  10 + 3</cell><cell>6.3701  *  10 + 2</cell><cell>2.8827  *  10 + 3</cell><cell>1.7096  *  10 + 3</cell><cell>1.5214  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(8.14  *  10 + 2) -</cell><cell>(8.31  *  10 + 2) -</cell><cell>(9.97  *  10 + 2) -</cell><cell>(7.07  *  10 + 2) +</cell><cell>(1.02  *  10 + 3) -</cell><cell>(6.75  *  10 + 2) =</cell><cell>(3.15  *  10 + 2)</cell></row><row><cell>LSMOP4</cell><cell>3</cell><cell>4.7023  *  10 -2</cell><cell>4.7888  *  10 -2</cell><cell>4.7920  *  10 -2</cell><cell>4.5925  *  10 -2</cell><cell>4.7811  *  10 -2</cell><cell>4.5655  *  10 -2</cell><cell>4.7778  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(1.39  *  10 -3) +</cell><cell>(1.56  *  10 -3) =</cell><cell>(1.18  *  10 -3) =</cell><cell>(1.36  *  10 -3) +</cell><cell>(1.46  *  10 -3) =</cell><cell>(1.14  *  10 -3) +</cell><cell>(4.12  *  10 -4)</cell></row><row><cell>LSMOP5</cell><cell>3</cell><cell>5.3097  *  10 + 0</cell><cell>5.6394  *  10 + 0</cell><cell>6.5799  *  10 + 0</cell><cell>4.3522  *  10 + 0</cell><cell>5.2917  *  10 + 0</cell><cell>5.8558  *  10 + 0</cell><cell>5.4419  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.71  *  10 + 0) =</cell><cell>(2.60  *  10 + 0) =</cell><cell>(2.16  *  10 + 0) =</cell><cell>(1.37  *  10 + 0) +</cell><cell>(1.34  *  10 + 0) =</cell><cell>(1.71  *  10 + 0) =</cell><cell>(4.31  *  10 -1)</cell></row><row><cell>LSMOP6</cell><cell>3</cell><cell>1.8566  *  10 + 4</cell><cell>2.8804  *  10 + 4</cell><cell>2.8522  *  10 + 4</cell><cell>2.0585  *  10 + 3</cell><cell>2.6393  *  10 + 4</cell><cell>1.4110  *  10 + 4</cell><cell>9.7365  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(1.38  *  10 + 4) =</cell><cell>(2.18  *  10 + 4) -</cell><cell>(1.61  *  10 + 4) -</cell><cell>(4.51  *  10 + 3) +</cell><cell>(1.40  *  10 + 4) -</cell><cell>(1.25  *  10 + 4) =</cell><cell>(3.12  *  10 + 3)</cell></row><row><cell>LSMOP7</cell><cell>3</cell><cell>2.5744  *  10 + 4</cell><cell>5.0745  *  10 + 4</cell><cell>5.1886  *  10 + 4</cell><cell>1.5776  *  10 + 4</cell><cell>5.3009  *  10 + 4</cell><cell>4.3173  *  10 + 4</cell><cell>5.2116  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(1.57  *  10 + 4) -</cell><cell>(1.14  *  10 + 4) -</cell><cell>(7.34  *  10 + 3) -</cell><cell>(8.14  *  10 + 3) -</cell><cell>(1.04  *  10 + 4) -</cell><cell>(1.00  *  10 + 4) -</cell><cell>(9.74  *  10 + 2)</cell></row><row><cell>LSMOP8</cell><cell>3</cell><cell>4.5609  *  10 + 0</cell><cell>5.0271  *  10 + 0</cell><cell>5.0728  *  10 + 0</cell><cell>4.1545  *  10 + 0</cell><cell>4.9269  *  10 + 0</cell><cell>4.4478  *  10 + 0</cell><cell>1.2833  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(7.90  *  10 -1) -</cell><cell>(3.17  *  10 -1) -</cell><cell>(3.09  *  10 -1) -</cell><cell>(7.95  *  10 -1) -</cell><cell>(2.73  *  10 -1) -</cell><cell>(8.85  *  10 -1) -</cell><cell>(1.23  *  10 -1)</cell></row><row><cell>LSMOP9</cell><cell>3</cell><cell>2.1744  *  10 + 1</cell><cell>2.3169  *  10 + 1</cell><cell>2.3027  *  10 + 1</cell><cell>1.9537  *  10 + 1</cell><cell>2.3052  *  10 + 1</cell><cell>2.1967  *  10 + 1</cell><cell>4.1176  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(2.48  *  10 + 0) -</cell><cell>(1.92  *  10 + 0) -</cell><cell>(2.10  *  10 + 0) -</cell><cell>(4.65  *  10 + 0) -</cell><cell>(1.84  *  10 + 0) -</cell><cell>(2.84  *  10 + 0) -</cell><cell>(5.02  *  10 -1)</cell></row></table><note><p>2</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4</head><label>4</label><figDesc>IGD values for 9 three-objective benchmark problems.</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>3</cell><cell cols="7">1.6484  1.2931  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(8.92  *  10 -1)</cell></row><row><cell>LSMOP4</cell><cell>3</cell><cell>2.3704  *  10 -1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>2.6668  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(1.98  *  10 -3) +</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(1.85  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>3</cell><cell>3.2883  *  10 + 0</cell><cell>3.6321  *  10 + 0</cell><cell>4.0384  *  10 + 0</cell><cell>3.5716  *  10 + 0</cell><cell>3.5378  *  10 + 0</cell><cell>3.9193  *  10 + 0</cell><cell>1.0971  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(2.57  *  10 -1) +</cell><cell>(3.12  *  10 -1) +</cell><cell>(4.77  *  10 -1) +</cell><cell>(2.97  *  10 -1) +</cell><cell>(2.76  *  10 -1) +</cell><cell>(3.73  *  10 -1) +</cell><cell>(1.41  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>3</cell><cell>1.4249  *  10 + 3</cell><cell>1.6764  *  10 + 3</cell><cell>1.7040  *  10 + 3</cell><cell>1.5682  *  10 + 3</cell><cell>1.8742  *  10 + 3</cell><cell>1.5578  *  10 + 3</cell><cell>1.8368  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(5.29  *  10 + 2) +</cell><cell>(2.77  *  10 + 2) =</cell><cell>(2.25  *  10 + 2) =</cell><cell>(7.19  *  10 + 2) =</cell><cell>(3.92  *  10 + 2) =</cell><cell>(2.90  *  10 + 2) +</cell><cell>(4.70  *  10 + 2)</cell></row><row><cell>LSMOP7</cell><cell>3</cell><cell>1.4534  *  10 + 0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.5043  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.61  *  10 -2) +</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(2.26  *  10 -2)</cell></row><row><cell>LSMOP8</cell><cell>3</cell><cell>9.2972  *  10 -1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>9.5957  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(7.50  *  10 -2) =</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(5.69  *  10 -2)</cell></row><row><cell>LSMOP9</cell><cell>3</cell><cell>4.4437  *  10 + 1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(9.82  *  10 + 0) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>* 10 + 0 (1.92 * 10 -1) + 1.8062 * 10 + 0 (2.15 * 10 -1) + 1.8065 * 10 + 0 (1.85 * 10 -1) + 1.7634 * 10 + 0 (2.12 * 10 -1) + 1.7424 * 10 + 0 (1.92 * 10 -1) + 1.8894 * 10 + 0 (2.28 * 10 -1) + 4.6840 * 10 + 0 (3.39 * 10 -1) LSMOP2 3 8.2137 * 10 -2 (1.13 * 10 -3) + 8.2336 * 10 -2 (1.08 * 10 -3) + 8.3622 * 10 -2 (2.06 * 10 -3) + 7.6878 * 10 -2 (6.53 * 10 -4) + 8.2143 * 10 -2 (1.38 * 10 -3) + 7.8490 * 10 -2 (1.18 * 10 -3) + 9.0995 * 10 -2 (3.50 * 10 -4) LSMOP3 3 1.2405 * 10 + 1 (8.93 * 10 + 0) + 5.3659 * 10 + 1 (3.83 * 10 + 1) -6.8179 * 10 + 1 (3.45 * 10 + 1) -1.6919 * 10 + 1 (1.58 * 10 + 1) = 6.9226 * 10 + 1 (4.85 * 10 + 1) -1.0836 * 10 + 2 (8.13 * 10 + 1) -2.3596 * 10 -1 (3.40 * 10 -3) + 2.3793 * 10 -1 (5.39 * 10 -3) + 2.3203 * 10 -1 (3.45 * 10 -3) + 2.3623 * 10 -1 (4.62 * 10 -3) + 2.3054 * 10 -1 (2.85 * 10 -3) + 2.2476 * 10 + 2 (5.48 * 10 + 2) -1.0851 * 10 + 3 (2.46 * 10 + 3) -1.4394 * 10 + 0 (4.21 * 10 -2) + 3.6021 * 10 + 2 (8.22 * 10 + 2) -5.9723 * 10 + 2 (1.09 * 10 + 3) -9.4744 * 10 -1 (4.88 * 10 -2) = 9.4811 * 10 -1 (5.65 * 10 -2) + 9.2594 * 10 -1 (8.30 * 10 -2) = 8.9914 * 10 -1 (9.08 * 10 -2) = 1.0054 * 10 + 0 (3.29 * 10 -1) = 4.6785 * 10 + 1 (1.14 * 10 + 1) -4.5155 * 10 + 1 (1.12 * 10 + 1) -4.3982 * 10 + 1 (8.09 * 10 + 0) -3.8163 * 10 + 1 (9.07 * 10 + 0) -4.9450 * 10 + 1 (6.88 * 10 + 0) -1.7788 * 10 + 1 (2.05 * 10 + 0)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5</head><label>5</label><figDesc>GD values for five-objective benchmark problems. .7068 * 10 + 0 (7.30 * 10 -1) = 2.1829 * 10 + 0 (8.28 * 10 -1) = 2.6494 * 10 + 0 (1.62 * 10 + 0) = 2.0272 * 10 + 0 (6.41 * 10 -1) = 2.2243 * 10 + 0 (1.04 * 10 + 0) = 1.8467 * 10 + 0 (1.34 * 10 -1) LSMOP2 9.4236 * 10 -3 (2.73 * 10 -4) + 9.3619 * 10 -3 (4.50 * 10 -4) + 9.4735 * 10 -3 (3.00 * 10 -4) + 8.7885 * 10 -3 (2.49 * 10 -4) + 9.2921 * 10 -3 (2.91 * 10 -4) + 9.1251 * 10 -3 (3.05 * 10 -4) +</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell></cell><cell>1.1458  *  10 + 0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(6.54  *  10 -1) +</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2978  *  10 -2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(8.74  *  10 -5)</cell></row><row><cell>LSMOP3</cell><cell></cell><cell>1.8324  *  10 + 3</cell><cell>2.9697  *  10 + 3</cell><cell>3.8461  *  10 + 3</cell><cell>1.4228  *  10 + 3</cell><cell>3.7519  *  10 + 3</cell><cell>3.5554  *  10 + 3</cell><cell>5.1800  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(7.00  *  10 + 2) +</cell><cell>(1.16  *  10 + 3) +</cell><cell>(8.60  *  10 + 2) +</cell><cell>(7.41  *  10 + 2) +</cell><cell>(9.84  *  10 + 2) +</cell><cell>(8.58  *  10 + 2) +</cell><cell>(1.12  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell></cell><cell>6.7511  *  10 -2</cell><cell>6.6303  *  10 -2</cell><cell>6.6538  *  10 -2</cell><cell>7.2122  *  10 -2</cell><cell>6.5659  *  10 -2</cell><cell>7.1721  *  10 -2</cell><cell>7.1773  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(4.68  *  10 -3) +</cell><cell>(6.05  *  10 -3) +</cell><cell>(7.98  *  10 -3) +</cell><cell>(9.96  *  10 -3) =</cell><cell>(5.93  *  10 -3) +</cell><cell>(5.99  *  10 -3) =</cell><cell>(2.12  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell></cell><cell>9.0130  *  10 -1</cell><cell>1.3186  *  10 + 0</cell><cell>1.9601  *  10 + 0</cell><cell>1.0226  *  10 + 0</cell><cell>1.1059  *  10 + 0</cell><cell>1.4137  *  10 + 0</cell><cell>1.1734  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(7.54  *  10 -1) +</cell><cell>(1.07  *  10 + 0) +</cell><cell>(1.10  *  10 + 0) +</cell><cell>(4.18  *  10 -1) +</cell><cell>(6.63  *  10 -1) +</cell><cell>(6.84  *  10 -1) +</cell><cell>(1.11  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell></cell><cell>9.9575  *  10 + 3</cell><cell>1.2464  *  10 + 4</cell><cell>1.4494  *  10 + 4</cell><cell>4.3839  *  10 + 3</cell><cell>9.5178  *  10 + 3</cell><cell>7.2143  *  10 + 3</cell><cell>3.3814  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(9.83  *  10 + 3) +</cell><cell>(1.28  *  10 + 4) +</cell><cell>(1.49  *  10 + 4) +</cell><cell>(7.06  *  10 + 3) +</cell><cell>(1.35  *  10 + 4) +</cell><cell>(6.35  *  10 + 3) +</cell><cell>(1.09  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell></cell><cell>3.0332  *  10 + 4</cell><cell>5.9292  *  10 + 4</cell><cell>6.5162  *  10 + 4</cell><cell>1.3833  *  10 + 4</cell><cell>5.7853  *  10 + 4</cell><cell>4.9432  *  10 + 4</cell><cell>7.0210  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(1.65  *  10 + 4) +</cell><cell>(1.51  *  10 + 4) +</cell><cell>(1.35  *  10 + 4) =</cell><cell>(6.12  *  10 + 3) +</cell><cell>(1.91  *  10 + 4) +</cell><cell>(1.44  *  10 + 4) +</cell><cell>(6.66  *  10 + 3)</cell></row><row><cell>LSMOP8</cell><cell></cell><cell>2.1197  *  10 + 0</cell><cell>3.9529  *  10 + 0</cell><cell>5.2300  *  10 + 0</cell><cell>2.3622  *  10 + 0</cell><cell>4.0893  *  10 + 0</cell><cell>4.6593  *  10 + 0</cell><cell>6.0513  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.80  *  10 + 0) +</cell><cell>(1.77  *  10 + 0) +</cell><cell>(1.07  *  10 + 0) +</cell><cell>(1.43  *  10 + 0) +</cell><cell>(1.66  *  10 + 0) +</cell><cell>(1.17  *  10 + 0) +</cell><cell>(5.09  *  10 -1)</cell></row><row><cell>LSMOP9</cell><cell></cell><cell>4.8885  *  10 + 1</cell><cell>5.0161  *  10 + 1</cell><cell>4.4755  *  10 + 1</cell><cell>5.7007  *  10 + 1</cell><cell>4.3073  *  10 + 1</cell><cell>6.1027  *  10 + 1</cell><cell>2.7629  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.16  *  10 + 1) -</cell><cell>(1.06  *  10 + 1) -</cell><cell>(1.14  *  10 + 1) -</cell><cell>(1.12  *  10 + 1) -</cell><cell>(1.19  *  10 + 1) -</cell><cell>(9.27  *  10 + 0) -</cell><cell>(2.46  *  10 + 0)</cell></row></table><note><p>1</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6</head><label>6</label><figDesc>IGD values for 9 five-objective benchmark problems.</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell></cell><cell>1.9806  *  10 + 0</cell><cell>2.2066  *  10 + 0</cell><cell>2.0033  *  10 + 0</cell><cell>2.5293  *  10 + 0</cell><cell>2.0034  *  10 + 0</cell><cell>2.2231  *  10 + 0</cell><cell></cell></row><row><cell></cell><cell></cell><cell>(4.29  *  10 -1) +</cell><cell>(4.36  *  10 -1) +</cell><cell>(2.44  *  10 -1) +</cell><cell>(7.09  *  10 -1) +</cell><cell>(5.26  *  10 -1) +</cell><cell>(6.91  *  10 -1) +</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>3.2225  *  10 -1</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(2.62  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell></cell><cell>3.5519  *  10 + 0</cell><cell>3.7390  *  10 + 0</cell><cell>4.5186  *  10 + 0</cell><cell>3.2872  *  10 + 0</cell><cell>3.6713  *  10 + 0</cell><cell>3.9435  *  10 + 0</cell><cell>1.3636  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.10  *  10 + 0) +</cell><cell>(7.39  *  10 -1) +</cell><cell>(8.27  *  10 -1) +</cell><cell>(9.59  *  10 -1) +</cell><cell>(6.90  *  10 -1) +</cell><cell>(7.35  *  10 -1) +</cell><cell>(1.85  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell></cell><cell>4.5485  *  10 + 2</cell><cell>1.4810  *  10 + 3</cell><cell>1.7758  *  10 + 3</cell><cell>5.6127  *  10 + 2</cell><cell>1.2762  *  10 + 3</cell><cell>1.5763  *  10 + 3</cell><cell>1.5715  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(6.35  *  10 + 2) +</cell><cell>(3.63  *  10 + 2) =</cell><cell>(5.10  *  10 + 2) =</cell><cell>(5.19  *  10 + 2) +</cell><cell>(2.87  *  10 + 2) =</cell><cell>(4.92  *  10 + 2) =</cell><cell>(1.08  *  10 + 3)</cell></row><row><cell>LSMOP7</cell><cell></cell><cell>2.6299  *  10 + 0</cell><cell>1.0983  *  10 + 3</cell><cell>6.8855  *  10 + 3</cell><cell>2.6630  *  10 + 0</cell><cell>4.3808  *  10 + 3</cell><cell>8.3964  *  10 + 2</cell><cell>5.8140  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(7.50  *  10 -2) +</cell><cell>(3.27  *  10 + 3) =</cell><cell>(2.75  *  10 + 4) =</cell><cell>(7.04  *  10 -2) =</cell><cell>(1.07  *  10 + 4) =</cell><cell>(1.44  *  10 + 3) =</cell><cell>(8.35  *  10 + 3)</cell></row><row><cell>LSMOP8</cell><cell></cell><cell>1.1260  *  10 + 0</cell><cell>1.2371  *  10 + 0</cell><cell>1.3588  *  10 + 0</cell><cell>1.6829  *  10 + 0</cell><cell>1.3175  *  10 + 0</cell><cell>1.5643  *  10 + 0</cell><cell>1.9381  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(6.30  *  10 -2) =</cell><cell>(3.25  *  10 -1) =</cell><cell>(8.11  *  10 -1) +</cell><cell>(2.46  *  10 + 0) +</cell><cell>(6.01  *  10 -1) +</cell><cell>(1.86  *  10 + 0) =</cell><cell>(2.34  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell></cell><cell>1.5980  *  10 + 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(4.43  *  10 + 1) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>6.8810 * 10 + 0 (8.50 * 10 -1) LSMOP2 1.5528 * 10 -1 (3.15 * 10 -3) + 1.7217 * 10 -1 (3.91 * 10 -2) + 1.6129 * 10 -1 (7.73 * 10 -3) + 1.5671 * 10 -1 (7.11 * 10 -3) + 1.6179 * 10 -1 (7.26 * 10 -3) + 1.6973 * 10 -1 (1.89 * 10 -2) + 1.7610 * 10 -1 (5.47 * 10 -4) LSMOP3 9.4615 * 10 + 1 (3.91 * 10 + 1) -3.1868 * 10 + 2 (3.43 * 10 + 2) -2.4361 * 10 + 2 (2.94 * 10 + 2) -1.3257 * 10 + 2 (1.44 * 10 + 2) -2.8503 * 10 + 2 (3.20 * 10 + 2) -5.5763 * 10 + 2 (4.81 * 10 + 2) -2.2965 * 10 + 1 (7.49 * 10 + 0) LSMOP4 3.2509 * 10 -1 (6.15 * 10 -2) = 3.2153 * 10 -1 (6.12 * 10 -2) = 3.2656 * 10 -1 (7.34 * 10 -2) = 3.5680 * 10 -1 (7.98 * 10 -2) = 3.2223 * 10 -1 (4.71 * 10 -2) = 3.3718 * 10 -1 (3.90 * 10 -2) = 1.5938 * 10 + 2 (4.47 * 10 + 1) -1.6730 * 10 + 2 (5.21 * 10 + 1) -1.9801 * 10 + 2 (6.37 * 10 + 1) -1.4438 * 10 + 2 (2.36 * 10 + 1) -1.8152 * 10 + 2 (5.04 * 10 + 1) -1.1082 * 10 + 2 (9.43 * 10 + 0)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 7</head><label>7</label><figDesc>GD values for eight-objective benchmark problems.</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell></cell><cell>2.1141  *  10 + 0</cell><cell>2.3235  *  10 + 0</cell><cell>2.4986  *  10 + 0</cell><cell>2.5693  *  10 + 0</cell><cell>2.4066  *  10 + 0</cell><cell>2.8438  *  10 + 0</cell><cell>2.1842  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.10  *  10 + 0) =</cell><cell>(7.19  *  10 -1) =</cell><cell>(6.90  *  10 -1) -</cell><cell>(1.77  *  10 + 0) =</cell><cell>(9.00  *  10 -1) =</cell><cell>(1.11  *  10 + 0) -</cell><cell>(3.02  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell></cell><cell>3.4118  *  10 -2</cell><cell>3.4867  *  10 -2</cell><cell>3.4403  *  10 -2</cell><cell>3.8612  *  10 -2</cell><cell>3.0104  *  10 -2</cell><cell>3.7668  *  10 -2</cell><cell>3.0580  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(1.02  *  10 -2) =</cell><cell>(7.43  *  10 -3) =</cell><cell>(5.58  *  10 -3) -</cell><cell>(1.44  *  10 -2) -</cell><cell>(9.55  *  10 -3) =</cell><cell>(8.94  *  10 -3) -</cell><cell>(2.02  *  10 -3)</cell></row><row><cell>LSMOP3</cell><cell></cell><cell>3.1839  *  10 + 4</cell><cell>2.9539  *  10 + 4</cell><cell>4.0359  *  10 + 4</cell><cell>2.6916  *  10 + 4</cell><cell>3.6770  *  10 + 4</cell><cell>4.6068  *  10 + 4</cell><cell>1.2359  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(2.12  *  10 + 4) -</cell><cell>(1.72  *  10 + 4) -</cell><cell>(1.77  *  10 + 4) -</cell><cell>(1.74  *  10 + 4) -</cell><cell>(1.87  *  10 + 4) -</cell><cell>(2.50  *  10 + 4) -</cell><cell>(6.08  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell></cell><cell>1.7523  *  10 -2</cell><cell>1.8073  *  10 -2</cell><cell>1.8313  *  10 -2</cell><cell>1.7111  *  10 -2</cell><cell>1.8994  *  10 -2</cell><cell>2.0053  *  10 -2</cell><cell>5.1202  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(3.23  *  10 -3) +</cell><cell>(3.97  *  10 -3) +</cell><cell>(2.69  *  10 -3) +</cell><cell>(4.14  *  10 -3) +</cell><cell>(4.78  *  10 -3) +</cell><cell>(4.32  *  10 -3) +</cell><cell>(5.18  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell></cell><cell>1.0521  *  10 + 0</cell><cell>1.1822  *  10 + 0</cell><cell>1.7950  *  10 + 0</cell><cell>2.2609  *  10 + 0</cell><cell>1.0578  *  10 + 0</cell><cell>1.3479  *  10 + 0</cell><cell>1.1156  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(5.27  *  10 -1) +</cell><cell>(8.20  *  10 -1) +</cell><cell>(1.33  *  10 + 0) +</cell><cell>(2.55  *  10 + 0) +</cell><cell>(4.77  *  10 -1) +</cell><cell>(1.17  *  10 + 0) +</cell><cell>(2.81  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell></cell><cell>7.4987</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>* 10 + 3 (4.93 * 10 + 3) + 3.5664 * 10 + 4 (1.38 * 10 + 4) + 4.9141 * 10 + 4 (1.69 * 10 + 4) + 1.0821 * 10 + 4 (8.15 * 10 + 3) + 3.9918 * 10 + 4 (1.19 * 10 + 4) + 3.7905 * 10 + 4 (9.47 * 10 + 3) + 1.0455 * 10 + 5 (2.40 * 10 + 4) LSMOP7 1.0238 * 10 + 4 (1.50 * 10 + 4) + 5.5267 * 10 + 3 (5.10 * 10 + 3) + 1.3988 * 10 + 4 (1.20 * 10 + 4) + 4.2383 * 10 + 3 (7.07 * 10 + 3) + 5.8510 * 10 + 3 (7.18 * 10 + 3) + 5.4766 * 10 + 3 (4.30 * 10 + 3) + 9.3847 * 10 + 4 (6.04 * 10 + 4) LSMOP8 8.7976 * 10 -1 (5.11 * 10 -1) + 7.0438 * 10 -1 (3.54 * 10 -1) + 1.2043 * 10 + 0 (6.05 * 10 -1) + 1.4451 * 10 + 0 (1.38 * 10 + 0) + 8.5920 * 10 -1 (5.17 * 10 -1) + 1.1084 * 10 + 0 (7.10 * 10 -1) + 7.0133 * 10 + 0 (1.84 * 10 + 0) LSMOP9 9.8479 * 10 + 1 (2.67 * 10 + 1) + 9.2718 * 10 + 1 (2.57 * 10 + 1) + 9.3921 * 10 + 1 (2.25 * 10 + 1) + 1.2864 * 10 + 2 (4.20 * 10 + 1) + 9.4259 * 10 + 1 (2.16 * 10 + 1) + 1.1558 * 10 + 2 (3.11 * 10 + 1) + 1.5047 * 10 + 2 (1.56 * 10 + 1)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 8</head><label>8</label><figDesc>IGD values for 9 eight-objective benchmark problems. * 10 + 0 (6.71 * 10 -1) + 3.0775 * 10 + 0 (1.62 * 10 + 0) + 2.2427 * 10 + 0 (4.60 * 10 -1) + 4.0316 * 10 + 0 (1.51 * 10 + 0) + 2.6723 * 10 + 0 (9.63 * 10 -1) +</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>8</cell><cell cols="6">2.7964  3.4225  *  10 + 0</cell><cell>8.1235  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(1.83  *  10 + 0) +</cell><cell>(8.51  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>8</cell><cell>5.4121  *  10 -1</cell><cell>5.3875  *  10 -1</cell><cell>4.9410  *  10 -1</cell><cell>6.6316  *  10 -1</cell><cell>5.2492  *  10 -1</cell><cell>5.8101  *  10 -1</cell><cell>2.6285  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(5.64  *  10 -2) -</cell><cell>(8.20  *  10 -2) -</cell><cell>(5.36  *  10 -2) -</cell><cell>(1.14  *  10 -1) -</cell><cell>(5.97  *  10 -2) -</cell><cell>(8.06  *  10 -2) -</cell><cell>(1.80  *  10 -2)</cell></row><row><cell>LSMOP3</cell><cell>8</cell><cell>1.6199  *  10 + 3</cell><cell>1.6545  *  10 + 3</cell><cell>1.9255  *  10 + 3</cell><cell>2.7012  *  10 + 3</cell><cell>1.3630  *  10 + 3</cell><cell>4.5037  *  10 + 3</cell><cell>2.7344  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(1.58  *  10 + 3) +</cell><cell>(1.77  *  10 + 3) +</cell><cell>(1.34  *  10 + 3) +</cell><cell>(3.38  *  10 + 3) =</cell><cell>(1.38  *  10 + 3) +</cell><cell>(3.59  *  10 + 3) -</cell><cell>(5.25  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell>8</cell><cell>5.2060  *  10 -1</cell><cell>4.9995  *  10 -1</cell><cell>4.9371  *  10 -1</cell><cell>5.5213  *  10 -1</cell><cell>4.9594  *  10 -1</cell><cell>5.2827  *  10 -1</cell><cell>3.2368  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(4.10  *  10 -2) -</cell><cell>(7.35  *  10 -2) -</cell><cell>(4.52  *  10 -2) -</cell><cell>(7.16  *  10 -2) -</cell><cell>(6.34  *  10 -2) -</cell><cell>(7.69  *  10 -2) -</cell><cell>(3.85  *  10 -2)</cell></row><row><cell>LSMOP5</cell><cell>8</cell><cell>4.0226  *  10 + 0</cell><cell>3.9280  *  10 + 0</cell><cell>4.5882  *  10 + 0</cell><cell>3.4066  *  10 + 0</cell><cell>3.5770  *  10 + 0</cell><cell>3.6303  *  10 + 0</cell><cell>1.6438  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.39  *  10 + 0) +</cell><cell>(6.48  *  10 -1) +</cell><cell>(1.68  *  10 + 0) +</cell><cell>(8.01  *  10 -1) +</cell><cell>(4.02  *  10 -1) +</cell><cell>(5.56  *  10 -1) +</cell><cell>(8.53  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>8</cell><cell>1.6766  *  10 + 2</cell><cell>1.6438  *  10 + 3</cell><cell>1.1118  *  10 + 3</cell><cell>6.1841  *  10 + 3</cell><cell>3.1583  *  10 + 3</cell><cell>2.2825  *  10 + 3</cell><cell>2.8029  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(7.42  *  10 + 2) +</cell><cell>(2.63  *  10 + 3) =</cell><cell>(2.04  *  10 + 3) +</cell><cell>(1.81  *  10 + 4) +</cell><cell>(6.77  *  10 + 3) +</cell><cell>(3.63  *  10 + 3) +</cell><cell>(5.31  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>8</cell><cell>3.5160  *  10 + 2</cell><cell>1.1793  *  10 + 3</cell><cell>1.6578  *  10 + 3</cell><cell>4.8706  *  10 + 2</cell><cell>1.0119  *  10 + 3</cell><cell>1.4528  *  10 + 3</cell><cell>6.5180  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(3.82  *  10 + 2) +</cell><cell>(4.30  *  10 + 2) +</cell><cell>(4.33  *  10 + 2) +</cell><cell>(4.01  *  10 + 2) +</cell><cell>(3.51  *  10 + 2) +</cell><cell>(5.63  *  10 + 2) +</cell><cell>(8.64  *  10 + 3)</cell></row><row><cell>LSMOP8</cell><cell>8</cell><cell>2.5799  *  10 + 0</cell><cell>2.7372  *  10 + 0</cell><cell>3.1422  *  10 + 0</cell><cell>2.4314  *  10 + 0</cell><cell>2.8147  *  10 + 0</cell><cell>2.8787  *  10 + 0</cell><cell>6.9520  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(5.89  *  10 -1) +</cell><cell>(5.18  *  10 -1) +</cell><cell>(7.16  *  10 -1) +</cell><cell>(8.48  *  10 -1) +</cell><cell>(6.75  *  10 -1) +</cell><cell>(6.64  *  10 -1) +</cell><cell>(3.11  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>8</cell><cell>4.6790  *  10 + 2</cell><cell>3.8971  *  10 + 2</cell><cell>3.9849  *  10 + 2</cell><cell>6.2484  *  10 + 2</cell><cell>4.0534  *  10 + 2</cell><cell>5.6992  *  10 + 2</cell><cell>5.5994  *  10 + 2</cell></row><row><cell></cell><cell></cell><cell>(1.13  *  10 + 2) +</cell><cell>(1.03  *  10 + 2) +</cell><cell>(1.30  *  10 + 2) +</cell><cell>(3.01  *  10 + 2) =</cell><cell>(1.32  *  10 + 2) +</cell><cell>(2.00  *  10 + 2) =</cell><cell>(7.31  *  10 + 1)</cell></row><row><cell>Table 9</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">GD values for 9 ten-objective benchmark problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>10</cell><cell>3.1111  *  10 + 0</cell><cell>3.2931  *  10 + 0</cell><cell>3.4993  *  10 + 0</cell><cell>4.0873  *  10 + 0</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(6.79  *  10 -1) =</cell><cell>(8.02  *  10 -1) -</cell><cell>(6.90  *  10 -1) -</cell><cell>(9.77  *  10 -1) -</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>5.7078  *  10 -2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(8.09  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>10</cell><cell>3.1106  *  10 + 0</cell><cell>4.0492  *  10 + 0</cell><cell>5.6138  *  10 + 0</cell><cell>5.5463  *  10 + 0</cell><cell>4.4068  *  10 + 0</cell><cell>5.3286  *  10 + 0</cell><cell>1.6285  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.78  *  10 + 0) +</cell><cell>(1.83  *  10 + 0) +</cell><cell>(2.20  *  10 + 0) +</cell><cell>(3.28  *  10 + 0) +</cell><cell>(2.56  *  10 + 0) +</cell><cell>(2.64  *  10 + 0) +</cell><cell>(5.32  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>10</cell><cell>3.6743  *  10 + 4</cell><cell>4.8201  *  10 + 4</cell><cell>5.6189  *  10 + 4</cell><cell>2.1660  *  10 + 4</cell><cell>5.1435  *  10 + 4</cell><cell>4.3221  *  10 + 4</cell><cell>1.4067  *  10 + 5</cell></row><row><cell></cell><cell></cell><cell>(1.20  *  10 + 4) +</cell><cell>(1.17  *  10 + 4) +</cell><cell>(9.43  *  10 + 3) +</cell><cell>(1.16  *  10 + 4) +</cell><cell>(1.08  *  10 + 4) +</cell><cell>(9.25  *  10 + 3) +</cell><cell>(1.48  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>10</cell><cell>1.3369  *  10 + 4</cell><cell>1.9246  *  10 + 4</cell><cell>1.7016  *  10 + 4</cell><cell>8.4478  *  10 + 3</cell><cell>2.6042  *  10 + 4</cell><cell>2.0221  *  10 + 4</cell><cell>1.1806  *  10 + 5</cell></row><row><cell></cell><cell></cell><cell>(1.15  *  10 + 4) +</cell><cell>(1.20  *  10 + 4) +</cell><cell>(1.15  *  10 + 4) +</cell><cell>(9.41  *  10 + 3) +</cell><cell>(1.56  *  10 + 4) +</cell><cell>(1.03  *  10 + 4) +</cell><cell>(3.63  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>10</cell><cell>1.5856  *  10 + 0</cell><cell>1.9164  *  10 + 0</cell><cell>2.8509  *  10 + 0</cell><cell>2.8178  *  10 + 0</cell><cell>2.4731  *  10 + 0</cell><cell>2.8124  *  10 + 0</cell><cell>8.3914  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.05  *  10 + 0) +</cell><cell>(1.21  *  10 + 0) +</cell><cell>(1.17  *  10 + 0) +</cell><cell>(2.04  *  10 + 0) +</cell><cell>(1.11  *  10 + 0) +</cell><cell>(1.09  *  10 + 0) +</cell><cell>(1.49  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>10</cell><cell>2.5171  *  10 + 2</cell><cell>2.5949  *  10 + 2</cell><cell>2.6652  *  10 + 2</cell><cell>2.7907  *  10 + 2</cell><cell>2.4879  *  10 + 2</cell><cell>2.8581  *  10 + 2</cell><cell></cell></row><row><cell></cell><cell></cell><cell>(2.41  *  10 + 1) -</cell><cell>(2.58  *  10 + 1) -</cell><cell>(1.81  *  10 + 1) -</cell><cell>(3.54  *  10 + 1) -</cell><cell>(2.65  *  10 + 1) -</cell><cell>(3.06  *  10 + 1) -</cell><cell></cell></row></table><note><p>3.4164 * 10 + 0 (5.11 * 10 -1) -4.1249 * 10 + 0 (1.10 * 10 + 0) -2.8305 * 10 + 0 (4.15 * 10 -1) LSMOP2 10 2.3087 * 10 -2 (2.46 * 10 -3) + 2.3776 * 10 -2 (2.55 * 10 -3) + 2.3958 * 10 -2 (2.42 * 10 -3) + 2.4577 * 10 -2 (2.88 * 10 -3) + 2.4061 * 10 -2 (1.80 * 10 -3) + 2.6275 * 10 -2 (2.61 * 10 -3) + 3.0939 * 10 -2 (2.39 * 10 -3) LSMOP3 10 4.7058 * 10 + 4 (1.47 * 10 + 4) -5.4817 * 10 + 4 (1.34 * 10 + 4) -6.2340 * 10 + 4 (1.14 * 10 + 4) -4.3205 * 10 + 4 (1.25 * 10 + 4) -6.3628 * 10 + 4 (1.35 * 10 + 4) -6.9195 * 10 + 4 (1.23 * 10 + 4) -2.5867 * 10 + 4 (5.46 * 10 + 3) LSMOP4 10 1.9404 * 10 -2 (1.27 * 10 -3) + 1.9822 * 10 -2 (1.93 * 10 -3) + 1.9935 * 10 -2 (1.26 * 10 -3) + 1.9638 * 10 -2 (1.64 * 10 -3) + 1.9198 * 10 -2 (1.63 * 10 -3) + 1.9852 * 10 -2 (1.89 * 10 -3) + 2.1718 * 10 + 2 (1.91 * 10 + 1)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 10</head><label>10</label><figDesc>IGD values for 9 ten-objective benchmark problems.</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell></cell><cell>2.3499  *  10 + 0</cell><cell>2.1638  *  10 + 0</cell><cell>2.1947  *  10 + 0</cell><cell>3.2643  *  10 + 0</cell><cell>2.5755  *  10 + 0</cell><cell>2.5141  *  10 + 0</cell><cell>9.1283  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(5.70  *  10 -1) +</cell><cell>(5.04  *  10 -1) +</cell><cell>(6.45  *  10 -1) +</cell><cell>(9.68  *  10 -1) +</cell><cell>(1.10  *  10 + 0) +</cell><cell>(5.17  *  10 -1) +</cell><cell>(8.97  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell></cell><cell>4.7140  *  10 -1</cell><cell>4.6113  *  10 -1</cell><cell>4.6071  *  10 -1</cell><cell>4.8148  *  10 -1</cell><cell>4.7307  *  10 -1</cell><cell>4.8833  *  10 -1</cell><cell>3.8794  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(3.59  *  10 -2) -</cell><cell>(3.68  *  10 -2) -</cell><cell>(3.45  *  10 -2) -</cell><cell>(5.26  *  10 -2) -</cell><cell>(3.43  *  10 -2) -</cell><cell>(4.55  *  10 -2) -</cell><cell>(3.98  *  10 -2)</cell></row><row><cell>LSMOP3</cell><cell></cell><cell>1.5487  *  10 + 3</cell><cell>2.4425  *  10 + 3</cell><cell>2.5182  *  10 + 3</cell><cell>1.5999  *  10 + 3</cell><cell>2.2015  *  10 + 3</cell><cell>6.5223  *  10 + 3</cell><cell>9.2197  *  10 + 2</cell></row><row><cell></cell><cell></cell><cell>(6.92  *  10 + 2) -</cell><cell>(2.31  *  10 + 3) -</cell><cell>(1.47  *  10 + 3) -</cell><cell>(1.89  *  10 + 3) -</cell><cell>(1.17  *  10 + 3) -</cell><cell>(7.48  *  10 + 3) -</cell><cell>(2.57  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell></cell><cell>4.6817  *  10 -1</cell><cell>4.6660  *  10 -1</cell><cell>4.6851  *  10 -1</cell><cell>4.8084  *  10 -1</cell><cell>4.7110  *  10 -1</cell><cell>4.7423  *  10 -1</cell><cell>4.1914  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(3.49  *  10 -2) -</cell><cell>(3.96  *  10 -2) -</cell><cell>(3.65  *  10 -2) -</cell><cell>(3.38  *  10 -2) -</cell><cell>(3.39  *  10 -2) -</cell><cell>(3.80  *  10 -2) -</cell><cell>(4.54  *  10 -2)</cell></row><row><cell>LSMOP5</cell><cell></cell><cell>3.7757  *  10 + 0</cell><cell>3.6526  *  10 + 0</cell><cell>4.4038  *  10 + 0</cell><cell>3.8462  *  10 + 0</cell><cell>3.8099  *  10 + 0</cell><cell>3.9454  *  10 + 0</cell><cell>2.3486  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(5.73  *  10 -1) +</cell><cell>(6.71  *  10 -1) +</cell><cell>(7.77  *  10 -1) +</cell><cell>(6.97  *  10 -1) +</cell><cell>(8.79  *  10 -1) +</cell><cell>(5.65  *  10 -1) +</cell><cell>(1.32  *  10 + 1)</cell></row><row><cell>LSMOP6</cell><cell></cell><cell>6.2271  *  10 + 1</cell><cell>1.4715  *  10 + 3</cell><cell>3.8429  *  10 + 2</cell><cell>1.4264  *  10 + 0</cell><cell>1.8210  *  10 + 3</cell><cell>1.8277  *  10 + 3</cell><cell>1.3667  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(2.72  *  10 + 2) +</cell><cell>(1.99  *  10 + 3) +</cell><cell>(9.16  *  10 + 2) +</cell><cell>(1.22  *  10 -2) +</cell><cell>(2.73  *  10 + 3) +</cell><cell>(2.82  *  10 + 3) +</cell><cell>(4.95  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell></cell><cell>6.0751  *  10 + 2</cell><cell>1.2652  *  10 + 3</cell><cell>1.6379  *  10 + 3</cell><cell>7.2571  *  10 + 2</cell><cell>1.0208  *  10 + 3</cell><cell>1.2615  *  10 + 3</cell><cell>2.4115  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(3.90  *  10 + 2) +</cell><cell>(3.43  *  10 + 2) +</cell><cell>(5.08  *  10 + 2) +</cell><cell>(4.03  *  10 + 2) +</cell><cell>(2.27  *  10 + 2) +</cell><cell>(3.76  *  10 + 2) +</cell><cell>(3.89  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell></cell><cell>2.5436  *  10 + 0</cell><cell>2.5464  *  10 + 0</cell><cell>3.0635  *  10 + 0</cell><cell>2.7015  *  10 + 0</cell><cell>2.5882  *  10 + 0</cell><cell>2.7185  *  10 + 0</cell><cell>1.1964  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(6.16  *  10 -1) +</cell><cell>(3.94  *  10 -1) +</cell><cell>(6.29  *  10 -1) +</cell><cell>(7.66  *  10 -1) +</cell><cell>(4.65  *  10 -1) +</cell><cell>(5.52  *  10 -1) +</cell><cell>(5.21  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell></cell><cell>6.4596  *  10 + 2</cell><cell>5.4527  *  10 + 2</cell><cell>5.4508  *  10 + 2</cell><cell>1.0766  *  10 + 3</cell><cell>5.3140  *  10 + 2</cell><cell>7.4531  *  10 + 2</cell><cell>8.3767  *  10 + 2</cell></row><row><cell></cell><cell></cell><cell>(1.40  *  10 + 2) +</cell><cell>(8.33  *  10 + 1) +</cell><cell>(1.12  *  10 + 2) +</cell><cell>(2.34  *  10 + 2) -</cell><cell>(1.08  *  10 + 2) +</cell><cell>(2.50  *  10 + 2) =</cell><cell>(9.86  *  10 + 1)</cell></row><row><cell>Table 11</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">GD values for fifteen-objective benchmark problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell></cell><cell>4.8364  *  10 + 0</cell><cell>4.9968  *  10 + 0</cell><cell>5.8971  *  10 + 0</cell><cell>7.3780  *  10 + 0</cell><cell>5.3097  *  10 + 0</cell><cell>6.6390  *  10 + 0</cell><cell>4.3184  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.91  *  10 + 0) =</cell><cell>(1.65  *  10 + 0) =</cell><cell>(1.48  *  10 + 0) -</cell><cell>(2.81  *  10 + 0) -</cell><cell>(1.30  *  10 + 0) -</cell><cell>(2.35  *  10 + 0) -</cell><cell>(7.82  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell></cell><cell>4.7571  *  10 -2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(9.30  *  10 -3) =</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>5.5228  *  10 -2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(4.30  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell></cell><cell>2.3687  *  10 + 0</cell><cell>4.6186  *  10 + 0</cell><cell>4.5702  *  10 + 0</cell><cell>5.6631  *  10 + 0</cell><cell>3.5420  *  10 + 0</cell><cell>4.4084  *  10 + 0</cell><cell>1.4475  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(8.92  *  10 -1) +</cell><cell>(3.44  *  10 + 0) +</cell><cell>(2.96  *  10 + 0) +</cell><cell>(4.94  *  10 + 0) +</cell><cell>(1.84  *  10 + 0) +</cell><cell>(2.81  *  10 + 0) +</cell><cell>(8.41  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell></cell><cell>7.9031  *  10 + 3</cell><cell>1.0143  *  10 + 4</cell><cell>2.1672  *  10 + 4</cell><cell>6.1796  *  10 + 3</cell><cell>1.0903  *  10 + 4</cell><cell>1.5135  *  10 + 4</cell><cell>7.9671  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(3.66  *  10 + 3) +</cell><cell>(8.12  *  10 + 3) +</cell><cell>(1.54  *  10 + 4) +</cell><cell>(6.57  *  10 + 3) +</cell><cell>(6.61  *  10 + 3) +</cell><cell>(7.66  *  10 + 3) +</cell><cell>(6.30  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell></cell><cell>1.6079  *  10 + 4</cell><cell>2.0107  *  10 + 4</cell><cell>3.0028  *  10 + 4</cell><cell>8.8998  *  10 + 3</cell><cell>2.8016  *  10 + 4</cell><cell>2.3769  *  10 + 4</cell><cell>1.4141  *  10 + 5</cell></row><row><cell></cell><cell></cell><cell>(1.36  *  10 + 4) +</cell><cell>(1.18  *  10 + 4) +</cell><cell>(1.47  *  10 + 4) +</cell><cell>(6.47  *  10 + 3) +</cell><cell>(1.41  *  10 + 4) +</cell><cell>(1.10  *  10 + 4) +</cell><cell>(4.63  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell></cell><cell>3.4698  *  10 + 0</cell><cell>3.5454  *  10 + 0</cell><cell>3.8092  *  10 + 0</cell><cell>2.7881  *  10 + 0</cell><cell>3.7757  *  10 + 0</cell><cell>3.6395  *  10 + 0</cell><cell>1.0620  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(9.71  *  10 -1) +</cell><cell>(1.02  *  10 + 0) +</cell><cell>(1.33  *  10 + 0) +</cell><cell>(8.91  *  10 -1) +</cell><cell>(1.00  *  10 + 0) +</cell><cell>(1.08  *  10 + 0) +</cell><cell>(2.18  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell></cell><cell>5.8300  *  10 + 2</cell><cell>6.2965  *  10 + 2</cell><cell>6.2957  *  10 + 2</cell><cell>7.0824  *  10 + 2</cell><cell>5.8378  *  10 + 2</cell><cell>6.9594  *  10 + 2</cell><cell>7.6444  *  10 + 2</cell></row><row><cell></cell><cell></cell><cell>(1.30  *  10 + 2) +</cell><cell>(1.45  *  10 + 2) =</cell><cell>(1.40  *  10 + 2) =</cell><cell>(2.36  *  10 + 2) =</cell><cell>(1.49  *  10 + 2) +</cell><cell>(1.78  *  10 + 2) =</cell><cell>(2.48  *  10 + 2)</cell></row><row><cell>Table 12</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">IGD values for 9 fifteen-objective benchmark problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>LSMOP1</cell><cell></cell><cell>4.7737  *  10 + 0</cell><cell>5.4519  *  10 + 0</cell><cell>5.0424  *  10 + 0</cell><cell>1.1443  *  10 + 1</cell><cell>4.8757  *  10 + 0</cell><cell>8.4892  *  10 + 0</cell><cell>8.2699  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.62  *  10 + 0) +</cell><cell>(1.71  *  10 + 0) +</cell><cell>(2.44  *  10 + 0) +</cell><cell>(1.27  *  10 + 1) =</cell><cell>(2.21  *  10 + 0) +</cell><cell>(4.26  *  10 + 0) =</cell><cell>(9.21  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell></cell><cell>6.1203  *  10 -1</cell><cell>5.8589  *  10 -1</cell><cell>6.0001  *  10 -1</cell><cell>7.3986  *  10 -1</cell><cell>6.3021  *  10 -1</cell><cell>6.7243  *  10 -1</cell><cell>4.6684  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(7.52  *  10 -2) -</cell><cell>(4.46  *  10 -2) -</cell><cell>(5.13  *  10 -2) -</cell><cell>(1.17  *  10 -1) -</cell><cell>(6.82  *  10 -2) -</cell><cell>(9.38  *  10 -2) -</cell><cell>(6.72  *  10 -2)</cell></row><row><cell>LSMOP3</cell><cell></cell><cell>1.4722  *  10 + 3</cell><cell>2.8688  *  10 + 3</cell><cell>1.2831  *  10 + 3</cell><cell>1.6140  *  10 + 3</cell><cell>1.7663  *  10 + 3</cell><cell>1.1263  *  10 + 4</cell><cell>3.6144  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(2.32  *  10 + 3) -</cell><cell>(3.31  *  10 + 3) -</cell><cell>(1.80  *  10 + 3) -</cell><cell>(3.53  *  10 + 3) -</cell><cell>(2.35  *  10 + 3) -</cell><cell>(1.98  *  10 + 4) -</cell><cell>(1.04  *  10 + 1)</cell></row><row><cell>LSMOP4</cell><cell></cell><cell>6.1654  *  10 -1</cell><cell>6.3235  *  10 -1</cell><cell>6.0913  *  10 -1</cell><cell>7.7725  *  10 -1</cell><cell>6.1850  *  10 -1</cell><cell>7.4107  *  10 -1</cell><cell>4.8802  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(5.16  *  10 -2) -</cell><cell>(7.68  *  10 -2) -</cell><cell>(6.53  *  10 -2) -</cell><cell>(1.33  *  10 -1) -</cell><cell>(7.71  *  10 -2) -</cell><cell>(6.29  *  10 -2) -</cell><cell>(5.17  *  10 -2)</cell></row><row><cell>LSMOP5</cell><cell></cell><cell>5.0734  *  10 + 0</cell><cell>3.8502  *  10 + 0</cell><cell>4.1919  *  10 + 0</cell><cell>5.0745  *  10 + 0</cell><cell>3.7978  *  10 + 0</cell><cell>4.5542  *  10 + 0</cell><cell>1.9097  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.47  *  10 + 0) +</cell><cell>(6.24  *  10 -1) +</cell><cell>(7.48  *  10 -1) +</cell><cell>(1.04  *  10 + 0) +</cell><cell>(7.79  *  10 -1) +</cell><cell>(8.66  *  10 -1) +</cell><cell>(8.74  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell></cell><cell>1.8256  *  10 + 3</cell><cell>1.6459  *  10 + 3</cell><cell>2.0620  *  10 + 3</cell><cell>2.2497  *  10 + 3</cell><cell>1.4329  *  10 + 3</cell><cell>2.5970  *  10 + 3</cell><cell>1.5930  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(1.16  *  10 + 3) +</cell><cell>(6.40  *  10 + 2) +</cell><cell>(9.59  *  10 + 2) +</cell><cell>(1.83  *  10 + 3) +</cell><cell>(5.74  *  10 + 2) +</cell><cell>(9.80  *  10 + 2) +</cell><cell>(2.95  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell></cell><cell>2.7388</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>4.3987 * 10 -2 (8.34 * 10 -3) + 4.6331 * 10 -2 (8.07 * 10 -3) + 4.0646 * 10 -2 (8.10 * 10 -3) + 4.4775 * 10 -2 (8.51 * 10 -3) + 3.9848 * 10 -2 (8.07 * 10 -3) + 5.1828 * 10 -2 (5.91 * 10 -3) LSMOP3 6.8077 * 10 + 3 (2.11 * 10 + 3) = 7.9252 * 10 + 3 (2.55 * 10 + 3) -7.6768 * 10 + 3 (1.89 * 10 + 3) -3.4724 * 10 + 3 (2.06 * 10 + 3) + 7.5847 * 10 + 3 (2.46 * 10 + 3) = 1.0526 * 10 + 4 (4.75 * 10 + 3) -6.2716 * 10 + 3 (1.69 * 10 + 3) LSMOP4 4.9066 * 10 -2 (5.17 * 10 -3) + 5.1519 * 10 -2 (5.50 * 10 -3) = 5.1073 * 10 -2 (5.42 * 10 -3) + 6.1741 * 10 -2 (9.08 * 10 -3) -5.2836 * 10 -2 (3.90 * 10 -3) = 5.5635 * 10 -2 (6.91 * 10 -3) = * 10 + 2 (4.41 * 10 + 2) = 1.4540 * 10 + 3 (2.02 * 10 + 3) -2.2016 * 10 + 3 (2.39 * 10 + 3) -4.1778 * 10 + 2 (8.38 * 10 + 2) = 2.1121 * 10 + 3 (1.66 * 10 + 3) -1.6963 * 10 + 3 (1.86 * 10 + 3) -3.0224 * 10 + 2 (1.34 * 10 + 3) LSMOP8 1.4414 * 10 + 0 (3.10 * 10 -1) + 1.5064 * 10 + 0 (3.88 * 10 -1) + 1.7553 * 10 + 0 (8.84 * 10 -1) = 1.5518 * 10 + 0 (7.26 * 10 -1) + 1.5392 * 10 + 0 (4.26 * 10 -1) = 1.5884 * 10 + 0 (7.87 * 10 -1) = 6.4434 * 10 + 0 (1.19 * 10 + 1) LSMOP9 1.8565 * 10 + 3 (5.46 * 10 + 2) + 1.7487 * 10 + 3 (7.01 * 10 + 2) + 1.6409 * 10 + 3 (4.99 * 10 + 2) + 3.0691 * 10 + 3 (1.00 * 10 + 3) = 1.6363 * 10 + 3 (6.15 * 10 + 2) + 2.1429 * 10 + 3 (8.23 * 10 + 2) + 3.3033 * 10 + 3 (1.56 * 10 + 3)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 13</head><label>13</label><figDesc>Statistical results of seven algorithms on LSMOP1-9 of 3-/5-/8-/10-/15-objective ().</figDesc><table><row><cell>Metric</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-F2</cell><cell>NSGAIII-F3</cell><cell>NSGAIII-R1</cell><cell>NSGAIII-R2</cell><cell>NSGAIII-R3</cell><cell>NSGA-III</cell></row><row><cell>GD</cell><cell>3</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>4</cell><cell>0</cell><cell>1</cell><cell>4</cell></row><row><cell>IGD</cell><cell>3</cell><cell>4</cell><cell>0</cell><cell>0</cell><cell>2</cell><cell>1</cell><cell>1</cell><cell>1</cell></row><row><cell>GD</cell><cell>5</cell><cell>3</cell><cell>0</cell><cell>0</cell><cell>4</cell><cell>1</cell><cell>0</cell><cell>1</cell></row><row><cell>IGD</cell><cell>5</cell><cell>5</cell><cell>1</cell><cell>0</cell><cell>1</cell><cell>0</cell><cell>0</cell><cell>2</cell></row><row><cell>GD</cell><cell>8</cell><cell>3</cell><cell>2</cell><cell>0</cell><cell>2</cell><cell>1</cell><cell>0</cell><cell>1</cell></row><row><cell>IGD</cell><cell>8</cell><cell>2</cell><cell>1</cell><cell>1</cell><cell>2</cell><cell>1</cell><cell>0</cell><cell>2</cell></row><row><cell>GD</cell><cell>10</cell><cell>3</cell><cell>0</cell><cell>0</cell><cell>2</cell><cell>1</cell><cell>0</cell><cell>3</cell></row><row><cell>IGD</cell><cell>10</cell><cell>2</cell><cell>2</cell><cell>0</cell><cell>1</cell><cell>1</cell><cell>0</cell><cell>3</cell></row><row><cell>GD</cell><cell>15</cell><cell>3</cell><cell>0</cell><cell>0</cell><cell>4</cell><cell>0</cell><cell>1</cell><cell>1</cell></row><row><cell>IGD</cell><cell>15</cell><cell>3</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>3</cell><cell>0</cell><cell>3</cell></row><row><cell>Total</cell><cell></cell><cell>28</cell><cell>6</cell><cell>1</cell><cell>22</cell><cell>9</cell><cell>3</cell><cell>21</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 14</head><label>14</label><figDesc></figDesc><table><row><cell cols="4">GD values for three-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>3</cell><cell>2.1330  *  10 + 0</cell><cell>3.2189  *  10 + 0</cell><cell>1.7338  *  10 + 0</cell><cell>2.4843  *  10 + 0</cell><cell>3.9700  *  10 + 0</cell><cell>1.7677  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.73  *  10 -1) -</cell><cell>(1.26  *  10 + 0) -</cell><cell>(2.09  *  10 -1) =</cell><cell>(4.05  *  10 -1) -</cell><cell>(3.18  *  10 -1) -</cell><cell>(2.27  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>3</cell><cell>8.6709  *  10 -3</cell><cell>7.9305  *  10 -3</cell><cell>1.0214  *  10 -2</cell><cell>9.3694  *  10 -3</cell><cell>7.3202  *  10 -3</cell><cell>1.0791  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(3.64  *  10 -4) +</cell><cell>(4.92  *  10 -4) +</cell><cell>(1.19  *  10 -4) +</cell><cell>(3.39  *  10 -4) +</cell><cell>(9.67  *  10 -5) +</cell><cell>(3.14  *  10 -4)</cell></row><row><cell>LSMOP3</cell><cell>3</cell><cell>2.2308  *  10 + 3</cell><cell>3.9220  *  10 + 2</cell><cell>1.5552  *  10 + 3</cell><cell>1.9096  *  10 + 3</cell><cell>5.1278  *  10 + 3</cell><cell>1.5624  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(8.73  *  10 + 2) -</cell><cell>(4.27  *  10 + 2) +</cell><cell>(3.27  *  10 + 2) =</cell><cell>(4.55  *  10 + 2) -</cell><cell>(7.45  *  10 + 2) -</cell><cell>(3.97  *  10 + 2)</cell></row><row><cell>LSMOP4</cell><cell>3</cell><cell>4.6696  *  10 -2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>5.2068  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(1.13  *  10 -3) +</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(1.52  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>3</cell><cell>5.3413  *  10 + 0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(1.27  *  10 + 0) =</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>8.2507  *  10 +</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(1.41  *  10 + 3)</cell></row><row><cell>LSMOP7</cell><cell>3</cell><cell>2.4771  *  10 + 4</cell><cell>1.6545  *  10 + 4</cell><cell>5.5441  *  10 + 3</cell><cell>5.3120  *  10 + 3</cell><cell>1.7577  *  10 + 4</cell><cell>5.4135  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.70  *  10 + 4) -</cell><cell>(9.31  *  10 + 3) -</cell><cell>(9.95  *  10 + 2) =</cell><cell>(1.38  *  10 + 3) =</cell><cell>(3.43  *  10 + 3) -</cell><cell>(9.47  *  10 + 2)</cell></row><row><cell>LSMOP8</cell><cell>3</cell><cell>4.7125  *  10 + 0</cell><cell>3.9424  *  10 + 0</cell><cell>1.2681  *  10 + 0</cell><cell>1.1018  *  10 + 0</cell><cell>1.5888  *  10 + 0</cell><cell>1.3287  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.77  *  10 -1) -</cell><cell>(8.85  *  10 -1) -</cell><cell>(1.41  *  10 -1) =</cell><cell>(1.37  *  10 -1) +</cell><cell>(1.76  *  10 -1) -</cell><cell>(1.62  *  10 -1)</cell></row><row><cell>LSMOP9</cell><cell>3</cell><cell>2.1351  *  10 + 1</cell><cell>2.1385  *  10 + 1</cell><cell>4.2350  *  10 + 0</cell><cell>5.3584  *  10 + 0</cell><cell>3.6216  *  10 + 0</cell><cell>4.1132  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(2.42  *  10 + 0) -</cell><cell>(2.84  *  10 + 0) -</cell><cell>(4.98  *  10 -1) =</cell><cell>(6.90  *  10 -1) -</cell><cell>(8.77  *  10 -1) =</cell><cell>(7.59  *  10 -1)</cell></row><row><cell>Table 15</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">IGD values for three-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>3</cell><cell>1.6447  *  10 + 0</cell><cell>1.7286  *  10 + 0</cell><cell>4.4788  *  10 + 0</cell><cell>6.2130  *  10 + 0</cell><cell>9.0469  *  10 + 0</cell><cell>4.8401  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.40  *  10 -1) +</cell><cell>(2.14  *  10 -1) +</cell><cell>(4.29  *  10 -1) +</cell><cell>(5.21  *  10 -1) -</cell><cell>(5.63  *  10 -1) -</cell><cell>(6.50  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>3</cell><cell>8.2337  *  10 -2</cell><cell>7.7310  *  10 -2</cell><cell>9.0989  *  10 -2</cell><cell>9.5210  *  10 -2</cell><cell>2.3526  *  10 -1</cell><cell>9.7944  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(1.02  *  10 -3) +</cell><cell>(8.64  *  10 -4) +</cell><cell>(4.30  *  10 -4) +</cell><cell>(1.14  *  10 -3) +</cell><cell>(2.83  *  10 -3) -</cell><cell>(1.61  *  10 -3)</cell></row><row><cell>LSMOP3</cell><cell>3</cell><cell>2.2895  *  10 + 1</cell><cell>1.1966  *  10 + 1</cell><cell>1.3229  *  10 + 1</cell><cell>1.6092  *  10 + 1</cell><cell>2.3160  *  10 + 1</cell><cell>1.3176  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.44  *  10 + 1) -</cell><cell>(3.43  *  10 + 0) +</cell><cell>(8.41  *  10 -1) =</cell><cell>(1.86  *  10 + 0) -</cell><cell>(6.39  *  10 + 0) -</cell><cell>(6.66  *  10 -1)</cell></row><row><cell>LSMOP4</cell><cell>3</cell><cell>2.3692  *  10 -1</cell><cell>2.3312  *  10 -1</cell><cell>2.6694  *  10 -1</cell><cell>2.7907  *  10 -1</cell><cell>3.2337  *  10 -1</cell><cell>2.7694  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(3.60  *  10 -3) +</cell><cell>(3.56  *  10 -3) +</cell><cell>(1.99  *  10 -3) +</cell><cell>(2.93  *  10 -3) =</cell><cell>(5.75  *  10 -2) -</cell><cell>(3.34  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>3</cell><cell>3.4431  *  10 + 0</cell><cell>3.5642  *  10 + 0</cell><cell>9.8992  *  10 + 0</cell><cell>1.5713  *  10 + 1</cell><cell>1.5867  *  10 + 1</cell><cell>1.1470  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.24  *  10 -1) +</cell><cell>(3.23  *  10 -1) +</cell><cell>(1.14  *  10 + 0) +</cell><cell>(1.59  *  10 + 0) -</cell><cell>(1.59  *  10 + 0) -</cell><cell>(1.30  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>3</cell><cell>1.3087  *  10 + 3</cell><cell>1.8308  *  10 + 3</cell><cell>1.5590  *  10 + 3</cell><cell>5.4789  *  10 + 3</cell><cell>1.2143  *  10 + 4</cell><cell>1.9083  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.59  *  10 + 2) +</cell><cell>(7.30  *  10 + 2) =</cell><cell>(3.37  *  10 + 2) +</cell><cell>(2.14  *  10 + 3) -</cell><cell>(6.41  *  10 + 3) -</cell><cell>(5.61  *  10 + 2)</cell></row><row><cell>LSMOP7</cell><cell>3</cell><cell>1.4362  *  10 + 0</cell><cell>1.4413  *  10 + 0</cell><cell>1.5115  *  10 + 0</cell><cell>4.0610  *  10 + 3</cell><cell>2.4328  *  10 + 2</cell><cell>1.5017  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.79  *  10 -2) +</cell><cell>(5.54  *  10 -2) +</cell><cell>(1.81  *  10 -2) =</cell><cell>(3.76  *  10 + 3) -</cell><cell>(4.11  *  10 + 2) -</cell><cell>(2.10  *  10 -2)</cell></row><row><cell>LSMOP8</cell><cell>3</cell><cell>9.4144  *  10 -1</cell><cell>8.8849  *  10 -1</cell><cell>9.6356  *  10 -1</cell><cell>3.6516  *  10 + 0</cell><cell>7.7565  *  10 -1</cell><cell>9.5865  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(6.15  *  10 -2) =</cell><cell>(1.24  *  10 -1) =</cell><cell>(3.48  *  10 -2) =</cell><cell>(1.14  *  10 + 0) -</cell><cell>(3.31  *  10 -2) +</cell><cell>(4.50  *  10 -2)</cell></row><row><cell>LSMOP9</cell><cell>3</cell><cell>4.0680</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p><p><p><p>4.6073 * 10 -2 (1.48 * 10 -3) + 4.7885 * 10 -2 (5.59 * 10 -4) + 4.4486 * 10 -2 (2.46 * 10 -3) + 4.1869 * 10 -2 (1.38 * 10 -2) + 4.2435 * 10 + 0 (1.46 * 10 + 0) + 5.2920 * 10 + 0 (4.37 * 10 -1) = 4.8797 * 10 + 0 (5.33 * 10 -1) + 8.8898 * 10 + 0 (5.86 * 10 -1) -5.1667 * 10 + (4.27 * 10 -1) LSMOP6 3 1.4413 * 10 + 4 (1.19 * 10 + 4) = 3.8582 * 10 + 3 (8.25 * 10 + 3) + 9.1887 * 10 + 3 (2.79 * 10 + 3) = 9.9759 * 10 + 3 (3.91 * 10 + 3) = 3.0614 * 10 + 4 (7.30 * 10 + 3) -* 10 + 1 (1.01 * 10 + 1) -4.8254 * 10 + 1 (1.04 * 10 + 1) -1.8696 * 10 + 1 (1.42 * 10 + 0) = 2.6804 * 10 + 1 (4.27 * 10 + 0) -2.1299 * 10 + 1 (2.33 * 10 + 0) -1.8522 * 10 + (3.43 * 10 + 0)</p>deviation of GD values. The bold font represents that this algorithm has the best performance on this problem. From Table</p>3</p>, the GD values of M-R1 are best on 4 instances out of the nine problems and NSGA-III are also best on 4 instances out of the nine problems. The NSGAIII-R1 algorithm is good as that of the original NSGA-III algorithm on GD values of 3-objective test problems.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 16</head><label>16</label><figDesc>GD values for five-objective LSMOP1-9 problems. .2583 * 10 + 0 (1.38 * 10 + 0) -1.8629 * 10 + 0 (1.24 * 10 -1) = 3.0287 * 10 + 0 (4.39 * 10 -1) -5.0664 * 10 + 0 (5.57 * 10 -1) -10 -3 (3.21 * 10 -4) + 8.7805 * 10 -3 (3.55 * 10 -4) + 1.2972 * 10 -2 (6.92 * 10 -5) -8.5307 * 10 -3 (6.96 * 10 -4) +</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>5</cell><cell>1.6436  *  10 + 0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.8820  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(5.82  *  10 -1) =</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(3.25  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>5</cell><cell cols="5">9.4572  *  8.2695  *  10 -3</cell><cell>1.2552  *  10 -</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(1.38  *  10 -4) +</cell><cell>(3.32  *  10 -4)</cell></row><row><cell>LSMOP3</cell><cell>5</cell><cell>2.1983  *  10 + 3</cell><cell>1.6902  *  10 + 3</cell><cell>5.3860  *  10 + 3</cell><cell>6.1351  *  10 + 3</cell><cell>1.0784  *  10 + 4</cell><cell>5.4141  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(8.04  *  10 + 2) +</cell><cell>(8.61  *  10 + 2) +</cell><cell>(1.01  *  10 + 3) =</cell><cell>(8.00  *  10 + 2) -</cell><cell>(8.17  *  10 + 2) -</cell><cell>(9.85  *  10 + 2)</cell></row><row><cell>LSMOP4</cell><cell>5</cell><cell>6.6262  *  10 -2</cell><cell>7.4168  *  10 -2</cell><cell>7.2092  *  10 -2</cell><cell>4.3729  *  10 -2</cell><cell>2.3028  *  10 -2</cell><cell>7.0933  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(4.71  *  10 -3) +</cell><cell>(1.11  *  10 -2) =</cell><cell>(1.76  *  10 -3) =</cell><cell>(7.27  *  10 -3) =</cell><cell>(7.64  *  10 -4) +</cell><cell>(4.07  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>5</cell><cell>8.7274  *  10 -1</cell><cell>1.8048  *  10 + 0</cell><cell>1.1988  *  10 + 1</cell><cell>1.4029  *  10 + 1</cell><cell>1.7130  *  10 + 1</cell><cell>1.1541  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(5.58  *  10 -1) +</cell><cell>(2.36  *  10 + 0) +</cell><cell>(8.95  *  10 -1) =</cell><cell>(9.53  *  10 -1) -</cell><cell>(5.36  *  10 -1) -</cell><cell>(2.05  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>5</cell><cell>1.0424  *  10 + 4</cell><cell>9.1259  *  10 + 3</cell><cell>2.4439  *  10 + 4</cell><cell>4.9736  *  10 + 4</cell><cell>1.7125  *  10 + 5</cell><cell>3.1546  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.72  *  10 + 4) +</cell><cell>(1.44  *  10 + 4) +</cell><cell>(1.16  *  10 + 4) =</cell><cell>(9.13  *  10 + 3) -</cell><cell>(1.18  *  10 + 4) -</cell><cell>(1.45  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>5</cell><cell>2.2021  *  10 + 4</cell><cell>1.7632  *  10 + 4</cell><cell>6.4277  *  10 + 4</cell><cell>9.3965  *  10 + 4</cell><cell>1.3200  *  10 + 5</cell><cell>7.2264  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.47  *  10 + 4) +</cell><cell>(8.52  *  10 + 3) +</cell><cell>(8.83  *  10 + 3) +</cell><cell>(1.13  *  10 + 4) -</cell><cell>(8.84  *  10 + 3) -</cell><cell>(1.05  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>5</cell><cell>2.5728  *  10 + 0</cell><cell>2.5303  *  10 + 0</cell><cell>5.8457  *  10 + 0</cell><cell>6.6649  *  10 + 0</cell><cell>4.9359  *  10 + 0</cell><cell>5.9746  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(2.05  *  10 + 0) +</cell><cell>(1.45  *  10 + 0) +</cell><cell>(5.02  *  10 -1) =</cell><cell>(3.75  *  10 -1) -</cell><cell>(1.89  *  10 -1) +</cell><cell>(5.23  *  10 -1)</cell></row><row><cell>LSMOP9</cell><cell>5</cell><cell>4.7078  *  10 + 1</cell><cell>5.8276  *  10 + 1</cell><cell>2.7002  *  10 + 1</cell><cell>3.0982  *  10 + 1</cell><cell>2.3656  *  10 + 1</cell><cell>2.7055  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.10  *  10 + 1) -</cell><cell>(1.14  *  10 + 1) -</cell><cell>(3.14  *  10 + 0) =</cell><cell>(4.26  *  10 + 0) -</cell><cell>(2.53  *  10 + 0) +</cell><cell>(3.02  *  10 + 0)</cell></row><row><cell>Table 17</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">IGD values for five-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>5</cell><cell>1.9144  *  10 + 0</cell><cell>2.5801  *  10 + 0</cell><cell>7.3621  *  10 + 0</cell><cell>1.0496  *  10 + 1</cell><cell>1.2963  *  10 + 1</cell><cell>7.0971  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.58  *  10 -1) +</cell><cell>(5.44  *  10 -1) +</cell><cell>(6.71  *  10 -1) =</cell><cell>(1.23  *  10 + 0) -</cell><cell>(1.21  *  10 + 0) -</cell><cell>(6.49  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>5</cell><cell>1.5562  *  10 -1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.7870  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(4.07  *  10 -3) +</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(2.76  *  10 -3)</cell></row><row><cell>LSMOP3</cell><cell>5</cell><cell>3.3518  *  10 + 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>2.8730  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.80  *  10 + 2) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(2.36  *  10 + 1)</cell></row><row><cell>LSMOP4</cell><cell>5</cell><cell>3.0686  *  10 -1</cell><cell>3.5517  *  10 -1</cell><cell>3.2271  *  10 -1</cell><cell>3.3857  *  10 -1</cell><cell>3.0911  *  10 -1</cell><cell>3.3654  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(4.61  *  10 -2) +</cell><cell>(7.19  *  10 -2) =</cell><cell>(2.48  *  10 -3) +</cell><cell>(4.36  *  10 -2) =</cell><cell>(3.61  *  10 -3) +</cell><cell>(7.34  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>5</cell><cell>3.5950  *  10 + 0</cell><cell>3.5199  *  10 + 0</cell><cell>1.3139  *  10 + 1</cell><cell>6.7837  *  10 + 1</cell><cell>1.8551  *  10 + 1</cell><cell>1.2965  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.14  *  10 + 0) +</cell><cell>(8.86  *  10 -1) +</cell><cell>(1.89  *  10 + 0) =</cell><cell>(2.45  *  10 + 1) -</cell><cell>(1.98  *  10 + 0) -</cell><cell>(2.56  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>5</cell><cell>2.7761  *  10 + 2</cell><cell>4.3022  *  10 + 2</cell><cell>8.6981  *  10 + 2</cell><cell>2.6315  *  10 + 4</cell><cell>5.7545  *  10 + 4</cell><cell>1.3909  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.63  *  10 + 2) +</cell><cell>(4.66  *  10 + 2) +</cell><cell>(7.73  *  10 + 2) =</cell><cell>(3.37  *  10 + 4) -</cell><cell>(1.45  *  10 + 4) -</cell><cell>(1.58  *  10 + 3)</cell></row><row><cell>LSMOP7</cell><cell>5</cell><cell>7.3475  *  10 + 1</cell><cell>5.2274  *  10 + 2</cell><cell>5.2257  *  10 + 3</cell><cell>3.0044  *  10 + 5</cell><cell>2.2076  *  10 + 2</cell><cell>4.9431  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.17  *  10 + 2) +</cell><cell>(2.33  *  10 + 3) =</cell><cell>(8.69  *  10 + 3) =</cell><cell>(9.88  *  10 + 4) -</cell><cell>(2.30  *  10 + 2) +</cell><cell>(1.09  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>5</cell><cell>1.1385  *  10 + 0</cell><cell>1.0961  *  10 + 0</cell><cell>2.1087  *  10 + 0</cell><cell>3.4597  *  10 + 1</cell><cell>2.0866  *  10 + 0</cell><cell>5.6407  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(6.81  *  10 -2) +</cell><cell>(7.67  *  10 -2) +</cell><cell>(2.30  *  10 + 0) +</cell><cell>(5.74  *  10 + 0) -</cell><cell>(7.94  *  10 -1) =</cell><cell>(4.23  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>5</cell><cell>1.5370  *  10 + 2</cell><cell>1.7507  *  10 + 2</cell><cell>1.1204  *  10 + 2</cell><cell>1.3638  *  10 + 2</cell><cell>1.4629  *  10 + 2</cell><cell>1.1222  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.36  *  10 + 1) -</cell><cell>(3.50  *  10 + 1) -</cell><cell>(1.11  *  10 + 1) =</cell><cell>(1.78  *  10 + 1) -</cell><cell>(1.65  *  10 + 1) -</cell><cell>(1.19  *  10 + 1)</cell></row><row><cell>Table 18</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">GD values for eight-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>8</cell><cell>2.3241  *  10 + 0</cell><cell>2.9288  *  10 + 0</cell><cell>2.0462  *  10 + 0</cell><cell>2.1894  *  10 + 0</cell><cell>2.4851  *  10 + 0</cell><cell>2.5084  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.03  *  10 + 0) =</cell><cell>(1.72  *  10 + 0) =</cell><cell>(2.74  *  10 -1) +</cell><cell>(1.25  *  10 + 0) +</cell><cell>(7.95  *  10 -1) =</cell><cell>(5.26  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>8</cell><cell>3.4954  *  10 -2</cell><cell>4.2752  *  10 -2</cell><cell>3.1704  *  10 -2</cell><cell>2.0023  *  10 -2</cell><cell>1.3870  *  10 -2</cell><cell>3.6916  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(9.23  *  10 -3) =</cell><cell>(1.35  *  10 -2) -</cell><cell>(2.12  *  10 -3) +</cell><cell>(5.53  *  10 -3) +</cell><cell>(2.59  *  10 -4) +</cell><cell>(4.09  *  10 -3)</cell></row><row><cell>LSMOP3</cell><cell>8</cell><cell>3.1547  *  10 + 4</cell><cell>3.3203  *  10 + 4</cell><cell>1.4576  *  10 + 4</cell><cell>4.2843  *  10 + 4</cell><cell>6.5456  *  10 + 4</cell><cell>1.3846  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.63  *  10 + 4) -</cell><cell>(1.84  *  10 + 4) -</cell><cell>(7.64  *  10 + 3) =</cell><cell>(3.03  *  10 + 4) -</cell><cell>(2.07  *  10 + 4) -</cell><cell>(4.37  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell>8</cell><cell>1.7484  *  10 -2</cell><cell>1.5557  *  10 -2</cell><cell>4.9965  *  10 -2</cell><cell>2.6326  *  10 -2</cell><cell>1.8835  *  10 -2</cell><cell>5.5997  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(2.61  *  10 -3) +</cell><cell>(1.76  *  10 -3) +</cell><cell>(4.57  *  10 -3) +</cell><cell>(5.25  *  10 -3) +</cell><cell>(6.04  *  10 -4) +</cell><cell>(5.38  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>8</cell><cell>1.2474  *  10 + 0</cell><cell>2.4116  *  10 + 0</cell><cell>1.2716  *  10 + 1</cell><cell>1.6114  *  10 + 1</cell><cell>1.9716  *  10 + 1</cell><cell>1.2584  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(4.75  *  10 -1) +</cell><cell>(3.38  *  10 + 0) +</cell><cell>(3.54  *  10 + 0) =</cell><cell>(1.44  *  10 + 0) -</cell><cell>(5.33  *  10 -1) -</cell><cell>(2.55  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>8</cell><cell>1.0748  *  10 + 4</cell><cell>8.9023  *  10 + 3</cell><cell>9.9352  *  10 + 4</cell><cell>1.2057  *  10 + 5</cell><cell>1.4266  *  10 + 5</cell><cell>1.0993  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(9.32  *  10 + 3) +</cell><cell>(3.90  *  10 + 3) +</cell><cell>(1.46  *  10 + 4) =</cell><cell>(2.98  *  10 + 4) =</cell><cell>(7.31  *  10 + 3) -</cell><cell>(2.70  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>8</cell><cell>8.8760  *  10 + 3</cell><cell>2.7941  *  10 + 3</cell><cell>1.0724  *  10 + 5</cell><cell>1.5214  *  10 + 5</cell><cell>2.1270  *  10 + 5</cell><cell>1.1781  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(9.68  *  10 + 3) +</cell><cell>(5.33  *  10 + 3) +</cell><cell>(4.95  *  10 + 4) =</cell><cell>(1.56  *  10 + 4) =</cell><cell>(6.52  *  10 + 3) -</cell><cell>(5.84  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>8</cell><cell>6.1558  *  10 -1</cell><cell>1.0121  *  10 + 0</cell><cell>6.9720  *  10 + 0</cell><cell>7.9136  *  10 + 0</cell><cell>1.0233  *  10 + 1</cell><cell>8.0888  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.40  *  10 -1) +</cell><cell>(9.57  *  10 -1) +</cell><cell>(1.65  *  10 + 0) +</cell><cell>(8.22  *  10 -1) =</cell><cell>(3.49  *  10 -1) -</cell><cell>(1.69  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>8</cell><cell>1.0955  *  10 + 2</cell><cell>1.2280  *  10 + 2</cell><cell>1.4803  *  10 + 2</cell><cell>1.8970  *  10 + 2</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(2.14  *  10 + 1) +</cell><cell>(3.62  *  10 + 1) +</cell><cell>(1.74  *  10 + 1) =</cell><cell>(2.98  *  10 + 1) -</cell><cell></cell><cell></cell></row></table><note><p>31.5431 * 10 -1 (5.96 * 10 -3) + 1.7620 * 10 -1 (5.22 * 10 -4) + 1.9713 * 10 -1 (1.64 * 10 -2) -1.9638 * 10 -1 (4.66 * 10 -3) -1.3690 * 10 + 2 (1.87 * 10 + 2) -2.7843 * 10 + 1 (1.84 * 10 + 1) = 4.4629 * 10 + 3 (4.64 * 10 + 3) -3.8005 * 10 + 2 (3.68 * 10 + 2) -9.4644 * 10 + 1 (4.81 * 10 + 0) + 1.4734 * 10 + (1.47 * 10 + 1)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Table 19</head><label>19</label><figDesc>IGD values for eight-objective LSMOP1-9 problems.</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>8</cell><cell>2.8428  *  10 + 0</cell><cell>3.7251  *  10 + 0</cell><cell>7.5952  *  10 + 0</cell><cell>1.0538  *  10 + 1</cell><cell>1.0633  *  10 + 1</cell><cell>8.4477  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(7.78  *  10 -1) +</cell><cell>(1.19  *  10 + 0) +</cell><cell>(8.32  *  10 -1) +</cell><cell>(2.94  *  10 + 0) -</cell><cell>(5.52  *  10 -1) -</cell><cell>(9.94  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>8</cell><cell>5.4004  *  10 -1</cell><cell>6.3756  *  10 -1</cell><cell>2.6431  *  10 -1</cell><cell>3.5446  *  10 -1</cell><cell>2.6249  *  10 -1</cell><cell>2.7830  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(9.00  *  10 -2) -</cell><cell>(9.00  *  10 -2) -</cell><cell>(1.32  *  10 -2) +</cell><cell>(6.72  *  10 -2) -</cell><cell>(3.59  *  10 -3) +</cell><cell>(3.20  *  10 -2)</cell></row><row><cell>LSMOP3</cell><cell>8</cell><cell>1.4468  *  10 + 3</cell><cell>1.4878  *  10 + 3</cell><cell>2.2911  *  10 + 3</cell><cell>2.1376  *  10 + 4</cell><cell>2.2225  *  10 + 3</cell><cell>1.2294  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.38  *  10 + 3) -</cell><cell>(1.42  *  10 + 3) =</cell><cell>(3.10  *  10 + 3) =</cell><cell>(1.41  *  10 + 4) -</cell><cell>(1.63  *  10 + 3) -</cell><cell>(2.54  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell>8</cell><cell>5.2175  *  10 -1</cell><cell>5.6696  *  10 -1</cell><cell>3.1311  *  10 -1</cell><cell>3.8169  *  10 -1</cell><cell>2.9494  *  10 -1</cell><cell>3.4230  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(4.43  *  10 -2) -</cell><cell>(4.97  *  10 -2) -</cell><cell>(1.68  *  10 -2) +</cell><cell>(4.82  *  10 -2) -</cell><cell>(5.80  *  10 -3) +</cell><cell>(5.60  *  10 -2)</cell></row><row><cell>LSMOP5</cell><cell>8</cell><cell>4.2547  *  10 + 0</cell><cell>3.4900  *  10 + 0</cell><cell>1.9584  *  10 + 1</cell><cell>9.6328  *  10 + 1</cell><cell>2.0221  *  10 + 1</cell><cell>1.9335  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(7.46  *  10 -1) +</cell><cell>(9.43  *  10 -1) +</cell><cell>(1.40  *  10 + 1) =</cell><cell>(2.66  *  10 + 1) -</cell><cell>(2.56  *  10 + 0) -</cell><cell>(1.17  *  10 + 1)</cell></row><row><cell>LSMOP6</cell><cell>8</cell><cell>7.6061  *  10 + 1</cell><cell>1.6479  *  10 + 0</cell><cell>1.4849  *  10 + 4</cell><cell>4.7031  *  10 + 5</cell><cell>2.4050  *  10 + 2</cell><cell>4.9444  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.33  *  10 + 2) +</cell><cell>(3.73  *  10 -2) +</cell><cell>(3.93  *  10 + 4) +</cell><cell>(1.96  *  10 + 5) -</cell><cell>(4.61  *  10 + 2) +</cell><cell>(5.08  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>8</cell><cell>3.6605  *  10 + 2</cell><cell>3.3890  *  10 + 2</cell><cell>3.0341  *  10 + 4</cell><cell>7.6989  *  10 + 5</cell><cell>5.7489  *  10 + 4</cell><cell>3.2177  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.64  *  10 + 2) +</cell><cell>(3.41  *  10 + 2) +</cell><cell>(4.88  *  10 + 4) =</cell><cell>(2.06  *  10 + 5) -</cell><cell>(2.02  *  10 + 4) -</cell><cell>(5.56  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>8</cell><cell>2.5057  *  10 + 0</cell><cell>2.3385  *  10 + 0</cell><cell>6.8154  *  10 + 0</cell><cell>4.9272  *  10 + 1</cell><cell>1.4125  *  10 + 1</cell><cell>8.9163  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(7.45  *  10 -1) +</cell><cell>(7.68  *  10 -1) +</cell><cell>(2.98  *  10 + 0) =</cell><cell>(1.17  *  10 + 1) -</cell><cell>(3.23  *  10 + 0) -</cell><cell>(3.56  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>8</cell><cell>5.2416  *  10 + 2</cell><cell>6.0676  *  10 + 2</cell><cell>5.5835  *  10 + 2</cell><cell>8.9404  *  10 + 2</cell><cell>6.0063  *  10 + 2</cell><cell>5.6221  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.39  *  10 + 2) =</cell><cell>(2.32  *  10 + 2) =</cell><cell>(5.38  *  10 + 1) =</cell><cell>(1.63  *  10 + 2) -</cell><cell>(3.89  *  10 + 1) -</cell><cell>(7.03  *  10 + 1)</cell></row><row><cell>Table 20</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">GD values for ten-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>10</cell><cell>3.0233  *  10 + 0</cell><cell>4.3735  *  10 + 0</cell><cell>2.8627  *  10 + 0</cell><cell>2.0959  *  10 + 0</cell><cell>1.4991  *  10 + 0</cell><cell>3.0369  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.13  *  10 + 0) =</cell><cell>(9.68  *  10 -1) -</cell><cell>(3.29  *  10 -1) =</cell><cell>(1.33  *  10 + 0) +</cell><cell>(4.15  *  10 -1) +</cell><cell>(5.28  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>10</cell><cell>2.3811  *  10 -2</cell><cell>2.4581  *  10 -2</cell><cell>3.0972  *  10 -2</cell><cell>1.6933  *  10 -2</cell><cell>1.5536  *  10 -2</cell><cell>3.0718  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(2.32  *  10 -3) +</cell><cell>(2.92  *  10 -3) +</cell><cell>(1.65  *  10 -3) =</cell><cell>(1.59  *  10 -3) +</cell><cell>(2.82  *  10 -4) +</cell><cell>(2.16  *  10 -3)</cell></row><row><cell>LSMOP3</cell><cell>10</cell><cell>5.4905  *  10 + 4</cell><cell>4.1001  *  10 + 4</cell><cell>2.6536  *  10 + 4</cell><cell>4.8216  *  10 + 4</cell><cell>2.9985  *  10 + 4</cell><cell>2.6352  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.27  *  10 + 4) -</cell><cell>(1.09  *  10 + 4) -</cell><cell>(6.53  *  10 + 3) =</cell><cell>(3.41  *  10 + 4) -</cell><cell>(2.10  *  10 + 4) =</cell><cell>(5.71  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell>10</cell><cell>1.8845  *  10 -2</cell><cell>1.9674  *  10 -2</cell><cell>5.8381  *  10 -2</cell><cell>2.3244  *  10 -2</cell><cell>1.9462  *  10 -2</cell><cell>5.5914  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(1.40  *  10 -3) +</cell><cell>(1.61  *  10 -3) +</cell><cell>(6.86  *  10 -3) =</cell><cell>(3.58  *  10 -3) +</cell><cell>(6.15  *  10 -4) +</cell><cell>(8.88  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>10</cell><cell>3.2334  *  10 + 0</cell><cell>6.1805  *  10 + 0</cell><cell>1.6132  *  10 + 1</cell><cell>1.5484  *  10 + 1</cell><cell>2.0222  *  10 + 1</cell><cell>1.5965  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.55  *  10 + 0) +</cell><cell>(3.96  *  10 + 0) +</cell><cell>(2.90  *  10 + 0) =</cell><cell>(1.41  *  10 + 0) =</cell><cell>(5.26  *  10 -1) -</cell><cell>(3.55  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>10</cell><cell>3.5526  *  10 + 4</cell><cell>2.5291  *  10 + 4</cell><cell>1.2746  *  10 + 5</cell><cell>1.0665  *  10 + 5</cell><cell>1.2096  *  10 + 5</cell><cell>1.3071  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.29  *  10 + 4) +</cell><cell>(1.59  *  10 + 4) +</cell><cell>(1.78  *  10 + 4) =</cell><cell>(1.93  *  10 + 4) +</cell><cell>(5.33  *  10 + 3) +</cell><cell>(2.62  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>10</cell><cell>1.4892  *  10 + 4</cell><cell>8.2429  *  10 + 3</cell><cell>1.4142  *  10 + 5</cell><cell>1.3964  *  10 + 5</cell><cell>2.1393  *  10 + 5</cell><cell>1.2412  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(1.12  *  10 + 4) +</cell><cell>(8.83  *  10 + 3) +</cell><cell>(5.43  *  10 + 4) =</cell><cell>(1.86  *  10 + 4) =</cell><cell>(1.07  *  10 + 4) -</cell><cell>(5.63  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>10</cell><cell>1.8254  *  10 + 0</cell><cell>3.5873  *  10 + 0</cell><cell>7.9481  *  10 + 0</cell><cell>7.3961  *  10 + 0</cell><cell>1.0682  *  10 + 1</cell><cell>8.2787  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(7.75  *  10 -1) +</cell><cell>(1.94  *  10 + 0) +</cell><cell>(1.41  *  10 + 0) =</cell><cell>(1.06  *  10 + 0) +</cell><cell>(2.44  *  10 -1) -</cell><cell>(1.56  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>10</cell><cell>2.4504  *  10 + 2</cell><cell>2.7192  *  10 + 2</cell><cell>2.2026  *  10 + 2</cell><cell>3.0550  *  10 + 2</cell><cell>1.5321  *  10 + 2</cell><cell>2.1556  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(3.14  *  10 + 1) -</cell><cell>(3.12  *  10 + 1) -</cell><cell>(1.59  *  10 + 1) =</cell><cell>(7.43  *  10 + 1) -</cell><cell>(9.21  *  10 + 0) +</cell><cell>(1.59  *  10 + 1)</cell></row><row><cell>Table 21</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">IGD values for ten-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>10</cell><cell>2.6454  *  10 + 0</cell><cell>3.4482  *  10 + 0</cell><cell>8.8957  *  10 + 0</cell><cell>9.3828  *  10 + 0</cell><cell>9.0404  *  10 + 0</cell><cell>8.9854  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(6.69  *  10 -1) +</cell><cell>(1.20  *  10 + 0) +</cell><cell>(9.76  *  10 -1) =</cell><cell>(1.17  *  10 + 0) =</cell><cell>(5.25  *  10 -1) =</cell><cell>(1.03  *  10 + 0)</cell></row><row><cell>LSMOP2</cell><cell>10</cell><cell>4.6729  *  10 -1</cell><cell>4.8386  *  10 -1</cell><cell>3.7294  *  10 -1</cell><cell>3.7439  *  10 -1</cell><cell>2.8239  *  10 -1</cell><cell>3.7537  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(3.77  *  10 -2) -</cell><cell>(4.50  *  10 -2) -</cell><cell>(2.62  *  10 -2) =</cell><cell>(5.52  *  10 -2) =</cell><cell>(5.35  *  10 -3) +</cell><cell>(2.00  *  10 -2)</cell></row><row><cell>LSMOP3</cell><cell>10</cell><cell>1.7653  *  10 + 3</cell><cell>1.7326  *  10 + 3</cell><cell>3.1063  *  10 + 2</cell><cell>6.0451  *  10 + 4</cell><cell>3.1110  *  10 + 3</cell><cell>1.1542  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(8.38  *  10 + 2) -</cell><cell>(1.46  *  10 + 3) -</cell><cell>(1.14  *  10 + 3) =</cell><cell>(9.75  *  10 + 4) -</cell><cell>(2.23  *  10 + 3) -</cell><cell>(2.18  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell>10</cell><cell>4.6498  *  10 -1</cell><cell>4.6191  *  10 -1</cell><cell>4.3003  *  10 -1</cell><cell>4.0142  *  10 -1</cell><cell>3.0767  *  10 -1</cell><cell>4.2376  *  10 -</cell></row><row><cell></cell><cell></cell><cell>(3.19  *  10 -2) -</cell><cell>(2.39  *  10 -2) -</cell><cell>(3.98  *  10 -2) =</cell><cell>(5.80  *  10 -2) +</cell><cell>(5.19  *  10 -3) +</cell><cell>(2.58  *  10 -2)</cell></row><row><cell>LSMOP5</cell><cell>10</cell><cell>3.6066  *  10 + 0</cell><cell>4.2643  *  10 + 0</cell><cell>1.9788  *  10 + 1</cell><cell>9.8579  *  10 + 1</cell><cell>1.9975  *  10 + 1</cell><cell>2.0422  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(6.91  *  10 -1) +</cell><cell>(8.94  *  10 -1) +</cell><cell>(7.16  *  10 + 0) =</cell><cell>(2.24  *  10 + 1) -</cell><cell>(2.18  *  10 + 0) =</cell><cell>(8.47  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>10</cell><cell>5.8029  *  10 + 1</cell><cell>2.3679  *  10 + 1</cell><cell>3.6991  *  10 + 3</cell><cell>5.4152  *  10 + 5</cell><cell>2.0695  *  10 + 2</cell><cell>2.6801  *  10 +</cell></row><row><cell></cell><cell></cell><cell>(2.53  *  10 + 2) +</cell><cell>(9.95  *  10 + 1) +</cell><cell>(1.65  *  10 + 4) =</cell><cell>(1.83  *  10 + 5) -</cell><cell>(2.52  *  10 + 2) +</cell><cell>(7.15  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>10</cell><cell>5.8664</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>* 10 + 2 (3.47 * 10 + 2) + 9.1153 * 10 + 2 (8.60 * 10 + 2) + 2.9298 * 10 + 4 (4.59 * 10 + 4) + 6.8757 * 10 + 5 (2.25 * 10 + 5) -5.4582 * 10 + 4 (2.50 * 10 + 4) -1.4719 * 10 + (2.51 * 10 + 4) LSMOP8 10 2.4668 * 10 + 0 (4.84 * 10 -1) + 2.6058 * 10 + 0 (5.41 * 10 -1) + 1.0922 * 10 + 1 (3.71 * 10 + 0) = 4.6696 * 10 + 1 (1.43 * 10 + 1) -1.5186 * 10 + 1 (1.25 * 10 + 0) = 1.3699 * 10 + (6.88 * 10 + 0) LSMOP9 10 6.2217 * 10 + 2 (9.37 * 10 + 1) + 1.0758 * 10 + 3 (3.21 * 10 + 2) -8.4803 * 10 + 2 (8.85 * 10 + 1) = 1.6281 * 10 + 3 (6.15 * 10 + 2) -1.0299 * 10 + 3 (5.47 * 10 + 1) -8.0231 * 10 + (8.19 * 10 + 1)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head>Table 22</head><label>22</label><figDesc>GD values for fifteen-objective LSMOP1-9 problems.</figDesc><table><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>15</cell><cell>4.7184  *  10 + 0</cell><cell>7.2509  *  10 + 0</cell><cell>4.3475  *  10 + 0</cell><cell>2.7368  *  10 + 0</cell><cell>2.4771  *  10 + 0</cell><cell>4.3850  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.77  *  10 + 0) =</cell><cell>(2.04  *  10 + 0) -</cell><cell>(6.52  *  10 -1) =</cell><cell>(1.23  *  10 + 0) +</cell><cell>(8.13  *  10 -1) +</cell><cell>(6.61  *  10 -1)</cell></row><row><cell>LSMOP2</cell><cell>15</cell><cell>4.4073  *  10 -2</cell><cell>4.3018  *  10 -2</cell><cell>5.4714  *  10 -2</cell><cell>2.1698  *  10 -2</cell><cell>1.9511  *  10 -2</cell><cell>5.3219  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(5.66  *  10 -3) +</cell><cell>(1.07  *  10 -2) +</cell><cell>(5.56  *  10 -3) =</cell><cell>(2.68  *  10 -3) +</cell><cell>(6.21  *  10 -4) +</cell><cell>(6.75  *  10 -3)</cell></row><row><cell>LSMOP3</cell><cell>15</cell><cell>6.1810  *  10 + 3</cell><cell>3.0224  *  10 + 3</cell><cell>5.7705  *  10 + 3</cell><cell>6.6723  *  10 + 3</cell><cell>5.0244  *  10 + 3</cell><cell>6.5210  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(1.84  *  10 + 3) =</cell><cell>(2.17  *  10 + 3) +</cell><cell>(1.83  *  10 + 3) =</cell><cell>(2.23  *  10 + 3) =</cell><cell>(5.74  *  10 + 2) +</cell><cell>(1.99  *  10 + 3)</cell></row><row><cell>LSMOP4</cell><cell>15</cell><cell>4.9132  *  10 -2</cell><cell>6.3669  *  10 -2</cell><cell>5.4802  *  10 -2</cell><cell>2.1304  *  10 -2</cell><cell>2.2504  *  10 -2</cell><cell>5.5951  *  10 -2</cell></row><row><cell></cell><cell></cell><cell>(4.15  *  10 -3) +</cell><cell>(7.05  *  10 -3) -</cell><cell>(5.89  *  10 -3) =</cell><cell>(1.79  *  10 -3) +</cell><cell>(5.54  *  10 -4) +</cell><cell>(4.26  *  10 -3)</cell></row><row><cell>LSMOP5</cell><cell>15</cell><cell>3.3813  *  10 + 0</cell><cell>4.6292  *  10 + 0</cell><cell>1.7990  *  10 + 1</cell><cell>1.1642  *  10 + 1</cell><cell>1.9306  *  10 + 1</cell><cell>1.6360  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(2.12  *  10 + 0) +</cell><cell>(4.82  *  10 + 0) +</cell><cell>(7.44  *  10 + 0) =</cell><cell>(1.68  *  10 + 0) =</cell><cell>(3.64  *  10 -1) =</cell><cell>(8.58  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>15</cell><cell>7.6760  *  10 + 3</cell><cell>4.0311  *  10 + 3</cell><cell>8.9515  *  10 + 4</cell><cell>8.5512  *  10 + 4</cell><cell>2.2027  *  10 + 5</cell><cell>5.9667  *  10 + 4</cell></row><row><cell></cell><cell></cell><cell>(4.22  *  10 + 3) +</cell><cell>(3.02  *  10 + 3) +</cell><cell>(7.35  *  10 + 4) =</cell><cell>(1.93  *  10 + 4) -</cell><cell>(6.88  *  10 + 3) -</cell><cell>(5.09  *  10 + 4)</cell></row><row><cell>LSMOP7</cell><cell>15</cell><cell>1.4433  *  10 + 4</cell><cell>1.1257  *  10 + 4</cell><cell>1.3944  *  10 + 5</cell><cell>7.9036  *  10 + 4</cell><cell>1.1312  *  10 + 5</cell><cell>1.2977  *  10 + 5</cell></row><row><cell></cell><cell></cell><cell>(6.71  *  10 + 3) +</cell><cell>(7.09  *  10 + 3) +</cell><cell>(4.10  *  10 + 4) =</cell><cell>(2.10  *  10 + 4) +</cell><cell>(4.47  *  10 + 3) =</cell><cell>(4.45  *  10 + 4)</cell></row><row><cell>LSMOP8</cell><cell>15</cell><cell>3.4286  *  10 + 0</cell><cell>3.0488  *  10 + 0</cell><cell>1.0960  *  10 + 1</cell><cell>5.1956  *  10 + 0</cell><cell>5.1562  *  10 + 0</cell><cell>1.0263  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.07  *  10 + 0) +</cell><cell>(8.42  *  10 -1) +</cell><cell>(2.65  *  10 + 0) =</cell><cell>(1.04  *  10 + 0) +</cell><cell>(3.06  *  10 -1) +</cell><cell>(3.09  *  10 + 0)</cell></row><row><cell>LSMOP9</cell><cell>15</cell><cell>5.5756  *  10 + 2</cell><cell>6.0029  *  10 + 2</cell><cell>7.2045  *  10 + 2</cell><cell>5.3465  *  10 + 2</cell><cell>6.5311  *  10 + 2</cell><cell>7.8648  *  10 + 2</cell></row><row><cell></cell><cell></cell><cell>(1.59  *  10 + 2) +</cell><cell>(2.00  *  10 + 2) +</cell><cell>(1.15  *  10 + 2) =</cell><cell>(1.53  *  10 + 2) +</cell><cell>(1.29  *  10 + 2) +</cell><cell>(1.69  *  10 + 2)</cell></row><row><cell>Table 23</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">IGD values for fifteen-objective LSMOP1-9 problems.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Problem</cell><cell>m</cell><cell>NSGAIII-F1</cell><cell>NSGAIII-R1</cell><cell>NSGA-III</cell><cell>PESA-II</cell><cell>g-NSGA-II</cell><cell>A-NSGA-III</cell></row><row><cell>LSMOP1</cell><cell>15</cell><cell>5.1356  *  10 + 0</cell><cell>6.8519  *  10 + 0</cell><cell>7.8843  *  10 + 0</cell><cell>1.2671  *  10 + 1</cell><cell>1.0368  *  10 + 1</cell><cell>7.9297  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(1.25  *  10 + 0) +</cell><cell>(2.40  *  10 + 0) +</cell><cell>(1.12  *  10 + 0) =</cell><cell>(7.84  *  10 + 0) -</cell><cell>(1.83  *  10 + 0) -</cell><cell>(1.17  *  10 + 0)</cell></row><row><cell>LSMOP2</cell><cell>15</cell><cell>6.1163  *  10 -1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>4.7077  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(9.59  *  10 -2) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(4.72  *  10 -2)</cell></row><row><cell>LSMOP3</cell><cell>15</cell><cell>1.2505  *  10 + 3</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>4.8361  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.85  *  10 + 3) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(2.44  *  10 + 1)</cell></row><row><cell>LSMOP4</cell><cell>15</cell><cell>5.9180  *  10 -1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>5.1238  *  10 -1</cell></row><row><cell></cell><cell></cell><cell>(4.97  *  10 -2) -</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(5.49  *  10 -2)</cell></row><row><cell>LSMOP5</cell><cell>15</cell><cell>5.0275  *  10 + 0</cell><cell>5.6520  *  10 + 0</cell><cell>1.7507  *  10 + 1</cell><cell>6.9696  *  10 + 1</cell><cell>2.6063  *  10 + 1</cell><cell>1.6095  *  10 + 1</cell></row><row><cell></cell><cell></cell><cell>(1.18  *  10 + 0) +</cell><cell>(1.96  *  10 + 0) +</cell><cell>(4.28  *  10 + 0) =</cell><cell>(1.78  *  10 + 1) -</cell><cell>(9.89  *  10 + 0) -</cell><cell>(7.88  *  10 + 0)</cell></row><row><cell>LSMOP6</cell><cell>15</cell><cell>1.8114  *  10 + 3</cell><cell>2.1854  *  10 + 3</cell><cell>9.8278  *  10 + 3</cell><cell>4.6970  *  10 + 5</cell><cell>3.1413  *  10 + 4</cell><cell>7.3088  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(9.74  *  10 + 2) +</cell><cell>(1.94  *  10 + 3) +</cell><cell>(1.03  *  10 + 4) =</cell><cell>(1.70  *  10 + 5) -</cell><cell>(1.91  *  10 + 4) -</cell><cell>(5.40  *  10 + 3)</cell></row><row><cell>LSMOP7</cell><cell>15</cell><cell>3.3043  *  10 + 2</cell><cell>6.0773  *  10 + 2</cell><cell>1.8218  *  10 + 3</cell><cell>3.4904  *  10 + 5</cell><cell>7.1224  *  10 + 2</cell><cell>1.7005  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(7.74  *  10 + 2) =</cell><cell>(1.66  *  10 + 3) =</cell><cell>(3.23  *  10 + 3) =</cell><cell>(1.41  *  10 + 5) -</cell><cell>(7.14  *  10 + 2) +</cell><cell>(5.07  *  10 + 3)</cell></row><row><cell>LSMOP8</cell><cell>15</cell><cell>1.4492  *  10 + 0</cell><cell>1.4271  *  10 + 0</cell><cell>3.6469  *  10 + 0</cell><cell>3.3099  *  10 + 1</cell><cell>1.1215  *  10 + 1</cell><cell>6.6416  *  10 + 0</cell></row><row><cell></cell><cell></cell><cell>(6.82  *  10 -1) +</cell><cell>(4.00  *  10 -1) +</cell><cell>(4.52  *  10 + 0) =</cell><cell>(1.04  *  10 + 1) -</cell><cell>(3.41  *  10 + 0) -</cell><cell>(1.50  *  10 + 1)</cell></row><row><cell>LSMOP9</cell><cell>15</cell><cell>1.6893  *  10 + 3</cell><cell>2.5161  *  10 + 3</cell><cell>2.6351  *  10 + 3</cell><cell>3.5020  *  10 + 3</cell><cell>2.5982  *  10 + 3</cell><cell>2.8390  *  10 + 3</cell></row><row><cell></cell><cell></cell><cell>(3.62  *  10 + 2) +</cell><cell>(9.56  *  10 + 2) =</cell><cell>(2.89  *  10 + 2) =</cell><cell>(6.21  *  10 + 2) -</cell><cell>(1.37  *  10 + 2) =</cell><cell>(6.63  *  10 + 2)</cell></row></table><note><p>7.1588 * 10 -1 (1.16 * 10 -1) -4.8441 * 10 -1 (5.29 * 10 -2) = 4.6228 * 10 -1 (7.62 * 10 -2) = 3.2997 * 10 -1 (7.97 * 10 -3) + 2.8837 * 10 + 3 (4.80 * 10 + 3) -4.0982 * 10 + 1 (1.87 * 10 + 1) = 2.0952 * 10 + 4 (9.60 * 10 + 3) -7.2134 * 10 + 3 (2.83 * 10 + 3) -7.9573 * 10 -1 (1.02 * 10 -1) -5.3547 * 10 -1 (6.46 * 10 -2) = 4.5556 * 10 -1 (5.22 * 10 -2) + 3.5157 * 10 -1 (1.03 * 10 -2) +</p></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was supported by the National Natural Science Foundation of China (No. 41576011, No. U1706218, No. 41706010, and No. 61503165).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>the number 4 in the table represents NSGAIII-R1 performs best on four out of nine test instances with GD as a performance indicator and the last line counts the total number of times each algorithm performs best. According to the last row of Table <ref type="table">13</ref>, we can see that the NSGAIII-F1 algorithm performed best 28 times, the NSGAIII-R1 algorithm performed best 22 times, and the original NSGA-III algorithm performed best 21 times. The data also suggest that IFMs can indeed improve the performance of the original NSGA-III algorithm, and the two best models of the six models are M-F1 and M-R1. Next, we will compare NSGAIII-F1 and NSGAIII-R1 with other state-of-the-art algorithms to further study M-F1 and M-R1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Comparison between the two best IFM-NSGAIIII algorithms and other state-of-the-art algorithms</head><p>In this subsection, in order to test whether the IFMs are competitive in solving many-objective optimization problems, we will compare the two best IFM-NSGAIII algorithms (NSGAIII-F1/R1) with four state-of-the-art algorithms (NSGA-III <ref type="bibr" target="#b37">[38]</ref>, g-NSGA-II <ref type="bibr" target="#b46">[47]</ref>, A-NSGA-III <ref type="bibr" target="#b59">[60]</ref>, PESA-II <ref type="bibr" target="#b77">[78]</ref>) on 9 analytical benchmark test functions (LSMOP1-9 <ref type="bibr" target="#b64">[65]</ref>). A new dominance relation, g-dominance, was proposed in g-NSGA-II <ref type="bibr" target="#b46">[47]</ref> and then the gdominance was combined with NSGA-II algorithm to deal with</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Declaration of competing interest</head><p>The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The Behavior of Adaptive Systems Which Employ Genetic and Correlation Algorithms</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Bagley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Optimization by simulated annealing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Gelatt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Vecchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">220</biblScope>
			<biblScope unit="issue">4598</biblScope>
			<biblScope unit="page" from="671" to="680" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Particle swarm optimization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Eberhart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Neural Networks</title>
		<meeting>the IEEE International Conference on Neural Networks</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="1942" to="1948" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Distributed optimization by ant colonies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Colorni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maniezzo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First European Conference on Artificial Life</title>
		<meeting>the First European Conference on Artificial Life</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="134" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Differential Evolution-a Simple and Efficient Adaptive Scheme for Global Optimization over Continuous Spaces</title>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Price</surname></persName>
		</author>
		<idno>TR-95-012</idno>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>International Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Muiltiobjective optimization using nondominated sorting in genetic algorithms</title>
		<author>
			<persName><forename type="first">N</forename><surname>Srinivas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="221" to="248" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A fast and elitist multiobjective genetic algorithm: NSGA-II</title>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pratap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Meyarivan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="182" to="197" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">MOEA/D: a multiobjective evolutionary algorithm based on decomposition</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="712" to="731" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An effective discrete invasive weed optimization algorithm for lot-streaming flowshop scheduling problems</title>
		<author>
			<persName><forename type="first">H.-Y</forename><surname>Sang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q.-K</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-Y</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-Q</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Intell. Manuf</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1337" to="1349" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Cryptanalysis of a chaotic image encryption scheme based on permutation-diffusion structure, Signal Process</title>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Image Commun</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="164" to="172" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Cryptanalysis of a colour image encryption using chaotic APFM nonlinear adaptive filter, Signal Process</title>
		<author>
			<persName><forename type="first">H</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="volume">143</biblScope>
			<biblScope unit="page" from="28" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Compressive sensing via nonlocal low-rank regularization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Image Process</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="3618" to="3632" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Feature selection algorithm based on bare bones particle swarm optimization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">148</biblScope>
			<biblScope unit="page" from="150" to="157" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A return-cost-based binary firefly algorithm for feature selection</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-F</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D.-W</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="page" from="561" to="574" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Predicting remaining useful life of rolling bearings based on deep feature representation and long short-term memory neural network</title>
		<author>
			<persName><forename type="first">W</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Mech. Eng</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">12</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Facial-feature detection and localization based on a hierarchical scheme</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-M</forename><surname>Lam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Sci</title>
		<imprint>
			<biblScope unit="volume">262</biblScope>
			<biblScope unit="page" from="1" to="14" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Three-dimensional path planning for UCAV using an improved bat algorithm</title>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">E</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mirjalili</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Aerosp. Sci. Technol</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="231" to="238" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note>in English</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Path planning for uninhabited combat aerial vehicle using hybrid meta-heuristic DE/BBO algorithm</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Sci. Eng. Med</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="550" to="564" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Illumination-insensitive texture discrimination based on illumination compensation and enhancement</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-M</forename><surname>Lam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Sci</title>
		<imprint>
			<biblScope unit="volume">269</biblScope>
			<biblScope unit="page" from="60" to="72" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The model and algorithm for the target threat assessment based on Elman_AdaBoost strong predictor</title>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Electron. Sin</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="901" to="906" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Visual-patch-attention-aware saliency detection</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Lam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Cybern</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1575" to="1586" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Self-adaptive extreme learning machine</title>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-Q</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-J</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="291" to="303" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Uncertainty evaluation and model selection of extreme learning machine based on Riemannian metric</title>
		<author>
			<persName><forename type="first">W</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Mu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">7-8</biblScope>
			<biblScope unit="page" from="1613" to="1625" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Level set evolution with sparsity constraint for object extraction</title>
		<author>
			<persName><forename type="first">G</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Image Process</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1413" to="1422" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Gesture segmentation based on a two-phase estimation of distribution algorithm</title>
		<author>
			<persName><forename type="first">K</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">394</biblScope>
			<biblScope unit="issue">395</biblScope>
			<biblScope unit="page" from="88" to="105" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Economic load dispatch using memory based differential evolution</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P</forename><surname>Parouha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">N</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Bio-Inspired Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="159" to="170" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A novel parallel hurricane optimization algorithm for secure emission/economic load dispatch solution</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Rizk-Allah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>El-Sehiemy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="206" to="222" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A novel fruit fly framework for multi-objective shape design of tubular linear synchronous motor</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Rizk-Allah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>El-Sehiemy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Supercomput</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1235" to="1256" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Meta-heuristic framework: quantum inspired binary grey wolf optimizer for unit commitment problem</title>
		<author>
			<persName><forename type="first">K</forename><surname>Srikanth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">K</forename><surname>Panwar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">K</forename><surname>Panigrahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Herrera-Viedma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Sangaiah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Electr. Eng</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="243" to="260" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">An adaptive large neighborhood search heuristic for dynamic vehicle routing problems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Sangaiah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Electr. Eng</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Binary moth search algorithm for discounted {0 -1} knapsack problem</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="10708" to="10719" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Solving randomized time-varying knapsack problems by a novel global firefly algorithm</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Comput.-Ger</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="621" to="635" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An elite opposition-flower pollination algorithm for a 0-1 knapsack problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Abdel-Basset</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Bio-Inspired Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="46" to="53" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Improved probabilistic neural networks with self-adaptive strategies for transformer fault diagnosis problem</title>
		<author>
			<persName><forename type="first">J.-H</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Mech. Eng</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="13" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Bearing fault diagnosis with auto-encoder extreme learning machine: A comparative study</title>
		<author>
			<persName><forename type="first">W</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Inst. Mech. Eng. Part C: J. Mech. Eng. Sci</title>
		<imprint>
			<biblScope unit="volume">231</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1560" to="1578" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A novel deep output kernel learning method for bearing fault structural diagnosis</title>
		<author>
			<persName><forename type="first">W</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mech. Syst. Signal Process</title>
		<imprint>
			<biblScope unit="volume">117</biblScope>
			<biblScope unit="page" from="293" to="318" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Test-sheet composition using analytic hierarchy process and hybrid metaheuristic algorithm TS/BBO</title>
		<author>
			<persName><forename type="first">H</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Probl. Eng</title>
		<imprint>
			<biblScope unit="page" from="1" to="22" />
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An evolutionary many-objective optimization algorithm using reference-point-based nondominated sorting approach, part I: solving problems with box constraints</title>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="577" to="601" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">MOEA/D + uniform design: A new version of MOEA/d for optimization problems with many objectives</title>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Y.-Y. Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1648" to="1660" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Migration NSGA: method to improve a non-elitist searching of pareto front, with application in magnetics</title>
		<author>
			<persName><forename type="first">E</forename><surname>Sieni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Di</forename><surname>Barba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Forzan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inverse Probl. Sci. Eng</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="543" to="566" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Self-adaptive migration NSGA and optimal design of inductors for magneto-fluid hyperthermia</title>
		<author>
			<persName><forename type="first">E</forename><surname>Sieni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Di</forename><surname>Barba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dughiero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Forzan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Comput</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1727" to="1746" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Improving metaheuristic algorithms with information feedback models</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Cybern</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="542" to="555" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Multiple objective optimization with vector evaluated genetic algorithms</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Schaffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First International Conference on Genetic Algorithms and their Applications</title>
		<meeting>the First International Conference on Genetic Algorithms and their Applications<address><addrLine>Pittsburg, PA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1985">1985</date>
		</imprint>
		<respStmt>
			<orgName>Carnegie-Mellon University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Goldberg</surname></persName>
		</author>
		<title level="m">Genetic Algorithms in Search, Optimization and Machine Learning</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley Publishing Company, Inc</publisher>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A niched Pareto genetic algorithm for multiobjective optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Nafpliotis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First IEEE Conference on Evolutionary Computation (CEC 1994)</title>
		<meeting>the First IEEE Conference on Evolutionary Computation (CEC 1994)<address><addrLine>Orlando, Florida, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="82" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">The niched Pareto genetic algorithm 2 applied to the design of groundwater remediation systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Erickson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mayer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Horn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Evolutionary Multi-Criterion Optimization</title>
		<meeting><address><addrLine>Zurich, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="681" to="695" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">G-dominance: Reference point based dominance for multiobjective metaheuristics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Molina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Santana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">G</forename><surname>Hernández-Díaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Coello Coello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Caballero</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">197</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="685" to="692" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Improving NSGA-II for solving multi objective function optimization problems</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">L</forename><surname>Vachhani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">K</forename><surname>Dabhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Prajapati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 International Conference on Computer Communication and Informatics (ICCCI 2016)</title>
		<meeting><address><addrLine>Coimbatore; India</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<author>
			<persName><forename type="first">Y</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MOEA/D with adaptive weight adjustment</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="231" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">An improved MOEA/D algorithm for bi-objective optimization problems with complex pareto fronts and its application to structural optimization</title>
		<author>
			<persName><forename type="first">V</forename><surname>Ho-Huu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hartjes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">G</forename><surname>Visser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Curran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Syst. Appl</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="page" from="430" to="446" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">High performance computing for cyber physical social systems by using evolutionary multi-objective optimization algorithm</title>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Min</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Emerg. Top. Comput</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Ensemble predictionbased dynamic robust multi-objective optimization methods</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Swarm Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="156" to="171" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">An improved NSGA-III algorithm with adaptive mutation operator for big data optimization problems</title>
		<author>
			<persName><forename type="first">J.-H</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Alavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Gener. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="571" to="585" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Evaluating the ε-domination based multiobjective evolutionary algorithm for a quick computation of pareto-optimal solutions</title>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mohan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mishra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="501" to="525" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Fuzzy-pareto-dominance and its application in evolutionary multi-objective optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Köppen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vicente-Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Nickolay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Evolutionary Multi-Criterion Optimization (EMO 2005)</title>
		<meeting><address><addrLine>Guanajuato, Mexico</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="399" to="412" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">A fuzzy definition of optimality for many-criteria optimization problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Farina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Amato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst. Man, Cybern. A Syst. Hum</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="315" to="326" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">FP-ABC: Fuzzy-pareto dominance driven artificial bee colony algorithm for many-objective software module clustering</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Amarjeet</surname></persName>
		</author>
		<author>
			<persName><surname>Chhabra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Lang. Syst. Str</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="1" to="21" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">A new dominance relation-based evolutionary algorithm for many-objective optimization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="16" to="37" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">A grid-based evolutionary algorithm for many-objective optimization</title>
		<author>
			<persName><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="721" to="736" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">An evolutionary many-objective optimization algorithm using reference-point based nondominated sorting approach, part II: handling constraints and extending to an adaptive approach</title>
		<author>
			<persName><forename type="first">H</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="602" to="622" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">An angle based constrained many-objective evolutionary algorithm</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Intell</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="705" to="720" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Evolutionary algorithms with preference polyhedron for interval multi-objective optimization problems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Ji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Sci</title>
		<imprint>
			<biblScope unit="volume">233</biblScope>
			<biblScope unit="page" from="141" to="161" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">A set-based genetic algorithm for interval manyobjective optimization problems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Miao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evolut. Comput</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="60" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<title level="m" type="main">Interval multi-objective optimization with memetic algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-J</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-G</forename><surname>Wang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
			<publisher>IEEE Trans. Cybern</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Test problems for large-scale multiobjective and many-objective optimization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Olhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sendhoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Cybern</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="4108" to="4121" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A decision variable clustering-based evolutionary algorithm for large-scale many-objective optimization</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="97" to="112" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Self-adaptive multi-objective evolutionary algorithm based on decomposition for large-scale problems: A case study on reservoir flood control operation</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Sci</title>
		<imprint>
			<biblScope unit="volume">367</biblScope>
			<biblScope unit="issue">368</biblScope>
			<biblScope unit="page" from="529" to="549" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Weighted optimization framework for large-scale multi-objective optimization</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ishibuchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mostaghim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Nojima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 on Genetic and Evolutionary Computation Conference Companion (GECCO 2016)</title>
		<meeting>the 2016 on Genetic and Evolutionary Computation Conference Companion (GECCO 2016)<address><addrLine>Denver, Colorado, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="83" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">SMPSO: A new PSO-based metaheuristic for multi-objective optimization</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Nebro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Durillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Garcia-Nieto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Coello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Luna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Alba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Computational Intelligence in Multi-Criteria Decision-Making</title>
		<meeting><address><addrLine>Nashville, TN, USA</addrLine></address></meeting>
		<imprint>
			<publisher>MCDM</publisher>
			<date type="published" when="2009">2009. 2009. 2009</date>
			<biblScope unit="page" from="66" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Improved NSGA-III with selection-and-elimination operator</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Swarm Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="23" to="33" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Objective reduction in many-objective optimization: Evolutionary multiobjective approaches and comprehensive analysis</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">S</forename><surname>Ong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="189" to="210" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Normal-boundary intersection: A new method for generating the pareto surface in nonlinear multicriteria optimization problems</title>
		<author>
			<persName><forename type="first">I</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Dennis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM. J. Optim</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="631" to="657" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Consistencies and contradictions of performance metrics in multiobjective optimization</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-S</forename><surname>Ong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Cybern</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2391" to="2404" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Generational distance indicator-based evolutionary algorithm with an improved niching method for many-objective optimization problems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="63881" to="63891" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">GDE-MOEA: a new moea based on the generational distance indicator and ε-dominance</title>
		<author>
			<persName><forename type="first">A</forename><surname>Menchaca-Mendez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A C</forename><surname>Coello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE Congress on Evolutionary Computation (CEC 2015)</title>
		<meeting><address><addrLine>Sendai, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="947" to="955" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">A multi-objective evolutionary algorithm based on an enhanced inverted generational distance metric</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE Congress on Evolutionary Computation (CEC 2016)</title>
		<meeting><address><addrLine>Vancouver, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="5222" to="5229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Reference point specification in inverted generational distance for triangular linear Pareto front</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishibuchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Imada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Setoguchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Nojima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="961" to="975" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">PESA-II: Region-based selection in evolutionary multiobjective optimization</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Corne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Jerram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Knowles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Oates</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd Annual Conference on Genetic and Evolutionary Computation</title>
		<meeting>the 3rd Annual Conference on Genetic and Evolutionary Computation<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="283" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<monogr>
		<title level="m" type="main">she successfully obtained a bachelor&apos;s degree from Ocean University of China, and continued her graduate study at Ocean University of China. Her major is computer technology. Her main research direction is multi-and many-objective optimization evolution</title>
		<author>
			<persName><forename type="first">Zi-Min</forename><surname>Gu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998-06">1998. June 2018</date>
			<pubPlace>Sichuan Province, China</pubPlace>
		</imprint>
	</monogr>
	<note>She successfully entered Ocean University of China in 2014 and majored in computer science and technology</note>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Thirteen and thirty-nine papers are selected as Highly Cited Paper by Web of Science, and Scopus (till November 2019), respectively. One paper is selected as &apos;&apos;Top Articles from Outstanding S&amp;T Journals of China-F5000 Frontrunner&apos;&apos;. The latest Google h-index and i10-index are 40 and 78, respectively. He is senior member of SAISE, SCIEI, a member of IEEE, IEEE CIS, ISMOST. He served as Editors-in-Chief of OAJRC Computer and Communications</title>
		<author>
			<persName><forename type="first">Gai-Ge</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Editorial Advisory Board Member of Communications in Computational and Applied Mathematics (CCAM), Associate Editor of IJCISIM an Editorial Board Member of IEEE Access, Mathematics, IJBIC</title>
		<meeting><address><addrLine>China</addrLine></address></meeting>
		<imprint>
			<publisher>He served as Guest Editor for many journals including Mathematics, IJBIC , FGCS, Memetic Computing and Operational Research</publisher>
		</imprint>
		<respStmt>
			<orgName>Ocean University of China</orgName>
		</respStmt>
	</monogr>
	<note>His entire publications have been cited over 5000 times (Google Scholar). His research interests are swarm intelligence, evolutionary computation, and big data optimization</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
