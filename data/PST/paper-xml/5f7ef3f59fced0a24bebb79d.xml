<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">I Know If the Journey Changes: Flexible Source and Path Validation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Fan</forename><surname>Yang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ke</forename><surname>Xu</surname></persName>
							<email>xuke@tsinghua.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">BNRist</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="laboratory">Peng Cheng Laboratory (PCL)</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Qi</forename><surname>Li</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">BNRist</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Institute for Network Sciences and Cyberspace</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rongxing</forename><surname>Lu</surname></persName>
							<affiliation key="aff4">
								<orgName type="department">Faculty of Computer Science</orgName>
								<orgName type="institution">University of New Brunswick</orgName>
								<address>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="department">College of Computer Science and Technology</orgName>
								<orgName type="institution">Nanjing University of Aeronautics and Astronautics</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Bo</forename><surname>Wu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tong</forename><surname>Zhang</surname></persName>
							<email>zhangt@nuaa.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yi</forename><surname>Zhao</surname></persName>
							<email>zhaoyi16@mails.tsinghua.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Meng</forename><surname>Shen</surname></persName>
							<email>shenmeng@bit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Technology</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="laboratory">Peng Cheng Laboratory (PCL)</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">I Know If the Journey Changes: Flexible Source and Path Validation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>source and path validation</term>
					<term>PSVM</term>
					<term>dynamic verification</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>No matter from the perspective of detection or defense, source and path validations are fundamentally primitive in constructing security mechanisms to greatly enhance network immunity in the face of malicious attacks, such as injection, traffic hijacking and hidden threats. However, existing works for source and path verification still impose a non-trivial operational overhead and lack adjustment capability for path dynamic changes. In this paper, we propose a flexible and convenient source and path validation protocol called PSVM, which uses an authentication structure PIC composed of ordered pieces to carry out packet verification. Specifically, in the basic PSVM protocol, PIC (related to cryptographic computation) in the packet header does not require any update during packet verification, which thus enables a lower processing overhead in routers. To cope with the challenge of path policy changes in the running protocol, the dynamic PSVM protocol supports controllable adjustment and migration, especially in the case of avoiding a malicious node or region. Our evaluation of a prototype experiment on Click demonstrates that the verification efficiency of PSVM is barely influenced by payload size or path length. Compared to the baseline of normal IP routing, the throughput reduction ratio of the basic PSVM is about 13%, which is much better than 28% of existing best solution Origin and Path Trace (OPT). In addition, for a 35-hop path with 30 pieces of PIC needed to be adjusted in dynamic PSVM, the throughput reduction ratio of routing cross node performing the adjustment operation after normal verification is only 2.4%.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>It is inevitable that current networks are so popular that we cannot image our today's lives without them <ref type="bibr" target="#b0">[1]</ref>. Nevertheless, it is still very challenging to make sure a given policy has been properly implemented in current networks, even for some basic path policies. In particular, since network users cannot confirm the source authenticity of data, and network operators also cannot guarantee that the user packets are not detoured in transmission, numerous network attack surfaces are opened up today <ref type="bibr" target="#b1">[2]</ref>- <ref type="bibr" target="#b3">[4]</ref>. For example, an attacker may try to flood arbitrary packets from multiple spoofed sources to waste downstream resources. Traffic hijacking happens frequently <ref type="bibr" target="#b4">[5]</ref> where packets may go through an eavesdropping node, resulting in a potential leakage of sensitive information <ref type="bibr" target="#b5">[6]</ref>. It is easy to tamper packet contents on the path and insert other loads such as malicious code.</p><p>Although a great deal of attention has been paid to source authentication <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, the verification of a packet's actual path has been neglected by comparison. Some existing approaches for IP path tracking fail to solve the above problems, being unable to identify path deviation <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref>. Recently, there are several proposals addressing both source and path validation that fill the void, such as ICING <ref type="bibr" target="#b2">[3]</ref> and OPT <ref type="bibr" target="#b1">[2]</ref>. However, for the targeting environment which is adversarial, high-speed, and variable-path, their protocols still have significant processing overhead, and do not support the adaptive adjustment of routing node verification when the path policy changes.</p><p>In this paper, we design a new protocol for source and path validation, termed PSVM (Piece Split Validation Mechanism), which aims to confirm whether packets have been forwarded correctly in the data plane according to intended path policies. We engineer a flexible authentication structure called PIC, which translates the intended path policies (including the source) into a check set consisting of ordered path information pieces, instead of a whole value as usual. PSVM embeds PIC into the packet header as a validation standard before the session starts, and minimizes operations on PIC in nodes, which can significantly reduce packet processing latency and optimize communication cost. More importantly, by replacing PIC pieces, PSVM can support dynamic validation of actual packet transmission. Our contributions are three-fold:</p><p>• We introduce a basic PSVM protocol (in Section II-C). It does not update any PIC pieces in packet headers during packet verification, which enables a low overhead of processing in routers. This superiority is decisive because it only performs complex computation once, while the existing best-practice OPT still needs to do that twice. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PSVM BASIC DESIGN</head><p>In this section, we first introduce PSVM architecture, and then present the basic idea of PSVM validation and show its protocol design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. PSVM Architecture</head><p>PSVM is a validation protocol committed to providing capability to verify source authenticity and consistency of data plane forwarding and control plane path policies. To support the protocol, we employ PSVM architecture that separates general service functions from routing nodes, and its design is inspired by <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b11">[12]</ref>, some of which were actually used. Fig. <ref type="figure" target="#fig_0">1</ref> shows PSVM architecture, where a guarantee for the control plane path policies can be implemented by the provider's trusted agent, which is called Credible Guarantee Agent (CGA).</p><p>In PSVM architecture, CGAs interact with different nodes through PSVM protocol packets, e.g., responding to a node's request or error report. Each CGA manages some nodes. The master key of a node (Key N i ) is only shared between the node (N i) and its corresponding CGA. Then, CGA is able to derive a session symmetric key (Key Session N i</p><p>) from the node's master key (without seeking help from node N i) <ref type="bibr" target="#b12">[13]</ref> to calculate the authentication structure for source and path validation, which is treated as a path policy certificate. In particular, different providers may build one or more CGAs according to their needs, and CGA's service capability may be a virtual function module backed up or migrated on multiple CGAs, which enables the architecture with better availability and robustness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Assumptions</head><p>We aim to achieve real-time session packet verification for data plane forwarding. We assume that existing secure routing protocols can enable end-nodes to learn the AS-or router-level intended path that packets will traverse. There are many ways that end-nodes (i.e.,the sender and receiver) could know path information, such as network topology analysis <ref type="bibr" target="#b13">[14]</ref>, obtained from some BGP related protocols <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref>, or employing the existing control plane routing protocols <ref type="bibr" target="#b12">[13]</ref> (especially Pathlet <ref type="bibr" target="#b16">[17]</ref> or SCION <ref type="bibr" target="#b17">[18]</ref> where the path is assigned by end-nodes).</p><p>Moreover, we assume that each node would use the selfcertifying system (e.g., IDs as public keys) to sign the generated PSVM protocol packets containing requests, responses, and error reports according to security requirements. This paper temporarily does not discuss the loss of protocol packets, which may have a higher priority or be dispatched for multi-times and in multi-ways in practice to ensure a greater probability of being received. Furthermore, we suppose that node N i and its CGA would use secret methods (such as Diffie-Hellman <ref type="bibr" target="#b18">[19]</ref>) to share the master key (Key N i ), which may be replaced if necessary to prevent cryptanalysis attacks. The session symmetric key of N i (Key Session N i</p><p>) can be derived through pseudo-random operation functions <ref type="bibr" target="#b12">[13]</ref> by N i and its CGA, respectively, without long-term storage or re-exchange. Finally, we assume all the nodes in a session are loosely time synchronized (e.g., using NTP).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Basic PSVM Protocol</head><p>Compared to general source and path authentication protocols dealing with intended path information as a whole and lacking flexibility, we develop a piece by piece authentication structure called PIC, which divides the intended path information representing forwarding policies into a number of sequential pieces and each piece named as Pic logically expresses an directed adjacent relationship of two nodes. Session initialization. (1) Requesting PIC structure. The sender needs to apply for a PIC structure of the session by submitting essential materials (including the intended path information and session time limit T D L , etc.) to the relevant CGAs. After confirming the legitimacy of application, CGAs generate the Pics of PIC separately with the routing nodes' session keys and reply to the sender. Since all Pics are returned with a higher transmission priority, if the Pic belonging to a CGA has not arrived on time after a number of requests, the sender could request a CGA backup service for the piece to complete the corresponding Pic application.</p><p>(2) Session notification. CGAs will push tailored session notices N otice N i (computed by Formula ( <ref type="formula" target="#formula_0">1</ref>)) to each node on the path, which reminds the intended node of the session for subsequent verification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>N otice</head><formula xml:id="formula_0">N i = Enc Key SN N i (SessionN um S D T D L i), Sign SK CGA (N otice N i )<label>(1)</label></formula><p>(3) PSVM packet creation. The sender configures session packets with a PSVM header (as shown in Fig. <ref type="figure" target="#fig_2">2</ref>), and delivers them to the next hop.   <ref type="formula" target="#formula_1">2</ref>)).</p><formula xml:id="formula_1">P ic i = Enc Key SN N i (N i−1 , N i+1 ) P ic D = Enc Key SN D (D − 1, S, Key SN S )<label>(2)</label></formula><p>• H(P ) Key SN S : This is the hash of the packet's payload using the session key Key SN S of S.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Session validation.</head><p>(1) Intermediate node validation. When receiving a packet, an intermediate node N i first checks its notice list to prevent unauthorized packets from being passed. For efficient verification, N i only verifies its own P ic i in the packet header, and the validation process (shown as Algorithm 1) does not need to update P ic i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Intermediate Node Validation Pseudocode</head><p>Require: N i maintains a list of session N otice N i in real time, which adds the received ones and removes the expired ones.  Drop the packet 14:</p><p>Compute H(P ) </p><formula xml:id="formula_2">Key</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. REFINEMENT TO BASIC PSVM</head><p>In this section, we further introduce an improvement to basic PSVM called dynamic PSVM, and more detailed design of the improvement can be found in <ref type="bibr">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Dynamic PSVM</head><p>In order to execute real-time verification, existing source and path validation protocols embed the known test standard representing path policies in the packet in advance. Unfortunately, existing protocols do not take the factor of path policy changes into account, let alone that their test standard weave the path policy as a whole into a complex structure (e.g., an encrypted nested structure), which has a large cost of temporary modification. We further propose a dynamic validation method based on our flexible PIC structure to help basic PSVM overcome the above difficulties. As our PSVM is concerned with forwarding verification and is orthogonal to the problem of routing policy selection or even network failure recovery, dynamic PSVM is performed after the network environment is rebuilt. And we mostly assume that the sender is now ready for a candidate intended path.</p><p>Asking for new PIC. The sender S will request new Pics of PIC structure from CGAs in the same way as basic PSVM (Stage 1 in Fig. <ref type="figure" target="#fig_4">3</ref>), but CGAs will reply both S and the first cross node of the old and new paths, which is N 2 in stage 2 or may be before N 2 in practice. The location of cross-node may have a slight impact on cost-effectiveness of dynamic PSVM. Together, CGAs will notify useless nodes on the old path to cancel the session and inform all nodes on the new intended path to add or update the session through N otice N i . Dynamic verification. S launches the rest of session packets carrying new Pics in the PSVM header to the next hop. In addition to the check of previous hop information, N 2 also needs to detect whether the intended next hop is N 3 or N n in P ic 2 of currently arriving session packets. If it is N 3 , representing that the packet takes old Pics and has been away from S before the dynamic change, N 2 will replace the old PSVM header into the new one and continue to send it to the normal downstream. Once there is N n , N 2 will stop replacing, which means Pics in the packet header is already new and the adjustment process has been completed at the moment in stage 5 . It is worth considering that in the case of network topology having no change but avoiding a malicious node or region, dynamic PSVM is more affordable and flexible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. SECURITY ANALYSIS</head><p>This section discusses how our PSVM guards against a computation-limited attacker that may compromise the routing node at different stages of data transmission. Malicious forwarding. If an attacker wants to redirect packets to any honest node N j that is not on (or on) the intended path, it cannot create a legal P ic j without the session key of N j , and cannot pass the validation of N j . Modification of source address or payload. If a malicious node changes the source address, the destination D cannot verify P ic D correctly which is encoded with the claimed source information and is frozen without the session key of D. Similarly, the destination D will be aware whether the payload is replaced when comparing the hash field H(P ) Key SN S . Injection &amp; Cloning attacks. Without the session keys, the malicious node can only inject packets of a valid session to the next hop on the session path, and can only inject packets with the same header and payload as the normal packets seen before. Then such injection or cloning could be mitigated by the session time limit T D L in PSVM. Hidden threat. In PSVM, as long as the hidden node involves in the forwarding process, it will be found by the honest next hop using above approaches. It does not matter whether the packet contains the hidden node's mark. Availability attack. When dealing with requests, CGA may be attacked by usability. A CGA victim can quickly migrate its capability to other reliable agents of providers. If there is a potential leak of session keys, the victim node is convenient to re-derive a session key, which just releases a replacing messages to the corresponding CGA instead of exchanging the session key itself. Collusion. It is a conventional case that a malicious node cooperates with another node by sharing their session keys and may try to skip the honest nodes between them, or even redirect the packet to any other nodes outside the intended path. As long as the packet passes through an honest node during the delivery process, it cannot complete the PSVM legitimate validation of the honest node. Secondly, the skipped normal nodes will send the corresponding error report if no session packet is received within the session time limit.</p><p>In PSVM architecture, if a CGA is compromised to do bad things, such as revealing the session key, sending the notice or generating the Pics for the attacker. Based on the error reports, the destination can find: 1) some nodes on the intended path do not receive session packets, or 2) some nodes not on the intended session path are receiving session packets, which could help to discover potential troubles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. IMPLEMENTATION &amp; EVALUATION</head><p>We implement the prototype source and routing node of PSVM on a terminal computer and a modular software router Click <ref type="bibr" target="#b10">[11]</ref>, respectively. The source node system has one Intel(R) Core(TM) i5-4200u 1.60 GHz CPU, 4.0 GB memory and NIC 1000 Mbps. The routing node system has one Intel(R) Core(TM) i5-5200u 2.20 GHz CPU, 12.0 GB memory and employs a NIC with a maximum rate of 1000 Mbps. We conduct evaluations of our PSVM on a real testbed built upon the prototype using the normal IP routing performance of the Click router as the baseline, and compare our PSVM with the-state-of-the-art OPT <ref type="bibr" target="#b1">[2]</ref>.  Method and parameter setup. For fairness, we use the same 128-bit AES algorithm to compute the PSVM's authentication structure Pic and OPT's validation structure MAC, which can reach the throughput of 48 Gbps in the hardware implementation technology <ref type="bibr" target="#b19">[21]</ref> and will not become a bottleneck of router forwarding. Moreover, we adopt the SHA-3 based 256-bit HMAC algorithm to generate hash strings of packet payload hash (which is truncated to a 128-bit value in packet header). Since either our PSVM or OPT needs to derive the session symmetric key, which is cached once calculated, we prefer to take the key from cache when doing this part. When the source sends packets to the routing node, we choose different path lengths, packet or payload sizes, the amount of modified  Pics and other parameters to estimate PSVM and OPT in time and space overhead (see Table <ref type="table" target="#tab_3">I</ref>).</p><p>The source and CGA overhead. For cost measurement of CGA's generation of Pics and Pics insertion at source, we change the path length (according to combination 1 in Table <ref type="table" target="#tab_3">I</ref>), count the total processing time repeatedly, and fit the functions of path length and processing time in Table <ref type="table" target="#tab_4">II</ref> by using the least squares linear regression where R 2 &gt; 0.99. As shown in Table <ref type="table" target="#tab_4">II</ref>, the cost of Pics calculation would increase by about 0.88 µs per hop and the generation rate of the PIC structure for a 15-hop path is approximately 74.2K Pics/s. The routing node throughput in basic PSVM. We investigate the throughput performance (according to parameters of combination 2 in Table <ref type="table" target="#tab_3">I</ref>), and compute the throughput reduction ratio of basic PSVM and OPT using the baseline throughput. For IP path with the average length of 13.11 hops, it will be no more than 630B which is shared by the entire session.</p><p>For storage overhead, PSVM only store one master key for a long time to serve the derivation of session keys. Furthermore, we select a sample trace of CAIDA <ref type="bibr" target="#b20">[22]</ref> to translate the cost of storing the notice list on a routing node in PSVM. The sample trace shows that the total number of application flows observed is 12.90463K on average at one time in a routing node. When a session notice is calculated in 32B, the total size of the notice list for all application flows stored at the same time will not exceed 0.42MB, which consumes little compared to today's SRAM capabilities <ref type="bibr" target="#b21">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. DISCUSSION</head><p>Compatibility. As an extension of a common routing protocol, PSVM can act in conjunction with routing protocols (e.g., BGP, OSPF, or Pathlet). PSVM can accommodate IPv4 and IPv6 address format transmission. In IPv4, we recommend using a method of embedding Pics with random probability to simplify basic PSVM, where the PSVM header can be placed in the optional field of IPv4 headspace. The SDN scenario. For PSVM deployment, the SDN network is a natural environment reflected in the following two aspects: 1) The controller of SDN can bear the function of CGAs. 2) We suggest that a PSVM header in SDN only keeps necessary information as the protocol identifier, and Index and Pics can be merged into the session notice. In addition to storing the original notice information, the routing node also needs to store its Pic. As shown in a sample trace of CAIDA <ref type="bibr" target="#b20">[22]</ref> (in Section V), with 16 B Pic and 1 B Index, fitting the critical verification information of all application flows would need less than 0.22 MB. Yet, the PSVM overhead in an SDN packet is only 21 B, which is a very exciting result.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: The PSVM Architecture and Basic Workflow Overview.</figDesc><graphic url="image-1.png" coords="2,334.69,50.54,205.62,104.42" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>•</head><label></label><figDesc>SN : Hash of source S, destination D, session time limit in D (T D L ), and session symmetric key of S (Key SN S ), denoted as H(S D T D L Key SN S );</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: PSVM Header. The value in parenthesis is the size of the field.</figDesc><graphic url="image-2.png" coords="3,76.82,50.54,195.35,77.87" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>( 2 )←</head><label>2</label><figDesc>Destination validation. If the packet has not been dropped halfway until reaching D and the check of D − 1' has succeeded, D is assured that the packet's actual path is already bounded to the intended one in the light of property of Pics. Then, the conformance test of S in packet header and S in P ic D is a helper to confirm the claimed S matches the expected S (shown as Algorithm 2). Finally, because the value in H(P ) Key SN S field as a mark is calculated by S using the secret Key SN S , the correct result of re-calculating the actual hash of the packet's payload by Key SN S in P ic D proves the packet payload is integrated, and re-tells that the packet is indeed originated from the expected S. Algorithm 2 Destination Validation Pseudocode 1: function VALIDATION BY DESTINATION D 2: SN ' ← The SessionN um in packet header 3: T D L ' ← The T D L in packet header 4: Fast look up SN ' in the list by T D L ' as a pointer 5: if look up SN ' unsuccessfully then 6: Drop the packet 7: D-1' ← Collect the actual entry 8: S' ← The source in packet header 9: H(P ) Key SN S The field value in packet header 10: Compute P ic D =Dec Key SN D (D − 1, S, Key SN S ) 11: if (decode P ic D unsuccessfully) or 12: (D − 1 = D − 1) then 13:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 3 :</head><label>3</label><figDesc>Fig. 3: The dynamic PSVM workflow overview.</figDesc><graphic url="image-3.png" coords="4,71.68,50.54,205.62,89.91" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>2020 IEEE/ACM 28th International Symposium on Quality of Service (IWQoS) Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 08:26:42 UTC from IEEE Xplore. Restrictions apply.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>(a) 4 - 2 Fig. 4 :</head><label>424</label><figDesc>Fig. 4: The Average Throughput of Baseline, OPT, and all the Protocols of PSVM in the Routing Node. W2 is the amount of modified Pics in the dynamic PSVM.</figDesc><graphic url="image-4.png" coords="5,53.34,50.54,121.11,84.66" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 (</head><label>4</label><figDesc>a) to (c) reveal that: 1) the throughput of basic PSVM outperforms that of OPT at different path lengths. The maximum throughput of basic PSVM is about 823 Mbit/s in 10-hop path, by comparison, the maximum throughput of OPT is about 675 Mbit/s. This result is mainly caused by performing twice complex calculation for each packet in OPT (more than PSVM). 2) despite the path length (or payload size) changes, the throughput (or throughput reduction ratio) of basic PSVM and OPT are barely influenced because their verification operations (such as computing Pics or MACs) are irrelevant to the path length (or payload size) in a routing node. With reference to the baseline throughput, the average throughput reduction ratio for PSVM and OPT are 13% and 28%, respectively. 3) in the destination, basic PSVM's operations are still independent of path lengths, but OPT's are proportional to path hops. The routing node throughput in dynamic PSVM. Dynamic PSVM contains a cross node that is different from other nodes on the path and not only performs verification operations but also does new Pics replacement during path adjustment. To better understand the cost of cross node, we pick out two reference lines: a) line a . 656 Mbit/s throughput of basic PSVM node (a 10-hop path, 1100B packet size). b) line b . 839 Mbit/s throughput of basic PSVM node (a 35-hop path, 1514B packet size). Then, under the same conditions of reference line a and line b (i.e., with the same path length and packet size in the session), we examine the throughput of the cross node when it needs to replace W 2 and W * 2 Pics detailed in combination 3 of TableI, respectively. It is observed in Fig.4(d) that for a 10-hop path with 8 Pics needed to be replaced, the throughput of the cross-node is 637 Mb/s and the reduction ratio is 2.8% compared to the reference line a . For a 35-hop path with 30 Pics to be replaced, the throughput of the cross-node is 819 Mb/s and the reduction ratio is 2.4% compared to the reference line b . The routing node communication and storage overhead. For communication overhead, OPT and basic PSVM have an additional protocol header of 52 + 16 * L and 21 + 16 * L bytes (where L is the path length), respectively. OPT requires a larger number of bytes, so it would consume more bandwidths. In a session, the total number of bytes of Pics and notices generated by CGAs can be calculated as 16 * L+32 * L = 48 * L.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>We implement our PSVM prototype on Click<ref type="bibr" target="#b10">[11]</ref> and evaluate basic and dynamic PSVM protocols in different scenarios on a prototype-based real testbed (in Section V). The evaluation results indicate that the verification efficiency of PSVM in routing nodes is barely influenced by payload size or path length, and PSVM achieves a high throughput.</figDesc><table /><note>• To the best of our knowledge, among existing source and path validation solutions, our dynamic PSVM (in Section III-A) is the first to support online migration and adjustment of node verification in the case of the intended path changes. It is trying to answer (1) whether it was possible to build one, (2) how to build one, and (3) what it would cost to cope with the variable-path challenge. Indeed, it has good cost-effectiveness when intended path changes due to safety reasons. •</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE I :</head><label>I</label><figDesc>The Combinations of Experiment Parameters.</figDesc><table><row><cell>Num</cell><cell>Packet Sizes A \Payload Sizes B (Bytes)</cell><cell>Path Length (hops)</cell><cell>Inserted W1 Pics \Modified W2 Pics</cell></row><row><cell>1</cell><cell>A ∈ {1514}</cell><cell>{2, 4, 6, 8, 10, 15, 20, 25, 30, 35}</cell><cell>W1 ∈ {2, 4, 6, 8, 10, 15, 20, 25, 30}</cell></row><row><cell>2</cell><cell>B ∈ {64, 256, 576, 768, 1024, 1248}</cell><cell>{4, 6, 10}</cell><cell>−</cell></row><row><cell>3</cell><cell>A ∈ {1100, 1514}</cell><cell>{10, 35}</cell><cell>W2 ∈ {2, 4, 6, 8} W  *  2 ∈ {6, 8, 10, 20, 30}</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE II :</head><label>II</label><figDesc>The Processing Time and Throughput of the CGA and Source Operations. is the hops of path length.</figDesc><table><row><cell>Operations</cell><cell>Processing Time (µs) (a)</cell><cell>Throughput (1/Processing Time) (b)</cell></row><row><cell>CGN Pics Calculation</cell><cell>0.88 + 0.08</cell><cell>1.12  *  10 6 /( + 0.09) (Pic/s)</cell></row><row><cell>Basic PSVM Packets Creation</cell><cell cols="2">0.43  *  10 −3 + 0.51 2.29  *  10 9 /( + 1174.29) (Pkt/s)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0">Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 08:26:42 UTC from IEEE Xplore. Restrictions apply.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was in part supported by the National Key R&amp;D Program of China with No. 2018YFB0803405, National Science Foundation for Distinguished Young Scholars of China with No. 61825204, National Natural Science Foundation of China with No. 61932016, No. 61972039 and No. 61572278, Beijing Natural Science Foundation with No. 4192050, Beijing Outstanding Young Scientist Program with No. BJJWZYJH01201910003011, BNRist with No. BNR2019RC01011, PCL Future Greater-Bay Area Network Facilities for Largescale Experiments and Applications with No. LZC0019.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 08:26:42 UTC from IEEE Xplore. Restrictions apply.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. RELATED WORK</head><p>Path detection and Fault localization. Many researches provide path validation by making intermediate routers collect packet information <ref type="bibr" target="#b22">[24]</ref>, and infer path properties of interest <ref type="bibr" target="#b23">[25]</ref>. Fault localization is recognized as a high-quality online service, since it enables receivers to efficiently localize faulty links <ref type="bibr" target="#b24">[26]</ref>- <ref type="bibr" target="#b26">[28]</ref>. In practice, most of these systems are expensive to deploy, and they all require a certain amount of extra storage overhead for intermediate routers.</p><p>Source and path validation. Current techniques for both source authentication and path verification have been proposed in ICING <ref type="bibr" target="#b2">[3]</ref>, the Origin and Path Trace (OPT) <ref type="bibr" target="#b1">[2]</ref>, Orthogonal Sequence Verification (OSV) <ref type="bibr" target="#b3">[4]</ref>, and PPV <ref type="bibr" target="#b27">[29]</ref>. In ICING, it requires each router to verify the optimized cryptographic construction PoP for all upstream nodes and generate new PoPs for every downstream node with the secret keys shared among all intermediate routers, causing considerable communication and computation overhead. OPT improves the processing performance of intermediate nodes. OSV uses orthogonal sequences (instead of cryptographic structure) as credentials that identify the source and verify the path. PPV attempts to reduce the communication overhead by means of probabilistic packet marking, but it cannot carry out realtime verification at intermediate nodes. Additionally, the above mechanisms do not support adaptive adjustments in the session upon environment requirement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>In this paper, PSVM tackles an important missing piece in current networks -performing a flexible verification for source authenticity and path consistency based on intended polices. It achieves many advantages and is superior to related protocols in terms of throughput performance. We anticipate our PSVM will promote the work of source and path validation, stepping forward to the field of practical applications.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Understand love of variety in wireless data market under sponsored data plans</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications (JSAC)</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="766" to="781" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Lightweight source authentication and path validation</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename></persName>
		</author>
		<author>
			<persName><forename type="first">-J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Basescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM</title>
				<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="271" to="282" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Verifying and enforcing network paths with icing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Naous</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Walfish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nicolosi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mazières</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Seehra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM CoNEXT</title>
				<meeting>ACM CoNEXT</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page">30</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Source authentication and path validation with orthogonal network capabilities</title>
		<author>
			<persName><forename type="first">H</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Wolf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM WKSHPS</title>
				<meeting>IEEE INFOCOM WKSHPS</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="111" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Uk traffic diverted through ukraine</title>
		<author>
			<persName><forename type="first">D</forename><surname>Madory</surname></persName>
		</author>
		<ptr target="http://research.dyn.com/2015/03/uk-traffic-diverted-ukraine" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Cloudbased approximate constrained shortest distance queries over encrypted graphs with privacy protection</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mijumbi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Information Forensics and Security (TIFS)</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="940" to="953" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Source address validation: Architecture and protocol design</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE ICNP</title>
				<meeting>IEEE ICNP</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="276" to="283" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Cloudbased approximate constrained shortest distance queries over encrypted graphs with privacy protection</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mijumbi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Information Forensics and Security (TIFS)</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="940" to="953" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Practical network support for ip traceback</title>
		<author>
			<persName><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wetherall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM</title>
				<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="295" to="306" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Pi: A path identification mechanism to defend against ddos attacks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Yaar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE SP</title>
				<meeting>IEEE SP</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="93" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The click modular router</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kohler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jannotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Kaashoek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Computer Systems (TOCS)</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="263" to="297" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Identity-based encryption from the weil pairing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Crypto</title>
				<meeting>Crypto</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="213" to="229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A system for authenticated policycompliant routing</title>
		<author>
			<persName><forename type="first">B</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Snoeren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM</title>
				<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="167" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Measuring and mitigating as-level adversaries against tor</title>
		<author>
			<persName><forename type="first">R</forename><surname>Nithyanand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Starov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Gill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schapira</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Secure border gateway protocol</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kent</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lynn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Seo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="582" to="592" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Spv: secure path vector routing for securing bgp</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Sirbu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM</title>
				<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="179" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Pathlet routing</title>
		<author>
			<persName><forename type="first">P</forename><surname>Godfrey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Ganichev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="111" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Scion: Scalability, control, and isolation on next-generation networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-C</forename><surname>Hsiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hasker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Andersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE SP</title>
				<meeting>IEEE SP</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="212" to="227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Provably secure passwordauthenticated key exchange using diffie-hellman</title>
		<author>
			<persName><forename type="first">V</forename><surname>Boyko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mackenzie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Patel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurocrypt</title>
				<meeting>Eurocrypt</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="156" to="171" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Aes fast</title>
		<ptr target="http://cavium.com/processorsecuritynitroxII.htm" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Passive monitor: equinix-chicago</title>
		<ptr target="http://www.caida.org/data/monitors/passive-equinix-chicago.xml" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Reliable, high-performance synchronous srams from cypress</title>
		<ptr target="http://www.cypress.com/products/synchronous-sram" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Compiling path queries</title>
		<author>
			<persName><forename type="first">S</forename><surname>Narayana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tahmasbi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Walker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NSDI</title>
				<meeting>NSDI</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="207" to="222" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Alibi routing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Valenta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lumezanu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Spring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Bhattacharjee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM</title>
				<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="611" to="624" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Shortmac: Efficient data-plane fault localization</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">C</forename><surname>Hsiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Tague</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">High-speed interdomain fault localization</title>
		<author>
			<persName><forename type="first">C</forename><surname>Basescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">H</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE SP</title>
				<meeting>IEEE SP</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Rfl: Robust fault localization on unreliable communication channels</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Enabling efficient source and path verification via probabilistic packet marking</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE/ACM IWQoS</title>
				<meeting>IEEE/ACM IWQoS</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
