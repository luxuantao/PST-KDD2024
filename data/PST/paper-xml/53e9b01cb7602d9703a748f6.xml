<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Merging trust in collaborative filtering to alleviate data sparsity and cold start</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013-12-12">12 December 2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Guibing</forename><surname>Guo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jie</forename><surname>Zhang</surname></persName>
							<email>zhangj@ntu.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Daniel</forename><surname>Thalmann</surname></persName>
							<email>danielthalmann@ntu.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Merging trust in collaborative filtering to alleviate data sparsity and cold start</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2013-12-12">12 December 2013</date>
						</imprint>
					</monogr>
					<idno type="MD5">4C59058187817D7A082DFAA1EAB9D265</idno>
					<idno type="DOI">10.1016/j.knosys.2013.12.007</idno>
					<note type="submission">Received 29 May 2013 Received in revised form 17 November 2013 Accepted 7 December 2013</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T04:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Recommender systems Collaborative filtering Cold start Data sparsity Trusted neighbors</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Providing high quality recommendations is important for e-commerce systems to assist users in making effective selection decisions from a plethora of choices. Collaborative filtering is a widely accepted technique to generate recommendations based on the ratings of like-minded users. However, it suffers from several inherent issues such as data sparsity and cold start. To address these problems, we propose a novel method called ''Merge'' to incorporate social trust information (i.e., trusted neighbors explicitly specified by users) in providing recommendations. Specifically, ratings of a user's trusted neighbors are merged to complement and represent the preferences of the user and to find other users with similar preferences (i.e., similar users). In addition, the quality of merged ratings is measured by the confidence considering the number of ratings and the ratio of conflicts between positive and negative opinions. Further, the rating confidence is incorporated into the computation of user similarity. The prediction for a given item is generated by aggregating the ratings of similar users. Experimental results based on three real-world data sets demonstrate that our method outperforms other counterparts both in terms of accuracy and coverage.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The emergence of Web 2.0 applications has greatly changed users' styles of online activities from searching and browsing to interacting and sharing <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b39">40]</ref>. The available choices grow up exponentially, and make it challenge for users to find useful information which is well-known as the information overload problem. Recommender systems are designed and heavily used in modern e-commerce applications to cope with this problem, i.e., to provide users with high quality, personalized recommendations, and to help them find items (e.g., books, movies, news, music, etc.) of interest from a plethora of available choices.</p><p>Collaborative filtering (CF) is one of the most well-known and commonly used techniques to generate recommendations <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b16">17]</ref>. The heuristic is that the items appreciated by those who have similar taste will also be in favor of by the active users (who desire recommendations). However, CF suffers from several inherent issues such as data sparsity and cold start. The former issue refers to the difficulty in finding sufficient and reliable similar users due to the fact that users in general only rate a small portion of items, while the latter refers to the dilemma that accurate recommenda-tions are expected for the cold users who rate only a few items and thus whose preferences are hard to be inferred.</p><p>To resolve these issues and model user preferences more accurately, additional information from other sources is studied and incorporated into CF including friendship <ref type="bibr" target="#b18">[19]</ref>, membership <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b11">12]</ref> and social trust <ref type="bibr" target="#b40">[41,</ref><ref type="bibr" target="#b1">2]</ref>, where trust is believed less ambiguously and more reliable than friendship and membership. In this paper, trust is defined as one's belief toward others in providing accurate ratings relative to the preferences of the active user. Both implicit trust (e.g., <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b27">28]</ref>) and explicit trust (e.g., <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b26">27]</ref>) have been investigated in the literature. The former trust is inferred from user behaviors such as ratings whereas the latter is directly specified by users. By definition, the explicit trust tends to be more accurate and reliable than the implicit one. We focus on the explicit trust in this paper. Although many trust-based approaches have been proposed and the improvements to some extent have been achieved, there is still much room left for a better trust-based approach as stressed by <ref type="bibr" target="#b31">[32]</ref>.</p><p>In this paper, we propose a novel trust-based approach called ''Merge'' by incorporating the trusted neighbors explicitly specified by the active users in the systems, aiming to improve the overall performance of recommendations and to ameliorate the data sparsity and cold-start problems of CF. Specifically, we merge the ratings of trusted neighbors of an active user by averaging the ratings on the commonly rated items according to the extent to which the trusted neighbors are similar to the active user. The quality of the merged rating is measured by the confidence considering the number of ratings and the ratio of conflicts between positive and negative opinions (ratings). The set of merged ratings is then used to represent the active user's preferences and to find similar users based on user similarity. Further, the rating confidence is also taken into account in the computation of user similarity. Finally, the Merge method is incorporated into a conventional CF to generate recommendations. Experiments on three real-world data sets are conducted to demonstrate the effectiveness of our method in terms of accuracy and coverage. The results confirm that our method achieves promising recommendation performance, especially effective for the cold users comparing with the other counterparts. Although the idea of incorporating trust information into recommender systems is not new, our paper is the first work to effectively complement user rating profiles based on the ratings of trusted neighbors. Hence, our method shades light on a new way to build an effective trust-aware recommender system. A preliminary version of our work was published at the UMAP'12 conference <ref type="bibr" target="#b9">[10]</ref>.</p><p>The rest of this paper is organized as follows. Section 2 gives a brief overview of related research on trust-based CF from which the research gap is identified and motivating our present work. The proposed approach is then elaborated in Section 3 where we also highlight the advantages of our method in principle. Experiments on three real-world data sets are conducted in Section 4 to verify the effectiveness of our method in predicting items' ratings, especially for the cold users. Finally, Section 5 concludes our work and outlines potential future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related work</head><p>Many CF approaches have been proposed in the literature to resolve the data sparsity and cold start problems. Generally, they can be classified into two categories: memory-based and model-based. The most well-known model is matrix factorization (MF) based approaches, such as SVD <ref type="bibr" target="#b19">[20]</ref>, NNMF <ref type="bibr" target="#b38">[39]</ref>, tensor factorization <ref type="bibr" target="#b30">[31]</ref>. Model-based approaches usually can achieve better accuracy and coverage than memory-based approaches. This is because the former ones will train a prediction model using global rating data whereas the latter concentrate on local rating information. However, model-based approaches cannot properly explain how the recommendations are generated and effectively adopt new ratings due to trained static models. Although these problems might be mitigated to some extent such as <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b6">7]</ref>, the real applications (e.g., citeulike.com and last.fm) usually adopt simpler memory-based approaches. Further, a lesson learned from the Netflix competition is that no single (memory-or modal-based) approach can always achieve the best performance, and different methods generally reveal different patterns of rating data <ref type="bibr" target="#b2">[3]</ref>. Hence, it is necessary to further improve the performance of memory-based approaches.</p><p>To better model user preferences for the cold users who only rated a few items, additional information is often adopted. For example, <ref type="bibr" target="#b18">[19]</ref> take into consideration both the social annotation (tag) and friendships inherently established among users in a music track recommender system. Due to the ambiguity of friendship, friends may have different preferences in items. In contrast, users joining the same online community are more likely to have similar preferences <ref type="bibr" target="#b37">[38]</ref>. Hence by leveraging data from multiple channels including memberships in a project wiki <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b11">12]</ref> build a system named SONAR for people recommendation. Comparing with friendship and membership, trust information is of less ambiguity and more relevant to similarity <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b40">41]</ref>. Till now many trust-based approaches have been proposed <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b23">24]</ref>, and trust has been demonstrated to be able to decrease recommendation errors and also increase recommendable items.</p><p>Trust information can be explicitly collected from users or implicitly inferred from users' rating information. The former trust is specified directly by users themselves. Typical applications are FilmTrust (trust.mindswap.org/FilmTrust/) and Epinions.com where each user can specify others as trustworthy or untrustworthy. In contrast, implicit trust is usually inferred from user behaviors, such as ratings. For example, <ref type="bibr" target="#b25">[26]</ref> define the profile-level and item-level trust as the percentage of correct predictions from the views of general profile and specific items, respectively. <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b21">22]</ref> compute the implicit trust by the aggregation of value of a user's rating which is defined as the differences between the predicted ratings (based on only one user) and the ground truth. The intuition is that the closer two ratings are, the more value of that rating, and the more valuable ratings a user has, the more trustworthy the user will be. Since explicit trust is directly specified by users themselves, it is believed more accurate and reliable than implicit trust in determining the social relationships among users. In addition, <ref type="bibr" target="#b17">[18]</ref> also show that letting users specify the explicit level of their trust (i.e., explicit trust) on the friends can improve the quality of recommendations. Hence, the present work focuses on the explicit trust.</p><p>Many approaches have been proposed to make use of the explicit trust. For example, <ref type="bibr" target="#b14">[15]</ref> design the TrustWalker approach to randomly select trusted neighbors in the trust networks, where users are represented as nodes and trusted neighbors are connected with each other by trust links (i.e., edges) the strength of which indicates the trustworthiness between two users. Trust information of the selected neighbors is combined with an item-based technique to predict item ratings. In contrast, our work focuses on generating predictions by combining trust information with a user-based technique. <ref type="bibr" target="#b22">[23]</ref> report that more accurate prediction algorithms are possible by incorporating trust information into traditional collaborative filtering. They do not directly use trust to substitute similarity but rather amplify similarity measurement by taking into account the number of messages exchanged among users. Hence, this approach is message specific. Further, a number of hybrid approaches incorporating trust are also proposed, such as <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b29">30]</ref>. Good performance can be achieved by combining both user-and item-based CF approaches. However, in this paper we focus on how to further improve the user-based CF using explicit trust.</p><p>The closest approaches to ours are as follows. <ref type="bibr" target="#b24">[25]</ref> analyze the drawbacks of conventional CF-based recommender systems, and elaborate the rationale why incorporating trust can mitigate those problems. They propose the MoleTrust algorithm, which performs depth-first search, to propagate and infer trust in the trust networks. Empirical results show that the coverage is significantly enlarged but the accuracy remains comparable when propagating trust. Similarly, <ref type="bibr" target="#b7">[8]</ref> propose a breadth-first search method called TidalTrust to infer and compute trust value. Both approaches substitute similarity with trust to predict item ratings, and the performance of the two algorithms is close <ref type="bibr" target="#b33">[34]</ref>. Hence, we will only compare our method with one of them, namely MoleTrust in this paper. In addition, <ref type="bibr" target="#b3">[4]</ref> propose to enhance CF by predicting the ratings of similar users who did not rate the target items according to the ratings of their trusted neighbors, so as to incorporate more similar users for recommendation. However, it performs badly in cold conditions where only few ratings are available, which is the main concern of the present work. Another recent work using the explicit trust network is proposed by <ref type="bibr" target="#b26">[27]</ref>. They improve the prediction accuracy by reconstructing the trust networks. More specifically, the trust links between two users will be removed if their similarity is lower than a threshold. Empirical results show that good performance is achieved at the cost of poor coverage, and it fails to function in cold conditions where user similarity may not be computable.</p><p>In addition, most previous works are only evaluated on a single data set <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b26">27]</ref>. Besides, the reported results often show that they are able to achieve improvements in either accuracy or coverage, but not in both. Further, the cold start problem has not been well addressed yet, and proposing better trust-aware recommender systems remains a big challenge <ref type="bibr" target="#b31">[32]</ref>. The purpose of our work is to take a step further in addressing this challenge by proposing a novel approach to incorporate trusted neighbors in CF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The merge method</head><p>In this section, we will present the proposed Merge method the basic principle of which is to incorporate the ratings of trusted neighbors to complement and represent the preferences of active users. Three steps are taken to make recommendations. First, the trusted neighbors of the active user are identified and aggregated. Trust propagation may be needed to incorporate more trusted neighbors, especially useful for the cold users. Second, the ratings of trusted neighbors are merged into a single value for each item that is rated by at least one trusted neighbor. Hence, a new rating profile can be formed to represent the preferences of the active user. Third, similar users will be probed based on the merged rating profile, and recommendations are then generated in the same way as the conventional CF. Detailed descriptions as well as the insights of the Merge method are given in the subsequent sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Merging process</head><p>For clarity, we introduce a number of notations to model the recommendation problem. Specifically, we denote the sets of all users, all items and all ratings as U; I and R, respectively. We keep the symbols u; v for the users and i; j for the items. Then r u;i represents a rating given by user u on item i, and takes a value in a certain rating scope, such as an integer from 1 to 5, predefined by a recommender system. Hence the task of a recommender can be modeled as: given a set of user-item-rating ðu; i; r u;i Þ triplets, provide a best prediction ðu; j; ?Þ for user u on an unknown item j. The predicted rating is denoted as ru;j . In a trust-aware recommender system, the active user u may have identified a set of trusted neighbors TN u . For each trusted neighbor v 2 TN u , user u also specifies a trust value t u;v 2 ½0; 1 indicating the extent to which user u believes in user v's ability in giving accurate ratings. We presume that user u will always trust herself in giving accurate ratings. Thus, user u herself is also included in the trust neighborhood TN u , i.e. u 2 TN u and t u;u ¼ 1. Besides, for simplicity, the set of items rated by user u is denoted by I u ¼ fijr u;i 2 R; i 2 Ig, and the set of users who rated item i is denoted by U i ¼ fujr u;i 2 R; u 2 Ug. Hence, the recommendation problem can be re-described as: given a set of user ratings ðu; i; r u;i Þ and a set of user trust ðu; v; t u;v Þ, predict a best prediction ðu; j; ûj Þ for an active user u on a target item j. We are most concerned with the predictive accuracy of the predicted ratings (relative to the real preferences) and the percentage of target items that can be predicted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1.">Aggregating trusted neighbors</head><p>The cold users are generally defined as the users who have rated less than five items <ref type="bibr" target="#b24">[25]</ref>. Hence, to better model user preference, additional information is adopted. In our case, user's social trust information is utilized since users in the systems can specify other users as trusted neighbors. Since cold users usually are less active in the systems, they may not have a large number of trusted neighbors. We conduct experiments to show the statistics for cold users in real-world data sets, the specifications of which will be presented in Section 4.1. Fig. <ref type="figure" target="#fig_0">1</ref> shows the distribution of trusted neighbors for the cold users in three different real-world data sets.</p><p>Both (a) and (b) in Fig. <ref type="figure" target="#fig_0">1</ref> show the well-known power law property of social network. Specifically, most cold users have only few trusted neighbors and only few cold users have identified many trusted neighbors. From Fig. <ref type="figure" target="#fig_0">1</ref>(c), it is observed that FilmTrust has much fewer amount of trusted neighbors than Epinions and Flixster. Besides, the described trending line of data points follows an exponential function. Nevertheless, the distribution of trusted neighbors is quite close: only few cold users have many trusted neighbors whereas most cold users have only few ones. Therefore, although social trust can be regarded as a (strongly and positively) additional information source to model user preference, the availability of trust information for cold-users is relatively limited.</p><p>Fortunately, trust can be propagated along with the web -of-trust. That is, if users A trusts B and B trusts C, it can be inferred that users A trusts C to some extent. MoleTrust <ref type="bibr" target="#b24">[25]</ref> and TidalTrust <ref type="bibr" target="#b7">[8]</ref> are two typical algorithms to infer trust value. To better use trust information, it is necessary to propagate trust in order to find more (indirectly) trusted neighbors. In this work, we adopt the MoleTrust to infer the trust value of indirectly connected users. Note that the trust value in the data sets is binary, i.e., 0 or 1, where 0 means no direct trust connections whereas 1 indicates that a user directly connects with and trusts another user. As a result, the inferred trust value by the MoleTrust will be also binary, and thus we cannot distinguish trusted neighbors in a shorter distance with those in a longer distance. This issue may deteriorate the performance of trust-based approaches. Hence, we adopt a weighting factor to devalue the inferred trust in a long distance:</p><formula xml:id="formula_0">t u;v ¼ 1 d Ã t 0 u;v ;<label>ð1Þ</label></formula><p>where t 0 ðu; vÞ denotes the inferred trust value by the MoleTrust algorithm, d is the shortest distance between users u and v determined by a breath first search algorithm, and t u;v 2 ½0; 1 is the trust value that user u has towards another user v. In this way, directly specified trusted neighbors will be more trustworthy than the users in a long distance (but connected in the trust networks). Note that the greater d is, the more trusted neighbors will be inferred. However, the more cost will be taken and more noise is likely to be incorporated. According to the theory of six-degree separation <ref type="bibr" target="#b35">[36]</ref>, that is, any two users in the social network can be connected (if possible) within small (less than six) steps. In this work, we restrict d 6 3<ref type="foot" target="#foot_0">1</ref> to prevent meaningless searching and save computational cost for large-scale data sets. In fact, as we will show later, the Merge method works well enough when d is small. Hence, a set of users can be identified as trusted neighborhood for user u if the trust value of a user v is greater than a trust threshold:</p><formula xml:id="formula_1">TN u ¼ fvjt u;v &gt; h t ; v 2 Ug;<label>ð2Þ</label></formula><p>where h t is the trust threshold. Since the distance is restricted by d 6 3, we presume that the all connected trusted neighbors are useful and hence set h t ¼ 0 for simplicity. Although it is flexible to tune the trust threshold h t , it is not necessary to do so in practice.</p><p>We defer the explanation till Section 3.1.3. In addition, the active user u herself is also regarded as a trusted neighbor in her trust neighborhood, i.e., u 2 TN u and t u;u ¼ 1. In other words, we presume that user u will always believe in her own ratings as they are accurately reflecting her real preferences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.">Merging the ratings of trusted neighbors</head><p>After determining the trust neighborhood, a set of items can be identified as the candidate items for the merging process:</p><formula xml:id="formula_2">e I u ¼ fijr v;i 2 R; 9v 2 TN u ; i 2 Ig:<label>ð3Þ</label></formula><p>That is, e I u consists of items that have been rated by at least one trusted neighbor from the trust neighborhood. Then all the ratings of trusted neighbors on each item j 2 e I u will be merged into a single rating based on the weights of trusted neighbors:</p><formula xml:id="formula_3">ru;j ¼ P v2TNu w u;v Á r v;j P v2TNu jw u;v j ;<label>ð4Þ</label></formula><p>where ru;j is the merged value for user u on item j 2 e I u based on the ratings of all the trusted neighbors, and w u;v denotes the importance weight of user v's ratings relative to the active user u. We claim that the importance weight w u;v is composed of three parts: trust value t u;v , rating similarity s u;v and social similarity j u;v . Hence, w u;v is computed as a linear combination of the three parts:</p><formula xml:id="formula_4">w u;v ¼ a Á s u;v þ b Á t u;v þ ð1 À a À bÞ Á j u;v ;<label>ð5Þ</label></formula><p>where parameters a and b indicate the extent to which the combination relies on rating similarity and trust value, respectively. The rationale behind this computation, i.e., incorporating three parts rather than trust value only, is that people trusting each other may not share similar preferences <ref type="bibr" target="#b32">[33]</ref>. Specifically, it is possible that trusted neighbors have low similarity. According to the work conducted by <ref type="bibr" target="#b26">[27]</ref>, it is noted that trusted neighbors with high similarity have a positive influence on the predictive accuracy after eliminating those with low similarity. Therefore, it is necessary to consider both rating similarity and trust value. Pearson correlation coefficient <ref type="bibr" target="#b0">[1]</ref> is often used to compute user similarity based on ratings:</p><formula xml:id="formula_5">s u;v ¼ P i2Iu;v ðr u;i À r u Þðr v;i À r v Þ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi P i2Iu;v ðr u;i À r u Þ 2 q ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi P i2Iu;v ðr v;i À r v Þ 2 q ;<label>ð6Þ</label></formula><p>where s u;v 2 ½À1; 1 is the similarity between two users u and v, and I u;v ¼ I u \ I v denotes the set of items rated by both users u and v.</p><p>Since the active user u 2 TN u , we denote s u;u ¼ 1 for the purpose of consistency. In particular, s u;v &gt; 0 means positive correlation between users u and v, s u;v &lt; 0 indicates opposite correlation and s u;v ¼ 0 implies no correlation. Alterative similarity measures could be cosine similarity <ref type="bibr" target="#b0">[1]</ref>, Bayesian similarity <ref type="bibr" target="#b10">[11]</ref>, etc. In addition, as indicated by <ref type="bibr" target="#b26">[27]</ref> and as a general belief, even trusted users may not share similar preference and so does the social similarity. In other words, the trust and social similarity may be noisy and inaccurate. Considering the cases with positive trust and social similarity but negative similarity may not make sense or be expected. Hence, we only consider the positively correlated users in this regard, i.e., s u;v &gt; 0. Another reason is to be consistent with the value range of trust and social similarity in Eqs. ( <ref type="formula" target="#formula_0">1</ref>) and <ref type="bibr" target="#b6">(7)</ref>.</p><p>The third component is the ratio of commonly trusted neighbors between two users u and v. The intuition is that two users are socially close if they share a number of trusted neighbors. Hence, a trusted neighbor who also shares some social friends will be regarded as more important than the user who has no friends in common with the active user. The social similarity is defined as the ratio of shared trusted neighbors over all the trusted neighbors, and computed by the Jaccard Index:</p><formula xml:id="formula_6">j u;v ¼ jTN u \ TN v j jTN u [ TN v j ;<label>ð7Þ</label></formula><p>where j u;v 2 ½0; 1 indicates the social similarity of two users u and v based on their trusted neighbors. Hence, the importance weight w u;v can be computed using Eq. ( <ref type="formula" target="#formula_4">5</ref>) since the three components are derived by Eqs. ( <ref type="formula" target="#formula_0">1</ref>), ( <ref type="formula" target="#formula_5">6</ref>) and <ref type="bibr" target="#b6">(7)</ref>, respectively. In this way, all the ratings of trusted neighbors on a certain item can be merged into a single value by Eq. ( <ref type="formula" target="#formula_3">4</ref>). Furthermore, since user u always gives accurate ratings from her own viewpoint, all her ratings will be retained and kept unchanged during the merging process as it is not necessary for them to be approximated (by the ratings of other trusted neighbors) in any way. Thus we need to highlight that only the ratings of trusted neighbors on the other items that user u has not rated will be merged. To put it simply, the active user will keep all her own ratings, and the ratings of trusted neighbors will be used to complement her own preferences so that a new more complete and accurate rating profile can be formed and used to represent the preferences of the active user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3.">Determining the confidence of merged ratings</head><p>A merged rating for an active user on a certain item can be computed using Eq. ( <ref type="formula" target="#formula_3">4</ref>) based on the ratings of trusted neighbors. However, the quality or usefulness of the merged ratings is unknown. We term it as the confident of the merged ratings, or rating confidence for short, which reflect the usefulness of the merged ratings and to what extent the merged ratings are reliable. Intuitively, two factors may have important influence: the number of ratings involved and the conflicts between positive and negative opinions among all these ratings.</p><p>More specifically, if an item receives many ratings from the trusted neighbors, the merged value is likely to be correct and reliable. In contrast, if an item only receives few ratings, the merged value tends to be noisy and unreliable. In fact, as shown in Fig. <ref type="figure" target="#fig_0">1</ref>, most cold users do not specify many other users as trusted neighbors, and by definition cold users rate only small number of items. In this paper, we regard the rating whose value is greater than the median rating scale as a positive opinion and otherwise as a negative opinion:</p><formula xml:id="formula_7">r v;i is positive : if r v;i &gt; r med ; r v;i is negative : otherwise;<label>ð8Þ</label></formula><p>where r med is the median rating scale in the range from the minimum rating scale r min to the maximum rating scale r max predefined by a recommender system. The more consistent (i.e., less conflicts) between positive and negative opinions, the more reliable the merged rating will be. Therefore, only adopting the merged ratings may ignore the significant differences among different items and raise much noise in the merged rating profile, especially for those who have already rated many items, i.e., the heavy users. It is necessary to take into account the rating confidence for later rating predictions.</p><p>In conclusion, the measure of rating confidence should manage to reflect the differences in the number of ratings of trusted neighbors, and the differences in the conflicts between positive and negative opinions. Formally, the confidence c u;j of a merged rating ru;j is defined in the evidence space hp u;j ; n u;j i (refers to <ref type="bibr" target="#b34">[35]</ref>):</p><formula xml:id="formula_8">c u;j ¼ cðp u;j ; n u;j Þ ¼ 1 2 Z 1 0</formula><p>x p u;j ð1 À xÞ n u;j R 1 0 x p u;j ð1 À xÞ n u;j d x</p><formula xml:id="formula_9">À 1 d x ;<label>ð9Þ</label></formula><p>where c u;j 2 ð0; 1 is the rating confidence of merged rating ru;j as a function of p u;j and n u;j , referring to the number of positive, negative opinions (ratings) provided by the trusted neighbors on item j 2 e I u , respectively. Hence, the greater the amount p u;j þ n u;j of ratings is, and the less conflicts between r and s will lead to greater confidence c u;j . For consistency, the rating confidence of the ratings rated by the active users is always believed to be the highest, i.e., c u;i ¼ 1, for any item i 2 I u .</p><p>With the concept of rating confidence, we can now explain why it is not necessary to set or tune a proper trust threshold h t during the formation of trust neighborhood in Eq. ( <ref type="formula" target="#formula_1">2</ref>). The reason is straightforward. Although less trustworthy users may be involved in the merging process, their influence to the merged rating is less than those with greater trust values, and the confidence measure can also mitigate their influence.</p><p>In summary, the merging process for each item j 2 e I u will produce two outputs: the merged rating ru;j and the corresponding rating confidence c u;j . All the pairs of ðr u;j ; c u;j Þ will form a new rating profile to represent the preferences of the active users, based on which item predictions can be generated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Incorporating with collaborative filtering</head><p>Given the new rating profile on the item set e I u after the merging process in Section 3.1, which represents the preferences of the active user u, we then apply a conventional CF technique to predict the rating of a target item j that has not been rated by user u. More specifically, we first probe a set NN u of similar users (i.e., nearest neighbors) for user u based on the similarity between user u and other users who have rated item j. Then the ratings of these nearest neighbors will be aggregated to produce a prediction for user u on item j.</p><p>In general, Pearson correlation coefficient (PCC) is often adopted to measure the similarity between two users according to their ratings on the items that they commonly rated (see Eq. ( <ref type="formula" target="#formula_5">6</ref>)). In our case, other than the merged ratings, the confidence is also important to indicate the quality of the merged ratings. Since Eq. ( <ref type="formula" target="#formula_5">6</ref>) does not consider the rating confidence, we introduce a confidenceaware PCC to compute user similarity, denoted by CPCC:</p><formula xml:id="formula_10">s 0 u;v ¼ P i2Iu;v c u;i ðr u;i À r u Þðr v;i À r v Þ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi P i2Iu;v c 2 u;i ðr u;i À r u Þ 2 q ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi P i2Iu;v ðr v;i À r v Þ 2 q ;<label>ð10Þ</label></formula><p>where I u;v ¼ e I u \ I v is the set of items rated by both users u and v after the merging process, r u and r v are the average ratings for users u and v respectively, and c u;i is the confidence measurement regarding the merged rating ru;i . The CPCC measure is inspired by the work of <ref type="bibr" target="#b36">[37]</ref> in which the confidential weight of an item rated by the active user in their Eq. ( <ref type="formula" target="#formula_6">7</ref>) plays the same role as the rating confidence in our work, i.e., to discount the values of their ratings.</p><p>For a real rating r v;j provided by a similar user v, we consider that its rating confidence is c v;j ¼ 1 and hence omitted in Eq. ( <ref type="formula" target="#formula_10">10</ref>).</p><p>After computing user similarity, a group of similar users are then selected into the nearest neighborhood NN u of the active user u. Herein we use the thresholding method, i.e., adopting the users whose similarity with the active user u is greater than a predefined threshold:</p><formula xml:id="formula_11">NN u ¼ v s 0 u;v &gt; h s ; v 2 U n o ;<label>ð11Þ</label></formula><p>where h s is a predefined similarity threshold. An alternative method to determine the nearest neighborhood is well known as top-K where the top K most similar users will be used. However, since in this work we focus on the performance of the cold users, the top-K method is less effective to determine the nearest neighborhood than the thresholding method according to our experiments. Specifically, when we tune the values of K, no significant changes are observed in the performance of comparing methods. This may be due to the few similar users that can be identified based on the little rating information. Therefore, we use the thresholding rather than the top-K method to select nearest neighbors for the active users. We will investigate the effect of similarity threshold for our method in the experiments (see Section 4.4.1). Finally, all the ratings of nearest neighbors are aggregated to produce a prediction on a target item j that the active user u has not rated. We use the simple weighted average method, i.e., to compute the average value of all ratings provided by the nearest neighbors v weighted by their similarity s u;v with the active user u. Formally, the prediction is computed by: ru;j ¼</p><formula xml:id="formula_12">P v2NNu s 0 u;v Á r v;j P v2NNu s 0 u;v ;<label>ð12Þ</label></formula><p>where ru;j represents the predicted value on item j. Hence it ensures that the users with greater similarity will have more influence on the predictions. An alternative prediction method is Resnick's formula <ref type="bibr" target="#b0">[1]</ref> which in addition considers user bias in giving ratings. Nevertheless, we adopt the weighted average because the two most related works <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b26">27]</ref> also take the same equation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">An example</head><p>In this section, we intend to exemplify step by step the use of the Merge method to generate a prediction for a given item. Suppose there are nine users and nine items, denoted by u k and i j respectively, where k; j 2 ½1; 9 in a certain system. Each user may rate a few items by giving an integer rating ranged in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref> as shown in Table <ref type="table">1</ref>(a). In addition, users may specify other users as trusted neighbors as shown in Table 1(b), where an entry for example ðu 1 ; u 2 ; 1Þ indicates that user u 1 specifies user u 2 as a trusted neighbor. In this example, we are interested in generating a prediction on a target item i 5 (highlighted by the question mark) for an active user u 1 . User u 1 has only reported a rating 5 on item i 3 . She has indicated that users u 2 and u 3 as her trusted neighbors, and both trusted users also pointed out others as trusted neighbors. By linking all the trusted neighbors together, we form a trust network for user u 1 as illustrated in Fig. <ref type="figure" target="#fig_1">2</ref>. Specifically, users are represented as nodes and the trust links are denoted as edges among users. Note that trust information is asymmetric, that is, users u 1 trusting u 2 does not imply users u 2 trusting u 1 .</p><p>The first step of the Merge method is to identify the trusted neighbors of the active user by allowing trust propagation in the trust network. According to Fig. <ref type="figure" target="#fig_1">2</ref>, trust values between the active user u 1 and other users can be inferred by Eq. ( <ref type="formula" target="#formula_0">1</ref>) and the results are presented in Table <ref type="table">2</ref>. In particular, as an active user, u 1 always trusts herself in giving accurate ratings and hence t u 1 ;u 1 ¼ 1:0. Since users u 2 and u 3 are directly specified by user u 1 , i.e., d ¼ 1, their trust values will be 1.0. For user u 4 , the minimum distance to user u 1 is 2, i.e., d ¼ 2. The shortest path of trust propagation is u 1 ! u 2 ðor u 3 Þ ! u 4 , and the other path could be u 1 ! u 2 ! u 3 ! u 4 . Hence, the trust value is computed by t u 1 ;u 4 ¼ 1=2 ¼ 0:5. The minimum distance from users u 1 to u 5 will be:</p><formula xml:id="formula_13">dðu 1 ; u 5 Þ ¼ dðu 1 ; u 4 Þ þ dðu 4 ; u 5 Þ ¼ 3,</formula><p>and the distance to u 6 can be computed in the same manner. Note that although the trust value of user u 6 is computable, this user will not be regarded as an inferred trusted neighbors due to the constraint d 6 3. Hence, a set of users TN u 1 ¼ fu 1 ; u 2 ; u 3 ; u 4 ; u 5 g are identified as trusted neighbors for active user u 1 .</p><p>Second, the ratings of trusted neighbors will be merged using Eqs. ( <ref type="formula" target="#formula_3">4</ref>), ( <ref type="formula" target="#formula_4">5</ref>) and <ref type="bibr" target="#b8">(9)</ref>. For simplicity, in this example we set a ¼ 0; b ¼ 1 for Eq. ( <ref type="formula" target="#formula_4">5</ref>), i.e., trust values are used as user weights.</p><p>The resultant merged ratings and confidences are presented in Table <ref type="table" target="#tab_1">3</ref>. In particular, since user u 1 has rated item i 3 , and we presume the active user will always believe in her own ratings, hence there is no need to consider the ratings of trusted neighbors. Therefore, the merged rating on item i 3 is equal to r u 1 ;i 3 (i.e., 5), and the confidence is the highest (i.e., 1.0). For other items that user u 1 has not rated, the ratings of trusted neighbors will be merged by Eq. ( <ref type="formula" target="#formula_3">4</ref>) as well as the rating confidence by Eq. ( <ref type="formula" target="#formula_9">9</ref>). Take item i 1 as an instance. The ratings of users u 2 and u 4 will be averaged and weighted by their trust values, i.e.,</p><formula xml:id="formula_14">ru 1 ;i 1 ¼ 5 Â 1:0 þ 3 Â 0:5 1:0 þ 0:5 ¼ 4:33</formula><p>For rating scales from 1 to 5, the median rating is 3. According to Eq. ( <ref type="formula" target="#formula_7">8</ref>), user u 2 's rating 5 is regraded as positive, while user u 4 's rating 3 is negative. The confidence is derived by: c u 1 ;i 1 ¼ cð1; 1Þ ¼ 0:19</p><p>This procedure continues until all the items rated by at least a trusted neighbor has been covered. A new rating profile is formed and shown in Table <ref type="table" target="#tab_1">3</ref>. Since there are only a few trusted neighbors, the computed confidence is relatively small. The merged rating profile is much more complete than the original. Third, user similarity is computed by Eq. ( <ref type="formula" target="#formula_10">10</ref>) based on the formed rating profile (see Table <ref type="table" target="#tab_1">3</ref>), taking into account the rating confidence. The results are shown in Table <ref type="table" target="#tab_2">4</ref>. For consistency, the similarity between user u 1 and herself is 1.0. For comparison purpose, we also show the similarity values computed by conventional PCC (see Eq. ( <ref type="formula" target="#formula_5">6</ref>)). It is noted that PCC values are less distinguishable than CPCC values, and the differences between CPCC and PCC values could be large. In other words, the confidence plays an important role in our similarity computation. A set of users NN u 1 ¼ fu 2 ; u 4 ; u 5 ; u 8 g are selected as nearest neighbors, whose similarity is greater than the threshold h s ¼ 0 and who have rated the target item i 5 (noted that user u 3 did not rate item i 5 ).</p><p>Finally, a prediction for item i 5 is generated by Eq. (4):</p><formula xml:id="formula_15">ru 1 ;i 5 ¼ 3 Â 0:66 þ 2 Â 0:995 þ 3 Â 0:84 þ 2 Â 0:99 0:66 þ 0:995 þ 0:84 þ 0:99 ¼ 2:43 Table 1</formula><p>The synthetic data set consisting of both (a) rating and (b) trust information.  </p><formula xml:id="formula_16">i 1 i 2 i 3 i 4 i 5 i 6 i 7 i 8 i 9<label>(</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 2</head><p>The computed trust values between user u1 and others.  and the rating confidence is:</p><formula xml:id="formula_17">c u 1 ;i 5 ¼ cð0; ¼ 0:53</formula><p>Compared with the values (2.73, 0.47) shown in Table <ref type="table" target="#tab_1">3</ref>, the final prediction is different from the merged rating which is only based on trusted neighbors, and the final rating confidence is higher than the merged one since more ratings of similar users are used. In other words, generating a prediction only based on trusted neighbors may not be reliable, and the resultant rating confidence could be low if only few trusted neighbors can be identified. This is the situation for the cold users. In contrast, by merging the ratings of trusted neighbors, the ratings of similar users can be adopted to smooth the predictions and enhance the confidence. Furthermore, the only item that user u 1 has rated is i 3 which receives many ratings from system users. That is, item i 3 is a popular item. The conventional CF will treat all the users as similar users and hence the extreme ratings given by users u 6 and u 9 will bias the final prediction for item i 5 . By forming a more complete rating profile for the active user u 1 , the Merge method is able to identify that users u 6 and u 9 in fact have different preferences and hence they will be excluded to generate the final prediction. As a result, the prediction generated by our method is likely to be more accurate and reliable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">The strength of the merge method</head><p>Principally, the Merge method has two distinct advantages relative to other methods. First, it can effectively ameliorate the data sparsity and cold start problems. The essential challenge of the two issues is that the small amount of items commonly rated by two users makes it difficult to accurately compute user similarity, and hence to find reliable similar users. Even worse, two users may not have any co-rated items in common, resulting in non-computable user similarity. The Merge method cope with the cold conditions by merging the ratings of the trusted neighbors to form a new rating profile which is used to represent the preferences of the active user. Specifically, the relation I u 2 e I u can be inferred from Eq. (3) because of u 2 TN u , that is, the newly formed rating profile covers more items than the original rating profile. The previous example also confirmed this point. Thus, more similar users can be identified in terms of user similarity, especially useful for cold users with only a few or none ratings. The example in Section 3.3 also showed that the computed similarity tended to be more reliable and distinguishable by considering confidence. As a consequence, our method can alleviate the data sparsity and cold start problems.</p><p>Second, the Merge method can function well in the case of either sparse rating or sparse trust information. Previously, many trust-based approaches such as MoleTrust <ref type="bibr" target="#b24">[25]</ref> and TidalTrust <ref type="bibr" target="#b33">[34]</ref> predict item ratings only based on the ratings provided by the trusted neighbors. Hence these approaches may also suffer from the similar cold-start problem where some users may only specify a small number of other users as their trusted neighbors, which has been demonstrated in three real-world data sets and shown in Fig. <ref type="figure" target="#fig_0">1</ref>. Hence this issue could be a common case for many online systems, especially when users are lack of incentives to proactively connect with each other. In this case, the performance will be limited since only a few neighbors can be incorporated for recommendation. In contrast, the Merge method addresses this problem by also making use of the ratings of the active users if any. In particular, when the active user has not specified any trusted neighbors but rated a certain number of items, the merged rating profile will then be exactly the same as her own and real rating profile because the only trusted neighbor is herself. The Merge method will have no differences with the conventional CF method. On the other hand, when the cold user has not rated any items but specified some trusted neighbors, then the ratings of these trusted neighbors can be merged as we described. In either case, our meth-od is competent to form a new rating profile and hence mitigate the cold start problem. Although our method will fail to work when there is neither rating nor trust information of the active users, other kind of information may be needed to help model user preference which is beyond the scope of this paper.</p><p>In this regard, our method possess some advantages of hybrid approaches. By merging user-and item-based approaches together, hybrid methods can also alleviate the concern issues, such as <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b29">30]</ref>. However, our method differs from those methods in threefold. Firstly, our work is only based on rating information, namely item ratings and trust ratings. Hybrid methods usually depend on more heterogenous information, such as music genre in <ref type="bibr" target="#b20">[21]</ref> or item taxonomy in <ref type="bibr" target="#b29">[30]</ref>. Hence, our method is more generic than the hybrid ones. Secondly, more complex information needs more computational steps to deal with, hence the hybrid methods are usually more complex and hard to be implemented than singe approaches. Lastly, as a user-based approach, our method holds the potential to be incorporated with other item-based approaches to form more powerful hybrid methods in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Evaluation</head><p>In order to verify the effectiveness of the Merge method, we conduct experiments on three real-world data sets. Specifically, we aim to find out: (1) how the performance of our method in comparison with other counterparts; and ( <ref type="formula" target="#formula_1">2</ref>) what is the effect of trust propagation to our method and the others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Data acquisition</head><p>Three real-world data sets are used in our experiments, namely FilmTrust,<ref type="foot" target="#foot_2">2</ref> Flixster<ref type="foot" target="#foot_3">3</ref> and Epinions<ref type="foot" target="#foot_4">4</ref> as they are possibly the only available data sets that contain both the data of explicit trust statements and user-item ratings. The specifications of the three data sets are summarized in Table <ref type="table" target="#tab_3">5</ref>.</p><p>FilmTrust is a trust-based social site in which users can rate and review movies. Since there is no publicly available data sets due to the preservation of user privacy, we crawled the whole site in June 2011, collecting 1986 users, 2071 movies and 35,497 ratings. The ratings take values from 0.5 to 4.0 with step 0.5. In addition, we also gathered 1853 trust ratings that are issued by 609 users. The average number of trusted neighbors per user is less than 1. Originally, users can specify other users as trusted neighbors with a certain level of trust from 1 to 10. However, these trust values are not available due to the sharing policy. We can only get the link information among users and hence the trust value is 1 if a link exists between two users otherwise the value is 0.</p><p>Flixster is a social movie site in which users are allowed to share their movie ratings, discover new movies and interact with others who have similar taste. We adopt the data set<ref type="foot" target="#foot_5">5</ref> collected by <ref type="bibr" target="#b15">[16]</ref> which includes a large amount of data. The ratings are real values ranged from 0.5 to 4.0 with an interval 0.5, and the trust statements are scaled from 1 to 10 but not available. they are converted into binary values the same as FilmTrust, that is, trust value 1 is assigned to a user who is identified as a trusted neighbor and 0 otherwise. Note that the trust statements in this data set is symmetric. We sample a subset by randomly choosing 53 K users who issued 410 K item ratings and 655 K trust ratings. Epinions is a website in which users can express their opinions about items (such as movies, books, and software) by assigning numerical ratings and writing text reviews. Users can specify other users as trustworthy (to the trust list) or untrustworthy (to the distrust list) according to whether the text reviews and comments of other users are consistently valuable to them or not. The data set <ref type="foot" target="#foot_6">6</ref> is generated by <ref type="bibr" target="#b24">[25]</ref>, consisting of 49 K users who issued 664 K ratings over 139 K different items and 478 K trust statements. The ratings are integers ranged from 1 to 5, and the trust values are also binary (either 1 or 0). The rating sparsity is computed by:</p><formula xml:id="formula_18">Sparsity ¼ 1 À #Ratings #Users Â #Items Â 100%:</formula><p>It is noted that all the data sets are highly sparse, i.e., users only rate a small portion of items in the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Experimental settings</head><p>In the experiments, we compare the performance of our method Merge with a number of trust-based state-of-the-art methods as well as a conventional user-based CF method.</p><p>CF computes user similarity using the PCC measure, selects the users whose similarity is above the predefined similarity threshold h s for Eq. ( <ref type="formula" target="#formula_11">11</ref>), and uses their ratings to generate item predictions by Eq. <ref type="bibr" target="#b11">(12)</ref>. In this work, the threshold h s is set 0 for all methods. MT xðx ¼ 1; 2; 3Þ is the implementation of the MoleTrust algorithm <ref type="bibr" target="#b24">[25]</ref> in which trust is propagated in the trust network with the length x. Only trusted neighbors are used to predict item ratings. RN denotes the approach proposed by <ref type="bibr" target="#b26">[27]</ref> that predicts item ratings by reconstructing the trust networks. We adopt their best performance settings where the correlation threshold is 0.5, propagation length is 1, and the top 5 users with highest correlations are selected for rating predictions. TCFxðx ¼ 1; 2Þ denotes the approach proposed by <ref type="bibr" target="#b3">[4]</ref> that enhances CF by predicting the ratings of the similar users who did not rate the items according to the ratings of the similar users' trusted neighbors, so as to incorporate more users for recommendation. The best performance that they report is achieved when the prediction iteration x over trust network is 2. We adopt the same settings in our experiments. Mergexðx ¼ 1; 2; 3Þ is our method with the trust propagation length x, aiming to investigate the impact of trust propagation on the Merge method. Besides, we denote Merge-a as a variant where parameter a in Eq. ( <ref type="formula" target="#formula_4">5</ref>) is set 1, meaning the importance weight is completely determined by user similarity. Further, we also denote Merge-b as a variant with the best performance when parameter b in Eq. ( <ref type="formula" target="#formula_4">5</ref>) is set 0, meaning explicitly specified or inferred trust value is not used.</p><p>In addition, we split each data set into two different views as defined in <ref type="bibr" target="#b24">[25]</ref>: the view of All Users represents that all users and their ratings will be tested whereas the view of Cold Users denotes that only the cold users who have rated less than five items, and their ratings will be tested in the experiments. In particular, we focus on the performance in the view of Cold Users which mostly indicates the effectiveness in mitigating the data sparsity and cold start problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Evaluation metrics</head><p>The performance of all the methods is evaluated in terms of both accuracy and coverage. The evaluation is proceeding by applying the leave-one-out method on the two data views. In each data view, users' ratings are hidden one by one in each iteration and then their values will be predicted by applying a certain method until all the testing ratings are covered. The errors between the predicated ratings and the ground truth are accumulated. The evaluation metrics are described as follows.</p><p>Mean Absolute Error, or MAE, measures the degree to which a prediction is close to the ground truth:</p><formula xml:id="formula_19">MAE ¼ P u P i jr u;i À r u;i j N ;<label>ð13Þ</label></formula><p>where N is the number of testing ratings. Hence, the smaller the MAE value is, the closer a prediction is to the ground truth. Inspired by <ref type="bibr" target="#b14">[15]</ref> who define a measure precision based on root mean square error (RMSE), we define the inverse MAE, or iMAE as the predictive accuracy normalized by the range of rating scales:</p><formula xml:id="formula_20">iMAE ¼ 1 À MAE r max À r min ;<label>ð14Þ</label></formula><p>where r max and r min are the maximum and minimum rating scale defined by a recommender systems, respectively. Higher iMAE values indicate better predictive accuracy. Ratings Coverage, or RC, measures the degree to which the testing ratings can be predicted and covered relative to the whole testing ratings:</p><formula xml:id="formula_21">RC ¼ M N ;<label>ð15Þ</label></formula><p>where M and N are the number of predictable and all the testing ratings, respectively. F-measure, or F1, measures the overall performance in considering both rating accuracy and coverage. Both accuracy and coverage are important measures for the predictive performance. According to <ref type="bibr" target="#b14">[15]</ref>, the F-measure is computed by:</p><formula xml:id="formula_22">F1 ¼ 2 Á iMAE Á RC iMAE þ RC :<label>ð16Þ</label></formula><p>Hence the F-measure reflects the balance between accuracy and coverage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">Results and analysis</head><p>In this section, we conduct a series of experiments on three real-world data sets to demonstrate the effectiveness of our approach relative to others, and thus to answer the research questions proposed in Section 4. Both data set views, namely All Users and Cold Users are tested. The results are presented in Tables 6-8 corresponding to the predictive performance on the FilmTrust, Flixster, and Epinions data sets, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.1.">Effect of similarity threshold h s</head><p>The Merge method requires to select a set of nearest neighbors to make a prediction, referring to Eq. ( <ref type="formula" target="#formula_11">11</ref>) where a similarity threshold h s is used. In this experiment, we intend to determine the best similarity threshold for cold users. For simplicity, we set a ¼ 0:5; b ¼ 0:3 (see Eq. ( <ref type="formula" target="#formula_4">5</ref>), explained in the next subsection), and vary the threshold h from 0.0 to 0.9 with step 0.1. The performance in the view of Cold Users on three data sets is trated in Fig. <ref type="figure">3</ref>.</p><p>The results show that as similarity threshold increases, the rating coverage (RC) decreases dramatically. It is because less nearest neighbors are used to make predictions. Although users with greater similarities are adopted, it does not mean that the predictions generated by few highly similar users will be more reliable than those generated by many users with smaller similarities. Hence, the trends of accuracy (MAE) may vary in different data sets. We select the similarity threshold such that both the accuracy and rating coverage are high. Therefore, in the following experiments the similarity threshold is set h s ¼ 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2.">Importance weights with parameters a and b</head><p>An important step for the Merge method is to compute the importance weights of trusted neighbors which is a linear combination of rating similarity, trust value and social similarity with parameters a and b (see Eq. ( <ref type="formula" target="#formula_4">5</ref>)). When a ¼ 1, the weights of trusted neighbors depend completely on the rating similarity, and the performance of this variant is denoted by Merge-a. When b ¼ 0, the trust values are not considered and the importance weights are totally dependent on rating and social similarities.</p><p>The best performance in this case is obtained when a ¼ 0:5 on FilmTrust and Flixster, and a ¼ 0:7 on Epinions. We denote this specific variant as Merge-b. When a 2 ð0; 1Þ, both rating-based value and trust-based value will be used. In fact, the experiments show that the settings of ða; bÞ are (0.5, 0.3) on FilmTrust, (0.5, 0.4) on Flixster and (0.2, 0.4) on Epinions achieve the best performance. It is denoted as Merge1 when trust propagation is not used. Merge2 and Merge3 adopt the same settings except the length of trust propagation. From Tables 6-8, it is observed that Merge-a achieves similar performance with the baseline CF method in both views of All Users and Users. More specifically, both accuracy (in terms of MAE) and coverage (in RC) are slightly improved as well as the overall performance (in F1). This is because for cold users (view Cold Users), although a number of trusted neighbors may be identified, the number of trusted neighbors with computable and positive similarity could be small due to only few ratings available. For other type of users (view All Users), many similar users can be identified which hence also include the trusted neighbors with computable similarity. In other words, these similar users may already cover a high ratio of items, resulting in smaller effect of the Merging process.</p><p>For the Merge-b where social similarity is considered in addition to rating similarity, the performance is significantly improved relative to Merge-a, especially in Flixster and Epinions. However in FilmTrust, the differences between Merge-a and Merge-b are marginal. This may be explained by the fact that the CF method already achieves sufficiently good performance. When social information is added, the quality of rating similarity may be decreased due to possible noise embedded, and hence the accuracy may be slightly decreased whereas the coverage is increased to a limited extent. Nevertheless, the overall performance (in F1) is improved. In contrast, the rating information is less useful in Flixster and Epinions, and using social similarity can effectively increase both the accuracy (up to 12% increments) and coverage (up to 38% increments) as well as the overall performance, especially in the view of Cold Users which is the main concern of this work.</p><p>Furthermore, by taking into account both rating and trust information, Merge1 achieves even better performance than Merge-b method in terms of accuracy and coverage. Again, the greatest improvement is observed in the view of Cold Users, especially in coverage (up to 20% increments). As the best parameters are set by different value combinations across three data sets, we may conclude that similarity (0.5) is more important than trust value (0.3 or 0.4) which is superior to social similarity in determining user preferences. Furthermore, it shows that both rating and trust information are useful and should be integrated to improve the recommendation performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.3.">Trust propagation in different lengthes</head><p>An important factor for trust-based approaches is the use of trust transitivity. By propagating trust values through trust networks, more trusted neighbors can be identified and hence the performance of CF can be further improved. We investigate the influence of trust propagation on the performance of the Merge method. Compared with Merge1, Merge2 and Merge3 have a better accuracy and coverage. This may be explained by that the merged ratings will be more accurate and the rating confidence will be greater due to more evidences (i.e., ratings) available.</p><p>Note that the differences between Merge2 and Merge3 are less than the differences between Merge1 and Merge2. We may conclude that trust propagation is helpful to improve recommendation performance, and for our method, it shows that a short propagation length (i.e., 2) will be good enough to achieve a satisfying performance. This is because although more trusted neighbors can be identified via trust propagation, it does not guarantee that the merged rating profile will cover a lot more items and hence increase accuracy greatly. Rather, it is possibly that adding few trusted neighbors may result in some noisy merged ratings (due to few ratings), and hence harm the predictive performance such as that in the FilmTrust data set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.4.">Comparison with other methods</head><p>For other methods, we obtain close results on Epinions as shown in Table <ref type="table" target="#tab_6">8</ref> relative to those reported in <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b24">25]</ref>. The similar trends of results are also obtained on the other two data sets, as shown in Tables <ref type="table" target="#tab_4">6</ref> and<ref type="table" target="#tab_5">7</ref>. More specifically, CF cannot achieve large portion of predictable items, especially on the large-scale data sets (i.e., Flixster and Epinions) and the accuracy is usually bad. It confirms that CF suffers from cold start severely. The RN method accomplishes good accuracy but covers the smallest portion of items, since only the ratings of the users who have a large number of trusted neighbors and high rating correlations are possible to be predicted. Hence RN is not comparative with others. Comparing with CF, all other methods achieve better performance for cold users in all the data sets except in the FilmTrust where only our Merge method outperforms it in both accuracy and coverage. When only direct trusted neighbors are used (MT1, Merge1), our method achieves better accuracy and coverage in FilmTrust and Flixster. In Epinions, MT1 works better than our method in accuracy but much worse in coverage. It shows that MT1 may have a good accuracy in some data sets, but not consistently in all the data sets. When trust is propagated in longer length, both accuracy and coverage are increased in Flixster and Epinions whereas only coverage increases in FilmTrust. Nevertheless, our method outperforms MTx in all the data sets. TCF methods generally obtain better coverage in the view of All Users. However, for cold users, TCF functions badly due to the limitation that it relies on CF to find similar users before it can apply trust information on them. As aforementioned, CF is not effective in cold conditions. This fact leads to bad performance of TCF methods. In contrast, our method is not subject to the ratings of cold users themselves. Instead, trust information is merged to form a more concrete rating profile for the cold users based on which CF is applied to find similar users and hence generate recommendations. Consistently, we come to a conclusion that the Merge method outperforms the other approaches both in accuracy and coverage as well as a better balance between them.</p><p>To have a better view of the overall performance that each method achieves, we further compute the percentage of improvements that each method obtains comparing with the CF in terms of F1. Formally, it is computed by<ref type="foot" target="#foot_7">7</ref> :</p><formula xml:id="formula_23">Improvement ¼ Method:F1 À CF:F1 CF:F1 Â 100%<label>ð17Þ</label></formula><p>where Method refers to any one of the methods tested in our experiments except the CF approach, whose F1 performance is regarded as a reference. Hence, the greater positive changes between Method and CF, the more improvements we obtain. The results are shown in Table <ref type="table">9</ref>, where All and Cold refer to the cases of All Users and Cold Users for simplicity, respec-tively. To explain, we take two values in Table <ref type="table">9</ref> as an example, namely 21.45% and 1208.31% for our method Mergex. In the Cold case of FilmTrust, the best Merge method shown in Table <ref type="table" target="#tab_4">6</ref> is Merge3 with F1 value 0.6404, while the F1 of CF is 0.5273. Hence, the improvement is ð0:6404 À 0:5273Þ=0:5273 Ã 100% ¼ 21:45%. Similarly, in the Cold view of Flixster, Merge3 achieves F1 value 0.8190 while CF has a poor performance with 0.0626 Table <ref type="table" target="#tab_5">7</ref>), leading to the improvement ð0:8190 À 0:0626Þ=0:0626 Ã 100% ¼ 1208:31%. Other values can be explained and verified as well. Note that the value NaN indicates the improvement is not computable for the RN method in the view of Cold. This can be explained by the fact that RN cannot cope with cold users and predict item ratings (see Tables <ref type="table" target="#tab_4">6</ref><ref type="table" target="#tab_5">7</ref><ref type="table" target="#tab_6">8</ref>). A conclusion that can be drawn from the results in Table <ref type="table">9</ref> is that our method consistently outperforms the others (in term of improvement), and significantly improve the performance of traditional collaborative filtering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusion and future work</head><p>This paper proposed a novel method to incorporate trusted neighbors into traditional collaborative filtering techniques, aiming to resolve the data sparsity and cold start problems from which traditional recommender systems suffer. Specifically, the ratings of trusted neighbors were merged to complement and represent the preferences of the active users, based on which similar users can be identified and recommendations are generated. The quality of merged ratings was measured by the confidence considering the number of ratings involved and the conflicts between positive and negative opinions (i.e., ratings). The rating confidence was incorporated to compute user similarity, and hence a confidenceaware similarity measure was introduced. The prediction of a given item is generated by averaging the ratings of similar users weighted by their importance. Experiments on three real-world data sets were conducted and the results showed that significant improvements against other methods were obtained both in accuracy and coverage as well as the overall performance. Further, by propagating trust in the trust networks, even better predictive performance can be achieved. In conclusion, we proposed a new way to better integrate both trust and similarity to improve the performance of collaborative filtering.</p><p>The present work depends on the explicit trust during the merging process. However, users may not be willing to share or expose such information due to the concerns of, for example, privacy. For future work, we intend to infer implicit trust from user behaviors, and enhance the generality of the Merge method.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The distributions of trusted neighbors for the cold users.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. The trust network for a cold user u1.</figDesc><graphic coords="6,327.86,67.91,198.80,92.59" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 3</head><label>3</label><figDesc>The merged rating profile for user u1.</figDesc><table><row><cell></cell><cell>i 1</cell><cell>i 2</cell><cell>i 3</cell><cell>i 4</cell><cell>i 5</cell><cell>i 6</cell><cell>i 7</cell><cell>i 8</cell><cell>i 9</cell></row><row><cell>ru1;ij</cell><cell>4.33</cell><cell>4</cell><cell>5</cell><cell>3</cell><cell>2.73</cell><cell></cell><cell></cell><cell>1.72</cell></row><row><cell>c u1 ;ij</cell><cell>0.19</cell><cell>0.38</cell><cell>1.0</cell><cell>0.25</cell><cell>0.47</cell><cell></cell><cell></cell><cell>0.47</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 4</head><label>4</label><figDesc>The computed similarity between user u1 and others.</figDesc><table><row><cell></cell><cell>u 1</cell><cell>u 2</cell><cell>u 3</cell><cell>u 4</cell><cell>u 5</cell><cell>u 6</cell><cell>u 7</cell><cell>u 8</cell><cell>u 9</cell></row><row><cell>CPCC</cell><cell>1.0</cell><cell>0.66</cell><cell>0.995</cell><cell>0.98</cell><cell>0.84</cell><cell>À0.78</cell><cell></cell><cell>0.99</cell><cell>À0.98</cell></row><row><cell>PCC</cell><cell>1.0</cell><cell>0.87</cell><cell>0.992</cell><cell>0.91</cell><cell>0.91</cell><cell>À0.91</cell><cell></cell><cell>1.0</cell><cell>À0.95</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 5</head><label>5</label><figDesc>The specifications of three data sets.</figDesc><table><row><cell>Data set</cell><cell># Users</cell><cell># Items</cell><cell># Ratings</cell><cell># Trust</cell><cell>Sparsity (%)</cell></row><row><cell>FilmTrust</cell><cell>1986</cell><cell>2071</cell><cell>35,497</cell><cell>1853</cell><cell>98.86</cell></row><row><cell>Flixster</cell><cell>53 K</cell><cell>18 K</cell><cell>410 K</cell><cell>650 K</cell><cell>99.96</cell></row><row><cell>Epinions</cell><cell>49 K</cell><cell>139 K</cell><cell>664 K</cell><cell>478 K</cell><cell>99.95</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 6</head><label>6</label><figDesc>The predictive performance on the FilmTrust data set.</figDesc><table><row><cell>Views</cell><cell cols="4">Approaches measured by MAE, RC and F1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>CF</cell><cell>MT1</cell><cell>MT2</cell><cell>MT3</cell><cell>RN</cell><cell>TCF1</cell><cell>TCF2</cell><cell>Merge-a</cell><cell>Merge-b</cell><cell>Merge1</cell><cell>Merge2</cell><cell>Merge3</cell></row><row><cell>All</cell><cell>0.703</cell><cell>0.852</cell><cell>0.795</cell><cell>0.771</cell><cell>0.571</cell><cell>0.714</cell><cell>0.719</cell><cell>0.703</cell><cell>0.704</cell><cell>0.705</cell><cell>0.707</cell><cell>0.708</cell></row><row><cell>Users</cell><cell>93.84%</cell><cell>21.20%</cell><cell>27.96%</cell><cell>30.38%</cell><cell>0.74%</cell><cell>94.92%</cell><cell>95.19%</cell><cell>94.06%</cell><cell>94.21%</cell><cell>94.77%</cell><cell>94.94%</cell><cell>95.06%</cell></row><row><cell></cell><cell>0.8631</cell><cell>0.3312</cell><cell>0.4106</cell><cell>0.4373</cell><cell>0.0147</cell><cell>0.8658</cell><cell>0.8661</cell><cell>0.8640</cell><cell>0.8647</cell><cell>0.8667</cell><cell>0.8672</cell><cell>0.8674</cell></row><row><cell>Cold</cell><cell>0.744</cell><cell>0.853</cell><cell>0.880</cell><cell>0.819</cell><cell>NaN</cell><cell>0.751</cell><cell>0.751</cell><cell>0.737</cell><cell>0.764</cell><cell>0.768</cell><cell>0.772</cell><cell>0.768</cell></row><row><cell>Users</cell><cell>39.64%</cell><cell>17.11%</cell><cell>23.19%</cell><cell>23.85%</cell><cell>0.00%</cell><cell>39.97%</cell><cell>40.79%</cell><cell>39.80%</cell><cell>43.26%</cell><cell>53.45%</cell><cell>54.11%</cell><cell>54.28%</cell></row><row><cell></cell><cell>0.5273</cell><cell>0.2791</cell><cell>0.3541</cell><cell>0.3637</cell><cell>NaN</cell><cell>0.5298</cell><cell>0.5369</cell><cell>0.5292</cell><cell>0.5569</cell><cell>0.6345</cell><cell>0.6387</cell><cell>0.6404</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 7</head><label>7</label><figDesc>The predictive performance on the Flixster data set.</figDesc><table><row><cell>Views</cell><cell cols="4">Approaches measured by MAE, RC and F1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>CF</cell><cell>MT1</cell><cell>MT2</cell><cell>MT3</cell><cell>RN</cell><cell>TCF1</cell><cell>TCF2</cell><cell>Merge-a</cell><cell>Merge-b</cell><cell>Merge1</cell><cell>Merge2</cell><cell>Merge3</cell></row><row><cell>All</cell><cell>0.928</cell><cell>1.060</cell><cell>0.932</cell><cell>0.862</cell><cell>0.858</cell><cell>0.870</cell><cell>0.850</cell><cell>0.917</cell><cell>0.903</cell><cell>0.890</cell><cell>0.877</cell><cell>0.875</cell></row><row><cell>Users</cell><cell>68.56%</cell><cell>12.36%</cell><cell>71.37%</cell><cell>90.71%</cell><cell>0.38%</cell><cell>80.92%</cell><cell>85.23%</cell><cell>69.63%</cell><cell>82.93%</cell><cell>89.64%</cell><cell>94.39%</cell><cell>95.03%</cell></row><row><cell></cell><cell>0.7357</cell><cell>0.2128</cell><cell>0.7512</cell><cell>0.8549</cell><cell>0.0076</cell><cell>0.8079</cell><cell>0.8312</cell><cell>0.7429</cell><cell>0.8141</cell><cell>0.8467</cell><cell>0.8690</cell><cell>0.8720</cell></row><row><cell>Cold</cell><cell>1.153</cell><cell>1.127</cell><cell>1.005</cell><cell>0.934</cell><cell>NaN</cell><cell>1.047</cell><cell>0.923</cell><cell>1.147</cell><cell>1.018</cell><cell>1.008</cell><cell>0.960</cell><cell>0.949</cell></row><row><cell>Users</cell><cell>3.27%</cell><cell>8.11%</cell><cell>52.69%</cell><cell>79.55%</cell><cell>0.00%</cell><cell>12.97%</cell><cell>21.41%</cell><cell>3.30%</cell><cell>41.57%</cell><cell>63.08%</cell><cell>83.13%</cell><cell>85.15%</cell></row><row><cell></cell><cell>0.0626</cell><cell>0.1464</cell><cell>0.6279</cell><cell>0.7939</cell><cell>NaN</cell><cell>0.2219</cell><cell>0.3373</cell><cell>0.0632</cell><cell>0.5409</cell><cell>0.6959</cell><cell>0.8083</cell><cell>0.8190</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 8</head><label>8</label><figDesc>The predictive performance on the Epinions data set. The performance in the view of Cold Users on three data sets.</figDesc><table><row><cell>Views</cell><cell cols="4">Approaches measured by MAE, RC and F1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>CF</cell><cell>MT1</cell><cell>MT2</cell><cell>MT3</cell><cell>RN</cell><cell>TCF1</cell><cell>TCF2</cell><cell>Merge-a</cell><cell>Merge-b</cell><cell>Merge1</cell><cell>Merge2</cell><cell>Merge3</cell></row><row><cell>All</cell><cell>0.876</cell><cell>0.845</cell><cell>0.852</cell><cell>0.832</cell><cell>0.673</cell><cell>0.867</cell><cell>0.864</cell><cell>0.851</cell><cell>0.841</cell><cell>0.839</cell><cell>0.824</cell><cell>0.820</cell></row><row><cell>Users</cell><cell>51.24%</cell><cell>26.34%</cell><cell>57.64%</cell><cell>71.68%</cell><cell>9.87%</cell><cell>70.28%</cell><cell>77.48%</cell><cell>59.72%</cell><cell>68.61%</cell><cell>73.35%</cell><cell>78.50%</cell><cell>80.02%</cell></row><row><cell></cell><cell>0.6188</cell><cell>0.3949</cell><cell>0.6654</cell><cell>0.7525</cell><cell>0.1765</cell><cell>0.7409</cell><cell>0.7794</cell><cell>0.6792</cell><cell>0.7343</cell><cell>0.7608</cell><cell>0.7895</cell><cell>0.7976</cell></row><row><cell>Cold</cell><cell>1.033</cell><cell>0.756</cell><cell>0.916</cell><cell>0.890</cell><cell>NaN</cell><cell>0.982</cell><cell>0.941</cell><cell>1.038</cell><cell>0.913</cell><cell>0.898</cell><cell>0.876</cell><cell>0.867</cell></row><row><cell>Users</cell><cell>3.22%</cell><cell>6.57%</cell><cell>22.06%</cell><cell>41.73%</cell><cell>0.00%</cell><cell>7.16%</cell><cell>10.45%</cell><cell>3.37%</cell><cell>18.62%</cell><cell>34.49%</cell><cell>49.59%</cell><cell>52.66%</cell></row><row><cell></cell><cell>0.0617</cell><cell>0.1216</cell><cell>0.3431</cell><cell>0.5431</cell><cell>NaN</cell><cell>0.1308</cell><cell>0.1839</cell><cell>0.0644</cell><cell>0.3000</cell><cell>0.4774</cell><cell>0.6066</cell><cell>0.6298</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Fig. 3.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The same setting is used in<ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b3">4]</ref>. Better performance may be achieved by setting d 6 6 and searching in a longer distance in the trust networks.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>G. Guo et al. / Knowledge-Based Systems 57 (2014) 57-68</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>http://trust.mindswap.org/FilmTrust/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>http://www.flixster.com/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>http://www.epinions.com/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_5"><p>http://www.cs.sfu.ca/sja25/personal/datasets/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_6"><p>http://www.trustlet.org/datasets/downloaded_epinions.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_7"><p>The formula can be referred to as the relative change defined in http:// en.wikipedia.org/wiki/Relative_change_and_difference.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Toward the next generation of recommender systems: a survey of the state-of-the-art and possible extensions</title>
		<author>
			<persName><forename type="first">G</forename><surname>Adomavicius</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Tuzhilin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Knowl. Data Eng</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="734" to="749" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">K</forename><surname>Jøsang Audun</surname></persName>
		</author>
		<author>
			<persName><surname>Walter Quattrochicchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Trust Management V</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="312" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Lessons from the netflix prize challenge</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGKDD Explor. Newsl</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="75" to="79" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Trust-based infinitesimals for enhanced collaborative filtering</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Thomo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Wadge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th International Conference on Management of Data</title>
		<meeting>the 15th International Conference on Management of Data</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A wiki instance in the enterprise: opportunities, concerns and reality</title>
		<author>
			<persName><forename type="first">C</forename><surname>Danis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2008 ACM Conference on Computer Supported Cooperative Work</title>
		<meeting>the 2008 ACM Conference on Computer Supported Cooperative Work</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="495" to="504" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">De</forename><surname>Rosa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cantrell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Havens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hawk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jenkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gauder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Limes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cellentani</surname></persName>
		</author>
		<author>
			<persName><surname>Oclc</surname></persName>
		</author>
		<author>
			<persName><surname>Sharing</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
	<note>Privacy and Trust in Our Networked World: A Report to the OCLC Membership, OCLC</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><surname>Diaz-Aviles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Drumond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Schmidt-Thieme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Nejdl</surname></persName>
		</author>
		<title level="m">Proceedings of the 6th ACM Conference on Recommender Systems</title>
		<meeting>the 6th ACM Conference on Recommender Systems</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="59" to="66" />
		</imprint>
	</monogr>
	<note>Real-time top-n recommendation in social streams</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Computing and Applying Trust in Web-Based Social Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Golbeck</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Dynamic Recommender System: Using Cluster-Based Biases to Improve the Accuracy of the Predictions</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gueye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Abdessalem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Naacke</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1212.0763</idno>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A simple but effective method to incorporate trusted neighbors in recommender systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Thalmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th International Conference on User Modeling, Adaptation and Personalization</title>
		<meeting>the 20th International Conference on User Modeling, Adaptation and Personalization</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="114" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A novel bayesian similarity measure for recommender systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Yorke-Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd International Joint Conference on Artificial Intelligence</title>
		<meeting>the 23rd International Joint Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Do you know?: recommending people to invite into your social network</title>
		<author>
			<persName><forename type="first">I</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Ronen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wilcox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Intelligent User Interfaces</title>
		<meeting>the 14th International Conference on Intelligent User Interfaces</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="77" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Hybridising collaborative filtering and trust-aware recommender systems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Haydar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Boyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roussanaly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of hte 8th International Conference on Web Information Systems and Technologies</title>
		<meeting>hte 8th International Conference on Web Information Systems and Technologies</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Using trust in collaborative filtering recommendation</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">P</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New Trends in Applied Artificial Intelligence</title>
		<imprint>
			<biblScope unit="page" from="1052" to="1060" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Trustwalker: a random walk model for combining trustbased and item-based recommendation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jamali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ester</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 15th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="397" to="406" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A matrix factorization technique with trust propagation for recommendation in social networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jamali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ester</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the fourth ACM conference on Recommender systems</title>
		<meeting>the fourth ACM conference on Recommender systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Recommender systems in computer science and information systems-a landscape of research, E-Commerce Web Technol</title>
		<author>
			<persName><forename type="first">D</forename><surname>Jannach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zanker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gröning</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="76" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Inspectability and control in social recommenders</title>
		<author>
			<persName><forename type="first">B</forename><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Odonovan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bostandjiev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kobsa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th ACM Conference on Recommender Systems</title>
		<meeting>the 6th ACM Conference on Recommender Systems</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">On social networks and collaborative recommendation</title>
		<author>
			<persName><forename type="first">I</forename><surname>Konstas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Stathopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd International ACM SIGIR Conference on Research and Development in Information Retrieval</title>
		<meeting>the 32nd International ACM SIGIR Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="195" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Matrix factorization techniques for recommender systems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Volinsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="30" to="37" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A cascade-hybrid music recommender system for mobile services based on musical genre classification and personality diagnosis</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Lampropoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">S</forename><surname>Lampropoulou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Tsihrintzis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Multimedia Tools Appl</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="241" to="258" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><surname>Lathia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hailes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Capra</surname></persName>
		</author>
		<title level="m">Trust-based collaborative filtering</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="119" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Use of social network information to enhance collaborative filtering performance</title>
		<author>
			<persName><forename type="first">F</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Syst. Appl</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="4772" to="4778" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Learning to recommend with social trust ensemble</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lyu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd International ACM SIGIR Conference on Research and Development in Information Retrieval</title>
		<meeting>the 32nd International ACM SIGIR Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="203" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Trust-aware recommender systems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Massa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Avesani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2007 ACM Conference on Recommender Systems</title>
		<meeting>the 2007 ACM Conference on Recommender Systems</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="17" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Trust in recommender systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>O'donovan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Smyth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th International Conference on Intelligent User Interfaces</title>
		<meeting>the 10th International Conference on Intelligent User Interfaces</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="167" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Improving prediction accuracy in trust-aware recommender systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mahanti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd Hawaii International Conference on System Sciences</title>
		<meeting>the 43rd Hawaii International Conference on System Sciences</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Bayesian credibility modeling for personalized recommendation in participatory media</title>
		<author>
			<persName><forename type="first">A</forename><surname>Seth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on User Modeling, Adaptation, and Personalization</title>
		<meeting>the International Conference on User Modeling, Adaptation, and Personalization</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="279" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A hybrid trust-enhanced collaborative filtering recommendation approach for personalized government-to-business eservices</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Shambour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Intell. Syst</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="814" to="843" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A trust-semantic fusion-based recommendation approach for e-business applications</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Shambour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Decis. Support Syst</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="768" to="780" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Optimizing map for top-n context-aware recommendation</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karatzoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Baltrunas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hanjalic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Oliver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tfmap</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th International ACM SIGIR Conference on Research and Development in Information Retrieval</title>
		<meeting>the 35th International ACM SIGIR Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="155" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">How far are we in trust-aware recommendation?</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hanjalic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 33rd European Conference on Advances in Information Retrieval</title>
		<meeting>the 33rd European Conference on Advances in Information Retrieval</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="704" to="707" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">there is a correlation: from social networks to personal behavior on the web</title>
		<author>
			<persName><forename type="first">P</forename><surname>Singla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yes</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th International Conference on World Wide Web</title>
		<meeting>the 17th International Conference on World Wide Web</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="655" to="664" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Trust-and distrust-based recommendations for controversial reviews</title>
		<author>
			<persName><forename type="first">P</forename><surname>Victor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Cornelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>De Cock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Teredesai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 International Conference on Web Science</title>
		<meeting>the 2009 International Conference on Web Science</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page">5</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Formal trust model for multiagent systems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th International Joint Conference on Artificial Intelligence</title>
		<meeting>the 20th International Joint Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="1551" to="1556" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Watts</surname></persName>
		</author>
		<title level="m">Six Degrees: The Science of A Connected Age</title>
		<imprint>
			<publisher>WW Norton</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Scalable collaborative filtering using cluster-based smoothing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Xue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 28th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval</title>
		<meeting>the 28th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="114" to="121" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Augmenting collaborative recommender by fusing explicit social relationships</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Workshop on Recommender Systems and the Social Web</title>
		<meeting>Workshop on Recommender Systems and the Social Web</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="49" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Makedon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Learning from Incomplete Ratings Using Non-Negative Matrix Factorization</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">The state-of-the-art in personalized recommender systems for social networking</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Josang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Cox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell. Rev</title>
		<imprint>
			<biblScope unit="page" from="1" to="14" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Analyzing correlation between trust and user similarity in online communities</title>
		<author>
			<persName><forename type="first">C</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lausen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trust Management</title>
		<imprint>
			<biblScope unit="page" from="251" to="265" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
