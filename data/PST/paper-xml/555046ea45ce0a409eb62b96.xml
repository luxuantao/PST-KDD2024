<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">FireFly: A Reconfigurable Wireless Data Center Fabric Using Free-Space Optics</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Navid</forename><surname>Hamedazimi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zafar</forename><surname>Qazi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Himanshu</forename><surname>Gupta</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Vyas</forename><surname>Sekar</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Samir</forename><forename type="middle">R</forename><surname>Das</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jon</forename><forename type="middle">P</forename><surname>Longtin</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Himanshu</forename><surname>Shah</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ashish</forename><surname>Tanwer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">SIGCOMM&apos;14</orgName>
								<address>
									<addrLine>August 17-22</addrLine>
									<postCode>2014</postCode>
									<settlement>Chicago</settlement>
									<region>IL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">FireFly: A Reconfigurable Wireless Data Center Fabric Using Free-Space Optics</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">071F53CBCB845BA14254EFCFEC403415</idno>
					<idno type="DOI">10.1145/2619239.2626328</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:10+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.1 [Computer-Communication Networks]: Network Architecture and Design Data Centers</term>
					<term>Free-Space Optics</term>
					<term>Reconfigurablility</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Conventional static datacenter (DC) network designs offer extreme cost vs. performance tradeoffs-simple leaf-spine networks are costeffective but oversubscribed, while "fat tree"-like solutions offer good worst-case performance but are expensive. Recent results make a promising case for augmenting an oversubscribed network with reconfigurable inter-rack wireless or optical links. Inspired by the promise of reconfigurability, this paper presents FireFly, an inter-rack network solution that pushes DC network design to the extreme on three key fronts: (1) all links are reconfigurable; (2) all links are wireless; and (3) non top-of-rack switches are eliminated altogether. This vision, if realized, can offer significant benefits in terms of increased flexibility, reduced equipment cost, and minimal cabling complexity. In order to achieve this vision, we need to look beyond traditional RF wireless solutions due to their interference footprint which limits range and data rates. Thus, we make the case for using free-space optics (FSO). We demonstrate the viability of this architecture by (a) building a proof-of-concept prototype of a steerable small form factor FSO device using commodity components and (b) developing practical heuristics to address algorithmic and system-level challenges in network design and management.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A robust data center (DC) network must satisfy several goals: high throughput <ref type="bibr" target="#b9">[13,</ref><ref type="bibr" target="#b19">23]</ref>, low equipment and management cost <ref type="bibr" target="#b9">[13,</ref><ref type="bibr" target="#b36">40]</ref>, robustness to dynamic traffic patterns <ref type="bibr" target="#b10">[14,</ref><ref type="bibr" target="#b22">26,</ref><ref type="bibr" target="#b44">48,</ref><ref type="bibr" target="#b48">52]</ref>, incremental expandability <ref type="bibr" target="#b14">[18,</ref><ref type="bibr" target="#b41">45]</ref>, low cabling complexity <ref type="bibr" target="#b33">[37]</ref>, and low power and cooling costs. With respect to cost and performance, conventional designs are either (i) overprovisioned to account for worst-case traffic patterns, and thus incur high cost (e.g., fat-trees or Clos networks <ref type="bibr" target="#b9">[13,</ref><ref type="bibr" target="#b12">16,</ref><ref type="bibr" target="#b19">23]</ref>), or (ii) oversubscribed (e.g., simple trees or leaf-spine architectures <ref type="bibr" target="#b0">[1]</ref>) which incur low cost but offer poor performance due to congested links.  Recent work suggests a promising middleground that augments an oversubscribed network with a few reconfigurable links, using either 60 Ghz RF wireless <ref type="bibr" target="#b22">[26,</ref><ref type="bibr" target="#b48">52]</ref> or optical switches <ref type="bibr" target="#b44">[48]</ref>. Inspired by the promise of these flexible DC designs, <ref type="foot" target="#foot_0">1</ref> we envision a radically different DC architecture that pushes the network design to the logical extreme on three dimensions: (1) All inter-rack links are flexible; (2) All inter-rack links are wireless; and (3) we get rid of the core switching backbone.</p><p>This extreme vision, if realized, promises unprecedented qualitative and quantitative benefits for DC networks. First, it can reduce infrastructure cost without compromising on performance. Second, flexibility increases the effective operating capacity and can improve application performance by alleviating transient congestion. Third, it unburdens DC operators from dealing with cabling complexity and its attendant overheads (e.g., obstructed cooling) <ref type="bibr" target="#b33">[37]</ref>. Fourth, it can enable DC operators to experiment with, and benefit from, new topology structures that would otherwise remain unrealizable due to cabling costs. Finally, flexibly turning links on or off can take us closer to the vision of energy proportionality (e.g., <ref type="bibr" target="#b25">[29]</ref>).</p><p>This paper describes FireFly,<ref type="foot" target="#foot_1">2</ref> a first but significant step toward realizing this vision. Figure <ref type="figure" target="#fig_1">1</ref> shows a high-level overview of Fire-Fly. Each ToR is equipped with reconfigurable wireless links which can connect to other ToR switches. However, we need to look beyond traditional radio-frequency (RF) wireless solutions (e.g., 60GHz) as their interference characteristics limit range and capacity. Thus, we envision a new use-case for Free-Space Optical communications (FSO) as it can offer high data rates (tens of Gbps) over long ranges using low transmission power and with zero interference <ref type="bibr" target="#b27">[31]</ref>. The centralized FireFly controller reconfigures the topology and forwarding rules to adapt to changing traffic patterns.</p><p>While prior work made the case for using FSO links in DCs <ref type="bibr" target="#b15">[19,</ref><ref type="bibr" target="#b24">28]</ref>, these fail to establish a viable hardware design and also do not address practical network design and management challenges that arise in reconfigurable designs. Our work bridges this gap along three dimensions:</p><p>• Practical steerable FSO devices ( §3): Commodity FSO designs are bulky, power hungry, and offer fixed point-to-point links. Our vision imposes new form-factor, cost, and steerability requirements which are fundamentally different w.r.t. traditional FSO use-cases. To this end, we establish the viability for a small-form factor FSO design using commodity optical devices. We demonstrate two promising steering technologies using switchable mirrors <ref type="bibr">[4]</ref> and Galvo mirrors <ref type="bibr" target="#b1">[2]</ref>. • Network provisioning ( §4): Given the budget and physical constraints, the FireFly network hardware must be provisioned to handle unforeseen traffic patterns. We argue that flexible network designs should strive to optimize a new notion of dynamic bisection bandwidth. While it is hard to analytically reason about topologies that optimize this metric, we show that random regular graphs are surprisingly good in practice. • Network management ( §5, §6): The FireFly controller needs fast and efficient topology selection and traffic engineering algorithms to adapt to changing traffic conditions. However, state-of-art off-the-shelf solvers fail to scale beyond 32-rack DCs. Thus, we develop fast heuristics that achieve near-optimal performance ( §5). In addition, the FireFly controller must ensure that performance is not adversely impacted during reconfigurations. We design simple but effective mechanisms that ensure that the network always remains connected, there are no black holes, and that the per-packet latency is bounded.</p><p>We evaluate our FSO prototype using a range of controlled lab experiments and a longitudinal study in a real DC setting. We find that the links are robust to real environmental disturbances and achieve wireline-equivalent throughput, and the steering mechanisms are fast, precise, and accurate. We evaluate the end-to-end performance of FireFly using a combination of detailed packetlevel simulations [3], large scale flow-level simulations, and virtual emulation platforms <ref type="bibr">[7]</ref>. We compare FireFly against state-of-art augmented designs and overprovisioned DC architectures. Overall, we find that FireFly can achieve performance close to a full bisection bandwidth network but at 40-60% of the cost.</p><p>We acknowledge that there are several operational concerns, especially related to maintenance, reliability, and reluctance of operators to adopt dynamic network designs. (We discuss some of these in §9). We also note that other cost factors may dominate deployment considerations; e.g., server vs. network vs. management costs. In spite of these valid concerns, we believe that there is value in exploring an FSO-based all-wireless design since it could lead to unprecedented benefits. In particular, pursuing such a vision could open up other avenues amenable to more incremental adoption (e.g., hybrid/augmented networks) and inspire other novel use cases for FSO in DCs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Motivation and Overview</head><p>We begin with motivating key aspects of our vision: full flexibility, wireless links, and use of free-space optics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Case for Full Flexibility</head><p>A key intuition behind FireFly's design is that a fully-flexible interrack network can yield near-optimal bisection bandwidth even without any core (non-ToR) switches.</p><p>To provide the basis for this intuition, we consider an abstract model of a DC network with n racks (and hence n ToR switches). We consider two abstract DC designs: (a) FBB: a full-bisection bandwidth network, and (b) Flexible(f ): an architecture with only ToR switches, each of which has f flexible ports that can be rewired, whenever needed, to connect to another ToR switch. (The flexible ports are in addition to the ports connected to the servers.)</p><p>The performance metric of interest here is the evacuation time of satisfying the demands in a given inter-rack traffic matrix. Computing evacuation time for FBB is straightforward as there is no congestion. For Flexible(f ) too, we can compute evacuation time by computing a near-optimal sequence of reconfigurations (see <ref type="bibr" target="#b23">[27]</ref> for details). Note that, for a given traffic matrix, Flexible(f ) can reconfigure the topology multiple times; we restrict the number of reconfigurations to be at most the number of non-zero entries in the given traffic matrix.</p><p>In Figure <ref type="figure" target="#fig_2">2</ref>, we plot the normalized performance and cost of Flexible(f ) w.r.t. FBB, for varying ratio of number of flexible ports and number of servers on each rack. Here, we model the cost as simply a (constant) multiple of the total number of ports in the architecture. The normalized performance is the average ratio of evacuation times of the two architectures, over many random traffic matrices. The key takeaway is that the coreless fully-flexible Flexible(f ) architecture yields near-optimal performance when the number of flexible ports (f ) is equal to the number of servers per rack, and at this point, its cost is only 40% of FBB (assuming FBB to be a complete FatTree <ref type="bibr" target="#b9">[13]</ref>). We note that this result is independent of the number of racks or the number of servers per rack. <ref type="foot" target="#foot_2">3</ref>Of course, any actual realization of Flexible(f ) will be less optimal because of limited flexibility, non-zero reconfiguration latency, and other system inefficiencies. We show that our instantiation of Flexible(f ) via FireFly results in only a minimal degradation in this cost-performance tradeoff.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Case for Wireless via Free-Space Optics</head><p>To realize a Flexible(f )-like network, conceptually we need a "patchpanel" between racks. Of course, this is infeasible on several fronts: (1) it requires very high fanout and backplane capacity (potentially nullifying the cost benefits), (2) the cabling complexity would be high <ref type="bibr" target="#b33">[37]</ref>, and (3) it introduces a single-point of failure <ref type="bibr" target="#b10">[14,</ref><ref type="bibr" target="#b16">20]</ref>. Thus, we look toward reconfigurable wireless links between the ToR switches.</p><p>The seemingly natural solution is RF-based wireless (e.g., 60GHz) <ref type="bibr" target="#b22">[26,</ref><ref type="bibr" target="#b48">52]</ref>. However, since we seek to remove the wired core entirely rather than just augment it, we need a large number of highbandwidth links to be active simultaneously. This makes the interference management problem much more challenging than prior work (e.g., using interference alignment and cancellation <ref type="bibr" target="#b18">[22]</ref>). Alternatively, one could eliminate interference by enabling laser-like directionality in RF links, but this would require antennas or antenna arrays that are a few meters wide <ref type="bibr" target="#b35">[39]</ref>. <ref type="foot" target="#foot_3">4</ref> Fundamentally, the hardness here is due to the large wavelengths of RF for commonly used RF bands. Finally, regulations over RF bandwidth and transmit power further limit achievable data rates.</p><p>These limitations can be circumvented if we use a different part of the EM spectrum with much smaller wavelengths. In particular, free-space optics (FSO) is a relatively established technology 5  that uses modulated visible or infrared (IR) laser beams transmitted through free space <ref type="bibr" target="#b27">[31]</ref>. Laser beams can be very narrow, thus automatically eliminating interference and minimizing path loss. Further, optical spectrum is unregulated and has no bandwidth limitations. Thus, FSO links can easily offer Gbps-Tbps bitrates at long distances (several kms) using relatively low transmit power <ref type="bibr" target="#b11">[15,</ref><ref type="bibr" target="#b27">31]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">FireFly System Overview</head><p>Building on the previous insights, FireFly uses a fully-flexible interrack fabric enabled by wireless FSO links (Figure <ref type="figure" target="#fig_1">1</ref>). FireFly uses traditional wires for intra-rack connections. We assume an out-ofband control network to configure the ToR switches and the FSO devices (e.g., <ref type="bibr" target="#b4">[8]</ref>).</p><p>FSO Links. Each ToR is equipped with a number of steerable FSO devices. We assume that the FSO devices export APIs to the controller for reconfiguration. We exploit the space above the racks to establish an obstruction-free optical path. To ensure that the FSO devices do not obstruct each other, we use ceiling mirrors <ref type="bibr" target="#b48">[52]</ref> as shown in Figure <ref type="figure" target="#fig_1">1</ref>. The requirements of such mirrors are quite minimal so long as they reflect IR and many conventional mirrors work sufficiently well ( §3). The ceiling mirror need not be a single piece, and small unevenness in the mirrors is unlikely to be an issue due to the misalignment tolerance of the FSO links ( §3.1). Network Provisioning. In the limit, we would like to have a very large number of FSO devices per ToR. In practice, however, there are physical and geometric constraints. For instance, FSO devices will have a finite size that constrains the number of such devices per ToR. Thus, we need to provision or preconfigure the network so that it is robust to future (and unforeseen) traffic patterns.</p><p>Network Management. The FireFly controller dynamically selects the runtime topology and configures forwarding paths, based on prevailing traffic demands and events. Following prior work, we leverage software-defined networking (SDN) capabilities for data plane reconfiguration <ref type="bibr" target="#b8">[12,</ref><ref type="bibr" target="#b13">17,</ref><ref type="bibr" target="#b34">38]</ref>. Each SDN-capable ToR switch also reports observed traffic demands to the controller. FireFly can use other demand estimation algorithms; e.g., host buffer sizes <ref type="bibr" target="#b8">[12]</ref> or new switch features <ref type="bibr" target="#b13">[17]</ref>. Since our focus is on FireFly-specific aspects, we do not discuss these extensions.</p><p>In the following sections, we describe the design of a viable steerable FSO link, network preconfiguration, and run-time network management.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Practical Steerable FSO Design</head><p>In order for the FireFly vision to deployed in a DC, the FSO devices must ideally have a small form factor (e.g., so we can pack several devices on each ToR), be low-cost commodity devices (e.g., as we envision thousands of these in a DC), with low power footprint relative to switches, and be steerable to enable flexibility.</p><p>At first glance, these requirements are at odds with the trajectory of today's commercial FSO devices-they are bulky, expen-sive, and power-intensive <ref type="bibr" target="#b2">[5]</ref>. The main challenge is that achieving robust links at high data-rates and long ranges (a requirement in both traditional deployments and FireFly) is hard. It has typically required powerful lasers and expensive mechanisms for dynamic alignment for outdoor use. Furthermore, conventional FSO deployments provide fixed point-to-point links and do not focus on steerability.</p><p>In this section, we demonstrate (perhaps surprisingly) that (a) it is viable to repurpose commodity DC-centric optical networking gear to establish robust and sufficiently long FSO links in a DC, and (b) we can leverage existing commodity optical technologies to steer the FSO beam with high precision and low latency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">FSO Link Engineering</head><p>As a first step, we demonstrate that it is possible to engineer an FSO optical link using commodity DC-grade optical networking equipment that can achieve high data rates, at ranges sufficient for DC-scale deployment, and with sufficient (mis)alignment tolerance. In particular, we can avoid the additional overheads in commercial FSO devices as concerns about outdoor environmental factors largely disappear in the indoor controlled DC setting. However, we do need to carefully design the optical path to balance the tradeoff between the laser beam divergence and misalignment tolerance, as we discuss below.</p><p>We engineer the FSO system by coupling two optical fiber end points directly with a free-space link without any opto-electric conversion thus saving on both power and cost. This Fiber-FSO-Fiber link connects to standard optical interconnect technology widely used in DCs (e.g., 10GBASE-SR). A typical example of this interface is optical SFP (small form-factor pluggable) or its variants such as SFP+.</p><p>This approach requires optical designs on both ends: (i) on the transmit side, where the fiber 'launches' the laser beam in free space, and (ii) on the receive side, where the laser beam is received into the fiber (Figure <ref type="figure" target="#fig_4">3(a)</ref>). Normally, when the laser beam comes out of the fiber into free space it diverges with a significantly large angle. To minimize divergence, we collimate the beam using a suitably designed lens located at its focal length from the transmitting fiber endpoint. <ref type="foot" target="#foot_5">6</ref> A similar lens near the receiving fiber end point focuses the beam back to the fiber.</p><p>The above optical design is done carefully to ensure that the laser beam maintains a sufficient width <ref type="bibr" target="#b42">[46]</ref> so that it can tolerate minor misalignments due to rack vibrations and other effects. However, this presents a tradeoff: wider beams can tolerate misalignments better, but suffer from a poorer power density at the receiving end. The design we develop shows that a good balance is indeed possible using optical SFPs used for long range fiber communications (e.g., 10GBASE-LR can go up to 10 km). They use highly sensitive detectors that can work with very little received power. Our current prototype has been tested for 20m. (20m is a limitation of our lab set up; the general design can extend to 100 m <ref type="bibr" target="#b23">[27]</ref>.)</p><p>This approach satisfies all the design requirements except steering. The lens is small (about 3 cm diameter) with focal length about the same. Even considering additional hardware (e.g., mounts or adapters), the footprint of the assembly is only 5 cm across. The costs are also modest when procured in volume: ≈ $50 for the lens and $50 for the assembly. We acknowledge that there might be an additional cost of using optical SFP (≈$100), if optical wired links are not already used. Finally, there is no additional power burden  beyond the SFP power consumption as the design does not add any new opto-electronic conversion.</p><p>Prototype. We have developed a proof-of-concept prototype following the above design. We have successfully used both 1 Gbps and 10 Gbps links with very similar optical setups. The prototype links use 1000BASE-LX (1GBASE-LR) SFP (SFP+) for the 1 Gbps (10 Gbps) case and multi-mode fibers for their larger diameter. We first use standard optical bench set up to validate the design using controlled experiments and then test the link in a production DC. Figure <ref type="figure" target="#fig_4">3</ref>(a) shows the general setup. <ref type="foot" target="#foot_6">7</ref> For the current design the collimated laser beam maintains a ≈4 mm diameter after it converges. To get up to a 20 m length on a small optical bench, we use a standard technique used in optics: the beam path is reflected multiple times via mirrors. This also validates use of mirrors on the optical path and shows that optical loss due to reflections is low.</p><p>Link Performance. We test the link by running continuous TCP transfers over the FSO link for several days at a time for several selected link lengths with the set up on the optical bench. The results are very similar for different lengths. For brevity we only report the results for the longest tested case (≈20m) for the 10 Gbps link. See Figure <ref type="figure" target="#fig_4">3(c</ref>). Note that the distribution of TCP throughputs is almost identical to that observed over regular fiber links, demonstrating no additional loss in the FSO links. To study misalignment tolerance, we shift the transmit side set up in tiny incremental steps (using a translating mount) perpendicular to the beam axis keeping the receive side fixed. We see no throughput loss until 6 mm shift, beyond which the link becomes unstable. As we will see below, this 6 mm tolerance is sufficient to handle minor misalignments due to rack vibrations and environmental issues in a DC. To understand the link performance "in the wild," we set up the link in a production (university run) DC environment. Unlike the optical bench, this real environment has several key differences that can produce mis-alignments: (1) racks experience vibrations due to several factors (e.g., server fans, discs, HVAC and UPS units <ref type="bibr" target="#b43">[47]</ref>) and (2) the beam could 'wander' due to fluctuating air density caused by temperature variations. We set up the FSO link with the optical components placed on top of the rack using magnetic bases. Two racks are used at ≈20 m apart. See Figure <ref type="figure" target="#fig_4">3(b)</ref>. We use mirrors on the beam path -one on each end -for ease of alignment. The reader can view these mirrors as proxies for mirrors to be used in steering (next subsection). Alignment is done manually with the help of an infra-red viewer (more on this in §9). The TCP transfer experiment is run continuously over several days as before. The statistics of per-sec TCP throughput is almost identical again to the optical bench and wired cases (Figure <ref type="figure" target="#fig_4">3(c)</ref>). This establishes the potential of our design. The average TCP throughput is ≈ 9.3 Gbps -note that no commodity RF technology exists in small-form factor that can deliver such throughput at 20 m range.</p><p>The above design provides a basis for a low-cost, commoditizable, and small-form factor FSO link at high data rates over ranges sufficient for DC scale. Our experiments suggest that the link is likely robust to realistic (mis)alignment concerns due to environmental effects in DCs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Developing Steering Mechanisms</head><p>Having established the viability of a point-to-point FSO link using commodity optics, next we focus on making the beam steerable to enable flexibility. Our goal is to establish a design roadmap that is commoditizable. We explore two promising solutions: switchable mirrors and Galvo mirrors. We do not claim these are optimal in any sense or that these are the only alternatives. Our choice is pragmatic in that we want to establish a feasible roadmap using offthe-shelf components. (There are a variety of other beam steering approaches <ref type="bibr" target="#b31">[35]</ref>, but they are not off-the-shelf technologies.) Both solutions offer different tradeoffs w.r.t. latency, degree of flexibility, and cost/power, and at this time, no one solution is strictly better. Thus, we believe it is instructive to understand and evaluate the promise of both alternatives and the tradeoffs they offer. Switchable Mirrors (SMs). Switchable mirrors (SM) are made from a special liquid crystal material that can be electrically controlled to rapidly switch between reflection (mirror) and transparent (glass) states at millisecond timescales <ref type="bibr">[4]</ref>. While the intended use cases are different (e.g., rear-view mirrors that switch between a regular mirror and a back-up camera display), we can use them for beam steering as shown Figure <ref type="figure">4(a)</ref>.</p><p>Each FSO device has multiple SMs, with each SM aligned (during a pre-configuration step as discussed in §4) to target a point on a ceiling mirror and thus, a receiving FSO. The link is established by switching one of the SMs to the mirror state, while leaving the rest in the transparent state. (This is done at both ends, but we only show transmit side for clarity.)</p><p>SMs directly satisfy our design requirements. It can be miniaturized as it only needs to be slightly larger than the beam diameter: 1 cm 2 is sufficient. A SM of this size is expected to have low cost (&lt; $5) at volume <ref type="bibr" target="#b29">[33]</ref>. Power consumption is also low: only 40 mW for the stated size <ref type="bibr">[4]</ref>. We have evaluated the reconfigu- ration latency using an off-the-shelf 12" x 15" SM [4], and it is ≈250 msec. The switching latency decreases with the decrease in the surface area, and is estimated <ref type="bibr" target="#b29">[33]</ref> to be ≈10-20 msec latency for the 1 cm 2 SM size we envision.</p><p>Galvo Mirrors (GMs). Galvo mirrors (GMs) <ref type="bibr" target="#b1">[2]</ref> are typically used in laser scanning applications. Here, a small mirror, few mm across, rotates (up to specific angular limits) around an axis on the plane of the mirror in response to an electrical signal. The laser beam is made to reflect from this mirror. The mirror rotation deflects the reflected beam by a specified angle depending on the signal. Using a pair of such mirrors at right angles, we can steer the beam within a desired rectangular cone. In our context, equipping an FSO device with a GM enables us to target any receiver within a pre-configured rectangular cone chosen offline. See Figure <ref type="figure">4(b)</ref>.</p><p>As proof of concept, we evaluate the response parameters of GMs using an off-the-shelf GM <ref type="bibr" target="#b6">[10]</ref> using the setup shown in Figure 4(b). The mirror rotation is controlled programmatically changing the applied voltage. Here, two detectors receive the reflected beam from the mirror alternately as the mirror is fed by a square wave (100 Hz) from a function generator. We measure the time between the instant the voltage trigger is initiated (via the square wave generator) and the time the mirror settles to its new position. Figure <ref type="figure">4</ref>(c) shows that the steering latency is linear w.r.t. the steering angle and ≤ 0.5 ms even for angles up to about ±20 • . We measured the pointing error to be ≤ 10 µrad, which translates into ≈1 mm positioning error at 100 m, which is well within the 6 mm tolerance of the FSO link.</p><p>The GM is inexpensive (≈$100) and small (few inches across). But, off-the-shelf GMs have a somewhat higher average power consumption (7 W measured) due to the use of an electro-mechanical system. That said, MEMS-based scanning mirrors that provide the same functionality as GMs are already being commoditized <ref type="bibr" target="#b3">[6]</ref> and can reduce the power to a few milliWatts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Design Summary</head><p>In summary, the device roadmap we outlined will have: (1) a rough form factor of 3"x6"; (2) a range of ≈100m and a misalignment tolerance of 6mm; (3) a power footprint of 3W (most of this is in SFP, assuming MEMS-based GMs); and (4) an estimated per-port cost of $300 ($100 for the SFP and $200 for the FSO+steering when produced in volume). The two steering mechanisms impose different constraints and tradeoffs for the FireFly network design (discussed in §4). In particular, having k SMs at an FSO can switch the FSO beam between a set of k arbitrarily chosen but pre-aligned receivers, while a GM on an FSO can steer the beam to any receiver within the coverage-cone that the GM has been pre-oriented to target. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Network Preconfiguration</head><p>At a high level, there are two network design problems in FireFly that occur at different timescales:</p><p>• First, we need to provision the network hardware (e.g., how many FSOs) and also pre-align/pre-orient the SMs/GM at each FSO. This is done offline in a pre-configuration phase. • Second, given a pre-configured network, we need to reconfigure the network in near real-time to implement a runtime topology suited for the current traffic.</p><p>We address the first problem of preconfiguration in this section, and defer the second problem to the next section. Ideally, we want to create a dense preconfigured network by placing a large number of FSO devices on each rack, with each FSO device equipped with several SMs or high-coverage GMs. In practice, we have physical limitations, e.g., the size/cost of the FSO devices, size of SM, angle of GMs etc. Our goal is to design a high performance DC network working within these size and cost constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Preliminaries and Objective</head><p>Consider a FireFly network, i.e., a set of FSOs on each rack with pre-aligned SMs or pre-oriented GMs. We can establish a candidate (bi-directional) link between a pair of FSOs a and b if (i) a has an SM aligned towards b and vice-versa or (ii) a is located in the coverage-cone of the GM at b and vice-versa. At any instant, only one candidate link per FSO can be an active link. For example, in Figure <ref type="figure">4</ref>(a), links (TX, RX-1) and (TX, RX-2) are candidate links, and link (TX, RX-1) is active in Figure <ref type="figure">4</ref>(a)(i) while (TX, RX-2) is active in Figure <ref type="figure">4</ref>(a)(ii). We refer to the set of all candidate links as the pre-configured flexible topology (PCFT). Given a PCFT, we refer to a set of candidate links that can be active simultaneously as a realizable topology. Note that the only constraint on a set of links to be active simultaneously is that each FSO has at most one active candidate link incident on it, due to lack of wireless interference. Thus, any realizable topology is a matching in the PCFT graph over FSOs (Figure <ref type="figure" target="#fig_5">5</ref>) and vice-versa.</p><p>Metric of Goodness. If we knew the expected set of traffic demands, then we can design a customized PCFT that is optimal for this set. However, DC workloads are variable and unpredictable <ref type="bibr" target="#b19">[23]</ref>. Thus, we want a metric to quantify the performance of a PCFT that is analogous to the traditional notion of high bisection bandwidth that captures the throughput of a network for arbitrary traffic patterns <ref type="bibr" target="#b28">[32]</ref>. More formally, given a topology t and considering all possible partitions P of t into two equi-sized sets of racks, the bisection bandwidth is defined as minp∈P BW(t, p), where BW (t, p) is the cut-size in t corresponding to p. However, bisection bandwidth only applies to a static topology, and is not meaningful for a flexible network. With flexible designs such as FireFly, the topology t itself can be changed on demand, which the bisection bandwidth metric fails to capture.</p><p>We introduce a new notion of dynamic bisection bandwidth (DBW) as the metric of goodness to evaluate a PCFT. The dynamic bisection bandwidth of a PCFT Π is defined as follows. Let T be the set of realizable topologies of a given PCFT Π. Then, the dynamic bisection bandwidth (DBW) for a PCFT Π is defined as: minp∈P maxt∈T BW(t, p). Note that this reflects the ability to choose the best realizable topology t for each given partition p.</p><p>To illustrate this, consider the PCFT in Figure <ref type="figure" target="#fig_5">5</ref> again. If we consider τ1 (solid lines) as a static topology, its bisection bandwidth is zero due to the partition {(2,3), (1,4)} of racks. Similarly, we can see that the bisection bandwidth of τ2 (dashed lines) is 2. However, the DBW of the overall PCFT is 4, since τ1 yields a bandwidth of 4 for all equi-partitions except for {(2,3), (1,4)}, for which τ2 yields a bandwidth of 4. Constrained Optimization. Our goal is to design a PCFT that operates within the given cost and physical constraints and optimizes the DBW. For clarity, we focus on the SM and GM problems independently and defer hybrid SM-GM combinations for future work. In each case, we solve the overall budgeted PCFT selection problem in two steps. First, we develop techniques to design a PCFT with maximum DBW for a fixed configuration (i.e., fixing #FSOs, coverage angle, and #SMs per FSO). Then, given the price/size constraints, we exhaustively search the space of feasible combinations of these network parameters and pick a feasible PCFT with the highest DBW. Since preconfiguration runs offline, this brute force step is reasonable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">SM-PCFT Design Problem</head><p>Problem Formulation. Given the number of racks n, number of FSOs m per rack, and the number of SMs k per FSO, the SM-PCFT problem is determine the alignments of each SM such that the resulting PCFT has maximum dynamic bisection bandwidth.</p><p>Said differently, we want a PCFT with maximum DBW, under the constraint that the number of candidate links at each FSO is at most k . From this view, the SM-PCFT problem falls in the class of network design problems <ref type="bibr" target="#b21">[25]</ref>, but is different from prior work due to the novel DBW objective. For instance, even the special case of k = 1, the SM-PCFT problem reduces to constructing an m-regular graph over n nodes with maximum (static) bisection bandwidth. Even this simple case is harder than the well-studied problem of determining an upper-bound on the bisection bandwidth of m-regular graphs of size n, for which approximate results are known only for very small values of m and n <ref type="bibr" target="#b32">[36]</ref> Random Graphs for SM-PCFT. One promising approach to constructing a SM-PCFT solution is to consider random regular graphs. This is based on the intuition that graphs with (static) bisection bandwidth are likely to have high DBW. (Because random graphs have near-optimal spectral gap <ref type="bibr" target="#b17">[21]</ref>, they are good "expanders" and have high static bisection bandwidth.) We can construct an n-node regular graph of degree mk , and then group the mk edges on each node into m sets of k edges each (corresponding to each of the m FSOs). For every edge connecting a pair of FSOs (a, b), we align one SM each of a and b towards each other. Because of the randomness, there is a small chance of some random instance performing poorly; thus, we generate many different solutions, and pick the one with the best DBW. 8   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">GM-PCFT Design Problem</head><p>Problem Formulation. Given the DC layout, the number of racks n, number of FSOs per rack m, and uniform coverage-angle (see Figure <ref type="figure">4</ref>(b)) of GMs, the GM-PCFT problem is to determine the orientation of the GM on each FSO such that the resulting PCFT has the maximum dynamic bisection bandwidth.</p><p>Note that we cannot directly use a random graph as a GM-PCFT solution, since an FSO a's neighbors in a PCFT must be colocated in a coverage-cone of the GM at a. Thus, this problem imposes certain geometric constraints. In particular, for a pair (a, b) to form a (bi-directional) candidate link in the resulting PCFT, the coveragecone of GM at a must cover b and vice-versa. A naive approach is to iteratively pick a pair of FSOs (a, b) at a time and orient their GMs towards each other. However, this approach may create only one candidate link per FSO/GM, and hence, could result in a sparse PCFT with poor DBW.</p><p>Block-based Heuristic. To address the shortcomings of the above strawman approach, we use a "block"-based approach. The intuition here is to create a random graph at a coarser block granularity, where each block is a group of nearby FSOs that fall within a GM's coverage cone.</p><p>The approach runs in m iterations, and in each iteration we fix the orientation of the GM on the i th FSO of each rack, as described below. (The numbering of FSOs is arbitrary; we just need some ordering.) In each iteration, we randomly partition the set of racks into disjoint blocks. The only requirement here is that each block of racks is colocated and small enough to be covered by a GM (when oriented appropriately) on any FSO in the DC. That is, for each block B and FSO a / ∈ B , there exists an orientation of GM at a such that all racks in B fall within its coverage cone. At first glance, this partitioning requirement may seem complex, but we observe that a simple grid-based partitioning scheme is sufficient in practice. Next, we create a random block-level matching Mi over the blocks. Now, for each edge (B1, B2) ∈ Mi, we orient the GM on each i-FSO in each rack within block B1 (correspondingly B2) towards B2 (B1). By construction, the partitioning algorithm guarantees that a GM on any i-FSO in B1 can cover (with some orientation) all i-FSOs on racks in B2.</p><p>The partitioning in each iteration i can be different. In particular, we can create random partitioning schemes: starting from the basic grid, we can do a random offset to create a new partitioning scheme. Finally, as in the case of SM-PCFT, we generate many randomized GM-PCFT solutions, and pick the best. max i,j T i,j , subject to :</p><p>(1) ∀b :</p><formula xml:id="formula_0">a s.t (a,b)∈κ l a,b ≤ 1; ∀a : b s.t. (a,b)∈κ l a,b ≤ 1 (2) ∀a, b : i,j f i,j a,b ≤ l ab × C × E (3) ∀i, j , k : a b∈FSOs(k ) f i,j a,b = b∈FSOs(k ) d f i,j b,d<label>(4)</label></formula><p>∀i, j :</p><formula xml:id="formula_1">a∈FSOs(i) b f i,j a,b = a b∈FSOs(j ) f i,j a,b = T i,j<label>(5)</label></formula><p>∀i, j :</p><formula xml:id="formula_2">T i,j ≤ D i,j<label>(6)</label></formula><formula xml:id="formula_3">∀(a, b) ∈ κ : l a,b ∈ {0, 1}; ∀i, j , a, b : f i,j a,b ≥ 0 (7)</formula><p>Figure <ref type="figure">6</ref>: ILP formulation for periodic reconfiguration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Periodic Reconfiguration</head><p>Given a PCFT and the prevailing traffic load, the periodic reconfiguration problem is to optimally select a runtime (i.e., some realizable) topology and set up routes for the current traffic flows. This constrained optimization is captured by the integer linear program (ILP) shown in Figure <ref type="figure">6</ref>. <ref type="foot" target="#foot_8">9</ref> Let κ be the set of candidate links in the PCFT, C be the (uniform) link capacity, E be the given epoch size (say a few seconds), and Di,j be the estimated traffic demand (volume) between a pair of racks (i, j ). This demand can be obtained by using the measurement counters from the SDN switches from previous epoch(s). We use the subscripts a, b, c, d to refer to FSOs, and i, j , k to refer to racks, and FSOs(k ) to denote the set of FSOs on the top of rack k .</p><p>There are two key sets of control variables: (i) The binary variable l a,b models topology selection and is 1 iff a candidate link (a, b) is chosen to be active; and (ii) f i,j a,b captures the traffic engineering (TE) strategy in terms of the volume of inter-rack traffic between i and j routed over the link (a, b). Let Ti,j be the total traffic volume satisfied for the flow (i, j ).</p><p>For clarity, we consider a simple objective function that maximizes the total demand satisfied across all rack pairs as shown in Eq <ref type="bibr" target="#b0">(1)</ref>. Eq (2) ensures that each FSO can have at most 1 active link. Eq (3) ensures that the total flow on each link (on average) does not exceed the capacity. Eq (4) are flow conservation constraints for each flow (i, j ) and a rack k . Eq (5) captures the volume of the demand satisfied using a constraint over the ingress and egress racks. Eq <ref type="bibr" target="#b3">(6)</ref> ensures that the volume satisfied for each rack pair is at most the demand. Finally, we have bounds on the control variables.</p><p>Unfortunately, even state-of-art solvers like Gurobi or CPLEX take several hours to solve this ILP ( §8.4). Hence, we follow a heuristic strategy and decouple the optimization into two stages. First, we solve the "integer" problem to select the active links. Then, given this runtime topology, we compute the flow routes.</p><p>Greedy Matching for Topology Selection. Recall from §4 that a realizable topology is essentially a matching over FSOs in the PCFT graph. Thus, a simple starting point is to select the maximumweighted matching, where each candidate link (a, b) is weighted by the inter-rack traffic demand Di,j between the racks i and j . In effect, this maximizes the total demand that can be served using direct links. However, this can be very inefficient if the given PCFT does not have direct links between racks with high traffic demands.</p><p>The high-level idea behind our heuristic is to extend the traditional Blossom algorithm for computing the maximum matching to incorporate multi-hop traffic. Recall that the Blossom algorithm improves the matching by computing an alternating path at each stage. We define a new utility function that captures multi-hop traffic and then pick the path with the highest benefit. Specifically, we use the intuition that shorter inter-rack paths imply lower resource usage and higher network throughput <ref type="bibr" target="#b41">[45]</ref>. Thus, we define the benefit of an alternating path L as the decrease in the weightedsum of inter-rack distances if L were used to modify the current matching. Formally, given a current matching τ , the benefit of an alternating path L that would modify the matching from τ to τ , is the total reduction in the network footprint: ij Di,j (hi,j -h i,j ), where hi,j and h i,j are the inter-rack distances between racks (i, j ) in τ and τ respectively (when seen as graphs over racks).</p><p>We run this extended Blossom algorithm until there is no alternating path that can improve the network footprint and then output the final topology at this stage.</p><p>Flow Routing. Given a specific runtime topology (i.e., values of l a,b ), the residual TE problem is theoretically solvable in polynomial time as a multi-commodity flow (MCF) problem. However, even this takes hundreds of seconds for 256/512 racks §8.4), which is not acceptable as a near real-time solution. To address this, we use a greedy algorithm to compute the values of these flow variables. Essentially, we extend the traditional augmenting-path approach for max-flow algorithms and greedily pick an augmenting path for a currently unsatisfied commodity. We run the algorithm until no more augmenting paths can be picked; i.e., the network is saturated. From this solution, we use the "path stripping" idea <ref type="bibr" target="#b38">[42]</ref> to convert the values of the f i,j a,b variables into end-to-end paths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Triggered Reconfigurations</head><p>In addition to periodically reconfiguring the network, FireFly can also run localized reconfigurations triggered by traffic events. Such reconfigurations may be frequent but likely require minimal topology and flow-route changes. We currently support two types of triggers. First, if we detect elephant flows that have sent more than 10 MB of aggregate data <ref type="bibr" target="#b13">[17]</ref>, then we activate links to create a shorter or less-congested path for this flow. Second, if traffic between a particular pair of racks exceeds some configurable threshold, then we create a direct link between them, if this does not require deactivating recently activated or high utilization links.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Correctness During Reconfigurations</head><p>A reconfiguration in FireFly entails: (i) addition and/or deletion of (candidate) links from the given runtime topology, and (ii) corresponding changes to the network forwarding tables (NFTs). This flux raises natural concerns about correctness and performance during reconfigurations. Our goal is to ensure that: (i) network remains connected at all times, (ii) there are no black holes (e.g., all forwarding table entries refer to available/usable links), and (iii) packet latency remains bounded (and thus, delivery is guaranteed). The main challenges in designing a correct data plane strategy stem from two factors: (i) Activation or deactivation of candidate links incur a non-zero latency (few msecs); and (ii) We may need to execute reconfigurations concurrently if the triggers occur frequently (e.g., for every elephant flow arrival). At a high level, these are related to the problem of consistent updates <ref type="bibr" target="#b30">[34,</ref><ref type="bibr" target="#b39">43]</ref>. The key difference is that we can engineer simpler requirement-specific solutions rather than use more general-purpose solutions proposed in prior work. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Handling sequential reconfigurations</head><p>We begin by focusing on correctness when we execute reconfigurations serially and defer concurrent execution to the next subsection. Our Solution. To avoid black holes, we split a reconfiguration into multiple steps such that: (i) link deletion is reflected in the NFTs before their deactivation is initiated, and (ii) link addition is reflected only after the activation is complete. Thus, a reconfiguration that involves deactivation (activation) of a set of links (∆) is translated to the following sequence of steps: S1: Update the NFTs to reflect deletion of . S2: Deactivate and activate ∆. S3: Update the NFTs to reflect addition of links ∆.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Avoiding Black Holes</head><p>One additional invariant we maintain is that every switch has a default low priority rule at all times to reach every destination rack via some active outgoing link. We do so to explicitly ensure that packets can reach their destination, possibly on sub-optimal paths, as long as the network is connected (see below).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Maintaining Connectivity</head><p>To ensure network connectivity at all times, we simply reject reconfigurations that might result in a disconnected network in step S1 above. That is, we add a step S0 before the three steps above. S0: Reject the reconfiguration, if deletion of links disconnects the network.</p><p>To reduce the chance of such rejections, we also extend our reconfiguration algorithms to retain a connected subnetwork from the prior topology. The high-level idea here is to construct a rack-level spanning tree using the current graph, and explicitly remove these links/FSOs from consideration during the greedy matching step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Bounded Packet Latency</head><p>If reconfigurations occur at a very high frequency, then we may see unbounded packet latency. Figure <ref type="figure" target="#fig_7">7</ref> shows a simple example where a packet can never reach its destination because the links/routes are being reconfigured quite rapidly. Our Solution. The example also suggests a natural strategy to avoid such cases-we can delay or reject reconfigurations to allow the in-flight packets to use one of the intermediate topologies to reach its destination. We introduce a small delay of x units between two consecutive NFTs-updates, where x is the maximum packet latency in a fixed realizable topology. This ensures that each packet "sees" at most two configurations during its entire flight. This, bounds the packet latency by (2x + z) where z is the total NFTs-update time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Handling Concurrent Reconfigurations</head><p>Computing and executing a reconfiguration can take a few tens of msecs in a large DC. To achieve good performance, we may need to reconfigure the network frequently; e.g. for every elephant flow arrival in the network, which may happen every msec or less. Thus, we need mechanisms that allow reconfigurations to be executed concurrently. We could batch reconfigurations, but that merely delays the problem rather than fundamentally solving it because a batch may not finish before the next set of reconfigurations arrive.</p><p>We observe that to handle concurrent reconfigurations, we need to extend the approach from §6.1 to handle two concerns.</p><p>• Connectivity: One concern is that each reconfiguration in isolation may not disconnect the network but combining them might. Thus, to ensure network connectivity, the controller maintains an atomic global topology variable G, and uses this variable to accept/reject in step S0. (G is also updated by accepted reconfigurations in S1 and S3.) • Conflicting reconfigurations: In step S0, we also reject any reconfiguration that "conflicts" (in terms of link activations or deactivations) with already-accepted but yet-unfinished reconfigurations. That is, we follow a non pre-emptive strategy of allowing outstanding reconfigurations to complete.</p><p>We note that no other changes are required to §6.1 to handle concurrency. Black holes are still avoided since only non-conflicting reconfigurations are executed concurrently and packet latency is bounded since a minimum time-interval already precludes concurrent processing of different NFTs-updates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Overall Scheme</head><p>Based on the previous building blocks, our overall scheme is as follows. Each reconfiguration ρ that deletes and adds a set of links and ∆, is translated into the following four steps. Here, G is as described in §6.2. C0: Accept ρ if (i) deletion of links does not disconnect G, and (ii) ρ doesn't conflict with any unfinished reconfigurations. C1: Update G and NFTs to reflect deletion of . C2: Deactivate and activate ∆. C3: Update G and NFTs to reflect addition of links ∆.</p><p>In addition, as discussed in §6.1, we ensure (a) default path rules, and (b) a minimum time-interval (= maximum packet latency) units between consecutive NFTs-updates.</p><p>We can analytically prove that the above overall scheme ensures that (i) there are no black holes, (ii) network remains connected, and (iii) packet latency is bounded by (2x + z), where z is the NFTs-update time. This claim holds irrespective of how the NFTs are updated across the network; i.e., we do not require atomic updates. We refer readers to our technical report for the proof <ref type="bibr" target="#b23">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">FireFly Controller Implementation</head><p>We implement the FireFly controller as modules atop the POX controller. We chose POX/OpenFlow primarily for ease of prototyping. We use custom C++ modules for the PCFT generation and reconfiguration optimization algorithms. For reconfiguration, we implement heuristics to "dampen" reconfigurations by checking if there is a significant (e.g., more than 10%) improvement in the objective function from Figure <ref type="figure">6</ref>. We use a simple translation logic to convert the output of the optimization solver to OpenFlow rules where the "flow" variables are mapped to prefix-range based forwarding entries <ref type="bibr" target="#b45">[49]</ref>. For elephant flows, we set up exact match flow rules <ref type="bibr" target="#b8">[12]</ref>. We use existing OpenFlow measurement capabilities to estimate the inter-rack demands and use the observed traffic from the previous epoch as the input to the controller. Our prototype does not implement elephant flow detection <ref type="bibr" target="#b8">[12,</ref><ref type="bibr" target="#b13">17]</ref>; we currently assume this information is available out of band.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Evaluation</head><p>We established the performance of individual steerable FSO links in §3. In this section, we focus on:</p><p>1. Performance w.r.t. other DC architectures ( §8.1); 2. Impact on performance during reconfigurations ( §8.2); 3. Optimality of the preconfiguration algorithms ( §8.3); 4. Optimality and scalability of reconfiguration ( §8.4); 5. Sensitivity analysis w.r.t. degree of flexibility and reconfiguration latency ( §8.5); and 6. Cost comparison w.r.t. prior DC architectures ( §8.6).</p><p>For (1), we use a combination of detailed packet-level simulations using htsim and augment it with larger-scale flow-level simulations using a custom flow-level simulator. For (2), we use a detailed system-level emulation using MiniNet. For (3) and (4), we use offline trace-driven evaluations. For (5), we use the flowlevel simulation. Finally, for (6) we use public cost estimates and projections from §3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">System Performance</head><p>Setup and We consider three classes of architectures: (1) FireFly (both SM and GM) with 10Gbps links, (2) (wired) 10Gbps full-bisection bandwidth networks such as FatTree <ref type="bibr" target="#b9">[13]</ref>, and (3) augmented architectures such as c-Through <ref type="bibr" target="#b44">[48]</ref> and 3D-Beamforming (3DB) <ref type="bibr" target="#b48">[52]</ref> with a 5Gbps (i.e., 1:2 oversubscribed) core. <ref type="foot" target="#foot_9">10</ref> (We do not compare Flyways <ref type="bibr" target="#b22">[26]</ref> since it is subsumed by 3D-Beamforming.) By default, FireFly has 48 FSOs per rack with each equipped with 10 SMs; we assume a rack size of 4 ×2 , which is sufficient to easily hold 48 FSO devices ( §3.3). We also evaluated Jellyfish <ref type="bibr" target="#b41">[45]</ref>, but do not show this for ease of visualization since the result was close to FatTree (≈ 10% lower). We assume an overall reconfiguration latency of 20 msecs for FireFly, and conservatively use zero latency for c-Through/3DB. We use ECMP routing for FatTree and backbone cores of 3dB and c-Through, and route the "overflow" traffic to their augmented links <ref type="bibr" target="#b48">[52]</ref>. Finally, for FireFly, we use the routing strategies described in §5.</p><p>Following prior work, we use synthetic traffic models based on DC measurements <ref type="bibr" target="#b19">[23,</ref><ref type="bibr" target="#b48">52]</ref>. As a baseline, we consider a Uniform model where flows between pairs of racks arrive independently with a Poisson arrival-rate λ/s, with an empirically-derived flow size distribution <ref type="bibr" target="#b19">[23]</ref>. We use λ as the knob to tune the level of network saturation. Based on prior observations, we also consider the Hotspot model <ref type="bibr" target="#b19">[23]</ref>, where in addition to the Uniform baseline, a subset of rack pairs have a higher arrival rate λ2 and a fixed large flow size of 128MB <ref type="bibr" target="#b48">[52]</ref>. For Uniform loads, we use the label Uniform X where X is average load per server (in Gbps) by choosing suitable λ. For Hotspot loads, we use the label Hotspot(Y,X) where Y is the % of racks that are hotspots and X is the additional average load on each hotspot server; all Hotspot workloads use Uniform 5 as the background traffic. Performance Comparison. There are two key metrics here: (1) the average throughput per server, and (2) flow completion time (c) Average throughput per server (Gbps) Figure <ref type="figure">8</ref>: Flow completion times (FCT) and average throughput per-server using the htsim simulator on a 64-node topology for different workloads (FCT). For ease of visualization, we do not show error bars over multiple runs, since the results were consistent across multiple runs. We also do not show FireFly-GM (with 40 • coverage-angle GMs) results, since they are similar to the default FireFly-SM.</p><p>As a starting point, we use htsim for a detailed packet-level simulation. We extended htsim to support short flows, arbitrary traffic matrices, and route reconfigurations. Due to scaling limitations of htsim, even on a high-end server (2.6GHz, 64 GB RAM), we could only scale to a 64-rack DC at our 10 Gbps workloads. Figure <ref type="figure">8</ref>(a) and 8(b) show a box-and-whiskers plot (showing maximum, minimum, median, 25%iles, and 75%iles) of the FCT for long/short flows respectively for a 30 secs run. The result shows that FireFly's performance is close to the full-bisection bandwidth network in both cases. c-Through and 3DB do not perform as well because their augmented network is not sufficient to compensate for the oversubscription. Thus, their tail performance for long flows suffers. We also see that the FCT for short flows is similar across FireFly and FatTree.</p><p>Figure <ref type="figure">8</ref>(c) shows the effective average per-server throughput in the 64-rack setup for different workloads. For the Uniform the average is over all servers whereas for Hotspot the average is over the hotspot servers. In short, we see that FireFly's performance is close to the full-bisection bandwidth network and roughly 1.5× better than the augmented architectures.</p><p>To scale to larger DCs, we use a custom flow-level simulator. We do so after confirming that these simulations roughly match the packet-level simulations. In general, the flow-level simula- tions overestimates the throughput 5-7% for all architectures since it does not model packet-level effects. Since our goal is to compare the relative performance of these architectures, these simulations are still instructive. Figure <ref type="figure" target="#fig_9">9</ref> shows that the earlier performance results continue to hold for the most saturating workloads even at larger scales. The only drop is at 512 racks for Uniform10; here the number of SMs/FSO is slightly sub-optimal as the number of racks grows. We revisit this in §8.5.</p><p>We also measured the packet latency (number of hops) statistics and found that the average latency were 3.91 (FireFly), 4.81 (Fat-Tree), and 3.9 (3dB, c-Through), while the maximum was 5 for FireFly and 6 for the rest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Performance during Flux</head><p>Because packet-or flow-level simulations do not give us a detailed replay of the events at the FireFly controller and in the network, we use Mininet for this evaluation <ref type="bibr">[7]</ref>. Due to scaling limitations, we scale down the DC size to 32 racks and the link rates to 10 Mbps, and correspondingly scale the workload down. Since our goal is to understand the relative impact of reconfigurations w.r.t. the steady state behavior, we believe this setup is representative. In particular, note that the relative "penalty" of the reconfiguration latency remains the same since we also scale down the workload with the link rates.</p><p>For the following result, we consider a HotSpot workload, with seven distinct reconfigurations as elephant flows arrive. We poll the virtual switches to obtain link utilization and loss rates and use a per-rack-pair ping script to measure inter-rack latency. We divide these measurements into two logical bins: (a) During reconfigurations and (b) Steady state (i.e., no active reconfiguration). Figure <ref type="figure" target="#fig_1">10</ref> shows the distribution link utilization, loss rate, and inter-rack latency for each bin. While there is a small increase in the tail values, the overall distributions are very close. This suggests that the impact on the network during reconfigurations is quite small and that our mechanisms from §6 work as expected. As before, we use 48 FSOs per rack and 10 SMs per FSO for SM-PCFT, and assume GMs with an coverage-angle of 40 • for GM-PCFT. We generate ≈ 15n (n is the number of racks) random instances and pick the best. We normalize the estimated DBW w.r.t an upper bound of nm 2 . 11 Table <ref type="table" target="#tab_1">1</ref> shows that the SM-PCFT and GM-PCFT solutions achieve ≥ 91% and ≥84% of the upper bound across different DC sizes. The lower performance of GM-PCFT is likely because of less randomness due to a block-level construction. (This does not however impact the performance of the runtime topology in practice for the workloads we consider.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Preconfiguration Efficiency</head><p>We also evaluate an incremental expansion scenario where we want to retain most existing PCFT as we add new racks similar to Jellyfish <ref type="bibr" target="#b41">[45]</ref>. We find that incrementally constructed PCFTs perform nearly identical w.r.t. a PCFT computed from scratch (not shown). We posit that this stems from the incremental expandability of random graphs <ref type="bibr" target="#b41">[45]</ref>.  Table <ref type="table" target="#tab_3">2</ref> shows the computation time and optimality gap of the FireFly two-step heuristic from §5.1. We consider two points of comparison: (a) Full-LP, a LP relaxation of Figure <ref type="figure">6</ref>, which also yields an upper-bound on the optimal, and (b) Greedy-LP which uses greedy topology selection but solves the flow routing LP using Gurobi. Our approach is several orders of magnitude faster-Full-LP and Greedy-LP simply do not scale for ≥ 32 racks. This is crucial as the FireFly controller may need to periodically reoptimize the network every few seconds. Moreover, the (upper bound) on the optimality gap is ≤ 2.8%. Finally, we note that triggered reconfigurations ( §5.2) incur only 5-10 msec (not shown). Most of the time is actually spent in route computation, which can be run in parallel to allow a high rate of concurrent reconfigurations.  Given that we are considering a new technology, we evaluate the sensitivity w.r.t. key parameters: number of FSOs, number of SMs, and the reconfiguration latency. Table <ref type="table" target="#tab_5">3</ref> shows the average perserver throughput on a range of FireFly instantiations. As before, we use the configuration of 512 racks with 48 servers each. As expected from the insights from §2.1, the performance decreases almost linearly with decrease in the number of FSOs (i.e., flexible ports) per rack. The performance degradation in GM-based networks is comparatively better. Note that the networks with fewer FSOs also have almost-proportionally lower cost. However, increasing the number of SMs per FSO does counter the degradation to some extent, due to increase in flexibility. If FSO size is the limiting concern, one way to get higher performance is to simply 11 Any equi-sized partition of n racks with m FSOs can have at most nm/2 active links (one per FSO) in a "cut".  decrease the number of servers per rack; i.e., increase number of racks for a fixed total number of servers (not shown).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.4">Reconfiguration Efficiency</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.5">Sensitivity Analysis</head><p>Finally, with respect to reconfiguration latency, we observe that varying the latency from 10msec to 50 msec has minimal (&lt; 5%) impact on FireFly's performance (not shown). This is a positive result that we can achieve pretty good performance even with unoptimized steering delays and network update times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.6">Cost Comparison</head><p>As an instructive case, we consider a DC with 512 racks and 48 servers/rack to compute the equipment, power, and cabling costs of different architectures in Table <ref type="table" target="#tab_7">4</ref>. We consider both copper-and fiber-based realizations for the wired architectures.</p><p>We conservatively estimate the "bulk" price of 10GbE network switches to be $100 per port <ref type="bibr" target="#b7">[11,</ref><ref type="bibr" target="#b46">50]</ref> and that of 10GbE SFPs at $50 each; these estimates are roughly 50% of their respective retail costs. Thus, fiber-based architectures (including FireFly) incur a cost of $150 per-port, while copper-based architecture incur a cost of only $100 per-port. FireFly uses a 96-port (10G) ToR switch on each rack with 48 FSOs, the full-bisection FatTree needs 1536 96-port (10G) switches, while the 1:2 oversubscribed cores of c-Through/3DB use roughly half the ports of FatTree. FireFly has an additional cost for FSO devices (on half the ports), which we estimate to be $200 per device including SMs or a GM ( §3). For 3DB, we assume there are 8 60 GHz radios per rack with each assembly costing $100. For c-Through, we conservatively assume the 512-port optical switch to be $0.5M. We assume ceiling mirrors in FSO and 3DB have negligible cost. For cabling, we use an average cost of $1 and $3 per meter for copper and optical-fiber respectively, and use an average per-link length of 30m <ref type="bibr" target="#b36">[40]</ref>. We estimate the 5-yr energy cost using a rate of 6.5cents/KWHr, and per-port power consumption of 3W (fiber) and 6W (copper). We ignore the negligible energy cost of SMs, 60GHz radios, and the optical switches.</p><p>Overall, the total cost of FireFly is 40-60% lower than FatTree and is comparable (or better) than the augmented architectures. Note that the augmented architectures have worse performance compared to FireFly, and copper wires have length limitations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Discussion</head><p>Given our radical departure from conventional DC designs, we discuss a sampling of potential operational concerns and possible mechanisms to address some of these issues. We acknowledge that there might be other unforeseen concerns that require further investigation over pilot long-term deployments.</p><p>Pre-and re-alignment. We will need external tools for pre-aligning SMs/GMs. Fortunately, as this will be done infrequently, this mechanism does not need the stringent cost/size requirements and we can repurpose existing mechanical assemblies. While our design tolerates minor misalignment ( §3), long term operation may need occasional alignment corrections. Here, we can use the feedback from the digital optical monitoring support available on optical SFPs; GMs can directly use such feedback, but SMs may need additional micro-positioning mechanisms (e.g., piezoelectrics). Operational Concerns. Some recurrent concerns we have heard include dust settling on optics, light scattering effects, reliability of mechanical parts, and human factors (e.g., need for protective eyewear for operators). We believe that these are not problematic. Specifically, dust/scattering may reduce the signal but our design has sufficiently high link margins (15dB), and the devices can be easily engineered to minimize dust (e.g., non-interfering lids or blowing filtered air periodically). While we studied an electromechanical GM here, future MEMS-based scanning mirrors <ref type="bibr" target="#b3">[6]</ref> are expected to be very robust. Finally, the lasers we use are infra-red and very low power which are not harmful to human eye. Beyond 10 Gbps. Current long-range connector standards for 40/ 100 Gbps (e.g., 40 or 100GBASE-LR4) use WDM to multiplex lower rate channels on the same fiber, one in each direction. However, just like the 10 GbE standard that we have used, there are still two optical paths (with two fibers) for duplex links. Single-fiber solutions (as we have used for 1 GbE <ref type="bibr" target="#b5">[9]</ref>) are not commodity yet at these speeds as the market is still nascent. We expect, however, this to change in future. Otherwise, we will need two optical paths or custom single-path solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Related Work</head><p>Static Wired Topologies. Early DCs used tree-like structures, which have poor performance due to oversubscription. This motivated designs providing full bisection bandwidth <ref type="bibr" target="#b9">[13,</ref><ref type="bibr" target="#b12">16,</ref><ref type="bibr" target="#b41">45]</ref>, which are overprovisioned to handle worst-case patterns. In addition to high cost, such networks are not incrementally expandable <ref type="bibr" target="#b41">[45]</ref>. In contrast, FireFly is flexible, eliminates cabling costs, and amenable to incremental expansion. Other efforts proposed architectures where servers act as relay nodes (e.g., <ref type="bibr" target="#b20">[24]</ref>). However, they are not cost competitive <ref type="bibr" target="#b36">[40]</ref> and raise concerns about isolation and CPU usage. Optical Architectures. High traffic volumes coupled with the power use of copper-based Ethernet, has motivated the use of optical links. Early works such as c-Through <ref type="bibr" target="#b44">[48]</ref> and Helios <ref type="bibr" target="#b16">[20]</ref> suggested hybrid electric/optical switch architectures, while recent efforts consider all-optical designs <ref type="bibr" target="#b10">[14,</ref><ref type="bibr" target="#b37">41]</ref>. The use of free-space optics avoids the cabling complexity that such optical designs incur. Furthermore, by using multiple FSOs per rack, FireFly can create richer topologies (at the rack level) than simple matchings <ref type="bibr" target="#b10">[14,</ref><ref type="bibr" target="#b16">20,</ref><ref type="bibr" target="#b37">41,</ref><ref type="bibr" target="#b44">48]</ref>. Moreover, FireFly doesn't need optical switching, thus eliminating concerns about cost/scalability. Finally, optical switching can disconnect substantial portions of the optical network during reconfiguration. While FireFly also has transient link-off periods, these are localized-which enables us to avoid black holes and disconnections using simpler data plane strategies ( §6).</p><p>Wireless in DCs. The FireFly vision is inspired by Flyways <ref type="bibr" target="#b22">[26]</ref> and 3D-Beamforming <ref type="bibr" target="#b48">[52]</ref>. However, RF wireless technology suffers from high interference and range limitations and limits performance. The use of free-space optics in FireFly eliminates interference concerns. Shin et al. consider a static all-wireless (not only inter-rack) DC architecture using 60 Ghz links <ref type="bibr" target="#b40">[44]</ref>. However, this requires restructuring DC layout and has poor bisection bandwidth due to interference.</p><p>Consistency during Reconfigurations. Recent work identified the issue of consistency during network updates <ref type="bibr" target="#b30">[34,</ref><ref type="bibr" target="#b39">43]</ref>. FireFly introduces unique challenges because the topology changes as well. While these techniques can also apply to FireFly, they are more heavyweight for the specific properties (no black holes, connectivity, and bounded packet latency) than the domain-specific solutions we engineer. Other work minimizes congestion during updates <ref type="bibr" target="#b26">[30]</ref>. While FireFly's mechanisms do not explicitly address congestion, our results ( §8.2) suggest that this impact is quite small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11">Conclusions</head><p>In this work, we explore the vision of a fully-flexible, all-wireless, coreless DC network architecture. We identified free-space optics as a key enabler for this vision and addressed practical hardware design, network provisioning, network management, and algorithmic challenges to demonstrate the viability of realizing this vision in practice. Our work is by no means the final word. There remains significant room for improvement in various aspects of our design, viz., cost and form-factor of hardware elements, algorithmic techniques for network provisioning and management, which should further improve the cost-performance tradeoff.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: High-level view of the FireFly architecture. The only switches are the Top-of-Rack (ToR) switches.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: A fully-flexible network can offer optimal (fullbisection) performance at a fraction of the cost. Here, the normalized performance and costs are that of the flexible architecture w.r.t. a full-bisection bandwidth network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: FSO link design, prototype and performance. (a) Optical path and networking gear (not drawn to scale). (b) One end point of the 10 Gbps link prototype running in a DC over ≈ 20m); the inset shows a zoomed in version. The FSO link connects to a similar set up on the other end. (c) Distribution of per-sec TCP throughputs on a 10 Gbps FSO link over ≈ 20m on optical bench (Lab) and DC racks (DC), over days of continuous runs. Throughput distribution on wired optical fiber is used for comparison.</figDesc><graphic coords="4,286.99,63.67,130.90,86.09" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>5 RX</head><label>5</label><figDesc>Switchable mirror operation (b) Galvo mirror operation (c) Galvo mirror response Figure 4: (a) Using switchable mirrors (SMs) with FSOs: (i) 2nd SM is in mirror mode to steer the beam to RX-1; (ii) 3rd SM is in mirror mode, steering the beam to RX-2. RX-s also have aligned SMs to direct the beam to its detector (not shown for clarity). (b) Galvo mirror (GM) on an FSO device can steer the beam within its coverage-cone. (c) Evaluating Galvo mirror response.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>2 Figure 5 :</head><label>25</label><figDesc>Figure 5: A PCFT with candidate links (solid and dashed). The set of solid links represents one possible realizable topology (τ1), and the set of dashed lines represents another (τ2).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Packet (in-flight location shown by a square) continues to "swing" from B to A and back, due to a rapid sequence of reconfigurations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>To see why "black holes" may arise, consider a reconfiguration that changes the network's runtime topology by steering FSOs a and b towards each other, and in the process activating the link (a, b) and deactivating some link (a, c). Suppose the NFTs change from F to F . Now, there is a period of time (when GM/SMs at a is changing state) during which neither (a, b) nor (a, c) is available. During this period, irrespective of when the NFTs get updated (say, even atomically) from F to F , some entries in the NFTs may refer to either (a, b) or (a, c), inducing black holes in the network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>Scalability evaluation using a flow-level simulator</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Efficiency of the PCFT algorithms</figDesc><table><row><cell cols="3">#Racks Normalized DBW w.r.t. upper bound</cell></row><row><cell></cell><cell>SM-PCFT</cell><cell>GM-PCFT</cell></row><row><cell>64</cell><cell>0.96</cell><cell>0.84</cell></row><row><cell>128</cell><cell>0.93</cell><cell>0.84</cell></row><row><cell>256</cell><cell>0.91</cell><cell>0.85</cell></row><row><cell>512</cell><cell>0.94</cell><cell>0.88</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>Scalability and optimality of the FireFly reconfiguration algorithm.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 :</head><label>3</label><figDesc>Average throughput per-server on Uniform10 for varying network parameters.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 4 :</head><label>4</label><figDesc>Cost (in USD millions) of equipment, power, and cabling assuming 512 racks with 48 servers/rack. Since these are estimates, we round to the nearest million.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>We use the terms flexible and reconfigurable interchangeably.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>FireFly stands for Free-space optical Inter-Rack nEtwork with high FLexibilitY.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>We can show that the normalized performance of Flexible(f ) w.r.t. FBB is ≈ min(f /l, 1) where l is the number of servers per rack<ref type="bibr" target="#b23">[27]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>In effect, we need RF beams with angular divergence ≈ 1 milliradian to create a small interference footprint</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_4"><p>at 50-100m range.<ref type="bibr" target="#b2">5</ref> TeraHertz wireless technology may be a good alternative, but it is much less mature at this time.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>For brevity, we skip the details of the optical design. We only state the basic approach and relevant tradeoffs. We refer readers to a similar approach that has been used in a different context<ref type="bibr" target="#b47">[51]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_6"><p>Note that typical optical SFPs require two fibers and thus two optical paths for duplex communication. However, single fiber SFPs<ref type="bibr" target="#b5">[9]</ref> that use WDM principles to multiplex both links on a single fiber are beginning to be available. For 1 Gbps experiments we use such SFPs. Due to unavailability of such devices for 10 Gbps, we use fiber for the return path for the 10 Gbps experiments; all reported performance measurements are from the FSO path.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_7"><p>Real-time ReconfigurationWe consider two types of reconfigurations in FireFly: (1) periodically optimizing the network based on estimated demands; and (2) triggered by certain network events (e.g., planned migrations or elephant flows).<ref type="bibr" target="#b4">8</ref> One subtle issue is even computing DBW is hard. To estimate the DBW for a given random instance, we extend the Kernighan-Lin<ref type="bibr" target="#b28">[32]</ref> heuristic for estimating the bisection bandwidth. Our experiments suggest this is within 5-7% of the true DBW. Due to space constraints, we do not discuss the DBW estimation in depth.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_8"><p>This problem is harder than the optimization problem considered in §2.1, since we were assuming arbitrary flexibility.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_9"><p>While a lower oversubscription would improve c-Through's performance, the cost increases almost proportionally-eventually becoming equal to FatTree at 1:1 oversubscription.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank Yuvraj Agarwal, Daniel Halperin, and our shepherd Jitendra Padhye for their feedback, and Hanfei Chen for GM measurements. This research was supported in part by NSF grants CNS-1117719 and CNS-0831791.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://tinyurl.com/kaxpotw" />
		<title level="m">A Simpler Data Center Fabric Emerges</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="http://www.thorlabs.us/NewGroupPage9.cfm?ObjectGroup_ID=3770" />
		<title level="m">Galvo mirrors</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<ptr target="http://tinyurl.com/k86o2vh" />
		<title level="m">Lightpointe flightstrata g optical gigabit link</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<ptr target="http://www.lemoptix.com/technology/mems-scanning-mirrors" />
		<title level="m">Mems scanning mirror</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<ptr target="http://tinyurl.com/n773hg3" />
		<title level="m">OpenGear out of band management</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<ptr target="http://www.championone.net/products/transceivers/sfp/single-fiber-single-wavelength/" />
		<title level="m">Single-fiber sfp</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<ptr target="http://www.xinyulaser.com/index.asp" />
		<title level="m">Xinyu laser products</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">GbE cost comparison. Emulex white paper</title>
		<author>
			<persName><forename type="first">Gbase-T</forename><surname>Vs</surname></persName>
		</author>
		<ptr target="http://www.emulex.com/artifacts/cdc" />
		<imprint>
			<date type="published" when="2012">2012. 1a1d3-5d2d-4ac5</date>
		</imprint>
	</monogr>
	<note>9ed8-5cc4a72bd561/elx_sb_all_10gbaset_cost_comparison.pdf</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Hedera: Dynamic flow scheduling for data center networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Al-Fares</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A scalable, commodity data center network architecture</title>
		<author>
			<persName><forename type="first">M</forename><surname>Al-Fares</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Loukissas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">OSA: An optical switching architecture for data center networks with unprecedented flexibility</title>
		<author>
			<persName><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">1.28-Tb/s (32 × 40 Gb/s) free-space optical WDM transmission system</title>
		<author>
			<persName><forename type="first">E</forename><surname>Ciaramella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Photonics Technology Letters</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">16</biblScope>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A study of non-blocking switching networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Clos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell System Technical Journal</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<date type="published" when="1953">1953</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">DevoFlow: Scaling flow management for high-performance networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Curtis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">LEGUP: Using heterogeneity to reduce the cost of data center network upgrades</title>
		<author>
			<persName><forename type="first">A</forename><surname>Curtis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lopez-Ortiz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CoNEXT</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Data center with free-space optical communications</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Davidson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">US Patent</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">28</biblScope>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Helios: A hybrid electrical/optical switch architecture for modular data centers</title>
		<author>
			<persName><forename type="first">N</forename><surname>Farrington</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">On the second eigenvalue and random walks in random d-regular graphs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Interference alignment and cancellation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Gollakota</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Perli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Katabi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">VL2: A scalable and flexible data center network</title>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">BCube: A high performance, server-centric network architecture for modular data centers</title>
		<author>
			<persName><forename type="first">C</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Approximation algorithms for network design: A survey</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Konemann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Surveys in Operations Research and Management Science</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Augmenting data center networks with multi-gigabit wireless links</title>
		<author>
			<persName><forename type="first">D</forename><surname>Halperin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">FireFly: A reconfigurable wireless data center fabric using free-space optics (full version)</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hamedazimi</surname></persName>
		</author>
		<ptr target="http://www.cs.stonybrook.edu/~hgupta/ps/firefly-full.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Patch panels in the sky: A case for free-space optics in data centers</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hamedazimi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Sekar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM HotNets</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">ElasticTree: Saving energy in data center networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Heller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Achieving high utilization with software-driven WAN</title>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Hong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Urban optical wireless communication networks: The main challenges and possible solutions</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kedar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Arnon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>IEEE Communications Magazine</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">An efficient heuristic procedure for partitioning graphs. The Bell Systems Technical</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kernighan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><surname>Ceo</surname></persName>
		</author>
		<author>
			<persName><surname>Kentoptronics</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Personal communication</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">On consistent updates in software defined networks (extended version)</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mahajan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM HotNets</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A review of phased array steering for narrow-band electrooptical systems</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">F</forename><surname>Mcmanamon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE</title>
		<meeting>the IEEE</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Upper bounds on the bisection width of 3-and 4-regular graphs</title>
		<author>
			<persName><forename type="first">B</forename><surname>Monien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Preis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Discrete Algorithms</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Taming the flying cable monster: A topology design and optimization framework for data-center networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mudigonda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Yalagandula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Mogul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX ATC</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">OpenFlow: enabling innovation in campus networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Mckeown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM CCR</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Electromagnetic waves and antennas</title>
		<author>
			<persName><forename type="first">S</forename><surname>Orfanidis</surname></persName>
		</author>
		<ptr target="http://www.ece.rutgers.edu/~orfanidi/ewa/" />
		<imprint>
			<biblScope unit="volume">19</biblScope>
		</imprint>
	</monogr>
	<note>Chapter 15</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A cost comparison of datacenter network architectures</title>
		<author>
			<persName><forename type="first">L</forename><surname>Popa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CoNEXT</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Integrating microsecond circuit switching into the data center</title>
		<author>
			<persName><forename type="first">G</forename><surname>Porter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Randomized rounding: a technique for provably good algorithms and algorithmic proofs</title>
		<author>
			<persName><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Abstractions for network update</title>
		<author>
			<persName><forename type="first">M</forename><surname>Reitblatt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">On the feasibility of completely wireless datacenters</title>
		<author>
			<persName><forename type="first">J</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Sirer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Weatherspoon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kirovski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ANCS</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Jellyfish: Networking data centers randomly</title>
		<author>
			<persName><forename type="first">A</forename><surname>Singla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Popa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Godfrey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Principles of Lasers</title>
		<author>
			<persName><forename type="first">O</forename><surname>Svelto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Plenum Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
	<note>Fourth edition</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Effects of data center vibration on compute system performance</title>
		<author>
			<persName><forename type="first">J</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SustainIT</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">c-Through: Part-time optics in data centers</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Openflow-based server load balancing gone wild</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Butnariu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hot-ICE</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">10GBASE-T ecosystem is ready for broad adoption</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goswami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<ptr target="http://www.cisco.com/en/US/prod/collateral/switches/ps9441/ps9670/COM_WP_10GBASE_T_Ecosystem_US4.pdf" />
		<imprint>
			<date type="published" when="2012">2012</date>
			<publisher>Commscope/Intel/Cisco White Paper</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Assisted focus adjustment for free space optics system coupling single-mode optical fibers</title>
		<author>
			<persName><forename type="first">K</forename><surname>Yoshida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tanaka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Tsujimura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Azuma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Mirror mirror on the ceiling: Flexible wireless links for data centers</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
