<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Formal Specification of Interaction in Agent Societies</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Virginia</forename><surname>Dignum</surname></persName>
							<email>virginia.dignum@achmea.nl</email>
							<affiliation key="aff0">
								<address>
									<addrLine>The Netherlands</addrLine>
									<settlement>Achmea</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">University Utrecht</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">John-Jules</forename><forename type="middle">C</forename><surname>Meyer</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">University Utrecht</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Frank</forename><surname>Dignum</surname></persName>
							<email>dignum@cs.uu.nl</email>
						</author>
						<author>
							<persName><forename type="first">Hans</forename><surname>Weigand</surname></persName>
							<email>weigand@uvt.nl</email>
							<affiliation key="aff1">
								<orgName type="institution">University Utrecht</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Infolab</orgName>
								<orgName type="institution">Tilburg University</orgName>
								<address>
									<addrLine>The Netherlands</addrLine>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Formal Specification of Interaction in Agent Societies</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D01DCB0AFB78AEEB36EE4990C0309674</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The Agent Society framework that we have developed distinguishes between the mechanisms though which the structure and global behavior of the model is described and coordinated, and the aims and behavior of the serviceproviders (agents) that populate the model. In this framework contracts are used to integrate the top-down specification of organizational structures with the autonomy of participating agents. In this paper we introduce LCR, a very expressive logic for describing interaction in multi-agent systems. We also show how LCR behaves in contrary-to-duty situations common to deontic logic frameworks. LCR makes it possible to check whether agents in an agent society follow some desired interaction patterns and whether desired social states are preserved by agent activity. LCR is used as a formal basis for the framework for agents societies that we are developing.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Agent-based computing has been an active research topic for many years. Agent concepts gained relevance in industry as adequate means to describe and build large and complex systems. Due to their autonomous, pro-active and social behavior, agents can better adapt to changes in their environment and solve problems they encounter during operation with limited intervention from the user. This has a large advantage over traditional systems for which the environment of the system had to be completely predictable or otherwise the system would not function correctly. However, if one creates a system with a number of autonomous agents it becomes unpredictable what the outcome of their interactions will be. In settings where the multi-agent system is used to implement a system with specific goals, this so-called emerging behavior can be perceived as a problem, because one does not want this emergent behavior to diverge from the overall goal of the system. Furthermore, it is unrealistic to think that any directed behavior will happen from the fact that agents happen to share some environment. Like humans, software agents will not work together just because they happen to be together, but require some external incentives for collaboration. We call such systems with specific goals, organizational systems.</p><p>We have developed an agent-oriented model for organizational systems, the Agent Society Model that emerges from the idea that in an organizational system, as in any organized society, interactions between members occur not just by accident but aim at achieving some desired global goals. That is, there are goals external to each individual agents that must be reached by the interaction of those agents. The desired global behavior of an organization is therefore external to the participating agents. Although agents will contribute to achievement of society goals, this happens only when such goals fit with the agents' own goals, or because of the agents' own motivation. Conceptually global organizational goals and rules cannot be attributed or modeled as part of the agents. Furthermore, we start from the fact that social structure is determined by organizational design and not dependent on the agents themselves.</p><p>The Agent Society Model distinguishes between the mechanisms though which the structure and global behavior of the model is described and coordinated, and the aims and behavior of the service-providers (agents) that populate the model <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b15">16]</ref>.</p><p>In order to represent interactions between agents in an open context, a framework is needed that is able to specify sequences of interaction scenes independently from the agent's internal design (internal autonomy requirement) -without fixing the interaction structures completely in advance (collaboration autonomy requirement).</p><p>The framework consists of three interrelated models. The structure and coordination norms as intended by the organizational stakeholders are described in the Organizational Model <ref type="bibr">(OM)</ref>. Components of this model are roles, constraints, interaction rules, and communicative and ontology framework. Based on their own goals, individual agents join the society as enactors of roles. Possible agent populations of the organizational model are specified in the Social Model (SM) in terms of contracts that make explicit the commitments regulating the enactment of roles by individual agents. Finally, given an agent population, the Interaction Model (IM) describes possible interaction between agents. Depending on the aims and characteristics of the application, the OM will allow for more or less freedom for its agent population to decide and negotiate on how to interact with each other. In order to limit the unpredictability of the system that may arise due to the autonomous behavior of agents, agreements concerning role enacting and interaction are fixed in contracts. Contracts allow to integrate the top-down specification of organizational structures with the autonomy of participating agents. The use of contracts to describe activity of the system allows in one hand for flexibility in the balance between organizational aims and agent desires and on the other hand for verification of the outcome of the system.</p><p>In this paper we present a logical formalism for describing interaction in a agent society. The formalism enables the specification of social norms and interaction contracts. The logical formalism combines elements from deontic and branching time logic. In the remainder of this paper we will introduce the main features of this logic. The paper is organized as follows. In section 2 we give some rationale for the formalization of agent societies. Section 3 introduces LCR, the logic for contract representation that we have developed. In section 4 we show how several contrary-toduty situations are handled in LCR. Section 5 described how LCR can be used to represent interaction contracts between agents. In section 6 we discuss related work on the formalization of organizational behavior on multi-agents systems. Finally, in section 7 we present our conclusions and indicate directions for further research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Formal Specification of Agent Societies</head><p>Norms have been identified in social sciences as crucial tools for important (agent) societies issues such as coordination, cooperation, trust and reputation. A formalism for agent societies must be able to uniformly describe and reason about social structure (landmarks and roles) and interaction (social and interaction contracts). Such formalism facilitates the analysis of societies and verification through logical reasoning, that is, verification of society design gets down to prove inconsistencies in the logical description.</p><p>In systems where agents are assumed to be autonomous and intelligent, agents can, involuntarily or by deliberate choice, violate social norms and regulations and therefore one must be able to deal and reason about violations. The use of deontic logic as a formalism for multi-agent systems has been advocated by several researchers (cf. <ref type="bibr" target="#b14">[15]</ref>). Deontic logic provides mechanisms to reason about violability of norms, that is, about how to proceed when norms are violated. In practice, logical formalisms for agents have been used to (1) specify agents in an abstract manner and to (2) verify and reason about agent behavior, independently of the implementation language used to represent the agent.</p><p>A more advanced form of agenthood, normative agents (that is, agents that can reason about norms and obligations) can bridge the gap between individual autonomous agents and the agent society, in the sense that the cognitive concept of obligation is the building block of complex social notions like coordination, cooperation, trust and reputation.</p><p>Furthermore, verification of the behavior of an open society, where the design of participating agents cannot be controllable, must be based on the externally observable effects of agent actions. That is, from the society perspective, different actions that bring about the same state of affairs in the world cannot be distinguished. From the above considerations, it follows that a logical formalism for the Agent Society Model must be able to represent: -Deontic relations (obligations, prohibitions, permissions) -Externally observable results of agent actions (changes in state caused through influence of agents) -Temporal relationships (effect of actions and agreements is not instantaneous and not deterministic, several futures are possible at each moment depending on agent decisions and environment changes) -Violations and reasoning about effects and recovery from violated states</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Logic for Contract Representation</head><p>The Logic for Contract Representation (LCR) that we propose is based on a branching-time logic. This means that formulae are interpreted over tree-type branching structures that represent all conceivable ways the system can evolve. Nodes represent states and arcs correspond to the occurrence of events. A path represents a course of events and links states in the time structure according to the choices and possibilities available to agents at each moment. Our proposal extends the formalism based on Temporal and Deontic Logic, BTLcont, proposed by Dignum and Kuiper <ref type="bibr" target="#b3">[4]</ref>. BTLcont is in itself an extension to the well known branching-time temporal logic (CTL*) proposed by <ref type="bibr">Emerson and Halpern [8,</ref><ref type="bibr" target="#b9">10]</ref>. While Emerson and Halpern provide a sound and complete axiomatization for CTL*, we do not address the issue of completeness in this paper. Our main aim is to present an expressive semantics for contracts, that represent interaction between agents in an abstract way, that is, independent from the internal architecture of the agents.</p><p>We further extend branching time logic with a stit operator, E a ('agent a sees to it that') based on Pörn <ref type="bibr" target="#b13">[14]</ref>. This allows us to refer to the externally 'observable' consequences of an action instead of the action itself. Remember that agent internals are not visible from the organizational perspective, and therefore it is not possible to refer to specific actions of an agent. In our use of E a we draw from the logic proposed by Wooldridge for the combination of a stit operator with a temporal logic <ref type="bibr" target="#b16">[17]</ref>.</p><p>Moreover, clauses in a contract (deontic expressions in LCR) indicate that something must happen (ideally something happens) but in fact it may never happen at all! A logic for contract representation must therefore be able to reason about states in which an obligation has been violated. Obligations have to do with the preference of individuals (or societies) to be in a certain state. O a j ( the obligation for agent a to see to it that j holds) indicates that, in the society, it is preferable for a to be in a state where j holds rather than in any other state. This does not mean that agent a cannot be in other states either by choice or necessity. A violation, viol(a,j,d), is interpreted as 'agent a is in a violation situation concerning the obligation to do j before deadline d' <ref type="foot" target="#foot_0">1</ref> . The basic idea is that worlds in which a violation proposition holds are less preferred by the agent concerned. Sanctions are defined in order to make it possible for violations to be redeemed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Syntax of LCR</head><p>LCR is an extension of CTL*, which in turn is an extension of classical propositional logic<ref type="foot" target="#foot_1">2</ref> . Well-formed formulae of LCR are built of a set F of atomic propositions that may be combined using the classical proposition connectives ¿ ('or') and ½ ('not'). Other propositional connectives such as ¾ ('and'), (logical implication) and (logical equivalence) can be introduced as abbreviations. The language also contains the constants true, false, the CTL* operators A (always in the future), S (since), X (in the next state), Y (yesterday, or in the previous state), U (until), (before) and the stit operator E. Furthermore, we introduce a predicate viol(a, j, d) that holds in states where O a (j d) has been violated by agent a. The E operator is labeled with agents and/or group identifiers. Elements a, b, …, of a set Ags of agent identifiers are used as labels for E. For example E a is read as 'agent a sees to it that'.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 1 Syntax of LCR</head><p>The set of well-formed formulae of LCR is introduced inductively, given a set F of atomic propositions (including true, false). As in CTL*, LCR distinguishes between state formulas (evaluated in a state) and path formulas (evaluated in a path). 1. Every member of F is a state formula 2. If j, j 1 and j 2 are state formulas, then so are ½j, j 1 ¿ j 2 , Yj and j 1 S j 2 3. If j is a state formula, then so is E a j, for all a ³ Ags 4. If j 1 and j 2 are state formulas, then so is viol(a, j 1 , j 2 ), for all a ³ Ags 5. Each state formula is also a path formula 6. If y is a path formula, then Ay is a state formula 7. If y, y 1 , y 2 are path formulas, then so are ½y, y 1 ¿y 2 , y 1 Uy 2 , y 1 y 2 and Xy</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Semantics of LCR</head><p>Usually different events are possible at any moment. That is, at each moment different futures are possible depending on the events in the world. We therefore have defined the semantics for LCR using branching time structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2 Branching Time Structure</head><p>A branching time structure is a tuple (W, R) where: -W is a set of worlds (states) and -R ² W W is the successor relation on states, such that the reflexive, transitive closure of R, R*, is a total tree relation. R* represents all possible courses of system history. A path (or trace) through R is a sequence (s i | i ³ IN) such that "i ³ IN we have (s i , s i+1 ) ³ R. If t is a path then state t(i) is the i-th element of p. We assume that there is a state s 0, which is the root of (W, R). Furthermore, we represent the tail of the path starting with state t(i) by t[i].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3 Semantic Model</head><p>A semantic model M for LCR is a structure M = (W, R, p) where (W, R) is a branching time structure and p is a valuation function, which associates each s ³ W with the set of atomic propositions from F that are true in that world.</p><p>A path is a full and infinite sequence of states. Paths do not have to start from the root, but once started, there is always a following state in the path.. By acting, agents can influence the next state in a path. The actions of agents are some of the possible events in the graph. In order to be able to represent the influence of an agent on changes in the world, we introduce the notion of controllable and uncontrollable expressions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Controllable and Non Controllable Propositions</head><p>Intuitively it only makes sense to specify E a j for a formula j if agent a can indeed 'see to it' that j holds, that is if the agent can control or influence the truth value of j. For instance, it does not make sense to express E a rains because the fact whether it rains or not is not something that an agent can control. Inspired by the work of Boutelier <ref type="bibr" target="#b1">[2]</ref> and Cholvy and Garion <ref type="bibr" target="#b3">[4]</ref>, we partition for each agent a the set of atomic propositions F in any world w of M in two classes: a C and a C _ in which a C is the set of atomic propositions that agent a can control and a C _ the set of atomic propositions that a cannot control.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4</head><p>Valuation Function 1) Let p be the valuation function of a semantic model M = (W, R, p), which associates each s ³ W with the set of atomic propositions from F that are true in that world. For a set P of atomic propositions, p(P) indicates the restriction of p to the propositions in P (that is, the subset of true propositions of P). For every agent a, p can thus be written as &lt;p( a C ), p( a C _ )&gt;, the composition of the restriction of p to the controllable atomic propositions of a and the noncontrollable atomic propositions of a. 2) For a set P of atomic propositions, P(P) is the set of all valuations of atoms of P.</p><p>3) We need furthermore to define the concatenation of two valuation functions.</p><p>Given two valuation functions u and v such that dom(u</p><formula xml:id="formula_0">) ¬ dom(v) = «, u.v(p) is defined as:    ∈ ∈ = dom(v) p v(p), dom(u) p u(p), u.v(p)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 5 Controllable and Uncontrollable Propositions</head><p>Given classes a C and a C _ defined as above, 1) a proposition j is a-controllable in a state s ³ W, where M = (W, R, p) is a semantic model, iff</p><formula xml:id="formula_1">"u ³ P ( a C _ ), $ v 1 , v 2 ³ P ( a C ) and $ s 1 ³ W, p(s 1 ) = u.v 1 , $ s 2 ³ W, p(s 2 ) = u.v 2 , such that (M, s 1 ) |= j and (M, s 2 ) | j.</formula><p>2) An expression is a-uncontrollable iff it is not a-controllable.</p><p>For example consider model M = (W, R, p) and the propositions p and q, such that p ³ a C and q ³ a C _ . In this case, proposition p ¾ q is not a-controllable, because q is not a-controllable, and if q is false, agent a cannot make p ¾ q to be true. Tautologies are never a-controllable, that is, if something is always true, no agent can claim to see to it that it will become true. Theorem "j, if |= j then j is a-uncontrollable for agent a. That is, agent a cannot control tautologies. Proof. Suppose j such that $j, |=j and j is a-controllable. |=j implies "s, (M,s)|= j.. However from the definition of a-controllable there must be a s ³ W such that (M, s) |= ½j. Therefore j cannot be a tautology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Path and State Semantics</head><p>As in CTL*, we define the semantics for state and path formulae separately. A path formula is a formula that is interpreted with respect to a path through a branching time structure. Paths correspond to histories of the system. In contrast, a state formula is interpreted with respect to a system state. The semantics of path formulae are given via the path formula satisfaction relation represented by '|=' that relates tuples of the form (M, p), where M is a LCR-model, M = (W, R, p), and t a path (or trace) in M, to path formulae of LCR. This relation is defined by the following rules: </p><formula xml:id="formula_2">(P1) (M, t) |= j iff (M, t(0)) |= j,</formula><formula xml:id="formula_3">(S5) (M, t(i)) |= Yj iff (M, t(i-1)) |= j (S6) (M, t(i)) |= j 1 Sj 2 iff $ k i such that (M, t(k))|= j 2 and</formula><p>"j, k &lt; j i, (M, t(j))|= j 1 (S7) (M, s) |= E a j iff 1) j is a-controllable: "s'³W, if (s, s')³R, (M, s') |= j 2) j is a-uncontrollable: false The semantics of LCR are standard branching time semantics with the exception of E a j. E a j is intended to represent the fact that agent a sees to it that j is satisfied. The semantic rule for E a j can be described informally as: agent a acts in world w in such a way that the truth of the a-controllable expression j is guaranteed. The stit operator E a ignores the means by which agent a will bring about a state of affairs. We furthermore introduce the operator D a j that represents the fact that a specific state of affairs has indeed been brought about by an agent in the previous world. D a j, meaning 'j has been done by a' is defined as:</p><formula xml:id="formula_4">(M, t(i)) |= D a j iff (M, t(i-1)) |= ½j ¾ E a j</formula><p>The following property holds for D a :</p><p>|= D a j j</p><p>(1)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Representing Deontic Modalities in LCR</head><p>In a logic for the representation of contracts it must be possible to specify a time limit for realizing a certain state of affairs. Contracts express commitments that agents make to each other, that is an obligation for an agent to bring about a certain state of affairs (that is of interest to another agent). A deadline for the fulfillment of such obligations is usually indicated by the contract. A possible way to express deadlines is to indicate that an event should take place before a certain condition becomes true. Moreover, clauses in a contract indicate that something must happen (it is desirable that something happens) but in fact if may never happen at all! A logic for contract representation must therefore be able to reason about situations (worlds in the semantics above) in which an obligation has been violated. Obligations have to do with the preference of individuals (or societies) to be in a certain state. O a j indicates that, in the holding society, it is preferable for a to be in a state where j holds than in any other state. This does not mean that agent a cannot be in other states either by choice or necessity. Worlds where a violation proposition holds are less preferred by the agent concerned.</p><p>We introduce obligation as a derived operator in LCR. Obligations in LCR express the fact that agent a is expected to bring about a certain state of a affairs (result) r before a certain condition (deadline) d has become valid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 6 Obligation with Deadline</head><p>The obligation of agent a to see to it that result r is achieve before an event d happens, is defined in LCR as:</p><p>O a (r d) = def A(½d U ((E a r ¾X(A½viol(a,r,d))) ¿ X(d ¾ viol(a,r,d))))</p><p>Where X(A ½viol(a,r,d)) indicates that this violation will not occur anymore in the future <ref type="foot" target="#foot_2">3</ref> . The obligation without deadline is a special case of the definition above:</p><formula xml:id="formula_5">O a r = def O a (r true)</formula><p>It is interesting to note that in LCR the proposition O a (r d) ¾ O a (½r d) is consistent. As actually is O a r ¾ O a ½r. One or both of the obligations can be true due to the fact that the violation for that obligation is true.</p><p>The definition of obligation expresses the fact that in all worlds reachable from a world where O a (r d) holds either the agent has seen to it that result r has been achieved or a violation of the obligation holds in those worlds. Intuitively, the idea is that an obligation will 'disappear' once the result is achieved within the deadline. However, this is not the case. Fulfilling an obligation does not mean that the obligation disappears but, once the result is achieved within the deadline, the obligation can never result in a violation anymore. Formally this is represented as:</p><formula xml:id="formula_6">|= O a (r d) ½viol(a, r,d) S D a (r d) (2)</formula><p>Conditional obligations are obligations that only become active if the precondition becomes valid. Unlike regular obligations, that only hold once, a conditional obligation will come in force every time the condition holds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 7 Conditional Obligation with Deadline</head><p>The obligation of agent a to see to it that result r is achieved before an event r happens given that precondition p holds, is defined in LCR as:</p><formula xml:id="formula_7">O a (r d | p) = def A((p O a (r d)) U(D a r ¿ d))</formula><p>In this definition, the expression U(D a r ¿ d) is necessary in order for the conditional obligation to be removed once it has been realized (or it cannot be done anymore because the deadline has passed). Otherwise, whenever p becomes true the obligation will arise. Because p can still be true after the obligation is fulfilled, the obligation will arise again and again.</p><p>Note that the special case of a conditional obligation, O a (r d |true) is not the same as the regular obligation O a (r d), but expresses an obligation that always holds. Another property of conditional obligations, is that they became 'normal' obligations whenever the precondition holds. Formally, this is expressed as:</p><formula xml:id="formula_8">|= O a (r d | p) ¾ p ¾ ½r ¾ ½Yd O a (r d)<label>(3)</label></formula><p>Intuitively, one expects that once a deadline has passed, its violation will always hold, or at least until a sanction is performed. However this is not yet the case, if we consider the definitions above. We need thus to introduce the following axiom:</p><formula xml:id="formula_9">Axiom |= viol(a, r, d) A( viol(a, r, d) U D a s)</formula><p>where s is the sanction that will remove viol(a, r, d), which can also be represented by sanction(s, a, r, d).</p><p>Sanctions themselves can be seen as obligations conditional on the occurrence of a violation. This leads to the following observation concerning the sanctions. If sanction(s, a, r, d), that is, s is the sanction that will remove viol(a, r, d), then: <ref type="figure">½viol(a,</ref><ref type="figure">r,</ref><ref type="figure">d) ¾½viol(a,</ref><ref type="figure">s,</ref><ref type="figure">d´))¿((viol(a,</ref><ref type="figure">r,</ref><ref type="figure">d</ref>) ¾viol(a, s, d´))Sd´( <ref type="formula">4</ref>)</p><formula xml:id="formula_10">O a (s d´ | viol(a, r, d)) ¾ viol(a, r, d) ((</formula><p>So, either all the related violations disappear through performing the sanction or additional violations arise when it is not performed.</p><p>Obligations that hold in cases of violation of another obligation, such as sanctions, are known as contrary-to-duty obligations. Contrary-to-duty situations lead to some well-known paradoxes in standard deontic logic (SDL). In the next section we discuss some of these and describe how our formalism behaves in contrary-to-duty situations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Contrary-to-Duty Imperatives</head><p>A contrary-to-duty obligation is an obligation that is only in force in a sub-ideal situation. This is often necessary to represent some aspects of legal systems.</p><p>Unfortunately, contrary-to-duty reasoning leads to notorious paradoxes of deontic logic. Paradoxes of deontic logic are logical expressions (in some logical language) that are valid in (many) well-known logical systems for deontic reasoning, but which are counterintuitive in a common sense reading <ref type="bibr" target="#b10">[11]</ref>. The problem with most contrary-to-duty situations is that obligations referring to the most ideal situation conflict with obligations referring to less ideal cases. In contrast to many deontic logics, LCR explicitly represents the notion of violation. Intuitively, violation changes the context of (normative) reasoning. Violation contexts distinguish between ideal and sub-ideal contexts, varying in degree of 'ideality'.. Therefore, the representation of contrary-to-duty imperatives in LCR is in most cases straightforward.</p><p>It is not our intention to show here how LCR behaves for all the many contrary-toduty situations that have been described for deontic logic, but we will take three versions of the Chisholm paradox <ref type="bibr" target="#b2">[3]</ref>, the forward, the parallel and the backward versions, as representative. Moreover, because our research is applied in the area of Knowledge Management and the support of Communities of Practice, we have taken examples from this areas for the informal description of the paradoxes.</p><p>Note that, from the definitions of obligation and conditional obligation in LCR, it can be proven that O a (j) ¾ O a (y|j) does not imply O a (y). This is essential for the faithful representation of contrary-to-duty situations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The Forward Version of the Chisholm Paradox</head><p>In this contrary-to-duty situation extra activities are obliged after a certain obligation holds, which do not hold otherwise. In our example, the rules of a knowledge sharing community are as follows: Meeting chairs must publish notes of the meeting (F1). When meeting notes are published, this must be announced to group members (after publishing) (F2). If not published, then it must not be announced (F3). In SDL, a paradox follows from the case that notes are not published (F4). The formal specification of the above rules, in the generic case is:</p><formula xml:id="formula_11">(F1) O a (j)</formula><p>(a is obliged to publish meeting notes) (F2) O a (y | j) (given that notes are published, a is obliged to announce it) (F3) O a (½y | ½j) (if not publish, a is obliged not to announce publication) (F4) ½j From the way obligations are defined in LCR, F1 expresses that j still has to be made true by a, that is Ea(j), and in F2 the obligation O a y only holds in states where j already holds. This implies a time difference between when j should be true and y should be true. This is why this represents the forward version of the Chisholm paradox. Because, in our formalism, violation of norms is explicitly represented, this paradox does not result in states where a contradiction holds. Originating states can, however, be associated with a preference. The following table portrays the different states originating in this situation, where state S0 represents a state where the obligations hold and no action has been done and in each state only the relevant propositions are specified.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Parallel Version of the Chisholm Paradox</head><p>This version of the Chisholm paradox is better known as the Forrester, or 'gentle murder' paradox. An example of this contrary-to-duty situation, that results in a paradox in SDL, is when the following. agreements hold in a community: Members of Table <ref type="table">1</ref>. Forward version of Chisholm paradox in LCR</p><formula xml:id="formula_12">S 0 S 1 Possible next states ½j (F4) y viol(a, j) (from F1) viol(a,y) (from F3) O a (j) (F1) O a (y | j) (F2) O a (½y | ½j) (F3) ½j (F4) viol(a, j) (from F1) O a (½y ) (from F3) ½j (F4) ½y viol(a, j) (from F1)</formula><p>the community are not allowed to publish internal department reports (P1). But, if a member does publish an internal report, then it must be published in the discussion area (P2). Because publishing in the discussion area is a special case of publishing, this means that both activities are simultaneous (P3). The paradox arises when a report is published (P4). The generic formal specification of this situation is:</p><p>(P1) O a (½j) (a is obliged not to publish internal reports) (P2) O a (j y) (if published, a must publish it in the discussion area) (P3) y j (publishing follows from publishing in discussion area) (P4) j (a report is published)</p><p>Because, in our formalism, violation of norms is explicitly represented, this situation does not result in states where a contradiction holds. From P1 to P3, it is not possible in LCR to derive O a (y), which is usually the cause of the 'gentle murder' paradox in SDL. The following table portrays the different states originating in this situation, where state S0 represents a state where the obligations hold and no action has been done and in each state only the relevant propositions are specified. Because y can only be done at the same moment as j, in states where j holds either y or ½y must hold (y cannot happen at a latter state). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">The Backward Version of the Chisholm Paradox</head><p>In this contrary-to-duty situation extra activities are obliged before a certain obligation holds, which are not obliged. In our example, this can be described by the situation in which the following community rules hold: Members must attend group meetings (B1). If one attends a meeting, then one must tell that one is coming (before) (B2). If one does not attend a meeting, then one must not tell that one is coming (B3).</p><p>In SDL a paradox will occur when one does not attend a meeting (B4). The generic formal specification of this situation is:</p><p>(B1) O a (j) (a is obliged to attend group meetings) (B2) O a (y j) (If a attends, a must tell a is coming, before the meeting) (B3) O a (½y ½j) (If a doesn't attend, a must not tell a is coming) (B4) ½j</p><p>From this specification, one can see that LCR is utmost suitable to represent backward contrary-to-duty obligations due to the fact that in LCR deadlines are used explicitly. Because, in LCR, violation of norms is explicitly represented and there is a clear notion of time, the above situation does not result in states where a contradiction holds. The following table portrays the different states originating in this situation, where state S0 represents a state where the obligations hold and no action has been done and in each state only the relevant propositions are specified. Because y must be done before j, in states where j holds (B4) either y or ½y must already hold. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Using Contracts to Model Interaction</head><p>The interaction structure as specified in the OM, gives a partial ordering of interaction scenes and the consequences of transitions from one to the other scene to the roles (creation, destruction, etc). That is, the interaction structure indicates the possibilities of an agent at each stage and the consequences of its choices. Explicit representation of commitments is necessary in order to know how to proceed if the norm is violated but first of all to inform the agents about the behavior they can expect from the other agents. In this way, coordination can become possible. A contract is a statement of intent that regulates behavior among organizations and individuals. A formal language for contract specification, such as LCR, allows the evaluation and verification of agent interaction..</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 8 Contract</head><p>We define a contract, C, as a tuple C = (A, CC, S, T) where A is a set of agents, CC is a set of contract clauses (expressed as LCR formulae), S is the possible stages of the contract, and T gives the transition rules between states.</p><p>Transition rules are events in the domain that alter the status of the contract. Alternatively, a stage graph can be used to describe allowed states of the contract and the transition rules between states. The state graph represents the possible evolution(s) of the contract and the consequences of the changes in state to the different parties. Contract clauses are deontic expressions of LCR, that is, obligations, permissions or prohibitions, and as such may indicate deadlines and/or conditions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The following example is intended to illustrate the use of LCR to represent the interactions between two agent in a gent society. This contract expresses an exchange commitment agreed between agents S (a seller) and B (a buyer): S has agreed to sell B a bicycle for 6 KDV GD\V WR JLYH WKH ELF\FOH WR % DIWHU ZKLFK % PXVW SD\ 6 within 1 day. If S does not provide the bicycle on time, then the exchange will not go through. If B does not pay on time then an extra LV GXH ZLWKLQ GD\V )RUPDOO\ the clauses of this contract can be specified in LCR as<ref type="foot" target="#foot_3">4</ref> :  </p><formula xml:id="formula_13">O S (ϕ ≤ 2) O B (ψ ≤ 1 | D S (ϕ ≤ 2)) O B (λ ≤ 1 | viol(S,ϕ, 2)) O B (θ ≤ 2 | viol(B,ψ, 1)) ϕ O B (ψ ≤ 1) O B (θ ≤ 2 | viol(B,ψ, 1)) ϕ ψ viol(S, ϕ, 2) O B (λ ≤ 1) ϕ viol(B, ψ, 1) O B (θ ≤ 2)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>A main question to which this paper contributes is how formalize the behavior of multi-agent systems, and how to relate this behavior to the global objectives of the system. Commitments play an important part in agent interactions. In situations where several agents cooperate within an organizational framework, designed to realize global society objectives, commitments are a means to specify expectations on the behavior of other participants. Several approaches to the formalization of interaction have been presented that are based purely in terms of organization concepts (and thus not referring to specific agents).</p><p>Behavioral approaches to the design of multi-agent systems are gaining terrain in agent research and several research groups have presented models similar to our proposal. Recent developments recognize that the modeling of interaction in MAS cannot simply rely on the agent's own (communicative) capabilities. Furthermore, organizational engineering of MAS cannot assume that participating agents will act according to the needs and expectations of the system design. Concepts as organizational rules <ref type="bibr" target="#b17">[18]</ref>, norms and institutions <ref type="bibr" target="#b6">[7]</ref> and social structures <ref type="bibr" target="#b12">[13]</ref> all start from the idea that the effective engineering of MAS needs high-level, agentindependent concepts and abstractions that explicitly define the organization in which agents live <ref type="bibr" target="#b18">[19]</ref>.</p><p>One of the first works in this area is that of Ferber and Gutknecht <ref type="bibr" target="#b8">[9]</ref>. The organisation model structure they use includes high level concepts such as groups and roles within groups, and (intragroup and intergroup) role interaction. However expressive, AALAADIN does not offer primitives to describe interaction and coordination within and between groups and agents and the environment. This model was used as basis for a proposal for representation of social structures in AUML that does describe interaction between roles <ref type="bibr" target="#b12">[13]</ref>.</p><p>The model developed by the Alfebiite consortium is meant for the design of open agent societies and considers aspects of security and legal consequences of agent action in agent societies <ref type="bibr" target="#b0">[1]</ref>. The model includes representation primitives for agents, constraints, communication language, roles, social states and agent owners. In our opinion, this model lacks primitives for the representation of groups and complex interaction and coordination in a society.</p><p>Esteva et al. <ref type="bibr" target="#b6">[7]</ref> devise a formal specification language to design open agent systems as electronic institutions with focus on the normative aspects of societies. This proposal aims at the modeling of institutionalized electronic organizations (institutions). In this approach, roles are defined as patterns of behavior, normative rules are specified to limit or enlarge the space of agent actions and scenes are defined in order to represent the different contexts within an organization in which agents can interact. However, this framework takes a very low level approach to abstract interaction, by demanding that all interaction be expressed in terms of fully specified protocols.</p><p>A recent approach, based on deontic logic, is that of Pacheco and Carmo <ref type="bibr" target="#b11">[12]</ref>. They propose a role based model for organized collective agency, based on the legal concept of artificial person and on a normative perspective on organizations. Their logic attempts to capture the concept of taking up a role. However, the logic does not include any temporal concepts, which makes it not suitable to represent real life organizations. Moreover, they lack a formal definition of roles (viewed as identifiers) and assume that roles are generated from the contracts between agents.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>Contracts are used in an agent society to indicate agent conformance to some desired interaction patterns and to verify whether desired social states are preserved by agent activity. In this paper we have introduced LCR, a very expressive logic for describing interaction in multi-agent systems. This logic makes it possible to describe and verify contracts that specify interaction between agents. LCR is used as a formal basis for the framework for agents societies that we are developing. So far, we have concentrated on the logical representation of contracts. Future work needs to investigate how to reason formally about the interaction structure as a whole.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>1. O S (get-goods(B, bicycle) 2 days) 2. O B (get-money(S, 1 day | D S (get-goods(B, bicycle) 2 days)) 3. O B (cancel-deal(S,B, bicycle, 1 day | viol(S,get-goods(B,bicycle),2 days)) 4. O B (get-money(S, 2 days | viol(B, get-money(S, GD\ The contract transition graph depicted in Fig. 1, represents the possible evolution of the contract and the consequences of the changes to the different parties. Transitions between contract stages are expressions representing events in the agent society. In the figure, arrows labeled r represent the achievement of the result and arrows labeled d represent that the deadline has passed without result. In each box only the relevant propositions are displayed. A bold box is the initial stage and double lined boxes are final stages. Stages S6 and S8 are not specified in the contract. Since most contracts are not exhaustive, such stages will probably appear in every contract graph. Consequences of reaching such stage can be determined by society norms (for example, guilty agent is expelled from society). ϕ ≡ get-goods(B, bicycle) ψ ≡ get-money(S, 500) λ ≡ cancel-deal (S,B,bicycle,500) θ ≡ get-money(S, 510)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Example of a contract</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>|= y 1 Uy 2 iff $ i³IN such that (M, t[i]) |= y 2 and "k i, (M, t[k]) |= y 1 (P6) (M, t) |= y 1 y 2 iff " i³IN such that (M, t[i]) |= y 2 and $ j i:, (M, t[j]) | = y 1 The semantics of state formulae are given via the state formula satisfaction relation, also represented by '|=' that relates tuples of the form (M, s), where M is a LCR-model, M = (W, R, p), and s a world in W, to state formulae of LCR. This relation is defined by the following rules:</figDesc><table><row><cell></cell><cell>where j is a state formula</cell></row><row><cell>(P2) (M, t) |= ½y</cell><cell>iff not (M, t) |= y</cell></row><row><cell>(P3) (M, t) |= y 1 ¿y 2</cell><cell>iff (M,t) |= y 1 or (M, t) |= y 2</cell></row><row><cell>(P4) (M, t) |= Xy</cell><cell>iff " t': (t, t') ³ R, (M, t') |= y</cell></row><row><cell>(P5) (M, t) (S1) (M, s) |= p</cell><cell>iff p ³ p(s), where p ³ F</cell></row><row><cell>(S2) (M, s) |= ½j</cell><cell>iff not (M, s) |= j</cell></row><row><cell>(S3) (M, s) |= j 1 ¿j 2</cell><cell>iff (M, s) |= j 1 or (M, s) |= j 2</cell></row><row><cell>(S4) (M, s) |= Ay</cell><cell></cell></row></table><note><p>iff "t ³ paths(W, R), if t(0) = s then (M, t) |= y</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Parallel version of Chisholm paradox in LCR</figDesc><table><row><cell>S 0</cell><cell></cell><cell cols="2">Possible next states</cell></row><row><cell></cell><cell></cell><cell>j</cell><cell>(P4)</cell></row><row><cell></cell><cell></cell><cell>y</cell><cell></cell></row><row><cell>O a (½j)</cell><cell>(P1)</cell><cell>viol(a, ½j)</cell><cell>(from P1)</cell></row><row><cell>O a (j y)</cell><cell>(P2)</cell><cell>j</cell><cell>(P4)</cell></row><row><cell>y j</cell><cell>(P3)</cell><cell>½y</cell><cell></cell></row><row><cell></cell><cell></cell><cell>viol(a, ½j)</cell><cell>(from P1)</cell></row><row><cell></cell><cell></cell><cell>viol(a, jy)</cell><cell>(from P2)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>Backward version of Chisholm paradox in LCR</figDesc><table><row><cell>S 0</cell><cell></cell><cell cols="2">Possible next states</cell></row><row><cell></cell><cell></cell><cell>½j</cell><cell>(B4)</cell></row><row><cell></cell><cell></cell><cell>½y</cell><cell></cell></row><row><cell>O a (j)</cell><cell>(B1)</cell><cell>viol(a, j)</cell><cell>(from B1)</cell></row><row><cell>O a (y j)</cell><cell>(B2)</cell><cell>½j</cell><cell>(B4)</cell></row><row><cell cols="2">O a (½y ½j) (B3)</cell><cell>y</cell><cell></cell></row><row><cell></cell><cell></cell><cell>viol(a, j)</cell><cell>(from B1)</cell></row><row><cell></cell><cell></cell><cell>viol(a, ½y, ½j)</cell><cell>(from B3)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>When no deadline is specified for an obligation, the violation is simplified to viol(a, j).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>In finite domains, the existential quantifier can be introduced as a finite disjunction and the universal quantifier as finite conjunction.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>j is defined as: j = def ½(true U ½j).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>Note that, for example, '2 days' abbreviates the expression that denotes a time 2 days from now (the evaluation moment), and is true only at that point in time.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgement. The authors wish to thank Andrew Jones for his valuable comments on a previous version of this paper presented at the 2nd FAABS workshop.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A Formal Model of Open Agent Societies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Artikis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Autonomous Agents</title>
		<meeting>Autonomous Agents</meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="192" to="193" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Toward a Logic for Qualitative Decision Theory</title>
		<author>
			<persName><forename type="first">C</forename><surname>Boutelier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Principles of Knowledge Representation and Reasoning</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Doyle</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">E</forename><surname>Sandewall</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Torasso</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Contrary-to-Duty Imperatives and Deontic Logic</title>
		<author>
			<persName><forename type="first">R</forename><surname>Chisholm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Analysis</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="33" to="36" />
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An Attempt to Adapt a Logic of Conditional Preferences for Reasoning with Contrary-To-Duties</title>
		<author>
			<persName><forename type="first">L</forename><surname>Cholvy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fundamenta Informaticae</title>
		<imprint>
			<biblScope unit="page">47</biblScope>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Specifying Deadlines with Dense Time using Deontic and Temporal Logic</title>
		<author>
			<persName><forename type="first">F</forename><surname>Dignum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kuiper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Electronic Commerce</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="67" to="86" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An Organizational-oriented Model for Agent Societies</title>
		<author>
			<persName><forename type="first">V</forename><surname>Dignum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Weigand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dignum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Regulated Agent-Based Social Systems: Theories and Applications (RASTA&apos;02)</title>
		<meeting>Int. Workshop on Regulated Agent-Based Social Systems: Theories and Applications (RASTA&apos;02)<address><addrLine>Bologna, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-07">July. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On the formal specifications of electronic institutions</title>
		<author>
			<persName><forename type="first">M</forename><surname>Esteva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sierra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Arcos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Agent-mediated Electronic commerce (The European AgentLink Perspective)</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Dignum</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Sierra</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="1991">1991. 2001</date>
			<biblScope unit="page" from="126" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Temporal and Modal Logic</title>
		<author>
			<persName><forename type="first">E</forename><surname>Emerson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Theoretical Computer Science</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Van Leeuwen</surname></persName>
		</editor>
		<imprint>
			<publisher>Elsevier Science Publishers</publisher>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A meta-model for the analysis and design of organizations in multi-agent systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ferber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Gutknecht</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICMAS&apos;98</title>
		<meeting>of ICMAS&apos;98</meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A guide to the completeness and complexity of modal logic of knowledge and belief</title>
		<author>
			<persName><forename type="first">J</forename><surname>Halpern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Moses</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="319" to="379" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The Role of Deontic Logic in the Specification of Information Systems</title>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wieringa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dignum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Logics for Databases and Information Systems</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Chomicki</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Saake</surname></persName>
		</editor>
		<imprint>
			<publisher>Kluwer Academics Publishers</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="71" to="115" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Role Based Model for the Normative Specification of Organized Collective Agency and Agents Interaction</title>
		<author>
			<persName><forename type="first">O</forename><surname>Pacheco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Carmo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Autonomous Agents and Multi-Agent Systems</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Representing Social Structures in UML</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">V D</forename><surname>Parunak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Odell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Agent-Oriented Software Engineering II</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Weiss</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Ciancarini</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2222</biblScope>
			<biblScope unit="page" from="1" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Some Basic Concepts of Action</title>
		<author>
			<persName><forename type="first">I</forename><surname>Pörn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Logical Theory and Semantic Analysis</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Stenlund</surname></persName>
		</editor>
		<meeting><address><addrLine>Dordrecht</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Contextual Deontic Logic: Normative Agents, Violations and Independence</title>
		<author>
			<persName><forename type="first">L</forename><surname>Van Der Torre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Mathematics and Artificial Intelligence, Special Issue on Computational Logic in Multi-Agent Systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="33" to="63" />
			<date type="published" when="2003-01">January 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Specification by refinement and agreement: designing agent interaction using landmarks and contracts</title>
		<author>
			<persName><forename type="first">H</forename><surname>Weigand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Dignum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings ESAW&apos;02</title>
		<meeting>ESAW&apos;02<address><addrLine>Madrid, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Time, Knowledge, and Choice</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Agents II</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Mueller</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Tambe</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Abstractions and Infrastructures for the Design and Development of Mobile Agent Organizations</title>
		<author>
			<persName><forename type="first">F</forename><surname>Zambonelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Agent-Oriented Software Engineering II</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Weiss</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Ciancarini</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2222</biblScope>
			<biblScope unit="page" from="245" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Organizational Abstractions for the Analysis and Design of Multi-agent Systems</title>
		<author>
			<persName><forename type="first">F</forename><surname>Zambonelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Agent-Oriented Software Engineering</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Ciancarini</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1957">1957. 2000</date>
			<biblScope unit="page" from="235" to="251" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
