<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Inter-Session Modeling for Session-Based Recommendation *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Massimiliano</forename><surname>Ruocco</surname></persName>
							<email>massimiliano.ruocco@ntnu.no</email>
						</author>
						<author>
							<persName><forename type="first">Ole</forename><surname>Steinar</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Lillest?l</forename><surname>Skrede</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Helge</forename><surname>Langseth</surname></persName>
							<email>helge.langseth@ntnu.no</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Norwegian University of Science and Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Norwegian University of Science and Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Norwegian University of Science and Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Norwegian University of Science and Technology</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Inter-Session Modeling for Session-Based Recommendation *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3125486.3125491</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T09:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Recommender Systems</term>
					<term>Recurrent Neural Network</term>
					<term>Session-Based Recommendation</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In recent years, research has been done on applying Recurrent Neural Networks (RNNs) as recommender systems. Results have been promising, especially in the session-based setting where RNNs have been shown to outperform state-of-the-art models. In many of these experiments, the RNN could potentially improve the recommendations by utilizing information about the user's past sessions, in addition to its own interactions in the current session. A problem for session-based recommendation, is how to produce accurate recommendations at the start of a session, before the system has learned much about the user's current interests. We propose a novel approach that extends an RNN recommender to be able to process the user's recent sessions, in order to improve recommendations. This is done by using a second RNN to learn from recent sessions, and predict the user's interest in the current session. By feeding this information to the original RNN, it is able to improve its recommendations. Our experiments on two different datasets show that the proposed approach can significantly improve recommendations throughout the sessions, compared to a single RNN working only on the current session. The proposed model especially improves recommendations at the start of sessions, and is therefore able to deal with the cold start problem within sessions.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In a session-based setting, the actions of the user within a session are correlated. This means that a recommender system can observe the user's actions and improve the recommendations as the system learns more about the user's interest. Recently, RNNs has been shown to work well in the session-based setting <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b14">15]</ref>. RNNs are naturally good at working with sequences of data, because they have an internal memory storing the past observations, and the ability to update and discard information in their memory. Therefore, an RNN will make more accurate recommendations as it learns more about a user. This also means that a simple RNN will struggle to make good recommendations at the start of a session. The advantage of employing an RNN over many other recommendation/prediction models, is that it naturally considers the order of sequences. Many other models use the relaxed assumption that the order does not matter. Solutions that take the sequence into account are possible, but RNNs considers the order of sequences in a very natural way that few other models do.</p><p>In many of the services where user interaction is session-based, the users are logged in and their actions can be stored. If this is done, a recommender system can get access to the user's history, which it can use to improve the recommendations. A RNN could possibly use information from a users history to make precise recommendations from the start of a new session, and possibly improve all recommendations in that session. In the session-based scenario, the user history consists of an ordered sequence of sessions, and the RNN could also be used to process user history, as we show in our proposed architecture.</p><p>Session-based recommender systems that only consider the current session face the task of doing recommendations based only on small set of interactions. Collaborative filtering approaches fall short here, and usually content-based filtering is used instead, i.e. recommending similar items. The data in a session consists of a sequence of user actions. The sequences may vary in length. Also, the actions within a session are likely to be dependent. These properties fit well with RNNs, and therefore they can perform well in this setting. Intuitively, an RNN should be able to capture dependencies between items, like content-based filtering, but with its memory capabilities an RNN should also be able to consider the whole session, which could lead to more accurate predictions. Recent papers have shown promising results in using RNNs for session-based recommendation <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b11">12]</ref>.</p><p>When user history is available to the recommender system, collaborative filtering approaches, such as matrix factorization, can perform well. A RNN can still perform well, but it will probably struggle at the start of the sessions until it has learned what the user is interested in. This problem could of course be fixed if the RNN was able to learn from the user history before starting the session, and thus have a foundation to make recommendations on, right from the start. This extra information could potentially improve the overall recommendations, and especially the initial recommendations in each session. In a session-based setting where user history is available, the user history consists of past sessions. So the user history is a sequence of sessions, and each session is a sequence of events. This brings us back to our motivation for this work. The idea is to use an RNN to do predictions within a session, and to employ another RNN layer to contribute in the prediction of the users interests for the next session. Let's consider the example of a user shopping on a e-commerce site. One day he might buy a laptop, some days later he will buy some hiking gear, and some days after that he buys accessories to the laptop he bought in the first session. This illustrates that the users interest in a session can be dependent on what he did in earlier sessions, and that just considering the previous session is not enough.</p><p>In this work we will investigate how an RNN can be used to learn from user histories, and thereby improve the straightforward use of RNN in session-based recommendations. In particular, the contributions will be the following: <ref type="bibr" target="#b0">(1)</ref> We introduce the concept of inter session learning, <ref type="bibr" target="#b1">(2)</ref> We propose a way to learn the inter session behavior together with the intra-session one (3) We validate the effectiveness of the model by an extensive set of experiments, (4) We show the effectiveness of the method in tackling the cold start problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>In recent year, different deep learning techniques have been successfully employed in the recommendation context. In particular the use of RNN has been shown to be promising in the area of session-based recommendation. In this section we will present the state of the art in these areas. The idea of using RNN in a straightforward way for Session-based recommendation has been first introduced in <ref type="bibr" target="#b2">[3]</ref>. Further works, extending this initial work still employing an RNN for the recommendation task, have been presented in <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref>. In <ref type="bibr" target="#b2">[3]</ref> the authors shows that a basic RNN for session-based recommendations, can achieve remarkable results. They also deal with sparsity issues, and introduce a new ranking loss function for training the network. They experimented with two different datasets. Both datasets contain sequences of user clicks with timestamps. One dataset has clicks on items from an e-commerce site from the RecSys Challenge 2015<ref type="foot" target="#foot_0">1</ref> , while the other contains clicks on videos from a YouTube-like platform. Various modifications of the network were tested. A very similar architecture has been presented in <ref type="bibr" target="#b8">[9]</ref> and accepted at Recsys 2017. The current work has carried out in parallel and it is completely independent from that one. In <ref type="bibr" target="#b11">[12]</ref> the authors explored various ways for improving the model proposed in <ref type="bibr" target="#b2">[3]</ref>, used as baseline. They experiment with techniques that have worked well when neural networks have been applied to other problems, to see if those techniques can improve performance of an RNN session-based recommender as well. They experimented their proposed models on the same dataset based on four different way of improving the original model. They improved the original methods by mainly a) applying a data augmentation technique for tackling with the problem of session varying in length, b) accounting for temporal shifts in the data distribution related to users behavior to tackle cases in which the products are released in different periods of time. So far, the presented works refer to models that performs predictions solely based on the items clicked, where the items are only represented by an ID often in the form of a one-hot vector. Clearly, additional information, both about the item and about the sessions, could help improve the predictions. Some possible additional information about the item is the category of the item, an image, and a textual description of the item. Additional information about the session could be timestamps of the clicks, geo-location of the user, and weather. In <ref type="bibr" target="#b7">[8]</ref>, for example, the authors suggest that modeling the time of a session and the transition time between events in the session both can give better performance. Assumption about the temporal dimension is also done in other works. In <ref type="bibr" target="#b10">[11]</ref>, the main assumption of the authors is that user interests change over time. As an example, in <ref type="bibr" target="#b1">[2]</ref>, it was shown that users who visited spiegel.de, a popular German news portal, were likely to be interested in football related news. The reason was that the data was collected around the time of the Football World Cup of 2014. Similarly, user interests may change over time, e.g. during Summer and Christmas. The authors propose to use a model that combines static and temporal user features. The static features are learned by using the full training set, while the temporal features are learned by only training on the most recent examples. The time aspect is also considered in <ref type="bibr" target="#b4">[5]</ref> for the task of "Just in Time" recommendation, where the objective is to recommend the right items at the right time. The inter-session dependency are here considered to learn recurrent user activities by a LSTM-based architecture. The work proposed in <ref type="bibr" target="#b13">[14]</ref> start from the assumption that many of the current state of the art approaches and methods for recommendation are lacking when it comes to temporal and causal aspects inherent in the data. In particular they state that user profiles and movie attributes are generally considered static.They proposed an RNN-based model considering these aspects and modelling the user and movie dynamics. The model is shown to be able to capture temporal patterns in rating data, outperforming previous works in term of prediction accuracy Often, other extra information are available. In <ref type="bibr" target="#b12">[13]</ref>, the authors propose a model employing the item extra information available for example in some e-commerce site such as the type of action the user performed (i.e., viewing an item, adding it to the basket, removing it from the basket, or buying it). They propose an RNN-based model that makes use of this information for recommendations. The proposed model sends embedded event information through an RNN layer, the output is concatenated with an embedded item representation, before being sent through feed forward layers to produce a prediction. On a dataset with rich search contextual information, the proposed RNN model performs significantly better than other compared models and baselines. While on a dataset with less events and data, the RNN-based model performed worse than a matrix factorization model that was also customized to utilize event information. Sometimes, in some e-commerce site, items are also described and associated with information such as picture and textual description. In <ref type="bibr" target="#b3">[4]</ref>, the authors explore the possibility of employing this richer features representation in a number parallel RNN architectures to model sessions on the clicks and the rich features (text and images) of the clicked item.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE II-RNN ARCHITECTURE</head><p>In the session-based setting, the user's actions might depend on all earlier actions in the session, not just the previous one. How the dependencies between the actions work, will vary between different domains. For example, on a news site, if a user reads articles about German news and international sports, that user will probably be interested in reading news articles about German sport, while for a online grocery shopping site, past actions might indicate that the user will not be interested in similar items. If the user has added bread and milk to his basket, he will probably not add anymore bread or milk to that basket. But if the user has only added milk to the basket, it might be interested in adding bread as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Main Idea</head><p>RNNs work well in the session-based recommendation scenario because it can process sequences of user actions, and create an internal representation of the user's interests. Also, it does not assume that all actions indicate interest in something, it can learn to interpret actions as sign of disinterest. As discussed in the previous Section, the RNN model achieves state-of-the-art performance on session-based recommendation problems.</p><p>In addition to the short term dependencies between actions within a session, there are usually long term dependencies between actions from different sessions. E.g., a user that was interested in news articles about golf in his previous session(s), will probably also have that interest in his current session. Or a user that bought a new laptop in a recent previous session, will probably not be interested in buying another one in the current session, but he might be interested in accessories to the laptop he bought. This means that it should be possible to improve the recommendations for a session-based recommender system, by giving it information about the user's interaction history. Furthermore, one of the reasons that a RNN works well for recommendations within a session, is that it is able to process the sequence of the session events. Similarly, we believe that the order of the sequence of earlier sessions can be important. An example could be a person that regularly does his grocery shopping online. If he buys bread in one session, then he will probably not be interested in buying another one within the next few sessions. On the other hand, he is probably going to buy bread soon if he has not done so during the last few sessions.</p><p>The main idea is to use one RNN to process the events within a session, as has been done before, and to enhance the recommendations from this by using a second RNN to process a user's recent sessions and help the first RNN with an initial prediction about the current session. In other words, a RNN that works on a inter-session level, provides the initial hidden state for a RNN that works on a intra-session level. We will refer to this model as II-RNN (Inter-Intra RNN).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Problem Formulation</head><p>In the session-based recommendation scenario, there is a system with a set of items that a user can interact with; note that the term "item" is used in a broad sense here. We experiment with the proposed models using two different datasets, where the possible recommendations are sub-forums of a discussion site and artists on a music website, respectively. The datasets are described in Section 4.</p><p>Let N be the set of items in the system, and n v ? R d is the embedded representation of item v. Each user u has an interaction history S u = {S u t 1 , S u t 2 , . . .}, where S u is a session of interaction by user u at time t i . The session history is ordered temporally by t i . The session length is</p><formula xml:id="formula_0">|S u |. Each session S u t i consists of a collection of events {e u t i , j ? R m |j = 1, 2, ..., |S t i ,u |}</formula><p>, where e u t i , j is the representation of event j in the session. While events can be any type of interaction in general, events in this work will simply be items the user interacts with. Hence, an event will relate directly to an item v. All recommendation models we experiment with use an item id, i v ? {1, 2, ..., |N |}, as input for each item. However, the RNN models retrieves the corresponding embedded representation n v for each i v , and feed those into the RNN layer of the model. The common task for all the recommendation models we experiment with is to predict each consecutive item in a session S u t i . That is, for a sub-session {e u t i ,1 , e u t i ,2 , . . . , e u t i , j } of S u t i , the system is to predict e u t i , j+1 . This is repeated for j = 1, 2, . . .</p><formula xml:id="formula_1">|S u t i | -1.</formula><p>A recommendation R j is an ordered list of k recommended items, where we would want to see the next item, e u t i , j+1 , as close to the top as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Model Description</head><p>II-RNN combines the modeling of the inter-session with the intrasession behavior of a single architecture. The first the model is similar to the one used in <ref type="bibr" target="#b2">[3]</ref>, and the model proposed in <ref type="bibr" target="#b2">[3]</ref> will therefore serve as a baseline to compare the II-RNN model to. The intra-session RNN is identical in both the standalone intra-session RNN and in the II-RNN architecture.</p><p>Intra-session RNN. The intra-session RNN produces recommendations by processing the sequence of items in a session. Figure <ref type="figure" target="#fig_0">1</ref> illustrates the model. This model is very similar to the one in <ref type="bibr" target="#b2">[3]</ref> and other papers. We do not use one-hot encodings as input, but use item embeddings directly. Mathematically these two methods are equivalent, but in practice this saves us the computation required to create the one-hot vectors. When the set of items is huge, creating a mini-batch of one-hot vectors will require a large amount of memory, which can be a problem.</p><p>The embedded item representation is sent through one or multiple layers of GRU, and dropout is applied to these layers. Afterwards a feed-forward layer is used to scale up the vector to R |N | . The output vector is then</p><formula xml:id="formula_2">[o v 1 o v 2 ...o v |N | ]</formula><p>where o v i is a score for item v i ? N . The list of recommendations, R j is then created by taking items corresponding to the k highest scores, sorted by their score. Training is done with the Adam algorithm for stochastic gradient descent <ref type="bibr" target="#b5">[6]</ref>, and the loss is calculated with cross entropy on the full item-set. The target output is a score of 0 for all items, except for the relevant item which should get a score of 1. This means that we treat the recommendation problem as a classification problem. That is, given the users recent activity, predict the next item he will interact with. This works because the model predicts scores for how likely it believes that each item is the correct class, and these scores then form a natural way of ranking the recommendations.</p><p>II-RNN Model. Although the intra-session RNN can achieve a strong performance, it starts out in each session without any knowledge about the user. It learns about the user's interests throughout the session, but all that information is discarded again at the end of that session. The II-RNN can improve upon the intra-session RNN, because it takes the user's previous sessions into account, and supplies the intra-session part with information at the start of each new session. Figure <ref type="figure" target="#fig_2">2</ref> illustrates the II-RNN. For each session S u t i in a user's interaction history S u , let s u t i be an embedded vector representation of that session. The input to the inter-session RNN layer (the GRU layer in Figure <ref type="figure" target="#fig_2">2</ref>) is then the sequence {s u t z-? , s u t z-?+1 , . . . , s u t z }, where s u t z is the representation of the most recent session, and ? is the number of recent sessions that should be processed. The initial hidden state, H 0 , of the intra-session RNN is then set to final output of the inter-session RNN. In other words, the inter-session RNN produce the initial hidden state of the intra-session RNN, based on a series of vector representations of the most recent sessions for the given user. The output of the inter-session RNN is calculated before the intra-session RNN starts producing predictions.</p><p>We apply two different methods of producing the session representations s u t i . One is the average of the embedded vector representations of the items in the session, as illustrated in Figure <ref type="figure" target="#fig_2">2a</ref>. The other is to simply use the the last hidden state of the intra-session RNN as the session representation, illustrated in Figure <ref type="figure" target="#fig_2">2b</ref>. Even though the final hidden state can contain more useful information learned by the intra-session RNN, it is more a representation of the end of the session, rather than the whole session. Since the hidden state is produced by a RNN, it will depend on the order of the sequence of items in a session, while the average of the embeddings is unaffected by the order of the items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EXPERIMENTAL SETTING 4.1 Datasets</head><p>We experimented with two different datasets: The first is a dataset on user activity on the social news aggregation and discussion website Reddit<ref type="foot" target="#foot_2">2</ref> . This dataset contains tuples of usernames, a subreddit where the user made a comment to a thread, and a timestamp for the interaction. The second dataset contains listening habits of users on the music website Last.fm <ref type="bibr" target="#b0">[1]</ref>. This dataset contains tuples of user, timestamp, artist, and song listened to.</p><p>Reddit dataset. The Reddit dataset contains a log of user interaction on different subreddits (sub-forums), with timestamps. Here, an interaction is when a user adds a comment to a thread. Since the dataset itself, does not split the interactions into sessions, we did this manually when preprocessing the dataset. To do this we analyzed the dataset and specified a time limit for inactivity. Using the timestamps, we let consecutive actions that happened within the time limit belong to the same session. That is, for a specified time limit ? t , and a list of a user's interactions {a t 0 , a t 1 , . . . , a t n }, ordered by their timestamps t i , two consecutive interactions a t i and a t i +1 belong to the same session if and only if t i+1 ? t i + ? t . We set the time limit to 1 hour (3600 seconds). Note that users, in addition to commenting on threads, also do browsing and reading. Therefore it makes sense to set a time limit that allows for some time between the interactions captured in the dataset. Also some users are more active than others, some users are mostly passive consumers who rarely comments. So, it is impossible to set a time limit that fits all users. However, it is important that the time limit is large enough that the average session contains a fair amount of interactions, but small enough so that it is reasonable to assume that the interactions are dependent on each other.</p><p>Last.fm dataset. We also had to split each user's history into sessions manually for the Last.fm dataset. We used the same approach as for the Reddit dataset, but here we used 30 minutes (1800 seconds) as the time limit. Also, we faced the problem that the dataset contains an overwhelming amount of songs. Since our recommendation models produce a score for each possible item, the huge amount of songs caused a memory requirement problem. To solve this, we simplified the dataset by ignoring the specific song of each user interaction and only use the artists. This reduce the item set to a manageable size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Preprocessing</head><p>After the initial manual splitting into sessions, we used the same preprocessing for all the datasets. In the Reddit and Last.fm datasets, there were many items that repeated consecutively. We are not interested in a recommender system that learns to predict the last seen item, therefore we removed all consecutively repeating items, and only kept one instance. Furthermore, the RNN models need to have a specified maximum length of the sessions, because they must be unrolled in order to be trained. To deal with this, we set the maximum length, L, of a session to L = 20. Sessions that had a length l of L &lt; l &lt; 2L were split into two sessions. This was done because we did not want to throw away all sessions that were too long,  Table <ref type="table">1</ref>: Statistics for the datasets after preprocessing but splitting very long sessions create many sessions that should not be separate sessions, since the events in them depend on each other. However, there were some unreasonable long sessions that probably originate from bots or some other error source. These were removed with the 2L limit for session lengths. With this scheme, the majority of the sessions from all datasets were kept. Sessions of length l &lt; 2 were removed, and users with less than 3 sessions were also removed. Finally, the datasets were split into a training set and a test set on a per user basis. For each user, 80% of his sessions were placed in the training set, and the remaining in the test set. Each user's sessions were sorted by the timestamp of the earliest event in the session, and the test set contains the most recent sessions of each user. Table <ref type="table">1</ref> shows statistics for the two datasets after preprocessing (before splitting into training and test sets).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Baselines</head><p>In addition to the following baselines, the intra-session RNN itself forms a baseline for the II-RNN.</p><p>Most Popular. The most popular baseline is a very simple baseline, but it can perform decently in some cases. All items are sorted by their number of occurrences in the training set, and the top k items are recommended at each time step. Although a very basic baseline, it provides a nice sanity check. Any serious model should be able to beat this model.</p><p>Most recent. Even though we removed consecutive repetitions of items in all sessions, there could still be a high repetitiveness of items within sessions (i.e. some items can occur multiple times in a session). Especially in the Reddit and Last.fm datasets, where users can tend to interact with some subreddits or artists multiple times in their sessions. We believe that it is less likely to see such repetitiveness in the Instacart dataset, because users probably only add each item to their cart once. The most recent baseline behaves as a stack. It is initially filled with k random items. For each time step, the item interacted with is added to the top of the stack, and the item at the bottom is pushed out of it. However, if the new item is already in the stack, it is just moved to the top. The recommendation at each time step is then the stack of recently seen items, where the top recommendation is the item just interacted with. Our model should be able to beat this baseline significantly. But the most recent baseline gives us information about the diversity of items within sessions Item-kNN. Item-k nearest neighbors (Item-kNN) is a simple, but usually strong baseline. It is commonly used in practice as a item-toitem recommender <ref type="bibr" target="#b6">[7]</ref>. Different implementations are possible. We implemented it as follows. For each item in the dataset, we count the number of co-occurrences with the other items in the dataset. A co-occurrence is when two items appear in the same session. When testing, the algorithm recommends the top k items with highest co-occurrences with the last seen item. BPR-MF. The Bayesian Personalized Ranking for Matrix Factorization (BPR-MF) <ref type="bibr" target="#b9">[10]</ref> is a commonly used matrix factorization method. It tries to predict personal pairwise rankings of unseen items (i.e. given a user and two items, BPR-MF tries to predict which of the two items the user would rate higher). We use an Table <ref type="table">2</ref>: Best configurations for the RNN models. We found that the configurations that worked well for the II-RNN, worked well for the standalone intra-session RNN as well. Not all configurations are applicable to the standalone intrasession RNN.</p><p>existing implementation <ref type="foot" target="#foot_3">3</ref> , that we tweak slightly to fit our use case. The original implementation does not recommend already seen items, but in our case, users often interact with items they have already seen. BPR-MF computes feature vectors for users and items based on the users earlier interactions, and is then able to make a recommendation based on this. This means that the recommendations will be the same throughout future sessions, unless the model is re-trained. In other words, BPR-MF cannot be applied directly to session-based recommendations. To make a more fair comparison, we create a new split of the datasets. Only the last session of each user is put in the test set. BPR-MF still produce the same recommendations for all time steps in the test session for a given user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Evaluation and Hyperparameters Tuning</head><p>We used Recall@K and MRR@K with K = 5, 10, 20 to evaluate all models. In addition to the baselines already discussed, we also compared the intra-session RNN to the II-RNN on the two presented datasets. We experimented with mini-batch sizes, embedding sizes, learning rate, dropout rate, using multiple GRU layers, and number of session representations to find the best configurations for each dataset. The best configurations we found are summarized in Table <ref type="table">2</ref>. We employed two different configurations of the II-RNN, one using average-pooling and the other using last hidden state as session representations for past sessions. We used the same size for the item embeddings and internal vectors in the GRU layers. We found tanh to work well as activation function in the GRU layers, and did not investigate other alternatives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Creating mini-batches</head><p>We want our model to be biased towards recent user trends. This is often desirable in practice, and we find it reasonable to assume that it applies for our datasets. Furthermore, the way we split our dataset into training-and test sets reflect this. I.e. the test set contains the most recent samples for each user. This leaves us with two desirable properties for how the training samples should be processed. First, more recent samples should be processed last. Second, each mini-batch should contain a variety of users. I.e. no user should</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Implementation Details</head><p>The implementation is done in Python 3.5.2, with the Tensorflow machine learning software library. We run our experiments on three different computers, all with the Ubuntu 16.04 operating system.</p><p>All computers have at least 16 GB of RAM, and a Nvidia GeForce GTX 1060 6 GB or better. The code is available on github here <ref type="foot" target="#foot_4">4</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS AND DISCUSSION</head><p>We evaluate the performance of the proposed models by using the standard evaluation metrics presented in the previous Section. The comparison is performed over the baselines from literature over the two datasets, Last.fm and Reddit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Inter-session model effectiveness</head><p>We found that using multiple GRU layers did not improve performance neither when applied at the inter-session level, nor at the intra-session level. Dropout was crucial in order to get good results on the Last.fm dataset, while on the Reddit dataset the models got better results without dropout. To achieve the best results, dropout had to be used on all GRU layers. Table <ref type="table" target="#tab_2">3a</ref> shows an overview of how the models and baselines scored on the Reddit dataset. Relative scores are given compared to the standalone intra-session RNN, considered the strongest baseline. We ran the RNN model three times and the results presented in the table are averages of three runs, even though the results were usually consistent between runs. Similarly, Table <ref type="table" target="#tab_2">3b</ref> presents the results for the Last.fm dataset. For both datasets, Item-kNN and RNN were the strongest baselines, but were both clearly outperformed by the intra-session RNN.</p><p>When it comes to the two versions of II-RNN (AP using average pooling and LHS using the last hidden state, cf. Figures <ref type="figure" target="#fig_2">2a</ref> and<ref type="figure" target="#fig_2">2b</ref>), Table <ref type="table" target="#tab_2">3a</ref> shows that using the last hidden state of the intra-session RNN as the representation of a session is slightly better than using average pooling for the Reddit dataset, while the results for the Last.fm dataset (Table <ref type="table" target="#tab_2">3b</ref>) are reversed, this time with AP being better than LHS.</p><p>Finally, Table <ref type="table" target="#tab_3">4a</ref> and 4b shows how the BPR-MF baseline performed on the hold-one-out version of the dataset. Due to limited space, we only show the results for the BPR-MF. In all cases, the II-RNN significantly outperformed the standalone intra-session RNN and the BPR-MF method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Impact on Session Cold start problem</head><p>The intra-session RNN learns about the user as it observes item interactions throughout a session. It is therefore reasonable to believe that the model's prediction accuracy increases throughout the session. As discussed, the II-RNN can improve both the overall recommendations, and especially the first few recommendations in R@5 R@10 R@20 MRR@5 MRR@10 MRR@20   each session, impacting strongly on the cold start problem within a session. To evaluate this, we test the RNN models both on the overall recommendations and on the first n recommendations in a session, for n = 1, . . . , 5, L, where L is the maximum session length.</p><p>That is, we evaluate the models on recommendations for the first n time steps, and note that when n = L we retain the overall score already reported. A comparison between RNN and II-RNN-LHS in terms of Recall@5 are shown in Figure <ref type="figure" target="#fig_4">3a</ref> for the Reddit dataset. Notice how the II-RNN already at the first recommendation of a new session achieves R@5 &gt; .4, a substantial 89% improvement over the RNN model. While the RNN catches up somewhat as more interactions are seen in the current session, the II-RNN also improves with more information, and holds a 32.7% improvement over the RNN at the end of the session. Similar results can be seen in Figure <ref type="figure" target="#fig_4">3b</ref>, where II-RNN-AP is compared to the RNN using the Last.fm dataset. Again, we see a dramatic improvement early on in a new session, and even though the RNN catches up some of the II-RNN's 36.7% lead, the II-RNN remains superior throughout the session.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION</head><p>In this paper we have investigated a new RNN architecture for session-based recommendations, termed II-RNN. II-RNN combines modeling of recommendations inside a single session with an intersession RNN that serves as a memory of user interactions from historical sessions. The two parts are combined into a single architecture. We have evaluated II-RNN using two publicly available datasets, and show considerable improvements over strong baselines. Furthermore, we found the II-RNN model to be particularly adept to making recommendations early in a user session, thereby helping to alleviate the well-known cold-start problem sessionbased recommender systems are confronted with. We anticipate at least two paths for future research: Firstly, while the II-RNN model already works well using either of the two methods for creating session representations (AP and LHS), we will consider other approaches as well. Further improvement can potentially be achieved by for example considering more complex methods for representing each session, or by using other more advanced attention mechanisms. Secondly, we are currently utilizing time-information only implicitly through the notion of sessions. We believe that explicitly representing the time-difference between sessions will improve the recommendations, and are currently investigating how to efficiently incorporate this information into the recommendation process.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The intra-session RNN</figDesc><graphic url="image-1.png" coords="4,113.39,83.68,121.06,127.57" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(a) The II-RNN Model with average pooling to create session representations from items. (b) The II-RNN Model where the last hidden state of the intrasession RNN is stored as the session representation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The proposed II-RNN architectures</figDesc><graphic url="image-2.png" coords="5,62.54,83.68,216.00,179.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>(a) Reddit Dataset. (b) Last.fm Dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Effect of cold-start at the offset of a new session.</figDesc><graphic url="image-4.png" coords="8,72.63,84.92,241.91,148.81" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Recall and MRR scores for the II-RNN models and the baselines. Relative scores are given compared to the standalone intra-session RNN. The best results per dataset are highlighted. The two II-RNN models differ by how they feed information to the inter-session model, either using average pooling (II-RNN-AP) or the last hidden state (II-RNN-LHS).</figDesc><table><row><cell>R@5</cell><cell>R@10</cell><cell cols="3">R@20 MRR@5 MRR@10 MRR@20</cell></row><row><cell cols="3">BPR-MF 0.1271 0.1900 0.2621</cell><cell>0.0878</cell><cell>0.0961</cell><cell>0.1011</cell></row><row><cell cols="3">RNN 0.3660 0.4388 0.5118</cell><cell>0.2781</cell><cell>0.2878</cell><cell>0.2928</cell></row><row><cell cols="4">II-RNN-LHS 0.5022 0.5803 0.6537 0.3807</cell><cell>0.3912</cell><cell>0.3963</cell></row><row><cell></cell><cell cols="3">(a) Reddit Dataset.</cell></row><row><cell>R@5</cell><cell>R@10</cell><cell cols="3">R@20 MRR@5 MRR@10 MRR@20</cell></row><row><cell cols="3">BPR-MF 0.0619 0.0833 0.1207</cell><cell>0.0467</cell><cell>0.0494</cell><cell>0.0520</cell></row><row><cell cols="3">RNN 0.1568 0.2088 0.2761</cell><cell>0.0972</cell><cell>0.1041</cell><cell>0.1088</cell></row><row><cell cols="4">II-RNN-AP 0.1775 0.2390 0.3133 0.1085</cell><cell>0.1165</cell><cell>0.1216</cell></row></table><note><p>(b) Last.fm Dataset.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 :</head><label>4</label><figDesc>Recall and MRR scores for the BPR-MF baseline and the RNN models on the hold-one-out version of the dataset. Only the best performing II-RNN model is included for each dataset.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Recsys challange</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>2015: http://2015.recsyschallenge.com/challenge.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>Subreddit interactionsdataset: https://www.kaggle.com/colemaclean/ subreddit-interactions</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>theano-bpr: https://github.com/bbc/theano-bpr be over represented with samples in any mini-batch. To achieve these properties, we constructed the following scheme for creating mini-batches. Each training sample, a session, is associated with a user. All sessions belonging to the same user, are grouped together and sorted oldest to newest.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>https://github.com/olesls/master_thesis</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Million Song Dataset</title>
		<author>
			<persName><surname>Thierry Bertin-Mahieux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><surname>Whitman</surname></persName>
		</author>
		<author>
			<persName><surname>Lamere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th International Conference on Music Information Retrieval</title>
		<meeting>the 12th International Conference on Music Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Multi-View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems</title>
		<author>
			<persName><forename type="first">Ali</forename><surname>Mamdouh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elkahky</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Yang</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>He</surname></persName>
		</author>
		<idno type="DOI">10.1145/2736277.2741667</idno>
		<ptr target="https://doi.org/10.1145/2736277.2741667" />
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conferences Steering Committee, Republic and Canton of</title>
		<meeting><address><addrLine>Geneva, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="278" to="288" />
		</imprint>
	</monogr>
	<note>Proceedings of the 24th International Conference on World Wide Web (WWW &apos;15</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Session-based Recommendations with Recurrent Neural Networks</title>
		<author>
			<persName><forename type="first">Bal?zs</forename><surname>Hidasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexandros</forename><surname>Karatzoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Linas</forename><surname>Baltrunas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Domonkos</forename><surname>Tikk</surname></persName>
		</author>
		<idno>CoRR abs/1511.06939</idno>
		<ptr target="http://arxiv.org/abs/1511.06939" />
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Parallel Recurrent Neural Network Architectures for Feature-rich Session-based Recommendations</title>
		<author>
			<persName><forename type="first">Bal?zs</forename><surname>Hidasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Massimo</forename><surname>Quadrana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexandros</forename><surname>Karatzoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Domonkos</forename><surname>Tikk</surname></persName>
		</author>
		<idno type="DOI">10.1145/2959100.2959167</idno>
		<ptr target="https://doi.org/10.1145/2959100.2959167" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th ACM Conference on Recommender Systems (RecSys &apos;16)</title>
		<meeting>the 10th ACM Conference on Recommender Systems (RecSys &apos;16)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="241" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Neural Survival Recommender</title>
		<author>
			<persName><forename type="first">How</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><forename type="middle">J</forename><surname>Smola</surname></persName>
		</author>
		<idno type="DOI">10.1145/3018661.3018719</idno>
		<ptr target="https://doi.org/10.1145/3018661.3018719" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Tenth ACM International Conference on Web Search and Data Mining (WSDM &apos;17)</title>
		<meeting>the Tenth ACM International Conference on Web Search and Data Mining (WSDM &apos;17)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="515" to="524" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Adam: A Method for Stochastic Optimization</title>
		<author>
			<persName><forename type="first">P</forename><surname>Diederik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><surname>Ba</surname></persName>
		</author>
		<idno>CoRR abs/1412.6980</idno>
		<ptr target="http://dblp.uni-trier.de/db/journals/corr/corr1412.html#KingmaB14" />
		<imprint>
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Com Recommendations: Item-to-Item Collaborative Filtering</title>
		<author>
			<persName><forename type="first">Greg</forename><surname>Linden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brent</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeremy</forename><surname>York</surname></persName>
		</author>
		<idno type="DOI">10.1109/MIC.2003.1167344</idno>
		<ptr target="https://doi.org/10.1109/MIC.2003.1167344" />
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="76" to="80" />
			<date type="published" when="2003-01">2003. Jan. 2003</date>
		</imprint>
	</monogr>
	<note>Amazon</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Contextaware Sequential Recommendation</title>
		<author>
			<persName><forename type="first">Qiang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shu</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Diyi</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhaokang</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Liang</forename><surname>Wang</surname></persName>
		</author>
		<idno>CoRR abs/1609.05787</idno>
		<ptr target="http://arxiv.org/abs/1609.05787" />
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Personalizing Session-based Recommendations with Hierarchical Recurrent Neural Networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Quadrana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karatzoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hidasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cremonesi</surname></persName>
		</author>
		<idno>arXiv:cs.LG/1706.04148</idno>
		<imprint>
			<date type="published" when="2017-06">2017. June 2017</date>
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">BPR: Bayesian Personalized Ranking from Implicit Feedback</title>
		<author>
			<persName><forename type="first">Steffen</forename><surname>Rendle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christoph</forename><surname>Freudenthaler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zeno</forename><surname>Gantner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lars</forename><surname>Schmidt-Thieme</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1795114.1795167" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence (UAI &apos;09)</title>
		<meeting>the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence (UAI &apos;09)<address><addrLine>Arlington, Virginia, United States</addrLine></address></meeting>
		<imprint>
			<publisher>AUAI Press</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="452" to="461" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multi-Rate Deep Learning for Temporal Recommendation</title>
		<author>
			<persName><forename type="first">Yang</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ali</forename><surname>Mamdouh Elkahky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>He</surname></persName>
		</author>
		<idno type="DOI">10.1145/2911451.2914726</idno>
		<ptr target="https://doi.org/10.1145/2911451.2914726" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 39th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR &apos;16)</title>
		<meeting>the 39th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR &apos;16)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="909" to="912" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Improved Recurrent Neural Networks for Session-based Recommendations</title>
		<author>
			<persName><forename type="first">Yong</forename><surname>Kiam Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinxing</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yong</forename><surname>Liu</surname></persName>
		</author>
		<idno type="DOI">10.1145/2988450.2988452</idno>
		<ptr target="https://doi.org/10.1145/2988450.2988452" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st Workshop on Deep Learning for Recommender Systems</title>
		<meeting>the 1st Workshop on Deep Learning for Recommender Systems<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016. 2016</date>
			<biblScope unit="page" from="17" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Modelling Contextual Information in Session-Aware Recommender Systems with Neural Networks</title>
		<author>
			<persName><forename type="first">Bart?omiej</forename><surname>Twardowski</surname></persName>
		</author>
		<idno type="DOI">10.1145/2959100.2959162</idno>
		<ptr target="https://doi.org/10.1145/2959100.2959162" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th ACM Conference on Recommender Systems (RecSys &apos;16)</title>
		<meeting>the 10th ACM Conference on Recommender Systems (RecSys &apos;16)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="273" to="276" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Recurrent Recommender Networks</title>
		<author>
			<persName><surname>Chao-Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amr</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><forename type="middle">J</forename><surname>Beutel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">How</forename><surname>Smola</surname></persName>
		</author>
		<author>
			<persName><surname>Jing</surname></persName>
		</author>
		<idno type="DOI">10.1145/3018661.3018689</idno>
		<ptr target="https://doi.org/10.1145/3018661.3018689" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Tenth ACM International Conference on Web Search and Data Mining (WSDM &apos;17)</title>
		<meeting>the Tenth ACM International Conference on Web Search and Data Mining (WSDM &apos;17)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="495" to="503" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Sequential Click Prediction for Sponsored Search with Recurrent Neural Networks</title>
		<author>
			<persName><forename type="first">Yuyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hanjun</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jun</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Taifeng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiang</forename><surname>Bian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tie-Yan</forename><surname>Liu</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2893873.2894086" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Eighth AAAI Conference on Artificial Intelligence (AAAI&apos;14)</title>
		<meeting>the Twenty-Eighth AAAI Conference on Artificial Intelligence (AAAI&apos;14)</meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1369" to="1375" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
