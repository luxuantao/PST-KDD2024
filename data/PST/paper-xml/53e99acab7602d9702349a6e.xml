<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Workflow Modeling using Proclets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Technology Management</orgName>
								<orgName type="institution">Eindhoven University of Technology</orgName>
								<address>
									<postBox>P.O. Box 513</postBox>
									<postCode>NL-5600 MB</postCode>
									<settlement>Eindhoven</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Colorado at Boulder</orgName>
								<address>
									<addrLine>Campus Box 430</addrLine>
									<postCode>80309-0430</postCode>
									<settlement>Boulder</settlement>
									<region>CO</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">P</forename><surname>Barthelmess</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Colorado at Boulder</orgName>
								<address>
									<addrLine>Campus Box 430</addrLine>
									<postCode>80309-0430</postCode>
									<settlement>Boulder</settlement>
									<region>CO</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Ellis</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Colorado at Boulder</orgName>
								<address>
									<addrLine>Campus Box 430</addrLine>
									<postCode>80309-0430</postCode>
									<settlement>Boulder</settlement>
									<region>CO</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">J</forename><surname>Wainer</surname></persName>
							<email>wainer@dcc.unicamp.br</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Colorado at Boulder</orgName>
								<address>
									<addrLine>Campus Box 430</addrLine>
									<postCode>80309-0430</postCode>
									<settlement>Boulder</settlement>
									<region>CO</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">State University of Campinas</orgName>
								<orgName type="institution" key="instit2">Caixa Postal</orgName>
								<address>
									<addrLine>Campinas -SP</addrLine>
									<postCode>6176, 13083-970</postCode>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Workflow Modeling using Proclets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">9BB3FD11BDA3ACCC88F3B8CC530F3DE1</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The focus of traditional workflow management systems is on control flow within one process definition, that describes how a single case (i.e., workflow instance) is handled in isolation. For many applications this paradigm is inadequate. Interaction between cases is at least as important. This paper introduces and advocates the use of interacting proclets, i.e., light-weight workflow processes. By promoting interactions to first-class citizens, it is possible to model complex workflows in a more natural manner, with improved expressive power and flexibility.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Workflow Management Systems allow for the explicit representation and support of business processes. Available workflow management systems have difficulties dealing with the dynamic and inter-organizational nature of today's business processes <ref type="bibr" target="#b25">[26]</ref>. We will argue that one of the core problems of current workflow languages is the focus on isolated case-based processes.</p><p>In traditional workflow management systems, the control-flow of a workflow is described by one workflow process definition, that specifies which tasks need to be executed and in what order. Workflow process definitions are instantiated for specific cases. Examples of cases are an insurance claim, or an order.</p><p>Today's workflow management systems assume that a workflow process can be modeled by specifying the life-cycle of a single case in isolation. For many real-life applications this assumption is too restrictive. As a result, the workflow process is changed to accommodate the workflow management system, the control-flow of several cases is artificially squeezed into one process definition, or the coordination amongst cases is hidden inside custom built applications. Consider for example an engineering process of a product consisting of multiple components. Some of the tasks in this engineering process are executed for the whole product, e.g., the task to specify product requirements. Other tasks are executed at the level of components, e.g., determine the power consumption of a component. Since a product can have a variable number of components and the components are engineered concurrently, it is typically not possible to squeeze this workflow into one process definition. In most workflow management systems, it is not possible to concurrently instantiate selected parts of the workflow process a variable number of times.</p><p>To solve these problems, we propose an approach based on proclets, performatives and channels. Proclets are light-weight processes. The interaction between proclets is modeled explicitly, i.e., proclets can exchange structured messages, called performatives, through channels. By adopting this approach the problems related to purely casebased processes can be avoided.</p><p>The remainder of this paper is organized as follows. First, we motivate our approach by identifying the problems encountered when modeling the reviewing process of a conference. Then we present the framework, which is based on Petri nets <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref> and inspired by concepts originating from object-orientation <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b23">24]</ref>, agent-orientation <ref type="bibr" target="#b18">[19]</ref>, and the language/action perspective <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b29">[30]</ref><ref type="bibr" target="#b30">[31]</ref><ref type="bibr" target="#b31">[32]</ref>. Finally, we compare the framework with existing approaches and conclude with our plans for future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Motivating Example: Organizing a Conference</head><p>The process of selecting papers for a conference presents features that challenge existing modeling languages. The goal of this process is to select papers out of a larger set, based, e.g., on quality, minimum and maximum number of papers, and so on. After a set of people accepts to act as program committee members, a call for papers is issued. Authors submit papers that are then reviewed by peers (invited by pc members) and finally a selection is made. Such process is complicated by a series of factors:</p><p>-Prospective PC members and reviewers may accept or reject the invitation to join the committee and to review one or more papers, respectively. Replacements for those that rejected need to be found. -Reviewers can fail to return reviews on time. As a result, some of the papers may lack enough reviews to allow their fair evaluation. -For effective distribution, classification and matching, the set of papers needs to be considered as a whole, i.e., distribution can not be done only considering individual papers in isolation. -For selection, paper quality needs to be gauged against the quality of remaining papers. Again, this requires that the set of papers be considered as a whole.</p><p>A modeler faces many problems translating these requirements. A first basic question is what is to be considered the case <ref type="foot" target="#foot_0">1</ref> -the submission, the review, the "empty slot" in the conference, that one wants to fill with a good quality paper, or is the case the whole set of slots?</p><p>The class diagram (Figure <ref type="figure" target="#fig_0">1</ref>) shows that different tasks rely on information that is at different levels of aggregation -some of the tasks operate at the conference level, that groups all papers, others at the paper level, and others yet at the lower level of individual reviews. A major obstacle is, therefore, how to conciliate these multiple perspectives into one model.</p><p>Lacking the power to express differences in aggregation, most workflow management systems force one to depict the process at an arbitrarily chosen level. Important shortcomings result: -Models are artificially flattened, being unable to account for the mix of different perspectives of the real process. -Batch tasks are usually not supported. Batch tasks are those that require grouping sets of elements, e.g., the set of papers during distribution and selection. -Launching and synchronizing variable numbers of tasks is also usually a problem, e.g., launching and synchronizing reviews from a paper centered case. -Actors sometimes interact in complex ways. These interactions are usually not incorporated in process models.</p><p>Conference review is not an atypical example, in the sense that one encounters similar problems very frequently in other areas as well, for example:</p><p>-In software development: changes to one module may impact a variable number of other modules, making necessary the instantiation of a variable number of cascading tasks. -Processing of insurance claims: some claims may refer to the same accident. At some point in time it is desirable that all related claims be merged so that a uniform decision can be reached. -Hiring new people: candidates have to be evaluated and ranked with respect to each other. Again, the interactions between the applications are most relevant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Framework</head><p>The examples given in the previous section show that today's workflow management systems typically have problems dealing with workflow processes that are not purely case-oriented.</p><p>Inspired by these problems, we have developed a new framework for modeling workflows. This framework is based on proclets. A proclet can be seen as a lightweight workflow process equipped with a knowledge base containing information on previous interactions. One can think of proclets as objects equipped with an explicit life-cycle (in the object-oriented sense) <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b23">24]</ref>. Proclets interact via channels. A channel is the medium to transport messages from one proclet to another. The channel can be used to send a message to a specific proclet or a group of proclets (i.e., multicast). Based on the properties of the channel, different kinds of interaction are supported, e.g., push/pull, synchronous/asynchronous, and verbal/non-verbal. In order for proclets to find each other, there is a naming service, that keeps track of registered proclets. The concepts proclet, channel and naming service constitute a framework for modeling workflow processes (see Figure <ref type="figure" target="#fig_1">2</ref>). Compared to existing workflow modeling languages, complex case-based workflow definitions describing the control flow of an entire process are broken up into smaller interacting proclets, i.e., there is a shift from control to communication. The framework is based on a solid process modeling technique (Petri nets <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref>) extended with concepts originating from object-orientation <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b23">24]</ref>, agent-orientation <ref type="bibr" target="#b18">[19]</ref>, and the language/action perspective <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b29">[30]</ref><ref type="bibr" target="#b30">[31]</ref><ref type="bibr" target="#b31">[32]</ref>.</p><p>In the remainder of this section we present the four main components of our framework: proclets, channels, naming service, and actors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Proclets</head><p>A proclet class describes the life-cycle of proclet instances. A proclet class can be compared to an ordinary workflow process definition or workflow type <ref type="bibr" target="#b17">[18]</ref>. The class describes the order in which tasks can or need to be executed for individual instances of the class, i.e., it is the specification of a generic process. Proclet instances can be created and destroyed, and are executed according to a class specification. Proclet instances have a state.</p><p>To specify proclet classes, we use a graphical language based on Petri nets, an established tool for modeling workflow processes <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref>. Powerful analysis techniques can be used to verify the correctness of Petri net models <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref>.</p><p>In this paper, we use a specific subclass of Petri nets, the so-called class of sound WF-nets <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>. <ref type="foot" target="#foot_1">2</ref> A WF-net has source and sink transitions: A source transition has no input places and a sink transition has no output places. Every node (i.e., place or transition) is on a path from some source transition to some sink transition. Moreover, any WF-net is connected, i.e., the network structure cannot be partitioned in two unconnected parts. A WF-net becomes activated if one of the source transitions fires. In the remainder we assume that a WF-net becomes activated only once (single activation), and furthermore, that it is sound (see <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref> for a discussion of soundness).</p><p>Most workflow modeling languages primarily focus on control flow inside one process definition and (partly) abstract from the interaction between process definitions, i.e., coordination is limited to the scope of the process definition and communication and collaboration are treated as second-class citizens. Our framework explicitly models interactions between proclets. The explicit representation of interaction is inspired by the language/action perspective <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b30">31]</ref> which is rooted in speech act theory <ref type="bibr" target="#b24">[25]</ref>. The language/action perspective emphasizes how coordination is brought about by communication. The need for treating interaction as first-class citizens is also recognized in the agent community <ref type="bibr" target="#b18">[19]</ref>. Emerging agent communication languages such as KQML <ref type="bibr" target="#b13">[14]</ref> demonstrate this need.</p><p>Inspired by these different perspectives on interaction, we use performatives to specify communication and collaboration among proclets. A performative is a message exchanged between one sender proclet and one or more receiver proclets. A performative has the following attributes:</p><p>(1) time: the moment the performative was created/received.</p><p>(2) channel: the medium used to exchange the performative.</p><p>(3) sender: the identifier of the proclet creating the performative. (4) set of receivers: list of identifiers of the proclets receiving the performative.</p><p>(5) action: the type of the performative. ( <ref type="formula">6</ref>) content: the actual information that is being exchanged.</p><p>The role of these attributes will be explained later. At this point, it is important to note the action attribute. This attribute can be used to specify the illocutionary point of the performative. Examples of typed performatives are request, offer, acknowledge, promise, decline, counter-offer or commit-to-commit <ref type="bibr" target="#b31">[32]</ref>. In this paper, we do not restrict our model to any single classification of performatives (i.e., a fixed set of types). At the same time we stress the importance of using the experience and results reported by researchers working on the language/action perspective.</p><p>Proclets combine performatives and sound WF-nets. A proclet class P C is defined as follows:</p><p>(1) P C has a unique name. This name serves as a unique identification of the classthe class id.</p><p>(2) P C has a process definition defined in terms of a sound WF-net. The transitions correspond to tasks and the places correspond to state conditions. A proclet class is a generic definition. Proclet instances are created by instantiating the proclet class and have a unique identification -the proc id. Tokens in the WF-net specifying the process definition refer to one proclet instance, i.e., tokens of different proclet instances are not merged into one WF-net. Moreover, each proclet instance has its own knowledge base. A performative has by definition one sender, but can have multiple recipients. The sender is always represented by a proc id, i.e., by its identifier. The list of recipients can be a mixture of proc id's and class id's, i.e., one can send performatives to both proclet instances and proclet classes. A performative sent to a proclet class is received by all proclet instances of that class.</p><p>To illustrate the framework we use the example shown in Figure <ref type="figure" target="#fig_2">3</ref>. There are two proclet classes, used to organize meetings. Proclet class Meeting is instantiated once per meeting. Proclet class Personal entry is instantiated for every potential participant of a specific meeting. The instance of class Meeting first multicasts an invitation to all potential participants. Note that the cardinality of the port connected to task Invite for meeting is denoted by a star . This star indicates that the invitation is sent to an arbitrary number of potential participants, i.e., the performative has multiple recipients.</p><p>We will use to denote an arbitrary number of recipients, + to denote at least one recipient, 1 to denote precisely one recipient, and ? to denote no or just a single recipient. Performatives with no recipients are considered not to have occurred, and are not registered in the knowledge base. The multiplicity of the output port connected to task Invite for meeting is denoted by the number 1. This means that during the lifetime of an instance of class Meeting exactly one performative is sent via this port. The invitation performative is sent though the channel E-mail (details in Section 3.2). The performative creates a proclet for each recipient, i.e., creation task Create entry is triggered. Creation tasks are depicted by squares with a black top. The input port connected to Create entry has cardinality 1 and multiplicity 1. Every input port has by definition cardinality 1, i.e., from the perspective of the receiving proclet there is only one proclet receiving the performative. Input ports connected to a creation task (i.e., a source transition) have by definition a multiplicity of 1 or ?: An instance can be created only once. Since there is just one creation task in Personal entry, the multiplicity is 1. After an instance of the class Personal entry is created, a decision is made (task Decide).</p><p>Based on this decision either task Skip meeting or Plan to attend is executed. In both cases a performative is sent to the instance of the proclet class Meeting. The performative is either a confirmation (Plan to attend) or a notification of absence (Skip meeting).</p><p>Note that each instance of the class Personal entry sends such a performative. These performatives are sent through channel E-mail. Note that the ports connected to Plan to attend and Skip meeting both have cardinality 1 (i.e., one recipient) and multiplicity ?</p><p>(one performative is sent via one of the two ports). Task Receive response is executed once for every "confirmation/notification of absence" performative. After some time, as indicated by the clock symbol <ref type="bibr" target="#b1">[2]</ref>, task Send agenda is executed. Send agenda generates one performative: the agenda of the meeting. This performative is sent to all proclets that confirmed the invitation (this information is in the knowledge base of the Meeting proclet). The proclets that confirmed the invitation receive the agenda (task Receive agenda) and a timer for the task Reminder is set. Finally, all proclets are destroyed by executing the finishing tasks Finish meeting and Finish entry. The finishing tasks (i.e., sink transitions) are depicted by squares with a black bottom.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Communication Channels</head><p>Communication channels are used to link proclets. Channels transmit messages containing performatives. There are many different categories of channels defined by channel properties such as medium type, reliability, security, synchronicity, closure, and formality. These properties are briefly explained:</p><p>-Medium Type This can be point-to-point or broadcast, or some form of limited multicast. Recall that performatives can be sent to an individual proclet instance (point-to-point), a set of proclets (multicast), or an entire proclet class (broadcast). Common media include postal mail, telephone, and electronic mail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Reliability</head><p>Some channels are very reliable; some are unreliable. For some electronic channels, we assume that the technology is robust, and that error detection and retransmission are implemented at lower layers of the communication protocols. Sometimes channels are inherently unreliable (such as in data channels in some lesser developed countries).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Security</head><p>At times the content of a performative is considered to be quite valuable and secret.</p><p>In such cases, the transmission should be via secure channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Synchronicity</head><p>Some channels are used for real time communications in which each party expects to get rather immediate feedback from recipient parties. This requires synchronous channels. Face-to-face spoken conversation falls into this category. In the case of an asynchronous channel, the sender usually is not waiting for an immediate response.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Closure</head><p>Channels can be classified as open or closed. When a channel is open, the sender does not know exactly who, and how many recipients are connected. When a channel is closed, the exact identity of all recipients is specified in advance. A radio broadcast, and a notice posted on a bulletin board are examples of open medium communications, in which the senders do not exactly know who are the recipients.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Formality</head><p>Some channels convey much more formality in the messages delivered than others. Performatives can be very formally specified, or can be informal and flexible. Generally, business letters are much more formal than chat rooms. A careful record is kept of formal channel transmissions, whereas informal channels are usually not recorded.</p><p>Clearly, channel properties and performative types are closely related, i.e., for a given performative certain properties are appropriate, others are not. For example, for the performative "You are fired!" a point-to-point, reliable, secure, synchronous, closed, and formal channel is most appropriate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Naming service</head><p>All interaction is based on proclet identifiers (proc id's) and class identifiers (class id's). These identifiers provide the handles to route performatives. By sending a performative using a class id, all instances of the corresponding class receive the performative. In many situations the sending proclet does not know the proc id's of all receiving proclets. The naming service keeps track of all proclets and can be queried to obtain proc id's.</p><p>There are many ways to implement such a naming service. Consider, e.g., object request brokers developed in the context of CORBA. In this paper, we only consider the desired functionality and abstract from implementation details (e.g., distribution of the naming service over multiple domains).</p><p>The naming service provides the following main primitives: register, unregister, update, and query.</p><p>The function register is called by the proclet the moment it is created. The execution of one of the create tasks (i.e., source transitions) coincides with the execution of the register primitive.</p><p>The naming service stores a set of attributes for each proclet. These attributes are not fixed and may vary from one class to another. The function update with parameters proc id and attributes can be used to change existing or add new attributes.</p><p>Based on the attributes, proclets can query the naming service using the function query. The function has one parameter describing a Boolean expression in terms of attributes and returns a set of proc id's, i.e., all proclets satisfying the expression.</p><p>Entries in the naming service can be removed using the function unregister. Executing a finish task (i.e., a sink transition in the WF-net) results in a call to unregister.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Actors</head><p>Proclets have owners. Owners are the actors responsible for the proclet. Actors can be automated components, persons, organizations (e.g., shipping department), or even whole companies. Owners are specified at proclet registration time and this information is kept by the naming service (see Section 3.3). Ownership can be transferred by updating the naming service information.</p><p>Owners will sometimes be the executors of proclet tasks themselves -in the example of Figure <ref type="figure" target="#fig_2">3</ref>, for instance, owners of each personal entry will most probably be the ones that will perform the tasks, essentially the decision of attending or skipping the meeting. Roles may be specified for each task, in which case the executor can be different from the owner. We assume then that the usual role resolution mechanisms <ref type="bibr" target="#b33">[34]</ref> are employed.</p><p>We propose to model as external proclets those actors (in the broad sense of the word) that interact with proclets in a more complex way. External proclets are useful to model those interactions that go beyond the simple model assumed by the usual role mechanism, e.g., when a request for service may be either accepted, rejected or counter-proposed. External proclets, as the name implies, represent entities that are outside of the scope of the process proper, whereas internal proclets are those under the control of the workflow system's enactment service. Both types of proclets are modeled in a similar way -by describing expected interactions with other proclets. For more extensive examples of both internal and external proclets, see <ref type="bibr" target="#b4">[5]</ref>. This technical report also describes the application of the approach to the example described in Section 2 (i.e., the workflow of organizing a conference).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Related work</head><p>Petri nets have been proposed for modeling workflow process definitions long before the term "workflow management" was coined and workflow management systems became readily available <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b12">13]</ref>. Workflow models described in the literature focus on various aspects (cf. <ref type="bibr" target="#b25">[26]</ref>) such as transactional concepts <ref type="bibr" target="#b15">[16]</ref>, flexibility <ref type="bibr" target="#b20">[21]</ref>, analysis <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>, and cross-organizational workflows <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>, etc. Any attempt to give a complete overview of these models is destined to fail. Therefore, we only acknowledge the work that extended workflow models to accommodate the problems identified in Section 2.</p><p>Zisman <ref type="bibr" target="#b32">[33]</ref> presents a paper refereeing example that involves Petri-nets and allows multiple instantiation of the reviewer net.</p><p>Batch-oriented tasks were discussed in <ref type="bibr" target="#b7">[8]</ref>. Creation of multiple instances of tasks have been proposed by some, e.g., Casati et al. <ref type="bibr" target="#b9">[10]</ref> (multi-tasks); Regatta system by Fujitsu <ref type="bibr" target="#b26">[27]</ref> (multi-stage); Spade-1 <ref type="bibr" target="#b6">[7]</ref> (multiple active copies). The framework presented here is more generic. Multiple instantiation is just one aspect of a broader view of interactions as first-class citizens.</p><p>The idea to promote interaction to first-class citizens was proposed in different settings. In the context of language/action perspective <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b29">[30]</ref><ref type="bibr" target="#b30">[31]</ref><ref type="bibr" target="#b31">[32]</ref>, Action Technologies developed a workflow tool <ref type="bibr" target="#b27">[28]</ref>. Speech-acts also form the basis for performatives in agent interaction languages, e.g. KQML <ref type="bibr" target="#b13">[14]</ref>. Agents are used to implement workflows, e.g., in the Bond multi-agent system <ref type="bibr" target="#b28">[29]</ref> and others (e.g., <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b10">11]</ref>). In the more systems-oriented domains there have also been some proposals for inter-process communication (e.g. in Opera <ref type="bibr" target="#b16">[17]</ref>).</p><p>Some of the ideas presented in this section have been adopted by our framework: batch-oriented operation, multi-tasks, and inter-process communication can be handled easily by the framework. In addition, the framework employs concepts such as performatives, channels, ports, knowledge bases, naming services, and the rigor of a Petri-net basis which allows for various forms of analysis and a straightforward and efficient implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>In this paper, we presented a framework which advocates the use of interacting proclets, i.e., light-weight workflow processes communicating by exchanging performatives through channels. As was demonstrated in <ref type="bibr" target="#b4">[5]</ref>, the framework can solve many of the traditional modeling problems resulting from the case-oriented paradigm.</p><p>In the future, we plan to explore the relation between channels and performatives. We are also compiling a list of interaction patterns. In our view, the interaction between proclets typically follows a number of well-defined patterns, e.g., a request performative is followed by an accept or reject performative. Finally, we plan to build a prototype to support the framework. This prototype will be used to support the reviewing process of the ACM biannual Siggroup conference following the model described in this paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Review process class diagram.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Graphical representation of the framework.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( 3 )</head><label>3</label><figDesc>P C has ports. Ports are used to interact with other proclets. Every port is connected to one transition. (4) Transitions can send and receive performatives via ports. Each port has two attributes: (a) its cardinality and (b) its multiplicity. The cardinality specifies the number of recipients of performatives exchanged via the port. The multiplicity specifies the number of performatives exchanged via the port during the lifetime of any instance of the class. (5) P C has a knowledge base for storing these performatives: Every performative sent or received is stored in the knowledge base. (6) Tasks can query the knowledge base. A task may have a precondition based on the knowledge base. A task is enabled if (a) the corresponding transition in the WF-net is enabled, (b) the precondition evaluates to true, and (c) each input port contains a performative. (7) Tasks connected to ports have post conditions. The post condition specifies the outcome of the task in terms of performatives generated for its output ports.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Example of two proclet classes: Meeting and Personal entry.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Workflow instance.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>For the readers familiar with WF-nets: For notational convenience we omit the unique source and sink place used in<ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Verification of Workflow Nets</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Application and Theory of Petri Nets</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Azéma</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Balbo</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1997">1997. 1997</date>
			<biblScope unit="volume">1248</biblScope>
			<biblScope unit="page" from="407" to="426" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The Application of Petri Nets to Workflow Management</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Circuits, Systems and Computers</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="21" to="66" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Interorganizational Workflows: An Approach based on Message Sequence Charts and Petri Nets</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Systems Analysis -Modelling -Simulation</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="335" to="367" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Process-oriented Architectures for Electronic Commerce and Interorganizational Workflow</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">8</biblScope>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Workflow modeling using proclets</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Barthelmess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wainer</surname></persName>
		</author>
		<idno>cu-cs-900-00</idno>
		<ptr target="http://www.cs.colorado.edu/skip/proclets.pdf" />
		<imprint>
			<date type="published" when="2000-02">February 2000</date>
		</imprint>
		<respStmt>
			<orgName>University Of Colorado at Boulder</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Modeling and Analysis of Workflows using Petri Nets</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Adam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Atluri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent Information Systems</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="131" to="158" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Cooperation support in the spade environment: a case study</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bandinelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Braga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fuggetta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lavazza</surname></persName>
		</author>
		<ptr target="ftp://ftp-se.elet.polimi.it/dist/Papers/ProcessModeling/CSCWPN93.ps" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Computer Supported Cooperative Work, Petri nets, and Related Formalisms (14th International Conference on Application and Theory of Petri Nets)</title>
		<meeting>the Workshop on Computer Supported Cooperative Work, Petri nets, and Related Formalisms (14th International Conference on Application and Theory of Petri Nets)<address><addrLine>Chicago</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-06">June 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Workflow systems: a few definitions and a few suggestions</title>
		<author>
			<persName><forename type="first">P</forename><surname>Barthelmess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wainer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Organizational Computing Systems -COOCS&apos;95</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Comstock</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Ellis</surname></persName>
		</editor>
		<meeting>the Conference on Organizational Computing Systems -COOCS&apos;95<address><addrLine>Milpitas, California</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1995-09">September 1995</date>
			<biblScope unit="page" from="138" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Unified Modeling Language User Guide</title>
		<author>
			<persName><forename type="first">G</forename><surname>Booch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rumbaugh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Jacobson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Addison Wesley</publisher>
			<pubPlace>Reading, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Conceptual modeling of workflows</title>
		<author>
			<persName><forename type="first">F</forename><surname>Casati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ceri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Pernici</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pozzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the OOER International Conference</title>
		<meeting>the OOER International Conference<address><addrLine>Gold Cost, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Agent-based wrokflow: Trp support environment (tse). Computer Networks and ISDN Systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Scott</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">28</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Information Control Nets: A Mathematical Model of Office Information Flow</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Ellis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Simulation, Measurement and Modeling of Computer Systems</title>
		<meeting>the Conference on Simulation, Measurement and Modeling of Computer Systems<address><addrLine>Boulder, Colorado</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1979">1979</date>
			<biblScope unit="page" from="225" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Modelling and Enactment of Workflow Systems</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Nutt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">Ajmone</forename><surname>Marsan</surname></persName>
		</editor>
		<editor>
			<persName><surname>Editor</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">691</biblScope>
			<biblScope unit="page" from="1" to="16" />
			<date type="published" when="1993">1993. 1993</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
	<note>Application and Theory of Petri Nets</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Finin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Wiederhold</surname></persName>
		</author>
		<title level="m">Specification of the KQML Agent-Communication Language</title>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Doing and Speaking in the Office</title>
		<author>
			<persName><forename type="first">F</forename><surname>Flores</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Ludlow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Decision Support Systems: Issues and Challenges</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Pergamon Press</publisher>
			<date type="published" when="1980">1980</date>
			<biblScope unit="page" from="95" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Georgakopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hornick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sheth</surname></persName>
		</author>
		<title level="m">An Overview of Workflow Management: From Process Modeling to Workflow Automation Infrastructure. Distributed and Parallel Databases</title>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="119" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Beyond the black box: Event-based inter-process communication in process support systems (extended version)</title>
		<author>
			<persName><forename type="first">C</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Alonso</surname></persName>
		</author>
		<idno>No. 303</idno>
		<ptr target="http://www.inf.ethz.ch/department/IS/iks/publications/files/ha98c.pdf" />
		<imprint>
			<date type="published" when="1997-07">July 1997</date>
			<publisher>ETH Zürich</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Workflow Management: Modeling Concepts, Architecture, and Implementation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jablonski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bussler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>International Thomson Computer Press</publisher>
			<pubPlace>London, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</author>
		<title level="m">Agent Technology : Foundations, Applications, and Markets</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Interorganisational Workflow Management with Mobile Agents in COSM</title>
		<author>
			<persName><forename type="first">M</forename><surname>Merz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liberman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Muller-Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lamersdorf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of PAAM96 Conference on the Practical Application of Agents and Multiagent Systems</title>
		<meeting>PAAM96 Conference on the Practical Application of Agents and Multiagent Systems</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">ADEPTflex: Supporting Dynamic Changes of Workflow without Loosing Control</title>
		<author>
			<persName><forename type="first">M</forename><surname>Reichert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dadam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent Information Systems</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="93" to="129" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<author>
			<persName><forename type="first">W</forename><surname>Reisig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rozenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Lectures on Petri Nets I: Basic Models</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1491</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<author>
			<persName><forename type="first">W</forename><surname>Reisig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rozenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Lectures on Petri Nets II: Applications</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1492</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Rumbaugh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Booch</surname></persName>
		</author>
		<title level="m">The Unified Modeling Language Reference Manual</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Searle</surname></persName>
		</author>
		<title level="m">Speech Acts</title>
		<meeting><address><addrLine>Cambridge</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Sheth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">B</forename><surname>Arpinar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Processes Driving the Networked Economy: ProcessPortals, ProcessVortex, and Dynamically Trading Processes</title>
		<meeting>esses Driving the Networked Economy: essPortals, essVortex, and Dynamically Trading esses</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="18" to="31" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Collaborative planning: Empowering the user in a process environment</title>
		<author>
			<persName><forename type="first">K</forename><surname>Swenson</surname></persName>
		</author>
		<ptr target="ftp://ftp.ossi.com/pub/regatta/JournalCC.ps" />
	</analytic>
	<monogr>
		<title level="j">Collaborative Computing</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">ActionWorkflow Enterprise Series 3.0 User Guide. Action Technologies</title>
		<author>
			<orgName type="collaboration">Action Technologies</orgName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<pubPlace>Inc., Alameda</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Bond. the distributed object multi-agent system</title>
		<ptr target="http://bond.cs.purdue.edu" />
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
		<respStmt>
			<orgName>Purdue University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Implementation of a cooperative agent architecture based on the language-action perspective</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Verharen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dignum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Agents</title>
		<title level="s">Lecture Notes in Artificial Intelligence</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1365</biblScope>
			<biblScope unit="page" from="31" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Special Issue on the Language Action Perspective -Introduction</title>
		<author>
			<persName><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transations on Office Information Systems</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="83" to="86" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Understanding Computers and Cognition: A New Foundation for Design</title>
		<author>
			<persName><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Flores</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986</date>
			<pubPlace>Ablex, Norwood</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Use of production systems for modeling asynchronous concurrent processes. Pattern-Directed Inference Systems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Zisman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1978">1978</date>
			<biblScope unit="page" from="53" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Evaluation of workflow management systems using meta models</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zur Mühlen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd Hawaii International Conference on System Sciences -HICSS&apos;99</title>
		<meeting>the 32nd Hawaii International Conference on System Sciences -HICSS&apos;99</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
