<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mathematics of Operations Research</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013-09-30">September 30, 2013.</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Patrick</forename><surname>Jaillet</surname></persName>
							<email>jaillet@mit.edu</email>
						</author>
						<author>
							<persName><forename type="first">Xin</forename><surname>Lu</surname></persName>
							<email>luxin@mit.edu</email>
						</author>
						<author>
							<persName><forename type="first">Online</forename><surname>Stochastic Matching</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="laboratory">Laboratory for Information and Decision Systems, and Operations Research Center</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<postCode>02139</postCode>
									<settlement>Cambridge</settlement>
									<region>Massachusetts</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Operations Research Center</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<postCode>02139</postCode>
									<settlement>Cambridge</settlement>
									<region>Massachusetts</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mathematics of Operations Research</title>
					</analytic>
					<monogr>
						<idno type="ISSN">0364-765X (print)</idno>
						<imprint>
							<date type="published" when="2013-09-30">September 30, 2013.</date>
						</imprint>
					</monogr>
					<idno type="MD5">A3EAB9978BE3AA8F0175E1DC6CA0F708</idno>
					<idno type="DOI">10.1287/moor.2013.0621</idno>
					<note type="submission">Received May 14, 2012; revised January 28, 2013, and June 25, 2013.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>online bipartite matching</term>
					<term>stochastic optimization</term>
					<term>offline linear programming bounds MSC2000 subject classification: 68W27 online algorithms, 68W20 randomized algorithms, 90C27 combinatorial optimization OR/MS subject classification: Primary: discrete, and stochastic optimization</term>
					<term>secondary: stochastic processes</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this setting, advertisers express specific interests into requests for impressions of different types. Advertisers are fixed and known in advance, whereas requests for impressions come online. The task is to assign each request to an interested advertiser (or to discard it) immediately upon its arrival.</p><p>In the adversarial online model, the ranking algorithm of Karp et al. [Karp RM, Vazirani UV, Varirani VV (1990) An optimal algorithm for online bipartite matching. STOC '90: Proc. 22nd Annual ACM Sympos. Theory Comput. (ACM, New York), 352-358] provides a best possible randomized algorithm with competitive ratio 1 -1/e ≈ 0 632. In the stochastic i.i.d. model, when requests are drawn repeatedly and independently from a known probability distribution over the different impression types, Feldman et al. [</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>1. Introduction. Bipartite matching problems have been studied extensively in the operations research and computer science literature. We consider in this paper variants of the online stochastic bipartite matching problem motivated by Internet advertising display applications, as introduced in Feldman et al. <ref type="bibr" target="#b5">[6]</ref>.</p><p>We are given a bipartite graph G = A ∪ I E , where A is a set of advertisers and I is a set of impression types. An edge a i ∈ E if and only if advertiser a ∈ A is interested in impressions of type i ∈ I. The set of advertisers and their preferences are fixed and known in advance. Requests for impressions come online one at a time at periods t = 1 2 n (n being fixed and known in advance), and the impression type of each request is chosen randomly and independently from a given probability distribution over the set I.</p><p>Upon the arrival of a request, an online algorithm must irrevocably assign it to one of the interested advertisers or drop it. Overall, every request cannot be assigned to more than one advertiser, and every advertiser can be assigned at most one request. The goal is to maximize the expected number of assigned requests over the random sequence of impressions.</p><p>Given that there is a total of n requests, the probability that a request is for an impression of type i can be written as r i /n, where r i is the expected number of requests of type i among the random sequence. Without loss of generality, we assume that r i ≤ 1 for all type i; note that if a type i were to be such that r i &gt; 1, we where i ∼ a and a ∼ i are shortcuts for i a i ∈ E and a a i ∈ E, respectively. Downloaded from informs.org by [129.93. <ref type="bibr" target="#b16">16</ref>.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</p><p>One of the key steps behind our approach is to find appropriate additional constraints on the flows (to add to <ref type="bibr" target="#b0">(1)</ref>) so that the resulting optimal solutions of the constrained LP lead to improved guidance for online strategies while keeping the optimal offline fractional matching f * feasible with respect to the constrained LP.</p><p>Let us now formally introduce the concept of a "list of interested advertisers for an impression of type i." Consider the set A i = a ∈ A a i ∈ E and let i be the set of all possible nonempty ordered subsets of elements of A i . An element of i will be called a list of interested advertisers for impression of type i. We are ready to describe our class of online algorithms:</p><p>Random Lists Algorithms (RLA)</p><p>1. Add appropriate constraints to <ref type="bibr" target="#b0">(1)</ref> to get a new constrained LP. Let f be an optimal solution to this LP.</p><p>2. Using f, construct a probability distribution i over the set i for each impression type i.</p><p>3. When a request for an impression of type i arrives, select a list from i using the probability distribution i :</p><p>• if all the advertisers in the list are already matched, then drop the request;</p><p>• otherwise, assign the request to the first unmatched advertiser in the list.</p><p>Steps 1 and 2 are problem specific. Different solutions f and different construction of distributions i will lead to online algorithms that may have different properties and competitive ratios. However, these algorithms all share one common and important property: with high probability, they are robust with respect to different realizations of the n i.i.d. sequence of impression types. This property will be useful for the rigorous analysis of competitive ratios. Random lists used in this paper are extensions of ideas given in Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>, but unlike Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>, where the length of lists is at most two, we consider lists of length three in this paper.</p><p>1.2. Paper outline. In the remainder of this section, we provide an overview of related work. In §2 we justify the choice of looking at ratios of expected values for evaluating our class of online algorithms under the i.i.d. stochastic model. The first two main sections follow: In §3 we analyze the online stochastic bipartite matching problem under integral arrival rates, and in §4 we extend the results to the online stochastic vertexweighted bipartite matching problem. The next major result is contained in §5, where we consider the online stochastic bipartite matching problem under general arrival rate. Finally, we show in §6 the validity of our results under a Poisson arrival model, removing the need to assume that the total number of arrivals is fixed and known in advance, as is required for the analysis of the stochastic i.i.d. models. We conclude with some final remarks and open problems. Under an adversarial online model where no information is known about requests, Karp et al. <ref type="bibr" target="#b10">[11]</ref> look at the bipartite matching problem and give a best possible randomized algorithm (ranking) with competitive ratio 1 -1/e. Kalyanasundaram and Pruhs <ref type="bibr" target="#b8">[9]</ref> give a 1 -1/e -competitive algorithm for b-matching problems. Mehta et al. <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b16">16]</ref> and Buchbinder et al. <ref type="bibr" target="#b3">[4]</ref> propose two different 1 -1/e competitive algorithms for the AdWords problem. More recently, Aggarwal et al. <ref type="bibr" target="#b0">[1]</ref> give a 1 -1/e -competitive algorithm for the vertex-weighted bipartite matching problem.</p><p>However, adversarial models may be too conservative for some applications where worst-case scenarios are unlikely to happen. Less conservative models have been proposed. In the random permutation model, when the set of requests is unknown, but the order of the sequence is random, Goel and Mehta <ref type="bibr" target="#b6">[7]</ref> show that a greedy algorithm is 1 -1/e competitive. Devanur and Hayes <ref type="bibr" target="#b4">[5]</ref> propose a near optimal algorithm for AdWords under some mild assumptions. Agrawal et al. <ref type="bibr" target="#b1">[2]</ref> further propose a near optimal algorithm for general online linear programming problems using similar techniques. Mahdian and Yan <ref type="bibr" target="#b11">[12]</ref> and Karande et al. <ref type="bibr" target="#b9">[10]</ref> simultaneously show RANKING algorithm is 0.696-competitive for matching problem. Mirrokni et al. <ref type="bibr" target="#b17">[17]</ref> propose an algorithm that works well under both adversarial and random arrival models for AdWords.</p><p>The random permutation model may still be too conservative in practice, when statistics about requests may be available. In the stochastic i.i.d. model, when requests are drawn repeatedly and independently from a known probability distribution over the different impression types, Feldman et al. <ref type="bibr" target="#b5">[6]</ref> prove that one can do better than 1 -1/e. Under the restriction that the expected number of request of each impression type is an integer, they provide a 0.670-competitive algorithm. They also show that no algorithm can achieve a competitive ratio Downloaded from informs.org by [129.93. <ref type="bibr" target="#b16">16</ref>.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. of 0.989. Bahmani and Kapralov <ref type="bibr" target="#b2">[3]</ref> modify the algorithm and give a competitive ratio of 0.699 under the same assumption. They also improved the upper bound to 0.902. More recently, Manshadi et al. <ref type="bibr" target="#b12">[13]</ref> removed the assumption that the expected number of arrivals is integral and present a 0.702-competitive algorithm (the same algorithm achieves a competitive ratio of 0.705 under the integral assumption). They also improve the upper bound to 0.86 with the integral assumption and 0.823 without the integral assumption. Finally, Haeupler et al. <ref type="bibr" target="#b7">[8]</ref> recently proposed a 0.667-competitive algorithm for the edge-weighted problem under the stochastic i.i.d. model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>Preliminary on competitive ratios. As a measure of performance, online algorithms are typically compared to optimum offline solutions using ratios. In this paper, an algorithm is called -competitive if Ɛ ALG / Ɛ OPT ≥ for any given probability distributions. The goal is to find algorithms with large competitive ratios. One could use a stronger notion of competitive ratio that ALG/OPT ≥ would hold for most realizations, as used in Feldman et al. <ref type="bibr" target="#b5">[6]</ref>. In this section we show that for the algorithms in our proposed class, the two concepts are in fact closely related and lead to competitive ratios that are valid under either of these measures.</p><p>Let L 1 L 2 L n be the sequence of random lists for the n successive requests. Every list only contains interested advertisers, and the assignment of requests only depends on the order of advertisers in the list and their current status. Thus, from a given realization of this sequence of random lists, we can construct the corresponding matching and find its cardinality. We can show that the cardinality is stable with respect to the realization in the following sense: Claim 1. If two realizations (l 1 l t l n ) and (l 1 l t l n ) only differ by one list, then the cardinality of their resulting matchings differs at most by one.</p><p>Proof. Let W j and W j be the set of matched advertisers right after the jth arrival corresponding to the two realizations above, respectively. We will show by induction that ∀ j W j \W j ≤ 1 and W j \W j ≤ 1. For all j ≤ t -1, since the two realizations are identical for the first j lists, W j = W j . Since in every period, at most one advertiser becomes matched, the claim is also true for j = t. Let us consider</p><formula xml:id="formula_0">j ≥ t + 1. If W j \W j-1 ⊂ W j-1 , then by induction W j \W j ≤ W j-1 \W j-1 ≤ 1. Otherwise, let k = W j \W j-1 .</formula><p>Then in the list l j , all advertisers in front of k are in W j-1 . Noting that k is unmatched for ALG before the jth period, we have</p><formula xml:id="formula_1">W j \W j-1 ⊂ W j-1 ∪ k . Therefore, W j \W j = W j-1 \W j-1 ≤ 1. Similarly, we can show W j \W j ≤ 1. Hence, ALG -ALG ≤ W n -W n ≤ max W n \W n W n \W n ≤ 1.</formula><p>Note that L j only depends on the impression type of the jth request and does not depend on types and assignments of earlier impressions. Thus, L 1</p><p>L n are independently and identically distributed. We can then apply McDiarmid's Inequality, which we recall here for convenience:</p><p>McDiarmid's Inequality (McDiarmid <ref type="bibr" target="#b14">[14]</ref>): Let X 1 X 2 X n be independent random variables all taking values in the set . Let</p><formula xml:id="formula_2">f n → be a function of X 1 X 2 X n that satisfies ∀ i, ∀ x 1 x n x i ∈ , f x 1 x i x n -f x 1 x i x n ≤ c i . Then ∀ &gt; 0, Pr f X 1 X n -Ɛ f X 1 X n &gt; ≤ exp - 2 2 n i=1 c 2 i and Pr f X 1 X n -Ɛ f X 1 X n &lt; -≤ exp - 2 2 n i=1 c 2 i Combining McDiarmid's Inequality with Claim 1 we obtain Lemma 1. Pr ALG -Ɛ ALG &lt; -n ≤ exp -2n 2 .</formula><p>Similarly, note that the offline solution only depends on the realization of the impression types, so we can show a similar result:</p><formula xml:id="formula_3">Lemma 2. Pr OPT -Ɛ OPT &gt; n ≤ exp -2n 2 .</formula><p>From the two lemmas above, we can conclude that</p><formula xml:id="formula_4">Pr ALG OPT ≥ Ɛ ALG Ɛ OPT - 2 c + ≥ 1 -2 exp -2n 2</formula><p>where c = Ɛ OPT /n. If Ɛ OPT = n , the inequality above indicates that the two notions of competitive ratios are closely related and essentially equivalent as far as our results are concerned.</p><p>Throughout the paper we will assume that n is large enough so that a factor of 1 + O 1/n is negligible when analyzing the performance of online algorithms.  3. Stochastic matching with integral arrival rates. In this section and the next, we assume that r i = 1 for all i.</p><formula xml:id="formula_5">f a j , i k = 2 a 1 i 1 a 2 i 2 j, k f a j , i k = 5/3 a 1 i 1 a 2 i 2 j, k f a j , i k = 4/3 a 1 i 1 a 2 i 2 a 1 i 1 a 2 i 2 a 1 i 1 a 2 i 2</formula><p>3.1. Online algorithm. As we mentioned in 1.1, two steps in RLA are problem specific: finding offline solutions and constructing random lists. In this subsection, we propose methods for these two steps. </p><formula xml:id="formula_6">max a i f a i s.t. i∼a f a i ≤ 1 ∀ a ∈ A a∼i f a i ≤ 1 ∀ i ∈ I f e ∈ 0 2/3 ∀ e ∈ E (2)</formula><p>Note that compared to (1) as introduced in 1.1, the additional constraints on the flows are very simple. Since the set of vertices of the feasible polytope of (2) is a subset of 0 1/3 2/3 E , there exists an optimal solution to (2) in 0 1/3 2/3 E .</p><p>To ease the construction of random lists and the analysis, based on the optimal solution f, we first construct a resulting graph G f = A ∪ I E f , where E f = e ∈ E f e &gt; 0 . For simplicity, we try to make E f as sparse as we can by doing the following two types of transformations. As argued below, there exists an optimal solution f such that its resulting graph G f does not contain cycles of length 4, unless the four nodes in such a cycle do not have any other neighbors; such a solution can be found in polynomial time. Cycles in Figure <ref type="figure" target="#fig_2">1</ref> are the only three possible cycles of length 4. The four nodes in the left cycle cannot have any other neighbor outside the cycle; the middle and right cycle can be transformed into a noncycle with the same objective value. Furthermore, if there exists impression i that has two neighbors a 1 and a 2 with f i a 1 = f i a 2 = 1/3 and f a 1 + f a 2 &lt; 2, without loss of generality, we assume f a 2 &lt; 1. Another solution f with f i a 1 = 0, f i a 2 = 2/3, and everything else unchanged has the same objective value and fewer edges in its resulting graph. We transform f to f . Note that each time, transformations mentioned above remove one or two edges and do not introduce any new edge. Thus, given any initial optimal solution, after at most E transformations, the optimal solution cannot be transformed further in the above two ways.</p><p>The extra constraint f e ≤ 2/3 is added for two reasons: LP (2) provides a upper bound on the offline solution; the resulting graph is sparse. In fact, as shown in §3.2, any constraint f e ≤ c with c ≥ 1 -e -1 provides an upper bound on the offline solution; however, only c = 2/3 makes the resulting graph sparse. The sparsity not only helps the construction of random lists as described in §3.1.2 but also eases the analysis of the algorithm.  Dummy advertisers are flagged as matched from the start, so no impressions are ever assigned to them. Since every edge in the graph has value 1/3 or 2/3, every node has two or three neighbors.</p><p>The construction of random lists goes as follows. Given an impression type i, if it has two neighbors a 1 and a 2 in the resulting graph, the list is a 1 a 2 with probability f a 1 i ; the list is a 2 a 1 with probability f a 2 i . Otherwise, if i has three neighbors a 1 , a 2 , and a 3 (in this case, f a 1 i = f a 2 i = f a 3 i = 1/3), the list is a uniformly random permutation of a 1 a 2 a 3 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.2.</head><p>Upper bound on the offline algorithm. In order to show that LP (2) provides an upper bound on the offline solution, we prove that the offline solution is feasible to the LP. The feasibility of the first two constraints is obvious. The feasibility of the last constraint is a consequence of the following simple lemma: Lemma 3 (Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>). ∀ e ∈ E f * e ≤ 1 -e -1 &lt; 2/3. From Lemma 3, the expected optimal offline solution is thus feasible to LP <ref type="bibr" target="#b1">(2)</ref>. Therefore, the optimal solution f T • 1 is an upper bound on the offline optimal f * T • 1. From now on, we will compare the online algorithm with the optimal solution of LP (2) instead of with the offline solution because the former one is much easier to find than the latter one.</p><p>3.3. Certificate events. One difficulty encountered in previous papers is that an advertiser being matched is highly dependent on other advertisers. The strong dependence is difficult to deal with and difficult to decouple. In this paper, we use a local approach to avoid this issue. To be more specific, we compute a lower bound on p a , the probability that advertiser a is matched, using only knowledge of a's neighborhood.</p><p>To ease the analysis, we consider lists associated with all arriving impressions rather than the types of impressions because online matching results are a deterministic function of the former. As mentioned in §2, all lists are i.i.d. distributed. It is not difficult to see that the distribution can be easily inferred from the resulting graph G f . For example, a local structure as shown in Figure <ref type="figure" target="#fig_5">2</ref> implies that with probability 1/n, a list starts with a 1</p><p>; with probability 1/ 6n , a list is a 1 a a 2 . Assume a is the advertiser we are considering and i is a neighbor of a. Let us consider the following two types of events: B a = among the n lists, there exists a list starting with a and G i a = among the n lists, there exist successive lists starting with advertisers different from a but which are neighbors of i and ensuring that a is matched . For example, in a local structure as shown in Figure <ref type="figure" target="#fig_5">2</ref>, if three lists appear in order a 1 , a 2</p><p>, and a 1 a 2 a , then advertiser a is matched; hence, G i a happens. B a and G i a (for any i) will be called "certificate events," in the sense that if any of these events happen, they provide a certificate that advertiser a is matched.</p><p>We now show that these certificate events have some good properties and their probabilities are easy to find. In this section and the next, we will use these certificate events to lower bound the probability that an advertiser is matched and further lower bound the competitive ratios of our algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1.">Asymptotic independence.</head><p>For notation simplicity, we define supporting set S G i a as the set of lists that start with advertisers that are neighbors of i but not a; S B a is the set of lists that start with a. The supporting set of the intersection of two certificate events is defined as the union of the supporting sets of the two certificate events. Lemma 4. Let E 1 and E 2 be certificate events or intersections of two certificate events. If their supporting sets S E 1 ∩ S E 2 = , then E 1 and E 2 are asymptotically independent; i.e., Pr Proof. Let M 1 be the number of lists among all n lists in S E 1 ; M 2 be the number of lists among all n lists in S E 2 . The proof consists of three key parts: with high probability M 1 and M 2 are small; when M 1 and M 2 are small, they are asymptotically independent; given M 1 and M 2 , E 1 and E 2 are independent.</p><formula xml:id="formula_7">E 1 ∩ E 2 -Pr E 1 Pr E 2 &lt; O 1/n .</formula><p>According to the construction of our algorithm, we can show that a given list belongs to S E 1 (or S E 2 ) with probability less than 6/n. From the Chernoff bound, with high probability M 1 and M 2 are close to their mean:</p><formula xml:id="formula_8">Pr M 1 ≥ 6 ≤ exp -6 2 / 2 + ≤ O 1/n and Pr M 2 ≥ 6 ≤ exp -6 2 / 2 + ≤ O 1/n , where = n 1/3 . Assuming Ɛ M 1 = n 1 and Ɛ M 2 = n 2 ,</formula><p>for all m 1 &lt; 6 and m 2 &lt; 6 , we have</p><formula xml:id="formula_9">Pr M 1 = m 1 M 2 = m 2 Pr M 1 = m 1 Pr M 2 = m 2 = n -m 1 ! n -m 2 ! n! n -m 1 -m 2 ! 1 -n 1 + n 2 /n n-m 1 -m 2 1 -n 1 /n n-m 1 1 -n 2 /n n-m 2 = 1 + O 1/n</formula><p>where the last inequality is due to m 1 m 2 = o n . Since all advertisers other than neighbors of i are assumed to have infinite capacities, all the lists that are not in S E 1 do not affect E 1 . Thus, given</p><formula xml:id="formula_10">M 1 = m 1 , E 1 is independent of n -m 1 lists that are not in S E 1 . Because of the assumption S E 1 ∩ S E 2 = , E 1 is independent of E 2 given M 1 and M 2 .</formula><p>From the three facts above, we have</p><formula xml:id="formula_11">Pr E 1 ∩ E 2 = m 1 m 2 Pr M 1 = m 1 M 2 = m 2 Pr E 1 E 2 M 1 = m 1 M 2 = m 2 = m 1 m 2 &lt;6 Pr M 1 = m 1 M 2 = m 2 Pr E 1 E 2 M 1 = m 1 M 2 = m 2 + O 1/n = m 1 m 2 &lt;6 Pr M 1 = m 1 M 2 = m 2 Pr E 1 M 1 = m 1 Pr E 2 M 2 = m 2 + O 1/n = m 1 m 2 &lt;6 Pr M 1 = m 1 Pr M 2 = m 2 Pr E 1 M 1 = m 1 Pr E 2 M 2 = m 2 + O 1/n = m 1 m 2 Pr M 1 = m 1 Pr M 2 = m 2 Pr E 1 M 1 = m 1 Pr E 2 M 2 = m 2 + O 1/n = Pr E 1 Pr E 2 + O 1/n</formula><p>By applying Lemma 4 twice, we can show that any four (or fewer than four) certificate events are asymptotic independent as long as their supporting sets do not intersect:</p><p>Corollary 1. Consider a set of at most four certificate events C j j∈J ( J ≤ 4). If j∈J S C j = , then Pr j∈J C j = j∈J Pr C j + o 1/n .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2.">Computing probabilities.</head><p>In this section and the next, supporting sets of certificate events are of small sizes because of the construction of the distribution. In such cases, the probabilities of certificate events can be calculated via double summation, which is doable even by hand, although time consuming.</p><p>On the other hand, it also can be done via a dynamic programming approach. Given n, the probability of an advertiser being matched at the end given the current state can be computed backward. As we can easily check, the probability converges to the limit with an error term of O 1/n . In fact, when n = 10 4 , the computed probability is within 10 -5 accuracy.</p><p>In this paper, we simply provide the probabilities of certificate events and omit the process of finding them for the following reasons. First, the computation of probabilities is not the key to our approach, though the actual numbers matter. Second, it is just simple algebra and too long to present in the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.4.</head><p>Lower bound on the online algorithm. For notational simplicity, define f a = i∼a f a i and let p a be the probability that an advertiser a is matched by the online algorithm. Since every edge in the graph G with a nonzero flow will carry a flow of 1/3 or 2/3, there are very few different local configurations in the graph G f = A ∪ I E f , where E f = e ∈ E f e &gt; 0 . For example, for an edge e = a i such that f a = 1 and f a i = 2/3, the only four possibilities for i's neighborhood are 1, 2, 3, and 4 in Figure <ref type="figure" target="#fig_1">3</ref>; for an edge e = a i such that f a = 1 and f a i = 2/3, the only five possibilities for i's neighborhood are 1, 2, 3, 4, and 5 in Figure <ref type="figure" target="#fig_1">3</ref>.</p><p>For each configuration, because a has at most three neighbors, we can easily compute a lower bound on the probability of its being matched. For example, assume a has two neighbors i 1 and i 2 , and they are not part of a Downloaded from informs.org by [129.93. <ref type="bibr" target="#b16">16</ref>.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. cycle of length 4. a is matched if one of the three certificate events happens: B a , G i 1 a , or G i 2 a . Since those three events are asymptotically independent,</p><formula xml:id="formula_12">1/3 1 ( 1) ( 2) ( 3) ( 4) 2/3 1 1 1 1 N/A 1 1 1 ( 1) ( 2) ( 3) ( 4) ( 5) 1 1 1 1 N/A 1 2/3 1 N/A a 1 a 1 i i i i i a 1 a a i i i i a a a a a a a a 1 a d i a d i a d i a 1 a 1 a 2 a 1</formula><formula xml:id="formula_13">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -p 1 -p 1 1 -p 2 , where p = Pr B a , p 1 = Pr G i 1</formula><p>a , and p 2 = Pr G i 2 a are easy to find. Using such an idea, we can show case by case that Lemma 5. ∀ a ∈ A, let N a be the set of advertisers who are at an edge distance no more than 4 from a in G f . Then there exists a a ∈ 0 1 for all a ∈ N a , such that</p><formula xml:id="formula_14">a ∈N a a a p a ≥ 1 -2e -2 a ∈N a a a f a</formula><p>Proof. The detailed proof that goes through all cases can be found in the appendix. Lemma 6. ∃ a ≥ 0 a∈A such that a a a a = 1 ∀ a .</p><p>Proof. The proof can be found in the appendix.</p><p>Combining the two lemmas above, a conical combination of inequalities leads to our main result:</p><formula xml:id="formula_15">Theorem 1. Ɛ ALG = a∈A p a ≥ 1 -2e -2 a∈A f a ≥ 1 -2e -2 Ɛ OPT .</formula><p>3.5. Tight example. It is worth mentioning that the ratio of 1 -2e -2 is tight for this algorithm. The ratio can be achieved with the following example: Consider the case of the complete bipartite graph K n n , where n is an even number. One optimal solution to LP (2) consists of a disjoint union of n/2 cycles of length 4; within each cycle, two edges carry 1/3 flow, and two carry 2/3 flow. Since the underlying graph is K n n , the optimal offline solution is n. On the other hand, for any cycle in the offline optimal solution, the expected number of matches is 2 1 -e -2 . Therefore, the competitive ratio in this instance is 1 -2e -2 ≈ 0 729.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Extension to vertex-weighted stochastic matching.</head><p>In this section, we consider the online stochastic vertex-weighted matching problem as defined in Aggarwal et al. <ref type="bibr" target="#b0">[1]</ref>. The problem is exactly the same as the online stochastic matching problem introduced in §1 except for the objective function. In the weighted problem, every advertiser a has a nonnegative weight w a , indicating his/her importance or value. The objective is to maximize the sum of weights of matched advertisers rather than the number of matched advertisers as in the unweighted problem.</p><p>The techniques used in §3.4 are based on local properties of graphs and thus also work for the vertex-weighted case.   Again, since the set of vertices of the feasible polytope of ( <ref type="formula">3</ref>) is a subset of 0 1/3 2/3 E , there exists an optimal solution to (3) in 0 1/3 2/3 E , and let f be such an optimal solution that satisfies requirements in §3.2. To ease the analysis, we try to make E f as sparse as we can by doing the following two types of transformations as we did in §3.2. As argued before, there exists an optimal solution f such that its resulting graph G f does not contain cycles of length 4, unless the four nodes in such a cycle do not have any other neighbors. Furthermore, if there exists impression i that has two neighbors a 1 and a 2 with f i a 1 = f i a 2 = 1/3, f a 1 &lt; 1, and f a 2 &lt; 1, without loss of generality we assume w a 1 &lt; w a 2 . Another solution f with f i a 1 = 0, f i a 2 = 2/3, and everything else unchanged has a larger or equal objective value and fewer edges in its resulting graph. We transform f to f . Note that each time, transformations mentioned above remove one or two edges and do not introduce any new edge. Thus, given any initial optimal solution, after at most E transformations, the optimal solution cannot be transformed further in the above two ways.</p><formula xml:id="formula_16">max a i w a f a i s.t. i f a i ≤ 1 ∀ a ∈ A a f a i ≤ 1 ∀ i ∈ I f e ∈ 0 2/3 ∀ e ∈ E</formula><formula xml:id="formula_17">a 1 1/3 i a 2 1 (1) a 1 2/3 i a 2 1 (2) a 1 2/3 i a 2 1 (3) a 1 1/3 i a 2 1 a 3 1 (4) a 1 2/3 i a 2 1 a 3 1 (5)</formula><p>Based on f, the probability distributions over lists can be constructed as in 3.1.2, and the same idea as in 3.4 leads to the proof that p a ≥ 0 682f a for all a ∈ A. Summing up these inequalities, we have a∈A w a p a ≥ 0 682 a∈A w a f a , which implies that the algorithm is 0.682-competitive.</p><p>It is worth noting that although Lemmas 5 and 6 still hold, they are of little value to weighted problems because of different weights associated with different advertisers. For the same reason, results and techniques proposed in previous papers dealing with unweighted stochastic matching problems are unlikely to be adapted for weighted problems. 4.2. Modification. However, modifying f and the construction of random lists can lead to a better algorithm. If i has neighbors with f = 1 and f &lt; 1, as shown in Figure <ref type="figure" target="#fig_10">4</ref>, f will be modified as follows: in (1), fa 1 i = 0 1 and fa 2 i = 0 9; in (2), fa 1 i = 0 15 and fa 2 i = 0 85; in (3), fa 1 i = 0 6 and fa 2 i = 0 4; in (4), fa 1 i = 0 1, fa 2 i = 0 45, and fa 3 i = 0 45; in (5), fa 1 i = 0 15, fa 2 i = 0 425, and fa 3 i = 0 425. For all the other edges e, fe = f e . Now use ˜f instead of f for the construction of the probability distributions over lists in a way similar to the one described in §3.1.2 as follows. Given an impression type i, if it has two neighbors a 1 and a 2 in the resulting graph, the list is a 1 a 2 with probability fa 1 i ; the list is a 2 a 1 with probability fa 1 i . If i has three neighbors a 1 , a 2 , and a 3 , the list is a j a k a l with probability fa j i fa k i / 1 -fa j i .</p><p>Let pa be the probability that advertiser a is matched in the modified algorithm. Using the same idea as in §3.4, we can then show that Lemma 7. pa ≥ 0 725f a ∀ a ∈ A.</p><p>Proof. The detailed proof, which goes through all cases, can be found in the appendix.</p><p>Summing up these inequalities, we have Theorem 2. Ɛ ALG = a∈A w a pa ≥ 0 725 a∈A w a f a ≥ 0 725 Ɛ OPT .</p><p>5. Stochastic matching with general arrival rates. In this section, we assume that r i ≤ 1 for all i. The algorithm and basic ideas here are very similar to Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>: in the offline stage, we approximate the expected offline optimal solution; then, in the online stage, we use the approximation solution to generate lists of length 2. However, our algorithm is different in two aspects. First, we use a max flow problem instead of Monte Carlo methods to approximate the offline solution; second, the way lists are generated is different. The first difference leads to much less computation in the offline stage, whereas the second difference results in a slightly better competitive ratio. Downloaded from informs.org by [129.93. <ref type="bibr" target="#b16">16</ref>.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</p><p>5.1. Offline solution. One possible approach to find useful offline information in the general case is to use sampling methods to estimate the optimal offline solution, as described in Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>. However, some properties that hold for the optimal offline solution may not hold for the estimated one. Furthermore, a large number of samples may be needed in order to estimate the offline optimal solution within a desirable accuracy, which takes a long time. Therefore, we consider the following LP instead:</p><formula xml:id="formula_18">max a i f a i s.t. i∼a f a i ≤ 1 ∀ a ∈ A a∼i f a i ≤ r i ∀ i ∈ I i∼a 2f a i -r i + ≤ 1 -ln 2 + 1 n ∀ a ∈ A f e ≥ 0 ∀ e ∈ E<label>(4)</label></formula><p>Note that LP( <ref type="formula" target="#formula_18">4</ref>) is equivalent to a single-source s single-destination t maximum flow problem on a directed network Ĝ = V Ê with A + 2 I + 2 vertices and 2 E + A + 2 I arcs. The vertex set V = s t ∪ A ∪ I ∪ I , where I is a duplicate of I, and the arc set Ê = s a a i i i a i i t a ∈ A i ∈ I, where i is a duplicate copy of i . The capacity of (s a) is 1; the capacity of (a i) is r i /2; the capacity of (i i) is 1-ln 2+1/n; the capacity of (i t) is r i ; (a i ) have infinite capacities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.2.</head><p>Upper bound on the optimal offline solution. Let f * be an optimal offline solution. All but the third constraints in (4) are trivially valid for f * . The third constraint has been proven in Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>:</p><p>Lemma 8 (Manshadi et al. <ref type="bibr" target="#b12">[13]</ref>, Lemma 5).</p><p>i∼a 2f * a i -r i + ≤ 1 -ln 2 + 1/n ∀ a ∈ A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Randomized algorithm.</head><p>For simplicity, let us again first add a dummy advertiser a d with f a d = 1 and dummy edges (a d i) for all i with f a d i = r i -a∈A f a i . The dummy advertiser is full at the very beginning. Every time an impression of type i arrives, a random list consisting of two advertisers will be generated as follows. Assume a 1 a k are the advertisers interested in i. Choose a random number x uniformly over [0 r i ]. If x ∈ j-1 l=1 f a l i j l=1 f a l i , then a j is the first advertiser in the list to be considered; if x ± r i /2 ∈ k-1 l=1 f a l i k l=1 f a l i , then a k is the second in the list to be considered. Worth noting is the possibility that a j and a k correspond to the same advertiser; in that case, the list degenerates to a singleton.</p><p>Let m i a j a k be the expected number of requests for impressions of type i and corresponding lists given by a j a k . Since all lists are i.i.d., the probability that an impression is of type i and its corresponding list is a j a k is m i a j a k /n. From the construction of the lists, we have m i a j a k = m i a k a j . As we mentioned in §2, from a given realization of the sequence of random lists, we can find the cardinality of the corresponding online matching. Since the random list associated with the jth request only depends on the impression type of that request and not on types and assignments of earlier requests, these random lists are all i.i.d.. Thus, we can focus on the lists themselves rather than on the impression types with which they are associated. Then m a j a k = i∈I m i a j a k is the expected number of lists that are a j a k , irrespective of the impression types with which they are associated. Furthermore, because m i a j a k = m i a k a j , we have m a j a k = m a k a j . Since all lists are i.i.d., the probability that a list is a j a k is m a j a k /n.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.">Lower bound on the online algorithm.</head><p>The analysis here is almost the same as in Manshadi et al. <ref type="bibr" target="#b12">[13]</ref> except for some minor changes due to the different ways we generate random lists; e.g., m a j a k = m a k a j . To help better understand the arguments, we present the full proof in this section. The following main result is proven by way of successive claims.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 3.</head><p>a∈A p a ≥ 0 706 a∈A f a .</p><p>Let A a = A\ a , A * = A ∪ a d , and If any of B a , E a 1 a , and E a d a happens, then advertiser a is matched. Thus, the probability p a that advertiser a is matched is at least</p><formula xml:id="formula_19">A * a = A * \ a . ∀ a ∈ A * a 1 ∈ A * a , define events B a = ∃ j such that L j = a • , E a 1 a 2 = ∃ j &lt; k such that L j = a 1 • L k = a 1 a 2 ,</formula><formula xml:id="formula_20">p a ≥ Pr B a + Pr Ba Pr a 1 ∈A * a E a 1 a Ba ≥ 1 -e -f a + e -1 a 1 ∈A * a Pr E a 1 a - 1 2 a 1 =a 2 ∈A * a Pr E a 1 a E a 2 a ≥ 1 -e -f a + e -1 a 1 ∈A * a Pr E a 1 a - 1 2 a 1 =a 2 ∈A * a Pr E a 1 a Pr E a 2 a</formula><p>where the last two inequalities are due to asymptotic independence. The proof of asymptotic independence is similar to the proof of Lemma 4 and is omitted in the paper.</p><p>Let us now provide a way to compute Pr E a 1 a .</p><p>Claim 2. We have Pr E a 1 a = g f a 1 m a 1 a for all a 1 ∈ A and a ∈ A * a 1 , and Pr E a d a ≥ g f a d m a d a for all a ∈ A, where</p><formula xml:id="formula_21">g y x = h y 0 -h y x and h y x =      y y -x e -x -e -y if x = y ye -y if x = y</formula><p>Proof. Define F j a 1 = the jth list is a 1 • and G j a 1 a = there exists k ≥ j such that the kth list is a j a . Then,</p><formula xml:id="formula_22">Pr E a 1 a = j Pr F j a 1 Pr G j+1 a 1 a = j 1 - f a 1 n j-1 f a 1 n 1 -1 - m a 1 a n n-j ≈ j f a 1 n e -j/n f a 1 1 -e -n-j /n m a 1 a If m a 1 a = f a 1 , Pr E a 1 a Ba = j f a 1 n e -j/n f a 1 -e -m a 1 a e -j/n f a 1 -m a 1 a = 1 -e -f a 1 - f a 1 f a 1 -f a 1 a e -f a 1 a 1 -e -f a 1 -f a 1 a = g f a 1 f a 1 a If m a 1 a = f a 1 , Pr E a 1 a Ba = j f a 1 n e -j/n f a 1 -e -f a 1 = 1 -e -f a 1 -f a 1 e -f a 1 = g f a 1 f a 1</formula><p>We have transformed a probabilistic problem into an algebraic problem. In the remaining part of the section, we use only algebraic manipulations and the following properties of functions g and h to find a lower bound of the competitive ratio. Claim 3. For y ∈ 0 1 , h y x is convex and decreasing in x ∈ 0 y ; g y x is concave and increasing in x ∈ 0 y ; g y x is increasing in y ∈ x .</p><p>Proof. The claim can be easily verified by taking first and second order partial derivatives. </p><formula xml:id="formula_23">a = h f a 1 0 -h f a 1 m a 1 a ≤ -m a 1 a • h y f a 1 0 ≤ e -1 m a 1 a<label>(5)</label></formula><p>implying that a 1 ∈A a Pr E a 1 a Ba ≤ e -1 . Combined with Pr E a 1 a Ba ≥ g f a 1 m a 1 a for all a 1 ∈ A * a , we have</p><formula xml:id="formula_24">p a ≥ 1 -e -f a + e -1 a 1 ∈A * a g f a 1 m a 1 a - 1 2 a 1 ∈A * a g f a 1 m a 1 a 2 + 1 2 a 1 ∈A * a g f a 1 m a 1 a<label>2</label></formula><p>Since g is increasing in the first argument, we have g f a d m a d a = g f a d m a a d ≥ g f a m a a d for all a ∈ A. Thus,</p><formula xml:id="formula_25">a∈A a 1 ∈A * a g f a 1 m a 1 a ≥ a∈A a 1 ∈A * a g f a m a a 1 and a∈A a 1 ∈A * a g f a 1 m a 1 a 2 ≥ a∈A a 1 ∈A * a g f a m a a 1 2</formula><p>Therefore, by switching the order of summation, we have</p><formula xml:id="formula_26">a∈A p a a∈A f a ≥ a∈A 1 -e -f a + 1/e a 1 ∈A * a g f a 1 m a 1 a -1/ 2e a 1 ∈A * a g f a 1 m a 1 a 2 + 1/ 2e a 1 ∈A * a g f a 1 m a 1 a 2 a∈A f a ≥ a∈A 1 -e -f a + 1/e a 1 ∈A * a g f a m a a 1 -1/ 2e a 1 ∈A * a g f a 1 m a 1 a 2 + 1/ 2e a 1 ∈A * a g f a m a a 1 2 a∈A f a ≥ min a∈A 1 -e -f a + 1/e a 1 ∈A * a g f a m a a 1 -1/ 2e a 1 ∈A * a g f a 1 m a 1 a 2 + 1/ 2e a 1 ∈A * a g f a m a a 1 2 f a Let a = max a 1 ∈A * a m a a 1 = m a a * 1 , s a = a 1 ∈A * a m a a 1 .</formula><p>Then, we have a 1 ∈A * a g f a m a a 1 2 ≥ g f a a 2 . Furthermore, because g is concave in the second argument and g f a 0 = 0,</p><formula xml:id="formula_27">a 1 ∈A * a g f a m a a 1 ≥ a 1 ∈A * a m a a 1 a g f a a = s a a g f a a</formula><p>On the other hand, from inequality (5),</p><formula xml:id="formula_28">a 1 ∈A * a g f a 1 m a 1 a = a 1 ∈A * a \ a * 1 g f a 1 m a 1 a + g f a 1 a ≤ e -1 s a -a + g 1 a Therefore, 1 f a 1 -e -f a + 1 e a 1 ∈A * a g f a m a a 1 - 1 2e a 1 ∈A * a g f a 1 m a 1 a 2 + 1 2e a 1 ∈A * a g f a m a a 1 2 ≥ 1 f a 1 -e -f a + 1 e s a a g f a a - 1 2e e -1 s a -a + g 1 a 2 + 1 2e g f a a 2 = R f a a s a</formula><p>From the definitions of f a , a , and s a , we have f a ≥ s a ≥ a , and f a -s a is the expected number of lists that are singletons a . From the construction of lists, the expected number of singletons a associated with impressions of types i is 2f a i -r i + . Thus, f a -s a = i∼a 2f a i -r i + ≤ 1 -ln 2 + 1/n. We can numerically show that for n ≥ 100,</p><formula xml:id="formula_29">Claim 4. Subject to 1 ≥ f a ≥ s a ≥ a ≥ 0 and f a -s a ≤ 1 -ln 2 + 1/n, R f a a s a ≥ 0 706.</formula><p>Proof. We divide the feasible region into cubes of side length 0.001. In each small region S, define f max 6. Poisson arrivals. In the preceding sections, the number of arriving requests is assumed to be fixed and known in advance. However, in most applications, such an assumption is too strong. Thus, in this section, we attempt to relax this assumption.</p><p>In this section, we consider the following scenario. A set of advertisers expresss their interests in impressions of different types. Advertisers are fixed and known ahead of time, whereas requests for impressions come online. Impression types are i.i.d., and the distribution may be known or unknown. The arrival of impressions is a Poisson process with arrival rate = n. The task is to maximize the cardinality of matching by the end of a given fixed period T = 1.</p><p>6.1. Algorithms. The expected number of arrivals is T = n. We show that greedy algorithms designed for stochastic matching with given number of arrivals works well for the one with Poisson arrivals (e.g., the ranking algorithm for problems with unknown distribution and our proposed algorithms in the previous sections for problems with known distribution). More specifically, we will show that a c-competitive "greedy type" algorithm (where c is the ratio of expectation) for fixed arrivals is ccompetitive for Poisson arrivals.</p><p>Because the number of Poisson arrivals concentrates around its mean, we expect both online and offline objectives to concentrate around their means. Lemma 9. Let N be the number of arrivals within 0 T . Then, Pr 1 -</p><formula xml:id="formula_30">T &lt; N &lt; 1 + T → 1 as T → for any &gt; 0.</formula><p>Let OPT m be the expected offline optimal solution given N = m and OPT be the expected offline optimal solution.</p><formula xml:id="formula_31">Lemma 10. ∀ 1 -n &lt; m ≤ n, OPT m ≤ OPT n ; ∀ n ≤ m &lt; 1 + n, OPT m ≤ 1 + OPT n .</formula><p>Proof. ∀ 1 -n &lt; m ≤ n, an instance m of m arrivals can be generated in the following way: generate an instance n of n arrivals first and then remove nm arrivals uniformly at random. Since m is a subset of n , OPT m ≤ OPT n . By taking expectation, we have OPT m ≤ OPT n .</p><p>∀ n ≤ m &lt; 1 + n, an instance n of n arrivals can be generated in the following way: generate an instance m of m arrivals first, and then remove mn arrivals uniformly at random. A feasible solution of n can be induced by the optimal solution of m , by removing pairs corresponding to removed arrivals and not adding any other pairs. The feasible solution of n has expected value of n/m OPT m . Thus, OPT m ≤ m/n OPT n ≤ 1 + OPT n .</p><p>As a consequence, we have Corollary 2. OPT ≤ 1 + OPT n .</p><p>6.1.1. The unweighted case. Let ALG m be the expected online solution given N = m and ALG be the expected online solution.</p><formula xml:id="formula_32">Lemma 11. ∀ 1 -n &lt; m ≤ n ALG m ≥ 1 -ALG n ; ∀ n ≤ m &lt; 1 + n ALG m ≥ ALG n .</formula><p>Proof. ∀ n ≤ m &lt; 1 + n, an instance n of n arrivals can be generated in the following way: generate an instance m of m arrivals first and then remove the last mn arrivals. Because of the greediness of the algorithm, ALG m ≥ ALG n .</p><p>∀ 1 -n &lt; m ≤ n, let r i be the probability that the ith arrival is matched. Because of the greediness of the algorithm and that fewer and fewer bins are unmatched, r i is nonincreasing. Since ALG m = m i=1 r i and</p><formula xml:id="formula_33">ALG n = n i=1 r i , we have ALG m ≥ m/n ALG n ≥ 1 -ALG n .</formula><p>As a consequence, we have 6.1.2. The weighted case. Let ALG m be the expected online solution given N = m and ALG be the expected online solution. Let R i be the marginal revenue in the ith step. For the algorithm proposed in § §4.1 and 4.2, we can show that although Ɛ R i is not nonincreasing as in the unweighted case, R j cannot be too large compared to Ɛ R i for i &lt; j. Specifically,</p><formula xml:id="formula_34">Lemma 12. Ɛ R j ≤ 9 Ɛ R i ∀ i &lt; j.</formula><p>Proof. Let I be the indicator vector of availability of advertisers right after step i -1. Given I, if an advertiser has zero probability to be matched to a query at step i, he has zero probability to be matched to a query at step j. Given I, if he has nonzero probability to be matched at step i, then the probability is at least 1/ 3n ; on the other hand, with probability at most 3/n, he is matched at step j. From the discussion above, we have Ɛ R j I ≤ 9 Ɛ R j I . By taking expectation over I, we have our lemma.</p><formula xml:id="formula_35">Lemma 13. ∀ 1 -n &lt; m ≤ n ALG m ≥ 1 -9 ALG n ; ∀ n ≤ m &lt; 1 + n ALG m ≥ ALG n .</formula><p>Proof. ∀ n ≤ m &lt; 1 + n, an instance n of n arrivals can be generated in the following way: generate an instance m of m arrivals first and then remove the last mn arrivals. Because of the greediness of the algorithm,</p><formula xml:id="formula_36">ALG m ≥ ALG n . ∀ 1 -n &lt; m ≤ n, ALG m = m i=1 Ɛ R i , and ALG n = n i=1 Ɛ R i . From the above lemma, ALG m ≥ m/ m + 9 n -m ALG n ≥ 1 -9 ALG n .</formula><p>As a consequence,</p><formula xml:id="formula_37">Corollary 4. ALG ≥ 1 -9 ALG n .</formula><p>Because of the assumption of c-competitiveness, ALG n ≥ c • OPT n . Therefore Corollaries 2 and 4 imply that ALG ≥ 1 -10 c • OPT . 6.1.3. Remarks. The only property of the Poisson distributed random variables we have used is that they concentrate around their means. Hence, if the number of arriving queries are different random variables also concentrating around their means, the results in this section would still apply.</p><p>7. Concluding remarks. In this paper, we have proposed new algorithms for online stochastic matching problems that lead to improved competitive ratios under either integral or general arrival rates. We have also shown that our techniques can be applied to other related problems. In particular, we have shown that one can do better than 1 -1/e for the online vertex-weighted bipartite matching problem under the stochastic i.i.d. model with integral arrival rate. Finally, we have shown the validity of all our results under a Poisson arrival model, removing the need to assume that the total number of arrivals is fixed and known in advance, as is required for the analysis of the stochastic i.i.d. models.</p><p>Some questions remain open. Gaps between 0.706 and 0.823 for problems with general arrival rates and between 0.729 and 0.86 for problems with integral arrivals rates are yet to be closed. Note that for unweighted problems with integral rates, the bottleneck of the analysis is a 2-by-2 complete bipartite graph. The bottleneck remains even if one is using b 1 = 2/3 in the constraints f e ≤ b 1 , because the 2-by-2 complete bipartite graphs could be part of feasible solutions. One possible approach would be to add another set of constraints</p><formula xml:id="formula_38">f a i 1 + f a i 2 ≤ b 2 with b 2 ≤ 1 -e -2 . Since the offline optimal solution f * satisfies f * a i 1 + f * a i 2 ≤ 1 -e -2</formula><p>, it would be feasible to the new LP. The techniques used in this paper may then be applied to the new LP in order to derive a better competitive ratio. The same idea could also be applied to weighted problems with integral rates.</p><p>Acknowledgments. The authors thank the anonymous referee for providing thoughtful and detailed comments that improved the quality and clarity of their paper. This research was funded in part by National Science Foundation [Grant 1029603] and Office of Naval Research [Grants N00014-09-1-0326 and N00014-12-1-0033].</p><p>Appendix. Complete proofs of Lemma 5, Lemma 6, and Lemma 7.</p><p>Lemma 5. ∀ a ∈ A, let N a be the set of advertisers who are at an edge-distance no more than 4 from a in G f . Then, there exists a a ∈ 0 1 for all a ∈ N a , such that a ∈N a a a p a ≥ 1 -2e -2 a ∈N a a a f a Proof. For advertiser a with f a = 1/3, p a ≥ Pr B a = 1 -e -1/3 ≥ 0 850f a . For advertiser a with f a = 2/3, p a ≥ Pr B a = 1 -e -2/3 ≥ 1 -2e -2 f a . Thus, we only need to prove the lemma for a with f a = 1.  Before doing so, let us first find probabilities of events B a and G i a exactly. ( ) f a i = 2/3. If i has 2 neighbors a and a 1 , then f a 1 i = 1/3:</p><formula xml:id="formula_39">i i i i i i i i i a 1 a 1 a 1 a 1 a 2 a 1 a 1 a 1 1<label>( 1) ( 4) ( 1) ( 3) ( 4) ( 5) ( 2) ( 2) ( 3) 2/</label></formula><p>( 1)   If i has 2 neighbors a and a 1 , note that f a 1 i = 1/3 and f a 1 &lt; 1 cannot happen together; otherwise, f cannot be a maximum flow:</p><formula xml:id="formula_40">f a 1 = 1/3. Pr G i a ≥ n j=1 1 3n e -j/3n 1 -e -n-j / 3n ≈ 1 - 4 3 e -1/3 = p 1 ≥ 0 044 ( 2) f a 1 = 2/3. Pr G i a ≥ n i=1 2 3n e -2j / 3n 1 -e -n-j / 3n = 1 -e -2 3 -e -1/3 • 2 1 -e -1/3 = p 2 ≥ 0 080 ( 3) f a 1 = 1. Pr G i a ≥ n j=1 1 n e -j/n 1 -e -n-j / 3n = 1 -e -1 -e -1/3 • 3 2 1 -e -</formula><p>( 2) f a 1 i = 2/3 and f a 1 = 1.</p><formula xml:id="formula_41">Pr G i a ≥ n j=1 1 n e -j/n 1 -e -2 n-j / 3n = 1 -e -1 -e -2/3 • 3 1 -e -1/3 = p 6 ≥ 0 195 ( 3) f a 1 i = 1/3 and f a 1 = 1. Pr G i a ≥ n j=1 4 3n e -4j / 3n 1 - 7 8 e -2 n-j / 3n = 1 -e -4/3 - 7 4 e -2/3 1 -e -2/3 = p 7 ≥ 0 299 ( 4) f a 1 i = 2/3 and f a 1 = 2/3. Pr G i a ≥ n j=1 2 3n e -2j / 3n 1 -e -2 n-j / 3n = 1 - 5 3 e -2/3 = p 8 ≥ 0 144</formula><p>If i has only one neighbor, ( 5) Pr G i a ≥ 1 -e -2/3 = p 9 ≥ 0 486</p><p>We say that "i is in 1 with respect to a" if (a i) has the neighborhood structure shown in 1 in Figure <ref type="figure" target="#fig_15">5</ref>, and the same for 2 3 4 1 5. "With respect to a" will be omitted unless otherwise specified. We are now ready to compute lower bounds on p a when f a = 1. We have two cases:</p><p>Case 1: a is contained in a cycle of length 4 in G f . Let a 1 = a i 1 a 2 i 2 be the cycle. According to the choice of the offline solution (see §3.1.1), j k f a j i k = 2 as shown in Figure <ref type="figure" target="#fig_17">6</ref>. Let N be the number of impressions of type i 1 or i 2 . Then</p><formula xml:id="formula_42">p a 1 + p a 2 = Pr N = 1 + 2 Pr N ≥ 2 = 2 -4e -2 = 1 -2e -2 f a 1 + f a 2 ≈ 0 729 f a 1 + f a 2</formula><p>Case 2: a is not contained in a cycle of length 4. Then it has either three or two neighbors:</p><p>(1) a has three neighbors i 1 , i 2 , and i 3 ; then</p><formula xml:id="formula_43">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a ∪ G i 3 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a 1 -Pr G i 3 a ≥ 1 -e -1 1 -p 8 3 ≥ 0 769f a</formula><p>Please note that the second equality is due to Corollary 1, which says that four or fewer certificate events are asymptotically independent if their supporting sets do not intersect. We will also use this asymptotic independence property repeatedly in the rest of the proof.</p><p>(2) a has two neighbors i 1 and i 2 . Without loss of generality, let us assume that f a i 1 = 1/3 and f a i 2 = 2/3: (2a) i 1 is in case 3 or 5. </p><formula xml:id="formula_44">p a ≥ Pr B a ∪ G i 1 a = 1 -1 -Pr B a 1 -Pr G i 1 a ≥ 1 -e -1</formula><formula xml:id="formula_45">p a ≥ Pr B a ∪ G i 1 a = 1 -1 -Pr B a 1 -Pr G i 1 a ≥ 1 -e -1 1 -p 8</formula><p>Similarly, we can compute</p><formula xml:id="formula_46">p a 1 ≥ Pr B a 1 ∪ G i 1 a 1 ≥ 1 -e -2/3 + e -2/3 j 1 n e -j/n 1 -e -n-j / 3n = 1 -e -2/3 + e -2/3 1 -e -1 -e -1/3 • 3 2</formula><p>1 -e -2/3 = p 10 ≥ 0 542</p><p>Since f a = 1 and f a 1 = 2/3, we have</p><formula xml:id="formula_47">p a + p a 1 ≥ 1 -e -1 1 -p 8 + p 10 ≥ 0 736 f a + f a 1 (2c) i 1 is in case 2. (i) i 2 is in case 1.</formula><p>Let a 1 be the other neighbor of i 2 . Since</p><formula xml:id="formula_48">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 1 1 -p 6 and p a 1 ≥ Pr B a 1 = 1 -e -1/3 = p 4 and f a = 1 f a 1 = 1/3, we have p a + p a 1 ≥ 1 -e -1 1 -p 1 1 -p 6 + p 4 ≥ 0 750 f a + f a 1 (ii) i 2 is in case 2.</formula><p>Let a 1 be the other neighbor of i 2 .</p><formula xml:id="formula_49">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 2 1 -p 6</formula><p>Similarly, we can compute</p><formula xml:id="formula_50">p a 1 ≥ Pr B a 1 ∪ G i 1 a 1 ≥ 1 -e -2/3 + e -2/3 j 1 n e -j/n 1 -e -n-j / 3n = 1 -e -2/3 + e -2/3 1 -e -1 -e -1/3 • 3 2 1 -e -2/3 = p 10</formula><p>Since f a = 1 and f a 1 = 2/3, we have</p><formula xml:id="formula_51">p a + 0 5p a 1 ≥ 1 -e -1 1 -p 2 1 -p 6 + 0 5p 10 ≥ 0 749 f a + 0 5f a 1 (iii) i 2 is in case 3 or 4. p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 3 1 -p 6 ≥ 0 736f a (2d) i 1 is in case 1</formula><p>, and i 2 is not in case 3. (i) i 2 is in case 1. Let a 1 be the other neighbor of i 2 . Since</p><formula xml:id="formula_52">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 1 1 -p 5</formula><p>and p a 1 ≥ Pr B a 1 = 1 -e -1/3 = p 4 and f a = 1 and f a 1 = 1/3, we have </p><formula xml:id="formula_53">p a + p a 1 ≥ 1 -e -1</formula><formula xml:id="formula_54">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 2 1 -p 5</formula><p>Similarly, we can compute</p><formula xml:id="formula_55">p a 1 ≥ Pr B a 1 ∪ G i 1 a 1 ≥ 1 -e -2/3 + e -2/3 j 1 n e -j/n 1 -e -n-j / 3n = 1 -e -2/3 + e -2/3 1 -e -1 -e -1/3 • 3 2 1 -e -2/3 = p 10</formula><p>Since f a = 1 and f a 1 = 2/3, we have</p><formula xml:id="formula_56">p a + 0 5p a 1 ≥ 1 -e -1 1 -p 2 1 -p 5 + 0 5p 10 ≥ 0 740 f a + 0 5f a 1 (iii) i 2 is in case 4, p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 4 1 -p 5 ≥ 0 778f a<label>(</label></formula><p>2e) i 1 is in case 1 and i 2 is in case 3; then i 2 has two neighbors. Let a 1 and a 2 be the other two neighbors of i 1 , and a 3 be the other neighbor of i 2 .</p><formula xml:id="formula_57">p a ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p 3 1 -p 5</formula><p>(i) a 3 has three neighbors. According to the discussion in (1),</p><formula xml:id="formula_58">p a 3 ≥ 1 -e -1 1 -p 8 3 Since f a = f a 1 = 1, we have p a + 1 3 p a 3 ≥ 0 736 f a + 1 3 f a 3</formula><p>If a 3 has two neighbors, let the other neighbor of a 3 be i 3 .</p><p>(ii) i 3 is in 1 with respect to a 3 . Let the other neighbor of i 3 be a 4 . According to the discussion in (2c-i),</p><formula xml:id="formula_59">p a 3 + p a 4 ≥ 1 -e -1 1 -p 1 1 -p 6 + p 4 Since f a = f a 3 = 1andf a 4 = 1/3, we have p a + p a 3 + p a 4 ≥ 0 739 f a + f a 3 + f a 4</formula><p>(iii) i 3 is in 2 with respect to a 3 . Let the other neighbor of i 3 be a 4 . According to the discussion in (2c-ii),</p><formula xml:id="formula_60">p a 3 + 0 5p a 4 ≥ 1 -e -1 1 -p 2 1 -p 6 + 0 5p 10</formula><p>Since f a = f a 3 = 1 and f a 4 = 2/3, we have p a + p a 3 + 0 5p a 4 ≥ 0 738 f a + f a 3 + 0 5f a 4 (iv) i 3 is in 3 or 4 with respect to a 3 . According to the discussion in (2c-iii),</p><formula xml:id="formula_61">p a 3 ≥ 1 -e -1 1 -p 3 1 -p 6</formula><p>Since f a = f a 3 = 1, we have p a + p a 3 ≥ 0 730 f a + f a 3 Lemma 6. ∃ a ≥ 0 a∈A such that a a a a = 1 ∀ a .  Proof. Let us first obtain an expression of a for various types of advertisers. Consider an advertiser a such that f a = 1: if a corresponds to case (1) in the proof of Lemma 5, a = 1 -#(nodes in (2e) that are at distance 2 from a)/3; if a corresponds to case (2c) and there exists a node in (2e) that is at distance 2 from a, then a = 0; otherwise, a = 1. For all the other advertisers a such that f a &lt; 1, we have a = 1a f a =1 a a a . We can now verify that for all a, a ≥ 0 and a a a a = 1: • If a is in case (1), let N a = a a is a 2-neighbor of a and a is in (2e) . Because N a ≤ 3, we have a ≥ 0. On the other hand, from the proof of Lemma 5, a a = 1/3 if a ∈ N a and is 0 otherwise. From the construction of above, a = 1 for a ∈ N a and a = 1 -N a /3. Therefore, a a a a = 1.</p><formula xml:id="formula_62">a 1 2/3 i a 1 ( 2) a 1 1 i a 1 ( 3) a 1 i a d i a d i a d i N/A ( 4) a 1 i 1 1 ( 1) a 1 i 1 ( 2) a 1 i 1 N/A ( 3) a 1 i a 1 a 1 a 1 a 1 a 1 a 2 a 2 a 1 a 2 2/3 ( 4) a 1 i N/A ( 5) a 1 i 1 1/3 ( 6) a 1 i 1 2/3 ( 7)</formula><p>• If a is in (2c) and it has a 2-neighbor a 1 who is in (2e), then from the proof of Lemma 5, a 1 a = 1 and a a = 0 for all a = a or a 1 . From the construction of above, a = 0 and a 1 = 1. Therefore, a a a a = 1.</p><p>• For all a with f a = 1 and not in the two cases above, a a = 0 for all a = a. Since a = 1, we have a a a a = 1.</p><p>• For all a with f a &lt; 1, a a = 0 for all a = a with f a &lt; 1. Because of the construction of , a a a a = 1 is trivially true. We will show that a ≥ 0.</p><p>-f a = 1/3. We can show that there is at most one advertiser a such that a a a &gt; 0. Therefore, a ≥ 0.</p><p>-f a = 2/3, and a has only one neighbor. We can show that there is at most one advertiser a such that a a a &gt; 0. Therefore, a ≥ 0.</p><p>-f a = 2/3, and a has two neighbors. We can show that there are at most two advertisers a such that a a a &gt; 0. Furthermore, for all a , a a ≤ 1/2. Therefore, a ≥ 0. Lemma 7. pa ≥ 0 725f a ∀ a ∈ A.</p><p>Proof. As discussed in §3.1.1, the left case in Figure <ref type="figure" target="#fig_2">1</ref> is the only possible cycle in the resulting graph. Let N be the number of impressions of type i 1 or i 2 . Then, pa 1 + pa 2 = Pr N = 1 + 2 Pr N ≥ 2 = 2 -4e -2 . Because of the symmetry between a 1 and a 2 , pa 1 = pa 2 = 1 -2e -2 = 0 729.</p><p>From now on, we only need to consider advertisers a who are not part of cycles of length 4. Therefore, the supporting sets of their certificate events do not intersect and thus are asymptotically independent.</p><p>We first consider the case f a = 1. We can show case by case that Claim 5. ∀ a with f a = 1, pa ≥ 0 7250f a .</p><p>Proof. Let us first compute probabilities of certificate events: f a i = 2/3. If i has two neighbors a and a 1 , then f a 1 i = 1/3. 1 f a 1 = 1/3. We use a Markov Chain approach to approximate Pr G i a . The state space consists of three states: "a is full" (state 1), "a is empty and a 1 is full" (state 2), and "a is empty and a 1 is empty" (state 3). The transition probabilities are p 3 2 = 0 1/n, p 3 3 = 1 -0 1/n, p 2 2 = 1 -0 1/n, p 2 1 = 0 1/n, and p 1 1 = 1. The initial probability distribution is (0, 0, 1); i.e., both a and a 1 are empty. Pr G i a is the probability of state 1 after n time step. We use n = 10 6 here and for all other cases: Pr G i a ≥ 0 0047 = p1 </p><note type="other">643</note><p>The same idea can be used to compute the probability for all cases. The only difference is the size of state space and the transition probability. Please note that we can also calculate Pr G i a exactly, as we did in the proof of Lemma 5. 2 f a 1 = 2/3.</p><p>Pr G i a ≥ 0 0194 = p2 3 f a 1 = 1.</p><p>Pr G i a ≥ 0 1091 = p3 If i has only one neighbor, 4 Pr G i a ≥ 0 2835 = p4 f a i 1 = 1/3. If i has three neighbors a, a 1 , and a 2 , then at least one of f a 1 or f a 2 is 1; otherwise, we can find another solution that has fewer nonzero flow edges and a better objective value.</p><p>1</p><formula xml:id="formula_63">f a 1 = f a 2 = 1.</formula><p>Pr G i a ≥ 0 1608 = p5 6 f a 1 = 1 and f a 2 = 1/3.</p><p>Pr G i a ≥ 0 1396 = p6 7 f a 1 = 1 and f a 2 = 2/3.</p><p>Pr G i a ≥ 0 1304 = p7</p><p>If i has two neighbors a and a 1 , note that f a 1 i = 1/3 and f a 1 &lt; 1 cannot happen together; otherwise, f cannot be a maximum flow. 2 f a 1 i = 2/3 and f a 1 = 1. Pr G i a ≥ 0 1955 = p8 3 f a 1 i = 1/3 and f a 1 = 1.</p><p>Pr G i a ≥ 0 2992 = p9 4 f a 1 i = 2/3 and f a 1 = 2/3.</p><p>Pr G i a ≥ 0 1219 = p10</p><p>If i 1 has only one neighbor, 5 Pr G i a ≥ 0 4866 = p11 We are now ready to compute lower bounds on pa when f a = 1:</p><p>(1) a has three neighbors i 1 i 2 and i 3 . (2d) i 2 is in case 3.</p><formula xml:id="formula_64">pa ≥ Pr B a ∪ G i 1 a ∪ G i 2 a ∪ G i 3 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a 1 -Pr G i 3 a ≥ 1 -e -1 1 -p10 3 = 0 7509f a<label>(</label></formula><p>(i) i 1 is in case 1 2 3 or 5; then</p><formula xml:id="formula_65">pa ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a ≥ 1 -e -1 1 -p3 1 -p5 = 0 7250f a (ii) i 1 is in case 4; then pa ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a</formula><p>≥ 1 -e -2/3-0 4 1 -p3 1 -p10 = 0 7308f a (iii) i 1 is in case 6; then</p><formula xml:id="formula_66">pa ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1 a 1 -Pr G i 2 a</formula><p>≥ 1 -e -2/3-0 45 1 -p3 1 -p6 = 0 7491f a (iv) i 1 is in case 7; then   </p><formula xml:id="formula_67">pa ≥ Pr B a ∪ G i 1 a ∪ G i 2 a = 1 -1 -Pr B a 1 -Pr G i 1</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>≤ 1 ∀ a ∈ A a∼i f a i ≤ r i ∀ i ∈ I f e ≥ 0 ∀ e ∈ E(1)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>1. 3 .</head><label>3</label><figDesc>Related work. As indicated above, bipartite matching problems and related advertisement allocation problems have been studied extensively in the operations research and computer science literature.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Cycles of length 4. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>3. 1 . 1 .</head><label>11</label><figDesc>Offline solution. Let us consider the following maximum flow problem on the graph G:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>3. 1 . 2 .</head><label>12</label><figDesc>Generation of random lists. In order to simplify the description of the specific probability distribution used to generate random lists, and the analysis of the corresponding online algorithm, let us first add dummy advertisers a i d and dummy edges (a i d i) with f a i d i = r i -a∈A f a i for all i ∈ I with a∼i f a i &lt; 1. Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Possible configurations of i's neighborhood in the graph. All edges carry 1/3 flow. The number next to advertiser a indicates f a = i∼a f a i .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Possible configurations of i's neighborhood in the graph. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow. The number next to advertiser a indicates f a = i∼a f a i .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>4. 1 .</head><label>1</label><figDesc>Original algorithm. Let us consider the maximum flow problem on the graph G:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>( 3 )</head><label>3</label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Modification of f. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow. The number next to advertiser a indicates f a .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>and E a d a = ∃ j such that L j = a d a . Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>a = sup f a and f min a =g f min a min a 2 We</head><label>a2</label><figDesc>inf f a . Define s max a , s min a , max a , and min a similarly. Then, from Claim 3, we can show that ∀ f a s a a ∈ S, R f a s a a is bounded from below by 1 f max a 1 -e -f min a can numerically verify R f a s a a ≥ 0 706 in each region. The lower bound is achieved when f a ∈ 0 999 1 , s a ∈ 0 692 0 693 , and a ∈ 0 564 0 565 . Hence, R f a s a a ≥ 0 706 is a valid inequality for the whole feasible region. Theorem 3 follows from Claim 4. Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Corollary 3 .</head><label>3</label><figDesc>ALG ≥ 1 -2 ALG n . Because of the assumption of c-competitiveness, ALG n ≥ c • OPT n . Therefore Corollaries 2 and 3 imply that ALG ≥ 1 -2 c • OPT . Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. Jaillet and Lu: Online Stochastic Matching 638 Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS 1/3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Possible configurations of i's neighborhood in the graph. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow. The number next to advertiser a indicates f a .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>2 / 3 = p 3 = 1 -</head><label>2331</label><figDesc>≥ 0 109 If i has only one neighbor, ( 4) Pr G i a ≥ 1 -e -1/3 = p 4 ≥ 0 283 ( ) f a i = 1/3. If i 1 has three neighbors a a 1 , and a 2 , ( 1) We have f a 1 = f a 2 = 1; otherwise, we can find another optimal solution to LP (2) with fewer nonzero flow edges. Therefore, Pr G i a ≥ k&gt;j 2 n e -2j /n • 4 3n e -4 k-j / 3n • 1 -7 8 e -2 n-k / 3n</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. Cycle of length 4. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. Possible configurations of i's neighborhood in the graph. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow. The number next to advertiser a indicates f a .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>2 ) a has two neighbors i 1 and i 2 . 1 - 1 - 2 a≥ 1 - 1 a 1 - 1 a 1 - 2 a≥ 1 Figure 8 .</head><label>2211211111218</label><figDesc>Figure 8. Possible configurations of i's neighborhood in the graph. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow. The number next to advertiser a indicates f a .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>a 1 -G i 2 a≥ 1 1 - 1 -</head><label>12111</label><figDesc>Pre -2/3-0 425 1 -p3 1 -p7 = 0 7400f a Claim 6. ∀ a with f a = 1/3, pa ≥ 0 7622f a . Proof. There are three possible local configurations:(1) The probability of certificate event Pr G i a ≥ 0 1756; thus,pa ≥ Pr B a ∪ G i a = Pr B a 1 -Pr G i a ≥ 1 -e -0 1 1 -0 1756 = 0 2541 = 0 7622f a (2) pa ≥ Pr B a = 1 -e -1/3 = 0 2835 = 0 8504f a (3)The probability of certificate event Pr G i a ≥ 0 2275; thus,pa ≥ Pr B a ∪ G i a = 1 -1 -Pr B a 1 -Pr G i a ≥ 1 -e -0 1 1 -0 2275 = 0 3010 = 0 9030f a Claim 7. ∀ a with f a = 2/3, pa ≥ 0 7299f a .Proof. Let us first compute the probabilities of certificate events. ( ) f a i = 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Figure 9 .( 2 ) 1 - 1 - 1 a 1 -G i 2 a≥ 1 - 1 - 1 - 1 a 1 -G i 2 a≥ 1 -</head><label>92111121111121</label><figDesc>Figure 9. Possible configurations of i's neighborhood in the graph. Thin edges carry 1/3 flow, and thick edges carry 2/3 flow. The number next to advertiser a indicates f a .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc><table><row><cell>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell></row><row><cell>j, k</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc><table><row><cell>Jaillet and Lu: Online Stochastic Matching</cell><cell></cell></row><row><cell>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell><cell>635</cell></row><row><cell>Because of the convexity of h in the second argument, we have</cell><cell></cell></row><row><cell>Pr E a 1</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc><table><row><cell>Jaillet and Lu: Online Stochastic Matching</cell><cell></cell></row><row><cell>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell><cell>639</cell></row><row><cell>a 1</cell><cell>i 1</cell></row><row><cell>a 2</cell><cell>i 2</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. i 1 is in case 4. Let a 1 be the other neighbor of i 1 .</figDesc><table><row><cell>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell></row><row><cell>(2b)</cell></row></table><note><p>1 -p 7 ≥ 0 742f a</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>1 -p 1 1 -p 5 + p 4 ≥ 0 741 f a + f a 1 Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. i 2 is in case 2. Let a 1 be the other neighbor of i 2 .</figDesc><table><row><cell>Jaillet and Lu: Online Stochastic Matching</cell><cell></cell></row><row><cell>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell><cell>641</cell></row><row><cell>(ii)</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc><table><row><cell></cell><cell>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell></row><row><cell>1/3</cell><cell>a 1</cell></row><row><cell></cell><cell>i</cell></row><row><cell>1</cell><cell>a</cell></row><row><cell></cell><cell>( 1)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved. Jaillet and Lu: Online Stochastic Matching Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>Downloaded from informs.org by [129.93.16.3] on 28 September 2015, at 21:54 . For personal use only, all rights reserved.</figDesc><table><row><cell cols="3">Jaillet and Lu: Online Stochastic Matching</cell><cell></cell><cell></cell></row><row><cell cols="4">Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</cell><cell>645</cell></row><row><cell>2/3</cell><cell></cell><cell>2/3</cell><cell>2/3</cell><cell></cell></row><row><cell>1</cell><cell>a 1</cell><cell>i</cell><cell>i</cell><cell>i</cell></row><row><cell>1</cell><cell>a 2</cell><cell>2/3</cell><cell>a 1</cell><cell>a 1</cell></row><row><cell></cell><cell>( 1)</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>2/3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>i</cell><cell>i</cell><cell>i</cell></row><row><cell></cell><cell>a 1</cell><cell></cell><cell>a 1</cell><cell>a 1</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Mathematics of Operations Research 39(3), pp. 624-646, © 2014 INFORMS</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>, At: 21:54 Publisher: Institute for Operations Research and the Management Sciences (INFORMS) INFORMS is located in Maryland, USA</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Online vertex-weighted bipartite matching and single-bid budgeted allocations</title>
		<author>
			<persName><forename type="first">G</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Karande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 22nd Annual ACM-SIAM Sympos. Discrete Algorithms</title>
		<meeting>22nd Annual ACM-SIAM Sympos. Discrete Algorithms<address><addrLine>SIAM, Philadelphia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1253" to="1264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">A dynamic near-optimal algorithm for online linear programming</title>
		<author>
			<persName><forename type="first">S</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ye</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<pubPlace>Stanford, CA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Working paper, Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Improved bounds for online stochastic matching</title>
		<author>
			<persName><forename type="first">B</forename><surname>Bahmani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kapralov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 22nd Annual Eur. Sympos. Algorithms</title>
		<meeting>22nd Annual Eur. Sympos. Algorithms<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="170" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Online primal-dual algorithms for maximizing ad-auctions revenue</title>
		<author>
			<persName><forename type="first">N</forename><surname>Buchbinder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ESA 07: Proc. 15th Annual Eur. Sympos. Algorithms</title>
		<meeting><address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="253" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The AdWords problem: Online keyword matching with budgeted bidders under random permutations</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Devanur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Hayes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th ACM Conf. Electronic Commerce</title>
		<meeting>10th ACM Conf. Electronic Commerce<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">09</biblScope>
			<biblScope unit="page" from="71" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<author>
			<persName><forename type="first">J</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Mirrokni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muthukrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Online stochastic matching: Beating 1 -1/e. FOCS 09: Proc. 50th Annual IEEE Sympos</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="117" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Online budgeted matching in random input models with applications to AdWords</title>
		<author>
			<persName><forename type="first">G</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SODA &apos;08: Proc. 19th Annual ACM-SIAM Sympos. Discrete Algorithms</title>
		<meeting><address><addrLine>SIAM, Philadelphia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="982" to="991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Online stochastic weighted matching: Improved approximation algorithms. WINE &apos;11: Workshop of Network and Internet Econom</title>
		<author>
			<persName><forename type="first">B</forename><surname>Haeupler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Mirrokni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zadimoghaddam</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="170" to="181" />
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An optimal deterministic algorithm for online b-matching</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kalyanasundaram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Pruhs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">233</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="319" to="325" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Online bipartite matching with unknown distributions</title>
		<author>
			<persName><forename type="first">C</forename><surname>Karande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Tripathi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC &apos;11: Proc. 43rd Annual ACM Sympos. Theory Comput</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="587" to="596" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An optimal algorithm for online bipartite matching</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">V</forename><surname>Vazirani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">V</forename><surname>Varirani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC &apos;90: Proc. 22nd Annual ACM Sympos. Theory Comput</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="352" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Online bipartite matching with random arrivals: An approach based on strongly factor-revealing LPS</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mahdian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC &apos;11: Proc. 43rd Annual ACM Sympos. Theory Comput</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="597" to="606" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Online stochastic matching: Online actions based on offline statistics</title>
		<author>
			<persName><forename type="first">V</forename><surname>Manshadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ovies</forename><surname>Gharan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Saberi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="559" to="573" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<idno>129.93.16.3</idno>
		<title level="m">21:54 . For personal use only, all rights reserved. Jaillet and Lu: Online Stochastic Matching</title>
		<imprint>
			<date type="published" when="2015-09-28">28 September 2015</date>
		</imprint>
	</monogr>
	<note>Downloaded from informs</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">On the method of bounded differences</title>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdiarmid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Siemons J. ed. Surveys in Combinatorics, London Math. Soc. Lect. Note Series</title>
		<imprint>
			<biblScope unit="volume">141</biblScope>
			<biblScope unit="page" from="148" to="188" />
			<date type="published" when="1989">1989</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">AdWords and generalized online matching</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Saberi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Vazirani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Varirani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS &apos;05: Proc. 46th Annual IEEE Sympos</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="264" to="273" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">AdWords and generalized on-line matching</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Saberi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Vazirani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Vazirani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page">22</biblScope>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Simultaneous approximations for adversarial and stochastic online budgeted allocation</title>
		<author>
			<persName><forename type="first">V</forename><surname>Mirrokni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ovies</forename><surname>Gharan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zadimoghaddam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SODA &apos;12: Proc. 23rd Annual ACM-SIAM Sympos. Discrete Algorithms</title>
		<meeting><address><addrLine>SIAM, Philadelphia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1690" to="1701" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m">21:54 . For personal use only, all rights reserved</title>
		<imprint/>
	</monogr>
	<note>Downloaded from informs.org by [129.93.16.3] on 28 September 2015</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
