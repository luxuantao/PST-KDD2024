<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Edge Fault Tolerance in Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Frank</forename><surname>Harary</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">New Mexico State University</orgName>
								<address>
									<postCode>88003</postCode>
									<settlement>Las Cruces</settlement>
									<region>New Mexico</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">John</forename><forename type="middle">P</forename><surname>Hayes</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<postCode>48109</postCode>
									<settlement>Ann Arbor</settlement>
									<region>Michigan</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Edge Fault Tolerance in Graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">AE48785928DA8F44B81AC0AE77AA4C48</idno>
					<note type="submission">Received May 1991 Accepted October I992</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A graph or multigraph G is k-edge fault-tolerant with respect to a graph G, denoted k-EFT(G), if every graph obtained by removing any k edges from G' contains G. We observe that for k sufficiently large a k-EFT(G) graph must be a multigraph, and we present some basic conditions that such multigraphs must meet. We then study the problem of constructing k-EFT(G) graphs that are optimal in that they contain the minimum number of edges among all k-EFT(G) graphs. Families of optimal k-EFT( G) graphs, where G is the n-node path or cycle, are presented for all k and n. We also give an optimal 1-EFT design for the n-dimensional hypercube.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION AND NOTATION</head><p>Motivated by the study of computers and communication networks that tolerate failure of their components, various graph theoretic models of fault tolerance have been proposed. They typically involve two separate graphs: a primary graph G* and a secondary graph G that must be embedded in G*, even when "faults" that remove nodes or edges from G* are present. In the widely used model of [6], for instance, G* is said to be k-fault-tolerant or k-FT with respect to G if the removal of a set F of k for fewer nodes from G* results in a graph G* -F (with F standing for faults) that contains a subgraph isomorphic to G. A class of problems of practical interest is to construct a k-FT primary graph G* with respect to useful secondary graphs (trees, cycles, hypercubes, and the like) where G* is optimal in some sense, such as having the smallest number of nodes or edges among all k-FT primary graphs of interest <ref type="bibr">[I, 6-91.</ref> As nodes often represent expensive components (processors) and edges represent less expensive interconnections (wires), most at-tention has been devoted to node faults, i.e., the removal of nodes (and their incident edges), rather than edge faults where only edges are removed.</p><p>We treat node and edge fault tolerance as intrinsic properties of a single graph by, in effect, equating G with a zero-fault-tolerant primary graph G*. This suggests that fault tolerance is a more fundamental feature of a graph than has hitherto been thought. After introducing suitable notation, we analyze edge fault tolerance in detail; a companion paper examines node fault tolerance [4]. We show that multigraphs are an inherent feature of edge fault-tolerant graph families. For several important graph types, including paths, cycles, and hypercubes, we show how to construct k-edge fault-tolerant families that are optimal in that they contain the minimum number of edges for a given k. In general, we follow the terminology and notation of <ref type="bibr" target="#b2">[3]</ref>.</p><p>First, we review the concept of node fault tolerance. Let G be a graph with p nodes and q edges. A ( p + k)-node graph G* is said to be k-node fault-tolerant, Node fault tolerance of the above kind is usually referred to simply as "fault tolerance" in the computer literature. We now introduce the corresponding concepts for edge fault tolerance. A p-node graph C* is said to be k-edge fuult-tolerant, or k-EFT, with respect to G , if every graph obtained by removing any k edges from G* contains G. If C* has the smallest number q</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>+ e f t ~( G )</head><p>of edges among all p-node graphs that are k-EFT with respect to G , then G* is called optimally k-EFT with respect to G, and eftk(G) is the k-edgefault tolerance of G. We will refer to G * as a k-EFT(G) graph, or simply as a k-EFT(G). Figure <ref type="figure" target="#fig_5">2</ref> shows I-, 2-, and 3-EFT versions of C 5 , which we will later see to be optimal. Unlike the corresponding process for node fault tolerance, the addition of edges in this manner will produce a multigraph such as that of Figure <ref type="figure" target="#fig_5">2(c)</ref> when k becomes sufficiently large. (This may place a practical limit on the largest acceptable value of k.) We will assume that all the preceding definitions apply to multigraphs as well as to graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PRELIMINARY RESULTS</head><p>It is useful to be able to express fault-tolerant multigraphs as combinations of several graphs that share the same set of nodes. The standard graph operations such as union, join, and composition 131 do not include an operator for combining multigraphs. Let GI and G? be two multigraphs defined on the same set V of labeled nodes, but with disjoint edge sets. The merger of GI and G2, denoted GI 0 Gz, is the graph on V whose edge set is the union of the edges of GI and G2. For example, the 3-EFT(Cs) multigraph of Figure <ref type="figure" target="#fig_5">2(c</ref>) can be expressed as Ks 0 C s . As in [ 5 ] , we denote the k-fold power graph Go G 0 . . . o G with respect to merging by &amp;. The shorthand "network" notation for multigraphs given in Figure <ref type="figure" target="#fig_2">3</ref> is also useful [3, p. 531. A multiedge consisting of j simple edges between the same two nodes will be called multiedge of order j , or simply a j-edge, and will be represented by a single heavy line labeled withj. A simplified version of the multigraph of Figure <ref type="figure" target="#fig_5">2</ref>(c) using this notation appears in Figure <ref type="figure" target="#fig_15">3(c</ref>). If every j-edge of a multigraph G is replaced by a simple edge, i.e., a 1-edge, then the resulting simple (ordinary) graph is called the underlying graph UG of G. It will be seen that families of faulttolerant graphs often have a common underlying graph. For example, the 2-EFT(Cs) graph K5 of Figure <ref type="figure" target="#fig_5">2</ref>(b) is the underlying graph of the 3-EFT(Cs) multigraph in Figure <ref type="figure" target="#fig_15">3(c)</ref>.</p><p>The following theorem is of fundamental importance in constructing graphs or multigraphs of specified edge fault tolerance.  ger graph G12 = GI 0 G2 is ( k l + k2 + I)-EFT with respect to G.</p><p>Proof. Consider a fault F in Glz produced by removing some set of k l + k2 + 1 edges to form the faulty graph G12 -F. We must show that GI2 -F contains a copy of G. If at most k l edges of F lie in G I , then we can find G in GI ; the fault is clearly tolerated. If kl + 1 or more edges of F lie in G I , then at most k2 edges of F are in G2. This means that G2 contains a copy of G because it is k2-EFT with respect to G. Hence, in all cases, G12 -F contains G, and the theorem follows.</p><p>Corollary 1. The k-th order merger power graph kc is</p><formula xml:id="formula_0">( k -1)-EFT with respect to G , for all k L I .</formula><p>In general, even though GI and G2 are optimally edge fault-tolerant, their merger GI 0 Gz need not be. For example, since Cs, like every graph, is trivially and optimally 0-EFT with respect to itself, Corollary 1 implies that 2 C ~ = Cs 0 C5 is a I-EFT(CS) multigraph. However, 2C5 is not optimal because it contains 10 edges, one more than the (optimal) I-EFT(CS) appearing in Figure <ref type="figure" target="#fig_5">2(a)</ref>.</p><p>As k increases, G* often acquires enough edges to contain the complete graph K,, on p nodes as a subgraph. For example, the optimal 2-EFT(CS) graph of Figure <ref type="figure" target="#fig_5">2</ref>(b) is also K 5 , and it can be shown that every optimal k-EFT(Cs), for k 2 2 has K S as its underlying graph. [A nonoptimal k-EFT(C5) such as I + ~C S need not, however, contain Ks .I The edge fault tolerance of K,, is easily characterized.</p><p>Theorem 2. The complete graph K,, on p nodes has a unique and optimal k-EFT realization k + 1 K,, , for all k 2 0 .</p><p>The next theorem is useful in determining the optimality of an edge fault-tolerant (multi) graph. If G is a multigraph with underlying graph UG, we associate two types of degrees with the each node x of G. The degree d e g ( x ) of x is the number of edges incident with x in G; this is the usual definition. The underlying degree of x, denoted undeg(x), is the number of edges incident with x in UG. In other words, undeg(x) is the number of multiedges incident with x in G. In a simple graph, undeg(x) = d e g ( x ) , and each is the number of nodes adjacent to x. In a multigraph, we can have </p><formula xml:id="formula_1">z j i &gt; k , i= I</formula><p>where jl , j 2 , . . . j , are the orders of the multiedges in E.</p><p>Proof. The proof follows directly from the fact that if it is to replace x, then node x * must have at least m multiedges and at least d edges incident with it, even after it loses any k of its original edges.</p><p>Theorem 3 provides bounds on the degrees and underlying degrees of the nodes in G* that facilitate optimality tests. Consider the three edge fault-tolerant versions of C5 in Figure <ref type="figure" target="#fig_5">2</ref>. Since C 5 , like every cycle, is regular of degree 2, each of the five nodes in a l-EFT(CS) graph must have degree 3 or more to satisfy constraint (1). One node must have degree of at least 4 to make the total number of edges an integer. Now, the graph of Figure <ref type="figure" target="#fig_5">2</ref>(a) has one node of degree 4 and four nodes of degree 3, so if it is I-EFT(C5), it must also be optimal. In the case of the ~-EFT(CS) graph Cs* of Figure <ref type="figure" target="#fig_5">2</ref>(c), each node x must have degree 5 or more by (1). Because there are only five nodes in CT , node x can have an underlying degree of at most 4. Hence, a multiedge of order 2 or more must be incident with x . If x has four multiedges with orders 1, 1, 1, and 2, then its three 1-edges violate constraint <ref type="bibr" target="#b1">(2)</ref>. [Removal of these three edges would reduce undeg(x) to 1 .I Hence,</p><p>x's four multiedges must have orders of at least I, 1, 2, and 2; these minimum values are met exactly by every set of four nodes in CT. We conclude that C t ' s nodes have the minimum possible degrees and underlying degrees consistent with being 3-EFT with respect to C5 ; consequently Cs* is the unique optimal 3-EFT(CS) multigraph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PATHS</head><p>We next consider optimal k-EFT graphs for the n-node path P, . The corresponding k-NFT graphs are identified in <ref type="bibr" target="#b5">[6]</ref>. As we will see, the edge fault tolerance properties of paths and cycles are closely linked; the latter are examined in the next section. It is obvious that C, is a 1-EFT(P,) graph and eftl(Pn) = I , because removal of one edge from C, leaves P,. However, a k-EFT(P,) need not contain C , . In fact, by Corollary I , the multigraph L + ~ P, is a k-EFT(P,) that does not contain any cycles. For the trivial case Pz where the path is a single edge, k + l Pz is an optimal k-EFT(P2) for all k 2 0. For n B 3, the multigraph k+lPn is far from optimally k-EFT. If k is odd, specifically, if k = 2 j -1 for all integersj 2 I , thenjCS is an optimal (2j -1)-EFT(P,) that is formed simply by replacing each edge of C, by a j-edge. Figure <ref type="figure" target="#fig_4">4</ref> shows optimal ( 2 j -1)-EFT( P,)'s for small values of n. Each node in these multigraphs has degree k + 1 = 2j, so the multigraphs are optimal by Theorem 3. To see that j C , is (2j -I)-EFT with respect to P,, for n 2 3, note that j C , contains P, as long as no more than one completej-edge is removed fromjC, by a (2j -1)edge fault F. If F removes a j-edge, then it can remove at mostj -1 edges from any otherj-edge injC,, since k = 2j -1. Consequently, j C , will always contain a copy of P, after the removal of any 2j -1 edges.</p><p>With even k = 2j and n 2 3, an optimal /(-EFT( P,,) is somewhat more difficult to construct. We present a general way of doing so by adding a minimum number of edges to j C , , which is an optimal (j -I)-EFT(P,) multigraph, in order to increase its edge fault tolerance by one. This method is illustrated by Figure <ref type="figure" target="#fig_11">5</ref>   <ref type="figure">( X i ,</ref><ref type="figure">,</ref> When n is even, we also insert the vertical edge (x0, xnlZ). Now every node has its degree increased by one. When n is odd, we have three remaining nodes that we connect via the two new edges (Xo, XI,,QI) and (xo, x1,/21) drawn as diagonals in Figure <ref type="figure" target="#fig_11">5</ref>(b). In this case, xg has its degree increased by two; all other nodes have their degrees increased by one.</p><p>Next we prove that the (multi) graphs G J ( 2 m ) and Gj(2rn -I ) of Figure <ref type="figure" target="#fig_11">5</ref> are 2j-EFT by demonstrating that after any 2j -1 edges are removed the remaining graph contains the cycle C , , i.e., the reduced graph is hamiltonian. It follows that the path P, remains after any additional edge is removed. As pointed out above, the deletion of 2j -1 edges can only remove one complete j-edge (heavy line) from jC,. Consequently, we only need show that Gj(2rn) and Gj(2rn -I ) are hamiltonian after the removal of anyj-edge. That this true may be seen from Figure <ref type="figure" target="#fig_8">6</ref>. For G,(2rn). these cycles in Gj(2m -I) varies slightly with the value of n. Thus, Gj(2m -1) is an optimal k-EFT(P,) for n = 2m -1. We note in passing that the underlying graphs of Gj(2m) and Gj(2m -1) are hamiltonianconnected graphs of n nodes with the minimum number of edges, a fact that has been observed in other contexts <ref type="bibr" target="#b5">[6]</ref>. The next theorem summarizes the results covered by the above discussion.</p><p>Theorem 4. The edge fault tolerance of paths is as follows:</p><p>(a) For n = 2 and k 2 0, t + l Pz is an optimal k-EFT(P,) and efrk(P2) = k.  Since it is not a proper multigraph, it cannot be isomorphic to ?C5. Similarly, Figure <ref type="figure" target="#fig_9">7</ref>(d) gives an optimal 4-EFT(P6) multigraph that is not isomorphic to the multigraph G2(6) of Figure <ref type="figure" target="#fig_13">7(c)</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">CYCLES</head><p>We turn next to the construction of optimal edge faulttolerant implementations of the n-node cycle C, . Certain cases have been studied in [8, 91, where a k-EFT(C,) graph is called k-edge hamiltonian and is not allowed to be a multigraph. Obviously, a (multi) graph that is &amp;-EFT with respect to C , is ( k + 1)-EFT with respect to P,. However, as observed earlier, a k-EFT(P,) may not even be I-EFT with respect to any C,. We begin with two easily characterized special cases, k = 1 and k = n -3; note that Theorems 5-7</p><p>below cover all cases. Proof. Part ( a ) is an immediate consequence of the properties of the optimal &amp;-EFT( P,) graphs discussed in the preceding section. Since every node of K , has degree n -1 = k + 2 , Theorem 3 implies that if K, is ( n -3)-EFT with respect to C, it is also optimal. To determine its edge fault tolerance, consider the effect of a fault F that removes n -3 edges from K,. Let X I and x2 be any two nodes of the faulty graph K, -F, and let F remove the edge (xI , x2) between them, along with n -4 other edges. The effect of F is to reduce the combined node degrees of x , and x2 from 2(n -1) to no less than 2(n -1) -2 -( n -4) = n . Hence, By a well-known theorem due to Ore [3, p. 681, since all pairs of nonadjacent nodes of K, -F satisfy (31, K, -F must be hamiltonian. Part (b) then follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>An alternative I-EFT(C,) design appears in [8].</head><p>Next, we consider the optimal EFT cycles lying between the limiting cases covered by Theorem 5 , all of which are proper graphs. Thejth power graph of C , is denoted by C $ and is formed by adding edges to each node xi in C , joining it to all nodes at distance d or less from x i , for 2 5 d 5 j . As before, let the nodes of C, be labeled xo, X I , . . . , x , -I . Theorem 6. The edge fault tolerance of cycles for k between 1 and n -3 is as follows: It takes two papers <ref type="bibr">[8,</ref><ref type="bibr" target="#b7">9]</ref> to prove this highly nontrivial result! Optimality is immediate by Theorem 3. However, proving the k-EFT property is very difficult; complete proofs can be found for k odd and k even in [8] and <ref type="bibr" target="#b7">[9]</ref>, respectively. The graphs Ci+' and C c ' 0 D, were identified earlier <ref type="bibr" target="#b1">[2]</ref> as maximally connected graphs with a minimum number of edges. Figure <ref type="figure" target="#fig_12">8</ref> illustrates Theorem 6 for n = 7 and 8. Figure <ref type="figure" target="#fig_12">8(b)</ref>, for example, shows an optimal 2-EFT(C7) = C : . By adding 17/21 = 4 diameters to C : , as in Figure <ref type="figure" target="#fig_12">8(c)</ref>, we obtain an optimal 3-EFT(C7) graph. Figure <ref type="figure" target="#fig_12">8(g)</ref> shows an optimal 4-EFT(Cs) = Ci. Figures <ref type="figure">9(a-d</ref>) give optimal k-EFT( C6) graphs for k = 0, 1, 2, and 3.</p><formula xml:id="formula_2">x 4 x 4 x 4 x 4 (d) (e)<label>(1) (9)</label></formula><p>We can directly extend the preceding results to obtain C,*, an optimal k-EFT(C,), when k is n -2 or more, in which case C,* is a proper multigraph. All that is necessary is to merge one of the optimal graphs defined by Theorems 5 and 6 with an appropriate power of the complete graph K , . For example, K6 is an optimal 3-EFT(C6) graph, as shown in Figure <ref type="figure">9</ref> and k mod(n -2) are the quotient and remainder, respectively, of k / ( n -2).</p><p>To see the optimality of our construction, consider thisj is odd. </p><p>All h#j n -2</p><p>It can readily be seen that inequality <ref type="bibr" target="#b5">(6)</ref> is met exactly by G* = lk/(,-2)1Kn 0 C,,j. For example, in the case of Figure <ref type="figure">9</ref>(f), n = 6 and k = 5 , so</p><formula xml:id="formula_4">5 x 6 1 = 3 1 7 1 = 24.</formula><p>Hence, G* is indeed an optimal k-EFT(C,) as claimed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">OTHER GRAPHS</head><p>Many other graph types pose interesting and potentially useful edge-fault-tolerance problems. We consider two representative examples of interest in the design of multiprocessing computers, meshes and hypercubes, restricting our attention to the 1-EFT case.</p><p>The n-dimensional mesh M(m1, m2, . . . , m,) may be defined as the graph product P,, x P,, x -* x P,"</p><p>of n paths where the left-hand side is the sum of the orders of all edges incident with any node xi of G*. The total number q of edges in G* must then satisfy  that link its peripheral nodes [see Fig. <ref type="figure">IO(b)</ref>]. Suppose that an edge F in dimension i is removed from G*. We can rotate G* in this dimension to move F to the spare position, as illustrated for F = ( x ~. ~, x4.?) in Figure IO(c), thus obtaining a subgraph isomorphic to M that does not contain F. Hence, G* is I-EFT. We conjecture that I-EFT meshes constructed in this way are also optimal, but this appears to be difficult to prove.</p><p>The n-dimensional mesh with mi = 2 for all i is, of course, the n-dimensional hypercube Q,,. In the 2- node bib2 --* b,, to its "antipodal" counterpart b ;b; -. .bA. Thus, node 0 -* 00 is connected to I * * 11, node 0 -* -01 is connected to 1 * * 10, and so on.</p><p>Theorem 8. For the n-dimensional hypercube Q,, with n 2 2, the graph Q,, 0 A, is an optimal l-EFT(Q,), and eff,&lt;Qn) = 2"-'.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. (a) The cycle C5; (b) a nonoptimal l-NFT(Cs); (c) an optimal l-NFT(C5).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Theorem 1 .Fig. 2 .</head><label>12</label><figDesc>Fig. 2. Optimal k-EFT(C5) for (a) k = 1, (b) k = 2, and (c) k = 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. (a) A j-edge of a multigraph; (b) simplified notation for thej-edge; (c) application to the 3-EFT(C5) multigraph of Figure 2(c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>undeg(x) &lt; d e g ( x ) , in which case only undeg(x) represents the number of nodes adjacent to x. For any node x in the multigraph of Figure 2(c), undeg(x) = 4, but d e g ( x ) = 6. Theorem 3. Let G* be a k-EFT(G). If the minimum degree of G is d , then every node x * in G* must have degree d * satisfying d* L d + k. (1) If the minimum underlying degree of G is m , then x * must have underlying degree m * 2 m such that for every set E of n = m* -m + 1 multiedges incident with x * :</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Optimal k-EFT(P,)'s for all odd k = 2j -1 with 2 5 n c 5 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>2 .</head><label>2</label><figDesc>for the two basic cases, even n = 2 m and odd n = 2 m -I , for m 2 With the n nodes labeled XO, X I , . . . x,,-~ as shown, we add tojC, the set S of Id21 edges</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>) for 0</head><label>0</label><figDesc>&lt; i . = 1n/21; note that when n is even, [n/21 = [n/21 = n/2 = m. The set S consists of all the horizontal edges in the figure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Optimal 2j-EFT( P, ) rnultigraphs: (a) G,(2m) for n even; (b) G,(2m -1) for n odd.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>( 6 )</head><label>6</label><figDesc>For n<ref type="bibr" target="#b1">2</ref> <ref type="bibr" target="#b2">3</ref> and odd k = 2j -1, j C , is an optimal (2j -I)-EFT(P,) and efta-I(P,) = ( j -1 ) n + 1. ( c ) For n 2 3 and even k = 2j, Gj(2m) and Gj(2m -I) defined by Figure 5(a) and S(b) are optimal 2j-EFT(P,)'s for n = 2m and n = 2m -1, respectively. In this case, efry(Pn) = ( j -I ) n + ln/21 + 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 (</head><label>7</label><figDesc>Figure 7(a) and (c) illustrate 3-EFT(Ps) = 2C5 and 4-EFT(P6) = G2(6) constructed according to the above procedure. These optimal k-EFT(P,)'s are by no means unique. It is easily verified that the graph Ks of Figure 7(b) is also optimally 3-EFT with respect of P s .Since it is not a proper multigraph, it cannot be isomorphic to ?C5. Similarly, Figure7(d) gives an optimal 4-EFT(P6) multigraph that is not isomorphic to the multigraph G2(6) of Figure7(c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Optimal k-EFT( P,)'s for (a, b) k = 3 and n = 5 and (c, d) k = 4 and n = 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Theorem 5 .</head><label>5</label><figDesc>Figure S(a) and (b) are optimal I-EFT(C,) graphs for n = 2m and n = 2m -1, respectively, and eftl(C,) = ln/21. (b) K, is the optimal ( n -3)-EFT(C,) graph, and eftn-3(C,) = n ( n -3112.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Optimal k-EFT(C,)'s for (a-c) n = 7 and k = 1 , 2, and 3 and (d-g) n = 8 and k = 1 , 2, 3, and 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Theorem 7 .</head><label>7</label><figDesc>(d). Merging the O-EFT(C6) graph Ca of Figure 9(a) with K6 yields K6 0 c 6 [Fig. 9(e)], which is an optimal 4-EFT(C6). Merging the I-EFT(C6) graph c 6 0 0 6 of Fig-ure 9(b) with K6produces K60 C60 D6 [Fig. 9(f)], which is an optimal 5-EFT(C6), and so on. When k reaches 2n -5, we obtain 2 K 6 [Fig. 9(h)], which is a 7-EFT(C6). Next, we have the 8-EFT(C6) = 2 K 6 0 C6, etc. These results are collected and generalized in the following theorem. The edge fault tolerance of cycles for k &gt; n -3 is as follows: For n &gt; 3, the merger lk,,,-2), K, 0 C,,j is an optimal k-EFT(C,) multigraph, where C,,.j is the optimal j-EFT( C,) graph defined by Theorems 5(a) and 6 withj = k mod ( n -2), which is the residue of k divided by n -2. The corresponding fault tolerance number is where (Y = 0 if j = k mod(n -2) is even and (Y = 1 if Proof. First, we show that G* = lk,(,,-2)1Kn 0 C,., tolerates k edge faults. By Theorems 1 and S(b), ,k,(a-*)l K , is ( ( n -2)[k/(n -2)] -1)-EFT with respect to C,, . The graph Cn,j has edge fault tolerance j = k mod(n -2). Hence, Theorem I implies that the fault tolerance of G* with respect to C , is ( n -2)[k/(n -211 -I + (k mod(n -2)) + I = k, because [k/(n -2)]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>3 Fig. 9 .</head><label>39</label><figDesc>Fig. 9. Optimal k-EFT(C6)'s for (a-d) k = 0, 1, 2, and 3 and (e-h) k = 4, 5, 6, and 7</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>[ 3 ]</head><label>3</label><figDesc>. It has m l m 2 . . m , nodes connected in the gridlike configuration illustrated in Figure10(a) for the most common, 2-dimensional, case. As noted in Section 3, we can make P , I-EFT by adding an edge between its first and last nodes, thus extending it to C,. This suggests that G* = C,, x C,, x . . . x Cmn might be an optimal I-EFT version of the mesh M , where mi 2 3 for all i . Clearly, G* can be formed by adding mi spare edges to each dimension i of mesh MIf we now sum the n -I possible inequalities of the form (4) for every distinct j # i, we obtain Hence,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. (a) The 2-dimensional mesh M(3, 4); (b) a 1-EFT(M(3,4)) with faulty (hatched) edge f = ( x ~, ~, x4,*); (c) reconfiguration around F .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>Fig. 11. (a) Optimal 1-EFT(Q3) for the 3-dimensional hypercube Q3; (b) recovery from a fault affecting the hatched edge F = (000, 001).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head></head><label></label><figDesc>b,! -* * 6,) along dimension i of Q,, links two copies of Qn-I . When a fault removes F, it can be replaced by the antipodal edge F' = (bl b2 . * b, * -* 6,. b ; b * *bj . . . b;) supplied by A,,. In fact, all 2"-' original edges lying in dimension i are replaced by the corresponding edges from A,,. These edges link the two copies of originally linked by F and form a copy Proof. An edge F = ( b l b 2 -. . bi * . . b,, bib2 * * of Q,,. Optimality follows from Theorem 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 1 l</head><label>1</label><figDesc>Figure 1 l(a) shows Q3 0 A3 constructed according to Theorem 8. Recovery from a fault affecting the hatched edge F = (000,001), o r any of the four edges lying in dimension 3, is depicted in Figure I I(b). This can be visualized as a rotation of the rightmost face of the Q3 in the figure by 180". This research was supported by grant NOOO14-WJ 1860 from the U.S. Office of Naval Research.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Designing optimal fault-tolerant star networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Farrag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Dawson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="707" to="716" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The maximum connectivity of a graph</title>
		<author>
			<persName><forename type="first">F</forename><surname>Harary</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Nut. Acad. Sci. U.S.A</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="1142" to="1146" />
			<date type="published" when="1962">1962</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Graph Theory</title>
		<author>
			<persName><forename type="first">F</forename><surname>Harary</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969">1969</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Node fault tolerance in graphs</title>
		<author>
			<persName><forename type="first">F</forename><surname>Harary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hayes</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>In preparation</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Isomorphic factorizations. 11: Combinatorial designs</title>
		<author>
			<persName><forename type="first">F</forename><surname>Harary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Wallis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Congress. Num</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="13" to="28" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A graph model for fault-tolerant computer systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hayes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput. C</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="876" to="884" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An optimal 2-fault-tolerant realization of symmetric hierarchical tree systems</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Kwan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Toida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Paoli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">W</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">11. J. Graph Theory</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="79" to="95" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
	<note>Net-</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Minimum k-Hamiltonian graphs</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">W</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J . Graph Theory</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="1" to="239" />
			<date type="published" when="1982">1984. 1982</date>
		</imprint>
	</monogr>
	<note>works</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
