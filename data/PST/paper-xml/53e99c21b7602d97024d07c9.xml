<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Human and automatic modularizations of process models to enhance their comprehension</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011-03-21">21 March 2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
							<email>h.a.reijers@tue.nl</email>
							<affiliation key="aff0">
								<orgName type="institution">Eindhoven University of Technology</orgName>
								<address>
									<postBox>P.O. Box 513</postBox>
									<postCode>5600 MB</postCode>
									<settlement>Eindhoven</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
							<email>jan.mendling@wiwi.hu-berlin.de</email>
							<affiliation key="aff1">
								<orgName type="institution">Humboldt-Universität zu Berlin</orgName>
								<address>
									<addrLine>Unter den Linden 6</addrLine>
									<postCode>10099</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Dijkman</surname></persName>
							<email>r.m.dijkman@tue.nl</email>
							<affiliation key="aff0">
								<orgName type="institution">Eindhoven University of Technology</orgName>
								<address>
									<postBox>P.O. Box 513</postBox>
									<postCode>5600 MB</postCode>
									<settlement>Eindhoven</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Human and automatic modularizations of process models to enhance their comprehension</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2011-03-21">21 March 2011</date>
						</imprint>
					</monogr>
					<idno type="MD5">FE4E43BB024FFDBEC9F4AADEBA1AD7C2</idno>
					<idno type="DOI">10.1016/j.is.2011.03.003</idno>
					<note type="submission">Received 12 June 2010 Received in revised form 29 December 2010 Accepted 9 March 2011 Recommended by: G. Vossen</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Business Process Modeling Modularity Empirical test Automated discovery</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Modularization is a widely advocated mechanism to manage a business process model's size and complexity. However, the widespread use of subprocesses in models does not rest on solid evidence for its benefits to enhance their comprehension, nor are the criteria clear how to identify subprocesses. In this paper, we describe an empirical investigation to test the effectiveness of using subprocesses in real-life process models. Our results suggest that subprocesses may foster the understanding of a complex business process model by their ''information hiding'' quality. Furthermore, we explored different categories of criteria that can be used to automatically derive process fragments that seem suitable to capture as subprocesses. From this exploration, approaches that consider the connectedness of subprocesses seem most attractive to pursue. This insight can be used to develop tool support for the modularization of business process models.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In the design and production of complex technology, modularity is recognized as a key principle. For example, it has been argued that the computer industry has dramatically increased its rate of innovation by adopting modular design <ref type="bibr" target="#b0">[1]</ref>. In contexts such as these, modularity is commonly interpreted as the design principle of having a complex system composed from smaller subsystems that can be managed independently, yet function together as a whole <ref type="bibr" target="#b1">[2]</ref>.</p><p>Modularization is also applied in business process models using subprocesses. Most popular process modeling techniques support this concept, e.g. UML Activity Diagrams <ref type="bibr" target="#b2">[3]</ref>, EPCs <ref type="bibr" target="#b3">[4]</ref>, BPMN <ref type="bibr" target="#b4">[5]</ref>, and YAWL <ref type="bibr" target="#b5">[6]</ref>. Various advantages are attributed to the use of subprocesses in process models, in particular when they grow large. At build-time, subprocesses support a modeling style of stepwise task refinement, stimulate reuse of process models, and potentially speed up the (concurrent) development of the overall process model <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. At run-time, i.e. when a process model is enacted by an automated system, subprocesses allow for scaling advantages: Each subprocess, for example, may be executed on a different workflow server <ref type="bibr" target="#b7">[8]</ref>. Finally, when a process model is used to facilitate the understanding of complex business processes among various stakeholders, subprocesses are supposed to ease the understanding of the model <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref>. The latter advantage is particularly noteworthy, because in most business applications it is the primary purpose of a process model to act as a means of communication <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>. This paper will be concerned with this particular advantage of using subprocess in process models, i.e. the enhancement of their comprehension by human readers.</p><p>It should be noted that the way in which modularity is currently utilized in modeling practice raises some questions about its actual benefits from the perspective of human comprehension. First of all, there are no objective criteria to establish the right level of granularity for a subprocess. Accordingly, there is no absolute guideline if a particular subprocess should be on level X or Xþ1 in a model hierarchy <ref type="bibr" target="#b12">[13]</ref>. Neither is there a unique way to modularize a process model <ref type="bibr" target="#b12">[13]</ref>. As a consequence, modularity is often introduced in an ad hoc fashion. Furthermore, there are clearly drawbacks when the process logic is fragmented across models. In particular, it ''becomes confusing, less visible, and tracking [y] paths is tiring'' <ref type="bibr" target="#b13">[14]</ref> if a subprocess is decomposed in further subprocesses. The fact that the semantic check in ARIS Toolset mainly addresses consistency issues between events in the subprocess and around the refined function illustrates the seriousness of this problem. Finally, even if modularization is useful for maintenance purposes, by making it easier to understand which aspects must be changed, it is questionable whether advantages materialize in practice: Many organizations fail to keep their models up to date <ref type="bibr" target="#b14">[15]</ref>.</p><p>In this paper, our interest is with two research problems. The first problem is that solid indications are missing for benefits of modularization in process models, i.e. the use of subprocesses, to ease their interpretation. Our interest is to discover whether subprocesses can be useful to improve the understandability of real-life process models. For this issue, we will build on an empirical investigation of two complex process models from practice, both in modular and ''flat'' form, and their comprehension by a group of 28 experienced process modelers. The contribution of our work is to provide tangible support for the usefulness of subprocesses in process models. We also provide an insight into the underlying causes for this effect.</p><p>The second problem we address is the lack of dedicated approaches to support process modelers with modularizing a given process model into a group of related, understandable subprocesses. We explore three attractive directions for the automated discovery of subprocesses, apply them to a real-life and complex process model, and evaluate the results against the modularization that experienced process modelers provided for the same model. Our contribution in this respect consists of providing concrete indications for the further development of automated discovery algorithms.</p><p>In the presentation of our contributions, we will build on some of our earlier work <ref type="bibr" target="#b15">[16]</ref>. In comparison with this publication, we significantly extended the presentation and discussion of the experiment that was conducted to investigate the effect of subprocess usage and updated the review of related literature. Beyond that, the use and evaluation of the automated discovery algorithms that is included in the current paper is completely new.</p><p>Against this background, the structure of this paper is as follows. In the next section, we will give a broader background for the concept of modularity, in particular with respect to process modeling. In Section 3 we will present the setup of our empirical test along with its results and a discussion. Section 4 presents our proposals for automatic support for subprocess discovery with a corresponding evaluation. Section 5 compares our contribution to related research. Section 6 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Theoretical background</head><p>In this section we discuss the theoretical background of our research. In Section 2.1 we present the essential concepts related to modularity in conceptual modeling. Section 2.2 revisits contributions on the modularity of process models. Section 2.3 takes a cognitive research perspective on process model modularity, and derives hypotheses on its costs and benefits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Modularity in system design and conceptual modeling</head><p>Often, the terms modularity, decomposability, and hierarchy are used interchangeably. However, according to <ref type="bibr" target="#b1">[2]</ref>, a modular system is not automatically decomposable in the sense that the modules can be easily managed independently. After all, it is possible to break a system into modules whose workings remain highly interdependent with the internal workings of other modules. Furthermore, as Parnas points out in his seminal paper on ''information hiding'', a modular system is not necessarily hierarchical <ref type="bibr" target="#b16">[17]</ref>. To clarify these notions, consider Fig. <ref type="figure" target="#fig_1">1</ref>. In this figure, three abstract modular designs can be seen. In each of these, a module is represented as a rectangle and each arrow represents a ''uses'' relation between two modules. Design (a) is hierarchical, since the dependencies form a partial ordering. This is, however, not the case for design (b): A cyclic dependency exists between a subset of the modules. Such a design is called non-hierarchical. Furthermore, designs (a) and (b) may well be decomposable, considering the limited number of dependencies between the modules. In contrast, this is less obvious for design (c) with its numerous interdependencies. Note that the hierarchy notion can be mathematically pinned down, where decomposability refers to a qualitative notion. For this paper we consider the general phenomenon of ''modularity'' as the main subject of interest.</p><p>In many settings, ''the real issue is normally not to be modular but how to be modular'' <ref type="bibr" target="#b1">[2]</ref>. Modular systems are much more difficult to design than comparable interconnected systems <ref type="bibr" target="#b0">[1]</ref>. Beyond that, problems with incomplete or imperfect modularization tend to appear only when the modules come together and work poorly as an integrated whole. It has been argued that many of the most attractive and durable systems are developed through an ''unselfconscious'' design process <ref type="bibr" target="#b17">[18]</ref>. In such a design process, used design rules are not explicit; inconsistencies and interdependencies are revealed by trial and error. However, it is by no means obvious that unselfconscious design must always, or even usually, result in modularity <ref type="bibr" target="#b1">[2]</ref>.</p><p>Quality criteria to consciously decompose a system into modules have been discussed by Wand and Weber on a general level <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20]</ref>. The authors identify five criteria. The first three are absolute criteria, which are either met or not, and focus on the content of the modular model, not its structure. Minimality requires that there is no redundant state information in the modular model. In data models this basically matches normalization requirements. Determinism requires that a state change is clearly identified to be triggered by an internal or an external event. If that is not the case the behavior of a module can only be understood by knowing the state of another subsystem. Losslessness demands that emergent properties are not lost in a modularization. Furthermore, the two criteria coupling and cohesion should be optimized, cf. <ref type="bibr" target="#b20">[21]</ref>. Coupling should be minimal such that the sum of inputs of each subsystem is less or equal to the sum of inputs in any other modularization. Cohesion should be maximal such that all output affected by input variables are contained in the same set, and adding another output does not extend the set of input variables on which they depend.</p><p>Wand and Weber's criteria had a strong influence on the object-oriented design metrics proposed by Chidamber and Kemerer <ref type="bibr" target="#b21">[22]</ref>. The usefulness of the five criteria has been demonstrated for UML class diagrams and state charts in an experimental setting <ref type="bibr" target="#b22">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Modularization in process models</head><p>The area of related research in the context of process models is huge covering works on process modularization, e.g. <ref type="bibr" target="#b23">[24]</ref><ref type="bibr" target="#b24">[25]</ref><ref type="bibr" target="#b25">[26]</ref>, process inheritance, e.g. <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b27">28]</ref>, and reduction rules, e.g. <ref type="bibr" target="#b28">[29]</ref><ref type="bibr" target="#b29">[30]</ref><ref type="bibr" target="#b30">[31]</ref>. Since the latter two categories are mainly utilized for the purpose of process model analysis, i.e. the decomposition is non-persistent, we will focus on the first category. Furthermore, we do not consider modular design of process-aware information systems such as in <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b32">33]</ref>. In the context of process model modularization, three aspects can be distinguished: modularization operations, modularization prerequisites, and modularization selection.</p><p>Modularization operations. The idea that basic operators should facilitate modularization was already proposed in the 1980s for data flow diagrams <ref type="bibr" target="#b23">[24]</ref>. Refinement operations have also been defined for Workflow Nets <ref type="bibr" target="#b33">[34]</ref>. Recently, the ability to extract a subprocess from a process model has been described as a change pattern for process-aware information systems <ref type="bibr" target="#b25">[26]</ref>. This pattern must be implemented reflecting the syntactic requirements of the modeling language. In ARIS there are two ways to extract a subprocess: by modularization (refining function with subprocess) and by segmentation (cutting a model in different parts) <ref type="bibr" target="#b12">[13]</ref>. Both these options are tailored to yield syntactically correct EPCs.</p><p>Modularization prerequisites. There are some recommendations regarding the conditions whether at all a process model should be considered for modularization. Some of the practitioners' books state that modularization should be introduced in a model with more than 5-15 <ref type="bibr" target="#b34">[35]</ref> or 5-7 activities <ref type="bibr" target="#b9">[10]</ref>, yet without giving any support for this rule. Recently, it has been recommended based on empirical findings that process models with more than 50 elements should be decomposed <ref type="bibr" target="#b35">[36]</ref>. Depending on the process modeling language the amount of activities can vary for 50 elements, e.g. EPCs use connectors for routing and events to separate functions while YAWL essentially only uses tasks. Still, up to now no objective criteria has been proposed for identifying which subprocess should be on which level in the model hierarchy <ref type="bibr" target="#b12">[13]</ref>.</p><p>Modularization selection. There are some guidelines on how to select parts of process models for modularization. Good candidates for subprocesses are fragments of a model that are components with a single input and a single output control flow arc <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b36">37,</ref><ref type="bibr" target="#b37">38]</ref>. Furthermore, long and thin process models should be preferred to square models <ref type="bibr">[13, p. 278</ref>]. This argument points to the potential of metrics to guide the modularization. The idea here would be to use quality metrics like the ones proposed in <ref type="bibr" target="#b35">[36,</ref><ref type="bibr" target="#b38">39]</ref> to assess which modularization should be preferred. An application of metrics to compare design alternatives is reported in <ref type="bibr" target="#b39">[40]</ref>. Yet, there is no dedicated approach to guide modularization based on metrics.</p><p>Overall, the main focus of research on process modularization is of a conceptual nature. Clearly, there are no objective and explicit guidelines that modelers in practice can rely on. The aim of our research as reported in the following sections is to contribute to a better understanding of the effects of modularization as a stepping stone towards such guidelines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Cost and benefit of process model modularity</head><p>The modularity of a process model can have two major effects in terms of understanding: a benefit of information hiding and browsing costs. We discuss them based on the cognitive dimensions framework. This framework covers a set of aspects that have empirically been proven to be significant for the comprehension of computer programs and visual notations <ref type="bibr" target="#b40">[41]</ref>. While the framework has been developed for notations, we can also use it to discuss comprehension of models in general or any other information artifact. There are two major findings that the framework builds upon: A representation always emphasizes a certain information at the expense of another one, and there has to be a fit between the mental task at hand and the notation <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b42">43]</ref>. The implications of these insights for process models and their modularity can be discussed along the lines of those cognitive dimensions that are relevant for process model reading.</p><p>Abstraction gradient refers to the grouping capabilities of a notation. Most process modeling languages do not provide concepts for logically grouping activities from a single process model, although there are exceptions like BPEL <ref type="bibr" target="#b43">[44]</ref>, in which the scope concept can be used to logically group activities, and BPMN <ref type="bibr" target="#b44">[45]</ref>, in which the group concept can be used to logically group activities. In general, flow languages can be considered abstraction-hating <ref type="bibr" target="#b40">[41]</ref>. As a consequence, the more complex the model gets the more difficult it becomes for the model reader to identify those parts that closely relate to one another.</p><p>Hidden dependencies refer to interdependencies that are not fully visible. In modular process models such hidden dependencies might exist between process model parts that are spread over different modules. This observation points to the potential danger that a more fragmented process model could imply a greater share of browsing costs, and therefore affect understanding.</p><p>Both these considerations result in the hypothesis that subprocesses are likely to increase a reader's understanding of a model due to information hiding. This assumption is measurable in terms of a suitable experimental design with understanding performance as the dependent dimension. Yet, it is up until now not clear to which degree additional costs in terms of browsing through different subprocesses might actually counter-balance the performance gain. We will discuss these issues in detail in the following section on our experimental design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Experimental design and findings</head><p>This section presents an experimental design to test the effects of modularity (Section 3.1) along with its findings (Section 3.2) and a discussion (Section 3.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Research design</head><p>In the previous sections we discussed that the ad hoc way in which modularity is currently introduced in modeling practice raises doubts about its benefits, but that theoretical indications exist for the benefits of using subprocesses. In developing a test for the presumed connection between modularity and understanding, several challenges must be met.</p><p>First of all, the question is how to pursue results that have the potential to provide insights that are meaningful, in the sense that they relate to the real-life application of subprocesses. For example, it would be unsatisfactory to test the effects of modularity in small or artificial process models. To achieve a realistic background for our research, we set up a collaboration with Pallas Athena Solutions<ref type="foot" target="#foot_0">1</ref> in the Netherlands, a specialized provider of BPM services. In our cooperation with this company, we gathered real-life, complex models as study objects. What is more, a large number of experienced process modelers from this company participated in our investigation.</p><p>The second issue relates to the organization of an empirical test in a rigorous manner. In lack of specific literature on empirical research with respect to process modeling, we build on approaches and classifications used in the field of software experimentation <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b46">47]</ref>. In particular, we use an experimental design that is comparable to what was applied in a recent study to evaluate various types of BPM technology <ref type="bibr" target="#b47">[48]</ref>. To test the hypothesis we carried out a so-called single factor experiment. In general, this design is suitable to investigate the effects of one factor on a common response variable. This design also allows to analyze variations of a factor: The factor levels. The response variable is determined when the participants of the experiment (who are also called subjects) apply the factor or factor levels to a particular object. The overall approach in our experiment is visualized in Fig. <ref type="figure">2</ref>. We will address each of the mentioned elements in our design in more detail now.</p><p>Object. The basic objects that were evaluated by the participants in our test were two process models taken from practice. The models were used in the experiment both in their original form-displaying modularity-and in their ''flattened version'' where modularity is completely removed. The flattening involved the removal of all dependencies between model elements such that they all arrived at the same level of abstraction. Note that for any particular process model the absence or presence of modularity does not affect the business logic in a semantic sense.</p><p>The two process models were selected from a little over 80 process models that were created and delivered by our partner organization for its clients. We focused our search for suitable objects by the use of three criteria: (1) the presence of modularity in the process model, <ref type="bibr" target="#b1">(2)</ref> the size of the model, and (3) access to the original creators of the model. The process models we looked for needed to display modularity as consciously applied by the modeler to deal with the complexity of a large model. We only considered models of more than 100 tasks, which can be considered as very large using the process size classification provided in <ref type="bibr" target="#b48">[49]</ref>. Our line of reasoning here is that if modularity does not help to understand very large models, it will not help to distinctively understand smaller models either. Finally, we needed access to the modelers of the model to validate questions on the content of the model.</p><p>From our search, four candidate models emerged. One of these models was specifically developed for automated enactment and was not further considered. After all, the understandability of the model for human readers is generally not a prime issue in this context; the process model is automatically interpreted. Of the remaining three, which were all developed for the support of stakeholders in a process improvement project, the two process models were selected that were most similar to each other in terms of process size, number of subprocesses, and modularity depth. Both models had been modeled with the Protos tool <ref type="bibr" target="#b49">[50]</ref>, of which the underlying technique is similar to Workflow Nets <ref type="bibr" target="#b33">[34]</ref>. The flattened versions of process models A and B can be seen in Figs. <ref type="figure">3</ref> and<ref type="figure">4</ref> respectively.</p><p>Model A describes the procedure in use by an organization that is responsible for granting driver's licences. The process in question deals with clients that cannot directly obtain their driver's license because of physical or psychological disabilities that can influence their driving. Model B captures how a subcategory of unemployed citizens is coached and receives advice in finding a job. Note that the labels in Figs. <ref type="figure">3</ref> and<ref type="figure">4</ref> have been removed to protect the confidentiality of the involved organizations; they were available to the participants in our test. 2  Factor and factor levels. In our experiment, the use of modularity is the considered factor, with factor levels ''present'' and ''absent''. Note that we deliberately collected real process models from practice already exhibiting modularity and derived flattened versions from it, instead of doing it the other way around. In this way, we could build on a real-life application of modularity.</p><p>Response variable. The response variable in our experiment is the level of understanding that the respondents display with respect to the process models, both in their modularized and flattened form. To measure the response variable, a specific set of questions was developed for each of the two models to be answered by the subjects. This approach is similar to the one we applied in a previous study into model understandability <ref type="bibr" target="#b38">[39]</ref>. An example question for model A is: ''If an AA-investigation is required, then a number of alternative settlements is possible. How many of these settlements exist?''. For model B an example question is: ''If a client does not appear on an appointment, is it always so that a new appointment is scheduled?''. The questions were formulated in Dutch, the same language used by the creator of the modeler to name model elements, and also being the native language for all involved participants. The model-specific questions were preceded by a general introduction to the experiment, a specific explanation of each of the models, and a number of general questions with respect to the participants's background.</p><p>Subjects. The participants in this experiment were 28 experienced consultants from Pallas Athena. They were randomly assigned to the two groups used in our setup (block design). Each group was presented two models: One model that displayed modularity and the other model in the flattened version. This way each participant received two different processes and two different styles. Participation in the experiment was voluntary; the single reward offered for participation was access to the research results.</p><p>Instrumentation. The participants were provided with the process models on paper, together with the questions; an alternative would have been to show the models on a computer display, e.g. using the software that was used to create the models. However, the involved company indicated that paper is the mostly used form to interact with their clients and that in the contexts in which the two models were used, this was also the case. Recall that the original versions of the models were divided into subprocesses by their respective authors. These models could therefore be presented to the respondents as a set of A4-sized papers, one for each subprocess. The alternative, flattened versions for both models were presented on A3 paper format, which allowed for reading the various labels with a normal effort.</p><p>Prior to the actual experimentation, all questions and correct answers were discussed with and approved by the creators of the models. They validated that the question sets could be used as a proper and representative way to test someone's understanding of the models. As a next step, five graduate students from Eindhoven University of Technology were involved in a pre-test. This led to the reformulation of 10 questions to remove ambiguities and the removal of 3 questions. The latter was explicitly required to ensure that the experiment could be carried out within a reasonable time frame. For both models, 12 questions were included in the final version of the experiment. Data collection procedure. During the experiment, the subjects were asked to spend at most 25 min per model for answering its related questions. This limit was imposed to keep the time spent on the entire questionnaire under one hour and to prevent an imbalance in time spent on the two different models. Both at the start and at the end of answering a set of questions for each model, subjects were asked to write down the time to allow for time comparisons.</p><p>From the description of all the above elements it can be inferred that the experiment is balanced, which means that all factor levels are used by all participants of the experiment. In general, such an approach enables repeated measurements and the collection of more precise data: Every subject generates data for every treated factor level. As can be seen in Fig. <ref type="figure">2</ref>, we went through two runs, so this experiment displays a repeated measurement. However, in contrast to the approach in <ref type="bibr" target="#b47">[48]</ref>, two objects instead of one were used (process models A and B) to repeat the experiment in a second run. This setup enabled us to avoid the presentation of the same model content to the same group of subjects more than once, which limited learning effects.</p><p>In the next section, the results are presented for testing our hypothesis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Results</head><p>For our data analysis, well-established statistical methods and standard metrics were applied, as provided by statistical software packages STATGRAPHICS XV.II and SPSS 15.0. In this section, we will first present our main analysis results, after which we will explore various alternative explanations for these to decide on our hypothesis.</p><p>Our main analysis focuses on the comparison between the group performance in terms of correctly answered questions for the modularized version and the flattened version of each of the models. In other words, does it matter whether someone sees a modularized or a flattened version of a process model? To determine the answer to this question, we calculated for each of the subjects the percentage of correct answers given for each model. Recall that each subject saw a modular model for one process and a flattened version of a model for the other process. The averages values are shown in Table <ref type="table" target="#tab_1">1</ref>.</p><p>As can be seen from this table, the modular version generates a higher average percentage of correct answers for both models, which suggests a better understandability. To determine whether the differences are statistically significant, it is important to select and apply the proper statistical test. Therefore, we first explored for each of the models the distribution of correct answers for each of its variants, i.e. the modular and flattened version. Because the standardized skewness and standardized kurtosis are within the range of À 2 to þ2, for each model the correctly answered questions can be assumed to be normally distributed. Additionally, F-tests indicated that with a 95% confidence the standard deviations of the samples for each of the models are also the same. These two conditions justify the application of Student's t-test <ref type="bibr" target="#b50">[51]</ref>.</p><p>Application of the t-test assuming a 95% confidence level results in the following results: For model A, there is no significant difference between the modular and the flattened version in terms of the average percentage of correctly answered questions (P¼0.562).</p><p>For model B, there is a significant difference between the modular and the flattened version in terms of the average percentage of correctly answered questions (P¼0.001).</p><p>Even though these results-in particular the difference for model B-seem to support our hypothesis we must explore some alternative explanations to properly decide on its acceptance or rejection.</p><p>The most important alternative explanation for the differences between the results for model B is that -rather than whether the model is modular or notdifferences between the experimental groups are the deeper cause. We analyze this argument in detail. Recall from Section 3 that our experiment is characterized by a block design, i.e. subjects are randomly assigned to the two experimental groups. If the subjects from the two groups were to differ in a characteristic feature that influences one's ability to understand process models, then this would offer a better explanation for the noted differences. A second, alternative explanation would be that the group of respondents that produced a higher average of correct answers for model B simply spent more time on answering the questions. After all, it is reasonable to expect that more answering time fosters a higher response quality.</p><p>To determine these alternative explanations, we analyzed the characteristics as shown in Table <ref type="table" target="#tab_3">2</ref>. Each entry in the table lists an investigated factor, the considered factor levels, and the P-value resulting from a statistical test. Note that we applied a standard t-test to determine a statistical difference between the groups with respect to each factor, unless its basic requirements were not met with respect to the underlying normal distribution and variance equality. If these requirements were not met, we used the non-parametric Mann-Whitney W test to compare the medians across both groups <ref type="bibr" target="#b50">[51]</ref>. As can be seen from the P-values in this table, which are all greater than 0.05, none of the investigated factors signals a statistical difference between the groups at a 95% confidence level. Therefore, in lack of knowledge on other plausible influences, we conclude that modularity appears to have a positive connection with process understanding.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Discussion</head><p>For our discussion of the results presented in the previous section, we single out two questions:</p><p>Why does modularity matter for understanding model B, but not for A? How exactly does modularity influence the understanding of model B?</p><p>We will address these one at a time, after which we will discuss the limitations of our experiment.</p><p>Model differences. At this stage, we recall that we selected models A and B from a wide range of models by using a set of criteria (see Section 3.2). From the four models that met these, models A and B were most similar, notably with respect to the number of tasks they contain and their depth. To determine why modularity plays a bigger role in understanding model B, we carried out a further analysis of both models by using the metrics shown in Table <ref type="table" target="#tab_2">3</ref>. At the top of the table, some basic metrics are given, followed by metrics that have been proposed as indicators for process model complexity in general, and at the bottom some metrics that are explicitly proposed for assessing modular process models.</p><p>Two metrics display values that differ more than a factor 2 for the models under consideration, i.e. Subprocesses and FanIn-Out. According to <ref type="bibr" target="#b53">[54]</ref>, the relatively high value of the latter metric for model B (33.42) would suggest a poorer structuring of model B compared to model A. However, an additional test to determine whether a difference exists in model understandability between the modular version of model A and the modular version of model B does not show a higher average percentage of correct answers for the former. In lack of other empirical support for the use of this metric, the relatively high number of subprocesses <ref type="bibr" target="#b19">(20)</ref> in model B seems more relevant: It suggests that the difference between the modular and flattened version of this model is more distinct than for model A.</p><p>For the remaining factors, models A and B display quite similar characteristics, even though model B is the slightly larger one. There is no general trend that suggests that one model is considerably more complex than the other and none of the metrics display large differences-other than the number of subprocesses. So, the most reasonable answer to the question why modularity has an impact on one model but not on another is that B's original version displayed a much higher degree of modularization than model A. This may have helped subjects in understanding the model better. This would suggest that from a cognitive perspective, that model would show a better abstraction gradient and better information hiding.</p><p>The influence of modularity. In search for an explanation of how modularity increases model understanding, we reexamined the questions we used in our experiment. Recall that these questions were validated by the original creators of the model (see Section 3): The questions were considered to be to the point and representative to test someone's understanding of the model.</p><p>In the post hoc analysis of our results, we investigated the contention that by using a modular model certain types of question would be answered better than other ones. In particular, we categorized our questions as being of a local or global type. We characterized the difference such that an answer for a local question can be found within the confinements of a single subprocess in the modular version, where the examination of more subprocesses is required to answer a global question. As it turned out, model B contained 2 global questions and 10 local questions. In a comparison between the group that used the modular model and the group that used the flattened model, we found that for local questions, a significant difference exists in terms of the average percentage of correctly answered questions of model B (P¼0.002). However, too few global questions were used to determine whether there is a difference in terms of the average percentage of correctly answered questions between using the modular or the flattened version of model B. Therefore, the cognitive effect of hidden dependencies do not show up distinctly.</p><p>From this analysis, we cautiously infer that modularity may be helpful for understanding a process model because it shields the reader from unnecessary information.</p><p>Where the reader of a flattened model always sees the entire context, the reader of the modular version is confronted with a limited set of information when the proper subprocess is selected. This is especially helpful when such a reader is looking for local information. In this sense, the use of subprocess in process models may generate an effect that is also achieved by Parnas' ''information hiding'' concept in software development <ref type="bibr" target="#b16">[17]</ref>: Programmers are most effective if shielded from, rather than exposed to, the details of construction of system parts other than their own.</p><p>Whether there is also an opposite effect, i.e. that the correct answer for a global question can be easier found with a flattened model, could not be established for model B. Our suspicion is that this is not very likely; an analysis of the results for model A did not show such an effect.</p><p>Limitations. Only 28 subjects were involved in this experiment and only two process models were considered. Both aspects are threats to the internal validity of this experiment, i.e. whether our claims about the measurements are correct. At the same time, these small numbers result from our choices to (1) involve real process modelers, as well as (2) process models from industrial practice. From all the modelers working in our partner company, more than half of them participated in the experiment and it was not feasible to involve them in a larger experiment, e.g. to have them consider more models. The choices for real modelers and models clearly positively affect the external validity of our study, i.e. the potential to generalize our findings. Therefore, our experiment is another illustration of how ''internal and external validity can be negatively related'' <ref type="bibr" target="#b54">[55]</ref>.</p><p>Another aspect worth mentioning is the choice of displaying the process models on paper. It is by no means certain that findings that are similar to ours would result from an experimental setup where models are shown on a computer display. Depending on the features of the modeling tool used, ''information hiding'' could also be achieved in other ways than applying modularity. For example, the Protos tool that was used to create the models also allows to zoom in on part of the model, while other tools may be able to print sub-graphs of process models or collapsed activity groups.</p><p>A third point for consideration is that the involved models were very large. It seems likely that the effects of the use of subprocesses in smaller process models are absent or at least less prominent. This is an observation that is probably comparable to the use of modularity in other technological domains.</p><p>Fourth, it is noteworthy that the process models without subprocesses that our subjects studied are flattened versions of once modular process models. If an experienced modeler were to capture the underlying processes without being allowed or being able to use subprocesses, we cannot rule out that the resulting process models would be different from these flattened versions. If this were true, it would be interesting to evaluate the understandability of such models in comparison with modularized versions thereof. At this stage we do not have access to large, industrial process models without any subprocess usage.</p><p>Finally, the lay-out of a process model may affect the understandability of a process model, as we hypothesized before <ref type="bibr" target="#b38">[39]</ref>. As there is a limited understanding of such an effect for process models, we are restrained in properly controlling this variable. Note that we used the same modeling elements, the same top-down modeling direction, and a roughly similar breadth and width for both models to limit this effect (compare Figs. <ref type="figure">3</ref> and<ref type="figure">4</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Criteria for subprocess discovery</head><p>The results of the experiments we presented point to the usefulness of modularization to improve the understandability of a process model. An open question at this point is how to select parts of the process model for modularization? We referred to this issue in Section 2.2 as modularization selection and noted that no dedicated approaches for this issue are available. Clearly, a process analyst would benefit from a tool that assists in the discovery of subprocesses, i.e. collections of nodes that should be put together into a subprocess. As an explorative study towards the development of such a tool, we investigate criteria that are suitable for deciding whether nodes should be put together into a subprocess. We investigate three types of criteria: the block-structuredness of the subprocess, the connectedness of nodes in the subprocess, and the similarity of the labels of the nodes in the subprocess.</p><p>We explore the applicability of these criteria in a case study, in which we automatically divide model B from Fig. <ref type="figure">4</ref> into subprocesses. The motivation to select this model is that it was developed by experienced process modelers and that their modularization showed tangible benefits for understanding it (see Section 3.2). We investigate both quantitatively and qualitatively how well the result from the automatic modularization approaches the subprocess division made by the human modelers in question. We first explain the three criteria in detail, next we explain the setup of an empirical evaluation of their appropriateness and finally, we discuss the results of the evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Block-structuredness</head><p>A (sub-)process is called block-structured if it has a single entry and a single exit. For that reason, these blocks are often referred to as single entry single exit (SESE) components. The entry is the node through which the flow of control enters the block and an exit is the node through which the flow of control leaves the block. The requirement that a business process has a single entry and a single exit is quite common. For example, so-called block structured languages, such as BPEL <ref type="bibr" target="#b43">[44]</ref>, enforce this requirement by construction. It is also used as an additional requirement for other languages <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b3">4]</ref>. Therefore, we consider this requirement a good basis for detecting subprocesses.</p><p>More precisely, let G be a directed graph with a single source and a single sink. A source is a node with outgoing arcs only and a sink is a node with incoming arcs only. Let F be a connected subgraph of G. A node is a boundary node of F if and only if it is either both connected to nodes in F and to nodes outside of F, or it if it is the source or the sink of the process. A boundary node is an entry if and only if all its incoming arcs are outside of F or all its outgoing arcs are inside of F. A boundary node is an exit if and only if all its incoming arcs are inside of F or all its outgoing arcs are outside of F. F is a SESE component if and only if it has a single entry and a single exit.</p><p>A SESE component is canonical if and only if its set of edges does not overlap with the set of edges of another SESE component. Since canonical SESE components do not overlap, they are either nested or disjoint. Therefore, we can form a tree structure of canonical components. The root of the tree is the entire process, the branches of a component in the tree are the components that are nested in that component. The resulting tree is called the refined process structure tree (RPST) <ref type="bibr" target="#b55">[56,</ref><ref type="bibr" target="#b56">57]</ref>. For this first approach of automatic modularization, we consider the RPST to form the subdivision of a process into subprocesses.</p><p>For example, Fig. <ref type="figure">5</ref> shows a business process model that represents activities and control-flow relations between those activities. We abstract from the precise semantics of the notational elements. The process as a whole is a SESE component. Within the process, two SESE components can be recognized, one consisting of the vertices 3-7 and one consisting of the vertices 9-12. Both of these components again consist of two components; the first one consists of the components 3, 4, 7 and 3, 5-7; and the second one consists of the components 9, 10, 12 and 9, 11, 12. Hence, a tree structure is formed with the complete process as root, the components 3-7 and 9-12 as branches and the sub-components of those components as further branches. Each of the SESE components can be marked as a potential sub-process. Fig. <ref type="figure">6</ref> shows the RPST that is formed by these components. An algorithm for computing the RPST can be found in <ref type="bibr" target="#b55">[56,</ref><ref type="bibr" target="#b56">57]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Connectedness</head><p>A collection of nodes is connected if the nodes in the collection are more strongly connected by arcs to each other than to nodes outside this collection. Note that this definition implies that for an automatic discovery of subprocesses a parameter is involved that should express how strong the connection between nodes in a collection must be.</p><p>We use graph cluster analysis <ref type="bibr" target="#b57">[58]</ref> to establish collections of nodes in a business process that are strongly connected to each other; in cluster analysis these collections are called clusters and they will be used as subprocesses. More precisely, we cluster a process as follows. Given a graph G ¼ ðV,E,lÞ with vertices V, edges E and a function l : V-S that labels vertices and the number of clusters n 41 that we aim to discover, our clustering technique partitions the set of vertices V into n clusters C 1 , C 2 ,y,C n , such that the number of edges that cross clusters, defined as jfðn,mÞjðn,mÞ 2 E,n 2 C i ,m 2 C j ,iajgj, is minimal.</p><p>For example, if we decide to identify two subprocesses in Fig. <ref type="figure">5</ref>, vertices 3-7 would never be put into separate clusters, because that would cause a cut of at least 2 edges (while the minimum-cut consists of only 1 edge). Similarly, 9-12 would never be put into separate clusters. However, which two clusters are identified in the end is not deterministic, because as long as the nodes mentioned before are not put into separate clusters all other separations lead to a cut of 1 edge. For example, one possible separation distinguishes clusters 1-7 and 8-12. Another possible separation distinguishes clusters 1-12. These clusters can be marked as potential sub-processes.</p><p>Algorithm 1 shows the pseudo code of the algorithm that performs the clustering. It consists of four basic steps. In the first step (lines 3-10), a ''point'' is created for each vertex. The set of points is the set Ps. Each point exists in a k-dimensional space, where each dimension corresponds to a vertex (and consequently k is the number of vertices in the graph). A point has the value 1 in a dimension in case the dimension represents the vertex itself or represents another vertex to or from which there is an edge. In the second step (line 11) an initial clustering is created at random. The set of clusters, Cs, is a partition of the points in the set Ps. The number of clusters equals the parameter n. In the third and fourth step, the set of clusters is improved, until it does not change anymore. In the third step (lines 13-16) the center of each cluster is computed. The center of a cluster is the point that has, for each dimension, the mean of the values that the cluster members have. CCs is the set of cluster centers. In the fourth step (lines 17-24), the set of clusters is then recomputed, by re-assigning each point to the cluster with the center that is closest to it.</p><p>Algorithm 1 (Clustering algorithm). The third criterion we will use for the automatic modularization builds on the idea that nodes that have more similar labels can be considered to have a higher probability of belonging to the same subprocess than nodes that have very different labels. This idea is based on the assumption that subprocesses can be developed to address a certain ''topic'' in the process, like a phase or the processing of a particular information object, and that the node labels are chosen to reflect this topic. For example, it is more likely that the nodes labeled ''receive request'' and ''judge request'' belong to the same subprocess than the nodes ''receive request'' and ''bill client''. In previous work <ref type="bibr" target="#b58">[59,</ref><ref type="bibr" target="#b59">60]</ref>, we investigated several metrics to measure the similarity of two labels. In this paper we use the notion of syntactical similarity, which is based on string-edit distance. This is a rough metric that does not take complex relations between words, such as synonymy, into account. Its usage in this context can be defended because people who work on the same business process model can be expected to align their terminology and not use synonyms or homonyms. Consequently, we do not expect more advanced metrics that take synonyms and homonyms into account to make a difference in performance. Metrics that consider ''relatedness'' of labels can be expected to make a difference. We address such metrics in related work <ref type="bibr" target="#b60">[61]</ref>.</p><p>For clustering based on label similarity, control nodes are ignored, because their labels often do not provide information that can be used for clustering. For example, they can be labeled ''AND'', ''OR'' or ''XOR'' to indicate their type. This does not provide us with information to relate them to other nodes in the process model.</p><p>The string edit distance is defined as follows. Let s and t be two strings. The string edit distance of s and t, denoted ed(s,t), is the minimal number of atomic string operations needed to transform s into t or vice versa. The atomic string operations are: inserting a character, deleting a character or substituting a character for another. For example, the string edit distance between ''Verify invoice'' and ''Verification invoice'' is 7; substitute ''y'' for ''i'' and insert ''cation''.</p><p>Clustering can be used to determine clusters that are similar with respect to their labels in much the same way as it can be used to determine clusters that are well connected. This is done by minimizing the total similarity of labels between the clusters instead of the total number of edges between the clusters. More precisely, given a set of strings S, a preferred number of clusters n and a graph G ¼ ðV,E,lÞ with vertices V, edges E and a function l : V-S that labels vertices, our label clustering technique partitions the set of vertices V into n clusters C 1 , C 2 ,y,C n , such that the total similarity of vertices from different clusters, defined as S n2C i ,m2C j ,iaj 1=edðlðnÞ,lðmÞÞ, is minimal.</p><p>For example, using clustering to identify two clusters in Fig. <ref type="figure">5</ref>, forms the clusters 2 and 4-6 (in which all nodes have ''data'' and/or ''check'' in their label) and the clustesr 1, 8, 10, 11 (because 8, 10 and 11 all have ''send'' and/or ''decision'' in their label and ''receive request'' is just most similar to ''send rejection decision''). These clusters can be marked as potential sub-processes.</p><p>Note that label similarity and connectedness can also be combined easily by only considering the similarity of labels in case the corresponding vertices are connected, i.e. we minimize: S ðn,mÞ2E,n2C i ,m2C j ,iaj 1=edðlðnÞ,lðmÞÞ. We can incorporate label similarity into the clustering algorithm, by assigning rv j ¼ 1=edðlðmðiÞÞ,lðmðjÞÞÞ in line 6. As will be discussed, we will also include this hybrid form of clustering in our evaluation.</p><p>For example, using a combination of label similarity and connectedness to identify two clusters in this case would consider the disconnectedness of nodes 1 and 11 and would produce the clusters 1, 2, 4-6 and 8, 10, 11. These clusters can be marked as potential sub-processes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">Evaluation setup</head><p>We evaluated the applicability of the criteria by applying the criteria to automatically obtain a subprocess decomposition of the flattened process model B from Fig. <ref type="figure">4</ref>. We evaluated the decomposition both quantitatively and qualitatively.</p><p>For the quantitative analysis, we compared the following characteristics for the decomposition done by humans and the decomposition that was done automatically using the metrics: Subprocesses, Fan-In, Fan-Out, FanIn-Out and Depth, as they are defined in Table <ref type="table" target="#tab_2">3</ref>. The values for the other metrics do not differ for different decompositions. Therefore, we do not have to include them again. In addition to that, we compared the number of nodes per subprocess and the precision, recall, overshoot and undershoot, which we will explain in more detail.</p><p>Precision and recall are common measures in information retrieval, used to compare the performance of automated information retrieval to human information retrieval. In our case that is retrieval of subprocesses. In this context precision and recall compare the subprocesses that are found automatically to the processes that have been identified by humans, where we define a subprocess as a collection of nodes. Precision is commonly defined as the fraction of ''true positives'' (i.e. the number of subprocesses that is both found and existing according to humans, divided by the number of subprocesses that is found) and recall is defined as the fraction that represents the ''completeness'' (i.e. the number of found existing subprocesses divided by the number of existing subprocesses).</p><p>For this context, we consider the way that precision and recall are determined on the basis of exact matches as too strict. Recall that subprocesses are defined by the set of nodes of which they consist. We argue that a subprocess that is automatically retrieved, but from which some relevant nodes are missing as compared to the subprocess determined by human modelers, is not a completely missed match. For example, suppose that we consider that the set of nodes {''receive request'', ''fill out request'', ''complete request'', ''accept request'', ''file request''} constitutes a subprocess. If the set of nodes {''receive request'', ''fill out request'', ''complete request'', ''accept request''} is returned automatically, then this is not an exact match, but it does provide useful information to the process analyst that is determining the subprocesses. The process analyst can easily investigate the subprocess and manually complete it; he or she is much better off than when no information was returned at all. Therefore, we define precision and recall in terms of the number of matched nodes that constitute the subprocesses, rather than in terms of the number of (exactly) matched subprocesses.</p><p>In addition to the notions of precision and recall, we also introduce overshoot and undershoot to give a measure of how (im)perfect a subprocess match is. Overshoot is the fraction of found nodes that does no belong in a subprocess; conversely, undershoot is the fraction of nodes that do belong but that were not found. For example, in the example used above the overshoot is 0% (no nodes were found that did not belong) and the undershoot is 20% (the element ''file request'' was not found but did belong in the subprocess).</p><p>More precisely, we measure precision, recall, overshoot and undershoot as follows. Let N be the set of all nodes in a process (including its subprocesses). Let P M DPN be the set of all subprocesses that were determined manually by humans and let P A D PN be the set of all subprocesses that were determined automatically. Furthermore, let P M 2 P M be a subprocess that was determined manually by humans and let P A 2 P A be a subprocess that was determined automatically. The overlap between P A and P M is Overlap ¼ jP A \ P M j maxðjP A j,jP M jÞ We say that P A is the most relevant match for P M if its overlap with P M is greater than 0 and there is no other automatically determined subprocess P 0 A 2 P A with a higher overlap than P A . Let the function match : P M -PN return the most relevant match for each manually determined subprocess, or the empty set if no such match exist.</p><p>Precision and recall can then be defined as follows:</p><formula xml:id="formula_0">Precision ¼ S P M 2PM jP M \ matchðP M Þj S P A 2PA jP A j Recall ¼ S P M 2PM jP M \ matchðP M Þj S PM 2PM jP M j</formula><p>The F-score is the harmonic mean of the precision and the recall 2 Á precision Á recall precision þ recall Overshoot and undershoot are defined as follows:</p><formula xml:id="formula_1">Overshoot ¼ S PM 2PM jmatchðP M ÞÀP M j S P A 2PA jP A j Undershoot ¼ S PM 2PM jP M ÀmatchðP M Þj S P M 2PM jP M j</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.">Evaluation results</head><p>Table <ref type="table" target="#tab_5">4</ref> and Fig. <ref type="figure" target="#fig_3">7</ref> show the results of the evaluation. The figure shows how the subprocess division, using a certain criterion, scores in terms of each of the metrics. The ''combined'' criterion is the combination of the ''connectedness'' and ''label similarity'' criteria as explained in Section 4.3. In the ''original'' column, the scores of the original model are repeated to simplify the comparison. If a criterion is parameterized (this holds for the connectedness, label similarity and combined criteria), the results are shown for the parameter-value that leads to the highest F-score.</p><p>The F-score is the most important metric, because it provides an indication of how well a subprocess division approximates the original manual subprocess division. This metric shows that the connectedness criteria can be used best to approximate a manual division into subprocesses. Interestingly, combining information about connectedness with information about label similarity leads to slightly inferior results, although Fig. <ref type="figure" target="#fig_3">7</ref> shows that it leads to a distribution in subprocess size that is significantly better than the one produced by the connectedness criteria.</p><p>All of the metrics have high overshoot and undershoot, meaning that for each automatically determined subprocess a large number of nodes is superfluous or missing. For the connectedness criteria, on average 25% of the nodes in an automatically determined subprocess are superfluous and 57% of the nodes are missing. The block structuredness criterion relatively leads to the lowest overshoot and undershoot.</p><p>The most striking differences between the automatically and manually derived subprocesses are the number of subprocesses that are created and the sizes of those subprocesses in terms of the number of nodes. The number of automatically determined subprocesses is for all used criteria at least twice that of the number that is created manually. Fig. <ref type="figure" target="#fig_3">7</ref> shows the difference between the subprocess sizes' in more detail. For each of the criteria it shows the distribution of the subprocess' sizes, using classes of subprocesses containing between 1 and 5 nodes, 6 and 10 nodes, 11 and 15 nodes, 16 and 20 nodes, and more than 20 nodes. From the table and the figure, we can conclude that under each of the criteria one (very) large subprocess is created and many (very) small subprocesses, while in the manual subdivision mainly midsized (6-10 nodes) subprocesses exist.  From these results we can point towards (combinations of) criteria that seem attractive to be investigated further for the automated support of dividing a process into subprocesses. Connectedness is the most promising criterion, although it suffers from a high undershoot, which is caused by the fact that it produces a large number of very small subprocesses. Consequently, the results that are produced by this criterion can be improved by merging small subprocesses (i.e. subprocesses containing in the 1-5 nodes). Interestingly, label similarity does not present a good criterion for subprocess division; apparently, labels from nodes in the same subprocess are not more similar than labels from nodes in different subprocesses.</p><p>These results suggest that there is potential for supporting designers in modularizing their process models. In order to achieve nicely understandable subprocesses the effects of information hiding and additional information costs have to be balanced. Automatic techniques are suitable for proposing candidates of subprocesses for a given model. Yet, the expertise of the designer is required in the end to assess the suitability of a specific modularization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Related work</head><p>The contribution of our work can be related to three streams of research, namely, quality metrics, process model abstraction, and modular workflow execution.</p><p>The metrics and criteria that are used in this paper are related to metrics and criteria that are used in software engineering to determine properties of software modules. The dominant metrics that are used in this domain are coupling and cohesion <ref type="bibr" target="#b21">[22]</ref>. Coupling measures the extent to which a module has links with other modules and cohesion measures the extent to which elements within a module are linked. A survey of different classes of those metrics can be found in <ref type="bibr" target="#b61">[62]</ref>. Alternative metrics and criteria have been proposed, including the change dependency of module elements <ref type="bibr" target="#b62">[63]</ref> and the number and distribution of elements over the modules <ref type="bibr" target="#b63">[64]</ref>. Similar to the work described in this paper, work exists that uses clustering techniques to modularize a software system <ref type="bibr" target="#b64">[65]</ref>. The work described in this paper is strongly related to the work on modularization in the area of software engineering, and adapts it to the domain of process models. In this way, we also contribute to the area of process model metrics <ref type="bibr" target="#b65">[66]</ref>. This research area investigates factors of process model comprehension such as different measures of size and complexity <ref type="bibr" target="#b66">[67]</ref><ref type="bibr" target="#b67">[68]</ref><ref type="bibr" target="#b68">[69]</ref><ref type="bibr" target="#b69">[70]</ref>. Ideas of modularity are partially considered in these works, but only for flat process models <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b70">[71]</ref><ref type="bibr" target="#b71">[72]</ref><ref type="bibr" target="#b72">[73]</ref><ref type="bibr" target="#b73">[74]</ref><ref type="bibr" target="#b74">[75]</ref>. Our work extends this research towards a consideration of subprocesses.</p><p>Work on process model abstraction relates to our automatic modularization techniques. This work is partially inspired by techniques for matching activities <ref type="bibr" target="#b75">[76]</ref>, finding similar process models <ref type="bibr" target="#b58">[59]</ref>, and checking consistency <ref type="bibr" target="#b76">[77]</ref>. The algorithm by Polyvyanyy et al. builds on using specific criteria for aggregating activities <ref type="bibr" target="#b77">[78]</ref>, for instance, if the relative effort of an activity is below a certain threshold. By varying this threshold, the degree of aggregation can be adjusted to the needs of the user. An abstraction approach based on behavioral profiles is presented in <ref type="bibr" target="#b78">[79]</ref>. The modeler selects a set of activities that is supposed to be aggregated. Based on the control flow relations of the behavioral profile, this approach generates the control flow of the aggregated model. A different approach based on meronymy relations is presented in <ref type="bibr" target="#b60">[61]</ref>. This approach inspects meronymy relations between activity labels to find aggregation candidates. It integrates the problems of finding aggregation candidates and aggregation names. We build on these works to automatically suggest a modularization of the process.</p><p>On the execution level, modularity has been shown to be a requirement for distributing the execution of a workflow on different sites. Many of the works in this domain study performance and transactional properties of such a modular and distributed workflow process, e.g. <ref type="bibr" target="#b79">[80,</ref><ref type="bibr" target="#b80">81,</ref><ref type="bibr" target="#b7">8]</ref>. Recent work on workflows distributed via the internet <ref type="bibr" target="#b81">[82]</ref>, workflows in a grid environment <ref type="bibr" target="#b82">[83]</ref>, and workflows in the cloud <ref type="bibr" target="#b83">[84]</ref> take a similar perspective. Our research complements these works by demonstrating comprehension benefits of modularity. Yet, it is unlikely that a modular design, which is beneficial from a performance perspective, necessarily leads to better comprehension. It is an open question in how far an easily understandable design relates to good modularity in terms of execution performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion</head><p>We set out with this paper to address two research problems. The first problem related to the lack of evidence for the usefulness of modularization through the use of subprocesses in business process models. The results from the controlled experiment that we described in this paper point at the presence of positive effects of subprocesses on the understandability of the model in which they are used. However, the effect may only manifest itself in situations where subprocesses are used on an extensive scale. The most likely explanation that we can present for the additional question why modularization works is that the comprehension of local parts of a process models seems to be improved; subprocesses hide information that is not relevant.</p><p>The second problem we addressed related to the lack of theoretically grounded guidelines or dedicated approaches for modularizing a given process model into subprocesses. We compared in an explorative fashion the automated use of three distinctively different types of criteria and one hybrid form for this purpose. A criterion that minimizes the number of edges between subprocesses emerged as the most promising candidate to investigate further.</p><p>The results we presented should be considered within the limitations of the experimental and explorative nature of our research approach. Nonetheless, we find it reassuring that positive effects of subprocess usage have been established in an experiment that involved experienced process modelers. In various researches, modeler expertise has been established as a critical issue for process modeling projects <ref type="bibr" target="#b84">[85]</ref>. Petre observed in her research that expert modelers focus on relevant graphical elements, recognize patterns and disregard irrelevant information <ref type="bibr" target="#b85">[86]</ref>. In contrast, novices tend to lack reading and search strategies which result from modeling experience and extensive learning. In that sense, the value of subprocesses is arguably of even greater value in settings where people with low modeling expertise aim to make sense of process models. We aim to follow up on this conjecture in our future research.</p><p>Another line of future research relates to the further development of process modularization approaches. At this point, we identified several attractive ingredients for such an approach, in particular with respect to the use of structural characteristics of a process model. Yet, in consideration of the difficulty of finding good modular designs in other domains, it does not seem plausible that a satisfactory, fully automated approach is feasible. Therefore, it seems sensible to get a process modeler ''in the loop'' in further evaluations of automated approaches, in this way moving the focus from automated modeling towards modeling guidance. This direction would also fit the wider stream of research in the process modeling domain that aims at advanced tools to support process modelers beyond the features that ordinary modeling tools provide, e.g. <ref type="bibr" target="#b86">[87,</ref><ref type="bibr" target="#b87">88]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Contents lists available at ScienceDirect journal homepage: www.elsevier.com/locate/infosys Information Systems 0306-4379/$ -see front matter &amp; 2011 Elsevier B.V. All rights reserved. doi:10.1016/j.is.2011.03.003</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Examples of modular designs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>1m</head><label></label><figDesc>Input: G ¼ ðV,E,lÞ, :¼ f1 . . . jVjg2V for i :¼ 1 to jVj do rv :¼ R jVj for j :¼ 1 to jV j dojrv j :¼ 1, if j ¼ ior ðmðiÞ,mðjÞÞ 2 E or ðmðjÞ,mðiÞÞ 2 E end Ps :¼ Ps [ fðmðiÞ,rvÞg end Cs : PðPsÞ, such that S c2Cs c ¼ Ps, 8c1,c2 2 Cs : c1 \ c2 ¼ |, and jCsj ¼ n repeat foreach c 2 Cs do for i :¼ 1 to jVj do cc i :¼ Sðv,rvÞ2Crvi jcj CCs :¼ CCs [ fccg end Cs :¼ | foreach cc 2 CCs do c :¼ | foreach ðv,rvÞ 2 Ps do jif :(cc 0 2 CCs : dðcc 0 ,rvÞ o dðcc,rvÞ then c :¼ c [ ðv,rvÞ end Cs :¼ Cs [ fcg end until Cs is unchanged end 4.3. Label similarity</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Distribution of subprocess sizes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc>Average percentages of correct answers for the model variants.</figDesc><table><row><cell></cell><cell>Flattened (%)</cell><cell>Modular (%)</cell></row><row><cell>Model A</cell><cell>38.54</cell><cell>42.36</cell></row><row><cell>Model B</cell><cell>37.50</cell><cell>58.33</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>Complexity metrics.</figDesc><table><row><cell>Metric</cell><cell>Description</cell><cell>Source</cell><cell>Model A</cell><cell>Model B</cell></row><row><cell>TASKS</cell><cell>Total number of tasks</cell><cell>-</cell><cell>105</cell><cell>120</cell></row><row><cell>NODES</cell><cell>Total number of nodes</cell><cell>-</cell><cell>130</cell><cell>175</cell></row><row><cell>ARCS</cell><cell>Total number of arcs</cell><cell>-</cell><cell>171</cell><cell>248</cell></row><row><cell>SUBPROCESSES</cell><cell>Total number of subprocess in original model</cell><cell>-</cell><cell>9</cell><cell>2 0</cell></row><row><cell>TO</cell><cell>Average number of outgoing arcs from transitions (tasks)</cell><cell>[52]</cell><cell>0.81</cell><cell>1.03</cell></row><row><cell>PO</cell><cell>Average number of outgoing arcs from places (milestones)</cell><cell>[52]</cell><cell>3.42</cell><cell>2.24</cell></row><row><cell>CYCN</cell><cell>McCabe's cyclomatic number (adjusted for Petri nets)</cell><cell>[52]</cell><cell>43</cell><cell>75</cell></row><row><cell>CONNECTIVITY</cell><cell>Number of arcs divided by the number of nodes</cell><cell>[53]</cell><cell>1.32</cell><cell>1.42</cell></row><row><cell>DENSITY</cell><cell>Number of arcs divided by the maximal number of arcs</cell><cell>[53]</cell><cell>0.020</cell><cell>0.016</cell></row><row><cell>AVGCONDEG</cell><cell>Average number of input and output arcs per routing element</cell><cell>[53]</cell><cell>1.10</cell><cell>1.21</cell></row><row><cell>FAN-IN</cell><cell>Average number of modules calling a module</cell><cell>[54]</cell><cell>1.25</cell><cell>2.26</cell></row><row><cell>FAN-OUT</cell><cell>Average number of modules called by a module</cell><cell>[54]</cell><cell>1.5</cell><cell>2.26</cell></row><row><cell>FANIN-OUT</cell><cell>ðð Fan-In ÞÃð Fan-Out ÞÞ 2</cell><cell>[54]</cell><cell>3.63</cell><cell>33.42</cell></row><row><cell>DEPTH</cell><cell>Degree of nesting within the process model</cell><cell>[53]</cell><cell>3</cell><cell>3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2</head><label>2</label><figDesc>Group comparison.    </figDesc><table><row><cell>Factor</cell><cell>Factor levels</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4</head><label>4</label><figDesc>Results of empirical evaluation of subprocess criteria.</figDesc><table><row><cell>Metric</cell><cell>Block structuredness</cell><cell>Connectedness</cell><cell>Label similarity</cell><cell>Combined</cell><cell>Original</cell></row><row><cell>SUBPROCESSES</cell><cell>68</cell><cell>49</cell><cell>39</cell><cell>47</cell><cell>20</cell></row><row><cell>NODES PER SUBPROCESS (AVG)</cell><cell>5.12</cell><cell>4.73</cell><cell>5.95</cell><cell>4.94</cell><cell>8.75</cell></row><row><cell>NODES PER SUBPROCESS (MIN)</cell><cell>1</cell><cell>1</cell><cell>2</cell><cell>1</cell><cell>2</cell></row><row><cell>NODES PER SUBPROCESS (MAX)</cell><cell>103</cell><cell>54</cell><cell>80</cell><cell>57</cell><cell>27</cell></row><row><cell>FAN-IN</cell><cell>2.95</cell><cell>3.33</cell><cell>6.21</cell><cell>3.83</cell><cell>2.26</cell></row><row><cell>FAN-OUT</cell><cell>3.32</cell><cell>3.33</cell><cell>6.21</cell><cell>3.83</cell><cell>2.26</cell></row><row><cell>FANIN-OUT</cell><cell>96.11</cell><cell>122.45</cell><cell>1482.53</cell><cell>215.13</cell><cell>33.42</cell></row><row><cell>DEPTH</cell><cell>5</cell><cell>2</cell><cell>2</cell><cell>2</cell><cell>3</cell></row><row><cell>PRECISION</cell><cell>0.13</cell><cell>0.34</cell><cell>0.22</cell><cell>0.32</cell><cell>-</cell></row><row><cell>RECALL</cell><cell>0.5</cell><cell>0.37</cell><cell>0.25</cell><cell>0.36</cell><cell>-</cell></row><row><cell>F-SCORE</cell><cell>0.21</cell><cell>0.35</cell><cell>0.24</cell><cell>0.34</cell><cell>-</cell></row><row><cell>OVERSHOOT</cell><cell>0.19</cell><cell>0.25</cell><cell>0.68</cell><cell>0.21</cell><cell>-</cell></row><row><cell>UNDERSHOOT</cell><cell>0.4</cell><cell>0.57</cell><cell>0.72</cell><cell>0.59</cell><cell>-</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>http://www.pallas-athena.com H.A. Reijers et al. / Information Systems 36 (2011) 881-897</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>H.A. Reijers et al. / Information Systems 36 (2011) 881-897</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Managing modularity</title>
		<author>
			<persName><forename type="first">C</forename><surname>Baldwin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Harvard Business Review</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="84" to="93" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Modularity in technology and organization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Langlois</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Economic Behavior and Organization</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="19" to="37" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Tool support for verifying uml activity diagrams</title>
		<author>
			<persName><forename type="first">R</forename><surname>Eshuis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wieringa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions of Software Engineering</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="437" to="447" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Formalization and verification of eventdriven process chains</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Software Technology</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="639" to="650" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Semantics and analysis of business process models in BPMN</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Dijkman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dumas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ouyang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Software Technology</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1281" to="1294" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">YAWL: yet another workflow language</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H M</forename><surname>Hofstede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="245" to="275" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Van Hee</surname></persName>
		</author>
		<title level="m">Workflow Management: Models, Methods, and Systems</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Workflow-based applications</title>
		<author>
			<persName><forename type="first">F</forename><surname>Leymann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Roller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Systems Journal</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="102" to="123" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Petri net-based workflow modelling and analysis of the integrated manufacturing business processes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The International Journal of Advanced Manufacturing Technology</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1163" to="1172" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Sharp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mcdermott</surname></persName>
		</author>
		<title level="m">Workflow Modeling: Tools for Process Improvement and Application Development</title>
		<imprint>
			<publisher>Artech House</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Business processes-attempts to find a definition</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lindsay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Downs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lunn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Software Technology</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">15</biblScope>
			<biblScope unit="page" from="1015" to="1019" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Ould</surname></persName>
		</author>
		<title level="m">Business Processes: Modelling and Analysis for Reengineering and Improvement</title>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
		<title level="m">Business Process Modelling With Aris: A Practical Guide</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Business process modelling using diagrammatic and tabular techniques</title>
		<author>
			<persName><forename type="first">N</forename><surname>Damij</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Business Process Management Journal</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="70" to="90" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Refactoring process models in large process repositories</title>
		<author>
			<persName><forename type="first">B</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reichert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">5074</biblScope>
			<biblScope unit="page" from="124" to="139" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Modularity in process models: review and effects</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<editor>BPM, Springer</editor>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="20" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">On the criteria for decomposing systems into modules</title>
		<author>
			<persName><forename type="first">D</forename><surname>Parnas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1053" to="1058" />
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><surname>Alexander</surname></persName>
		</author>
		<title level="m">Notes on the Synthesis of Form</title>
		<imprint>
			<publisher>Harvard University Press</publisher>
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">On the deep structure of information systems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Weber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems Journal</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="203" to="223" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Weber</surname></persName>
		</author>
		<title level="m">Ontological Foundations of Information Systems, Coopers &amp; Lybrand and the Accounting Association of Australia and New Zealand</title>
		<meeting><address><addrLine>Melbourne, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><surname>Yourdon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Constantine</surname></persName>
		</author>
		<title level="m">Structured Design</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A metrics suite for object oriented design</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chidamber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kemerer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="476" to="493" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">How good are these uml diagrams? An empirical test of the Wand and Weber good decomposition model</title>
		<author>
			<persName><forename type="first">A</forename><surname>Burton-Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Meso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd International Conference on Information Systems (ICIS)</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Applegate</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><surname>Galliers</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Degross</surname></persName>
		</editor>
		<meeting>the 23rd International Conference on Information Systems (ICIS)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="101" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An algebra for data flow diagram process decomposition</title>
		<author>
			<persName><forename type="first">M</forename><surname>Adler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="169" to="183" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Synthesis and decomposition of processes in organizations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Basu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Blanning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems Research</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="337" to="355" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Change patterns and change support features in process-aware information systems</title>
		<author>
			<persName><forename type="first">B</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rinderle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reichert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th International Conference on Advanced Information Systems Engineering, CAiSE</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Krogstie</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Opdahl</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Sindre</surname></persName>
		</editor>
		<meeting>the 19th International Conference on Advanced Information Systems Engineering, CAiSE<address><addrLine>Trondheim, Norway</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007-06-11">2007. June 11-15, 2007. 2007</date>
			<biblScope unit="volume">4495</biblScope>
			<biblScope unit="page" from="574" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Inheritance of behavior</title>
		<author>
			<persName><forename type="first">T</forename><surname>Basten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Logic and Algebraic Programming</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="47" to="145" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Tools for inventing organizations: toward a handbook for organizational processes</title>
		<author>
			<persName><forename type="first">T</forename><surname>Malone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Crowston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Pentland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="425" to="443" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Free-choice Petri nets</title>
		<author>
			<persName><forename type="first">J</forename><surname>Desel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Esparza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Cambridge Tracts in Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<date type="published" when="1995">1995</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Analyzing process models using graph reduction techniques</title>
		<author>
			<persName><forename type="first">W</forename><surname>Sadiq</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Orlowska</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="117" to="134" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Reduction rules for yawl workflow nets with cancellation regions and or-joins</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wynn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">M W</forename><surname>Verbeek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H M</forename><surname>Ter Hofstede</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Edmond</surname></persName>
		</author>
		<idno>BPM-06-24</idno>
		<imprint>
			<date type="published" when="2006">2006</date>
			<pubPlace>BPMcenter.org</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">BPMCenter Report</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">MOBILE: a modular workflow model and architecture</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jablonski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Working Conference on Dynamic Modelling and Information Systems</title>
		<meeting>the International Working Conference on Dynamic Modelling and Information Systems</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><surname>Leymann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Roller</surname></persName>
		</author>
		<title level="m">Production Workflow-Concepts and Techniques</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Application and Theory of Petri Nets</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Verification of workflow nets</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Aze ´ma</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Balbo</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1248</biblScope>
			<biblScope unit="page" from="407" to="426" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Product flow, breadth and complexity of business processes: an empirical study of 15 business processes in three organizations</title>
		<author>
			<persName><forename type="first">N</forename><surname>Kock</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Business Process Re-engineering &amp; Management Journal</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="8" to="22" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Understanding the occurrence of errors in process models based on metrics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OTM Conference Proceedings, Part I</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Meersman</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Z</forename><surname>Tari</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4803</biblScope>
			<biblScope unit="page" from="113" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Workflows make objects really useful</title>
		<author>
			<persName><forename type="first">F</forename><surname>Leymann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EMISA Forum</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="90" to="99" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Faster and more focused control-flow analysis for business process models through sese decomposition</title>
		<author>
			<persName><forename type="first">J</forename><surname>Vanhatalo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ölzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Leymann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Conference on Service-Oriented Computing-ICSOC 2007</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Kr Ämer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K.-J</forename><surname>Lin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Narasimhan</surname></persName>
		</editor>
		<meeting>the 5th International Conference on Service-Oriented Computing-ICSOC 2007<address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">September 17-20, 2007. 2007</date>
			<biblScope unit="volume">4749</biblScope>
			<biblScope unit="page" from="43" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">What makes process models understandable?</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Business Process Management (BPM 2007)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Alonso</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Dadam</surname></persName>
		</editor>
		<editor>
			<persName><surname>Rosemann</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4714</biblScope>
			<biblScope unit="page" from="48" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Evaluating workflow process designs using cohesion and coupling metrics</title>
		<author>
			<persName><forename type="first">I</forename><surname>Vanderfeesten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers in Industry</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="420" to="437" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Usability analysis of visual programming environments: a &apos;cognitive dimensions&apos; framework</title>
		<author>
			<persName><forename type="first">T</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Petre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages and Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="131" to="174" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Conditional program statements and their comprehensibility to professional programmers</title>
		<author>
			<persName><forename type="first">T</forename><surname>Green</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Occupational Psychology</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="93" to="109" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Cognitive fit: a theory-based analysis of the graphs versus tables literaturen</title>
		<author>
			<persName><forename type="first">I</forename><surname>Vessey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Decision Sciences</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="219" to="240" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Business process execution language for web services, version 1.1</title>
		<author>
			<persName><forename type="first">T</forename><surname>Andrews</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IBM, Siebel Systems, SAP, BEA</title>
		<imprint>
			<publisher>Microsoft</publisher>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<idno>dtc/06-02-01</idno>
		<title level="m">Business Process Modeling Notation (BPMN) Specification, Final Adopted Specification</title>
		<imprint>
			<date type="published" when="2006-02">February 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group ; Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><surname>Juristo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Moreno</surname></persName>
		</author>
		<title level="m">Basics of Software Engineering Experimentation</title>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Kontrollierte Experimente in der Softwaretechnik: Potenzial und Methodik</title>
		<author>
			<persName><forename type="first">L</forename><surname>Prechelt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Workflow management versus case handling: results from a controlled software experiment</title>
		<author>
			<persName><forename type="first">B</forename><surname>Mutschler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reichert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2008 ACM Symposium on Applied Computing</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Liebrock</surname></persName>
		</editor>
		<meeting>the 2008 ACM Symposium on Applied Computing</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">I</biblScope>
			<biblScope unit="page" from="82" to="89" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Poseidon: a framework to assist web process design based on business cases</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Cooperative Information Systems</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="23" to="55" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">M W</forename><surname>Verbeek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Van Hattem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>De Munk</surname></persName>
		</author>
		<title level="m">Proceedings of the 24th International Conference on Application and Theory of Petri Nets</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Ciardo</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Darondeau</surname></persName>
		</editor>
		<meeting>the 24th International Conference on Application and Theory of Petri Nets</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="465" to="474" />
		</imprint>
	</monogr>
	<note>Protos 7.0: simulation made accessible</note>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title level="m" type="main">Handbook of Parametric and Nonparametric Statistical Procedures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sheskin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">An empirical study on complexity metrics of Petri nets</title>
		<author>
			<persName><forename type="first">G</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yoon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Microelectronics and Reliability</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1215" to="1221" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">Detection and prediction of errors in EPC business process models</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
			<pubPlace>Vienna, Austria</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Vienna University of Economics and Business Administration</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Complexity metrics for business process models</title>
		<author>
			<persName><forename type="first">R</forename><surname>Laue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gruhn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">9th International Conference on Business Information Systems (BIS 2006)</title>
		<title level="s">Lecture Notes in Informatics</title>
		<editor>
			<persName><forename type="first">W</forename><surname>Abramowicz</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><forename type="middle">C</forename><surname>Mayr</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">85</biblScope>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<monogr>
		<title level="m" type="main">Experimental and Quasi-Experimental Designs for Generalized Causal Inference</title>
		<author>
			<persName><forename type="first">T</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Shadish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Campbell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<pubPlace>Houghton Mifflin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">The refined process structure tree</title>
		<author>
			<persName><forename type="first">J</forename><surname>Vanhatalo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ölzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Koehler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of BPM 2008</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>BPM 2008</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5240</biblScope>
			<biblScope unit="page" from="100" to="115" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">The refined process structure tree</title>
		<author>
			<persName><forename type="first">J</forename><surname>Vanhatalo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ölzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Koehler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data &amp; Knowledge Engineering</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="793" to="818" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Graph clustering-survey</title>
		<author>
			<persName><forename type="first">S</forename><surname>Schaeffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Science Review</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="27" to="64" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Similarity of business process models: metrics and evaluation</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Dijkman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dumas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Van Dongen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="498" to="516" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Measuring similarity between business process models</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">F</forename><surname>Van Dongen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Dijkman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th International Conference on Advanced Information Systems Engineering (CAiSE)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>the 20th International Conference on Advanced Information Systems Engineering (CAiSE)</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5074</biblScope>
			<biblScope unit="page" from="450" to="464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Meronymy-based aggregation of activities in business process models</title>
		<author>
			<persName><forename type="first">S</forename><surname>Smirnov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Dijkman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Weske</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conceptual Modeling-ER 2010</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<monogr>
		<title level="m" type="main">Coupling and cohesion in objectoriented systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Eder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kappel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schrefl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
		<respStmt>
			<orgName>University of Klagenfurt</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Coupling and cohesion measures for evaluation of component reusability</title>
		<author>
			<persName><forename type="first">G</forename><surname>Gui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Scott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2006 International Workshop on Mining Software Repositories (MSR&apos;06)</title>
		<meeting>the 2006 International Workshop on Mining Software Repositories (MSR&apos;06)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="18" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Coupling and cohesion as modularization drivers: are we being over-persuaded?</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">B</forename><surname>Abreu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Goulao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the European Conference on Software Maintenance and Reengineering</title>
		<meeting>the European Conference on Software Maintenance and Reengineering</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="47" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">A coupling-guided cluster analysis approach to reengineer the modularity of object-oriented systems</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">B</forename><surname>Abreu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sousa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the European Conference on Software Maintenance and Reengineering</title>
		<meeting>the European Conference on Software Maintenance and Reengineering</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="13" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Metrics for Process Models: Empirical Foundations of Verification, Error Prediction, and Guidelines for Correctness</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Business Information Processing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<date type="published" when="2008">2008</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">An empirical study on the complexity metrics of Petri nets</title>
		<author>
			<persName><forename type="first">G</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Yoon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Microelectronics and Reliability</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="323" to="329" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Redesigning reengineering through measurementdriven inference</title>
		<author>
			<persName><forename type="first">M</forename><surname>Nissen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MIS Quarterly</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="509" to="534" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Measuring attributes of concurrent software specifications in Petri nets</title>
		<author>
			<persName><forename type="first">S</forename><surname>Morasca</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">METRICS &apos;99: Proceedings of the 6th International Symposium on Software Metrics</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="100" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Process control-flow complexity metric: an empirical validation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Conference on Services Computing (IEEE SCC 06</title>
		<meeting>IEEE International Conference on Services Computing (IEEE SCC 06<address><addrLine>Chicago, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2006">September 18-22. 2006</date>
			<biblScope unit="page" from="167" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">A family of experiments to validate metrics for software process models</title>
		<author>
			<persName><forename type="first">G</forename><surname>Canfora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Garcı ´a</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Piattini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ruiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Visaggio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems and Software</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="113" to="129" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">An exploratory experiment to validate measures for business process models</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Aguilar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Garcı ´a</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ruiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Piattini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First International Conference on Research Challenges in Information Science (RCIS)</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">On a quest for good process models: the cross-connectivity metric</title>
		<author>
			<persName><forename type="first">I</forename><surname>Vanderfeesten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">5074</biblScope>
			<biblScope unit="page" from="480" to="494" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lassen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Translating unstructured workflow processes to readable BPEL: theory and implementation</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="131" to="159" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Detection and prediction of errors in EPCs of the SAP reference model</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Verbeek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Dongen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Neumann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Knowledge &amp; Engineering</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="312" to="329" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">The icop framework: identification of correspondences between process models</title>
		<author>
			<persName><forename type="first">M</forename><surname>Weidlich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Dijkman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd International Conference on Advanced Information Systems Engineering, CAiSE 2010, Hammamet</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Pernici</surname></persName>
		</editor>
		<meeting>the 22nd International Conference on Advanced Information Systems Engineering, CAiSE 2010, Hammamet<address><addrLine>Tunisia</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010-09">June 7-9. 2010</date>
			<biblScope unit="volume">6051</biblScope>
			<biblScope unit="page" from="483" to="498" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Efficient consistency measurement based on behavioural profiles of process models</title>
		<author>
			<persName><forename type="first">M</forename><surname>Weidlich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Weske</surname></persName>
		</author>
		<idno type="DOI">10.1109/TSE.2010.96</idno>
		<ptr target="http://doi.ieeecomputersociety.org/10.1109/TSE.2010.96Stoappear" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Polyvyanyy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Smirnov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Weske</surname></persName>
		</author>
		<title level="m">Proceedings of the 12th International Conference on Enterprise Distributed Object Computing (EDOC)</title>
		<meeting>the 12th International Conference on Enterprise Distributed Object Computing (EDOC)</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
	<note>Process model abstraction: a slider approach</note>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Business process model abstraction based on behavioral profiles</title>
		<author>
			<persName><forename type="first">S</forename><surname>Smirnov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Weidlich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mendling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Conference on Service Oriented Computing (ICSOC)</title>
		<meeting>the 8th International Conference on Service Oriented Computing (ICSOC)<address><addrLine>San Francisco, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<title level="m" type="main">A general framework for the execution of heterogenous programs in workflow management systems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jablonski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Heinl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bussler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>CoopIS</publisher>
			<biblScope unit="page" from="104" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Reusability and modularity in transactional workflows</title>
		<author>
			<persName><forename type="first">J</forename><surname>Puustj Ärvi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tirri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Veijalainen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">2/3</biblScope>
			<biblScope unit="page" from="101" to="120" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Web-scale workflow: integrating distributed services</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Huhns</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="55" to="59" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Managing faults for distributed workflows over grids</title>
		<author>
			<persName><forename type="first">O</forename><surname>Ezenwoye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Sadjadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kalayci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Fong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="84" to="88" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Polyphony: a workflow orchestration framework for cloud computing</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Shams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Crockett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Norris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing</title>
		<meeting><address><addrLine>Melbourne, Victoria, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-05-20">CCGrid 2010, 17-20 May 2010. 2010</date>
			<biblScope unit="page" from="606" to="611" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Factors and measures of business process modelling: model building through a multiple case study</title>
		<author>
			<persName><forename type="first">W</forename><surname>Bandara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Information Systems</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="347" to="360" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">Why looking isn&apos;t always seeing: readership skills and graphical programming: cognition and software development</title>
		<author>
			<persName><forename type="first">M</forename><surname>Petre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="33" to="44" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Configurable workflow models</title>
		<author>
			<persName><forename type="first">F</forename><surname>Gottschalk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jansen-Vullers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Rosa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Cooperative Information Systems</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="177" to="221" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Social software for business process modeling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Koschmider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Reijers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Information Technology</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="308" to="322" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
