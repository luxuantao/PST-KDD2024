<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Balancing Traffic Load in Wireless Networks with Curveball Routing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Lucian</forename><surname>Popa</surname></persName>
							<email>popa@cs.berkeley.edu</email>
						</author>
						<author>
							<persName><forename type="first">U</forename><forename type="middle">C</forename><surname>Berkeley</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Afshin</forename><surname>Rostamizadeh</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Richard</forename><forename type="middle">M</forename><surname>Karp</surname></persName>
							<email>karp@cs.berkeley.edu</email>
						</author>
						<author>
							<persName><forename type="first">Christos</forename><surname>Papadimitriou</surname></persName>
							<email>christos@cs.berkeley.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">New York University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Ion Stoica</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Balancing Traffic Load in Wireless Networks with Curveball Routing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">54D1FF182FB2DCF1949A7310FC61C67E</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.2 [Computer-Communication Networks]: Network Protocols -routing protocols Algorithms</term>
					<term>Design</term>
					<term>Experimentation</term>
					<term>Theory Wireless Networks</term>
					<term>Load Balancing</term>
					<term>Geographic Routing</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We address the problem of balancing the traffic load in multi-hop wireless networks. We consider a point-to-point communicating network with a uniform distribution of source-sink pairs. When routing along shortest paths, the nodes that are centrally located forward a disproportionate amount of traffic. This translates into increased congestion and energy consumption. However, the maximum load can be decreased if the packets follow curved paths. We show that the optimum such routing scheme can be expressed in terms of geometric optics and computed by linear programming. We then propose a practical solution, which we call Curveball Routing that achieves results not much worse than the optimum.</p><p>We evaluate our solution at three levels of fidelity: a Java high-level simulator, the ns2 simulator, and the Intel Mirage Sensor Network Testbed. Simulation results using the high-level simulator show that our solution successfully avoids the crowded center of the network, and reduces the maximum load by up to 40%. At the same time, the increase of the expected path length is small, i.e., only 8% on average. Simulation results using the ns2 simulator show that our solution can increase throughput on moderately loaded networks by up to 15%, while testbed results show a reduction in peak message load by up to 25%. Our prototype suggests that our solution is easily deployable.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Consider a multi-hop wireless network with uniform point-to-point communication employing shortest path routing. As observed in previous work <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b22">25,</ref><ref type="bibr" target="#b24">27]</ref>, under these assumptions the center of the network becomes "crowded", as more paths go through the center than through the periphery of the network. This phenomenon, which we call the crowded center effect, implies increased congestion and energy consumption for the nodes near the center. In this paper we analyze this problem theoretically, and propose and test a practical solution to it.</p><p>Although the point-to-point communication pattern has been shown not to scale well with respect to throughput <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref> it is important for many applications such as wireless mesh networks <ref type="bibr">[24]</ref>, in-network storage and querying <ref type="bibr" target="#b21">[23,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b16">17]</ref> or tracking <ref type="bibr" target="#b7">[8]</ref>. Also, point-to-point communication scales better to thousands of nodes than communicating via a rooted tree. In this work, we mostly focus on the crowded center problem in a specialized and simplified setting (uniform deployment of sensors on a disc with point-to-point communication), which is a useful first step in understanding and solving the problem in its generality.</p><p>The contributions of this paper are twofold: First, we present a theoretical approach to assessing and solving the problem. We derive an exact formula for a node's load -that is, the probability that it forwards messages on behalf of a random source destination pair -as a function of its distance from the center, when routing on shortest paths between points of a disc. This way we establish quantitatively the crowded center effect as a nearly-quadratic function peaked at the center. We then develop an approach inspired by geometric optics and based on linear programming duality that is guaranteed to find the paths (not straight-line paths, but instead shortest paths in a distorted metric, which we compute) that minimize the maximum load. We also implement approximation algorithms for finding these paths and routing along them. Unfortunately, the optimal trajectories found this way are not expressible by closed form formulas, and as a consequence this approach may not lead to a practical solution.</p><p>Our second contribution is a practical solution whose performance is very close to the optimum. Our algorithm, which we call Curveball Routing, works on a modified metric, obtained by projecting all nodes on a sphere. We then route greedily on the new, virtual coordinates. This algorithm is very simple, performs well in practice, and has similar computational complexity to the two-dimensional greedy geographical routing. We test our solution both by simulation and on a wireless testbed.</p><p>Throughout this paper we assume that nodes have location information and use geographical routing, a case which has some important advantages such as mathematical simplicity, scalability, and low overhead. This paper is organized as follows. In Section 2 we present the crowded center problem and provide an exact formula for the load distribution. In Section 3 we present a theoretical approach for solving the crowded center problem. In Section 4 we present Curveball Routing, a practical heuristic approach, while in Sections 5, 6, and 7 we presents high level simulations, ns2 <ref type="bibr" target="#b10">[11]</ref> simulation results, and performance results from a real deployment. Related work is presented in Section 8, while we present our conclusions in Section 9.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE CROWDED CENTER EFFECT</head><p>In this section we describe our assumptions on the communication model, and capture the crowded center effect by an explicit formula for the load of a node as a function of its distance from the network center.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Communication Model</head><p>We assume a set of uniformly distributed nodes within a specified planar geometric shape, assumed to be a disc of radius R. Nodes can communicate with their neighbors situated within a fixed communication range (the wireless unit disc model). Nodes are aware of their own location as well as their neighbors' locations. In greedy routing (also known as geographic routing) the forwarding layer sends a packet for a destination node with location L to its neighbor that is closest to L. The locations used for routing can be physical locations (e.g. by GPS) or virtual positions such as NoGeo <ref type="bibr" target="#b3">[4]</ref>.</p><p>We also assume a point-to-point communication pattern where the endpoints of each transmission are selected uniformly at random from the nodes of the network. Finally, we are not concerned with greedy fallback modes such as perimeter routing <ref type="bibr" target="#b19">[20]</ref> or CLDP <ref type="bibr" target="#b20">[21]</ref>. These are orthogonal to the following discussion and do not qualitatively affect it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Load Probability Density</head><p>In random point-to-point transmissions, different nodes in the network will forward packets for flows pertaining to different communication endpoints. The load probability of a node is the probability that it participates (either as endpoint or intermediary) in a communication between two randomly selected nodes. The determining factor for a node's load probability is its position inside the network: intuitively, the "center" of the network will take part in more communications than the "periphery" of the network and thus its load probability will be higher. This leads to congestion and more energy spent in the central region than at the edge nodes. We quantify this for the case of a disc-shaped network.</p><p>We approach the analysis of greedy routing by looking at the network as a continuous space (a disc) rather than consisting of discrete nodes. This is consistent with our view of a high number of uniformly deployed nodes. Hence we now have a load probability density instead of a finite set of values. Greedy routing follows a zig-zag path from source to destination; as the network becomes more and more dense, these zig-zag paths get closer and closer to straight lines; accordingly, we assume that the communication between two points on a continuous disc proceeds by a straight line. This continuous model should predict the statistical behavior of large discrete networks (and this is confirmed by our simulations). Note that we implicitly assumed the communication range to be much smaller than the network diameter.</p><p>Theorem 1 gives a formula for the load probability density under the continuous model of greedy routing. The intuition behind the desired formula is this: Consider a node and a greedy path going through it. Intuitively, the probability that this node will participate in a communication along this greedy path is proportional to the product of the number of nodes on the path on either side of the node. Going now to the continuous case, the probability that a node participates in some straight-line path along a chord of the disc going through it is related to the product of the lengths of the segments of the chord on each side of the point. For a disc, this product is precisely R 2 -r 2 , where R is the radius of the disc and r is the distance from the point to the center of the disc. However, this intuitive calculation is not exact, because it underestimates longerrange communication; the precise formula is slightly different. </p><formula xml:id="formula_0">θ θ π ∫ ⋅ ⋅ - ⋅ - 2 0 2 2 2 2 2 ) ( cos ) ( d r R r R</formula><p>Proof: Due to space constraints we omit the proof, which is based on a rather elaborate calculation and a coordinate transformation for computing integrals on stripes going through a small disc of radius ε centered at the desired point. For the proof see <ref type="bibr">[22]</ref>. ■</p><p>The integral occurring in Theorem 1 is an incomplete elliptic integral of the second kind, which is not expressible in closed form. Fig. <ref type="figure">2</ref> shows the shape of the formula, normalized to be 1 at the center. A more elaborate calculation was independently performed in <ref type="bibr" target="#b23">[26]</ref> for the density of nodes following random polygonal trajectories within a region. Instantiating the computations of <ref type="bibr" target="#b23">[26]</ref> to a disc of radius R we obtain a formula identical to that given by Theorem 1, although the proof is different. Note further that the authors of <ref type="bibr" target="#b22">[25]</ref> also propose a formula for a similar load measure, resulting in a function proportional to (R 2 -r 2 ) 2 . As we will show, our formula predicts better the load for large networks.</p><p>The crowded center effect is now clear: nodes closer to the center route a lot more messages than nodes at the perimeter. In the rest of this paper we show that one can relieve the central congestion without creating any new hotspots by using curved paths that avoid the center. However, curved paths must come at the expense of increased total network load, since shortest (straight-line) paths do minimize the total load. What is the smallest maximum load that can be achieved by curved paths? The average of the formula in Theorem 1 over all points of the disc is 0.45. It is easy to see that this is an unachievable lower bound for the maximum load, because the maximum cannot be smaller than the average, and every algorithm except shortest path routing has an average load higher than that of shortest path routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">COMPUTING THE OPTIMUM</head><p>In this section we formalize the problem of minimizing the maximum load and show a rigorous connection between the optimal routing paths and the curved paths followed by light in a medium where the index of refraction varies as a function of the distance from the center. We also outline algorithms for approximating the optimal paths and routing on them. We focus on a disc shaped network; however, we work in the more general framework in which the communication pairs are drawn from any rotationally symmetric distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Problem Formulation and Analysis</head><p>A probability density function f(p,q) over pairs of points in the 2dimensional unit disc is rotationally symmetric if it depends only on the distances of p and q from the origin and the central angle between them. Intuitively, f(p,q) is the probability that there is a communication between points p and q. For each unordered pair of points (p,q) we are to specify a flow between p and q; i.e., a probability distribution over a finite set of continuous paths between p and q.</p><p>Given such flows, the load in any region A within the unit disc is the expectation of X(A)/Area(A) where X(A) is a random variable defined by the following experiment:</p><p>1. Draw a pair (p,q) from the probability distribution defined by the density function f; 2. Draw a path from the probability distribution of paths between p and q; 3. X(A) is the length of the intersection of the chosen path with region A. The load at a point p is the limit of the loads of an infinite sequence of nested neighborhoods whose intersection is the point p. By the Radon-Nikodym Theorem of measure theory, this limit is the same for all such nested sequences of neighborhoods. Our problem is to specify the flows so as to minimize the maximum load in the disc.</p><p>Theorem 2 Let u(r) be a nonnegative continuous function for r ∈ [0,1]. Let the cost of any path be the integral of the function u(r) over the path. The optimal solution (flow for every pair of points) for minimizing the maximum load is characterized by such a function u(r) and the following two properties:</p><p>1. If a path is included in the flow between p and q then it is of minimum cost among paths between p and q; 2. If z is the maximum load over all points in the disc, then, for all r such that u(r) &gt; 0, the load is equal to z. Proof: A sketch of the proof can be found in Appendix A.■ To understand the theorem, think of the quantity u(r) as the cost per unit length of a path at a point whose distance from the center is r. This establishes a link with geometric optics, where the index of refraction of a medium is defined as the speed of light in a vacuum divided by the speed of light in the medium. Fermat's Least-Action Principle states that, given the index of refraction as a function of position, a ray of light between a source and a detector follows a minimum-time path.</p><p>Thus our problem is isomorphic to the following problem in optics: given a rotationally symmetric probability distribution over the locations of source-destination pairs in a disc, choose the index of refraction as a function of radius to minimize the maximum expected intensity of light.</p><p>There is an alternative economic interpretation of our result: Imagine a large disc-shaped city in which authorities have imposed a mini-toll for any vehicle passing by any intersection; the toll depends on the intersection. Drivers will be expected to follow paths that are cheapest under the toll regime. Our theorem essentially states that, in order to minimize the maximum congestion, the tolls should be a function of the distance of the city center; and any intersection which is not congested should be free.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computing Trajectories given u(r)</head><p>Given a function u(r), define a geodesic between p and q as a path between the two points that minimizes the path integral of u(r). Using polar coordinates, a path between p = (r(p),θ(p)) and q = (r(q),θ (q)) is specified by a continuous function r(θ), defined for θ in the interval [θ(p), θ(q)]. The path integral is equal to: <ref type="bibr" target="#b0">1]</ref>, where r = r(θ). The Euler-Lagrange differential equation of the Calculus of Variations specifies in this case that a geodesic must satisfy the differential equation:</p><formula xml:id="formula_1">∫ + q p d d dr r r u θ θ θ θ 2 2 ) / ( ) ( [eq 3.</formula><formula xml:id="formula_2">1 / ) ( / 2 2 2 - = c r r u r d dr θ [eq. 3.2].</formula><p>Here c is a free parameter, and the solution is defined only for c ≤ r • u(r).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Approximating the optimal cost function</head><p>We have implemented an algorithm to approximate the optimal cost function u(r). We use a discrete network and associate costs to nodes. The cost of a link joining two nodes is the product of its length, and the average cost of its endpoints. We start with equal costs and at each step we compute minimal cost paths between nodes using Dijkstra's algorithm. We then compute the load of each node as the number of node-to-node shortest paths that contain it; we then modify node costs by decreasing those that have smaller than average loads, and increasing those with higher than average load (the reader familiar with linear programming will recognize this as a dual modification step of a primal-dual algorithm; the linear program is given in Appendix A). We repeat this process until the load converges to a common value at all nodes within an acceptable tolerance. Finally, we use polynomial interpolation to determine a function u(r) that best matches the discrete set of node costs. Our algorithm converges to a function that is approximated well by the following polynomial:</p><formula xml:id="formula_3">u(r) = 1.8*r 3 -3.1*r 2 + 2.3</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Routing on Optimal Paths</head><p>Unfortunately, we cannot compute a closed form formula for the optimal trajectories because the path integral can be symbolically computed only for a few particular cost functions. However, we can still route along approximately optimal paths by computing numerical approximations at nodes in the network. This is done by finding a solution to eq. 3.2. More exactly, it can be shown that optimal trajectories can at most have a minimum radius point between the two endpoints, and thus we need to find c and r min that satisfy</p><formula xml:id="formula_4">f r r c r r u r dr θ = - ∫ max min 2 2 2 1 / ) ( / [eq 3.3]</formula><p>, where θ f is the central angle between the start and end nodes and r max the maximum between the start and end radii. To compute the constant c we designed an adaptive search algorithm, using as feedback the error in estimating θ f. If the minimum radius along the optimal trajectory r min is not at one of the endpoints, the integral in eq. 3.3 is replaced with the sum of two integrals, one from r min to r start and one from r min to r end . It can be shown that c = r min u(r min ), and we compute r min for the current c by solving this equation. After matching eq. 3.3 by approximating c and r min we then find θ d dr / and compute the absolute direction that the packet should take.</p><p>Having the instantaneous direction, we can forward the packet towards the neighbor that deviates least from it. This approach would result in a small deviation from the geometric trajectory but in a significant overhead in the number of hops and thus in load. To approximate optimal paths with a smaller number of hops, we routed the packet to the neighbor that made most geometric progress towards a point projected on the instantaneous direction at the radio range distance. We implemented this algorithm and we present simulation results in Section 5.</p><p>Nevertheless, this approach to routing is not really practical since it involves a search algorithm with numerical integrals at least at the first hop but most likely at some intermediary nodes too as the trajectory might deviate during routing.</p><p>We also envisioned an algorithm that allows routing on optimal trajectories without requiring an integral calculation. The algorithm splits the disc into discrete rings and restricts attention to piecewise-linear trajectories that change direction only at ring boundaries. This approach does not need to compute integrals or roots for u(r)•r, but uses large pre-computed tables and gives a rougher approximation. Due to lack of space we do not elaborate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">CURVEBALL ROUTING</head><p>The algorithms in the previous section are of theoretical importance, showing that we can approximate the minimum max load, but, as we have mentioned, they require either large pre-computed tables or excessive computational overhead. In this section we present an alternative heuristic solution that achieves comparable results in a much simpler way.</p><p>Imagine that nodes are deployed on the surface of a three dimensional sphere instead of a planar shape. If nodes communicate only on the sphere surface and communication is uniform, the crowded center effect vanishes due to symmetry (there is no such thing as a "center" on the sphere surface). Thus, a natural idea is to map the two-dimensional disc on a sphere and route greedily on those virtual coordinates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The Sphere Mapping</head><p>It is obvious that we cannot construct a distance-preserving mapping from the disc onto the sphere. However, we shall now propose a heuristic mapping yielding excellent results. Fig. <ref type="figure">1</ref> shows how we do the mapping. The sphere is intersected at its equator by the plane where the network is situated. We pick a point on the polar axis, and connect it to all the nodes in the network. In our experiments we used the pole as the projection point (other projection points gave similar or worse results). The point where each line intersects the sphere will be the new (virtual) coordinate of that node. Note that this mapping preserves topological neighborhoods, thus a node's neighbors will still be found in its vicinity and paths will remain continuous.</p><p>For a better mapping, we can first apply a power function to the initial coordinates, i.e., a function that leaves the angle unchanged and replaces the radius r of each point by r α for a constant α, and projects these modified coordinates on the sphere.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Routing</head><p>In Curveball Routing we route greedily to the neighboring node that yields the most geometric progress towards the destination in the spherical coordinates. If routing on these 3D coordinates fails, we fall back to 2D greedy routing. If this fails, any of the existing fallback methods (e.g. perimeter <ref type="bibr" target="#b19">[20]</ref>, CLDP <ref type="bibr" target="#b20">[21]</ref>) can be applied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Mapping Limitations</head><p>The described mapping has some undesired properties. First, it is not uniform: nodes situated at the bottom of the sphere in Fig. <ref type="figure">1</ref> will be sparser, and the mapping becomes denser as we advance towards the sphere top. This can partly be improved by applying an initial modification to the coordinates such as the power transformation explained above.</p><p>Second, the sphere will not be completely covered; there will be an upper cap with no points mapped to it. We can decrease the unoccupied region by reducing the radius of the sphere and/or lowering the sphere so that the network plane is no longer equatorial. However, one less desirable effect of trying to cover more of the sphere is that more trajectories will attempt to traverse the boundary of the upper cap, making it a highly loaded area. We call this the "edge effect". On the other hand, this boundary is physically longer and, moreover, would get almost no traffic on a hemisphere mapping. We explore this tradeoff more in Section 5.</p><p>Finally, the best mapping parameters (i.e. sphere radius and power α) are somewhat dependent on the network (shape, number of nodes, radio range) as we will see in Section 5, where we also explore the performance of Curveball Routing on regions other than the disc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Discussion of the method</head><p>An important characteristic of Curveball Routing is that it is easy to implement. Each node only needs to compute neighbors' spherical coordinates and route greedily in that 3D space. These coordinates need to be learned only once and remembered. However, nodes need extra information: the center of the network and the network diameter (or their estimates). The computational overhead compared to 2D greedy routing is negligible. The communication overhead is minimal, only one bit is necessary to specify one of the two states: two dimensional routing or spherical coordinates routing.</p><p>The projection approach can be extended to work for different planar network shapes such as rectangles, where we can use a surface other than the sphere to receive the projections. But note that unlike the disc case, rectangles are harder to optimize due to the narrower cross section. Identifying the optimum projection surface appropriate for each shape is an important and challenging problem which we leave for future work. For now, we restrict ourselves to measuring how the sphere projection works on other shapes; the results are consistently good.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Some other heuristics</head><p>Before settling on the spherical projection we have considered other heuristics, two of which we briefly mention here.</p><p>Modified Density: Apply a coordinate transformation f(radius) to modify the virtual density throughout the network to compensate for Projected point Fig. <ref type="figure">1</ref> Projecting the disc on a sphere Original point the load imbalance It is not clear whether there exists a function such that the new greedy paths (curved in reality) are the optimal paths. In any case, the computation of geodesics for a general f is complex, and a few attempts with special f's were unsatisfactory.</p><p>Ring Routes: Imagine a disc-shaped metropolitan area, in which congestion is avoided by co-centric ring roads. To drive from any point to another we start at the ring road closest to the start point, end at the ring road closest to the destination, and jump between the two at a random point. Unfortunately, this intuitively appealing solution, and many variants, also proved unsatisfactory. Coincidentally, a similar idea was independently explored with some success in <ref type="bibr" target="#b24">[27]</ref> (see Section 8).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">HIGH LEVEL SIMULATION</head><p>To evaluate our algorithms we used three different environments: a high-level simulator, a low-level simulator (i.e. ns2), and a physical test bed implementation. The high-level simulator allows us to gain intuition into the algorithm's behavior by exploring a large number of scenarios and large networks. The low-level simulator allows us to evaluate our algorithm in a more realistic setting, but reduces our ability to explore the design space (e.g., it limits the network size). Finally, the test bed validates the simulation results in an experimental setting, and tests whether our solution is easily deployable.</p><p>The high-level simulator is packet level, modeling neither packet losses, nor interferences, and is implemented in Java.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Metrics and Methodology</head><p>We consider networks with nodes located either uniformly at random, or deployed on a uniform grid. All nodes have a circular communication range with the same radius. In each simulation, we chose one half of the nodes randomly and then paired each of them with a random node in the other half. Each pair of nodes exchanges one packet. For evaluation proposes, we divide the network into circular constant-width annuli, and within each annulus we measure the average and the maximum number of packets handled (i.e., sent, received, and forwarded) by a node.</p><p>We use two main metrics to evaluate the performance:</p><p>• average load: the average number of packets handled by a node in a given annulus. • maximum (max) load: the maximum number of packets handled by a node in a given annulus. Correspondingly, from the above metrics we derive the improvement metrics: decrease in average load and decrease in max load. The two metrics are distinct due to the randomness of the deployment and are both important. The decrease in average load reflects how an entire area will be less loaded (e.g. consume less energy) while the decrease in max load reflects an algorithm's effect on the individual particularities of a deployment. The decrease in average load is the more meaningful measure because the maximum load can be reduced significantly by reactive routing, a form of local load balancing described later this section.</p><p>To better understand how the algorithms behave, we initially use a very large number of nodes (15,000) and then evaluate networks that are closer to real world dimensions (400-1000).</p><p>Unless otherwise specified, we use a communication radius resulting in approximately 20 neighbors for networks with nodes randomly located, and 8 neighbors for grid networks.</p><p>We do not use any greedy fall-back mechanism. We made this decision for two reasons. First, the density in all networks is high enough so that the failure probability of greedy routing is very small (i.e. ~0.2%), not quantitatively affecting results. Second, since there are several fall-back algorithms proposed in the literature (e.g. <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b20">21]</ref>), we wanted to factor out the impact of such decision.</p><p>The results plotted in this section are averaged over enough simulations that the confidence intervals are small, i.e., the worse case 95% confidence interval is well below 1% for the decrease in average load and 2% for the decrease in max load.</p><p>The y-axis of all plots is normalized so that the load in the central annulus for the greedy routing is 1. Unless otherwise specified, the horizontal axis shows the distance from the center measured in percents towards the edge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Theorem 1 Validation</head><p>Fig. <ref type="figure">2</ref> compares the average load predicted by Theorem 1 to our simulation results for a 15000 node disc network. As shown by the plots, the simulation results are practically identical to the theoretical prediction, i.e., the integral over each annulus.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Optimum Paths Approximation</head><p>Fig. <ref type="figure">2</ref> also shows the average load when routing on geodesic trajectories as described in Section 3.4 using the optimal cost function approximation from Section 3.3 for a network of 15000 nodes. The peak load decrease is around 44%.</p><p>The approximated optimal load is almost flat with a small decrease near the edge. There are two reasons for this. First and foremost, the cost function u(r) used is only approximately optimal. Secondly, the routing deviates from geodesic curves because we are working with a discrete set of nodes rather than a continuum. This effect gets worse close to the edge of the network; because we are using discrete points, the edge of the network is not "round" but "bumpy," and as a result paths that should go very close to the edge end up further in the interior. We believe that fine-tuning the simulation by using a better approximation of the cost function would result in a flatter load distribution and improve our approximation of the optimum. Fig. <ref type="figure">3</ref> plots the maximum load of a node within each annulus. As can be seen, in the case of random placement there is a considerable discrepancy between the maximum and the average loads. The reason for this discrepancy is the random node placement, which causes some "attractor" nodes forming particular geometric shapes to forward a disproportionate number of packets. The further an annulus is from the center, the more nodes, and consequently more attractor nodes, it contains, leading to a larger discrepancy between the max and the average load. This is similar to drawing values from a given distribution: the more values we draw the larger the difference between the maximum and the average. In the next section we explore reactive routing as a solution for this problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Curveball Routing Simulations</head><p>In this section, we evaluate our heuristic solution described in Section 4 over several simulation scenarios. We use the mapping method described in 4.1, and, unless otherwise specified, we use α=1 (i.e. project the original coordinates).</p><p>In summary, the results in this section are as follows:</p><p>•</p><p>For a disc network we obtain a decrease in average load of 35-44% and a decrease in max load of around 25-40%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>When nodes are deployed more uniformly or the network size decreases, the results improve. For a 400 node square grid the decrease in max load is as high as 42%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The average increase of the path length when using curveball routing is very small, only 3-8% longer than in the case of shortest-path greedy routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The results improve as the number of neighbors increases, although improvements are not significant, i.e., less than 10%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>While the sphere mapping also works for other shapes such as squares and rectangles, the improvements are smaller, e.g. for a 1000 random node square the decrease in average load is 36%, and the decrease in max load is 24%. Note that the decrease in average load of Curveball Routing is very close to the optimum approximation (under 1%). The reason for this is the error in approximating the optimal paths mainly reflected by the approximate cost function but also by the routing based on instantaneous directions. The latter incurs in practice more hops, despite that optimal paths are on average shorter in Euclidean length than Curveball paths. On the other hand, Curveball selects hops using a greedy criterion aimed at minimizing hop count.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.1">Impact of sphere radius</head><p>In this section, we show the average load for Curveball Routing as a function of the mapped sphere radius. Fig. <ref type="figure">4</ref> (a) plots the average load for a disc network with 15,000 random nodes for several cases of Curveball Routing. We consider spheres with radii ranging from R/1.3 to R. The maximum average load decrease is 44%, and it is achieved for R/1.2. Note that as the radius becomes smaller, the "edge effect" described in Section 4.3 becomes prominent.</p><p>We stress that the load curves in Fig. <ref type="figure">4</ref> should not be quantitatively generalized to all possible networks. Results differ slightly depending on network specifics (number of nodes, neighborhood size). Our goal here is to build an intuition for the effect of the sphere size on load distribution. Below we look at more network parameters.</p><p>Unlike the average, the decrease in max load is only 27% and is achieved by using a sphere of radius R/1.1, which has a decrease in average load of 40%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.2">Reactive-routing</head><p>We now present a simple scheme to augment Curveball Routing or other similar techniques with respect to the increase of the max load. The idea is to find alternate hops avoiding the hotspot nodes that already forward a disproportionate amount of packets. In particular, each node monitors its neighbors' load and if the next hop's load is higher than a threshold relative to its own load it will try to avoid that node by trying to route through an alternative neighbor. If a suitable alternative is not found in spherical coordinates, the packet is forwarded using 2D greedy routing. This reactive scheme is simple to implement as it only requires neighborhood information. In fact, the load information can be piggybacked in the hello messages. Fig. <ref type="figure">5</ref>(a) and (b) plot the average and max load in a 1000 node network. To accentuate the discrepancy between max and average we used a small mapping of radius R/1.3. In this case, the average is decreased 47% but the max only by 6%. However, using the reactive technique leads to a 36% decrease in the average load, and a 29% decrease in the max load for Curveball Routing. Note that due to longer radio links and the use of the same number of annuli, the maximum load is not found at the last (edge) annulus anymore.</p><p>The reactive scheme does not work as well for greedy routing, as shown in Fig. <ref type="figure">5</ref>, the decrease in max load is insignificant. There are two reasons for this: first, Curveball Routing falls back to greedy when it cannot find a less loaded neighbor, which is not available for greedy; second, for curveball routing the hotspots are distributed across the network and thus each can be avoided individually, while, in the case of the greedy routing nodes with high loads are structurally concentrated around the network center and cannot be avoided using only local routing decisions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.3">Path length</head><p>In the presented simulations, Curveball Routing increases the average path length by less than 7.5% compared to the greedy paths. Similarly, the longest path increases by 59%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.4">Grid vs Random</head><p>As expected, if nodes are located on a grid instead of uniformly at random, the results improve. The reason is that the discrepancy between the average and the max is reduced because the grid prevents the development of isolated nodes. For example, on a 15,000 node grid, the average load decreases by 40%, while the decrease in max load is 36%. The decrease in max load is still not identical to the decrease in average load because the grid is not symmetric about the center; points on the diagonals at the same hop count from the center as points on the sides are at much larger physical distances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.5">The impact of neighborhood size</head><p>We studied the impact of the neighborhood size on load. Due to space constraints we only summarize the results for the same network as in Section 5.4.2 (1,000 nodes, mapping with radius R/1.3). As expected, results get slightly worse when reducing the number of neighbors as there are fewer available paths, and avoiding the network center becomes harder. As presented, for 20 neighbors, the load decrease is 36% for the average and 29% for the max. For 15 neighbors the decrease in average is 35% and in max load 26%. Finally, for 10 neighbors the decrease in average load is 30% and in max is 22%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.6">Other shapes</head><p>So far we have assumed only disc networks. In this subsection we evaluate Curveball Routing on square and rectangular shapes. Note that we are still computing averages on annuli although these shapes are not symmetric to the center. Fig. <ref type="figure" target="#fig_0">6</ref> shows the average (a) and max (b) behavior for a rectangle with side ratio 2:1 having 1,000 nodes uniformly located. The projection is done by first applying a power function with α=0.9 and then mapping on the sphere of radius equal to the half-diagonal divided by 1.4. We use the reactive scheme for routing. As expected, the results are worse than for discs: the decrease in average load is 27% and the decrease in max load is 17%.</p><p>Fig <ref type="figure">7</ref> shows a 3D representation of the individual node load for a 400 nodes grid network. We use the same mapping as in Fig. <ref type="figure" target="#fig_0">6</ref>. In this case, Curveball Routing decreases the load by 42%. This is equivalent to the max decrease in the rest of the charts since data is not averaged. Also due to the grid deployment there was no need for reactive routing. In addition, the increase of the path length is on average only 3%, while the maximum path length increase is 15%.</p><p>Finally, we measured results for rectangles of 1000 nodes with varying ratios between the sides and using different Curveball mappings. We present the results in Table <ref type="table" target="#tab_2">1</ref>. The t parameter is the reactive relative load threshold, above which nodes search alternative routes, and r is the sphere radius. First, notice that as we increase the sphere radius more traffic gets through the center and the decrease in average load gets lower while the decrease in max load increases as less traffic goes to the exterior (obviously this effect will stop when the radius becomes large enough). Also when mapping on a small sphere, setting up a smaller reactive threshold improves the max load.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.7">Mapping Parameters</head><p>One drawback of our solution is that it does not give a precise formula to compute the parameters used to map the node coordinates (radius, power). However, in our experience, we found that "good" parameters can be determined relatively easily by performing a small number of simulations or experiments (e.g. a starting point can be: sphere radius=R/1.3, α=1 and reactive threshold=3). Also, as can be seen from Table <ref type="table" target="#tab_2">1</ref>, results do not change dramatically or unexpectedly as we explore the design space. Note that a "good" radius strikes a good balance between the average and max loads, which may depend on the targeted network degree of irregularity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">LOW LEVEL SIMULATION</head><p>In this section we evaluate Curveball Routing in the ns2 <ref type="bibr" target="#b10">[11]</ref> simulator, showing that it can increase throughput over greedy routing with up to 15%.</p><p>We use a square grid deployment of 400 nodes with 8 neighbors each. We use link level acknowledgements and 4 retransmissions.</p><p>In addition to load balancing, we are now interested in throughput which we could not measure in the high level simulator. Note that in order to get throughput increases we have to congest the network such that packets are lost due to reaching the maximum wireless capacity; otherwise we can only measure long term traffic load as before.</p><p>First, in none of our tests did Curveball Routing produce worse throughput results than the planar greedy approach. However, the relative increases are small, around 10-15%. The main reason for this is that the overall throughput increase is bounded within a constant factor of the greedy traffic <ref type="bibr">(Gupta et al.</ref> show in <ref type="bibr" target="#b1">[2]</ref> that overall network throughput is bounded by</p><formula xml:id="formula_5">) ( n O</formula><p>regardless of the routing algorithm, where n is the number of nodes). In this context, our algorithm brings throughput closer to this limit. Fig. <ref type="figure">8</ref> presents the overall throughput when varying the transmission rate. In Fig. <ref type="figure">8</ref>, 20% of the nodes are communicating (40 flows). We used 5 sec. long, randomly picked, synchronized flows. The two series represent greedy routing and Curveball Routing using the same projection as in Fig. <ref type="figure" target="#fig_0">6</ref> and Fig. <ref type="figure">7</ref>. The maximum throughput increase for Curveball Routing is a little over 13%. Fig. <ref type="figure">9</ref> presents the evolution of the throughput as we vary the number of flows. The transmission rate is 10 packets per second the rest of the parameters are the same as for Fig. <ref type="figure">8</ref>. The relative increase for curveball is slightly over 15%.</p><p>As an interesting side note, we noticed that the shape of the load (handled packets) in case of congestion is not flat anymore for the load balanced mapping (Fig. <ref type="figure">7</ref>). The reason is that the central part of the network gets more congested being surrounded by interfering nodes and less packets get through compared to the edges. For this reason a slightly more imbalanced mapping (R/1.5) achieves a little higher throughput by ~2-3%. Of course, in the absence of congestion, load balancing results are identical to the ones we have presented in Fig. <ref type="figure">7</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">TESTBED EVALUATION</head><p>We implemented the sphere projection in TinyOS <ref type="bibr" target="#b11">[12]</ref>. We present in this section experiments we have conducted on the Intel Research Berkeley deployment, Mirage <ref type="bibr" target="#b18">[19]</ref>. This was the largest test bed we had available and consists of around 90 MicaZ nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Methodology</head><p>We only performed tests on load balancing. We did not measure congestion because the rectangular testbed (of aspect ratio 2.5) is too narrow with respect to the communication range; nodes from the opposite sides (on the narrower dimension) interfered with each other. Another effect of the long and irregular communication range is that the load peak does not form in the center for the narrow side but closer to an edge of that side. We initiate one packet from each node towards each of the other nodes and we measure the number of messages routed by each node. We use LQI (Link Quality Indicator filled by the CC2420 radio) to select neighbors. We use 5 retransmissions and pure greedy routing (no perimeter fallback). In order to avoid congestion we use random jitters and different destination sequences at each node. Finally, because the testbed was small, we only measured the decrease in the maximum number of routed packet and we did not compute ring averages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Results and Experience</head><p>We performed tests in two periods of time separated by around three months. In the first testing period, there were 93-94 (one was periodically going down) sensors operational in the testbed, in the second period 88. Within the first period we tested only the non reactive version of our protocol. Fig. <ref type="figure" target="#fig_1">10</ref> presents two-dimensional projections on the two rectangle axes of the 3D load distribution in the case of greedy (upper charts) and Curveball Routing (lower charts) for these tests. The height of the column represents the number of routed messages. We obtained best results by projecting on a sphere slightly larger than half of the diagonal (half_diagonal*1.2). We think this is related to the long communication range with respect to the narrow side that pushes the load on the edge, which renders mapping on a smaller sphere worse.</p><p>The decrease in the maximum number of routed messages for curveball routing was 26% compared to greedy. The total number of messages increased (due to longer paths) by 4.5%. We did not include retransmissions in our counts since greedy routing uses longer links (more prone to losses) and the comparison would be unfair. Moreover, because of the shorter links, more messages reached the destinations with Curveball Routing (over 5% increase).</p><p>In the second period of testing, the pure, non reactive, algorithm performed worse than in the initial tests. The maximal load decreased by only 8% of the greedy peak. The main reason is that a part of the network center became sparser and one node with a stronger radio would take the highest peak for both methods.</p><p>We also tested the algorithm with the reactive enhancement. The reactive version of the curveball algorithm performed better dropping the max load by 13% from the reactive greedy maximum.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">RELATED WORK</head><p>In <ref type="bibr" target="#b24">[27]</ref>, the authors also address the crowded center problem for a disc network and use the formula derived in <ref type="bibr" target="#b23">[26]</ref> for the load probability, which is identical to the one derived in this paper. The authors theoretically analyze routing on inner and outer radii and propose a randomized choice between greedy and routing on the inner/outer radii to level the load. This heuristic has a smaller reported decrease of the central load than Curveball Routing and incurs a high path variance, which increases the convergence time to load balancing and also may affect other protocols. For example, two nearby sources sending to two nearby destinations each picking a different routing scheme, will get very different throughput and reliability results. In addition, the congestion feedback from proposals like <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref> will be very different for each flow, compared to a similar feedback when using a single routing scheme.</p><p>Pham and Perreau <ref type="bibr" target="#b22">[25]</ref> address the crowded center problem as well and also derive a formula of load probability for greedy routing.</p><p>While their solution targets a closer to deployment formula, we searched for a higher level, intuitive, one, that we show is exact for large networks. They propose the use of multiple paths to mitigate the crowded center phenomenon and analytically evaluate the approach; however, the reported expected decrease is worse than that achieved by our heuristic. Also, a subsequent work <ref type="bibr" target="#b13">[14]</ref> shows that the use of multiple paths does not achieve good results unless we use a very large number of paths.</p><p>The authors of <ref type="bibr" target="#b8">[9]</ref> perform a theoretical study of load balanced routing in wireless networks by using multiple paths, focusing on a particular communication between fixed endpoints. A load balancing routing algorithm for very narrow wireless networks was proposed in <ref type="bibr" target="#b12">[13]</ref>.</p><p>The approach of routing to a random point has been proposed for a grid topology <ref type="bibr" target="#b17">[18]</ref>. However this class of approaches will result in significant overhead compared to our approach considering that the best intermediary points are not random but along the optimal paths. MAP <ref type="bibr" target="#b25">[28]</ref> is a routing scheme that has a balancing side-effect and works for arbitrary topologies. For a disc network, MAP would route on the source's radius, a heuristic we have also tried and results in about 25% decrease in average load.</p><p>Other sensor network researchers have been inspired by Physics. In one paper, it is proposed to use electrostatic potentials to determine the appropriate sink for each node, where nodes have electrostatic charges and sinks have opposite charges <ref type="bibr" target="#b0">[1]</ref>. Routing on optical routes has also been proposed independently in <ref type="bibr" target="#b26">[29]</ref> to minimize a given cost function, e.g. from a variable node density. In this paper, we use a similar approach to solve the particular problem of load balancing and we provide an algorithm to compute the necessary cost function, i.e. the refraction index.</p><p>Gupta and Kumar show in <ref type="bibr" target="#b1">[2]</ref> that the overall capacity of random wireless networks is always bounded by</p><formula xml:id="formula_6">) ( n O</formula><p>(n is the number of nodes) regardless of the routing scheme or the shape of the network. This result implies that our overall throughput improvement can only be within a constant factor of the network size. In this paper we mostly focus on load balanced routing, which is a different problem that does not imply flow synchronization. Coincidentally, in <ref type="bibr" target="#b1">[2]</ref> the authors use in their proof a similar mapping to Curveball Routing. Subsequent results <ref type="bibr" target="#b14">[15]</ref> show that the capacity can be higher for constrained topologies and different receivers.</p><p>Many attempts have been made to enhance geographic routing with other information such as link quality (e.g. <ref type="bibr" target="#b9">[10]</ref>). The same approaches can be applied to the spherical coordinates we use but we leave this for future work.</p><p>Finally, the existing wireless congestion control algorithms are reactive <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref>. Our proactive approach can successfully coexist with them. Note that the reactive approach we propose in Section 5 to avoid load peaks for random networks should not significantly impact the reactive congestion control (it slightly varies the path).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">CONCLUSIONS</head><p>We have addressed the problem of load balancing traffic in multi-hop wireless networks to increase energy usage fairness and reduce congestion. We gave a formal derivation of the load probability quantifying the crowded center problem for a disc network. Our main idea is to mitigate this effect by routing on curved paths rather than the shortest ones. We presented a theoretical approach based on geometric optics for finding and routing on the optimal paths, and developed and tested Curveball Routing, a practical approach, which routes on virtual coordinates obtained by projecting the network on a sphere. Finally, we evaluated the algorithm showing it can be successfully applied in practice.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 6</head><label>6</label><figDesc>Fig. 6 Average and Max load for rectangle 2x1 (1k nodes)</figDesc><graphic coords="7,49.02,81.18,247.08,116.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Projections of the 3D load chart for the Mirage Intel Testbed greedy = upper charts, curveball = lower charts</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="5,58.08,72.18,495.30,324.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 . Decrease of Avg / Max (%) for various rectangles and mappings (1k nodes)</head><label>1</label><figDesc></figDesc><table><row><cell>Greedy</cell><cell>Curveball</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">Acknowledgement</head><p>We thank Ovidiu Savin for his valuable input on the initial stages of the paper.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A: Proof Sketch for Theorem 2</head><p>We consider a sequence of approximations in which we dissect the interior of the disc into cells of equal area bordered by equally spaced radial lines and concentric circles. We then approximate the total flow from one cell to another as that between the centers of gravity of the cells.</p><p>We now formulate the following linear program with an infinite number of variables and a finite number of constraints: find a flow of value 1 between each pair of cell centers so as to minimize the maximum load in any ring. The dual of this linear program has a nonnegative variable for each ring which can be interpreted as the cost per unit distance of a path intersecting the ring. These dual variables determine a cost for any path, equal to the sum over all rings of the dual variable for the ring times the length of the intersection of the path with the ring.</p><p>The optimality conditions for the primal and its dual state:</p><p>(1) Every path used in the primal solution should be of minimum cost among all paths with the same end points.</p><p>(2) Let z be the maximum load in any ring. Then the cost per unit distance associated with a ring is positive if and only if the load in the ring is equal to z.</p><p>The primal and dual linear programs are defined as follows.</p><p>Let r 0 , r 1 ,...,r t-1 , r t be an increasing sequence of radii such that r 0 = 0,</p><p>where N is a positive integer. Then each cell consists of all points (r,θ) (in polar coordinates) such that r i-1 &lt; r &lt; r i and (j-1)Δ &lt; θ &lt; jΔ for some i and j. Let C m be the mth cell in some fixed ordering of the cells. Let S be the (uncountable) set of paths between cell centers and let S(m 1 , m 2 ) be the (uncountable) set of paths between the centers of C(m 1 ) and C(m 2 ). Let F(m 1 ,m 2 ) be the probability that out of a pair of points drawn from the distribution f(p,q) one of the points lies in C(m 1 ) and the other in C(m 2 ). For any path P in S(m 1 ,m 2 ) let a(P,,k) be F(m 1 ,m 2 ) times the length of the intersection of p with ring R(k).</p><p>There is a primal variable x(P) for each path P in S, representing the amount of flow along path P.</p><p>The primal program is: Minimize z subject to:</p><p>Given a feasible solution to the primal any choice of nonnegative variables u(k) summing to 1 can be extended to a feasible solution to the dual. The following complementary slackness conditions are necessary and sufficient for the optimality of a feasible primal solution {x(P)} and a feasible dual solution {u(k)}, {v(m 1 , m 2 )}:</p><p>The first condition states that flow can occur only on minimum-cost paths. The second condition states that the maximum load occurs in every ring R(k) such that the price u(k) is positive. The Main Theorem asserts that the same conditions hold in the limit as cells shrink to points. ■</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Design Optimization of Multi-Sink Sensor Networks by Analogy to Electrostatic Theory</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kalantari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shayman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE WCNC</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The Capacity of Wireless Networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Capacity of Ad hoc Wireless Networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Jinyang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">De</forename><surname>Couto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mobicom</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Geographic Routing without Location Information</title>
		<author>
			<persName><forename type="first">A</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ratnasamy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>presented at ACM Mobicom</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">CODA: Congestion Detection and Avoidance in Sensor Networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Eisenman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SenSys</title>
		<imprint>
			<biblScope unit="page">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Mitigating Congestion in Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Hull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jamieson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<imprint>
			<publisher>ACM SenSys</publisher>
			<biblScope unit="page">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Multidimensional range queries in sensor networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govidan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hong</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<pubPlace>SenSys</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A pursuer evader game for sensor networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Demibras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gouda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Sixth Symposium on Self-Stabilizing Systems</title>
		<meeting>of the Sixth Symposium on Self-Stabilizing Systems</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Spatial Energy Balancing Largescale Wireless Multihop Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Baek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>De Veciana</surname></persName>
		</author>
		<idno>IEEE INFOCOM05</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Energyefficient forwarding strategies for geographic routing in lossy wireless sensor networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Seada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zuniga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Krishnamachari</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>ACM Sensys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<ptr target="http://www.isi.edu/nsnam/ns/" />
		<title level="m">ns2 simulator</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<ptr target="http://www.tinyos.net" />
		<title level="m">TinyOs</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Load Balanced Short Path Routing in Wireless Networks</title>
		<author>
			<persName><forename type="first">Jie</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Li</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Infocom</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Load balancing in ad hoc networks: Single-path routing vs. multi-path routing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Yashar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Keshavarzian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>IEEE Infocom</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Towards an Information Theory of Large Networks: An Achievable Rate Region</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Energy Efficient Forwarding Strategies for Geographic Routing in Lossy Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Seada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zuniga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Krishnamachari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Sensys</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Data-centric storage in sensornets</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ratnasamy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kapr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">Costas</forename><surname>Busch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Malik</forename><forename type="middle">Magdon</forename><surname>Ismail</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jing</forename><surname>Xi</surname></persName>
		</author>
		<title level="m">Oblivious Routing on Geometric Networks, SPAA 2005</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<ptr target="http://mirage.berkeley.intel-research.net" />
		<title level="m">Intel Mirage testbed</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">GPSR: Greedy Perimeter Stateless Routing for Wireless Networks</title>
		<author>
			<persName><forename type="first">Brad</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Kung</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<pubPlace>Mobicom</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Geographic Routing Made Practical, presented at Network Systems&apos; Design and Implementation</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NSDI</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">DIFS: A distributed index for features in sensor networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Greenstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ratnasamy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<idno>IEEE WSNA 2003</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Performance analysis of reactive shortest path and multi-path routing mechanism with load balance</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">P</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sylvie</forename><surname>Perreau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Infocom</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Spatial Node Distribution of the Random Waypoint Mobility Model with Applications</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hyytiä</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lassila</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Virtamo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On Load Balancing in a Dense Wireless Multihop Network</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hyytiä</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Virtamo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NGI</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<pubPlace>Valencia, Spain</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">MAP: Medial Axis Based Geometric Routing in Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bruck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mobicom</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Opti{c,m}al: Optical/Optimal Routing in Massively Dense Wireless Networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Catanuto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Toumpis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Morabito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Infocom</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
