<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">AD9D9C6F46B0307A3FB99515545F28F3</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:08+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Digital Manipulative</term>
					<term>Education</term>
					<term>Toy</term>
					<term>Learning</term>
					<term>Children</term>
					<term>Modular Robotics</term>
					<term>Programming by Demonstration</term>
					<term>Tangible Interface</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We introduce Topobo, a 3D constructive assembly system embedded with kinetic memory, the ability to record and playback physical motion. Unique among modeling systems is Topoboʼs coincident physical input and output behaviors. By snapping together a combination of Passive (static) and Active (motorized) components, people can quickly assemble dynamic biomorphic forms like animals and skeletons with Topobo, animate those forms by pushing, pulling, and twisting them, and observe the system repeatedly play back those motions. For example, a dog can be constructed and then taught to gesture and walk by twisting its body and legs. The dog will then repeat those movements and walk repeatedly.</p><p>Our evaluation of Topobo in classrooms with children ages 5-13 suggests that children develop affective relationships with Topobo creations and that their experimentation with Topobo allows them to learn about movement and animal locomotion through comparisons of their creations to their own bodies. Eighth grade science studentsʼ abilities to quickly develop various types of walking robots suggests that a tangible interface can support understanding how balance, leverage and gravity affect moving structures because the interface itself responds to the forces of nature that constrain such systems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>In an effort to bring systems concepts to younger children, a new class of "Digital Manipulatives" is emerging that embeds computation in familiar childrenʼs toys to make accessible concepts that are currently considered "too advanced" for children at a certain age <ref type="bibr" target="#b9">[10]</ref>. Digital Manipulatives can be viewed as a convergence of the educational manipulative tradition <ref type="bibr" target="#b1">[2]</ref> and Tangible Interfaces, which are designed to give physical form to digital information <ref type="bibr" target="#b5">[6]</ref>. Digital Manipulatives are intended to be easy to use and to improve access to many of the complex and temporal processes that computers describe well. For example, Resnick et al. embedded a programmability into a building toy, synthesizing a scalable physical language (LEGO bricks) and a scalable computational language (LOGO). This work led to the development of the LEGO Mindstorms line that is successful in many schools today <ref type="bibr" target="#b9">[10]</ref>.</p><p>Both computer simulation and manipulative materials can be seen, in part, as systems for creating models of the world. Model making is a prevalent activity in education that ranges from kindergartnersʼ experimentation with wooden blocks to college physics studentsʼ computer simulation of material stress and strain. Model making allows rapid experimentation with a system to understand its limitations. Tangible Interfaces present a unique opportunity to create a computationally augmented physical modeling system that takes advantage of the editability of computer data and the physical immediacy of a tangible model. Such an interface could help increase understanding of physical systems</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Topobo: A Constructive Assembly System with Kinetic Memory</head><p>Hayes Solos Raffl e, Amanda J. Parkes and Hiroshi Ishii Tangible Media Group MIT Media Lab 77 Massachusetts Ave. Cambridge, MA 02139, USA [hayes, amanda, ishii] @media.mit.edu because the model is physical and its relationship to its environment is not simulated.</p><p>Topobo is a 3D modeling system akin to building toys such as LEGO® and ZOOB®. The difference is an introduction of motorized "Active" components with embedded kinetic memory. Topobo is designed to model both the form and motion of dynamic structural systems. Topobo includes Passives (static parts) and Actives (networkable, motorized parts) that can be snapped together to form models of animals, regular geometries, or abstract shapes (Figures <ref type="figure" target="#fig_1">2,</ref><ref type="figure" target="#fig_3">4</ref>).</p><p>To use Topobo, a child builds a creation of their choosing and connects the Actives with small cables. To record a movement, the child presses a button on an Active, twists and moves the creation to program a sequence of behaviors, and then presses the button again. The creation immediately goes into playback mode, which repeatedly replays the childʼs input until the button is pressed a third time.</p><p>Usually Topobo is programmed by direct manipulation, where each Active synchronously records its own motion. However, Topobo has special Actives called "Queens" that control an entire network of Actives. This introduces the concept of centralized control and many possibilities.</p><p>Our research results with over 80 students ages 5-13 suggest that Topobo is engaging for children at multiple cognitive levels. Childrenʼs focused iteration with many surprising creations suggests that the simplicity of the Topobo interface encourages playful expression and rapid experimentation with different kinds of structures and motions. We will report the details of our experiments in the Evaluations section of this paper. Since Topobo was designed to introduce new fi elds of knowledge to young children, the paper will begin with a design overview that includes a set of possible play scenarios for Topobo to highlight different educational concepts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>THE TOPOBO SYSTEM</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Design Principles</head><p>Topobo was designed to retain the best qualities of existing manipulative materials while giving the material a new identity -an identity that can both reveal new patterns and processes to children, and that allows children to creatively express patterns and processes that can not be expressed with existing materials. To achieve this goal, we established 6 design principles:</p><p>Be accessible, yet Sophisticated -be ergonomic and Be accessible, yet Sophisticated -be ergonomic and Be accessible, yet Sophisticated intuitive for very young children, but support growth across multiple cognitive levels and into adulthood.</p><p>Be robust -have a design that would not break or Be robust -have a design that would not break or Be robust malfunction so that children donʼt fear making "mistakes."</p><p>Be meaningful even if the power is turned off -technology Be meaningful even if the power is turned off -technology Be meaningful even if the power is turned off should add to a toy, without sacrifi cing the good qualities inherent to its class of toys.</p><p>Be expressive -encourage exploration of a topic without prescribing "right" and "wrong" activities.</p><p>Engage multiple senses -engage sight, sound, and touch to provide rich, memorable interactions.</p><p>Be scalable -In the spirit of a modular system, every individual component should be physically and computationally complete and extensible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Early Design Studies</head><p>Due to the high quality of miniature motors compared to other actuators we chose rotary motion as a kinetic constraint, and initially built dozens of physical prototypes out of plastic and paper to study spatial geometries with rotary motion. This led to the development of the current system geometry and a proof of concept using Cricket microcontrollers and servo motors (Figure <ref type="figure" target="#fig_2">3</ref>). The Cricket prototype was extremely fast to implement and allowed us to experiment with the capabilities of the system design. Our fi rst scalable prototype followed, made with wood, hobby servos and breadboarded electronics. Evaluations of this system with kindergartners and second graders helped guide the design of the current system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Current System</head><p>Topobo is comprised of 10 different primitives that are connected with LEGO Technics® connectors (Figure <ref type="figure" target="#fig_0">1</ref>). Nine of these primitives are called "Passive" because they form static connections. One "Active" primitive is built with a motor and electronics. The motorized components are the only ones that move, so the system is able to faithfully record and replay every dynamic manipulation to a structure.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Passives</head><p>We designed nine different Passives to allow a variety of physical structures to be built. Since Topobo is intended to model various natural forms like skeletons and interlacing meshes, the system allows branching and spatial looping. The Topobo geometry (Figure <ref type="figure" target="#fig_3">4</ref>) is based on cubic and tetrahedral crystals.</p><p>The "elbow" (offset 90º) comes in one size. The "straight," "T," "L" (90º), and "tetra" (108º) shapes come in two sizes with a scale ratio 2:3, based on the Fibonacci ratio that describes scaling in growing systems like mammalian skeletons. These latter 8 pieces are bisected by hermaphroditic notches, allowing any two pieces to connect and branch at a right angle. For example, two straight pieces will form a "+" shape, or two tetras will form a tetrahedron. This arrangement allows the formation of regular meshes like a silicon tetrahedral lattice or simple forms like a pentagon or square (Figure <ref type="figure" target="#fig_3">4</ref>). Children notice this regularity quickly because when a child tries to build large, interconnected forms, pieces often fi t together.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Actives</head><p>The Actives are motorized, networkable, egg-shaped plastic objects with a button and an LED for indicating whether the system is in record (red) or playback (green) mode. To record a movement, the user presses a button on an Active, twists and moves the Active to program a sequence of behaviors, and then presses the button again. The Active immediately goes into playback mode, which repeatedly replays the userʼs input until the button is pressed a third time, which makes the active stop moving.</p><p>In a creation with many Actives, all of the Actives will record and playback at the same time. For example, if a child makes a circular ring of Actives, pressing a button on one of the Actives then sets all of the Actives in the structure to be in recording mode. The child may then move the circular structure of actives in the manner of a tank tread rolling across the fl oor, and then press any one of the Activesʼ buttons to set the structure into playback mode. At that moment, the motion that each of the Actives remembers is their local motion, despite the fact that the child has manipulated the global structure. In playback mode, the Actives mimic their local behaviors inspiring the whole system to take on the global motion imparted to it by the child.</p><p>The Active is made of a servo motor and electronics in a plastic housing. The housing has 6 points of mechanical connection, three sockets to connect power/communication cables and a button that is backlit by a red-green LED. One of the mechanical connectors is connected to the output shaft of the servo motor and rotates 170º. On board custom electronics handle power distribution, memory and processing, and peer-to-peer, multichannel serial communications. Each Active is identical and autonomous, and only needs power to function.</p><p>The one-button interface was inspired by Curlybot <ref type="bibr" target="#b4">[5]</ref> and chosen because it is extremely easy to use. While the onebutton interface is limited, 3D motion concepts are complex and the immediacy of the interface design encourages rapid experimentation with motion. Physical programming by example also results in natural looking, emotionally engaging motions because they are the refl ection of the userʼs own body movements <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Centralized Control</head><p>In recording mode, a user will grasp and wiggle an individual Active component in a creation. In playback mode, that same Active component will mimic the motion that was made to it. The other Actives in the structure have no motion to mimic. In some situations, it may be desirable for all Actives in a structure to mimic the motions made to one individual Active in the structure. To accommodate this complexity, we introduced the Queen. In both recording and playback modes, all motions of the Queen are imparted directly to all Actives connected to the Queen.</p><p>For example, suppose that one constructs a linear structure of actives with a Queen at one end. When the Queen is recording, all of the other Actives will mimic its angular position. Thus, increasing rotations to the Queen cause the entire structure to begin to curl into a circular form. Eventually, the ends will touch (fi gure 5).</p><p>Topobo Queens can be used to provide tangible examples of spatial translation. For example, two facing Actives that have identical motions will appear to have mirrored motions if their output shafts are facing each other. This can be used to construct scissor-like motions in a walking animal.</p><p>A Queen does not need to be mechanically attached to the creation it is programming, so it can also be used as  a remote controller. Remote programming with a Queen gives a child synchronous input and output feedback during programming, allowing the child to observe their creationʼs motion while they are composing it.</p><p>Simple extensions of the function of the Queen enable dramatically different behaviors of structures of Actives.</p><p>To generate these behaviors, we have utilized three different types of "augmented" Queens. The fi rst of these augmented Queens is the Decay Queen. A sequence of Actives connected to the Decay Queen is endowed with a knowledge of how many steps away from the Queen it is. An active will then scale the Queenʼs motion by a factor which is proportional to this number of steps. Using a Decay Queen, a linear string of Actives can gradually curl into a spiral (fi gure 5). Actives connected to the Time Delay Queen mimics the action of the Queen following a temporal delay that is proportional to the number of steps away from Queen that an Active is located. Using a Time Delay Queen, linear strings of Actives can move with wave-like motions.</p><p>Finally, the Faster/Slower Queen speeds up or slows down Actives as a function of steps away from the Queen. Due to Topoboʼs looping playback, a linear string of parts can exhibit harmonic resonance patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>EVALUATIONS WITH CHILDREN</head><p>We conducted classroom studies with 25 kindergartners (5-6 years old), 22 second graders, and 32 eighth graders to evaluate Topoboʼs effectiveness as a educational tool for children at various educational levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Kindergarten and Second Grade Studies:</head><p>We spent three hours each in a second grade and a kindergarten class playing with an early Topobo prototype, evaluating its technical features, design principles and our educational goals. These classrooms featured many examples of models, toys and manipulative materials. While older school children (who are more adept with abstract manipulation) routinely use a computer lab, these classrooms had only one computer each, and it was strictly for teacher use. Two researchers worked with several groups of approximately 4-5 kids. We started by showing children two possible models and how they could manipulate them.</p><p>Then we assisted them with assembling and programming their own models.</p><p>We introduced Topobo to the second grade group by comparing a walking creation to ourselves walking. When Dave, a normally impatient child, came to one of the tables where we were sitting and manipulating Topobo, he immediately became engaged. First, Dave started to manipulate and rearrange the parts in spontaneous and creative ways but Topobo soon became part of his ongoing activity and experience. Dave was working to create his own walking animal with a Queen. When something stopped functioning as he had expected, Dave drew on the earlier models that we showed him (Figure <ref type="figure" target="#fig_1">2</ref>), and tried to emulate some of the confi gurations, especially the local-global interaction and the feedback between parts. He was trying to run a new creation, but suddenly he realized that the creation didnʼt work as he has planned. He broke his focus, stopped his ongoing activity and then asked: Why? What happened? Why it is not walking?</p><p>This breakdown in the ongoing activity of building a Topobo model may have produced a certain conceptualization in Daveʼs mind <ref type="bibr" target="#b0">[1]</ref>[4]: he may have started thinking and manipulating Topobo in new ways in order to produce movement, feedback, global-local interaction and walking. The process of physically debugging his creation may have given Dave new insights to kinematic systems.</p><p>Dave played with Topobo for over 45 minutes. Our guiding and scaffolding certainly helped him to quickly create and test Topobo models, and it may have helped him to remain engaged for such a long time. In the future, teacher guiding may be very helpful for facilitating in-depth conceptualization and kinematics thinking by comparing Topobo to natural locomotion. For children such as Dave, Topobo may support an "education of the senses" in which materials and objects support learning experiences that help children develop their sensory capabilities, control their own learning process and learn through personal exploration <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Studies with Early Adolescents</head><p>Later evaluations with two eighth grade "Physics by Design" classes focused on Topoboʼs role supporting design, experimentation and conceptual abstraction. These students normally engage in group projects using manipulatives like LEGO Robolab, so the evaluation was designed to be like familiar classroom activities. We met with four groups of 8 students twice over two weeks, and students worked in pairs or groups of three. These sessions included three homework worksheets and interviews with students.</p><p>Our fi rst evaluation session introduced the system. Using a preliminary worksheet, students described different types of motion related to their bodies based on both their preexisting conceptual models of motion and then based on activities we designed. The next day, we explained how to use Topobo with demonstrations and examples. Students began by freely exploring the system. Many students built anthropomorphic creations, programming them to tell stories or wiggle around (Figure <ref type="figure" target="#fig_5">6</ref>). Their creations often did not move as they expected. Falling creations elicited exclamations like "add more legs" and "make it lower, like a baby." For most of these students, Topobo quickly became a tool to experiment with center of gravity and dynamic balance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Iterative Design</head><p>The second evaluation session a week later focused on a task to construct a "walking creature." Students fi rst planned and drew their creature and then tried to build it and make it walk (Figures <ref type="figure" target="#fig_6">7,</ref><ref type="figure" target="#fig_8">9</ref>). We observed two different methods of design. The fi rst method involved "active iteration" during the creative process. Students built a small part of a creation, programmed it repeatedly until the desired motion was found and then added components, testing how the new components changed the dynamic balance of the creation. This process continued until they had their desired creation. The second method involved students who would "compartmentalize" the processes of structural building and programming motion. Students who compartmentalized would build a creation in its entirety and then program its movement only at the end of their process.</p><p>Students who employed active iteration were more successful at building creations which walked and balanced. These studentsʼ creations tended to be very different from their original designs on paper and the students were generally able to explain how physical constraints had infl uenced their designs. In comparison, students who compartmentalized building and programming usually ended up deconstructing their creation and trying to rebuild it using a more iterative process.</p><p>These fi ndings show that an interface design should support active iteration by allowing users to switch between interdependent processes. Users often need to test many ideas to incrementally develop a successful design. Students who initially compartmentalized the design of form and motion eventually adopted active iteration, suggesting that Topobo supports rapid experimentation with these interdependent processes. However, these fi ndings also suggest that Topobo would benefi t from an ability to save and reuse motions, so that forms can be edited and motion can be kept consistent.</p><p>This process of designing and testing also shows how building with Topobo leads older students to employ the Scientifi c Method. Students began by observing the action of their creature, creating a hypothesis on how to improve it, and testing that hypothesis with experimentation. While Topobo can be thought of as a system to specifi cally teach concepts of kinematics, for children capable of "formal operations," (11+ years) <ref type="bibr" target="#b8">[9]</ref> it can also be described as a tool for teaching students to think like scientists.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Evaluation of Queen functionality</head><p>Our evaluation of the Queen is inconclusive. Some students had success using the Queens, while others experienced a level of frustration with them. We believe some students became frustrated with them because using the Queens requires a different cognitive model than using Topobo with direct manipulation. In direct record mode, children focus on relative movement of the Actives, e.g. "how far did the leg move from its static position." However, this conceptual model does not work well with a Queen. Students would often begin by carefully positioning their creation before programming it. But as soon as the student pressed Record on the Queen, the creation would kick wildly out of position as the Actives mimicked the Queenʼs absolute angular position. This could be fi xed by reorienting the Actives while they are recording, but the kids often thought something had broken and stopped their program before they could analyze and fi x it. Their fear of broken parts was exacerbated because a software bug occasionally caused Queens to act erratically. After students were surprised by a Queen a few times, they would often give up and return to direct manipulation.</p><p>The Queen needs further engineering and design refi nement. This study showed us that a minor bug can be an obstacle to learning if it causes greatly unexpected output. It also showed that in future interactions, Queens may require more scaffolding than direct manipulation with Topobo.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Animals and Machines</head><p>Kindergartners, second graders and eighth graders all related to Topobo models with their "familiar knowledge" about animals and machines. Metaphoric allusions to machines (robotics) and especially to animals ("the elephant," "the ant," "the scorpion," (Figure <ref type="figure" target="#fig_7">8</ref>) "the horse," "the no-walking man") were descriptive and salient. Many 8th grade students changed their creations based on their ideas about how animals and people move. "We tried to make it walk, but it couldnʼt  balance so we made it crawl. You know, like a baby." One group experimented with creating a "frog" with scalloped legs. Another referenced the coordinated motion of a horseʼs legs, and another the crawling of a six legged insect. One of the groups explained that when their creation did not work as planned, they thought more deeply and specifi cally about the animal motion they were attempting to imitate than during the initial drawing of their design.</p><p>The fact that children can learn about the mechanical world through play with Topobo suggests, to a certain extent, the potential for body and ego syntonic learning as described by Papert <ref type="bibr" target="#b7">[8]</ref>. We believe that programming Topobo is a body syntonic activity because Topoboʼs kinematic motion, feedback, and global-local interactions are fi rmly related to childrenʼs sense and knowledge about their own bodies. Topobo my also be somewhat ego syntonic because it is coherent with childrenʼsʼ sense of themselves a people with intentions, goals, desire, likes and dislikes.</p><p>We also found evidence suggesting that for younger children, Topoboʼs relationship to the body may allow it to function as what Papert considers a transitional object. In Papertʼs view, a transitional object allows the children to make sense of tasks in terms of everyday familiar experience, but supports them in moving into the world of the abstract <ref type="bibr" target="#b7">[8]</ref>. We hope that further research will help us evaluate this hypothesis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Age Range Findings</head><p>It appeared that all groups of kids had similar initial experiences of discovery. The children worked fi rst to understand this unknown toy (or system or machine or thing, depending on the different vocabularies kids used to refer to Topobo). Children then worked to put together and assemble parts in a coherent way, and fi nally tried to program their constructions and test their movement.</p><p>Kindergartners generally programmed only one Active. Some kindergartners puzzled over cause and effect with the programming and playback, while others understood the interface and playfully experimented with creations and storytelling. The second graders were much more deeply curious about the system, at times spending their entire recess working to refi ne a creation. This leads us to believe that Topobo may be best suited for children ages 7 and older.</p><p>Compared to the second graders, 8th graders were much more adept at programming subtle physical manipulations and were more successful at controlling movement. However, many students did not discover how to use more than one Active to create a single 2 DOF motion, and as a group, 8th graders seemed less comfortable experimenting with irregular arrangements of Actives than the younger children were. This suggests that children ages 8-11 who are in the process of developing abstract mental models, but still experiment very freely, may benefi t most from Topobo.</p><p>We tested Topobo with a wide age range to evaluate its capacity to be both accessible and complex to children at widely varying educational levels. Eighth graders compared it to LEGO Mindstorms as a programming tool, and several students suggested that the addition of sensors and environmental feedback would improve the system. Both the second graders and the eighth graders concluded that Topobo was probably designed for their age range. This supports our hypothesis that Topobo can support learners at multiple levels. Vygotsky refers to the "zone of proximal development" <ref type="bibr" target="#b13">[14]</ref> as the optimal learning stage where children are exploring concepts beyond those they would be able to understand independently, but are not dependent on adult support for learning. Our observations that students at multiple developmental levels effectively collaborate with Topobo encourages us that the system may support rich learning experiences during such cognitive transitions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Domains of Knowledge</head><p>We found that Topobo can help students ages 7-13 to learn about several educational concepts:</p><p>Balance: When objects move, their center of gravity changes. Topobo draws attention to this fact when children make things that fall over. Learning how to control falling can lead to an understanding of familiar dynamic processes such as walking.</p><p>Center of Mass/Center of Gravity: Several groups of students built creations that were initially very tall and tended to fall over when they moved. One student described shortening the creationʼs legs to keep its weight closer to the ground. He referenced how it is easier for babies to crawl than to walk.</p><p>Coordination: When Topobo is directly manipulated, sequential motions are easy to record. A child might shake his Topobo dogʼs head, and then wag his Topobo dogʼs tail. However, shaking the dogʼs head and wagging the dogʼs tail at the same time is diffi cult because the child needs both hands to do either one of the activities. In order to coordinate these motions, it is necessary either to cooperate with other children (coordinating people) or to use a Queen (which coordinates movements in time). The Queen encourages developing an understanding of how coordinated movements can change a whole system.</p><p>Relative motion: A second grader built a long string of static parts with an Active part at each end. He programmed each end to wiggle back and forth and observed the ends shaking. Upon suggestion from an adult, he tried holding a shaking end, and was amazed to see his entire creation wave wildly back and forth. This drew his attention to the idea that movements in a connected system are relative to oneʼs frame of reference.</p><p>Movement with Multiple Degrees of Freedom: A Topobo Active provides motion in one degree of freedom. One pair of eighth grade girls quickly fi gured out how they could connect two Actives with an elbow piece to create 2 DOF rotational motion. By applying this technique they were able to quickly create a walking moose. They could not explicitly describe how it worked; however they refi ned the same kind of motion in a different creation a week later.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships between Local and Global Interactions:</head><p>The educational value of understanding relationships between local and global interactions has been investigated at length with object-oriented programming languages such as AgentSheets and StarLogo <ref type="bibr" target="#b10">[11]</ref>. Topobo makes certain systems concepts tangible with the Topobo Queens. One group of 8th graders discovered that faster legs (local) do not make a faster animal (global). Another group of three boys fi gured out quickly that they could create two separate networks of legs on either side of an animal, each governed by a Queen (Figure <ref type="figure" target="#fig_6">7</ref>). Using this concept, they would be able to program each pair of legs with different motions but the legs in each network would have the same repeated motion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TECHNICAL IMPLEMENTATION</head><p>The Passives and housing for the Actives are 3D printed in ABS plastic. Some Passives are cut from bass wood. LEGO Technics connectors are used for mechanical connections. We use a TowerHobbies servo motor with 170° rotation because it has high strength to weight, robust metal gears, is easily back-driven, and includes sensor and drive circuitry.</p><p>The servosʼ output shafts are outfi tted with a custom clutch to protect the gears from excessive torque.</p><p>The Activesʼ (Figure <ref type="figure" target="#fig_9">10</ref>) on-board custom electronics handle power distribution, memory and processing, and multichannel serial communications. A 24V power bus is locally stepped down to 6V with a buck converter and then is dropped to 5V with a linear regulator that powers the digital electronics. This minimizes the effects of power losses in the system, limits noise transfer between Actives and reduces current requirements.</p><p>A 40 MHz microcontroller handles local processing and network communications. At manufacture, a one-time calibration sequence measures the range of motion of the servo and correlates input and output position data. During record, the microcontroller reads the servoʼs internal potentiometer at 36Hz using a 10 bit ADC and writes scaled 8 bit values to local memory. This gives us 34 seconds of record data at 3/4° output resolution, which is accurate compared to the backlash in the servoʼs 4 stage gearbox. A custom peer-to-peer serial networking protocol can transfer data between Actives at 9600 BPS. Line drivers allow hotswapping power/communications cables between Actives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RELATED WORK</head><p>Tactile programming-by-example was inspired by the educational toy curlybot <ref type="bibr" target="#b4">[5]</ref>. We chose to mimic curlybotʼs technique of physical programming-by-example because it is intuitive for young children to use and results in emotionally engaging motions <ref type="bibr" target="#b4">[5]</ref>.</p><p>A variety of projects has combined building toys with programmable behaviors to support childrenʼs education. Recently, Wyeth and Purchase have embedded programmable behaviors in LEGO Duplo Primo® blocks to allow children to use physical manipulation to develop conceptual abstraction skills <ref type="bibr" target="#b14">[15]</ref>.</p><p>The physical and spatial design of Topobo is inspired by the ZOOB building toy, which is based on the movement of skeletons and the folding of proteins <ref type="bibr" target="#b16">[17]</ref>. Topobo complements this type of building activity by also modeling a structureʼs dynamic motion</p><p>The San Francisco Exploratorium inspires children to develop scientifi c curiosity with hundreds of hands-on, activity based exhibits <ref type="bibr" target="#b12">[13]</ref>. Despite a relative absence of computers at the Exploratorium, their many examples of using simple models and machines to teach children complex kinematics concepts has helped guide the design of Topobo.</p><p>StarLogo is a programming environment for children to create simple software models of distributed systems like ant colonies that exhibit feedback and emergence, and thus learn about why such systems behave as they do <ref type="bibr" target="#b10">[11]</ref>. While StarLogo is based on a GUI platform, it also encourages an understanding of system dynamics by constructing and observing the behavior of distributed networks.</p><p>Researchers in modular robotics have been working to make a generalized robotic node that can be used to confi gure robots of varying forms and behaviors. Projects like "Real Molecule" <ref type="bibr" target="#b6">[7]</ref> and "PolyBot" <ref type="bibr" target="#b15">[16]</ref> draw inspiration from natural systems and provided valuable examples for Topoboʼs distributed electronics design. However, they differ markedly from Topobo in intent: modular robots generally aim to be completely autonomous "smart" machines capable of doing tasks that people can not do, or do not want to do. Topobo is designed to be a user interface that encourages creativity, discovery and learning through active experimentation with the system.</p><p>The creators of PolyBot patented several modular toy robot designs <ref type="bibr" target="#b2">[3]</ref>. These patents describe several similar systems to Topobo, but the prototypes were never fully designed and implemented as a toy nor were they evaluated [Raffl e, personal communication].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FUTURE WORK</head><p>Future development will address extending the Topobo system to support scalability for expert users and to encourage different types of learners to use the system. We will make "Queen/learner" behaviors more obvious and we will research tangible techniques for saving motions, editing playback motions in real-time and making conditional behaviors.</p><p>Continuing user studies will attempt to determine how children are able to transfer knowledge from Topobo activities to other fi elds of knowledge. This will require using Topobo with kids for long periods of time and evaluating a range of activities that target different cognitive levels. We hope these studies will encourage the development of different types of digital manipulatives in school classrooms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSIONS</head><p>Our research suggests that Topobo can help children to understand certain physical principles affecting kinematic systems, and that Topobo can help children learn about the fi elds of modular robotics, system coordination, emergent dynamics (local vs. global behavior) and locomotion. Such concepts are not usually taught until high school or college level, and recent research <ref type="bibr" target="#b11">[12]</ref> arguing that people learn by building on prior knowledge suggests that qualitative experience with these ideas through playing with Topobo may help scaffold students into these complex fi elds.</p><p>Topobo makes complex ideas accessible by integrating the tangible interface tradition with digital manipulatives, endowing physical immediacy to normally immaterial dynamic computational processes. We believe that this approach can both expand the educational range of manipulative materials and can provide a physical bridge for children to transition from concrete to abstract operations. Physical computation is the basis of both tangible interfaces and traditional educational manipulatives. It can help children to use the next generation of computational educational tools to communicate, cooperate, and more deeply understand the natural world around them.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Topobo system (a) and an animal creation (b).</figDesc><graphic coords="1,317.52,220.80,117.84,114.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: A bug (a) and programming a horse to walk (b).</figDesc><graphic coords="2,69.60,54.00,96.00,127.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Early design sketches and a Cricket prototype.</figDesc><graphic coords="2,321.36,591.84,67.20,102.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. System geometry (a) and spatial loops (b).</figDesc><graphic coords="3,52.45,595.82,154.78,116.47" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Circle made with a basic Queen and spiral made with a Decay Queen show motion patterns.</figDesc><graphic coords="3,321.60,54.00,110.64,87.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. One 8 th grade groupʼs "moose" walked with 2 DOF rotation. The group programmed it collaboratively.</figDesc><graphic coords="4,406.64,54.85,148.05,110.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. An 8 th grade groups concept and design demonstrates a compartmentalized design strategy.</figDesc><graphic coords="5,69.84,54.00,88.80,89.04" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8. 2nd graderʼs static scorpion shows that Topobo can be meaningful "with the power turned off."</figDesc><graphic coords="5,420.29,553.00,136.05,120.55" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 .</head><label>9</label><figDesc>Figure 9. Students experiment with walking motions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 .</head><label>10</label><figDesc>Figure 10. Active Component Hardware.</figDesc><graphic coords="7,348.00,54.00,175.36,131.52" type="bitmap" /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>Thanks to Mitchell Resnick, Bakhtiar Mikhak, Cristobal Garcia, Lisa Lieberson, Josh Lifton, Ben Recht, Andy Lieserson, Brian Mazzeo, Jeremy Schwartz, Laura Yip, Nick Williams, Wesley Jin, the members of the Tangible Media Group, and all of the professional educators who have supported this project. This project has been supported by the MIT Media Labʼs Things That Think consortium.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Through the Interface: a human activity approach to user interface design</title>
		<author>
			<persName><forename type="first">Susanne</forename><surname>Bødker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Lawrence Erlbaum Associates</publisher>
			<pubPlace>New Jersey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Inventing Kindergarten</title>
		<author>
			<persName><forename type="first">N</forename><surname>Brosterman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<pubPlace>New York, Harry N. Adams, Inc</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">US Patents 6</title>
		<author>
			<persName><forename type="first">Yim</forename><surname>Duff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Robotic toy modular system with distributed program and 6</title>
		<imprint>
			<biblScope unit="volume">624</biblScope>
			<biblScope unit="page">605</biblScope>
		</imprint>
	</monogr>
	<note>Robotic toy modular system</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Understanding Computers and Cognition: A New Foundation for Design</title>
		<author>
			<persName><forename type="first">Fernando</forename><surname>Flores</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Terry</forename><surname>Winograd</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>Ablex Publishing</publisher>
			<pubPlace>Norwood, N.J.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Designing a New Class of Computational Toys</title>
		<author>
			<persName><forename type="first">Su</forename><surname>Frei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mikhak</forename><surname>Ishii</surname></persName>
		</author>
		<author>
			<persName><surname>Curlybot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CHI 2000</title>
		<meeting>CHI 2000</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Tangible Bits: Towards Seamless Interfaces between People, Bits and Atoms</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ullmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CHI 1997</title>
		<meeting>CHI 1997</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="234" to="241" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Self-reconfi guring Molecule: Design and Control Algorithms</title>
		<author>
			<persName><forename type="first">Rus</forename><surname>Kotay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mcgray</forename><surname>Vona</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Algorithmic Foundations of Robotics</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Children Computers and Powerful Ideas</title>
		<author>
			<persName><forename type="first">S</forename><surname>Papert</surname></persName>
		</author>
		<author>
			<persName><surname>Mindstorms</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980">1980</date>
			<publisher>Perseus Publishing</publisher>
			<pubPlace>Cambridge, Massachusetts</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Grasp of Consciousness</title>
		<author>
			<persName><forename type="first">Jean</forename><surname>Piaget</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976">1976</date>
			<publisher>Harvard University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Digital Manipulatives: New Toys to Think With. Paper Session</title>
		<author>
			<persName><forename type="first">Martin</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName><surname>Berg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CHI 1998</title>
		<meeting>CHI 1998</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="281" to="287" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Resnick</surname></persName>
		</author>
		<title level="m">Decentralized Modeling and Decentralized Thinking. Modeling and Simulation in Precollege Science and Mathematics</title>
		<editor>
			<persName><forename type="first">W</forename><surname>Feurzeig</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Roberts</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="114" to="137" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Public Institutions for Personal Learning: Establishing a Research Agenda</title>
		<author>
			<persName><forename type="first">J</forename><surname>Roschelle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>American Association of Museums</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">San</forename><surname>Francisco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Exploratorium</forename></persName>
		</author>
		<ptr target="http://www.exploratorium.edu" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title/>
		<author>
			<persName><surname>Vygotsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">L.S. Mind in Society</title>
		<imprint>
			<date type="published" when="1978">1978</date>
			<publisher>Harvard University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Tangible Programming Elements for Young Children</title>
		<author>
			<persName><forename type="first">P</forename><surname>Wyeth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Purchase</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CHI 2002</title>
		<meeting>CHI 2002</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="774" to="775" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">PolyBot: a Modular Reconfi gurable Robot</title>
		<author>
			<persName><surname>Yim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roufas</forename><surname>Duff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intl. Conf. on Robotics and Automation</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<persName><surname>Zoob Toys</surname></persName>
		</author>
		<ptr target="http://www.kidscape.com/articles/zoob.html" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
