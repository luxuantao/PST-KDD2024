<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A new heuristic algorithm for rectangle packing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2006-02-03">3 February 2006</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Wenqi</forename><surname>Huang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Duanbing</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ruchu</forename><surname>Xu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A new heuristic algorithm for rectangle packing</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2006-02-03">3 February 2006</date>
						</imprint>
					</monogr>
					<idno type="MD5">D35BF5626067D10A232F80ADB08D0E64</idno>
					<idno type="DOI">10.1016/j.cor.2005.12.005</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T10:18+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Rectangle packing</term>
					<term>Heuristic algorithm</term>
					<term>Caving degree</term>
					<term>Corner-occupying action</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The rectangle packing problem often appears in encasement and cutting as well as very large-scale integration design. To solve this problem, many algorithms such as genetic algorithm, simulated annealing and other heuristic algorithms have been proposed. In this paper, a new heuristic algorithm is recommended based on two important concepts, namely, the corner-occupying action and caving degree. Twenty-one rectangle-packing instances are tested by the algorithm developed, 16 of which having achieved optimum solutions within reasonable runtime. Experimental results demonstrate that the algorithm developed is fairly efficient for solving the rectangle packing problem.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The rectangle packing problem often appears in encasement and cutting as well as VLSI design. To solve this problem, various algorithms based on different strategies have been suggested. In general, these algorithms can be classified into two major categories: non-deterministic algorithms and deterministic algorithms. The crux of non-deterministic algorithms, such as simulated annealing and the genetic algorithm <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>, is to design data structures that can represent the geometric relationships among the rectangles, e.g., the O-tree <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>, B*-tree <ref type="bibr" target="#b4">[5]</ref>, SP (sequence pair) <ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref>, BSG (bounded sliceline grid) <ref type="bibr" target="#b8">[9]</ref>, CBL (corner block list) <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref>, TCG (transitive closure graph) <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b12">13]</ref>, CS (corner sequence) <ref type="bibr" target="#b13">[14]</ref>, etc. The key aspect of deterministic algorithms is to determine the packing rules, such as the less flexibility first principle <ref type="bibr" target="#b14">[15]</ref>. In addition, a number of effective quasi-human heuristic algorithms is proposed <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b16">17]</ref>.</p><p>Inspired by the above approaches, a new heuristic rectangle packing algorithm (HRP) is proposed in this paper. The objective is to maximize the area usage of the box. The key issue of this algorithm is that the rectangle packed into the box always occupies a corner, even a cave, where possible. In this way, the rectangles will be close to each other wisely, and the spare space is decreased. Compared with those in literature, the results from HRP are greatly improved. Of the 21 rectangle-packing instances provided by Hopper and Turton <ref type="bibr" target="#b1">[2]</ref>, 16 achieved optimum solutions by HRP and 2 achieved optimum solutions by algorithm in <ref type="bibr" target="#b14">[15]</ref>. Experimental results show that the HRP is rather efficient in solving the rectangle packing problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Problem description</head><p>An empty box B 0 of width w 0 and height h 0 is given. And there is a series of rectangles R i (i = 1, 2, . . . , n) of width w i and height h i . In the plane rectangular coordinates, the bottom left of the box is placed at (0, 0) with its four sides parallel to Xand Y -axis, respectively. The objective is to maximize the area usage of the box, that is, to maximize the total area of the rectangles which have already been packed into the box. The constraints for packing rectangles are as follows:</p><p>1. Each edge of a rectangle should be parallel to an edge of the box. 2. There should be no overlapping for any two rectangles, i.e., the overlapping area is zero. This version of packing is also known as "knapsack packing" since a subset of the available rectangles is so packed as to maximize the area used.</p><p>To describe the mathematical formulation, we give several notes about the problem.</p><p>1. We use z i to denote whether the rectangle R i is packed in or not. z i = 1 if the rectangle R i has been packed into the box, whereas z i = 0 if it remains outside the box. 2. The bottom left and top right coordinates of rectangle R i are (x li , y li ) and (x ri , y ri ), respectively.</p><p>The mathematical formulation can be stated as follows:</p><formula xml:id="formula_0">maximize n i=1 w i h i z i (1)</formula><p>subject to max[x lix rj , x l jx ri , y liy rj , y ljy ri ]z i z j 0, i,j = 1, 2, . . . , n, i = j , (2)</p><formula xml:id="formula_1">(x ri -x li = w i ) ∧ (y ri -y li = h i ) or (x ri -x li = h i ) ∧ (y ri -y li = w i ), i = 1, 2, . . . , n,<label>(3)</label></formula><p>0 x li w 0 , 0 x ri w 0 and 0 y li h 0 , 0 y ri h 0 , i = 1, 2, . . . , n, (4)</p><formula xml:id="formula_2">z i ∈ {0, 1}, i = 1, 2, . . . , n.<label>(5)</label></formula><p>Eq. ( <ref type="formula">2</ref>) implies there is no overlapping between two rectangles R i and R j ; (3) implies R i is located horizontally or vertically; (4) implies R i is completely in the box B 0 . Note that, if rectangle R i is not packed in (z i = 0), constraint (2) is automatically satisfied. For more details of mathematical formulation, the reader is referred to <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Description of the algorithm</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Main idea</head><p>If some rectangles have been packed into the box without overlapping, the question is which one is the best candidate of the remainder, and which position is the best one to be filled? In this paper, we pack the rectangle according to the following packing principle: the rectangle to be packed into the box always occupies a corner, and the caving degree of the packing action should be as large as possible. So, the rectangles are close to each other wisely, and the area usage of the box improves consequently. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Fundamental conceptions and strategies</head><p>(1) Corner-occupying action (COA): A packing action is called a corner-occupying action (COA), 1 if the rectangle to be packed touches two previously packed rectangles including the box, 2 (we can regard the 4 sides of the box as 4 rectangles of very small height which have already been put into the box at the original time) and the touching lengths are longer than zero. The rectangle to be packed occupies a corner formed by those two previously packed rectangles. A COA is called a feasible one, if the rectangle to be packed does not overlap any previously packed rectangle nor exceeds the box boundary. So, if a rectangle is packed into the box according to a feasible COA, all the constraints on packing are satisfied. We use tuple (x, y, Ori, R) to represent a COA, where R is the rectangle related to the corresponding COA, x and y are the coordinates of the bottom left of the rectangle R, Ori is the packing orientation (Ori = 0 if packed horizontally, while Ori = 1 if packed vertically). For instance, in Fig. <ref type="figure" target="#fig_0">1</ref>, the shadowy rectangles have been packed, and the rectangle marked "1" is outside the box. The packing action is a feasible COA, if rectangle "1" is situated at place A, B, C or D; it is not a COA if situated at place E or F.</p><p>In particular, a COA is called a cave-occupying action, if the rectangle related to this COA not only occupies a corner, but also touches some other previously packed rectangles including the box. For instance, in Fig. <ref type="figure" target="#fig_0">1</ref>, if rectangle "1" is situated at place A, it occupies the corner formed by rectangles a and b. Furthermore, it touches rectangle c. Thus, rectangle "1" occupies a cave formed by rectangles a, b and c, and this COA for packing rectangle "1" is a cave-occupying action.</p><p>(2) Configuration: Fig. <ref type="figure">2</ref> shows a configuration. Some rectangles have been packed into the box without overlapping and some remain outside the box. A configuration is called an initial one if there is no rectangle in the box. A configuration is called an end one if all n rectangles have already been packed into the box without overlapping or, none of the remaining rectangles can be packed in. 1 COA is a developed form of corner occupying packing move (COPM) <ref type="bibr" target="#b14">[15]</ref>. The scope of COA is wider than that of COPM, that is, a COPM must be a COA, but a COA may not be a COPM, e.g., in Fig. <ref type="figure" target="#fig_0">1</ref>, if rectangle "1" is situated at place B, the packing action is a COA, but not a COPM. 2 The principle of packing a rectangle to touch two previously packed rectangles is called gapless packing or normalized packing <ref type="bibr" target="#b19">[20]</ref>. (3) Distance between two rectangles: For two given rectangles R i and R j , the distance d ij between them can be defined as</p><formula xml:id="formula_3">d ij = max |x ci -x cj | - W i + W j 2 , 0 + max |y ci -y cj | - H i + H j 2 , 0 ,<label>(6)</label></formula><p>where (x ci , y ci ) and (x cj , y cj ) are the central coordinates of the rectangles R i and R j , respectively.</p><formula xml:id="formula_4">W i = x ri -x li , H i = y ri -y li , W j = x rj -x lj , H j = y rj -y lj ,</formula><p>where (x li , y li ) and (x ri , y ri ) are the coordinates of the bottom left and top right of the rectangle R i , respectively. (x lj , y lj ) and (x rj , y rj ) are the coordinates of the bottom left and top right of the rectangle R j , respectively. This distance is an extension of Manhattan distance between two points. For instance, as shown in Fig. <ref type="figure">3a-c</ref>, the distance between two rectangles is zero, l and l 1 + l 2 , respectively. (4) Distance between one rectangle and several rectangles: For a given rectangle R and a set of rectangles {R i | i = 1, 2, . . . , m}, let the distance between R and R i be d i (i = 1, 2, . . . , m). The distance between rectangle R and m rectangles R 1 , R 2 , . . . , R m is defined as min i∈{1,2,3,...,m} (d i ). For instance, as shown in Fig. <ref type="figure">4</ref>, the distance between rectangle a and rectangles b, c, d is l 1 + l 2 .</p><p>(5) Caving degree of COA and maximum caving degree first strategy: As shown in Fig. <ref type="figure">5</ref>, rectangle R i is packed into the box according to a feasible COA, and the distance between rectangle R i and all the previously packed rectangles (including the box but excluding the rectangles a and b that form this corner) is d i , the caving degree C i of this COA can be defined as</p><formula xml:id="formula_5">C i = 1 - d i √ w i h i ,<label>(7)</label></formula><p>where w i and h i are the width and height of R i , respectively. Actually, the caving degree reflects the nearness between the rectangle to be packed and its nearest rectangle (excluding the rectangles that form the corner). According to the definition, the caving degree of a COA is no greater than 1. In particular, it equals 1 when the corresponding rectangle occupies a cave formed by three previously packed rectangles; it may also be smaller than zero when d i &gt; √ w i h i . In the packing process, we always select the COA with the largest caving degree, and pack the corresponding rectangle into the box in the corresponding position and orientation.</p><p>For instance, in Fig. <ref type="figure">6</ref>, the dimensions of rectangles a, b, c, d and the box are (2, 6), (2, 2), (1, 4), <ref type="bibr" target="#b2">(3,</ref><ref type="bibr" target="#b2">3)</ref> and <ref type="bibr" target="#b14">(15,</ref><ref type="bibr" target="#b12">13)</ref>, respectively. The rectangles a, b, c have been packed in, and the rectangle d is outside the box. If rectangle d is packed at the corner formed by rectangle c and one side of the box, the distance between rectangle d and its nearest rectangle b is 2, then the caving degree of this COA is equal to 1 -2 √ 3×3 = 1  3 . If rectangle d is packed at the corner formed by rectangles a and b, it not only occupies the corner formed by a and b, but also touches rectangle c. So, the nearest rectangle to d (excluding a and b) is c, then the caving degree of the corner-occupying action (to occupy the corner formed by a and b) is equal to 1 -0 √ 3×3 = 1. Similarly, the caving degree for the COA to occupy the corner formed by b and c is also equal to 1. ( <ref type="formula" target="#formula_3">6</ref>) Aspect ratio of a rectangle: For a given rectangle R i of width w i and height h i , the aspect ratio r i of R i can be defined as</p><formula xml:id="formula_6">r i = max(w i , h i )/ min(w i , h i ). (<label>8</label></formula><formula xml:id="formula_7">)</formula><p>In the packing process, if there are multiple COAs with equal and largest caving degree, we select such a COA whose corresponding rectangle has the largest aspect ratio. For example, in Fig. <ref type="figure">7</ref>, the aspect ratios of rectangles a and b are 2 and 1, respectively. The caving degree is equal to 1 if rectangle a is packed at place A, and it is also equal to 1 if rectangle b is packed at place B. We pack rectangle a at place A since the aspect ratio of rectangle a is larger. ( <ref type="formula" target="#formula_5">7</ref>) Precedence of point: Let P 1 (x 1 , y 1 ) and P 2 (x 2 , y 2 ) be two points in the plane rectangular coordinates oxy, P 1 has precedence over P 2 if x 1 &lt; x 2 , or if x 1 = x 2 and y 1 &lt; y 2 .</p><p>(8) Area usage of the box area usage = the total area of the rectangles packed in the box area of the box ( <ref type="formula">9</ref>)</p><formula xml:id="formula_8">c a b d c 1 c 2 c 3 c 4 R n+1 R n+4 R n+2 R n+3</formula><p>Fig. <ref type="figure">8</ref>.</p><formula xml:id="formula_9">c a b d c c 1 c 2 c 3 c 4 c 5 c 6 R n+1 R n+4 R n+2 R n+3 c 7 c 8</formula><p>Fig. <ref type="figure">9</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Sketch of the algorithm</head><p>(1) Find possible corners and delete unavailable corners: We regard the four sides of the box as four rectangles of very small heights R n+1 , R n+2 , R n+3 , R n+4 , and use tuple (x, y, shape, R c1 , R c2 ) to represent a corner formed by rectangles R c1 and R c2 (Note that the rectangles R c1 and R c2 are not necessarily touching each other), Where x and y are xand y-coordinate of the corner, respectively, and shape is the shape of the corner (there are four possible shapes:</p><p>, , , ). When a rectangle R is packed into the box, the corners that are no longer available will be deleted and the new available corners formed by rectangle R and previously packed rectangles will be added. All corners formed by two packed rectangles can be found by using the relationship between two rectangles. The details for finding these corners are omitted here for space reasons. Readers are referred to <ref type="bibr" target="#b14">[15]</ref>.</p><p>For example, Fig. <ref type="figure">8</ref> illustrates an instance of four rectangles, rectangles a and b being packed. Before rectangles c and d are packed, there are four corners, denoted by c 1 , c 2 , c 3 and c 4 . After rectangle c is packed at the corner c 1 , as shown in Fig. <ref type="figure">9</ref> , corners c 1 and c 2 are no longer available because none of the rectangles outside the box can be packed at corner c 1 or c 2 without overlapping the previously packed rectangles. On the other hand, two new available corners c 5 and c 6 will be added. Corners c 7 and c 8 are unavailable.</p><p>(2) Find all feasible positions for each unpacked rectangle: For each unpacked rectangle, we pseudo-pack it horizontally and vertically at all corners to find all feasible positions (COAs). By "pseudo-pack" we mean the rectangle is packed temporarily and will be removed from the box in the future. Details for finding the feasible positions are omitted here, readers are referred to <ref type="bibr" target="#b14">[15]</ref>. Fig. <ref type="figure">8</ref> illustrates the feasible positions of unpacked rectangles. For rectangle c, it can be packed horizontally and vertically at each of the corners c 1 , c 2 , c 3 and c 4 . So, there are 8 feasible positions (i.e., 8 COAs) for rectangle c to pack. For rectangle d, similarly, there are also 8 feasible positions (8 COAs) to pack.</p><p>(3) Pack a rectangle: Under the current configuration, we enumerate all feasible COAs and calculate the caving degree for each of them. Then select the COA with the largest caving degree and pack the corresponding rectangle into the box in the corresponding position and orientation, until no rectangle remains outside the box or, none of the remaining rectangles can be packed in.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Else</head><p>Record the area usage of the box as the score of the corresponding COA. Update the corners using the method described in Section 3.3 <ref type="bibr" target="#b0">(1)</ref>. Enumerate all feasible COAs under the current configuration. Loop Output the total area of the packed rectangles, area usage and layout. End</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Experimental results</head><p>The basic algorithm A 0 and HRP are implemented by C#.net programming language running on an IBM notebook PC with 2.0 GHz processor and 256 MB memory. All 21 rectangle-packing instances provided by Hopper and Turton <ref type="bibr" target="#b1">[2]</ref> are used in the experiments. For each instance, the box width is given and, the height needs to be determined. For each instance, the optimal height is known and the layout is perfect, that is, all rectangles are packed into the box without overlapping and the area usage of the box is 100%. For more details of these 21 instances, see Ref. <ref type="bibr" target="#b1">[2]</ref>.</p><p>Refs. <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b14">15]</ref> reflect the most advanced algorithms that have been published so far. Algorithm in <ref type="bibr" target="#b14">[15]</ref> is based on the concept of flexibility. SA + BLF <ref type="bibr" target="#b1">[2]</ref> means simulated annealing+ bottom left first and GA + BLF <ref type="bibr" target="#b1">[2]</ref> means genetic algorithm+ bottom left first. Comparisons between SA+BLF, GA+BLF, the algorithm in <ref type="bibr" target="#b14">[15]</ref>, basic algorithm A 0 and HRP are shown in Tables <ref type="table">1</ref> and<ref type="table">2</ref>. The runtime listed in the tables is that of the corresponding computer used. As an example, the layouts of instances 1, 4, 7, 10, 13 and 17 achieved by HRP are shown in Fig. <ref type="figure" target="#fig_0">10</ref>.</p><p>For 21 rectangle-packing instances provided by Hopper and Turton <ref type="bibr" target="#b1">[2]</ref>, let the box height be equal to the optimal height. The area usage of the box of each instance is obtained by running HRP. 16 of the 21 instances achieved optimum solutions, i.e., all rectangles are packed into the box without overlapping and the area usage of the box is equal to 100%. 2 instances achieved optimum solutions in <ref type="bibr" target="#b14">[15]</ref> (the computer is SUN Sparc20/71 with 71 MHz SuperSparc CPU and 64 MB RAM<ref type="foot" target="#foot_0">3</ref> ). Table <ref type="table">1</ref> shows the comparisons of the utilized area, the unutilized area and the runtime of 21 instances between the algorithm in <ref type="bibr" target="#b14">[15]</ref>, basic algorithm A 0 and HRP, where the runtime listed is the value of a single run. From Table <ref type="table">1</ref>, we can see that the runtime of some larger instances is less than that of some smaller instances. This is because for HRP the Strengthened program terminates successfully while all the remaining rectangles have been packed into the box after Calling Greedy packing procedure.</p><p>The algorithms mentioned in this paper can also be applied to the strip packing problem. For a given instance, if there are some rectangles which can not be packed into the current box, we may increase the box height and reapply the algorithm until all rectangles are packed into the box. For one algorithm and one instance we may use the so-called "relative distance" 100(produced heightoptimal height)/optimal height</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>A new heuristic rectangle packing algorithm is proposed based on the concept of caving degree of a corner-occupying action. High area usage is obtained within reasonable runtime. 16 of 21 instances provided by Hopper and Turton achieved optimum solutions with it. The experimental results demonstrate that this algorithm is rather efficient in solving the rectangle packing problem.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Corner-occupying action.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>2 Fig. 3 .Fig. 4 .Fig. 5 .</head><label>2345</label><figDesc>Fig. 3. Distance between two rectangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 6 .Fig. 7 .</head><label>67</label><figDesc>Fig.6. An example for caving degree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Remove all pseudo-packed rectangles from the box.</figDesc><table><row><cell>Endif</cell></row><row><cell>EndFor</cell></row><row><cell>Select COA with the highest score.</cell></row><row><cell>If there are multiple COAs with the highest score then</cell></row><row><cell>Select COA with the largest caving degree.</cell></row><row><cell>If there are multiple COAs with the largest caving degree then</cell></row><row><cell>Select a single COA according to the selecting order ((a) to (d) in Section 3.3 (3)).</cell></row><row><cell>Endif</cell></row><row><cell>Endif</cell></row><row><cell>Pack the corresponding rectangle into the box according to the selected COA and obtain a new</cell></row><row><cell>configuration. Let k ⇐ k + 1.</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0"><p>The computer used by<ref type="bibr" target="#b14">[15]</ref> is about 30 times slower than the computer used by us.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>The computer used by SA+BLF and GA+BLF is about 10 times slower than the computer used by us.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>In literature, the former authors naturally chose three instances as a group. The scale of each instance in a group is almost the same.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>Thanks are due to the anonymous referees for many instructive suggestions. This work was partially supported by National Natural Science Foundation of China under Grant no. 10471051 and by NKBRPC (2004CB318000).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Note that, if there are multiple COAs with equal and largest caving degree then select a single COA with a deterministic way according to the following selecting order.</p><p>(a) Select the COA with the largest aspect ratio of the corresponding rectangle. (b) Select the COA with the highest precedence of the bottom left of the corresponding rectangle. (c) Select the COA with the smallest index of the corresponding rectangle. (d) Select the COA with the corresponding rectangle packed horizontally, if both the horizontal and vertical packings are feasible.</p><p>Actually, above text describes a deterministic greedy packing algorithm. We call it basic algorithm A 0 . On the basis of A 0 , we introduce the backtracking process, and develop A 0 into a new algorithm A 1 , i.e., algorithm HRP.   to measure the quality of the produced solution. Comparisons of the relative distance and the runtime between SA+BLF, GA+BLF, 4 basic algorithm A 0 and HRP are shown in Table <ref type="table">2</ref>. The relative distance and runtime listed are the average values of three instances. 5 For example, as shown in column 2 of Table <ref type="table">2</ref>, the relative distance and runtime are the average values of instances 1, 2 and 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The algorithm</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A genetic algorithm for a 2D industrial packing problem</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Turton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Industrial Engineering</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="375" to="378" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An empirical investigation of meta-heuristic and heuristic algorithm for a 2D packing problem</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Turton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">128</biblScope>
			<biblScope unit="page" from="34" to="57" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An O-tree representation of non-slicing floorplans and its applications</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Yoshimura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DAC</title>
		<imprint>
			<biblScope unit="page" from="268" to="273" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An enhanced perturbing algorithm for floorplan design using the O-tree representation</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Yoshimura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ISPD</title>
		<imprint>
			<biblScope unit="page" from="168" to="173" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">B*-tree: a new representation for non-slicing floorplans</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DAC</title>
		<imprint>
			<biblScope unit="page" from="458" to="463" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">VLSI module placement based on rectangle-packing by the sequence pair</title>
		<author>
			<persName><forename type="first">H</forename><surname>Murata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Fujiyoshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nakatake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kajitani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1518" to="1524" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">FAST-SP: a fast algorithm for block placement based on sequence pair</title>
		<author>
			<persName><forename type="first">X</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">F</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ASP-DAC</title>
		<imprint>
			<biblScope unit="page" from="521" to="526" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Denser placements in VLSI design obtained in O</title>
		<author>
			<persName><forename type="first">D</forename><surname>Pisinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFORMS Journal on Computing</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>in press</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Module placement on BSG-structure and IC layout application</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nakatake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Murata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Fujiyoshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kajitani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on Computer Aided Design</title>
		<meeting>International Conference on Computer Aided Design</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="484" to="490" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Corner block list: an effective and efficient topological representation of non-slicing floorplan</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">L</forename><surname>Hong</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>IEEE</publisher>
			<biblScope unit="page" from="8" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Stairway compaction using corner block list and its applications with rectilinear blocks</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th International Conference on VLSI Design</title>
		<meeting>the 15th International Conference on VLSI Design</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">TCG: a transitive closure graph-based representation for non-slicing floorplans</title>
		<author>
			<persName><forename type="first">J-M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-W</forename><surname>Chang</surname></persName>
		</author>
		<editor>DAC</editor>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="764" to="769" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">TCG-S: orthogonal coupling of P*-admissible representations for general floorplans</title>
		<author>
			<persName><forename type="first">J-M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-W</forename><surname>Chang</surname></persName>
		</author>
		<editor>DAC</editor>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="842" to="847" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Corner sequence-a P-admissible floorplan representation with a worst case linear-time packing scheme</title>
		<author>
			<persName><forename type="first">J-M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S-P</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans on Very Large Scale Integration Systems</title>
		<imprint>
			<biblScope unit="page" from="679" to="686" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An effective quasi-human based heuristic for solving the rectangle packing problem</title>
		<author>
			<persName><forename type="first">Y-L</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Q</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C-K</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">141</biblScope>
			<biblScope unit="page" from="341" to="358" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The quasi-physical and quasi-sociological algorithm solar for solving SAT problem</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Q</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science in China, Series E (Technological Sciences)</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="179" to="186" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Two personification strategies for solving circles packing problem</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Q</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science in China, Series E (Technological Sciences)</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="595" to="602" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An analytical model for the container loading problem</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">S</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="68" to="76" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">The two-dimensional bin packing problem with variable bin sizes and costs</title>
		<author>
			<persName><forename type="first">D</forename><surname>Pisinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Sigurd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Optimization</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="154" to="167" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">An exact algorithm for higher-dimensional orthogonal packing</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schepers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research</title>
		<imprint/>
	</monogr>
	<note>in press</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
