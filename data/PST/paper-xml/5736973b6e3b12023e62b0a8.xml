<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PTE: Predictive Text Embedding through Large-scale Heterogeneous Text Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2015-08-02">2 Aug 2015</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jian</forename><surname>Tang</surname></persName>
							<email>jiatang@microsoft.com</email>
						</author>
						<author>
							<persName><forename type="first">Meng</forename><surname>Qu</surname></persName>
							<email>mnqu@pku.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Qiaozhu</forename><surname>Mei</surname></persName>
							<email>qmei@umich.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Microsoft Research Asia</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Peking University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Michigan</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Microsoft Research Asia</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">PTE: Predictive Text Embedding through Large-scale Heterogeneous Text Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2015-08-02">2 Aug 2015</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/2783258.2783307</idno>
					<idno type="arXiv">arXiv:1508.00200v1[cs.CL]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T13:03+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms</term>
					<term>Experimentation predictive text embedding</term>
					<term>representation learning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Unsupervised text embedding methods, such as Skip-gram and Paragraph Vector, have been attracting increasing attention due to their simplicity, scalability, and effectiveness. However, comparing to sophisticated deep learning architectures such as convolutional neural networks, these methods usually yield inferior results when applied to particular machine learning tasks. One possible reason is that these text embedding methods learn the representation of text in a fully unsupervised way, without leveraging the labeled information available for the task. Although the low dimensional representations learned are applicable to many different tasks, they are not particularly tuned for any task. In this paper, we fill this gap by proposing a semi-supervised representation learning method for text data, which we call the predictive text embedding (PTE). Predictive text embedding utilizes both labeled and unlabeled data to learn the embedding of text. The labeled information and different levels of word co-occurrence information are first represented as a large-scale heterogeneous text network, which is then embedded into a low dimensional space through a principled and efficient algorithm. This low dimensional embedding not only preserves the semantic closeness of words and documents, but also has a strong predictive power for the particular task. Compared to recent supervised approaches based on convolutional neural networks, predictive text embedding is comparable or more effective, much more efficient, and has fewer parameters to tune.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Learning a meaningful and effective representation of text, e.g., for words and documents, is a critical prerequisite for many machine learning tasks such as text classification, clustering and retrieval. Traditionally, every word is represented independently to each other, and each document is represented as a "bag-of-words". However, both representations suffer from problems such as data sparsity, polysemy, and synonymy, as the semantic relatedness between different words are commonly ignored.</p><p>Distributed representations of words and documents <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b9">10]</ref> effectively address this problem through representing words and documents in low-dimensional spaces, in which similar words and documents are embedded closely to each other. The essential idea of these approaches comes from the distributional hypothesis that "you shall know a word by the company it keeps" (Firth, J.R. 1957:11) <ref type="bibr" target="#b6">[7]</ref>. Mikilov et al. proposed a simple and elegant word embedding model called the Skip-gram <ref type="bibr" target="#b17">[18]</ref>, which uses the embedding of the target word to predict the embedding of each individual context word in a local window. Le and Mikolov further extended this idea and proposed the Paragraph Vectors <ref type="bibr" target="#b9">[10]</ref> in order to embed arbitrary pieces of text, e.g., sentences and documents. The basic idea is to use the embeddings of sentences/documents to predict the embeddings of words in the sentences/documents. Comparing to other classical approaches that also utilize the distributional similarity of word context, such as the Brown clustering or nearest neighbors, these text embedding approaches have been proved to be quite efficient, scaling up to millions of documents on a single machine <ref type="bibr" target="#b17">[18]</ref>.</p><p>Because of the unsupervised learning process, the representations learned through these text embedding models are general enough and can be applied to a variety of tasks such as classification, clustering and ranking. However, when compared end-to-end with sophisticated deep learning approaches such as the convolutional neural networks (CNNs) <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8]</ref>, the performance of text embeddings usually falls short on specific tasks <ref type="bibr" target="#b29">[30]</ref>. This is perhaps not surprising as the deep neural networks fully leverage labeled information that is available for a task when they learn the representations of the data. Most text embedding methods are not able to consider labeled information when learning the representations; the labels only kick in later when a classifier is trained using the representations as features. In other words, unsuper-Figure <ref type="figure">1</ref>: Illustration of converting a partially labeled text corpora to a heterogeneous text network. The word-word cooccurrence network and word-document network encode the unsupervised information, capturing the local context-level and document-level word co-occurrences respectively; the word-label network encodes the supervised information, capturing the class-level word co-occurrences. vised text embeddings are generalizable for different tasks but have a weaker predictive power for a particular task.</p><p>Despite this deficiency, there are still considerable advantages of text embedding approaches comparing to deep neural networks. First, the training of deep neural networks, especially convolutional neural networks is computational intensive, which usually requires multiple GPUs or clusters of CPUs when processing a large amount of data; second, convolutional neural networks usually assume the availability of a large amount of labeled examples which is unrealistic in many tasks. The easily obtainable unlabeled data are usually used through an indirect way of pre-training; third, the training of CNNs requires exhaustive tuning of many parameters, which is very time consuming even for experts and infeasible for non-experts. On the other hand, text embedding methods like Skip-gram are much more efficient, are much easier to tune, and naturally accommodate unlabeled data.</p><p>In this paper, we fill this gap by proposing the predictive text embedding (PTE), which adapts the advantages of unsupervised text embeddings but naturally utilizes labeled information in representation learning. With predictive text embedding, an effective low dimensional representation is learned jointly from limited labeled examples and a large amount of unlabeled examples. Comparing to unsupervised embeddings, this representation is optimized for particular tasks like what convolutional neural networks do (i.e., the representation has strong predictive power for the particular classification task).</p><p>The proposed method naturally extends our previous work of unsupervised information network embedding <ref type="bibr" target="#b26">[27]</ref> and first learns a low dimensional embedding for words through a heterogeneous text network. The network encodes different levels of co-occurrence information between words and words, words and documents, and words and labels. The network is embedded into a low dimensional vector space that preserves the second-order proximity <ref type="bibr" target="#b26">[27]</ref> between the vertices in the network. The representation of an arbitrary piece of text (e.g., a sentence or a document) can be simply inferred as the average of the word representations, which turns out to be quite effective. The whole optimization process remains very efficient, which scales up to millions of documents and billions of tokens on a single machine.</p><p>We conduct extensive experiments with real-world text corpora, including both long and short documents. Experimental results show that the predictive text embeddings sig-nificantly outperform the state-of-the-art unsupervised embeddings in various text classification tasks. Compared endto-end with convolutional neural networks for text classification <ref type="bibr" target="#b7">[8]</ref>, predictive text embedding outperforms on long documents and generates comparable results on short documents. PTE enjoys various advantages over convolutional neural networks as it is much more efficient, accommodates large-scale unlabeled data effectively, and is less sensitive to model parameters. We believe our exploration points to a direction of learning text embeddings that could compete head-to-head with deep neural networks in particular tasks.</p><p>To summarize, we make the following contributions:</p><p>unsupervised approaches normally learn the embeddings of words and/or documents by utilizing word co-occurrences in the local context (e.g., Skip-gram <ref type="bibr" target="#b17">[18]</ref>) or at document level (e.g., paragraph vectors <ref type="bibr" target="#b9">[10]</ref>). These approaches are quite efficient, scaling up to millions of documents. The supervised approaches <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b5">6]</ref> are usually based on deep neural network architectures, such as recursive neural tensor networks (RNTNs) <ref type="bibr" target="#b23">[24]</ref> or convolutional neural networks (CNNs) <ref type="bibr" target="#b10">[11]</ref>. In RNTNs, each word is embedded into a low dimensional vector, and the embeddings of the phrases are recursively learned by applying the same tensor-based composition function over the sub-phrases or words in a parse tree. In CNNs <ref type="bibr" target="#b4">[5]</ref>, each word is also represented with a vector, and the same convolutional kernel is applied over the context windows in different positions of the sentences, followed by a max-pooling and fully connected layer.</p><p>The major difference between these two categories of approaches is how they utilize labeled and unlabeled information in the representation learning phase. The unsupervised methods do not include labeled information when learning the representations and only use the labels to train the classifier after the data is transformed into the learned representation. RNTNs and CNNs incorporate the labels directly into representation learning, so the learned representations are particularly tuned for the classification task. To incorporate unlabeled examples, however, these neural nets usually have to use an indirect approach such as to pretrain the word embeddings with unsupervised approaches. Comparing to these two lines of work, PTE learns the text vectors in a semi-supervised way -the representation learning algorithm directly utilizes both labeled information and large-scale unlabeled data.</p><p>Another piece of work similar to predictive word embedding is <ref type="bibr" target="#b14">[15]</ref>, which learns word vectors that are particularly tuned for sentiment analysis. However, their approach does not scale to millions of documents and does not generalize to other classification tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Information Network Embedding</head><p>Our work is also related to the problem of network/graph embedding as the word representations of PTE are learned through a heterogeneous text network. Embedding networks/graphs into low dimensional spaces is very useful in a variety of applications, e.g., node classification <ref type="bibr" target="#b2">[3]</ref> and link prediction <ref type="bibr" target="#b12">[13]</ref>. Classical graph embedding algorithms such as MDS <ref type="bibr" target="#b8">[9]</ref>, IsoMap <ref type="bibr" target="#b27">[28]</ref> and Laplacian eigenmap <ref type="bibr" target="#b0">[1]</ref> are not applicable for embedding large-scale networks that contain millions of vertices and billions of edges. There are some recent work attempting to embed very large realworld networks. Perozzi et al. <ref type="bibr" target="#b19">[20]</ref> proposed a network embedding model called the "DeepWalk," which uses truncated random walks on the networks and is only applicable for networks with binary edges. Our previous work proposed a novel large-scale network embedding model called the "LINE," which is suitable for arbitrary types of information networks: undirected or directed, binary or weighted <ref type="bibr" target="#b26">[27]</ref>. The LINE model optimizes an objective function which aims to preserve both the local and global network structures. Both Deepwalk and LINE are unsupervised and only handle homogeneous networks. The network embedding algorithm used by PTE extends the LINE to deal with heterogeneous networks, in which multiple types of vertices (including the class labels) and edges exist.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PROBLEM DEFINITION</head><p>Let us begin with formally defining the problem of predictive text embedding through heterogeneous text networks. Comparing to unsupervised text embedding approaches including Skip-gram and Paragraph Vectors that learn general semantic representations of text, our goal is to learn a representation of text that is optimized for a given text classification task. In other words, we anticipate the text embedding to have a strong predictive power of the performance of the given task. The basic idea is to incorporate both the labeled and unlabeled information when learning the text embeddings. To achieve this, it is desirable to first have an unified representation to encode both types of information. In this paper, we propose different types of networks to achieve this, including word-word co-occurrence networks, word-document networks, and word-label networks.</p><p>Definition 1. (Word-Word Network) Word-word cooccurrence network, denoted as Gww = (V, Eww), captures the word co-occurrence information in local contexts of the unlabeled data. V is a vocabulary of words and Eww is the set of edges between words. The weight wij of the edge between word vi and vj is defined as the number of times that the two words co-occur in the context windows of a given window size.</p><p>The word-word network captures the word co-occurrences in local contexts, which is the essential information used by existing word embedding approaches such as Skip-gram. Beyond the local contexts, word co-occurrence at the document level is also widely explored in classical text representations such as statistical topic models, e.g., the latent Dirichlet allocation <ref type="bibr" target="#b3">[4]</ref>. To capture the document-level word cooccurrences, we introduce another network, word-document network, defined as below: Definition 2. (Word-Document Network) Worddocument network, denoted as G wd = (V ∪ D, E wd ), is a bipartite network where D is a set of documents and V is a set of words. E wd is the set of edges between words and documents. The weight wij between word vi and document dj is simply defined as the number of times vi appears in document dj.</p><p>The word-word and word-document networks encode the unlabeled information in large-scale corpora, capturing word co-occurrences at both the local context level and the document level. To encode the labeled information, we introduce the word-label network, which captures word co-occurrences at category-level . Definition 3. (Word-Label Network) Word-label network, denoted as G wl = (V ∪ L, E wl ), is a bipartite network that captures category-level word co-occurrences. L is a set of class labels and V a set of words. E wl is a set of edges between words and classes. The weight wij of the edge between word vi and class cj is defined as: wij = (d:l d =j) n di , where n di is the term frequency of word vi in document d, and l d is the class label of document d.</p><p>The three types of networks above can be further integrated into one heterogeneous text network. Note that the definition of a heterogeneous text network can be generalized to integrate other types of networks such as word-sentence, word-paragraph, and document-label networks. In this work we are using the three types of networks (word-word, word-document, and word-label) as an illustrative example. We particularly focus on word networks in order to first represent words into low dimensional spaces. The representation of other text units (e.g., sentences or paragraphs) can be then computed through aggregating the word representations.</p><p>Finally, we formally define the problem of predictive text embedding as follows:</p><p>Definition 5. (Predictive Text Embedding) Given a large collection of text data with unlabeled and labeled information, the problem of predictive text embedding aims to learn low dimensional representations of words by embedding the heterogeneous text network constructed from the collection into a low dimensional vector space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">PREDICTIVE TEXT EMBEDDING</head><p>In this section, we introduce the proposed method that learns predictive text embedding through heterogeneous text networks. Our method first learns vector representations of words by embedding the heterogeneous text networks constructed from free text into a low dimensional space, and then infer text embeddings based on the learned word vectors. As the heterogeneous text network is composed of three bipartite networks, we first introduce an approach for embedding individual bipartite networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Bipartite Network Embedding</head><p>In our previous work, we introduced the LINE model to learn the embedding of large-scale information networks <ref type="bibr" target="#b26">[27]</ref>. LINE is mainly designed for homogeneous networks, i.e., networks with the same types of nodes. LINE cannot be directly applied to heterogeneous networks as the weights on different types of edges are not comparable. Here, we first adapt the LINE model for embedding bipartite networks. The essential idea is to make use of the second-order proximity <ref type="bibr" target="#b26">[27]</ref> between vertices, which assumes vertices with similar neighbors are similar to each other and thus should be represented closely in a low dimensional space.</p><p>Given a bipartite network G = (VA ∪ VB, E), where VA and VB are two disjoint sets of vertices of different types, and E is the set of edges between them. We first define the conditional probability of vertex vi in set VA generated by vertex vj in set VB as:</p><formula xml:id="formula_0">p(vi|vj) = exp( u T i • uj) i ∈A exp( u T i • uj) , (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>where ui is the embedding vector of vertex vi in VA, and uj is the embedding vector of vertex vj in VB. For each vertex vj in VB, Eq (1) defines a conditional distribution p(•|vj) over all the vertices in the set VA; for each pair of vertices vj, v j , the second-order proximity can actually be determined by their conditional distributions p(•|vj), p(•|v j ). To preserve the second-order proximity, we can make the conditional distribution p(•|vj) be close to its empirical distribution p(•|vj), which can be achieved by minimizing the following objective function:</p><formula xml:id="formula_2">O = j∈B λjd(p(•|vj), p(•|vj)),<label>(2)</label></formula><p>where d(•, •) is the KL-divergence between two distributions, λj is the importance of vertex vj in the network, which can be set as the degree degj = i wij, and the empirical distribution can be defined as p(vi|vj) = w ij deg j . Omitting some constants, the objective function (2) can be calculated as:</p><formula xml:id="formula_3">O = − (i,j)∈E wij log p(vj|vi).<label>(3)</label></formula><p>The objective (3) can be optimized with stochastic gradient descent using the techniques of edge sampling <ref type="bibr" target="#b26">[27]</ref> and negative sampling <ref type="bibr" target="#b17">[18]</ref>. In each step, a binary edge e = (i, j) is sampled with the probability proportional to its weight wij, and meanwhile multiple negative edges (i, j) are sampled from a noise distribution pn(j). The sampling procedures address significant deficiency of stochastic gradient descent in learning network embeddings. For the detailed optimization process, readers can refer to <ref type="bibr" target="#b26">[27]</ref>.</p><p>The embeddings of the word-word, word-document, and word-label network can all be learned by the above model. Note that the word-word network is essentially a bipartitenetwork by treating each undirected edge as two directed edges, and then VA is defined as the set of the source nodes, VB as the set of target nodes. Therefore, we can define the conditional probabilities p(vi|vj), p(vi|dj) and p(vi|lj) according to equation <ref type="bibr" target="#b0">(1)</ref>, and then learn the embeddings by optimizing objective function <ref type="bibr" target="#b2">(3)</ref>. Next, we introduce our approach of embedding the heterogeneous text network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Heterogeneous Text Network Embedding</head><p>The heterogeneous text network is composed of three bipartite networks: word-word, word-document and word-label networks, where the word vertices are shared across the three networks. To learn the embeddings of the heterogeneous text network, an intuitive approach is to collectively embed the three bipartite networks, which can be achieved by minimizing the following objective function:</p><formula xml:id="formula_4">Opte = Oww + O wd + O wl ,<label>(4)</label></formula><p>where</p><formula xml:id="formula_5">Oww = − (i,j)∈Eww wij log p(vi|vj)<label>(5)</label></formula><formula xml:id="formula_6">O wd = − (i,j)∈E wd wij log p(vi|dj)<label>(6)</label></formula><formula xml:id="formula_7">O wl = − (i,j)∈E wl wij log p(vi|lj)<label>(7)</label></formula><p>The objective function (4) can be optimized in different ways, depending on how the labeled information, i.e., the word-label network, is used. One solution is to train the model with the unlabeled data (the word-word and worddocument networks) and the labeled data simultaneously.</p><p>We call this approach joint training. An alternative solution is to learn the embeddings with unlabeled data first, and then fine-tune the embeddings with the word-label network. This is inspired by the idea of pre-training and fine-tuning in the literature of deep learning <ref type="bibr" target="#b1">[2]</ref>.</p><p>In joint training, all three types of networks are used together. A straightforward solution to optimize the objective (4) is to merge the all the edges in the three sets Eww, E wd , E wl and then deploy edge sampling <ref type="bibr" target="#b26">[27]</ref>, which samples an edge for model updating in each step, with the sampling probability proportional to its weight. However, when the network is heterogeneous, the weights of the edges between different types of vertices are not comparable to each other. A more reasonable solution is to alternatively sample from the three sets of edges. We summarize the detailed training algorithm in Alg. 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1: Joint training.</head><p>Data: Gww, G wd , G wl , number of samples T , number of negative samples K. Result: word embeddings w. while iter ≤ T do</p><p>• sample an edge from Eww and draw K negative edges, and update the word embeddings;</p><p>• sample an edge from E wd and draw K negative edges, and update the word and document embeddings;</p><p>• sample an edge from E wl and draw K negative edges, and update the word and label embeddings;</p><p>end Algorithm 2: Pre-training + Fine-tuning.</p><p>Data: Gww, G wd , G wl , number of samples T , number of negative samples K. Result: word embeddings w. while iter ≤ T do</p><p>• sample an edge from Eww and draw K negative edges, and update the word embeddings;</p><p>• sample an edge from E wd and draw K negative edges, and update the word and document embeddings; end while iter ≤ T do</p><p>• sample an edge from E wl and draw K negative edges, and update the word and label embeddings;</p><p>end Similarly, we summarize the training process of pre-training and fine-tuning in Alg. 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Text Embedding</head><p>The heterogeneous text network encodes word co-occurrences at different levels, extracted from both unlabeled data and labeled information for a specific classification task. Therefore, the word representations learned by embedding the heterogeneous text network are not only more robust but also optimized for that task. Once the word vectors are learned, the representation of an arbitrary piece of text can be obtained by simply averaging the vectors of the words in that piece of text. That is, the vector representation of a piece of text d = w1w2 • • • , wn can be computed as</p><formula xml:id="formula_8">d = 1 n n i=1 ui, (<label>8</label></formula><formula xml:id="formula_9">)</formula><p>where ui is the embedding of word wi.</p><p>In fact, the average of the word embeddings is the solution to minimizing the following objective function:</p><formula xml:id="formula_10">O = n i=1 l( ui, d),<label>(9)</label></formula><p>where the loss function l(•, •) between the word embedding ui and text embedding d is specified as the Euclidean distance. Related is the inference process of paragraph vectors <ref type="bibr" target="#b9">[10]</ref>, which minimizes the same objective but with a different loss function l( ui, d) = − 1 1+exp(− u T i d) . It however does not lead to a close form solution and has to be optimized by gradient descent algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EXPERIMENTS</head><p>In this section, we move forward to evaluate the effectiveness of the proposed PTE algorithm for predictive text embedding. A variety of text classification tasks and data sets are selected for this purpose. The experiments are set up as the following.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experiment Setup</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data Sets</head><p>We select two types of text corpora, which consist of either long or short documents. Long Document Corpora: (1) 20ng, the widely used text classification data set 20newsgroup<ref type="foot" target="#foot_0">1</ref> , containing 20 categories; (2)Wiki, a snapshot of Wikipedia corpus in April 2010 containing around two million English articles. Only common words appeared in the vocabulary of wiki2010 <ref type="bibr" target="#b21">[22]</ref> are kept. We choose seven diverse categories for the classification task, including "Arts," "History," "Human," "Mathematics,""Nature,""Technology," and "Sports" from DBpedia ontology<ref type="foot" target="#foot_1">2</ref> . For each category, we randomly select 9,000 articles as labeled documents for training; (3) Imdb, a data set for sentiment classification from <ref type="bibr" target="#b14">[15]</ref> <ref type="foot" target="#foot_2">3</ref> . To avoid the distribution bias between the training and test data sets, we randomly shuffle the training and test data sets; (4) RCV1, a large benchmark corpus for text classification <ref type="bibr" target="#b11">[12]</ref> <ref type="foot" target="#foot_3">4</ref> . Four subsets including Corporate, Economics, Government and Market are extracted from the corpus. In RCV1 data sets, all the documents have already been represented as "bag-of-words," and orders between words are lost. Short Document Corpora: (1) Dblp, which contains titles of papers from the computer science bibliography <ref type="foot" target="#foot_4">5</ref> . We choose six diverse research fields for classification including "database,""artificial intelligence,""hardware,""system," "programming languages," and "theory." For each field, we select representative conferences and collect the papers published in the selected conferences as the labeled documents;</p><p>(2) Mr, a movie review data set, in which each review only contains one sentence <ref type="bibr" target="#b18">[19]</ref> 6 ; (3) Twitter, a corpus of Tweets for sentiment classification 7 , from which we randomly sampled 1,200,000 Tweets and split them into training and testing sets.</p><p>No further text normalization such as removing stop words or stemming is done on top of the original data. We summarize the detailed statistics of these data sets in Table <ref type="table" target="#tab_1">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Compared Algorithms</head><p>We compare the PTE algorithm with other representation learning algorithms for text data, including the classical "bag-of-words" representation and the state-of-the-art approaches to unsupervised and supervised text embedding.</p><p>• BOW: the classical "bag-of-words" representation. Each document is represented with a |V |-dimensional vector, in which the weight of each dimension is calculated with the TFIDF weighting <ref type="bibr" target="#b20">[21]</ref>.</p><p>• Skip-gram: the state-of-the-art word embedding model proposed by Mikolov et al. <ref type="bibr" target="#b17">[18]</ref>. For the document embedding, we simply take the average of the word embeddings as explained in Section 4.3.</p><p>• PVDBOW: the distributed bag-of-words version of paragraph vector model proposed by Le and Mikolv <ref type="bibr" target="#b9">[10]</ref>, in which the orders of words in a document are ignored.</p><p>• PVDM: the distributed memory version of paragraph vector which considers the order of the words <ref type="bibr" target="#b9">[10]</ref>.</p><p>• LINE: the large-scale information network embedding model proposed by Tang et al. <ref type="bibr" target="#b26">[27]</ref>. We use the LINE model to learn unsupervised embeddings with the wordword network, word-document network or the combination of the two networks.</p><p>• CNN: the supervised text embedding approach based on a convolutional neural network <ref type="bibr" target="#b7">[8]</ref>. Though CNN is proposed for modeling sentences, we adapt it for general word sequences including long documents. Although CNN typically works with fully labeled documents, it can also utilize unlabeled data by pre-training the model with unsupervised word embeddings, which is marked as CNN(pretrain).</p><p>• PTE: our proposed approach for learning predictive text embedding. There are different variants of PTE that use different combinations of the word-word, worddocument and word-label networks. We denote PTE(G wl ) for the version that uses the word-label network only; PTE(pretrain) learns an unsupervised embedding with the word-word and word-document networks, and then fine-tune the word embeddings with the word-label network; PTE(joint) jointly trains the heterogeneous text network composed of all the three networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classification and Parameter Settings</head><p>Once the vector representations of documents are constructed or learned, we apply the same classification process using the same training data set. In particular, all the documents in the training set are used in both the representation learning phase and the classifier learning phase. The class labels of these documents are not used in the representation learning 7 Available at http://thinknook.com/ twitter-sentiment-analysis-training-corpus-dataset-2012-09-22/ phase if an unsupervised embedding method is used; they only kick in at the classifier learning phase. The class label are used in both the representation learning phase and the classifier learning phase if a predictive embedding method is used. The test data is held-out from both phases. In the classification phase, we use the one-vs-rest logistic regression model in the LibLinear package <ref type="foot" target="#foot_6">8</ref> . The classification performance is measured with the micro-F1 and macro-F1 metrics. For Skip-gram, PVDBOW, PVDM and PTE, the mini-batch size of the stochastic gradient descent is set as 1; the learning rate is set as ρt = ρ0(1−t/T ), in which T is the total number of mini-batches or edge samples and ρ0 = 0.025; the number of negative samples is set as 5; the window size is set as 5 in Skip-gram, PVDBOW, PVDM and when constructing the word-word co-occurrence network. We use the structure of the CNN in <ref type="bibr" target="#b7">[8]</ref>, which uses one convolution layer, followed by a max-pooling layer and a fully-connected layer. Following <ref type="bibr" target="#b7">[8]</ref>, we set the window size in the convolution layer as 3 and the number of feature maps as 100. For CNN, 1% of the training data set is randomly selected as the validation data for early stopping. The dimensionality of word vectors is set as 100 by default for all the embedding models.</p><p>Note that for the PTE models, the parameters are all set as above by default on different data sets. The only parameter that needs to be tuned is the number of samples T in edge sampling, which can be safely set to be large.  <ref type="table" target="#tab_0">2</ref> on 20ng, Wiki and Imdb data sets. We first compare the performance of unsupervised embedding methods, which use either local word co-occurrences (Skip-gram, LINE(Gww)), document level word co-occurrences (PV-DBOW, LINE(G wd )), or the combination (LINE(Gww+G wd )). We can see that the LINE(G wd ) with document-level word co-occurrences performs the best among the unsupervised embeddings. The performance of PVDM is inferior to that of PVDBOW, which is different from what is reported in <ref type="bibr" target="#b9">[10]</ref>. Unfortunately we are not able to replicate their results. Similar results to ours are also reported in <ref type="bibr" target="#b13">[14]</ref>. For the results of PVDBOW on the imdb data set, our results are different from those reported in <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b15">16]</ref>. This is because their embeddings are trained on the mixture of training and test data sets while our embeddings are only trained with the training data, which we believe is a more reasonable experiment setup.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Quantitative Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Performance on Long Documents</head><p>Next we compare the performance of predictive embeddings, including different variants of CNN and PTE. When PTE is jointly trained using the heterogeneous text network or with the combination of word-document and word-label networks, it performs the best among all the approaches. All PTE approaches jointly trained with the word-label network (e.g., Gww + G wl ) outperform their corresponding unsupervised embedding approaches (e.g., Gww), which shows the power of learning predictive text embeddings with the supervision. PTE(joint) consistently outperforms PTE(G wl ), demonstrating that incorporating unlabeled information, i.e., word-word and word-document networks, also improves the quality of the embeddings. PTE(joint) also significantly outperforms PTE(pretrain). This shows that jointly training  It is interesting to observe that PTE(joint) consistently outperforms CNN. This is promising as PTE does not use a sophisticated neural network architecture. We also attempt to pre-train the CNN with the word embeddings learned by q q q q q q q q q q 0.2 0.4 (a) 20ng q q q q q q q q q q 0.2 0.4 0.6 0.8 1.0 0.70 0.75 0.80 0.85 0.90 (c) dblp q q q q q q q q q q 0.2 0.4 the LINE(G wl + G wd ) and then fine tune it with the labels. Surprisingly, the performance of CNN with pre-training significantly improves on the 20ng and imdb data sets and remains almost the same on the wiki data set. This implies that pre-training CNN with a well learned unsupervised embeddings can be very useful. However, even with pre-training the performance of CNN is still inferior to that of PTE(joint). This is probably because the PTE model can jointly train with both the unlabeled and labeled data while CNN can only utilize them separately through pre-training and fine-tuning. PTE(joint) also outperforms the classical "bag-of-words" representation even though the dimensionality of the embeddings learned by the PTE is way smaller than that of "bag-of-words."</p><formula xml:id="formula_11"># percentage of labeled data Micro−F1 q Skip−gram PTE(Gwl) CNN PTE(pretrain) CNN(pretrain) PTE(joint) NB+EM LP (b) imdb q q q q q q q q q q 0.</formula><p>Table <ref type="table" target="#tab_3">3</ref> reports the results on the RCV1 data sets. As the order between the words is lost, the embedding methods that require the word order information are not applicable. Similar results are observed. Predictive text embeddings outperform unsupervised embeddings. PTE(joint) is also much more effective than PTE(pretrain).</p><p>All the embedding approaches (except "bag-of-words") are trained with asynchronous stochastic gradient descent algorithm using 20 threads on a single machine with 1T memory, 40 CPU cores at 2.0GHZ. We compare the running time of CNN and PTE(joint) on the imdb data set. The PTE(joint) method is typically more than 10 times faster than the CNN models. When pre-trained with preexisting word embeddings, CNN converges much faster, but still more than 5 times slower than PTE(joint).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Performance on Short Documents</head><p>Table <ref type="table" target="#tab_4">4</ref> compares the performance on short documents. Among unsupervised embeddings, the LINE(Gww + G wd ), which combines the document-level and local context-level word co-occurrences, performs the best. The LINE(Gww) utilizing the local context-level word co-occurrences outperforms the LINE(G wd ) using document-level word co-occurrences, which is opposite to the observations on long documents. This is because document-level word co-occurrences suffer from the sparsity in short documents, with similar results observed in statistical topic models <ref type="bibr" target="#b25">[26]</ref>. The performance of PVDM is still inferior to that of PVDBOW, which is consistent with the results on long documents.</p><p>For predictive embeddings, the best performance is obtained by the PTE (on dblp, mr ) or CNN (on twitter). Among the PTE approaches, the predictive embeddings learned by incorporating the word-label network outperform the corresponding unsupervised embeddings, which is consistent with the results on long documents. PTE(joint) outperforms LINE(G wl ), showing the usefulness of incorporating unlabeled information. PTE(joint) also significantly outperforms the PTE(pretrain), showing the advantage of jointly training with the labeled and unlabeled data.</p><p>On the short documents, we observe that PTE(joint) does not consistently outperform the CNN. The reason is probably due to the problem of word sense ambiguity, which becomes more serious on the short documents. CNN reduces the problem of word ambiguity through using the word orders in local context in the convolutional kernels while PTE does not leverage the orders. We believe there is considerable room to improve predictive text embedding by utilizing word orders, which we leave as future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Effects of Labeled Data</head><p>We compare CNN and PTE head-to-head by varying the percentages of labeled data. We consider the cases without or with unlabeled data, mimicking the scenarios of supervised and semi-supervised learning. In the setting of semisupervised learning, we also compare with classical semisupervised approaches, Naive Bayes with EM (NB+EM) <ref type="bibr" target="#b24">[25]</ref> and label propagation (LP) <ref type="bibr" target="#b30">[31]</ref>. Fig. <ref type="figure">2</ref> reports the performance on both long and short documents. Overall, both CNNs and PTEs improve when the size of labeled data increases. In the supervised settings, i.e., between CNN and PTE(G wl ), PTE(G wl ) outperforms or is comparable to CNN on both the long and short documents. In the semi-supervised settings, i.e., between CNN(pretrain) and PTE(joint), PTE(joint) consistently outperforms CNN(pretrain), which is pre-trained with the best performing unsupervised word embeddings. The PTE(joint) also outperforms the state-of-the-art semi-supervised approaches Naive Bayes with EM and label propagation.</p><p>We also notice that when the size of labeled data is scarce, pre-training CNN with unsupervised embeddings is quite helpful, especially on the short documents. It even outperforms all PTEs when the training examples are too few. However, when the size of labeled data increases, pre-training CNN does not always improve its performance (e.g., on the dblp and mr data sets).</p><p>Note that for Skip-gram, increasing the number of labeled data in training does not further increase the performance. We also notice that when the labeled documents are too few, the performance of PTE is inferior to the Skip-gram on the dblp data set. The reason is that when the number of labeled examples is scarce, the word-label network is very noisy and PTE treats the word-label network equally to the robust word-word/word-document networks. A way to fix is to adjust the sampling probability from the word-label and word-word/word-document when the labeled data is scarce. We leave it as future work. We also analyze the performance of the CNNs and PTEs w.r.t. the size of unlabeled data. For CNN, the unlabeled data is used for pre-training while for the PTE, the unlabeled data can be used for either pre-training or jointly training. Fig. <ref type="figure" target="#fig_1">3</ref> reports the results on 20ng and dblp data sets. Due to space limitation, we omit the results on other data sets, which are similar. On 20ng, we use 10% documents as labeled while the rest is used as the unlabeled; on dblp, we randomly sample 200,000 titles of the papers published in the other conferences as the unlabeled data. We use the unsupervised embeddings (learned by LINE(Gww + G wd )) as the pre-training of CNN. We can see that the performance of both CNN and PTE improves when the size of unlabeled data increases. For PTE, the way of jointly training with the unlabeled and labeled data is much more effective than separating them into pre-training and fine-tuning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Effects of Unlabeled Data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Parameter Sensitivity</head><p>q q q q qq q qq q q q q q q q q q q q 0 200 400 600 800 0.80 0.81 0.82 0.83 0.84 #samples(*million) Micro−F1 (a) 20ng q q q q q q q q q q q q q q q q q 0 20 40 For the proposed PTE models, as mentioned previously, most of the parameters except for the number of edge samples T are not sensitive to different data sets and can be set by default. Here we analyze the performance sensitivity of PTE(joint) w.r.t the number of samples T . Fig. <ref type="figure" target="#fig_0">4</ref> reports the results on the 20ng and dblp data sets. On both data sets, we can see that when the number of samples T becomes large enough, the performance of PTE(joint) converges. Therefore, in practice, one can just set the number of samples T to be sufficiently large. A reasonable estimation of T we find in practice is several times of the number of edges in the heterogeneous text networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Document Visualization</head><p>Finally, we give an illustrative visualization of the documents in 20ng to compare the unsupervised and predictive   embeddings. We used LINE(G wd ) for the unsupervised embedding and PTE(G wl ) for the predictive embedding. Both the training and test documents are visualized. Fig. <ref type="figure">5</ref> shows the visualization results. We can see that on both training and test data sets, the predictive embedding much better distinguishes different classes than those learned by the unsupervised embedding, which intuitively shows the power of predictive embeddings on the task of text classification.</p><formula xml:id="formula_12">• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • ••• • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • −40 −<label>20</label></formula><formula xml:id="formula_13">• • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • ••• • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• •• • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • •• • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • −40 −<label>20</label></formula><formula xml:id="formula_14">• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • •• • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • −40 −20 0 20 40 −40 −20 0 20 40 (c) Test(LINE(G wd )) • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • •• • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • −</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISCUSSION AND CONCLUSION</head><p>Unsupervised embeddings. The essential information used by the unsupervised approaches is the local contextlevel or document-level word co-occurrences. On long documents, we can see that document-level word co-occurrences are more useful than the local context-level word co-occurrences, and the combination of two does not further improve the result; on short documents, the local context-level word cooccurrences are more useful than the document-level word co-occurrences, and their combination will further improve the embedding. Document-level word co-occurrences suffers from short lengths of documents. Predictive embeddings. Comparing between CNN and PTE, the CNN model seems to handle labeled information more effectively, especially on short documents. This is because CNN uses a much more complicated structure than the PTE, which in particular utilizes word orders in the local context and addresses word sense ambiguity.</p><p>Therefore, in the case when labeled data is very sparse, CNN can outperform the PTE, especially on short documents. However, this advantage is at the expense of intensive computation and exhaustive parameter tuning. On the other hand PTE is much faster and much easier to configure (with few parameters to tune). When the labeled data becomes abundant, the performance of PTE will be at least comparable and usually superior to CNN.</p><p>Compared to the CNN model, an obvious advantage of the PTE model is its capability of being able to jointly train with both the unlabeled and labeled data. CNN can only make use of unlabeled data through an indirect way, i.e., pre-training with the unsupervised word embeddings learned from other methods. Pre-training may not always help when the size of labeled data becomes abundant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Practical Guidelines.</head><p>Based on the above discussions, we provide the following practical guidelines, which suggest to choose between CNN or PTE in different scenarios.</p><p>(1) When no labeled data is available, we suggest using LINE(G wd ) for learning an unsupervised word embedding from long documents and using LINE(G wd +Gww) from short documents.</p><p>(2) When few labeled data is available, on short documents, we suggest to learn an unsupervised embedding first (according to the first guideline) and then pre-train CNN with the unsupervised word embedding; on long documents, we suggest using PTE.</p><p>(3) When the labeled data are abundant, on long documents, we strongly suggest using the PTE model to jointly train the embedding with both the unlabeled and labeled data; on short documents, the selection between PTE(joint) and CNN or CNN(pretrain) basically trades performance with efficiency.</p><p>We believe this study provides an interesting direction to efficiently learn predictive, distributed text embeddings. It is feasible and desirable to develop similar methods that compete with deep neural networks end-to-end on specific tasks but avoid complex model architectures or intensive computation. There is considerable room to improve PTE, for example by considering the orders of words.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Definition 4 .</head><label>4</label><figDesc>(Heterogeneous Text Network)  The heterogeneous text network is the combination of word-word, word-document, and word-label networks constructed from both unlabeled and labeled text data. It captures different levels of word co-occurrences and contains both labeled and unlabeled information.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Performance w.r.t. # unlabeled data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Sensitivity of PTE w.r.t. number of samples T .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Train(LINE(G wd ))</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Train(PTE(G wl ))</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Test(PTE(G wl )) Figure5: Document visualization using unsupervised and predictive embeddings on 20ng data set, visualized with the t-SNE tool<ref type="bibr" target="#b28">[29]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic url="image-1.png" coords="2,53.80,53.80,502.12,113.78" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 2 and</head><label>2</label><figDesc>3 compare the performance of text classification on long documents. Let us start with Table</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Statistics of the Data Sets</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Long Documents</cell><cell></cell><cell></cell><cell cols="3">Short Documents</cell></row><row><cell>Name</cell><cell>20ng</cell><cell>Wiki</cell><cell cols="6">IMDB Corporate Economics Government Market Dblp</cell><cell>Mr</cell><cell>Twitter</cell></row><row><cell>Train</cell><cell cols="3">11,314 1,911,617* 25,000</cell><cell>245,650</cell><cell>77,242</cell><cell>138,990</cell><cell>132,040</cell><cell cols="2">61,479 7,108</cell><cell>800,000</cell></row><row><cell>Test</cell><cell>7,532</cell><cell>21,000</cell><cell>25,000</cell><cell>122,827</cell><cell>38,623</cell><cell>69,496</cell><cell>66,020</cell><cell cols="2">20,000 3,554</cell><cell>400,000</cell></row><row><cell>|V|</cell><cell>89,039</cell><cell>913,881</cell><cell>71,381</cell><cell>141,740</cell><cell>65,254</cell><cell>139,960</cell><cell>64,049</cell><cell cols="2">22,270 17,376</cell><cell>405,994</cell></row><row><cell cols="2">Doc. length 305.77</cell><cell>672.56</cell><cell>231.65</cell><cell>102.23</cell><cell>145.10</cell><cell>169.07</cell><cell>119.83</cell><cell>9.51</cell><cell>22.02</cell><cell>14.36</cell></row><row><cell>#classes</cell><cell>20</cell><cell>7</cell><cell>2</cell><cell>18</cell><cell>10</cell><cell>23</cell><cell>4</cell><cell>6</cell><cell>2</cell><cell>2</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">*In the Wiki data set, only 42,000 documents are labeled.</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Results of text classification on long documents.</figDesc><table><row><cell></cell><cell></cell><cell>20NG</cell><cell></cell><cell cols="2">Wikipedia</cell><cell></cell><cell>IMDB</cell></row><row><cell>Type</cell><cell>Algorithm</cell><cell cols="6">Micro-F1 Macro-F1 Micro-F1 Macro-F1 Micro-F1 Macro-F1</cell></row><row><cell>Word</cell><cell>BOW</cell><cell>80.88</cell><cell>79.30</cell><cell>79.95</cell><cell>80.03</cell><cell>86.54</cell><cell>86.54</cell></row><row><cell></cell><cell>Skip-gram</cell><cell>70.62</cell><cell>68.99</cell><cell>75.80</cell><cell>75.77</cell><cell>85.34</cell><cell>85.34</cell></row><row><cell></cell><cell>PVDBOW</cell><cell>75.13</cell><cell>73.48</cell><cell>76.68</cell><cell>76.75</cell><cell>86.76</cell><cell>86.76</cell></row><row><cell>Unsupervised</cell><cell>PVDM</cell><cell>61.03</cell><cell>56.46</cell><cell>72.96</cell><cell>72.76</cell><cell>82.33</cell><cell>82.33</cell></row><row><cell>Embedding</cell><cell>LINE(Gww)</cell><cell>72.78</cell><cell>70.95</cell><cell>77.72</cell><cell>77.72</cell><cell>86.16</cell><cell>86.16</cell></row><row><cell></cell><cell>LINE(Gwd)</cell><cell>79.73</cell><cell>78.40</cell><cell>80.14</cell><cell>80.13</cell><cell>89.14</cell><cell>89.14</cell></row><row><cell></cell><cell>LINE(Gww + Gwd)</cell><cell>78.74</cell><cell>77.39</cell><cell>79.91</cell><cell>79.94</cell><cell>89.07</cell><cell>89.07</cell></row><row><cell></cell><cell>CNN</cell><cell>78.85</cell><cell>78.29</cell><cell>79.72</cell><cell>79.77</cell><cell>86.15</cell><cell>86.15</cell></row><row><cell></cell><cell>CNN(pretrain)</cell><cell>80.15</cell><cell>79.43</cell><cell>79.25</cell><cell>79.32</cell><cell>89.00</cell><cell>89.00</cell></row><row><cell>Predictive Embedding</cell><cell>PTE(Gwl) PTE(Gww + Gwl) PTE(Gwd + Gwl)</cell><cell>82.70 83.90 84.39</cell><cell>81.97 83.11 83.64</cell><cell>79.00 81.65 82.29</cell><cell>79.02 81.62 82.27</cell><cell>85.98 89.14 89.76</cell><cell>85.98 89.14 89.76</cell></row><row><cell></cell><cell>PTE(pretrain)</cell><cell>82.86</cell><cell>82.12</cell><cell>79.18</cell><cell>79.21</cell><cell>86.28</cell><cell>86.28</cell></row><row><cell></cell><cell>PTE(joint)</cell><cell>84.20</cell><cell>83.39</cell><cell>82.51</cell><cell>82.49</cell><cell>89.80</cell><cell>89.80</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>Results of text classification on long documents (RCV1 data sets).</figDesc><table><row><cell></cell><cell cols="2">Corporate</cell><cell cols="2">Economics</cell><cell cols="2">Government</cell><cell cols="2">Market</cell></row><row><cell>Algorithm</cell><cell cols="8">Micro-F1 Macro-F1 Micro-F1 Macro-F1 Micro-F1 Macro-F1 Micro-F1 Macro-F1</cell></row><row><cell>BOW</cell><cell>78.45</cell><cell>63.80</cell><cell>86.18</cell><cell>81.67</cell><cell>77.43</cell><cell>62.38</cell><cell>95.55</cell><cell>94.09</cell></row><row><cell>PVDBOW</cell><cell>65.87</cell><cell>45.78</cell><cell>79.63</cell><cell>74.82</cell><cell>70.74</cell><cell>54.08</cell><cell>91.81</cell><cell>88.88</cell></row><row><cell>LINE(Gwd)</cell><cell>76.76</cell><cell>60.30</cell><cell>85.55</cell><cell>81.46</cell><cell>77.82</cell><cell>63.34</cell><cell>95.66</cell><cell>93.90</cell></row><row><cell>PTE(Gwl)</cell><cell>76.69</cell><cell>60.48</cell><cell>84.88</cell><cell>80.02</cell><cell>78.26</cell><cell>63.69</cell><cell>95.58</cell><cell>93.84</cell></row><row><cell>PTE(pretrain)</cell><cell>77.03</cell><cell>61.03</cell><cell>84.95</cell><cell>80.63</cell><cell>78.48</cell><cell>64.50</cell><cell>95.54</cell><cell>93.79</cell></row><row><cell>PTE(joint)</cell><cell>79.20</cell><cell>64.29</cell><cell>87.05</cell><cell>83.01</cell><cell>79.63</cell><cell>66.15</cell><cell>96.19</cell><cell>94.58</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 :</head><label>4</label><figDesc>Results of text classification on short documents.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>DBLP</cell><cell>MR</cell><cell></cell><cell cols="2">Twitter</cell></row><row><cell>Type</cell><cell>Algorithm</cell><cell cols="6">Micro-F1 Macro-F1 Micro-F1 Macro-F1 Micro-F1 Macro-F1</cell></row><row><cell>Word</cell><cell>BOW</cell><cell>75.28</cell><cell>71.59</cell><cell>71.90</cell><cell>71.90</cell><cell>75.27</cell><cell>75.27</cell></row><row><cell></cell><cell>Skip-gram</cell><cell>73.08</cell><cell>68.92</cell><cell>67.05</cell><cell>67.05</cell><cell>73.02</cell><cell>73.00</cell></row><row><cell></cell><cell>PVDBOW</cell><cell>67.19</cell><cell>62.46</cell><cell>67.78</cell><cell>67.78</cell><cell>71.29</cell><cell>71.18</cell></row><row><cell>Unsupervised</cell><cell>PVDM</cell><cell>37.11</cell><cell>34.38</cell><cell>58.22</cell><cell>58.17</cell><cell>70.75</cell><cell>70.73</cell></row><row><cell>Embedding</cell><cell>LINE(Gww)</cell><cell>73.98</cell><cell>69.92</cell><cell>71.07</cell><cell>71.06</cell><cell>73.19</cell><cell>73.18</cell></row><row><cell></cell><cell>LINE(Gwd)</cell><cell>71.50</cell><cell>67.23</cell><cell>69.25</cell><cell>69.24</cell><cell>73.19</cell><cell>73.19</cell></row><row><cell></cell><cell>LINE(Gww + Gwd)</cell><cell>74.22</cell><cell>70.12</cell><cell>71.13</cell><cell>71.12</cell><cell>73.84</cell><cell>73.84</cell></row><row><cell></cell><cell>CNN</cell><cell>76.16</cell><cell>73.08</cell><cell>72.71</cell><cell>72.69</cell><cell>75.97</cell><cell>75.96</cell></row><row><cell></cell><cell>CNN(pretrain)</cell><cell>75.39</cell><cell>72.28</cell><cell>68.96</cell><cell>68.87</cell><cell>75.92</cell><cell>75.92</cell></row><row><cell>Predictive Embedding</cell><cell>PTE(Gwl) PTE(Gww + Gwl) PTE(Gwd + Gwl)</cell><cell>76.45 76.80 77.46</cell><cell>72.74 73.28 74.03</cell><cell>73.44 72.93 73.13</cell><cell>73.42 72.92 73.11</cell><cell>73.92 74.93 75.61</cell><cell>73.91 74.92 75.61</cell></row><row><cell></cell><cell>PTE(pretrain)</cell><cell>76.53</cell><cell>72.94</cell><cell>73.27</cell><cell>73.24</cell><cell>73.79</cell><cell>73.79</cell></row><row><cell></cell><cell>PTE(joint)</cell><cell>77.15</cell><cell>73.61</cell><cell>73.58</cell><cell>73.57</cell><cell>75.21</cell><cell>75.21</cell></row></table><note>with unlabeled and labeled data is much more effective compared to separating them into two phases of pre-training and fine-tuning.</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">Available at http://qwone.com/~jason/20Newsgroups/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1">Available athttp://downloads.dbpedia.org/3.9/en/article_ categories_en.nq.bz2.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2">Available at http://ai.stanford.edu/~amaas/data/sentiment/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3">Available at http://www.ai.mit.edu/projects/jmlr/papers/volume5/ lewis04a/lyrl2004_rcv1v2_README.htm</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4">Available at http://arnetminer.org/billboard/citation</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5">Available at http://www.cs.cornell.edu/people/pabo/ movie-review-data/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_6">http://www.csie.ntu.edu.tw/~cjlin/liblinear/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>Qiaozhu Mei is supported by the National Science Foundation under grant numbers IIS-1054199 and CCF-1048168.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Laplacian eigenmaps and spectral techniques for embedding and clustering</title>
		<author>
			<persName><forename type="first">M</forename><surname>Belkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Niyogi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="585" to="591" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Representation learning: A review and new perspectives</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Vincent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1798" to="1828" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note>Pattern Analysis and Machine Intelligence</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Node classification in social networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bhagat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cormode</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muthukrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Social network data analytics</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="115" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Latent dirichlet allocation</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Blei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="993" to="1022" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A convolutional neural network for modelling sentences</title>
		<author>
			<persName><forename type="first">P</forename><surname>Blunsom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Grefenstette</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Natural language processing (almost) from scratch</title>
		<author>
			<persName><forename type="first">R</forename><surname>Collobert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bottou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Karlen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kuksa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>JMLR</publisher>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="2493" to="2537" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A synopsis of linguistic theory, 1930-1955</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Firth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Studies in linguistic analysis</title>
				<editor>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Firth</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="page" from="1" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1408.5882</idno>
		<title level="m">Convolutional neural networks for sentence classification</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multidimensional scaling</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Kruskal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sage</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1405.4053</idno>
		<title level="m">Distributed representations of sentences and documents</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Convolutional networks for images, speech, and time series. The handbook of brain theory and neural networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">3361</biblScope>
			<biblScope unit="page">310</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Rcv1: A new benchmark collection for text categorization research</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">G</forename><surname>Rose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="361" to="397" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The link-prediction problem for social networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liben-Nowell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American society for information science and technology</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1019" to="1031" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-S</forename><surname>Chua</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sun</surname></persName>
		</author>
		<title level="m">Topical word embeddings</title>
				<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Learning word vectors for sentiment analysis</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Maas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Daly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">T</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Potts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL-HLT</title>
				<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="142" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Ensemble of generative and discriminative techniques for sentiment analysis of movie reviews</title>
		<author>
			<persName><forename type="first">G</forename><surname>Mesnil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ranzato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1412.5335</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Recurrent neural network based language model</title>
		<author>
			<persName><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Karafiát</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Burget</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cernockỳ</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khudanpur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INTERSPEECH</title>
				<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1045" to="1048" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Distributed representations of words and phrases and their compositionality</title>
		<author>
			<persName><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="3111" to="3119" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales</title>
		<author>
			<persName><forename type="first">B</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
				<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="115" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Deepwalk: Online learning of social representations</title>
		<author>
			<persName><forename type="first">B</forename><surname>Perozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Al-Rfou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Skiena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="701" to="710" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Term-weighting approaches in automatic text retrieval. Information processing &amp; management</title>
		<author>
			<persName><forename type="first">G</forename><surname>Salton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Buckley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="513" to="523" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">The westbury lab wikipedia corpus</title>
		<author>
			<persName><forename type="first">C</forename><surname>Shaoul</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<pubPlace>Edmonton, AB</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Alberta</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A latent semantic model with convolutional-pooling structure for information retrieval</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Mesnil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
				<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="101" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Recursive deep models for semantic compositionality over a sentiment treebank</title>
		<author>
			<persName><forename type="first">R</forename><surname>Socher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perelygin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Potts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
				<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="volume">1631</biblScope>
			<biblScope unit="page">1642</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Large scale text classification using semi-supervised multinomial naive bayes</title>
		<author>
			<persName><forename type="first">J</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Shirab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Matwin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
				<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Understanding the limiting factors of topic modeling via posterior contraction analysis</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Mei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="190" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Line: Large-scale information network embedding</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Mei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1067" to="1077" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A global geometric framework for nonlinear dimensionality reduction</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">De</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Langford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">290</biblScope>
			<biblScope unit="issue">5500</biblScope>
			<biblScope unit="page" from="2319" to="2323" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Visualizing data using t-sne</title>
		<author>
			<persName><forename type="first">L</forename><surname>Van Der Maaten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">85</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">tagspace: Semantic embeddings from hashtags</title>
		<author>
			<persName><forename type="first">J</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Adams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1822" to="1827" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Learning with local and global consistency</title>
		<author>
			<persName><forename type="first">D</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Bousquet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Lal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Schölkopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NIPS</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">16</biblScope>
			<biblScope unit="page" from="321" to="328" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
