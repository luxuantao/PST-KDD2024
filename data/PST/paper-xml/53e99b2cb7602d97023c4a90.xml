<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Provenance: A Future History</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">James</forename><surname>Cheney</surname></persName>
							<email>jcheney@inf.ed.ac.uk</email>
						</author>
						<author>
							<persName><forename type="first">Stephen</forename><surname>Chong</surname></persName>
							<email>chong@seas.harvard.edu</email>
						</author>
						<author>
							<persName><forename type="first">Nate</forename><surname>Foster</surname></persName>
							<email>jnfoster@cis.upenn.edu</email>
						</author>
						<author>
							<persName><forename type="first">Margo</forename><surname>Seltzer</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Stijn</forename><surname>Vansummeren</surname></persName>
							<email>stijn.vansummeren@uhasselt.be</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of Edinburgh</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Harvard University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Pennsylvania</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Harvard University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">Hasselt University/Transnational University of Limburg</orgName>
								<address>
									<country key="BE">Belgium</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Provenance: A Future History</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">DCA0E1FD298425102AFE610000CA59B1</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T10:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D.3.1 [Programming Languages]: Formal Definitions and Theory General Terms Languages</term>
					<term>Security</term>
					<term>Reliability provenance</term>
					<term>integrity</term>
					<term>semantics</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Science, industry, and society are being revolutionized by radical new capabilities for information sharing, distributed computation, and collaboration offered by the World Wide Web. This revolution promises dramatic benefits but also poses serious risks due to the fluid nature of digital information. One important cross-cutting issue is managing and recording provenance, or metadata about the origin, context, or history of data. We posit that provenance will play a central role in emerging advanced digital infrastructures. In this paper, we outline the current state of provenance research and practice, identify hard open research problems involving provenance semantics, formal modeling, and security, and articulate a vision for the future of provenance.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>queryable; it's indexed by standard search engines and can be queried anywhere.</p><p>Provenance is pervasive, invisible, and handled automatically by default. Ten years ago people regularly used data without knowing where it was hosted or originated. Today such a thing is unthinkable. Documents whose origins are unknown are highly suspect and quickly attract the attention of a small but enthusiastic anti-plagiarism community.</p><p>Both public and confidential provenance are incorporated into the algorithms employed by major search engines, who use the provenance of a page to weigh its reliability, and direct searches toward more reputable results. Individuals are able to query where their data is being used elsewhere on the Web, and can derive economic benefit and acclaim by providing useful data. The Semantic Web only became truly compelling once people had an incentive for contributing high-quality metadata. Provenance tracking provided this motivation by ensuring recognition for contributors. Some curators even make a living managing Semantic Web metadata.</p><p>The old vertically-integrated media industries (particularly music and print media) loved provenance-for a while. They thought it would revive their dream of complete control over their intellectual property through digital rights management. Indeed, provenance is now used to ensure that authors and creators are recognized and rewarded for their work, whether they are independent or affiliated with a major media label or news agency. The key difference between the success of provenance tracking and the failure of earlier attempts at DRM is that provenance is based on voluntary participation in the online community, not on centralized control imposed by legislation or lawsuits. Creators are free to decide whether to retain or expose provenance, and recipients of such information are free to decide whether to believe or trust it.</p><p>But how did we get here?</p><p>By 2009, it was widely recognized that provenance was important, but the effects of Moore's Wall were only beginning to be felt, and 20th-century assumptions about storage and computational overhead still held sway. The cost of storage was still relatively high-around $20 for a terabyte instead of pennies. Likewise, typical personal computers contained only a few cores rather than the hundreds or thousands now common today, and reliable, usable concurrent programming languages had not yet become mainstream. Now, of course, the extra storage and computational overhead of instrumenting programs to record and maintain detailed provenance metadata is effectively zero. Indeed, provenance pays for itself in terms of decreased liability for failures-most insurers today won't even cover businesses that use hardware or software that is not provenance aware.</p><p>A thornier issue was how to manage and search the masses of detailed provenance information that began to be generated. Early work viewed provenance as a simple directed acyclic graph. While rich languages for querying graph-like data had already been researched, they had not yet been integrated into scalable, robust, and industrial-strength systems. However, the development of DBMSs supporting fast graph queries was only a first step towards the rich provenance query languages we have today. Provenance queries essentially query the behavior of programs, and it was a significant challenge to formulate nontrivial provenance queries manually over the raw, low-level representation as a DAG. Instead, the first half of this decade saw the development of advanced provenance query languages that incorporated ideas from reflective and aspect-oriented programming. These languages make it easy for programmers to query provenance using the syntax they already use to write programs. A nice side-benefit of this was that major programming languages and implementations finally took database-programming language integration seriously, solving the "impedance mismatch" problem once and for all. Some cynics admitted that provenance might be important for critical applications such as banking or medical records, but doubted that it would carry over to generalpurpose applications: "as soon as you move an object from one system to another," they said, "you're going to lose its provenance-we can't even do extended attributes in a portable way!" But researchers and developers from a host of different areas banded together and formed a "provenance community". Much like in the early days of the Internet and World Wide Web, their grass-roots efforts led to the rapid development and implementation of de facto standards for representing and transporting provenance metadata. These were eventually codified by the W3C and other organizations.</p><p>The provenance tide began to turn when the financial industry imploded in 2008. In the wake of this disaster, which raised the stakes for regulatory oversight, the US Congress passed the 2010 Oversight Act which mandated that every major financial transaction have a verifiable record. This had an energizing effect on the provenance community similar to that of the Department of Defense's Orange Book on the security community in the 1970s. Other nations followed suit, legislating stronger standards for transparency for both financial and social policy data.</p><p>Security and privacy also had to be completely rethought with the adoption of pervasive provenance technology. Nowadays, users can limit access to both sensitive data and its provenance, at the cost that others may be less willing to believe or trust their data. The tension between privacy and provenance was graphically illustrated by the protests in Iran following the contested election of June 2009. Sites such as Twitter, Facebook and YouTube played an essential role early on, making it possible for protesters to connect with each other and journalists to report to the outside world without government interference, but there was also a great deal of unverifiable "noise" and deliberate misinformation. Moreover, this information (along with more traditional forms of surveillance) was later used effectively to single out prominent Facebook or Twitter users for persecution in the brutal repression that followed the protests.</p><p>In the rest of this talk, I'll ask you to think back to the summer of 2009. It was a pivotal time for this field. Many of these ideas were in their infancy, and almost no one had any idea how important provenance would become over the next 10 years. In fact, many computer scientists had either not heard of provenance, or thought it was either trivial or outright impossible. Some early papers on provenance were vague about either what they wanted to accomplish, or what they were actually proposing as solutions. Many papers proposed solutions to related problems, but did not provide enough detail about either solution or problem to make a real comparison possible. It was quite difficult for newcomers to the field to understand what was really essential. General foundational definitions, clear problem statements, and theories of provenance only started to coalesce by the end of the last decade. These ideas played a central role in all of the above developments, because a cohesive provenance community would have been impossible before everyone was able to agree on basic definitions. Perhaps the most important insight was...</p><p>[The rest of the recording is inaudible.]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In an ideal world, software systems would be engineered to the highest standards. Programs would be expressed in intuitive high-level languages and their behavior would be checked against clean formal specifications. Data would be classified according to precise schemas and curated with accurate metadata. But we do not live in that ideal world. Few real-world systems meet these lofty standards. In practice, programs are often built on top of legacy code and dirty data containing errors, omissions and outright lies.</p><p>Of course, these problems are not new-the difficulty of building reliable software has long been known-but they have recently become even more urgent as technologies such as "the Semantic Web", "Grid middleware", "cloud computing", "ubiquitous computing", "eScience", "cyberinfrastructure", "e-Infrastructure", etc. <ref type="bibr" target="#b20">[21]</ref> start to take hold. These emerging technologies build on the fabric provided by the Internet and the World Wide Web to enable fundamentally new kinds of interaction interact, collaboration and computation. For example, eScience and cyberinfrastructure systems are intended to give scientists easy access to highperformance computing, help them create high-quality curated databases, and facilitate collaboration using socialnetworking tools and virtual research environments.</p><p>But while these technologies offer dramatic advantages, they also exacerbate the hazards posed by buggy programs and dirty data. Digital information is easy to copy, change, and misinterpret. Current software systems do not provide the levels of repeatability, reliability, accountability and integrity achieved by the paper-based technology-books, academic journals and laboratory notebooks-that they are predicted to replace <ref type="bibr" target="#b22">[23]</ref>.</p><p>Our thesis is that successfully realizing the visions(s) of these revolutionary computing technologies will require building provenance technology into all computer systems of any importance. By provenance, we mean information about the origin, context, or history of the data. By provenance technology, we mean the hardware and software components that are needed to record and maintain robust provenance as an end-to-end resource in a system. Provenance will help recover the repeatability, integrity and authenticity properties of pre-digital information, and will also make it easier to detect and prevent failures, analyze errors, and discourage malfeasance by increasing transparency and accountability.</p><p>Without pervasive adoption of provenance technology, critical computer systems and networks have serious vulnerabilities, which we call provenance failures. Today, such failures are frequent, costly and embarrassing. Here are just a few illustrative examples:</p><p>• In December 2006, a biochemist retracted five papers after discovering bugs in a data analysis program that had been used to generate several years of research results <ref type="bibr" target="#b25">[26]</ref>. The use of sophisticated Grid, database and other systems provides many new opportunities for similar errors to creep into the scientific record.</p><p>• In September 2008, an undated article concerning United Airlines' near bankruptcy <ref type="bibr" target="#b11">[12]</ref> appeared on the list of top stories on Google News. The story was no longer relevant-it had originally been published six years earlier-but investors panicked, and the share price of the company fell by 75% before trading was halted.</p><p>• In February 2009, the US Congress passed into law a $800 billion stimulus package. Changes were made by hand on paper copies of the bill only hours before it was enacted, including changes to the amounts allocated to specific programs. For example, a $3.4 billion allocation to energy conservation programs was changed to $3.1 billion in the final draft (see Figure <ref type="figure" target="#fig_0">1</ref>).</p><p>• Prior to the 2003 Iraq invasion, the UK government published Microsoft Word documents containing supposedly objective intelligence evaluations. However, the documents' revision history disclosed that some of the authors were political operatives <ref type="bibr" target="#b32">[33]</ref>.</p><p>• The current financial crisis, which began in late summer 2008, is partly attributable to increased opacity of financial markets due to deregulation and large-scale computerization over the last twenty years. Lewis and Cohan write in the New York Times:</p><p>Ever since traders started disappearing from the floor of the New York Stock Exchange in the last decade of the 20th century, there has been less and less transparency about the price and volume of trades. <ref type="bibr" target="#b21">[22]</ref> They go on to call for the US government to mandate that regulators provide impartial, transparent and trusted information about transactions.</p><p>Generally speaking, a provenance failure is a negative outcome caused by a failure to record, manage, interpret, or control access to information and its provenance. These failures are preventable, but currently prevention requires a great deal of vigilance (and effort) from users and requires cooperation across multiple systems and domains of control. Provenance failures will either continue to cause major losses if critical systems are developed on top of advanced, but unreliable infrastructure, or will, ipso facto, ensure that such infrastructure is not used for anything important.</p><p>Provenance failures overlap with other well-known kinds of failures in computer systems, such as hardware failures, software bugs that lead to incorrect (or misleading) results, and security vulnerabilities that allow misuse (or prevent legitimate use) of computer systems. However, provenance failures also differ from each of these in important ways. In particular, provenance failures involve users' expectations or (mis)interpretations of data in a system relative to realworld artifacts or situations. Provenance failures thus do not appear to map naturally to the existing goals of correctness or efficiency. Moreover, although provenance is similar to security in that it is a hard-to-define, end-to-end property of a system, existing security models do not yet seem to help us to understand provenance either. Therefore, we believe that accurately modeling and effectively combating provenance failures requires new ideas.</p><p>Unfortunately, the challenge of provenance is often underappreciated. Provenance seems trivial, in theory: as a thought experiment, one can just imagine recording everything that might be useful later on. Of course, this is not feasible in practice; however, it is also problematic in theory, for it begs the question of how to define "everything"-when do we stop? Likewise, given an idealized, but impractical definition of "everything", how can we compare practical techniques that fall short of this ideal? These questions seldom receive the attention they deserve. Instead systems (or users) that record provenance typically do so in an ad hoc way based on perceived needs or as a reaction to known problems. In the absence of agreement about even basic definitions, goals, and success criteria for provenance techniques, it is hard to see how we can do better.</p><p>High-performance computing, formal verification, and security are widely appreciated to be challenging. They each have a received a great deal of attention within cohesive research communities, have well-developed theoretical foundations, and have made significant practical impact. The study of provenance currently enjoys none of these features, although it is increasingly recognized as a hard problem: in the US it has been included on the InfoSec Council's Hard Problems List <ref type="bibr" target="#b2">[3]</ref>, and in the UK it has been identified as a Grand Challenge by the British Computing Society <ref type="bibr">[</ref> This paper is a call to arms for provenance-related research, outlining directions that we believe are understudied and drawing attention to some of the hard problems involving provenance, in the hope the accomplishments anticipated in our opening remarks may become reality. This paper is not an attempt at a complete or fair survey of the field; we refer interested readers to other recent surveys <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b28">29]</ref> and resources <ref type="bibr" target="#b0">[1]</ref>.</p><p>We begin in Section 2 by giving a high-level overview of provenance and its potential for digital information. In Section 3 we discuss some of the problems with the current treatment of provenance, while in Section 4 we outline our views of the key challenges and open problems that must be addressed in order to develop robust provenance technology. We conclude in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">What is provenance and what is it for?</head><p>What is provenance? That depends on the context in which the question is posed, and on the goals provenance is expected to achieve. Many different user communities are calling for some metadata called "provenance", but each of these communities actually has different underlying needs and applications in mind <ref type="bibr" target="#b0">[1]</ref>. Moreover, different communities think of their objects and data at different semantic levels. So just like any programming or data management problem, we should ask what provenance is, what problems it solves, and how we shall recognize success.</p><p>The concept of "provenance" originates from the art and archiving worlds, where it refers to information about the creation, chain of custody, modifications or influences pertaining to an artifact.</p><p>In the art world, such documentation is important for being able to judge authenticity, that is, whether a work is what its owners/sellers claim it is (rather than a forgery). Thus, it is important that the record be as detailed as possible, and that it be possible to check the record against other, independent records as well as against the artifact itself.</p><p>In archiving, provenance is related to integrity, such as the principle that archivists should respect the order or organization of a collection of documents that are being archived: this principle is called respect des fonds. This is in contrast to archiving practices popular in earlier periods (e.g., 19th century) when archivists often devised their own scheme for reorganizing collections. Doing so discards information about the relationships among objects that might not be apparent to the archivist and might be difficult for others to recover after reorganization.</p><p>A more concrete answer to the question "what is provenance for digital artifacts" is to look at features or applications of current computer systems that appear related to history tracking, logging, integrity, authenticity, or error recovery. Most computer systems, and many users, currently track such information to aid in error correction, debugging, auditing, or just as simple memory aids:</p><p>• Operating systems log important system events, to aid system administration and intrusion detection.</p><p>• File systems record basic metadata such as file creation, modification, ownership and permissions.</p><p>• Version control systems record metadata about when changes have been made and by whom.</p><p>• Compilers use source line number tagging to aid in pointing to the sources of compile-time or run-time errors.</p><p>• Scientific database curators maintain detailed high-level records of who has inserted, modified or deleted data, and (sometimes) where it has been copied from.</p><p>• Web browsers retain history information about which sites have been visited and when.</p><p>• Users of Twitter, Friendfeed and other social networking systems employ informal conventions concerning acknowledging sources of quoted data or links, e.g. the abbreviations "RT" (ReTweet) or "HT" (Hat Tip).</p><p>Although each of the above represents an example of provenance, we do not believe any of the above mechanisms provides a self-contained definition of provenance, even within its context. In each case, we can imagine taking the exist-ing system and modifying it to record more information that could be considered provenance, though again this would quickly become impractical. Thus, each of the above mechanisms represents a practical summary of the true provenance of the system, a concept which we posit exists in each case but won't try to define. Now what is provenance for? We have given two typical motivations above, namely for assessing authenticity and integrity. The above examples also suggest distinguishing two complementary motivations for recording provenance: failure recovery and success validation.</p><p>Any computer system can fail in a number of ways: there can be a hardware fault, software bug, malicious user, or simple human error. When a failure occurs, we need to know what happened, how the failure occurred, who was involved, who was to blame, and how safeguard against similar failures in the future. Conversely, if a system is being used to make decisions upon which significant resources or lives depend, then it is important for the process leading to a particular decision to be transparent, comprehensible, and persistent. Such decisions need to be justified by explicitly showing how the results were derived, what assumptions or approximations were used, who was involved, who deserves credit, and how to reproduce the results in different circumstances.</p><p>Scientists are required to imagine (and defend against) all the possible ways their experiments might fail or might mislead us into drawing flawed conclusions. Accordingly, laboratory scientists have developed careful record-keeping practices that make it easier for a scientist to satisfy herself (and to convince others) that her work is valid, repeatable, and accurate. These records anticipate scientists' need for both success validation and failure recovery in the course of responsible conduct of research <ref type="bibr" target="#b23">[24]</ref>.</p><p>Failure recovery and success validation are dual. In failure recovery, we are faced with a specific bad outcome that we want to understand and avoid repeating. In success validation, we are faced with some (claimed) good results that we want to validate and replicate or generalize. Both failure recovery and success validation involve understanding causal chains of events and counterfactual possibilities.</p><p>More generally, provenance addresses problems of the following form: we have a system description together with some specific inputs and outputs, and we wish to understand (or explain) the process by which the system transformed the inputs to the outputs. Such explanations can have many forms, depending on what aspects of the system behavior are considered critical. Moreover, different kinds of explanation address different informal motivations such as authenticity, integrity, transparency, and accountability. Of course, so far these are all relatively vague concepts that can be interpreted in a number of different ways, and developing more concrete definitions of these concepts is a major part of the challenge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Problems with current reality</head><p>Provenance is information, and as such, we must consider how to define, manage, and secure it. There are both subjective and objective aspects of provenance that must be carefully untangled. Moreover, we also need to consider semantic issues such as when provenance correctly represents a system or explains a situation. As well, there is the meta-issue of whether provenance information needs to have provenance of its own (and if so, where does this stop?) Satisfying answers to these questions have not yet been found; instead, we perceive a number of basic problems with provenance in today's systems.</p><p>Provenance is incomplete. Often this is for efficiency reasons based on dated assumptions about the cost of secondary storage, which is increasingly cheap compared to other hardware. However, there is a more fundamental problem: different applications have different provenance needs, and it is not clear whether there is a plausible "one size fits all" provenance solution that can be hard-wired into general-purpose systems. It may be better to instead develop interfaces for customizing the collection of provenance information.</p><p>Provenance is unreliable. Computer systems already manage provenance in numerous ways. Most of these approaches are unreliable in the sense that the guarantees provided are minimal or unclear, and system behavior is unspecified or ad hoc. This places severe limitations on the ability of users to trust distributed data and computations on the Web. If users have mistaken intuitions about the meaning of provenance, they will likely make poor decisions and incorrectly assign blame (or praise). Even worse, if attackers can manipulate provenance information, then users have to consider the possibility of plagiarism, framing and identity fraud. If these risks are well-known, then users will likely simply disregard provenance, leading to wasted collection effort. Having lowquality or easily forged provenance may actually be worse than having no provenance at all! Provenance is insecure. As discussed by Braun et al. <ref type="bibr" target="#b7">[8]</ref>, preventing unauthorized access to data is insufficient to ensure that sensitive provenance remains confidential. Conversely, permitting access to (non-confidential) provenance may disclose confidential data. More generally, adding provenance to systems introduces new privacy and security risks even as it increases transparency and accountability, as illustrated for example by the the Iraq intelligence report metadata information leaks in Microsoft Word and other applications. Provenance tracking (like other forms of surveillance) may have a chilling effect on freedom of expression; to avoid this problem, it may be important to preserve "provenance-free zones".</p><p>Provenance is heterogeneous. As discussed above, provenance information is currently managed in many different ways for many different purposes in various systems. These facilities have often grown organically in response to perceived needs, rather than as part of an overall design philosophy. In addition, the information is recorded at many different levels of granularity-whole files vs. individual lines, or whole databases vs. database records. When systems manage provenance in idiosyncratic ways, then it is a major chore to integrate these different kinds of provenance after the fact. Some progress towards a standard format for provenance has been made in the Open Provenance Model effort <ref type="bibr" target="#b24">[25]</ref>. This work standardizes a syntax and controlled vocabulary for provenance, but there is still plenty of scope for incompatibility and misinterpretation.</p><p>The problem is similar to that of data integration, arising where different databases have been developed to handle similar data but differ in terms of data format, layout, and granularity. Reconciling these changes is highly labor intensive and has motivated (at least!) 20 years of research with no end in sight <ref type="bibr" target="#b33">[34]</ref>. Perhaps existing techniques for data integration can be adapted to help with provenance integration. Conversely, provenance information may help attain higher quality in data integration.</p><p>Provenance is non-portable. How do we deal with provenance for mobile data that moves among systems? This is a commonplace scenario: consider, for example, curated databases where curators manually browse journal articles, online analysis tools and other databases and copy and paste data into their databases, or any kind of collaboration involving emailing copies of a document back and forth. Recently developed distributed version-control systems, such as Git, Darcs, and Mercurial, may offer some ideas about how to manage provenance for mobile, distributed objects that could be generalized to other settings. However, truly solving this problem may require architectural changes at the hardware, network, operating system, or Web levels (or all of the above).</p><p>Little provenance research is precise, formal or repeatable. As argued above, we believe provenance failures are based in part on subjective concerns such as how users interpret metadata. However, we do not believe that this means that we should abandon existing principles for the design, specification, and verification of computer systems. It can be hazardous to implement the first thing that comes to mind without clear understanding of the design space-people might (mis)place faith in a system, with dangerous consequences. Moreover, even if it is ultimately a subjective matter to judge whether a provenance system design is adequate for a given purpose, we should have clear specifications that both users and implementors can rely on.</p><p>We believe that both provenance solutions and the problems they are meant to solve need to be formulated clearly in a rigorous framework. Unfortunately, a lot of the work done so far on provenance has fallen short in this respect. Often, the actual or desired behavior of a system (or both) are described only in vague terms. For example, a form of provenance is often motivated as</p><p>• being "complete", or "(more) accurate (than another)",</p><p>• as capturing information about "(causal) dependences", "influences", "sources", "relevance",</p><p>• or as being an "explanation", "justification", or "evidence".</p><p>These are loaded terms. They are frequently used as motivation but without any further definition of their meaning in terms of the system that the provenance information is supposed to describe. This is unacceptable because a reader (or user or developer) may interpret one of these terms differently from the way intended by the author, leading to confusion and likely to provenance failures. Moreover, the lack of precise definitions and clear descriptions hinders comparisons in terms of effectiveness, expressiveness or efficiency; even if two systems have similar motivation, their implementations may be so different as to render comparisons meaningless. Thus, besides our concern with the clarity of descriptions of proposed techniques for provenance, we believe that there are serious gaps in our understanding of the intended goals of such techniques. In terms familiar from computer security, today we see many proposals for mechanisms for provenance, but few clear policies describing what such mechanisms are meant to achieve. Computer security benefited greatly by adopting a formal approach <ref type="bibr" target="#b4">[5]</ref>, and we believe that more formalism will also be required for provenance technology to succeed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Towards solutions</head><p>As with many emerging technologies, we expect provenance technology to develop in roughly three stages: research, early adoption, and maturity. We expect provenance to face similar challenges as other network effect technologies that become compelling only when a critical mass is reached. However, there are aspects of provenance that seem especially challenging and that we believe don't receive the attention they deserve.</p><p>Semantics Many forms of provenance could be captured for a particular system. At a bare minimum, we want to know where a particular piece of data comes from <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref>. In an escience setting, however, we additionally want to know why an in-silico analysis gave a particular output <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b14">15]</ref>, how it was computed <ref type="bibr" target="#b17">[18]</ref>, or what dependencies the output has on different inputs <ref type="bibr" target="#b12">[13]</ref>. Some techniques (such as PASS <ref type="bibr" target="#b26">[27]</ref> and PASOA <ref type="bibr" target="#b24">[25]</ref>) attempt to record everything that a given system component can record, building a detailed trace or "causal graph".</p><p>While the above forms of provenance have already been introduced and studied in the literature for specific settings and languages-e.g., relational databases, workflows, or file systems-there is need for generally applicable, formal foundations for provenance. Moreover, since we can only expect provenance to become ubiquitously available if the effort of adding provenance support to systems is relatively low, we need an efficient methodology that allows this general theory to be easily applied to new settings and languages. One issue of current interest is how to integrate provenance models that have been developed separately for databases and workflow systems; more generally, we think it is essential to develop a clearer formal understanding of modularity and abstraction for provenance.</p><p>Traces, incremental, and bidirectional computation Many forms of provenance are motivated by a desire to cache intermediate results and support efficient recomputation when the input changes. Incremental recomputation is a classical problem encountered in many different guises throughout computer science (particularly view maintenance in databases <ref type="bibr" target="#b18">[19]</ref>). Many approaches employ "traces", or intermediate data structures that elucidate how the output was computed from the input <ref type="bibr" target="#b3">[4]</ref>. Thus, when the input is changed, we can propagate the effects forward efficiently by replaying just a part of the trace. Such trace information ought to be computable from a sufficiently rich form of provenance; alternatively, perhaps we should view such traces as a form of provenance in their own right. However, while the "trace everything" approach seems to capture the most provenance-related information, it is currently unclear what language should be used to pose provenance queries on traces. Since such queries essentially inspect program behavior, languages for meta-programming <ref type="bibr" target="#b29">[30]</ref> and metaquerying <ref type="bibr" target="#b31">[32]</ref> seem like a good starting point.</p><p>Provenance has also been linked to the classical view update problem in databases <ref type="bibr" target="#b10">[11]</ref>, and generalizations such as bidirectional computation <ref type="bibr" target="#b16">[17]</ref>. In recent work on bidirectional transformations, or "lenses", where-provenance information has been found useful for dealing with ordered data collections <ref type="bibr" target="#b5">[6]</ref>. In light of these observations, we think that understanding the relationships between provenance, incremental/adaptive computation, and bidirectional computation is a key open problem. For example, can pervasive provenance technology also enable new solutions to these old problems? Conversely, can these existing techniques be used to better understand the foundations of provenance? Dependence, information flow, and security Informationflow security is based on formalisms such as dependence and noninterference that also underlie program slicing and analysis. Previous work on dependency provenance adapted these ideas to motivate a form of provenance that provides a strong guarantee that it captures all dependence information <ref type="bibr" target="#b12">[13]</ref>.</p><p>It is an open question how to define security for provenance. Some previous work (starting with <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b30">31]</ref>) has considered access control and other security issues for provenance information, but does not formalize security policies or prove correctness of implementations. Chong <ref type="bibr" target="#b13">[14]</ref> sets out initial attempts at definitions for security properties for systems in which both data and provenance may be confidential; this work is formulated in terms of detailed operational traces, but seems adaptable to other forms of provenance. However, there are many issues that need further study, such as privacy and audit in the presence of provenance.</p><p>Causality, trust, knowledge, and belief These concepts are often invoked as motivations for provenance, but they are nontrivial. For example, the nature of causality has been debated by philosophers for centuries, famously Hume, and continuing to this day. It is far from obvious how to make sense of informal claims that a given provenance record correctly captures a causal relationship, increases trust, or justifies a knowledge or belief, and most research papers don't even try. However, recent work on mathematical models of causality <ref type="bibr" target="#b19">[20]</ref>, trust <ref type="bibr" target="#b27">[28]</ref>, and knowledge <ref type="bibr" target="#b15">[16]</ref> may provide a good starting point for answering these questions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions</head><p>The Web and other technologies are revolutionizing the way we create, share and use information; this revolution offers great benefits but also exposes us to serious new risks. We believe that provenance will play an essential role in this revolution, providing data integrity, trustworthiness, authenticity, and availability, while offering potential benefits to information retrieval, collaboration, and scientific computation.</p><p>However, most work on provenance so far has focused on developing systems that address immediate perceived needs, rather than understanding foundational questions such as "what is provenance?", "how do we know when we have enough provenance for a given application?", or "how can we assess or compare approaches to provenance?" We believe that satisfactory answers to these kinds of questions demand serious consideration of underlying issues such as the semantics of provenance and the nature of trust and causality in computer systems. Only once these foundations are better understood-that is, only once the problems we want provenance to solve are clearly defined-can we make real progress on solving them and developing a robust provenance layer for the future Web infrastructure.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. The pen is mightier than the sword.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>2]. Nevertheless, there is little broad understanding of what provenance is, what problems it solves, or what the key open problems or challenges are.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This paper is based on discussions started at a series of workshops on provenance in 2008-2009 sponsored by the UK eScience Institute, whose support we gratefully acknowledge.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://wiki.esi.ac.uk/-PrinciplesofProvenance" />
		<title level="m">Principles of provenance wiki</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Grand challenges in computing -research</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>British Computing Society</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">INFOSEC hard problem list</title>
		<ptr target="http://www.infosec-research.org/-docspublic/20051130-IRC-HPL-FINAL.pdf" />
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
		<respStmt>
			<orgName>INFOSEC Research Council</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Adaptive functional programming</title>
		<author>
			<persName><forename type="first">A</forename><surname>Umut</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guy</forename><forename type="middle">E</forename><surname>Acar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Blelloch</surname></persName>
		</author>
		<author>
			<persName><surname>Harper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">POPL</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="247" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Secure computer system: Unified exposition and Multics interpretation</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">E</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leonard</forename><surname>La</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Padula</forename></persName>
		</author>
		<idno>MTR- 2997</idno>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>MITRE Corp</publisher>
			<pubPlace>Bedford, MA</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Boomerang: resourceful lenses for string data</title>
		<author>
			<persName><forename type="first">Aaron</forename><surname>Bohannon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Nathan</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><forename type="middle">C</forename><surname>Pierce</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexandre</forename><surname>Pilkiewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Schmitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">POPL</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="407" to="419" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Lineage retrieval for scientific data processing: a survey</title>
		<author>
			<persName><forename type="first">Rajendra</forename><surname>Bose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Frew</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="28" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Securing provenance</title>
		<author>
			<persName><forename type="first">Uri</forename><surname>Braun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Avraham</forename><surname>Shinnar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Margo</forename><surname>Seltzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HOTSEC&apos;08: Proceedings of the 3rd conference on Hot topics in security</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On the expressiveness of implicit provenance in query and update languages</title>
		<author>
			<persName><forename type="first">Peter</forename><surname>Buneman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Cheney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stijn</forename><surname>Vansummeren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">28</biblScope>
			<date type="published" when="2008-11">November 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Why and where: A characterization of data provenance</title>
		<author>
			<persName><forename type="first">Peter</forename><surname>Buneman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wang-Chiew</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDT, number 1973 in LNCS</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="316" to="330" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On propagation of deletions and annotations through views</title>
		<author>
			<persName><forename type="first">Peter</forename><surname>Buneman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wang-Chiew</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODS</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="150" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">UAL shares fall as old story surfaces online</title>
		<author>
			<persName><forename type="first">Susan</forename><surname>Carey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Rogow</surname></persName>
		</author>
		<ptr target="http://online.wsj.com/article/SB122088673-738010213.html" />
	</analytic>
	<monogr>
		<title level="j">Wall Street Journal</title>
		<imprint>
			<date type="published" when="2008-09">September 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Provenance as dependency analysis</title>
		<author>
			<persName><forename type="first">James</forename><surname>Cheney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amal</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Umut</forename><forename type="middle">A</forename><surname>Acar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DBPL</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4797</biblScope>
			<biblScope unit="page" from="138" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Towards semantics for provenance security</title>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Chong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TAPP&apos;09: First workshop on on Theory and practice of provenance</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Tracing the lineage of view data in a warehousing environment</title>
		<author>
			<persName><forename type="first">Yingwei</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jennifer</forename><surname>Widom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Janet</forename><forename type="middle">L</forename><surname>Wiener</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Database Syst</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="179" to="227" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">Ronald</forename><surname>Fagin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">Y</forename><surname>Halpern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoram</forename><surname>Moses</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Moshe</forename><forename type="middle">Y</forename><surname>Vardi</surname></persName>
		</author>
		<title level="m">Reasoning About Knowledge</title>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Provenance and data synchronization</title>
		<author>
			<persName><forename type="first">J</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Grigoris</forename><surname>Karvounarakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Data Eng. Bull</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="13" to="21" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Provenance semirings</title>
		<author>
			<persName><forename type="first">Todd</forename><forename type="middle">J</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gregory</forename><surname>Karvounarakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Val</forename><surname>Tannen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODS</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="31" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m">Materialized views: Techniques, Implementations, and Applications</title>
		<editor>
			<persName><forename type="first">Ashish</forename><surname>Gupta</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Iderpal</forename><surname>Singh</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Mumick</forename></persName>
		</editor>
		<meeting><address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Causes and explanations: A structural-model approach-part I: Causes</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Halpern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pearl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">British J. Philos. Sci</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="843" to="887" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Cyberinfrastructure for e-science</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Trefethen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">308</biblScope>
			<biblScope unit="issue">5723</biblScope>
			<biblScope unit="page" from="817" to="821" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The economy is still at the brink</title>
		<author>
			<persName><forename type="first">Sandy</forename><forename type="middle">B</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">D</forename><surname>Cohan</surname></persName>
		</author>
		<ptr target="http://www.nytimes.com/2009/06/07/opinion/-07cohanWEB.html" />
	</analytic>
	<monogr>
		<title level="j">New York Times</title>
		<imprint>
			<date type="published" when="2007-06">June 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">When documents deceive: trust and provenance as new factors for information retrieval in a tangled web</title>
		<author>
			<persName><forename type="first">Clifford</forename><forename type="middle">A</forename><surname>Lynch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Am. Soc. Inf. Sci. Technol</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="12" to="17" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Scientific Integrity</title>
		<author>
			<persName><forename type="first">L</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName><surname>Macrina</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>ASM Press</publisher>
		</imprint>
	</monogr>
	<note>3rd edition</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Extracting causal graphs from an open provenance data model</title>
		<author>
			<persName><forename type="first">Simon</forename><surname>Miles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><forename type="middle">T</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steve</forename><surname>Munroe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sheng</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thibaut</forename><surname>Assandri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luc</forename><surname>Moreau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Concurrency and Computation: Practice and Experience</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="577" to="586" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A scientist&apos;s nightmare: Software problem leads to five retractions</title>
		<author>
			<persName><forename type="first">Greg</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">314</biblScope>
			<biblScope unit="issue">5807</biblScope>
			<biblScope unit="page" from="1856" to="1857" />
			<date type="published" when="2006-12">December 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Provenance-aware storage systems</title>
		<author>
			<persName><forename type="first">Kiran-Kumar</forename><surname>Muniswamy-Reddy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">A</forename><surname>Holland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Uri</forename><surname>Braun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Margo</forename><surname>Seltzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Annual Technical Conference</title>
		<imprint>
			<publisher>USENIX</publisher>
			<date type="published" when="2006-06">June 2006</date>
			<biblScope unit="page" from="43" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Review on computational trust and reputation models</title>
		<author>
			<persName><forename type="first">Jordi</forename><surname>Sabater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carles</forename><surname>Sierra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell. Rev</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="60" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A survey of data provenance in e-science</title>
		<author>
			<persName><forename type="first">Yogesh</forename><surname>Simmhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Beth</forename><surname>Plale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dennis</forename><surname>Gannon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGMOD Record</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="31" to="36" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">MetaML and multi-stage programming with explicit annotations</title>
		<author>
			<persName><forename type="first">Walid</forename><surname>Taha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tim</forename><surname>Sheard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">248</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="211" to="242" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Security issues in a SOA-based provenance system</title>
		<author>
			<persName><forename type="first">Victor</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><forename type="middle">T</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Simon</forename><surname>Miles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sheng</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steve</forename><surname>Munroe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sofia</forename><surname>Tsasakou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luc</forename><surname>Moreau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">Luc</forename><surname>Moreau</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Ian</forename><forename type="middle">T</forename><surname>Foster</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">4145</biblScope>
			<biblScope unit="page" from="203" to="211" />
			<date type="published" when="2006">2006</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Reflective programming in the relational algebra</title>
		<author>
			<persName><forename type="first">Jan</forename><surname>Van Den Bussche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dirk</forename><surname>Van Gucht</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gottfried</forename><surname>Vossen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="537" to="549" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">UK government gets bitten by Microsoft Word. Sydney Morning Herald</title>
		<author>
			<persName><forename type="first">Sam</forename><surname>Varghese</surname></persName>
		</author>
		<ptr target="http://www.smh.com.au/articles/2003/07/02/-1056825430340.html" />
		<imprint>
			<date type="published" when="2003-07">July 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Three decades of data integration -all problems solved</title>
		<author>
			<persName><forename type="first">Patrick</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Klaus</forename><forename type="middle">R</forename><surname>Dittrich</surname></persName>
		</author>
		<editor>René Jacquart</editor>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Kluwer</publisher>
			<biblScope unit="page" from="3" to="12" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
