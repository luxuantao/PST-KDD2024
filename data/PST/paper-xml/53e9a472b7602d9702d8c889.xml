<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Network Architecture for Heterogeneous Mobile Computing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Eric</forename><forename type="middle">A</forename><surname>Brewer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Randy</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yatin</forename><surname>Chawathe</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Steven</forename><forename type="middle">D</forename><surname>Gribble</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Todd</forename><surname>Hodes</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Giao</forename><surname>Nguyen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mark</forename><surname>Stemm</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tom</forename><surname>Henderson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><roleName>MICROSOFT RESEARCH SRINIVASAN S E S H A N , I B M T</roleName><forename type="first">Venkata</forename><forename type="middle">N J</forename><surname>Padmanabhan</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<author>
							<persName><surname>Watson Research Center</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF CALIFORNIA AT BERKELEY</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Network Architecture for Heterogeneous Mobile Computing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8B097DDF8EE6849BD0CC35FDE2353591</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This article summarizes the results of the BARWAN project, which focused on enabling truly useful mobile networking across an extremely wide variety of real-world networks and mobile devices. We present the overall architecture, summarlze key results, and discuss four broad lessons learned along the way. The architecture enables seamless roaming in a single logical overlay network composed of many heterogeneous (mostly wireless) physical networks, and provides significantly better TCP performance for these networks. It also provides complex scalable and highly available services to enable powerful capabilities across a very wide range of mobile devices, and mechanisms for automated discovery and configuration of localized services. Four broad themes arose from the project: 1) the power of dynamic adaptation as a generic solution to heterogeneity, 2) the importance of cross-layer information, such as the exploitation of TCP semantics in the link layer,</p><p>3) the use of agents in the infrastructure to enable new abilities and to hide new problems from legacy servers and protocol stacks, and 4) the importance of soft state for such agents for simplicity, ease of fault recovely, and scalability.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>h e BARWAN project was a three-year Defense A d v z c e d Research Projects Agency (DARPA)-funded project at the University of California at Berkeley that focused on enabling truly useful mobile networking across an extremely wide variety of real-world networks and mobile devices. This article presents the overall architecture, summarizes key results, and discusses broad lessons learned along the way. We attacked nearly all aspects of the problem, including link-layer and transport protocols, mobile routing, power management, application support, multimedia streaming, and local and global network services.</p><p>For quite some time, our group has been driven by a simple but compelling mantra: "Access is the Killer App." Originally, in 1994, it was an argument against the prevailing trend toward mobile devices that were essentially islands of computation -mobile computers looking for a "killer app" similar to a personal organizer. But the phrase is really an argument that what matters is not so much what the device can do, but rather the data and computing power to which it has access. It is possible to harness terabytes of data and the power of supercomputers even while mobile -as long as you access them over a ubiquitous network.</p><p>The resulting architecture reveals how to build this network out of an overlaid collection of networks, how to seamlessly roam around it, how to make it perform well, and how to leverage computing in the infrastructure to enable new abilities and services for even the simplest mobile devices.</p><p>We believe in ubiquitous localized networking: the network as a whole has broad coverage, but connection quality and services vary greatly by location. The connection may vary from wired or infrared in-room networks with great performance, to metropolitan cellular networks, to satellite networks with high latencies but tremendous coverage. Services vary greatly as well: from home/office printer access, to local driving directions, to global services such as search engines and Web access. This is an alternative to the idea of ubiquitous computing <ref type="bibr">[l]</ref>, in which we care far more about nearby connectivity than nearby computing. We also believe in a powerful infrastructure that is highly available, cost effective, and sufficiently scalable to support millions of users. In general, computation, storage, and complexity should be moved from the mobile devices into the infrastructure, thus enabling powerful new services, better overall cost performance, and small, lightweight, low-power, inexpensive mobile devices with tremendous functionality. We have built such an infrastructure and will show how it provides new abilities for a very simple mobile client, the PalmPilot personal digital assistant (PDA).</p><p>We have implemented and evaluated the architecture over a three-year period; many of the specific results have already been evaluated in the literature. We will often refer to such papers for more detail and for complete coverage of related work. This article evaluates the architecture as a whole and summarizes the lessons we have learned.</p><p>The architecture is probably best introduced in terms of some of the challenging problems for which it offers solutions: We provide seamless mobility both within a network and across heterogeneous networks. The detection and setup of network connections is transparent and automatic, as is the selection of the best network in range. For several networks, we also provide very low-latency handoffs (below 200 ms), thus enabling smooth audio and video even while roaming, We provide a reliable transport layer, based on TCP, that works with legacy servers, while hiding the effects of wireless losses and asymmetry that typically ruin TCP performance. We provide automatic discovery and configuration of local network services, such as local printers and Domain Name Service (DNS) servers. We also provide remote control of local environments even if they are new to the user, such as the A/V equipment in another's lab. We support thin clients through dynamic adaptation of content, tuning the content specifically for the device, the user, and the current quality of the network connection, often reducing latency by more than a factor of five. We also enable new abilities for such devices by leveraging computation in the infrastructure. We provide cluster-based support for scalable, manageable, and highly available infrastructure services. We also provide a layered programming model for implementing services that allows authors to focus on service content rather than the challenges of availability and scalability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Basic Approach</head><p>There are two basic views of the architecture: the physical view of a client roaming through an overlaid collection of networks, shown in Fig. <ref type="figure" target="#fig_1">1</ref>, and the network-layer view, shown in Table <ref type="table">1</ref>. In Fig. <ref type="figure" target="#fig_1">1</ref>, in addition to heterogeneous clients, networks, and servers, we provide a proxy to assist with mobility and dynamic adaptation. The three black circles indicate points visible from the client; horizontal handoffs occur between two cells of the same network, while vertical handoffs occur between different networks (e.g., radio frequency wireless to satellite). The architecture also enables high-performance reliable data transport for these networks.</p><p>A key concept is overlay networking, which is the unification of several heterogeneous networks, of varying coverage and performance, into a single logical network that provides coverage that is the union of the networks' coverage with performance corresponding to the best network in range. In addition to traditional cell-based roaming (horizontal roaming), we provide transparent roaming across the constituent networks (vertical roaming), even when this requires changing the I P address or network interface.</p><p>Given an overlay network, the next immediate challenge is the poor performance delivered by standard TCP over the wireless and asymmetric networks that enable mobility. TCP assumes that all losses are due to congestion, and that the connection is symmetrical, both of which may be false. We surmount these issues through a combination of TCP enhancements and corrective agents in the infrastructure.</p><p>Another key concept and primary contribution is the proxy architecture, which uses a powerful agent in the infrastructure to adapt content dynamically to support heterogeneous networks and mobile devices that (nearly all) servers handle poorly. The proxy enables useful access even from very simple devices.</p><p>Finally, we define an architecture for adaptive network services. IP connectivity is not sufficient: mobile users need to discover, configure, and use local services, such as DNS servers, local printers, and in-room control of lights and A/V equipment. This enables a far richer environment for mobile users, and when combined with the proxy greatly simplifies the creation and use of new services.</p><p>After looking at broad themes and our network testbed, we examine each of the four major areas. We close by revisiting our themes and summarizing our conclusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Four Key Themes</head><p>There are some ideas and techniques that are used repeatedly throughout the architecture. In particular, there are four general themes that merit higher-level discussion and are revisited throughout the discussion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dynamic adaptation -</head><p>The general way we deal with varying network conditions and client heterogeneity. This includes new adaptive mechanisms for TCP, on-demand format conversion, real-time video transcoding, dynamic quality/performance trade-offs, and even dynamic generation of customized user interfaces for small devices.</p><p>Cross-layer optimization -There are several places where we explicitly break the open systems interconnection (OSI) networking model to enable smarter adaptation or better performance. These include using physical layer information to trigger handoffs, and exploiting transport-layer information to guide link-level retransmission and application-level dynamic adaptation. W Table <ref type="table">1</ref>. Layered view of the architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Agent</head><p>capabilities or to improve performance. Fundamentally, the role of these agents is to hide to vagaries of mobility, wireless networking, and extreme heterogeneity from all of the legacy clients and infrastructure; the agents make everything look like it is "supposed to." The alternative is take an end-to-end approach in which you are allowed to m o d e all components, including clients and servers. This has the advantage of a potentially better overall solution, but it is nearly impossible to deploy since it requires upgrading most clients and servers. We will show that the agent-based solutions not only have a better deployment path, but in many cases perform better and in some cases are the only option, because they leverage information outside of the particular end-to-end connection. We use agents to handle mobility and vertical handoff, to enhance TCP performance for wireless or asymmetric networks, and as the basis of proxy architecture.</p><p>Exploit Soft State -Soft state is state that aids in performance or adds capabilities, but is not required for correctness. Soft state need not be recovered after failures, can be thrown out at any time, and can typically be stale or inconsistent without violating correctness. In general, most of our agents use soft state to make them simpler and trivially fault-tolerant. We exploit soft state in all aspects of the design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The BARWAN Testbed</head><p>We concentrate on four networks in the overlay testbed: IBM Infrared Wireless LAN: This infrared network forms our basic in-room network <ref type="bibr" target="#b1">[2]</ref>. Figure <ref type="figure" target="#fig_4">2</ref> shows the typical bandwidths, latencies, cell sizes, and registration times for these networks. The effective bandwidth is the throughput measured by the user, excluding overhead and retransmissions. Latency measures the round-trip time for a simple packet. Cell size is the approximate diameter of the coverage area of one transmitter (base station). Registration time is the time to set up the initial connection. The registration times were measured by sending a stream of User Datagram Protocol (UDP) packets to a mobile host, turning on the network interface, and marking the time between when the network interface was turned on and when the first data packet was received by the mobile. The key conclusions are that there is wide variation in all dimensions, and that there is no single "best" network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Overlay Networking</head><p>Figure <ref type="figure" target="#fig_5">3</ref> shows an example of a wireless overlay network. Lower levels comprise high-bandwidth wireless cells that cover a relatively small area. Higher levels in the hierarchy provide a lower bandwidth per unit area connection over a larger geographic area. In our system, we have three overlay levels. The lowest level comprises a collection of disjoint room-size high-bandwidth networks, which provide the highest bandwidth per unit area: 1 Mbis or more per room. The second level consists of buildingsize high-bandwidth networks that provide approximately the same bandwidth as the room-size networks, but cover a larger area (e.g., a single floor of a building). The final level is a wide area data network, which provides a much lower-bandwidth connection, typically tens of kilobits, over a much wider geographic area. We can also support "mobile" wired networks, such as dynamically connecting to a local Ethernet subnet via DHCP.</p><p>We must depend on existing networking technologies and wireless data providers to have a full range of wireless networks at our disposal. Although we would ideally modify some components of these systems (e.g., base station software), this is not always possible. For example, while we can modify and experiment with the base stations for the room-and building-size overlays, the wide area data overlay is owned and administered by a third party. As a result, we cannot directly control the overlay's infrastructure. This is an important consideration because it limits the modifications we can make (in these cases) to support vertical handoff.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Vertical Handoffs</head><p>The primary objective of a vertical handoff system is to minimize the handoff latency for an individual user while keeping bandwidth and power overheads as low as possible.</p><p>There are some important differences between the horizontal and vertical handoffs. First, there is a distinction between up and down in vertical handoffs: an upward vertical handoff is a handoff to an overlay with a larger cell size and lower bandwidthlarea, and a downward vertical handoff is a handoff to an overlay with a smaller cell size and higher bandwidthlarea. Downward vertical handoffs are less time-critical, because a mobile can always stay connected to the upper overlay during handoff. Second, in a heterogeneous network, the choice of the "best" network can be challenging; for example, an in-building R F network with a weak signal may yield better performance than a wide-area data network with a strong signal. Finally, there may also be financial differences that do not arise in a single network; some networks charge per minute or byte.</p><p>The primary technical objectives in the design of a seamless vertical handoff system are the balance among handoff latency, power consumption, and wasted bandwidth.</p><p>Low-latency handoff: Make the switch -.</p><p>. r--I between networks as seamless as possible with minimal interruption or data loss. As a user roams among areas of good and poor connectivity, the only user-visible change should be due to the limitations of the specific networks. For example, lower levels may support full-motion video and highquality audio, while higher overlays may support only audio. Power savings: Minimize the power drain due to multiple simultaneously active network interfaces. The simplest approach to managing multiple network interfaces (NIs) is to keep them on all the time. However, measurements of the network interfaces <ref type="bibr" target="#b3">[6]</ref> show that the IBM Infrared and WaveLAN interfaces together consume approximately 1.5 W even when not sending or receiving packets.</p><p>Bandwidth overhead: Minimize the amount of additional network traffic used to implement handoffs. Implementing vertical handoffs consumes bandwidth in the form of beacon packets and handoff messages.</p><p>There are many inherent trade-offs in meeting these objectives. For example, reducing power consumption by keeping network interfaces off when not in use increases handoff latency. Similarly, zero-latency handoff could be achieved by simply sending and receiving data across all network interfaces simultaneously at all times, but this results in an inordinate waste of bandwidth and power. Our goal is to balance low-latency handoffs with the issues of power and bandwidth efficiency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Handoff Mechanism</head><p>Handoffs are built on top of the mobile routing capabilities of Mobile IP [7], shown in Fig. <ref type="figure">4</ref>. Mobile hosts (MHs) connect to a wired infrastructure via base stations (BSs) which act as foreign agents. A home agent (HA) encapsulates packets from the source and forwards them to the BSs.</p><p>One important difference is that the cure-of address (for BSs we control) is a multicast rather than unicast address. The mobile selects a small group of BSs to listen to this multicast address for packets forwarded by the HA. One of the BSs is selected by the MH to be a fowurding BS; it decapsulates the packets sent by the HA and forwards them to the MH. The others are buffering BSs; they hold a small number of packets from the H A in a circular buffer. These buffers are soft state: they improve performance and can be lost at any time without affecting correctness.</p><p>BSs send out periodic beacons similar to Mobile IP foreignagent advertisements. The MH listens to these packets and determines which BS should forward packets, and which should buffer packets in anticipation of a handoff the rest simply don't listen to the multicast group at all. When the mobile initiates a handoff, as shown in Fig. <ref type="figure">5</ref>, it instructs the old BS to move from forwarding to buffering mode,' and the new BS to move from buffering to forwarding mode. The new BS forwards the buffered packets that the mobile has not yet received.</p><p>An upward vertical handoff is initiated when several beacons from the current overlay network are not received. The MH decides that the current network is unreachable and hands over to the next higher network. The arrival of beacons on a lower overlay initiates a downward vertical handoff. The MH determines that the mobile is now within range and switches to the lower overlay. The handoff starts when the lower overlay becomes reachable or unreachable, and ends when the first packet forwarded from the new overlay network arrives at the MH. We depend only on the presence or absence of packets to make vertical handoff decisions. For horizontal handoffs, the MH uses a channel-specific metric to compare different BSs and connects to the best one according to that metric. This allows the horizontal handoff system to operate seamlessly underneath the vertical handoff system. For an overlay network that handles mobility directly, such as Metricom, our system does nothing and lets the network make its own horizontal handoff decisions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Performance</head><p>The primary metric we use to evaluate handoff performance is handofllateng (Fig. <ref type="figure">5</ref>). More detailed descriptions of this work <ref type="bibr">[8]</ref> evaluate not only more optimizations, but also power management and bandwidth overhead. They also provide breakdowns of the performance numbers and analytical models for each method.</p><p>Here we examine the basic mechanism and the two most useful optimizations.</p><p>Fast Beaconing (FB) -The MH can selectively instruct a subset of the BSs that are listening to its multicast group to transmit beacon packets at a higher frequency, thus reducing the time to discover connectivity status. However, this reduces the effective bandwidth on the wireless interface and may cause media access problems on the wireless subnet.</p><p>Header Doublecasting (HD) -Two BSs are placed . . . in forwarding mode simultaneously: the current BS and a BS of the next higher overlay. The secondary BS sends only the headers of the packets (since the data is received on the primary interface); this provides up-todate status for the secondary network. When more than n consecutive packets are received on a new interface with none received on the old interface, the MH decides that the old overlay is unreachable and initiates a handoff to the new interface.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions</head><p>We designed and implemented an overlay networking system that enables largely transparent handoffs from in-room through metropolitan area networks. I n addition to the basic handoff mechanism, we developed two enhancements that significantly reduce handoff latency, thus enabling smooth handoffs even for intolerant applications such as audio playback. Not all transitions between levels in the overlay network hierarchy can be treated identically. In our system, the best choice was specific to the pair of networks that were chosen. For our testbed, header double-casting performs the best for transitions between in-room and inbuilding networks, and fast beaconing works best for transitions between in-building and wide-area networks.</p><p>Depending on the presence or absence of data packets rather than channel measurements allowed us to rapidly add new network interfaces to our hierarchy. In addition, by depending only on packet reception, we can handle in an identical way causes for disconnection other than mobility, such as the insertion or removal of PCMCIA network cards.</p><p>Our solution touches all four themes. Transparent vertical handoff is an agent-based dynamic adaptation to changes in network quality, including disconnection and the discovery of a better network. It uses cross-laver information for both horizontal handoff (in networks &amp;at we have control of the BSs) and enabling upper layers to adapt to network changes (covered later). This is among the earliest work in the architecture, and it does not uniformly exploit soft state. We do use soft state for the low-latency handoffs, since we can lose data at the buffering BSs. However, we use hard state for the forwarded connections, a decision we inherited from Mobile IP. Nonetheless, both still provide support for the power of soft state, since we encountered many problems that could have been avoided if we didn't have to maintain hard state at the agents. For example, there are complex race conditions between the recovery of hard state at the agents (after a failure) and the mobile moving out of range that would not exist with soft state. If we redid the implementation today, we would use only soft state at the agents.</p><p>For more information on overlay networking see <ref type="bibr">[8, 91;</ref> on low-latency handoffs see <ref type="bibr">[lo, 111;</ref> and on power management see <ref type="bibr" target="#b3">[6]</ref>.  edgments to pace out new data at a consistent rate, a procedure called ack clocking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Combating Wireless Packet losses</head><p>TCP is tuned to perform well in traditional networks where packet losses occur almost entirely due to congestion. However, networks with wireless or other lossy links also suffer from significant losses due to bit errors and handoffs. TCP responds to all losses by invoking congestion control and avoidance algorithms, resulting in degraded end-to-end performance in wireless systems. In this section we present the design of a transport-aware link protocol, the Berkeley Snoop protocol, to overcome these problems and shield fixed senders on the Internet from the vagaries of the wireless link. We also compare our protocol to alternatives to understand the precise reasons for improved performance.</p><p>The Snoop Protocol -The Snoop protocol is founded on three of our design themes: agent-based adaptation; crossprotocol interactions, in which the link agent is aware of transport semantics and messaging; and the use of soft state. Due to the agent approach, we require no modifications to TCP implementations on fixed hosts in the Internet, and we completely preserve the end-to-end semantics of TCP. The network topology and agent location are shown in Fig. <ref type="figure" target="#fig_9">7</ref>.</p><p>For transfer of data from a fixed host to a mobile host, we deploy a snoop agent at the BS. The agent caches unacknowledged TCP segments and performs local retransmissions of lost segments, which it detects based on duplicate TCP acks from the mobile host and timeouts of locally maintained timers. Furthermore, it suppresses duplicate acks of wireless losses, so they are not seen by the TCP sender, thus shielding</p><formula xml:id="formula_0">- _- - -_ ---- Legacy TCP I =LAN B W A N i - Vanilla TCP X I Vanilla + SACK I Split connection X Split + SACK X I I X Link-level retransmission i Snoop X I Snoop + SACK I 0 0.2 0 4 0 6 0 8 1 1.2 1.4</formula><p>Bandwidth (Mb/s) I the sender from these noncongestion-related losses. In particular, the agent completely hides transient situations of very low communication quality and even temporary disconnection.</p><p>For data transfer from a mobile host to a fixed host, we exploit additional local knowledge because we control both the BS and the mobile sender. The snoou agent detects</p><formula xml:id="formula_1">I V</formula><p>missing packets at the BS by snooping on packets arriving from the mobile host and identifying holes in the transmission stream. By using heuristics based on local queue-length information, the agent classifies wireless losses as being due to congestion or corruption, and adds corruption-induced losses to a list of holes. When it eventually sees duplicate acks for these holes arriving from the fixed receiver, signifying a loss of this packet, it sets a bit in its TCP header and forwards it on to the mobile sender. The sender uses this explicit loss notification (ELN) bit to identify that the loss was unrelated to congestion, and retransmits the packet without taking any congestion control actions.</p><p>Snoop Evaluation -A variety of protocols have been proposed in the literature to overcome the effects of wireless bit errors on TCP performance. We classify these schemes into three broad categories:</p><p>End-to-end protocols, where loss recovery is performed by Link-layer protocols, which provide local reliability Split-connection protocols, which break the end-to-end connection into two parts at the BS to shield the sender from the wireless link Figure <ref type="figure">8</ref> compares the solutions for performance and indicates which solutions work with legacy TCP stacks and which provide correct end-to-end semantics. The full papers on this topic examine more protocols and a wider array of bit error rates, and describe the Snoop protocol in detail <ref type="bibr">[12, 131.</ref> We focus on data transfer from a fixed host to a mobile host. Each test consists of an 8 Mbyte transfer over a combined network with a wired section and a single-hop wireless section using 915 MHz WaveLan. The LAN numbers use a single 10 Mb/s Ethernet hop and have a bandwidth-delay product of about 1.9 kbyte, while the WAN numbers use 16</p><p>Internet hops over the wide area, with a bandwidth-the sender -.</p><p>delay product of about 23 kbytes. We ensured that Correct there were no losses due to congestion to isolate s e m y t i c s I corruption from congestion. Wireless losses were emulated by IP checksum corruption according to an exponential distribution of bit errors with an average bit error rate of 1/64 kbytes (about 1.9 x which corresponds to a packet loss rate of 2.3 percent with 1400-byte packets. Figure <ref type="figure" target="#fig_10">9</ref> graphs the performance against a range of bit error rates.</p><p>End-to-end protocols attempt to make the TCP sender handle losses through the use of two techniques. First, they use some form of selective acknowledgments (SACKS) to allow the sender to recover from multiple packet losses in a window I 1 mechanism. without resorting to-a coarse timeout. Second, they attempt to have the sender distinguish between congestion and other forms of losses using an ELN The simdest end-to-end auuroach is vanilla TCP LAN and 25 percent on the WAN. The basic problem is that the window size remains small all the time, and performance only gets worse with a larger bandwidth-delay product (as in the WAN case).</p><p>Adding SACKs helps to some extent, but only when error rates are low or medium (see Fig. <ref type="figure" target="#fig_10">9</ref>). In the LAN case, we used a simple SACK scheme based on a subset of the SMART proposal <ref type="bibr" target="#b11">[14]</ref>. This was the best of the end-to-end protocols that we tried, but it is still slower than the Snoop protocol. In the WAN case, we based our SACK implementation <ref type="bibr">[12]</ref> on RFC 2018, which was 65 percent of optimal. SACKs often allow the sender to recover from multiple losses without timing out. However, the sender's congestion window decreases every time there is a packet dropped on the wireless link, causing it to remain small. This is precisely the situation the Snoop protocol avoids.</p><p>Split-connection approaches completely hide the wireless link from the sender by terminating the TCP connection at the BS. The second connection can use techniques such as negative or selective acknowledgments, rather than standard TCP, to perform well over the wireless link. This class does not preserve the end-to-end semantics of TCP.</p><p>We present two examples: when the wireless connection uses vanilla TCP and when it uses the SMART-based SACK scheme described above. With vanilla TCP, the performance improvement is not as good as with the other schemes, especially in the WAN case. The congestion window of the wired side remains large and stable compared to an end-toend TCP connection, where the congestion window size fluctuates rapidly However, the wired connection doesn't make rapid progress because it periodically stalls due to the advertised window from the BS being zero. When SACKs are used over the wireless connection, performance is improved. However, even this enhancement performs about 10 percent worse than Snoop, in addition to not providing correct end-to-end semantics and causing slower, more complicated handoffs.</p><p>Link-layer solutions attempt to hide link-related losses from the TCP sender by using local retransmissions and possibly forward error correction. Since the end-to-end TCP connection passes through the lossy link, the TCP sender may not be fully shielded from wireless losses. This can happen either because of adverse timer interactions between the two layers <ref type="bibr">[15]</ref>, or more likely because of TCP's duplicate acknowledg-ments causing fast retransmissions at the sender even for segments that are locally retransmitted.</p><p>Our base link-layer algorithm uses cumulative acknowledgments to determine losses and retransmits them locally from the BS to the mobile host; it leverages TCP acknowledgments instead of generating its own. It is equivalent to the Snoop protocol except that it does not suppress duplicate acknowledgments. Thus, although this protocol successfully prevents sender timeouts, it does not prevent the sender from reducing its window in response to wireless losses. In the LAN experiments, the throughput difference is about 10 percent, but rises to 30 percent in the WAN case due to the higher bandwidth-delay product. The rapid fluctuations in sender window size lead to an average size that is smaller than the WAN bandwidth-delay product, which is the reason for the significant performance degradation. This situation is avoided by the TCP-aware Snoop protocol that suppresses duplicate acknowledgments. Finally, the best protocol, Snoop enhanced with SACK information, improves the performance of basic Snoop, especially in burst error situations (not shown, see <ref type="bibr">[13]</ref>).</p><p>To summarize, Snoop enhanced with SACK provides the best performance among the protocols we studied, maintains end-to-end semantics, and involves no changes to TCP stacks on the fixed hosts. Its relative performance improves significantly as the bit error rate increases (up to 20 times improvement for the error rates we investigated), and also improves as the bandwidth-delay product increases. Our results also demonstrate that the end-to-end connection need not be split at the BS to achieve good performance. SACKs help in recovering from burst losses, but are not sufficient when windows are small. Finally, the use of ELN helps in separating congestion control from loss recovery s can now be made aware of noncongestion-relat</p><p>The Snoop protocol clearly reinforces our focus on agentbased approaches since it works with legacy servers and provides the best performance, even over end-to-end solutions. Snoop exploits cross-layer information: in particular, we use both a transport-aware link layer (with Snoop) and a linkaware transport protocol (with ELN). The snoop agent also exploits soft state; its loss or corruption does not affect the protocol's correctness. We achieve this by taking advantage of TCP's cumulative acknowledgments, which makes it trivial to refresh out-of-date state. If the state associated with the protocol is lost, it can be rebuilt upon the arrival of the next packet and ack. The Snoop protocol should thus be viewed as a performance booster for networks with lossy links. This con-TCP relies on the ack c ace data transmissions into the networ s to robust condegrades performance in networks that exhibit asymmetry. A network is said to exhibit asymmetric characteristics with respect to TCP if the data transport performance in one direction significantly affects the traffic and network characteristics in the opposite direction. The traffic in the reverse direction could just be the TCP acks. This general definition leads to three kinds of asymmetry: Bandwidth: the bandwidth in the forward direction (toward the user) is 10 to 1000 Loss rates: packet loss may be much greater upstream than downstream. This could be inherent in the network technology or the result of distinct upstream and downstream networks. Ack losses limit the performance of TCP in the primary direction. We identify three specific challenges that network asymmetry presents for TCP performance. We discuss end-to-end techniques (i.e., enhancements to TCP) and agent-based techniques to alleviate these problems.</p><p>First, the ack stream corresponding to a data transfer could interfere with forward progress either Indirectly by the breakdown of ack clocking due to reversechannel congestion or wireless losses Directly by competing with the flow of data packets (as in half-duplex networks like Metricom) Our basic solution is to decrease the frequency of acks. Our end-to-end approach, called ack congestion control, allows the receiver to reduce the frequency of acks adaptively, while ensuring that the sender is not starved for acks. This requires the TCP sender to tell the receiver the size of its window. Our agentbased approach, called ackfiltering, operates at the router or BS on the far side of the reverse channel. It exploits the cumulative nature of TCP acks to filter redundant acks from the queue when a new ack arrives for the same connection.</p><p>This decreased frequency of acks leads to the second problem: since each new ack could cause the sender's window to slide forward by several segments, the sender could emit a burst of several packets back to back and induce congestion. Since the TCP sender increments its congestion window based on the number of acks and not on how many bytes are acknowledged with each ack, window growth could be much slower. An endto-end solution, called sender adaptation, breaks up a potentially large burst into several smaller bursts and regulates these smaller bursts according to the effective data transfer rate of the connection. Our agent-based solution, called ack reconstruction, hides the infrequent ack stream from the TCP sender by deploying an agent at the near side of the reverse channel. Once the acks have traversed the constrained network, the ack reconstructor regenerates the original smooth ack stream by inserting new acks to fill in gaps and by spacing apart acks that have been compacted. The end result is that an unmodified TCP sender can continue to rely on standard ack clocking to sustain the data transfer at a consistent rate.</p><p>The final problem arises specifically in an asymmetric bandwidth situation where the acks of the forward-direction data transfer must share the constrained reverse channel with a reverse-direction data transfer (simultaneous bidirectional data transfers). With FIFO queuing, the large data packets of the reverse transfer could block the transmission of acks for long periods of time, thereby starving the sender of the forward transfer. Our agent-based solution to this problem, called acks-first scheduling, involves giving acks strictly higher priority than data packets. The rationale is that the small acks packets, when sent infrequently, would have little impact on the performance of the reverse data transfer, but their timely transmission is critical to sustaining good performance for the forward data transfer. Since the resolution of this problem requires control over the scheduling of data and acks at the reverse bottleneck link, it is not possible to solve this problem without an agent.</p><p>We have performed a detailed evaluation of these solution techniques both via ns simulation as well as in our network testbed. These results are discussed in detail in [16, 171. We present here sample results for both the asymmetric bandwidth and asymmetric latency configurations. Figure <ref type="figure" target="#fig_11">10</ref> shows the performance of various schemes when there is two-way traffic in an asymmetric network. We make two observations:</p><p>Acks-first scheduling helps the forward transfer significantly by avoiding the long delays on the reverse channel. Ack congestion control (ACC) reduces the impact of forward acks on reverse transfers.</p><p>Figure <ref type="figure" target="#fig_11">11</ref> shows the performance of various schemes obtained via a simulation of the Metricom packet radio network. The important observation is that ack filtering (AF) and, to a lesser extent, ACC result in improved performance. The reduced frequency of acks decreases MAC contention, reducing latency variation and eliminating overhead for switching directions. The performance improvement is between 20 and 35 percent.</p><p>To summarize, the set of end-to-end and agent-based techniques we have developed overcome the adverse effects of asymmetry in a variety of asymmetric situations.</p><p>As with Snoop, our solutions combine agent-based approaches with cross-layer information and extensive use of soft state. The best version combines two agents to provide good performance with legacy TCP endpoints: the agent on the far side of the asymmetric link provides ack compression and better ack scheduling relative to bidirectional transfers, while the near-side agent reconstructs a smooth ack stream to enable smooth ack clocking in unmodified senders. Both of these agents exploit cross-layer information and assumptions (such as impor-clients and the formats and ab of the servers. The basic architecture is shown in Fig. <ref type="figure" target="#fig_11">12</ref>.</p><p>In addition to the wide variation in networks covered in previous sections, there are also significant variations in software and hardware. Software varia-</p><formula xml:id="formula_2">I "(!" "''('.Y Pldl'!il!]i&gt; L#!&gt;!:</formula><p>tance of a smooth ack stream) as well as soft state for simple implementations that improve performance while maintaining correctness even in the presence of faults.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Summary</head><p>In summary, our general approach to improving data transport performance in mobile, wireless networks has been to identify the specific characteristics of such networks, such as wireless errors, asymmetry, and unfairness, that impact TCP performance, and then to explore both TCP enhancements and agent-based mechanisms that alleviate them.</p><p>The agent-based approaches are often as good as or better than end-to-end TCP modifications, and provide the critical additional advantage of immediate deployment, thus allowing us to integrate wireless technologies cleanly into the rest of the global Internet. The keys to making agents work well are to exploit cross-layer information, such as the ack semantics of TCP, and to build them based on soft state for simplicity, scalability (since there is no consistency issue), and availability (since they are trivially restartable). Finally, agent-based approaches are the only solution when we need to exploit cross-layer information from multiple connections, as illustrated by ack-first scheduling for asymmetric links.</p><p>For more information on wireless TCP see <ref type="bibr">[13]</ref>, on Snoop and handoffs see <ref type="bibr">[12]</ref>, and on handling asymmetry see <ref type="bibr">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Proxy Architecture</head><p>The key to applications in a mobile, wireless, very heterogeneous environment is the proxy architecture, which uses a proxy as a smart intermediary between traditional servers and heterogeneous mobile clients. The fundamental driver for this architecture is the inability of (nearly all) servers to handle the incredible variation in software, hardware, and networking capabilities of mobile clients. Through various forms of data transformation, the proxy can dynamically translate between the needs of Hardware variations are summarized in Table <ref type="table">2</ref>.</p><p>The key idea in on-demand transformation is distillation, which is highly lossy, real-time, datatype-specific compression that preserves most of the semantic content of a document or stream. For example, a color image can be scaled down and the number of colors reduced, thereby reducing the size of the representation. For video, we can reduce the frame size, frame rate, color depth, and resolution to create a smaller but reduced-quality representation. Intimate knowledge of each datatype allows distillation to achieve tremendous compression, sometimes better than a factor of 10, that preserves much of the semantic content of the original.</p><p>The first purpose of the distilled object is to allow the user to receive some version of an object quickly; they can then evaluate the value of downloading the original, or some part of the original. For instance, one can zoom in on a section of a graphic or video frame, or render a particular page containing PostScript text and figures without having to render the preceding pages. We define refinement as the process of fetching some part (possibly all) of a source object at increased quality, possibly the original representation.</p><p>The second and more powerful purpose is to enable new abilities in clients, which arises out of dynamic adaptation to formats and data rates that the client can handle. For example, we have enabled:</p><p>Web bandwidth. Table <ref type="table" target="#tab_3">3</ref> shows several kinds of dynamic adaptation the proxy can make in response to hardware, software, and network heterogeneity.</p><p>The image transcoder takes several input formats, including CIF and JPEG, and produces an optimized output. Figure <ref type="figure" target="#fig_11">13</ref> shows an example transformation. The output depends on the network conditions and the client's hardware and software capabilities. Typically we use a format that is both small and easy for the client to render.</p><p>The graphs in Fig. <ref type="figure" target="#fig_11">14</ref> depict end-to-end client latency for retrieving the original and each of four distilled versions of a</p><formula xml:id="formula_3">I -- -- ~ ~</formula><p>selection of GIF images. Each group of bars represents one image with five levels of distillation; the top bar represents no proxy at all. The y-axis number is the distilled size in kilobytes (so the top bar gives the original size). Note that two of the undistilled images are off the scale; the Soda Hall image is off by an order of magnitude. These numbers are from a Sun SparcStation 20. The images are fetched using a 14.4 modem through the Berkeley PPP gateway, via a proxy that runs each image through a GIF distiller. Each bar is segmented to show the distillation latency and transmission latency separately. Clearly, even though distillation adds latency at the proxy, it results in greatly reduced end-to-end latency, in addition to better-looking output for that client.</p><p>As with image transformation, video-stream transcoding mitigates all three forms of client variation. Figure <ref type="figure" target="#fig_11">15</ref>  and reducing JPEG quality to 25Percentresults in a size reduction from 10 kbYtes to 1.5 kbYte.</p><p>the trade-offs that can be made in video distillation. The video transcoder, called vgw, handles several video formats and can transcode video in real time at frame rates up to 30 frameshecond <ref type="bibr">[19]</ref>. Since each frame is converted in real time, the proxy can make frame-by-frame trade-offs and respond very dynamically to changing network conditions. As an example of a new ability enabled by the architecture, vgw makes it possible to watch MBone broadcasts over ISDN via adaptation from about 400 kbls to 128 kbls.</p><p>In both cases, the original servers are unaware of the transformations or of the limited capabilities of the clients or networks. Thus, we can combine very heterogeneous clients and networks with sophisticated legacy servers that target 18.8</p><p>' Cartoon (kbytes) 3.2 5,5</p><p>Measuring Changes in Network Characteristics conditions along the path from the proxy to the client.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>We have developed a network measurement system</head><p>To use transcoding to adapt to network variation, the proxy must have an estimate of the current network called Shared Passive Network Performance Discovery (SPAND) [20], which allows a measurement host to col-i I Hall 4.5 lect the actual application-to-application network performance (e.g., available bandwidth and latency)</p><formula xml:id="formula_4">I (kbytes)</formula><p>between proxies and clients. The proxy consults this database of performance information to determine the appropriate amount of distillation to use for a particular client. We have also added hooks for clients or third parties, such as the overlay networking software, to notify the proxy of changing network conditions. All new 9.4 the rest of the network, which include very high availability, ease of management, and scalability to support millions of users. In addition, these capab es are difficult to obtain, so we would like to isolate the utility requirements from the functionality of the proxy; this allows authors of proxy-based services to focus on the content of their service rather than on the challenges of availability and scalability. Toward this end, we break the proxy into three distinct layers, as shown in Fig. <ref type="figure" target="#fig_11">16</ref>. The lowest layer, scalable network service (SNS) support, provides all the availability, scalability, load balancing and monitoring functionality. The middle layer, transformation, aggregation, caching and customization (TACC), described below, provides a programming model for authors that simplifies service creation and that hides the details of the SNS layer, thus providing scalability and availability off the shelf. The top layer handles the actual presentation of data and client protocols such as HTTP, and manages all the open connections. Typically, service authors need only write TACC modules to implement their service; the SNS and service layers provide everything else.</p><p>To explore these issues, we built and deployed a scalable transformation proxy called TranSend, which is available publicly at http://transend.cs.berkeley.edu. It follows the layered architecture, and all of its functionality resides in the TACC layer via a collection of about a dozen modules. It has had over 10,000 unique users since its launch in April 1997, and many people use it all the time, even from wired networks such as modems and ISDN.</p><p>The SNS layer is implemented on a network of workstations to provide these benefits; the architecture and analysis of this layer are beyond the scope of this article, but are cov- ered in <ref type="bibr" target="#b17">[21]</ref>. Using a cluster of 10 Sun 140-MHz Ultra-1 workstations, we were able to show that even the image transformation part of Transend, which is relatively heavyweight, scales linearly to handle over 170 transformations/s, which is sufficient for more than 10,000 simultaneous users, and more than 10 million transformationsiday.</p><p>We have also demonstrated very high availability with very low downtime since the TranSend service began operation. The fault recovery capabilities enabled this uptime without any dedicated system administration staff. Figure <ref type="figure" target="#fig_11">17</ref> shows a trace of the availability, load balancing, and burst recovery mechanisms in action. Failed TACC workers are cleanly restarted in a few seconds, and new workers are automatically deployed as load rises; together, these mechanisms ensure low latency (short queue lengths), load balancing, and excellent overall response time, even with faults.</p><p>Finally, we found that the cost of the computing infrastructure is extremely low, about 25 cents/user/month for all of the equipment [21]. The basic reason for better cost performance is the statistical multiplexing enabled by moving resources from client devices into the infrastructure, where they can be shared. For example, Internet service providers (ISPs) typically have 1/20 as many modems as their customers, even though every connection requires one on each end. Similarly, computing power in the infrastructure is roughly 20 times more efficient simply because it is not idle 80 percent of the time (or more), as in mobile devices, which are often off and have bursty utilization even when in use <ref type="bibr">[22]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generahed Proxies: The TACC Model</head><p>So far, we have motivated the proxy architecture as a mechanism for on-demand transformation. However, the proxy architecture is far more general and powerful. In particular, we can generalize the proxy into a powerful platform for composable infrastructure services.</p><p>This more general model is called TACC, for transformation, aggregation, caching and customization. As described above, transformation is an operation on a single data object that changes its content; examples include filtering, format conversion, encryption, and compression.</p><p>Aggregation involves collecting data from several objects and collating it in a prespecified way. For example, one aggregator collects all listings of cultural events from a prespecified set of Web pages, extracts the date and event information from each, and combines the results into a dynamically generated "culture this week" page. The combination of transformation and aggregation by TACC workers results in an extremely general programming model; in fact, transformation proxies <ref type="bibr" target="#b19">[23]</ref>, proxy filters and caches, customized aggregators <ref type="bibr" target="#b20">[24]</ref>, and search engines are all subsumed by the TACC model.</p><p>Caching plays an interesting role in TACC, because in addition to caching original Internet content, the caches in our architecture can store post-transformation data, postaggregation content, and even intermediate results. Like all caches, its contents are entirely soft state that can be regenerated at the expense of network latency or computation.</p><p>Customnution allows many users to share a smaller number of services, by parameterizing parameters as they invoke the service A key strength of our architecture is the ease of composition of tasks; this affords considerable flexibility in the transformations and aggregations the service can perform, without requiring workers to understand task-chain formation, load balancing, or burst management, any more than programs in a UNIX pipeline need to understand the implementation of the pipe mechanism. We now look at some illustrative examples of TACC programs that reveal the power of worker reuse and composition.</p><p>Top Gun Wingman -Bringing Web access to resource-poor devices such as PDAs, smart phones, or set-top boxes is fundamentally difficult because these devices are ill-suited to the tasks of parsing, decoding, and rendering Web content. These devices do not directly support Web data types, and the development and runtime environments of the devices preclude their implementation. Even if data types such as G I F or JPEG images are supported, most Web images remain awkward to use due to the limitations in the screen, memory/storage capacity, and CPU performance. For example, the 3Com PalmPilot has a 160x160~2 grayscale display, 1 Mbyte of NVRAM, and a 16 MHz Motorola Dragonball processor.</p><p>The proxy architecture solves this problem by moving nearly all the complexity and cost into the infrastructure, where we can apply multiple workstations and leverage powerful libraries and development environments. By shifting complexity off the impoverished device and onto the TACC server. we were able to implement the Top Gun Wingman Web browser on the Palm Pilot, the first (and so far only) graphical Web browser for the Pilot. Wingman has more than 10,000 regular users.</p><p>The client-side code knows nothing about the Web; it merely knows how to receive and render various high-level data types such as bitmapped images and formatted text segments. All the HTTPHTML processing, image parsing, image distillation, and page layout are implemented in the TACC server as a pipeline of workers. The pipeline's output is a ready-to-render page, with both graphics and text.</p><p>Our partitioning of the Web browser has enabled a number of innovative features that are not possible without the proxy architecture: Accelerated Download Time -One worker in the Wingman TACC pipeline performs the same on-the-fly image distillation described above. This feature combined with more the efficient representation of the entire page as a single easyto-parse data block (versus multiconnection HTML) makes download times on Top Gun Wingman faster than even textonly PDA Web browsers.</p><p>Transparent Functionality Upgrades -Because most of the Web browser is implemented in the TACC server, it has been possible for us to upgrade the browser's functionality without redistributing software to all of the clients. F o r example, when we implemented a b e t t e r graphics transformer that performed high-frequency enhancement of images to increase edge visibility, we simply dropped in this worker as a replacement to the old image transformer, and all our clients instantaneously began receiving higher-quality images.</p><p>Aggregation Services -The Wingman browser has access to all the aggregation services implemented in our TACC server, since they compose. We have also built and deployed several aggregators that present condensed versions of popular search engine and directory services that are better suited to the limited screen real estate on the Palm Pilot.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Support for Complex Data</head><p>Types -There are many data types that would simply be infeasible to handle on the client side, such as ZIP files and PostScript. However, we c a n handle these d a t a types in t h e T A C C server. F o r example, we implemented a worker that accepts a Z I P compressed archive, a n d p r e s e n t s its c o n t e n t s t o t h e browser as a list of hyperlinks. When the user selects a link, the TACC worker extracts the relevant object, performs any required datatype-specific transformations, and then sends only that transformed element to the client. Since Pilot applications are normally stored as ZIP files, this allows users to install applications directly off the Internet with a single click.</p><p>Other TACC Services -In addition to Top Gun Wingman, there are many other TACC-based services. To illustrate the variety of applications, we highlight a few that are being deployed at Berkeley for widespread public use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Group Annotation for the Web -</head><p>Inspired by prior work on annotating the Web <ref type="bibr" target="#b21">[25]</ref>, Berkeley students built a scalable, highly available group annotation service <ref type="bibr" target="#b22">[26]</ref>. The annotations are kept in a separate database and combined with source documents on the fly via transformation; this allows annotation of any page, even without write access to the original. Controls are added with annotations, which allow the user to invoke a Java-based annotation viewerleditor. clients and the TACC server, which also does coordinate transformations and image transformations (reusing many of the Wingman TACC modules) corresponding to the MediaBoard draw operations occurring in the session. Top Gun Media-Board thus performs both data adaptation and protocol adaptation, making it a prime example of the flexibility of the TACC toolkit for building adaptive applications. Figure <ref type="figure" target="#fig_15">18</ref> shows a screenshot of the TGMB client.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Top Gun</head><p>Charon Indirect Authentication -We have built a proxied version of Kerberos IV, called Charon <ref type="bibr" target="#b25">[29]</ref>, for use with resource-poor clients such as PDAs and smart phones. This partitioning allows an untrusted proxy to interact with the Kerberos infrastructure on behalf of the clients, giving the clients full authenticated (and optionally encrypted) access to the services but relieving them of the significant burden of having a full Kerberos implementation. Even though nearly all the Kerberos functionality is implemented by the proxy, neither the user's Kerberos password nor their keys for new services ever leave the client device, thus enabling use of an untrusted proxy. Charon has the same immunity to protocolbased attacks as Kerberos, and is more immune to certain end-to-end attacks because of the nature of the client devices. In fact, Charon turns such devices into a powerful form of "smart card."</p><p>The success of the TACC platform in supporting Wingman and other applications is strong evidence for its role as an enabling technology for deploying complex, scalable, highly available, and composable services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Summary</head><p>We have presented a uniform architecture that addresses extreme variation in the areas of client hardware, software, and connectivity, via powerful dynamic adaptation of protocols and content. Because the architecture is structured around agent-based on-demand transformation, we require no changes to the existing infrastructure and servers.</p><p>We use cross-layer information to control the degree of distillation very dynamically based on current network conditions. For example, as a mobile user walks outside, not only do we perform a seamless vertical handoff, but we also notify the proxy of the change in network quality. In response the proxy increases the amount of distillation, thus maintaining the same response time (within about 10-20 percent) even though the network conditions have changed by more than an order of magnitude in bandwidth and latency (assuming a handoff from WaveLAN to Metricom).</p><p>Although not discussed, the cluster-based proxy implementation makes extensive use of soft state <ref type="bibr" target="#b17">[21]</ref>, including all of the management and worker state except for user profiles, which need to be persistent. In fact, we originally implemented the manager with mirrored hard state and failover, but later replaced it with a much simpler and more effective soft-state based approach.</p><p>The proxy architecture includes many significant contributions: *On-demand transcoding reduces end-toend latency, often by an order of magnitude, for a wide range of network media. Dynamic adaptation allows clients to refine content selectively and spend more bandwidth for improved quality as needed (e.g., zooming in on part of an image or video frame). Knowledge of client limitations allows transcoders to optimize content for each client: images, video, and rich text all look significantly better after distillation because they target the client's optimal colormap and screen fonts. This property leaves servers free to target the high end. Knowledge of changing network conditions, via cross-layer information, allows adaptation of transformation parameters to maximize the overall quality of service, including both representation quality and performance. Moving complexity into the infrastructure enables significant new abilities for clients, as illustrated by Wingman, Charon indirect authentication, and MBone participation over ISDN, among many other examples. The TACC model simplifies development of complex services, and hides the very challenging problems of scalability, availability, and load balancing. We have deployed for public use several TACC-based services that not only provide compelling services, but also show that the proxy architecture really can enable both powerful new services and a very heterogeneous mobile and wireless infrastructure. For more information on transformation see <ref type="bibr" target="#b26">[30]</ref>; on video transcoding see <ref type="bibr">[19]</ref>; on cluster-based services see <ref type="bibr" target="#b17">[21]</ref>; on TACC applications see <ref type="bibr" target="#b27">[31]</ref>; on network monitoring and SPAND see <ref type="bibr" target="#b16">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Adaptive Network Services</head><p>The network services component of the architecture builds on our routing, transport, and proxy architecture. It provides support for locale-specific discovery of available resources and "on-the-move'' reconfiguration of, and adaptation to, these resources. It additionally provides mobile clients with a generic "remote control" for their environment. This supports seamless interaction with the current environment as clients roam in overlaid networks.</p><p>We have developed for our building the following example services:</p><p>Untethered interaction with lights, video, and slide projectors, a VCR, an audio receiver, and other AIV equipment from a wireless laptop computer </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Service Discovery</head><p>The service discovery protocol allows for the maintenance of dynamic repositories of service information, advertises its availability, and supports queries against it. The Service Location Protocol <ref type="bibr" target="#b28">[32]</ref>, under development by the IETF Service Location working group, is one proposal for implementing local-area service discovery.</p><p>We have implemented local-area service discovery and are in the process of extending it for use in the wide area. The latter introduces additional challenges: scalability, security, hierarchies, and multiple administrative domains.</p><p>Local-area service discovery is based on embedding locution information into existing data networks rather than using external information such as GPS coordinates. Outfitted subnets periodically broadcast a beacon packet to the local subnet broadcast addresses (and in some cases multicast with limited scope).</p><p>The local server for a client's current attachment point is encoded in the beacons. Notifications of a change are implicit. Further service information is obtained by querying this service discoveiy server. The list of local services can be obtained by requesting the well-known meta-service INDEX. This minimal bootstrap standardizes the mechanism without constraining its interpretation, thereby allowing variation in resource discovery protocols as they evolve. We unified the service discovery bootstrap and mobility beacons by observating that mobility beaconing is simply a form of announce-listen protocol. The announce rate is one that provides acceptable handoff latency.</p><p>Client-based beaconing is used in both the Active Badge <ref type="bibr" target="#b29">[33]</ref> and ParcTab systems <ref type="bibr" target="#b30">[34]</ref>, while Mobile IP uses infrastructure-based beaconing, as do we. This is the correct design choice for three reasons: support for user (rather than infrastructure) anonymity, better bandwidth scalability in a network where there are many MHs per BS, and because power is more precious on mobile devices.</p><p>There is one additional field in the beacon packets: an application-specific payload. This provides two advantages. First, it makes data available to mobiles before registration (in the Mobile IP sense), allowing the possibility of "anonymous" access to this broadcast data. Second, it acts as a vehicle for announcellisten protocols that require only limited announcement timer adaptability (discrete multiples of the base beaconing rate), such as control applications. We currently piggyback a list of some or all of the available services in the cell, allowing anonymous assessment of them and reducing discovery latency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remote Control</head><p>Providing users with local services exposes new challenges. One is supporting group meetings in which some participants are physically clustered together in a meeting room and others attend from distributed desktops via remote conferencing tools.</p><p>For a room participant to interact with the local instantiations of the conferencing tools yet still participate in the meeting, it is necessary to extend these (local) tools so that they can be controlled remotely. This requirement has two parts: it must be possible to control the devices in the room (i.e., local services for each), and it must be possible for participants to control these things while participating in a meeting.</p><p>T o address these requirements, we extend both room devices and existing collaborative applications with shared, simplified, remote control interfaces. These interfaces maintain two key departures from the current suite of collaboration tools. Rather than focus on use at the desktop, with local control of each application through its user interface (a oneto-one mapping of participants to controllers), we generalize this mapping, allowing a group of users to share control through the use of their personal mobile devices. Additionally, we specify a set of "standard configurations" of these applications and devices, thereby reducing the required complexity. Details of our experience with "remote-controlled vic" (rvic) are available <ref type="bibr" target="#b31">[35]</ref>.</p><p>An important area of ongoing work is in interface specification languages (ISLs), which we are using as a way to generate a functional user interface for devices and services that have "never met." That is, given an ISL for a service and a simple device specification, we can generate the user interface for that service/device pair automatically. An extreme version of this would allow a service to have the same ISL for Web use, touch-tone telephones, and speech-based control.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scoping Access ConfroI</head><p>Making services available to visitors raises general security issues, including those specific to the wireless domain <ref type="bibr" target="#b32">[36]</ref>. Local services require additional access control, because we extend local services for remote use. Global access control is necessary, but not sufficient; the expected behavior where environmental changes can only be affected by people in that environment has been broken. For example, lights should not be able to be turned off by a person across the country. Maintaining this expectation is important when extending existing social metaphors into an environment with controllable objects.</p><p>We address this by embedding tickets, random fixed-length bit vectors, in the mobility beacons and requiring the current ticket to be included in all communications to servers. Periodically changing the tickets in an unpredictable way and limiting the scope of the broadcast (e.g., to the local subnet) prevents remote access from nodes on the access control list that are not actually local. This ticket-based exclusion can be overridden by explicitly giving remote participants the ticket. However, by restricting access by default, we better emulate the existing paradigm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Adaptive Network Services Summary</head><p>In summary, the adaptive network services layer of the architecture provides functionality beyond IP dial tone to both roaming and local users. The themes that guide our work in this area include:</p><p>Taking advantage of the availability of nonintrusive mobile client devices to allow users to use their personal devices in a manner comfortable to them Making the environment responsive and customizable via remote-control access to devices and to the services that make the devices useful Utilizing dynamic discovery and reconjiguration at multiple levels (service availability, service interfaces) to address the inherent variability exposed in mobility-enabled environments For more information on localized services see [37, 381.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discuss ion</head><p>Returning to a broad view of the architecture, we examine some of the issues that we did not address, contrast BAR-WAN with related work, and revisit our four themes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Kev Issues Not Addressed bv BARWAN J J</head><p>There are several important areas that we did not directly address in the architecture. First, we limited ourselves to off-theshelf networks and mobile devices. Although we added agents, we did not modify the base software for our networks, nor did we develop any new networking hardware. We have learned several lessons that should enable better future networks, such as the importance of network interface power management, the negative impact of half-duplex networking, and the importance of augmented infrastructurebased beacons. Similarly, we avoided developing our own mobile device, in part in response to the significant effort involved with the InfoPad project. However, we view the current set of devices as sufficient only for prototyping, and have high expectations for the next generation, which should be designed with the proxy architecture in mind. We have had discussion with device manufacturers along these lines.</p><p>We also dealt only tangentially with the infrastructure required for global authentication. The Charon work enables proxy-based authentication, and we can restrict access to local users via beacon-based tickets, but those both prematurely assume that a global authentication system is in place. As such systems are deployed, our architecture extends them to support heterogeneous clients and local services.</p><p>Finally, an important area of ongoing work is fairness and utilization for shared wireless networks such as wireless LANs. Inaddition to traditional MAC-layer issues, wireless networks suffer from time-varying network performance per host and few or no mechanisms for collision detection. We are looking at channel-dependent link-scheduling algorithms based on class-based queuing to mitigate these effects.</p><p>Finally, we did not look at disconnected operation, instead assuming connectivity of varying quality. We believe that disconnected operation is an important capability for mobile users; we left it out only because there are several major projects that address the issues [39-411, and because we believe that those systems are complementary to our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Projects</head><p>There are at least several hundred useful papers that relate to some aspect of the architecture; here we focus only on broad projects of similar scope. For detailed coverage of related work in a specific area, please refer to the papers listed for more information at the end of the corresponding section.</p><p>The Coda and Odyssey projects at CMU focus on filesystem based support for mobile devices. The Coda system <ref type="bibr" target="#b35">[39]</ref> manages file-system consistency across intermittent and disconnected access. BARWAN did not look at disconnected access, although we believe the Coda approach is largely orthogonal and thus could be supported directly. Odyssey <ref type="bibr">[42]</ref> originally defined multiple quality levels of file-system objects to support variation in network quality; their current approach adopts our notion of dynamic adaptation and distillation (and the use of proxies) to provide both application-aware and application-transparent adaptation at the file-system level. Much of the rest of the BARWAN architecture is complementary, such as overlay networking and reliable data transport, and in fact there has been some joint work <ref type="bibr" target="#b40">[43]</ref>. One major distinction is the service focus of BARWAN, rather than the file-system focus of Odyssey, which enables not only localized services, but also complex TACC-based services (and protocols) such as the Wingman browser.</p><p>The InfoPad project [18, 441 preceded BARWAN, had some overlap in personnel, and was very influential on several of our network and application support elements. The InfoPad is a handheld wireless tablet that depends on both high-bandwidth networking (for bitmapped graphics and video) and extensive application support in the infrastructure. For example, it depends on a modified version of X Windows on the server that renders all of the pixels (not vector graphics) over the wireless connection. Although very bandwidth-intensive, this approach has the benefit of simple low-power hardware, since it requires only simple processing on the device. A major distinction is thus our focus on low-bandwidth links and some processing power on the devices. We can also view the InfoPad as just another heterogeneous device; for example, the video transcoder can convert video streams into InfoPad's custom VQ format.</p><p>UCLA's work on nomadic computing <ref type="bibr" target="#b37">[40]</ref> addresses many of the same issues as BARWAN. In particular, it shares the service focus of BARWAN. It provides strong support for widearea data management (predictive caching and data consistency) and disconnected operation. However, it does not (so far) address the issues of overlaid networks, reliable data transport, or scalable complex infrastructure services. The proxy architecture has emerged as fundamental to nomadic computing.</p><p>Rover [41] is a toolkit for developing mobile applications that support disconnected operation. As with Coda, the Rover work is complementary, and we expect to integrate the Rover technology into our future work in this area. The proxy architecture and network services work simplify the infrastructure side of the Rover toolkit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Four Themes Revisited</head><p>We finish our discussion by revisiting our four themes.</p><p>Dynamic adaptation is the general way we deal with varying network conditions and client heterogeneity. Vertical handoff is a dynamic adaptation in response to the presence or absence of packets on a particular overlay, while horizontal handoff is an adaptation based on physical-layer feedback such as signal strength.</p><p>The proxy architecture is an extreme form of dynamic adaptation: we change the content dynamically depending on network conditions, device software and hardware capabilities, and user preferences. We demonstrated dynamic distillation for both images and real-time video streams, in both cases enabling smooth trade-offs between quality and performance across a range of devices. Similarly, by defining remote-control interfaces via an ISL, we can dynamically adapt the user interface to the capabilities of the client device. These techniques give us tremendous flexibility and are the key to supporting networks and clients that vary by orders of magnitude across many dimensions.</p><p>As for cross-layer optimization, there are several places where we explicitly break the OS1 networking model to enable smartel: adaptation or better performance. For example, we use physical-layer information to trigger (horizontal) handoffs.</p><p>A compelling example is the interaction of the transport and link layers in our solutions to reliable data transport over wireless and asymmetric links. Snoop uses detailed TCP knowledge to detect timeouts and duplicate acks, and it suppresses duplicate acks to the sender to control when the sender enters congestion control. Similarly, the ELN mechanism allows the transport layer to know that a particular loss was not due to congestion. The control of ack clocking in our support for asymmetric connections is another example of controlling the transport layer from the link layer; we reduce acks on the reverse channel and then reconstruct them for smooth flow from legacy TCP senders. We also exploit transport-layer information when we use "acks first" scheduling, since we have to understand the purpose of the packets. In all cases, we achieve significantly better performance and maintain the end-to-end semantics.</p><p>Finally, we use transport-layer information to control the proxy (essentially the presentation layer). This enables dynamic adaptation and thus maximizes the trade-off between quality and performance (response time for HTTP requests; frame-rate for video streams), even in the presence of varying network conditions.</p><p>On the theme of agent-based capabilities, to maximize our ability to work with legacy clients, servers, and TCP stacks, we use agents within the network infrastructure to add new capabilities or to improve performance. Fundamentally, the role of these agents is to hide the vagaries of mobility, wireless networking, and extreme heterogeneity from all of the legacy servers and infrastructure; the agents make everything look like it is "supposed to." The alternative is take an end-to-end approach in which you are allowed to modify all components, including clients and servers. This has the advantage of a potentially better overall solution, but it is nearly impossible to deploy since it requires upgrading most clients and servers.</p><p>The overlay networking solution uses multiple agents, one at the home base to forward packets, and one near the mobile device to handle low-latency handoffs locally. These agents primarily hide mobility from legacy servers by acting as a level of indirection. The local agent also enables fast handoffs by maintaining state at multiple BSs via local multicast.</p><p>In the case of transport issues, the agent-based approaches usually performed as well or better than the end-to-end approaches, and provided the critical additional advantage of immediate deployment, thus allowing us to integrate wireless technologies cleanly into the rest of the global Internet. The snoop agent hides wireless losses from TCP senders, thus enabling them to work well for wireless links. Similarly, we use a pair of agents to hide significant problems with reverse channels in asymmetric links from TCP, again enabling new levels of performance for those links without modifying all of the servers on the Internet. For both acks-first scheduling and shared wireless links, we showed that agents can perform link optimizations across a collection of connections, which is not possible without a local presence at the link or with just enhancements to the TCP protocol.</p><p>The most powerful agents, of course, are the cluster-based TACC servers, which can provide mobile users with the combined power of several workstations (even for a single HTML page). We demonstrated many capabilities that are not possible without the proxy, and produced several applications that depend on tremendous leverage from the infrastructure to deliver their functionality, most notably the PalmPilot Web browser and whiteboard applications. Even for Web browsing from home, the proxy enables 3-7 times faster downloads and the receipt of (degraded) MBone video. We expect powerful proxies to be fundamental to future internet access.</p><p>Finally, soft state is a state that aids in performance or adds capabilities, but is not required for correctness. Soft state need not be recovered after failures, can be thrown out at any time, and can typically be stale or inconsistent without violating correctness. In general, most of our agents use soft state to make them simpler and trivially fault tolerant. We exploit soft state in all aspects of the design, and in the few places that we didn't use it, we either regretted it (overlay networking) or rewrote the subsystem to use soft state (TACC manager).</p><p>Fundamentally, soft state goes well with agents because the latter are typically added on to systems that already have a solution for end-to-end data integrity (such as TCP). Thus, agents tend to be both optional and not responsible for the state of the system that they extend. Limiting the agent's state to soft state is thus not that difficult, and it enables trivial fault recovery and scalability. Perhaps more important, soft state tends to avoid many difficult issues regarding fault tolerance and data consistency, thus making the implementation of agents far more simple overall. For example, even though we use two agents to manage the acks on a asymmetric link, our use of soft state means that either agent (or both) can fail without effecting the correctness of the connection. In fact, they can restart in any or order or not at all and still maintain correctness. Finally, soft state works well for agents because it focuses on availability rather than consistency, which is the opposite of most fault-tolerant systems, such as ACID databases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions</head><p>The BARWAN project achieved nearly all of its goals: we deployed a working network that really is useful. It is possible to roam among several networks, and the performance of the networks is quite good. The proxy is highly available and supports thousands of users, several quality services, and a wide range of mobile devices; two of these applications (TranSend and Wingman) have thousands of users each. The support for localized network services enables automatic configuration of mobile devices so that they can exploit local resources, and the remote control functionality makes it possible to control your environment with your own PDA, even if you've never been in the room before. These are powerful capabilities; we look forward to the day when they are regularly available to everyone.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>WFigure 1 .</head><label>1</label><figDesc>Elements of the BARWAN architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>-based capabilities -In order to maximize our ability to work with legacy clients, servers and TCP stacks, we often use agents within the network infrastructure to add new -. -. . . . . . , Network Services Automatic discovery and configuration of localized services I link-level retransmission (Snoop protocol); management of shared wireless links ~-._ -I I .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Testbed networks: latency is the round-trip time; registration time is the time to set up the initial connection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Wireless overlay network structure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>I</head><label></label><figDesc>The arrows represent the logzcal endpoints of a message, not the ~--~ ! path that the message takespom source to destination. Messages Figure 4. Elements of the handoff system.go through the new basestation if the old one is unreachable.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure</head><label></label><figDesc>Figure 6 compares these three approaches for four vertical handoff scenarios. The beacon period was 1 s for the basic and H D versions, and 200 ms for the FB version. For HD, we switched networks when we saw 10 consecutive packets on the new interface with none on the old. Key results include: * Fast beaconing can result in subsecond handoff latency proportional to the bandwidth overhead. This approach consumes bandwidth whether o r not data is being sent to the mobile device. Header double-casting results in very low latency (170 ms) with a modest bandwidth overhead (about 15 percent for WaveLAN). * The impact of H D on Metricom handoffs was limited because the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>IFigure 6 .</head><label>6</label><figDesc>Figure 6. Handoffpeifomance comparison of basic vertical handoff with the peifomance of two optimizations..</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. Network topology of the single-hop cellular wireless network based on WaveUN. The snoop agent runs at the BSs in the network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>( 9 .</head><label>9</label><figDesc>Reno), w h c h performs poA;ly as expected, with W Figure 8. TCPpeiformance over wireless links. only 50 percent of the possible throughput on theJ ' error rate (1 error every x kbytes, average) Pegormance of six protocols (LAN case) across a range of bit-error rates, ranging fvom one error every 16 kbytes to one every 256 kbytes shown on a log-scale.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 1 1 .</head><label>1</label><figDesc>Figure 1 1 . TCP throughputsfrom simulations of Reno, ACC, and A F as a function of the number of wireless hops. Simulation parameters are derived from the Metricom packet radio network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>Figure 13.ScalingthisJPEGim d i ~~n s i o n</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>~ I Figure 14 .HFigure 15 .</head><label>I1415</label><figDesc>Figure 14. End-to-end latency for images with and without distillation. infrastructure, it must meet all the utility requirements of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>25 'Figure 17 .</head><label>2517</label><figDesc>Figure 17. Distiller queue lengths observed over time as the load presented to the system fluctuates, and as distillers are manually brought down; (b) is an enlargement of (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 18 .</head><label>18</label><figDesc>Figure 18. Top Gun Media-Board allows the PalmPilot to participate in shared whiteboard sessions, despite its small display and inability to support the Scalable Reliable Multicast protocol on which the original MediaBoard is based,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Infrared provides trivial spectrum reuse, and thus enables very high bandwidth per cubic meter in buildings. It is also the lowest-cost network. Lucent WaveLAN: We have used both the 900 MHz and 2.4 GHz versions [3] as our building-size network. We have coverage of four floors of Soda Hall, with one or two base stations per floor.</figDesc><table /><note><p><p><p>Metricom Ricochet: This is a packet-based radio network for metropolitan areas</p>[4]</p>, including the Bay Area. We also deployed a private network in Soda Hall for experimentation. Hughes Direct-Broadcast Satellite (DBS): We have one dish on top of Soda Hall and have also used a portable dish at remote sites [5].</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Reduce image resolution, color depth, convert to grayscale or monochrome with halftoning Reduce resolution, color depth, frame rate, frame quality (e.g., quantization factors), convert to grayscale or monochrome with effects or overlay handoffTable 3 .</head><label>3</label><figDesc>Dynamic adaptation in response to variations across client hardware and soft-</figDesc><table><row><cell>These examples illustrate the</cell><cell>I Hardware</cell></row><row><cell>power of dyn'amic adaptation via</cell><cell></cell></row><row><cell>very simple clients can leverage a</cell><cell></cell></row><row><cell>powerful infrastructure to achieve</cell><cell></cell></row><row><cell>capabilities they could not achieve</cell><cell></cell></row><row><cell>on their own.</cell><cell></cell></row><row><cell>On-Demand Transformation</cell><cell></cell></row><row><cell>Although we have looked at sever-</cell><cell></cell></row><row><cell>al data types for on-demand trans-</cell><cell></cell></row><row><cell>formation, we will focus on just</cell><cell></cell></row><row><cell>two examples, images and video,</cell><cell>ware, and dynamic network conditions.</cell></row><row><cell>since they are challenging and sig-</cell><cell></cell></row><row><cell>nificantlv reduce the recluired</cell><cell></cell></row><row><cell></cell><cell cols="2">browsing with graphics on the PalmPilot (covered below)</cell></row><row><cell></cell><cell cols="2">PostScript viewing via distillation to HTML</cell></row><row><cell></cell><cell cols="2">MBone video over ISDN, transcoded from 400 kbls down to</cell></row><row><cell></cell><cell>128 kbls</cell></row><row><cell></cell><cell cols="2">Participation in multicast-based whiteboard sessions on the</cell></row><row><cell></cell><cell cols="2">PalmPilot, which supports neither multicast nor the basic</cell></row><row><cell></cell><cell>whiteboard formats such as GIF images</cell></row><row><cell></cell><cell>~-</cell></row><row><cell></cell><cell>b a n d w i d t h</cell><cell>Tranwoder5</cell></row><row><cell></cell><cell>. . -. . -. --</cell></row><row><cell></cell><cell>-~</cell><cell>-</cell></row></table><note><p>Figure 12. Basicproxy architecture. Theproxy uses the transcoders to optimize the QoS for the client in real time. SPAND monitors end-to-end bandwidth and connectivity to the clients (and servers) and notifies the proxy of any changes, which may result in changes in transcoding to adjust the &amp;OS.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>Automatic on-the-move reconfiguration for use of local</figDesc><table><row><cell>DNS/NTP/SMTP servers and proxies</cell></row><row><cell>Audited local printer access</cell></row><row><cell>Visualization of physical geography and object locations via</cell></row><row><cell>a protocol for interactive floor maps</cell></row><row><cell>Advertising available local services (or other data) to unreg-</cell></row><row><cell>istered ("anonymous") clients</cell></row><row><cell>Our premise is that providing basic IP access to clients is</cell></row><row><cell>not enough. We must augment basic IP connectivity with an</cell></row><row><cell>adaptive network services infrastructure. Distillation proxies are</cell></row><row><cell>one example of a network service that may require discovery</cell></row><row><cell>and reconfiguration. The challenge is to develop an open ser-</cell></row><row><cell>vice architecture that allows heterogeneous clients to discover</cell></row><row><cell>what they can do in a new environment and interact with it</cell></row><row><cell>while making minimal assumptions about standard interfaces</cell></row><row><cell>and control protocols.</cell></row><row><cell>We provide mechanisms for:</cell></row><row><cell>Service discovery</cell></row><row><cell>Remote control interfaces</cell></row><row><cell>Access control based on physical locality</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Commun. ACM, vol. 36, no. 7, July 1993. electronics Toronto Lab, 1995. al, 1994.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Weiser</surname></persName>
		</author>
		<title level="m">Some Computer Science Issues in Ubiquitous Computing</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">IBM Infrared Wireless LAN Adapter Technical Reference</title>
		<idno>manu- [41</idno>
		<imprint/>
	</monogr>
	<note>WaveLAN: PUAT Card Installation and Operation</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Metricom</forename><surname>Web</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Page</forename></persName>
		</author>
		<ptr target="http://www.DirecPC.com" />
		<imprint>
			<date type="published" when="1996">1996. 1998</date>
		</imprint>
	</monogr>
	<note>51 The DirecPC Home Page</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Reducing Power Consumption of Network Interfaces in Hand-Held Devices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stemm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MoMuC-3</title>
		<meeting>MoMuC-3</meeting>
		<imprint>
			<date type="published" when="1996-09">Sept. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">IP Mobility Support</title>
		<author>
			<persName><forename type="first">C</forename><surname>Perkins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RFC</title>
		<imprint>
			<date type="published" when="1996">2002. Oct. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Special Issue on Mobile Networking in the internet</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stemm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mobile Networking (MONET)</title>
		<imprint>
			<date type="published" when="1998">Spring 1998</date>
		</imprint>
	</monogr>
	<note>Vertical Handoffs i n Wireless Overlay Networks</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Case for Wireless Overlay Networks</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Brewer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. W E Multimedia and Networking Conf. (MMNC&apos;96)</title>
		<meeting>W E Multimedia and Networking Conf. (MMNC&apos;96)<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-01">Jan. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Low Latency Handoffs in Cellular Data Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Seshan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995-12">Dec. 1995</date>
		</imprint>
		<respStmt>
			<orgName>UC Berkeley</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Handoffs in Cellular Wireless Networks: The Daedalus Implementation and Experience</title>
		<author>
			<persName><forename type="first">]</forename><forename type="middle">S</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Kluwer I. Wireless Pers. Commun</title>
		<imprint>
			<date type="published" when="1997-01">Jan. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Improving Reliable Transport and Handoff Performance i n Cellular Wireless Networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Wireless Networks</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1995-12">Dec. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Comparison of Mechanisms for Improving TCP Performance over Wireless Links</title>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEEIACM Trans. Networking</title>
		<imprint>
			<date type="published" when="1997-12">Dec. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">SMART Retransmission: Performance with Overload and Random Losses</title>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Morgan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Cox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. lNFOCOM &apos;97</title>
		<meeting>lNFOCOM &apos;97</meeting>
		<imprint>
			<date type="published" when="1995-04">Apr. 1995</date>
			<biblScope unit="page" from="20" to="34" />
		</imprint>
	</monogr>
	<note>Wireless Personal Communications: What Is It?</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The Effects o f Asymmetry on TCP Performance</title>
		<author>
			<persName><forename type="first">V</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>N Padmanabhan</surname></persName>
		</author>
		<author>
			<persName><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc ACM Mobrcom &apos;97</title>
		<imprint>
			<date type="published" when="1997-09">Sept 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The Effects of Asymmetry on TCP Performance</title>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">N</forename><surname>Padmanabhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Special Issue on Mobile Networking in the Internet</title>
		<imprint>
			<publisher>ACM MONET</publisher>
			<date type="published" when="1998">Spring 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Application and Network Support f o r InfoPad</title>
		<author>
			<persName><surname>Narayanaswamy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996-02">Feb 1996</date>
			<publisher>/FEE Pers Commun</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An ApplicationLevel Video Gate way</title>
		<author>
			<persName><forename type="first">S</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mccanne</surname></persName>
		</author>
		<author>
			<persName><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc ACM Multrmedra &apos;95</title>
		<imprint>
			<date type="published" when="1995-11">Nov 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">SPAND Shared Passive Network Performance Discovery</title>
		<author>
			<persName><forename type="first">M</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Stemm</surname></persName>
		</author>
		<author>
			<persName><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc Ist Usenix Symp lnternet Technologres and Sys</title>
		<meeting>Ist Usenix Symp lnternet Technologres and Sys</meeting>
		<imprint>
			<date type="published" when="1997-12">Dec 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Cluster-Based Scalable Network Systems</title>
		<author>
			<persName><surname>Fox E T A /</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SOSP &apos;97</title>
		<meeting>SOSP &apos;97</meeting>
		<imprint>
			<date type="published" when="1997-10">Oct 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">System Design Issues for Internet Middleware Services Deductions from a Large Client Trace</title>
		<author>
			<persName><forename type="first">Gribble</forename></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Brewer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc USlTS &apos;97</title>
		<meeting>USlTS &apos;97</meeting>
		<imprint>
			<date type="published" when="1997-12">Dec 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Application-Specific Proxy Servers as HTTP Stream Transducers</title>
		<author>
			<persName><surname>Brooks</surname></persName>
		</author>
		<idno>4/Papers/56</idno>
	</analytic>
	<monogr>
		<title level="j">Proc WWW-4</title>
		<imprint>
			<date type="published" when="1996-05">May 1996</date>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Digestor: Device-Independent Access to the World Wide Web</title>
		<author>
			<persName><forename type="first">B</forename><surname>Schilit</surname></persName>
		</author>
		<author>
			<persName><surname>Bickmore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc WWW</title>
		<imprint>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1997-04">Apr 1997</date>
			<pubPlace>Santa Clara, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">PanBrowser Support for Annotations and Other Metalnformation on the World Wide Web</title>
		<author>
			<persName><forename type="first">M A</forename><surname>Schickler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M S</forename><surname>Mazer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Brooks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th lnt7 World Wrde Web Conf</title>
		<meeting>5th lnt7 World Wrde Web Conf</meeting>
		<imprint>
			<date type="published" when="1996-05">May 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Group Annotation Using TACC</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kornacker</surname></persName>
		</author>
		<author>
			<persName><surname>Gilstrap</surname></persName>
		</author>
		<ptr target="http//kemetberkeleyedu/ratogi/class/cs294-6" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Public Domain Network Whiteboard</title>
		<author>
			<persName><forename type="first">V</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mccanne</surname></persName>
		</author>
		<ptr target="ftp://ftpeeIblgov/conferencing/wb" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">MASH Meets TACC Top Gun MediaBoard</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Chawathe</surname></persName>
		</author>
		<author>
			<persName><surname>Fink</surname></persName>
		</author>
		<ptr target="http.//http.csberkeleyedu/-yatin/courses/isvdreport/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Security on the Move Indirect Authentication Using Kerberos</title>
		<author>
			<persName><forename type="first">A</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><surname>Gribble</surname></persName>
		</author>
		<idno>uov. 1996</idno>
	</analytic>
	<monogr>
		<title level="m">Proc MobiCom &apos;96</title>
		<meeting>MobiCom &apos;96</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Adapting t o Network and Client Variability via On-Demand Dynamic Distillation</title>
		<author>
			<persName><surname>Fox E T A /</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc ASPLOS-VII</title>
		<meeting>ASPLOS-VII</meeting>
		<imprint>
			<date type="published" when="1996-10">Oct. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">CS294-6. Internet Services</title>
		<author>
			<persName><forename type="first">Berkeley</forename><surname>Uc</surname></persName>
		</author>
		<ptr target="http//wwwcsberkeleyedu/-fox/cs294" />
		<imprint/>
	</monogr>
	<note>Fall 1997</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Service Location Protocol</title>
		<author>
			<persName><forename type="first">J</forename><surname>Veizades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IETF</title>
		<imprint/>
	</monogr>
	<note>Internet draft, 1 997, draft-ietf-srvloc-protocol-17 txt</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A Distributed Location System for the Active Office</title>
		<author>
			<persName><forename type="first">A</forename><surname>Harter</surname></persName>
		</author>
		<author>
			<persName><surname>Hopper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1994-01">Jan. 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">The PARCTAB Mobile Computing System</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. wwos-IV</title>
		<meeting>wwos-IV</meeting>
		<imprint>
			<date type="published" when="1993-10">Oct. 1993</date>
		</imprint>
	</monogr>
	<note>Schilit e t a /</note>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">A vic Variant f o r Remote Control o f Shared Video Monitors</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hodes</surname></persName>
		</author>
		<author>
			<persName><surname>Newman</surname></persName>
		</author>
		<ptr target="http.csberkeley.edu/-hodes/rvic/index.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Techniques for Privacy and Authentication i n Personal Communication Systems</title>
		<author>
			<persName><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">E€€ Pers. Commun</title>
		<imprint>
			<biblScope unit="page">0</biblScope>
			<date type="published" when="1995-08">Aug. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Composable Ad-hoc Mobile Services for Universal Interaction</title>
		<author>
			<persName><forename type="first">T D</forename><surname>Hodes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc 3 r d ACM//E€€ lnt&apos;l Conf Mobde Comp</title>
		<imprint>
			<date type="published" when="1997-09">Sept 1997</date>
			<pubPlace>Budapest, Hungary</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Hodes</surname></persName>
		</author>
		<author>
			<persName><surname>Katz</surname></persName>
		</author>
		<title level="m">Composable Ad-hoc Mobile Services for Universal Interaction</title>
		<imprint>
			<date type="published" when="1997-09">Sept 1997</date>
		</imprint>
	</monogr>
	<note>Proc. MobiCom &apos;97</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Exploiting Weak Connectivity for Mobile File Access</title>
		<author>
			<persName><forename type="first">M</forename><surname>L B Mummert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>R Ebling</surname></persName>
		</author>
		<author>
			<persName><surname>Satyanarayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc 15th ACM Symp Op Sys Prmcrples</title>
		<meeting>15th ACM Symp Op Sys Prmcrples</meeting>
		<imprint>
			<date type="published" when="1995-12">Dec. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Mobile Networks and Apps</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="351" to="357" />
			<date type="published" when="1997-01">Jan. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">L</forename><surname>Kleinrock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nomadicity. Anytime, Anywhere in a Disconnected World</title>
		<imprint>
			<biblScope unit="page">1411</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<author>
			<persName><forename type="first">A D</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Tauber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Frans</forename><surname>Kaashoek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mobile Computing w i t h the Rover Toolkit,&quot; /€E€ Trans Comp</title>
		<imprint>
			<date type="published" when="1997-03">Mar 1997</date>
			<biblScope unit="volume">46</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Agile Application-Aware Adaptation for Mobility</title>
		<author>
			<persName><surname>Noble</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc SOSP &apos;97</title>
		<meeting>SOSP &apos;97<address><addrLine>St Malo, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-10">Oct. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">A Trace-Based Approach for Modelling Wireless Channel Behavior</title>
		<author>
			<persName><forename type="first">G T</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc Wrnter Srmulatron Conf</title>
		<imprint>
			<date type="published" when="1996-12">Dec 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">The Design of Wireless Portable Systems [InfoPad]</title>
		<author>
			<persName><surname>Brewer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc Sprmg COMPCON &apos;95</title>
		<meeting>Sprmg COMPCON &apos;95</meeting>
		<imprint>
			<date type="published" when="1995-03">Mar 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">and received his Ph D in computer science from MlT in 1994 His research interests include mobile and wireless computing (the InfoPad and Daedalus projects), scalable servers ( t h e NOW, Inktomi, and TACC projects, a n d application-and system-level security (the ISAAC project) His previous work includes multiprocessor-network software and topologies, and high-performance multiprocessor simulation RANDY H KATZ [F] IS a UMC Distinguished Professor Chair in the Electrical Engineering and Computer Science Department at U.C Berkeley He received his Ph D i n computer science from U C Berkeley in 1980 His research interests are in the areas of design engineering and implementation of advanced high-performance computing systems. He led the design of the distributed cache and virtual memory organization of the SPUR multiprocessor project. The invented the term &quot;snooping caches&quot; and implemented one of the first invalidation protocols</title>
		<author>
			<persName><forename type="first">Eric A</forename><surname>Biographies</surname></persName>
		</author>
		<author>
			<persName><surname>Brewer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>ELAN AMlR received his Ph.D. from the Computer Science Department o f U.C. Berkeley i n</publisher>
			<pubPlace>San Francisco, California</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California at Berkeley (U C Berkeley</orgName>
		</respStmt>
	</monogr>
	<note>brewer@cs berkeley edu) is an assistant professor of computer science at the. research is netowrking systems. He recently joined a new computer startup company, Fast Forward Networks</note>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">HARI BALAKRISHNAN received his Ph.D. from the Computer Science Department of U.C. Berkeley in 1998. His area of research is networking systems</title>
		<imprint/>
	</monogr>
	<note>He is currently teaching at MIT</note>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">is a doctoral student at U C. Berkeley He received a Bachelor of Engineering (computer engineering) degree from the University of Bombay, India, and a Master of Science (computer science) degree from U.C. Berkeley. His primary interests are in Internet services, application support for reliable multicast in heterogeneous environments, and multimedia networking ARMANDO Fox (fox@alum mit.edu) received a 6</title>
		<author>
			<persName><surname>Yatin Chawathe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">University of Illinois, has worked as a CPU architect at Intel Corp , and is currently completing his Ph.D at U.C. Berkeley as a researcher in the Daedalus/BARWAN and InfoPad projects He will be an assistant professor at Stanford Unviersity starting in January 1999 His primary interests are aplication-level support for adaptive mobile computing, multimedia networks for mobile computing, and user interface issues related t o mobile computing</title>
		<imprint/>
	</monogr>
	<note>yatin@cs.berkeley edu. S.E.E from MIT and an M.S E.E. from the</note>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">and a computer science Master of Science degree from U.C. Berkeley in 1997. He is currently1 pursuing his Ph.D. at Berkeley, and expects t o graduate in May 2000 His interests include application-level support for adaptive mobile computing, and system and compiler support for scalable, highly available infrastructure services. TODD HODES (hodes@cs.berkeley.edu) is a Ph D. student in computer science in the Department of Electrical Engineering and Computer Sciences at U.C Berkeley. He received a Bachelor of Science with high honors in both computer science and applied mathematics from the University of Virginia in 1994, and his Master of Science in computer science from U C. Berkeley in 1997</title>
		<author>
			<persName><surname>Steven Gribble</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">His current research focuses on investigating issues in user interac</title>
		<meeting><address><addrLine>Vancouver, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>University of British Columbia</orgName>
		</respStmt>
	</monogr>
	<note>gribble@cs berkeley edu. tion with collections of localized services made available t o heterogeneous wirelessly connected mobile devices</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">edu) is a Ph.D. candidate in the Computer Science Department at U.C. Berkeley. His area of research is networking systems</title>
		<author>
			<persName><forename type="first">Giao</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">gnguyen@cs.berkeley.</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">StM] (stemm@cs berkeley edu) is a Ph.D candidate in computer science at U C. Berkeley His research interests are in the areas of wireless and wide-area computer networks, mobile computing, and operat ing systems He received his B S degree in computer science with University and Departmental honors from Carnegie Mellon University in 1994 and is the recipient of the 1994 Carnegi Mellon Academic-Athletic Achievement Award. He received his M S degree in computer science from U.C</title>
		<author>
			<persName><forename type="first">N</forename><surname>Venkata</surname></persName>
		</author>
		<author>
			<persName><surname>Padmanabhan</surname></persName>
		</author>
		<ptr target="http://www.cs.berkeley.edu/-stemmHe" />
	</analytic>
	<monogr>
		<title level="m">Tech in computer science and e ring at the Indian lnstitu nology, Delhi, in 1993, and his M Ph</title>
		<imprint>
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
	<note>D degrees in computer science from U.C Berkeley in 1995 and 1998, respectively. His Ph D dissertation proposed several novel techniques t o significatnly improve the performance of Web data transport, including over asymmetric access networks His broader research has spanned the areas of mobile computing, wireless networks, and operating systems. Berkeley in 1996 On the Web, his URL is</note>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">SESHAN received his PH D. from the Computer Science Department of U.C Berkeley in 1995 His area of research is networking systems He is currently with IBM</title>
		<author>
			<persName><surname>Srinivasan</surname></persName>
		</author>
		<imprint>
			<publisher>Watson Research Center</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">D candidate in the Computer Science Department at U.C. Berkeley. He received his B S in 1990 and his M S</title>
		<author>
			<persName><forename type="first">Tom</forename><surname>Henderson</surname></persName>
		</author>
		<ptr target="http.//www.csberkeley.edu/-tomh" />
	</analytic>
	<monogr>
		<title level="m">tom@cs berkeley edu) is a Ph</title>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
		<respStmt>
			<orgName>both from Stanford University</orgName>
		</respStmt>
	</monogr>
	<note>His research is in the area of data over wireless and broadcast networks He can</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
