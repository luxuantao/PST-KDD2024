<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Calibrated Recommendations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Harald</forename><surname>Steck</surname></persName>
							<email>hsteck@netflix.com</email>
							<affiliation key="aff0">
								<address>
									<settlement>Netflix Los Gatos</settlement>
									<country>California</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Calibrated Recommendations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">66084A5A9301E170AD5C6894C6EF9003</idno>
					<idno type="DOI">10.1145/3240323.3240372</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Recommender Systems</term>
					<term>Calibration</term>
					<term>Fairness</term>
					<term>Diversity</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>When a user has watched, say, 70 romance movies and 30 action movies, then it is reasonable to expect the personalized list of recommended movies to be comprised of about 70% romance and 30% action movies as well. This important property is known as calibration, and recently received renewed attention in the context of fairness in machine learning. In the recommended list of items, calibration ensures that the various (past) areas of interest of a user are reflected with their corresponding proportions. Calibration is especially important in light of the fact that recommender systems optimized toward accuracy (e.g., ranking metrics) in the usual offline-setting can easily lead to recommendations where the lesser interests of a user get crowded out by the user's main interestswhich we show empirically as well as in thought-experiments. This can be prevented by calibrated recommendations. To this end, we outline metrics for quantifying the degree of calibration, as well as a simple yet effective re-ranking algorithm for post-processing the output of recommender systems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recommender systems provide a personalized user experience in many different application domains, including online-shopping, social-networks and music/video streaming.</p><p>In this paper, we show that recommender systems trained toward accuracy (e.g., ranking metrics) can easily generate lists of recommended items that focus on the main areas of interest of a user-while the user's lesser areas of interest tend to be underrepresented or even absent. Over time, such unbalanced recommendations carry the risk of gradually narrowing down the user's areas of interest-which is similar to the effect of echo chambers or filter bubbles. This problem also applies to the case of several users sharing the same account, where the interests of the less active users within the same account may get crowded out in the recommendations. We demonstrate this effect in several thought experiments in Section 2 as well as in experiments on real-world data in Section 6.</p><p>Calibration is a general concept in machine learning, and recently experienced a resurgence in the context of fairness of machine learning algorithms. A classification algorithm is called calibrated if the predicted proportions of the various classes agree with the actual proportions of data points in the available data. Analogously, in this paper the goal of calibrated recommendations is to reflect the various interests of a user in the recommended list, and with their appropriate proportions. To this end, we outline metrics for quantifying the degree of calibration in Section 3. In Section 4, we propose an algorithm for post-processing a given ranked list of recommendations with the objective of making it (close to) calibrated. In Section 5, which discusses related concepts and literature, we also outline that diversity in its typical sense of minimal similarity or redundancy among the recommended items is different from calibration. In our experiments on real-world data in Section 6, we demonstrate the effect that the lesser interests of users can get crowded out easily. We then show the effectiveness of our proposed approach in achieving (close to) calibrated recommendations.</p><p>For the ease of exposition in this paper, we will paraphrase 'users who interact with items' as well as 'categories of items', using 'users who play movies' and 'genres'. This paper naturally caries over to the general case, see also the last paragraph in Section 4 for further generalizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">MOTIVATING EXAMPLE</head><p>In this section, we outline a thought experiment that illustrates a core mechanism that can cause the list of recommended items to be unbalanced. We develop it in three steps, starting from the most extreme scenario.</p><p>We consider the typical offline setting throughout this paper, where the data set is comprised of historical user-item-interactions, and it is split into a training and test set (e.g., based on time, or randomly); the evaluation objective is to achieve the best accuracy in predicting which items the user interacted with in the test set, which is typically quantified in terms of ranking metrics. This setting has the advantage that it is easy to implement, and applicable to publicly available data sets for collaborative filtering.</p><p>In our running example, we assume in this section that a user has played 70 romance and 30 action movies in the offline training data: our objective is to generate a list of, say, 10 recommended movies such that we maximize the probability of predicting the testmovies of this user (i.e., the held-out movies played by the user in the offline test data). This maximizes the recommendation accuracy, e.g., ranking metrics. For simplicity of argument, let us also assume in this section that the two genres are mutually exclusive (i.e., a movie is either in the action or romance genre, but not in both).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Class Imbalance</head><p>In the first and most extreme scenario, let us assume in this subsection that we only know the user's preference for genres, but we have no additional information on the individual movies within each genre. This problem then becomes analogous to the imbalanced classification problem in supervised machine learning in the absence of any additional information: it is well known that the best prediction accuracy is obtained by always predicting the label of the majority class. In a binary classification problem where we only know that 70% of the data points have the label +1, and the remaining 30% points are labeled -1, in the absence of any additional information, it is best to predict the label +1 for all data points-and we can expect to be correct for 70% of the data points. In contrast, if we predicted the labels +1 and -1 randomly with probabilities 70% and 30% (with which they occur in the data), we can expect the predicted labels to be correct for only 0.7 • 70% + 0.3 • 30% = 58% of the data points. Translated to our recommendation example, in the absence of any additional information, we can expect to obtain the best accuracy on our test data if we recommend 100% romance movies to the user, and not a single action movie.</p><p>Our assumption in this subsection, namely that we have no additional information available, is obviously very extreme. In the real world, there will be more data available-however, data will always be limited or noisy, and hence this effect may still be present to some degree. Note that this problem is independent of any particular machine learning model trained for accuracy. In our experiments on real-world data in Section 6, we illustrate that indeed there is the risk of unbalanced recommendations: the genres where the user has only a slight interest can easily get crowded out when optimizing the recommender system for accuracy, while the main areas of the user's interests can get amplified.</p><p>Another perspective of this problem is in terms of biased recommendations: even in the ideal case that the available data are free of any biases, the training toward accuracy on limited data can introduce a bias in the recommended list, i.e., it is biased toward the main interests of the user.</p><p>Conversely, this suggests-not surprisingly-that the objective of making more balanced or calibrated recommendations is expected to reduce recommendation accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Varying Movie Probabilities</head><p>This section develops a slightly more involved thought experiment: we now assume that each movie i has a different probability p(i |д) of being played if user u decided to play from genre д. From above, we already know the probabilities p(д r |u) = 0.7 and p(д a |u) = 0.3 that user u plays a movie from genre д r (romance) and д a (action), respectively. Assuming here for simplicity that the two sets of movies regarding the two genres are mutually exclusive, the probability that user u plays movie i in genre д is given by p(i |u) = p(i |д) • p(д|u). For best prediction accuracy, we hence have to find the 10 movies i with the largest probabilities p(i |u) of being played by the user. Let us consider the most probable action-movie i д a ,1 (i.e., ranked first among the action movies), and the 10 th most probable romance movie i д r ,10 , and we obtain</p><formula xml:id="formula_0">p(i д r ,10 |u) p(i д a ,1 |u) = p(i д r ,10 |д r ) p(i д a ,1 |д a ) ≈1/2.1 • p(д r |u) p(д a |u) = 0.7 0.3 ≈2.33 ≈ 2.33 2.1 &gt; 1,<label>(1)</label></formula><p>where we determined the value of 2.1 from the MovieLens 20 Million data set <ref type="bibr" target="#b12">[13]</ref>. <ref type="foot" target="#foot_0">1</ref> As we can see, also in this variant of the example, the 10 th romance title has a higher probability of being played by the user than the best action title. Hence, in terms of accuracy, the optimal 10 titles to recommend in this example are again all romance titles, and not a single action title.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Latent Dirichlet Allocation</head><p>This running example got inspired by the Latent Dirichlet Allocation model (LDA) <ref type="bibr" target="#b4">[5]</ref>, which describes a user's process of selecting a movie in a two-step procedure: the user first selects a genre (or topic) and then a movie (or word) within the selected genre. We mention LDA for three reasons.</p><p>First, if we assume in this section that the real-world user truly follows this two-step procedure of selecting a movie, then the LDA model is the correct model. When the LDA model is trained, it hence is able to capture the correct balance of each user's interests, and with their correct proportions. Hence, balanced recommendations can be expected when following its generative process, where the list of recommended titles is generated iteratively by appending one title at a time: first, a genre д is sampled from the learned genredistribution p(д|u) for user u, followed by sampling a movie i from the learned distribution p(i |д) regarding genre д. Sampling movies results in lower accuracy compared to ranking movies according to p(i |u), where p(i |u) = д p(i |д) • p(д|u). The reason is that also movies i with small p(i |u) may be sampled to be near the top of the recommended list for user u. In contrast, ranking is deterministic and guarantees that the movies i with the largest probabilities p(i |u) that user u likes them, will be at the top of the recommended list, which obviously can be expected to achieve the best accuracy on test data if the learned probabilities p(i |u) are correctly estimated. Unlike sampling, however, ranking unfortunately does not maintain the balance in the recommended list-we illustrated this in our example in the previous section, where the movies were also ranked by their probabilities p(i |u).</p><p>Second, note that the problem of unbalanced recommendations is not restricted to the case when explicit categories (e.g., genres) are used, but also applies to the case when latent topics or embeddings are used-LDA is such a model.</p><p>Third, the problem of unbalanced recommendations may arise irrespective of the fact whether a movie belongs to a single genre (hard assignment), or whether it partially belongs to several genres, like in the LDA model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CALIBRATION METRICS</head><p>In this section, we outline metrics that quantify the degree of calibration of a list of recommended movies, with respect to the user's history of played movies. To this end, we consider two distributions, both of which are based on the distribution of genres д for each movie i, denoted by p(д|i), which are assumed to be given:</p><p>• p(д|u): the distribution over genres д of the set of movies H played by user u in the past:</p><formula xml:id="formula_1">p(д|u) = i ∈H w u,i • p(д|i) i ∈H w u,i ,<label>(2)</label></formula><p>where w u,i is the weight of movie i, e.g., how recently it was played by user u. See also Eq. 7 for a regularized version. • q(д|u): the distribution over genres д of the list of movies recommended to user u:</p><formula xml:id="formula_2">q(д|u) = i ∈I w r (i ) • p(д|i) i ∈I w r (i ) , (<label>3</label></formula><formula xml:id="formula_3">)</formula><p>where I is the set of recommended movies. The weight of movie i due to its rank r (i) in the recommendations is denoted by w r (i ) . Possible choices include the weighting schemes used in ranking metrics, like in Mean Reciprocal Rank (MRR) or normalized Discounted Cumulative Gain (nDCG).</p><p>There are various established methods for determining if these two distributions, q(д|u) and p(д|u), are similar. As to account for the fact that these distributions are estimated from finite data, comprised of N recommended movies and M movies played by the user, respectively, one may carry out a statistical hypothesis test, with the Null hypothesis that the two distributions are the same. This is typically cast as an independence test regarding the multinomial distribution over two random variables: the genres д, and a variable reflecting the two sets of movies, I and H . Given that N or M might actually be very small numbers, this may call for exact tests, like the multinomial test or Fisher's exact test. These tests may, however, be computationally prohibitive in practice. A computationally efficient alternative are asymptotic tests, if applicable, like the G-test or χ 2 -test. Instead of computing p-values, we suggest to ignore the effect of the finite data sizes N and M, and to directly compare the distributions p(д|u) and q(д|u). To this end, we use the Kullback-Leibler (KL) divergence as calibration metric C KL (p, q) in this paper:</p><formula xml:id="formula_4">C KL (p, q) = KL(p|| q) = д p(д|u) log p(д|u) q(д|u) ,<label>(4)</label></formula><p>where we use p(д|u) as the target distribution. If q(д|u) is similar to it, C KL (p, q) takes small values. Given that the KL divergence diverges if q(д|u) = 0 and p(д|u) &gt; 0 for a genre д, we instead use</p><formula xml:id="formula_5">q(д|u) = (1 -α ) • q(д|u) + α • p(д|u)<label>(5)</label></formula><p>with a small α &gt; 0, so that q ≈ q. In our experiments, we used α = 0.01. The KL-divergence has several properties desirable for quantifying the degree of calibration in the context of recommendations:</p><p>(1) it is zero in case of perfect calibration: p(д|u) = q(д|u).</p><p>(2) it is very sensitive to small discrepancies between p(д|u) and q(д|u) when p(д|u) is small. For instance, if a user played a genre only 2% of the time, recommending it only 1% is considered a larger discrepancy by the KL divergence, than if a genre was played 50% but recommended only 49% of times.</p><p>(3) it favours more uniform, and hence less extreme distributions: as illustrated in Table <ref type="table" target="#tab_0">1</ref>, if a user played a genre 30% of the time, recommendations with 31% of this genre are considered better than with 29%.</p><p>These properties ensure that the genres that the user rarely played will also be reflected in the recommended list with their corresponding proportions. Instead of the KL-divergence, one may also use other f-divergences in general, like the Hellinger distance between p and q, C</p><formula xml:id="formula_6">H (p, q) = H (p, q) = || √ p - √ q|| 2 /2</formula><p>, where || • || 2 denotes the 2-norm of the probability-vector (across genres). The Hellinger distance is well defined in the presence of zero values; it also is sensitive to small discrepancies between p and q when p is small, however, to a lesser degree than the KL-divergence is, as we found in our experiments.</p><p>The overall calibration metric C is obtained by averaging C (p, q) across all users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CALIBRATION APPROACHES</head><p>The calibration of recommendations is a list-property. As many recommender systems are trained in a pointwise or pairwise manner, one may not be able to include calibration into the training. This suggests to re-rank the predicted list of a recommender system in a post-processing step, a common approach of calibrating machine learning approaches <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b29">30]</ref>. As to determine the optimal set I * of N recommended movies, we use maximum marginal relevance <ref type="bibr" target="#b5">[6]</ref>:</p><formula xml:id="formula_7">I * = arg max I, | I |=N (1 -λ) • s (I) -λ • C KL (p, q(I))<label>(6)</label></formula><p>where λ ∈ [0, 1] determines the trade-off between two terms: (1) the scores s (i) of the movies i ∈ I predicted by the recommender system, where s (I) = i ∈I s (i). Note that one may also use a monotone transform of each movie's score. (2) the calibration metric (see Eq. 4), where we have explicitly denoted the dependence of q on the set of recommended movies I, which we optimize in Eq. 6. Also note that better calibration entails a lower calibration score, so that we have to use its negative in this maximization problem. The trade-off between accuracy-focused recommendations and calibration can be controlled by λ in Eq. 6. We consider calibration as a crucial property of the recommended list, as discussed in Section 5, which hence calls for a rather large value of λ.</p><p>Finding the optimal set I * of N recommended movies is a combinatorial optimization problem and NP-hard in general. In the Appendix, we outline that the greedy optimization of this optimization problem is equivalent to the greedy optimization of a surrogate submodular function. It is well known <ref type="bibr" target="#b16">[17]</ref> that the greedy optimization of submodular functions achieves a (1 -1/e) optimality guarantee, where e is Euler's number. The greedy optimization starts out with the empty set, and iteratively appends one movie i at a time: at step n, when we already have the set I n-1 comprised of n -1 movies, the movie i that maximizes Eq. 6 for the set I n-1 ∪ {i} is added as to obtain I n . This greedy approach has additional benefits. First, it yields an ordered / ranked list of movies, instead of an (unsorted) list. Second, the resulting list at each step of this greedy approach is (1 -1/e) optimal among the lists of equal size. Even though we may generate a ranked list of N movies, in the real-world, the user might initially see only the first n &lt; N recommendations, e.g., the remaining movies may become visible in the view-port only after scrolling. Apart from that, the user may scan the list of N movies from top to bottom. In both cases, the greedy optimization of submodular functions automatically ensures that each sub-list of the first n movies (n &lt; N ) of the recommended list is (1 -1/e) optimal.</p><p>Note that this approach allows for a weighted membership of a movie i to possibly several genres д, as p(д|i) is used in Eqs. 2 and 3. Moreover, if one likes to calibrate the recommended list with respect to several different categories (e.g., genres, subgenres, languages, movie-vs.-TV-show, etc.), a separate calibration-term C (category) KL may be added to Eq. 6 for each category, with the desired weight/importance λ (category) . The resulting sum of several submodular functions is still a submodular function, and hence the optimization problem remains efficient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RELATED CONCEPTS</head><p>Calibration has long been used in machine learning, mainly in classification, see, e.g., <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b29">30]</ref>, where simple post-processing approaches were often found to be effective. In recent years, calibration received renewed attention, in particular in the context of fairness of machine learning algorithms.</p><p>In the literature of recommender systems, the focus has been on various metrics besides accuracy, e.g., see <ref type="bibr" target="#b20">[21]</ref> for an overview, among which diversity is closest to calibration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Diversity</head><p>In this section, we first compare diversity and calibration, followed by a discussion of related work.</p><p>Diversity as defined in most papers, i.e., minimal redundancy or similarity among the recommended items, helps avoid recommendations with 100% romance movies in our running example: in a world with only two genres of movies, the most diverse recommendations would contain 50% romance and 50% action movies. In a world with additional movie-genres (where the user has only watched 70 romance and 30 action titles), diversity can be increased by recommending also titles from other genres that the user has not watched yet, like children's movies or documentaries. Diversity is not guaranteed, however, to increase the fraction of recommended action titles from 0% to about 30% as to reflect the user's degree of interest in our example. Only if the trade-off between accuracy and diversity is chosen well, one may obtain well-calibrated recommendations. This may be difficult to achieve in practice, however, as this trade-off may be different for each user. This illustrates that the objective of diversity is not directly aimed at reflecting a user's various interests with the appropriate proportions. This is a main difference to calibrated recommendations.</p><p>A second key difference is that diversity, as it may include genres that the user has not played in the past, may help a user escape from a possible filter bubble. This important property is not provided by calibrated recommendations as outlined so far. This motivates a simple extension to calibrated recommendations, such that also titles from genres outside of the user's past interests are included into the recommended list: let p 0 (д) denote a prior-distribution that takes positive values for all genres д as to promote diversity in the recommendations-two obvious choices are the uniform distribution or the average over all users' genre distributions. The weighted average of this diversity-promoting prior p 0 (д) and the calibrationtarget p(д|u),</p><formula xml:id="formula_8">p(д|u) = β • p 0 (д) + (1 -β ) • p(д|u),<label>(7)</label></formula><p>with tuning parameter β ∈ [0, 1], determines the trade-off between diversity and calibration. This extended calibration probability p(д|u) can be used in place of p(д|u) (see Eq. 2).</p><p>In many papers, a list is considered diverse if there is only a small degree of redundancy or similarity among the recommended items. A multitude of approaches has been proposed to generate such kinds of diverse recommendations, e.g., <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b31">32]</ref>, including determinantal point processes <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b10">11]</ref>, or submodular optimization, e.g., <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b18">19]</ref>.</p><p>A second line of research starts out with modeling the user's probability of choosing the n th item from the recommended list after having not selected any of the n -1 items ranked / displayed above, i.e., a browsing model. This idea has resulted in the ranking metric called expected reciprocal rank (ERR) <ref type="bibr" target="#b6">[7]</ref>, as well as in approaches for generating a more diverse ranked list <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b26">27]</ref>.</p><p>Only few papers have addressed the important issue that recommendations should reflect the various interests of the user with the correct proportions <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b25">26]</ref>, which we will discuss in the following.</p><p>The idea of proportionality was first proposed in <ref type="bibr" target="#b8">[9]</ref> in the context of diversifying search results. In <ref type="bibr" target="#b8">[9]</ref>, the proposed metric, named DP, is essentially a modified squared difference between the distributions p(д|u) and q(д|u). While it fulfills our property 1 for calibration metrics in Section 3, it does not exhibit the other two properties: as illustrated in Table <ref type="table" target="#tab_0">1</ref> for the target proportions 60%:40%, the more unbalanced recommendations with 7:3 titles in the two genres receives the same value DP=1 as does the uniform one with 5:5. Given that both deviate from the ideal recommendations of 6:4 by one movie being in the other genre, 5:5 should receive a better calibration score than 7:3 according to property (3) in Section 3. Property (2) is also not fulfilled because DP=1 for a deviation of 1 title is independent of how extreme the target distribution is when 10 titles get recommended in Table <ref type="table" target="#tab_0">1</ref>-ideally the score should be worse for the target distribution 70%:30%, as it is more extreme than 60%:40%. Note that the KL-divergence fulfills these properties in Table <ref type="table" target="#tab_0">1</ref>. In <ref type="bibr" target="#b8">[9]</ref>, the algorithm for generating a proportional list utilizes a procedure for seat assignment after an election, so that each party's seats are proportional to their received votes. They developed a probabilistic modification of this procedure as to tackle the problem of items belonging to several categories, and found this method to outperform the original one in their experiments. In case that perfect proportionality cannot be achieved, and an approximate solution with some deviations has to be found, their algorithm may treat deviations differently than their metric does, as they are conceptually unrelated. It is hence In <ref type="bibr" target="#b24">[25]</ref>, personalized diversification is approached from the perspective of submodularity. While they propose a submodular objective function in Eq. 2 in <ref type="bibr" target="#b24">[25]</ref> that is comprised of a log-sum term-similar to Eq. 8 in our Appendix-, its connection to the KLdivergence is not outlined in <ref type="bibr" target="#b24">[25]</ref>. It hence remains unclear in <ref type="bibr" target="#b24">[25]</ref> that the actual goal of this submodular function is to recommend the various item-categories proportional to their weights (e.g., CTR in <ref type="bibr" target="#b24">[25]</ref>).</p><p>The metric proposed in <ref type="bibr" target="#b25">[26]</ref>, named BinomDiv, is carefully crafted and fulfills properties (2) and (3) in Section 3: e.g., regarding the target proportions 60%:40% in Table <ref type="table" target="#tab_0">1</ref>, the more extreme recommendations with 7:3 receive a worse (lower) score than the more balanced one with 5:5. These are the important properties for proportionality. Their metric does not fulfill property 1, however, even in a more relaxed sense of taking the same fixed value (instead of 0) in case of perfect calibration: their metric can take on different values if p(д|u) = q(д|u), depending on the length of the recommended list as well as on the distribution of the genres p(д|u), see Table <ref type="table" target="#tab_0">1</ref>. This has two disadvantages: first, a given value of the metric by itself does not provide a sense for how calibrated the recommendations are-it only allows one to make relative comparisons regarding different recommended lists for a fixed user. Second, given that each user tends to have a different distribution of interests/genres, this metric cannot simply be averaged across users as to obtain an aggregate metric. While the transformation of this metric into a z-score for evaluation purposes does not seem to be mentioned in the paper, its use in the algorithm is pointed out. We also found that our computation of their metric suffered from numerical underflow when the number of recommended movies exceeded a couple of hundred-while this may not cause issues in many applications, like top 10 recommendations, there are also scenarios where the number of recommended items is in the hundreds, e.g., on the Netflix homepage. Apart from that, we note that the idea of adding a prior, as we outlined earlier in this section, was mentioned in <ref type="bibr" target="#b25">[26]</ref>. Their algorithm is based on maximum marginal relevance <ref type="bibr" target="#b5">[6]</ref>. As their metric may not be submodular, however, there may not be an optimality guarantee.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Fairness</head><p>In the field of machine learning, the importance of fairness has recently grown dramatically, e.g., see <ref type="bibr" target="#b32">[33]</ref> and reference therein for a review. Fairness is concerned with avoiding discrimination against certain persons or groups in the population, e.g., based on gender, race, age, etc. It is typically concerned with the scores or class labels predicted for individual persons in a population.</p><p>Various fairness criteria have been proposed in the literature, including calibration, equal(ized) odds, equal opportunity, and statistical parity <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b32">33]</ref>. Using equalized odds as fairness-metric, <ref type="bibr" target="#b11">[12]</ref> proposed a post-processing approach, and <ref type="bibr" target="#b27">[28]</ref> improved on this by integrating fairness into the training objective.</p><p>In the context of collaborative filtering, it was discussed in <ref type="bibr" target="#b28">[29]</ref> that small sub-populations in the user-base (i.e., population imbalance), as well as less active sub-populations (i.e., persons who provide fewer ratings) may receive biased recommendations. Apart from that, <ref type="bibr" target="#b28">[29]</ref> focused on rating prediction and RMSE, instead of the more relevant scenario of implicit feedback data and ranking metrics.</p><p>In this paper, we consider a complementary notion of fairness: instead of fairness regarding persons, we consider fairness concerning the various interests of a user, with the goal to reflect them according to their corresponding proportions. In the remainder of this section, we outline why we deem the calibration criteria particularly useful for this non-standard notion of fairness.</p><p>As shown in <ref type="bibr" target="#b15">[16]</ref>, calibration and equal(ized) odds / equal opportunity cannot be fulfilled (exactly nor approximately) at the same time-except for two special cases: when the machine-learned model makes perfect predictions (which does typically not hold in real-world applications), or when the different groups of persons (which all should be treated fairly) have the same base rate, i.e., the same fraction of positive classification-labels, which typically does not hold in the real world, either. Given that a user typically played genres with different proportions (like 70% romance and 30% action movies), the base rate of these two genres (or groups in the fairness literature) is obviously different, and so are the average scores predicted for the movies in these two genres. Hence, the fairness criteria equal(ized) odds, equal opportunity and statistical parity are not immediately applicable in our context. This motivated us to focus on calibration as a suitable fairness criteria for recommendations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENTS</head><p>This section illustrates the proposed calibration metric (see Section 3) and calibration algorithm (see Section 4) in our experiments on the MovieLens 20 Million data <ref type="bibr" target="#b12">[13]</ref>. As outlined in <ref type="bibr" target="#b25">[26]</ref>, the various metrics regarding diversity capture different properties, and the corresponding algorithms perform well regarding the metric they were developed for, but not necessarily with respect to the other metrics. For this reason, we restrict ourselves in the remaining space of this paper to illustrate that the proposed approach works as expected. Figure <ref type="figure">1</ref>: Histograms of calibration scores C KL @50 of all test users, with no (λ = 0) vs. increased calibration (see Eq. 6). Lower C KL @50 is better.</p><p>We used the MovieLens data, as it also contains genre-information besides the rating-data. Implicit feedback data, however, are much more abundant than rating data in most real-world applications. We hence focus on implicit data, and follow the usual procedure of simulating binary implicit feedback data (e.g., user played movie) from the publicly available rating-data by retaining only ratings of 4 stars and higher, while dropping lower ratings. After eliminating movies that had no genre information attached or were not played by a user, the resulting data set was comprised of about 10 million 'plays' with value 1 (instead of ratings) regarding about 21k movies and 140k users. Typically several genres д are assigned to a movie i in this data set-we assigned equal probabilities p(д|i) to each assigned genre д such that д p(д|i) = 1 for each movie i. This is then used to determine the genre-distributions p(д|u) and q(д|u) of user u in Eqs. 2 and 3. We split these data into a training set (99% of the play-data) and a disjoint test set with about 100,000 plays (1% of the play-data), as this split-ratio was also approximately used in the Netflix Prize data <ref type="bibr" target="#b2">[3]</ref>.</p><p>As to generate the baseline-recommendations, we learned a weighted 50-dimensional matrix-factorization model on these training data following the usual approaches described in <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b22">23]</ref>, where we tuned the hyper-parameters, i.e., the L2-norm regularization and the weight for the missing plays (negative sampling), as to maximize recommendation accuracy (recall@50, e.g., see <ref type="bibr" target="#b20">[21]</ref> for its definition). In the following experiments, we compare the recommendations produced by this baseline-model that was trained to optimize accuracy, with the re-ranked recommendations generated by our approach outlined in Section 4 for different values of λ, which controls the degree of calibration in Eq. 6. Given that we find calibration an important property of the recommended list, the default value in the presented experiments is λ = 0.99 unless otherwise noted.</p><p>Regarding the baseline-recommendations of each user, we computed the calibration metric C KL . <ref type="foot" target="#foot_1">2</ref> Figure <ref type="figure">1</ref> shows the obtained The average values across all test users are summarized in Table <ref type="table" target="#tab_1">2</ref>: relative to the baseline (λ = 0), it shows that re-ranking with an increased value of λ in Eq. 6 results in recommendations with better calibration on average, but at the price of reduced accuracy (lower recall), as expected (see Section 2.1). Table <ref type="table" target="#tab_1">2</ref> also illustrates that, for rather small values of λ, calibration can be improved considerably while accuracy is reduced only slightly. Only for large value of λ, the accuracy drops quickly. Also note that the values C KL @10 are larger than C KL @50 because the genre-distribution is more constraint (and hence less calibrated) if it is based on only 10 rather than 50 recommended movies. Moreover, C KL @10 improves considerably for small values of λ (relative to no calibration) in Table <ref type="table" target="#tab_1">2</ref>, while a larger λ is needed for notable improvements of C KL @50. At the same time, recall@10 deteriorates a lot for larger values of λ, while recall@50 is fairly constant up to around λ = 0.95. This suggests that a useful strategy in practical application might be to change λ from small to large values during the greedy re-ranking approach. As a result, the top-ranked items of the re-ranked list would be very similar to the original ranking, followed by items that would increasingly cover the lesser areas of interest of a user.</p><p>Figure <ref type="figure" target="#fig_1">2</ref> shows the distribution of genres in the top 50 recommendations for a test user chosen from the 10% sub-population where the baseline-recommendations were very uncalibrated: while the genres Drama and Adventure are over-represented in the user's baseline-recommendations (i.e., before calibration) relative to the user's play history, the user's lesser interests, including the genres Musical, Mystery, Thriller and Western, are essentially missing from the baseline-recommendations. This illustrates that the recommender system may amplify the main areas of interest of a user, while crowding out the user's lesser interests. Figure <ref type="figure" target="#fig_1">2</ref> also shows that this can be largely prevented by the proposed greedy approach (with λ = 0.99 in Eq. 6): the re-ranked recommendations reflect the  user's various interests with their proportions much more closely. Note, however, that recommendations that reflect a user's past interests may still keep this user in their personal filter bubble. For this reason, it is important to use the extended calibration probability in practical applications (see Section 5.1 and Eq. 7), which results in recommendations that also cover the areas outside of a user's past areas of interest. While it is crucial to ensure calibration for each individual user (as exemplified in Figure <ref type="figure" target="#fig_1">2</ref>), we now show aggregate results regarding the 10% sub-population of test users who received recommendations with the worst calibration. Figure <ref type="figure" target="#fig_2">3</ref> is obtained as follows: for each user, we calculate the difference in the genreprobabilities between the recommended list of 50 movies and the user's play-history. This difference is then averaged across all test users, separately for positive and negative differences. In Figure <ref type="figure" target="#fig_2">3</ref>, the average genre-probability across all users' play histories serves as reference point, while the average positive and negative differences determine the lengths of the intervals above and below each reference point, respectively. If the recommendations are perfectly calibrated to each individual user's play-history, then the length of the intervals is zero. If the lower interval is larger than the upper interval, this genre is under-represented in the recommendations on average. Analogously, the upper interval is larger for over-represented genres. If both intervals are of equal length, then the genre is represented with the correct proportions on average across all test users-however, the length of the intervals indicate the average deviation for an individual user. Given that recommendations should be calibrated for each individual user, it is desirable that the intervals are small.</p><p>Figure <ref type="figure" target="#fig_2">3</ref> shows that the users played about 3% documentaries on average, but the top-50 baseline-recommendations essentially missed this genre completely (i.e., the lower red interval extends all the way to zero, while the upper red interval is essentially of zero length). Similarly, the users' lesser interests, i.e., the genres  IMAX, Musical and Western, are also severely underrepresented on average (the lower red interval extends to about zero as well).</p><p>At the same time, genres like Action, Adventure, Crime, Mystery and Sci-Fi are mostly over-represented (the upper red interval is larger than the lower red one). Figure <ref type="figure" target="#fig_2">3</ref> also illustrates the results of the proposed greedy algorithm (with λ = 0.99 in Eq. 6): now the various genres, including the less popular ones, are well calibrated for each individual user (the green intervals are smaller than the red ones). The various interests of each user are hence reflected by the re-ranked recommendations. Drama is the genre with the largest interval: it now is slightly under-represented in the re-ranked recommendations on average (the lower green interval is larger than the upper green interval)-which allows for space in the recommended list as to slightly over-represent the genres that pertain to the lesser areas of interest of each user. This illustrates the effectiveness of the proposed algorithm in generating calibrated recommendations that reflect the various interests of each individual user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>In this paper, we showed that recommender systems that are trained toward accuracy in the typical offline-setting may generate unbalanced recommendations, especially when the available training data are limited or noisy. We motivated the importance of calibration as an additional objective besides recommendation-accuracy. We outlined established metrics for quantifying the degree of calibration. It is desirable that they are particularly sensitive to discrepancies regarding the lesser areas of interest of a user, especially when such an area of interest is completely missing from the recommended list. Moreover, we presented a simple yet effective greedy algorithm, and outlined an optimality-guarantee due to submodular functions. These approaches can be applied for post-processing the recommendation-lists generated by recommender systems. We also discussed the difference to diversity in its typical sense of minimal similarity or redundancy among the recommended items. Given that calibration is a property of the entire recommended list, future improvements may be achieved by integrating calibration in the objective of listwise learning-to-rank approaches, and by going beyond the typical offline-setting of training and testing recommender systems, e.g., <ref type="bibr" target="#b23">[24]</ref>.</p><p>This paper took a user-centric view, i.e., the recommendations were calibrated for each user. The complementary perspective is the item-centric view, which we leave for future work: as to calibrate the recommendations with respect to each item, one may consider, for instance, whether an item that is recommended twice as often as another item, is also consumed twice as often (across all the users).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Genre-distribution of a user's play-history (black), and of the recommendations before (red/left) and after calibration (green/right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure3: Average over the 10% sub-population of test users with the most uncalibrated recommendations: the mean probability of each genre in the users' play-histories (black); the intervals reflect the average difference between the genre's proportion in the recommended list vs. in the playhistory of each user before (red/left) and after (green/right) calibration. See text for details.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Comparison of three calibration metrics for a given target distribution p(д|u), and the genre counts n 1/2 = N • q(д 1/2 |u) in the recommended list of N movies. See Sections 3 and 5.1 for discussion.</figDesc><table><row><cell cols="4">(a) target distribution: 60% : 40%</cell><cell></cell></row><row><cell>N</cell><cell cols="4">n 1 : n 2 C KL (Eq. 4) BinomDiv [26] DP [9] 5:5 0.0197 4.66•10 -4 1.0</cell></row><row><cell>10</cell><cell>6:4</cell><cell>0.0</cell><cell>5.38•10 -4</cell><cell>0.0</cell></row><row><cell></cell><cell>7:3</cell><cell>0.0221</cell><cell>4.62•10 -4</cell><cell>1.0</cell></row><row><cell cols="4">(b) target distribution: 70% : 30%</cell><cell></cell></row><row><cell>N</cell><cell cols="4">n 1 : n 2 C KL (Eq. 4) BinomDiv [26] DP [9] 6:4 0.0212 1.74•10 -4 1.0</cell></row><row><cell>10</cell><cell>7:3</cell><cell>0.0</cell><cell>2.04•10 -4</cell><cell>0.0</cell></row><row><cell></cell><cell>8:2</cell><cell>0.0275</cell><cell>1.69•10 -4</cell><cell>1.0</cell></row><row><cell></cell><cell>69:31</cell><cell>2.31•10 -4</cell><cell>7.78•10 -35</cell><cell>1.0</cell></row><row><cell cols="2">100 70:30</cell><cell>0.0</cell><cell>7.91•10 -35</cell><cell>0.0</cell></row><row><cell></cell><cell>71:29</cell><cell>2.36•10 -4</cell><cell>8.39•10 -35</cell><cell>1.0</cell></row><row><cell cols="5">not obvious if the approximate solution obeys properties desirable</cell></row><row><cell cols="4">in the context of calibrated recommendations.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Trade-off between ranking accuracy and calibration metric C K L , as determined by λ in Eq. 6. KL @50 as a histogram over all test users: the wide range of calibration scores C KL @50 in the baseline-recommendations (λ = 0) indicates that different users experience vastly different recommendation-qualities in terms of calibration. Figure1 alsoshows the effectiveness of the proposed greedy re-ranking approach: considerably better (lower) calibration scores C KL @50 are achieved as λ is increased. It also illustrates that the degree of calibration can be controlled in a continuous way by changing the value of λ.</figDesc><table><row><cell></cell><cell>recall</cell><cell>C K L</cell></row><row><cell>calibration</cell><cell>@10 @50</cell><cell>@10 @50</cell></row><row><cell cols="3">none (λ = 0) 0.209 0.464 0.677 0.185</cell></row><row><cell>λ = 0.2</cell><cell cols="2">0.209 0.464 0.465 0.171</cell></row><row><cell>λ = 0.5</cell><cell cols="2">0.199 0.464 0.274 0.141</cell></row><row><cell>λ = 0.8</cell><cell cols="2">0.170 0.463 0.128 0.092</cell></row><row><cell>λ = 0.9</cell><cell cols="2">0.146 0.460 0.084 0.061</cell></row><row><cell>λ = 0.95</cell><cell cols="2">0.121 0.453 0.065 0.037</cell></row><row><cell>λ = 0.99</cell><cell cols="2">0.090 0.417 0.054 0.009</cell></row><row><cell>λ = 0.999</cell><cell cols="2">0.082 0.339 0.054 0.005</cell></row><row><cell>scores C</cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>We further assumed for simplicity of the argument in Eq. 1 that the most probable movie in each genre has the same conditional probability, i.e., p (i дr , 1 |д r ) = p (i дa , 1 |д a ). If this is not the case, one can simply include an additional factor in the equation.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>In all our experiments, for simplicity we use no prior p 0 in Eq. 7, and no weights in the averages for p and q in Eqs. 2 and</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p></p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>I would like to thank Tony Jebara, Aish Fenton, Dawen Liang, and Ehtsham Elahi for their useful feedback.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head><p>Here we show that the greedy optimization of Eq. 6 is equivalent to the greedy optimization of a surrogate function that is submodular. Loosely speaking, the concept of submodular functions may be viewed as a generalization of non-decreasing concave functions to set-functions (on a matroid).</p><p>We first split the calibration metric (Eq. 4) into its parts:</p><p>Regarding the last line, several remarks are in order. First, the entropy H (p) refers to the user's past plays, and hence is a constant when optimizing for the set I of recommended movies. Second, and equivalent to Eqs. 3 and 5, we here absorbed the regularization of q(д|u) into each individual movie's genre distribution q(д|i) = (1α ) •p(д|i) +α •p(д|u). This results in the last two terms in the last line in Eq. 8. Given that the weights w r (i ) depend merely on the rank r (i) of movie i, and hence not directly on i, we have that i ∈I w r (i ) = |I | r =1 w r , which thus is also a constant in the optimization problem when the size of I is fixed. When the size |I| is not fixed, then log |I | r =1 w r is a non-decreasing concave function of its size, and hence a submodular function regarding sets. Moreover, also the last term in Eq. 8 is a submodular function, see <ref type="bibr" target="#b21">[22]</ref>. Hence, the KL-divergence can be expressed as a difference of two submodular functions <ref type="bibr" target="#b21">[22]</ref>.</p><p>In <ref type="bibr" target="#b21">[22]</ref>, it was proposed to use this last term in place of the KL-divergence. This results in the new optimization problem: <ref type="bibr" target="#b8">(9)</ref> which now is submodular, given that s (I ) = i ∈I s (i) is modular, and the sum of modular and submodular functions is submodular. With the well-known (1 -1/e) optimality guarantee <ref type="bibr" target="#b16">[17]</ref>, we can now greedily optimize this objective function: at each iterative step, when we determine the next movie i to append, only sets of the same size are considered, and hence the first two terms in Eq. 8 are constants, while only the last term depends on i. Hence, at each greedy iterative step, both Eqs. 6 and 9 yield the same optimal movie i * . The only subtle point here is that the (1 -1/e) optimality guarantee refers to Eq. 9 due to its submodularity.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Diversified Utility Maximization for Recommendations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ashkan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kveton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Berkovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Recommender Systems (RecSys)</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Optimal Greedy Diversity for Recommendation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ashkan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kveton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Berkovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Int. Joint Conf. on Artificial Intelligence (IJCAI)</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The Netflix Prize</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bennet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lanning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop at SIGKDD-07, ACM Conference on Knowledge Discovery and Data Mining</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Linear Relaxations for Finding Diverse Elements in Metric Spaces</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bhaskara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ghadiri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Mirrokni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Latent Dirichlet Allocation</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Blei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The use of MMR, diversity-based reranking for reordering documents and producing summaries</title>
		<author>
			<persName><forename type="first">J</forename><surname>Carbonell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Research and development in information retrieval (SIGIR)</title>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Expected Reciprocal Rank for Graded Relevance</title>
		<author>
			<persName><forename type="first">O</forename><surname>Chapelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Metzler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Grinspan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1709.05135</idno>
		<title level="m">Improving the Diversity of Top-N Recommendation via Determinantal Point Process</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Diversity by Proportionality: An Election-based Approach to Search Result Diversification</title>
		<author>
			<persName><forename type="first">V</forename><surname>Dang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">B</forename><surname>Croft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Research and development in information retrieval (SIGIR)</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Asymptotic calibration</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Vohra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biometrika</title>
		<imprint>
			<biblScope unit="volume">85</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="379" to="390" />
			<date type="published" when="1998">1998. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Bayesian low-rank determinantal point processes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gartrell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Paquet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Koenigstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Recommender Systems (RecSys)</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="349" to="356" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Equality of opportunity in supervised learning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Price</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Srebro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The MovieLens Datasets: History and Context</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Harper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Konstan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Interactive Intelligent Systems (TiiS)</title>
		<imprint>
			<biblScope unit="page">5</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
	<note>Issue</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Collaborative Filtering for Implicit Feedback Datasets</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Volinsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Data Mining (ICDM)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Novelty and diversity in top-N recommendationanalysis and evaluation</title>
		<author>
			<persName><forename type="first">Neil</forename><surname>Hurley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mi</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Internet Technology (TOIT)</title>
		<imprint>
			<biblScope unit="page">10</biblScope>
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
	<note>Issue 4</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Inherent Trade-Offs in the Fair Determination of Risk Scores</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mullainathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Raghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An Analysis of Approximations for Maximizing Submodular Set Functions</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Nemhauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<date type="published" when="1978">1978. 1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">One-Class Collaborative Filtering</title>
		<author>
			<persName><forename type="first">R</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lukose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Scholz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Data Mining (ICDM)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Promoting Diversity in Recommendation by Entropy Regularizer</title>
		<author>
			<persName><forename type="first">L</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Int. Joint Conf. on Artificial Intelligence (IJCAI)</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Exploiting Query Reformulation for Web Search Result Diversification</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L T</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Macdonald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Ounis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conference</title>
		<imprint>
			<publisher>WWW)</publisher>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Evaluating Recommendation systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Shani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gunawardana</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Recommender Systems Handbook</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="257" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A submodular optimization approach to sentence set selection</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shinohara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Acoustic, Speech and Signal processing</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>ICASSP</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Training and Testing of Recommender Systems on Data Missing Not at Random</title>
		<author>
			<persName><forename type="first">H</forename><surname>Steck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Knowledge Discovery and Data Mining (KDD)</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="713" to="722" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Off-policy evaluation for slate recommendation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Swaminathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dudik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Langford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Jose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Zitouni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="3635" to="3645" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Adaptive, Personalized Diversity for Visual Discovery</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Teo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Nassif</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Goodman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Mohan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V N</forename><surname>Vishwanathan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Recommender Systems (RecSys)</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="35" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Coverage, Redundancy and Size-Awareness in Genre Diversity for Recommender Systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Vargas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Baltrunas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karatzoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Castells</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Recommender Systems (RecSys)</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Explicit Relevance Models in Intent-Oriented Information Retrieval Diversification</title>
		<author>
			<persName><forename type="first">S</forename><surname>Vargas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Castells</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vallet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Research and Development in Information Retrieval (SIGIR)</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">B</forename><surname>Woodworth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gunasekar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Ohannessian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Srebro</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1702.06081</idno>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note type="report_type">Learning Non-Discriminatory Predictors</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Beyond Parity: Fairness Objectives for Collaborative Filtering</title>
		<author>
			<persName><forename type="first">S</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Obtaining calibrated probability estimates from decision trees and naive Bayesian classifiers</title>
		<author>
			<persName><forename type="first">B</forename><surname>Zadrozny</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Elkan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="609" to="616" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Avoiding monotony: improving the diversity of recommendation lists</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hurley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Recommender Systems (RecSys)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="123" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Improving recommendation lists through topic diversification</title>
		<author>
			<persName><forename type="first">C.-N</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Mcnee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Konstan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lausen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conference (WWW)</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="22" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">A survey on measuring indirect discrimination in machine learning</title>
		<author>
			<persName><forename type="first">I</forename><surname>Zliobaite</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.00148</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
