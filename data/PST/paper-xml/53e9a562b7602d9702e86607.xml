<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Equational Theory of Fixed Points with Applications to Generalized Language Theory * Dedicated to Prof. Werner Kuich on the occasion of his 60th birthday</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
							<email>esik@inf.u-szeged.hu</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Szeged</orgName>
								<address>
									<postBox>P.O.B. 652</postBox>
									<postCode>6720</postCode>
									<settlement>Szeged</settlement>
									<country key="HU">Hungary</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Equational Theory of Fixed Points with Applications to Generalized Language Theory * Dedicated to Prof. Werner Kuich on the occasion of his 60th birthday</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">7171C0B51439A29100E0619E9EF85215</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We review the rudiments of the equational logic of (least) fixed points and provide some of its applications for axiomatization problems with respect to regular languages, tree languages, and synchronization trees.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A classic result of the theory of context-free languages is Parikh's theorem <ref type="bibr" target="#b31">[32]</ref> that asserts that the letter occurrence vectors <ref type="bibr">(Parikh vectors)</ref> corresponding to the words of a context-free language on a k-letter alphabet form a semilinear subset of N k , the free commutative monoid of k-dimensional vectors over the naturals. The theorem is usually proved by combinatorial arguments on the derivation trees of the context-free grammar. However, as Pilling <ref type="bibr" target="#b34">[35]</ref> observed, Parikh's theorem may be formulated as an assertion about "rational functions" on the (free) commutative idempotent continuous semiring of all subsets of N k . Subsequently, Kuich <ref type="bibr" target="#b27">[28]</ref> generalized Parikh's result to all commutative idempotent continuous semirings (l-semirings). (See also <ref type="bibr" target="#b26">[27]</ref> for a related treatment.) In fact, by introducing rational terms that denote rational functions, or more generally, recursion terms or µ-terms denoting functions that arise as least solutions of systems of polynomial fixed point equations, Parikh's theorem can be translated into a statement about the equational theory of commutative idempotent continuous semirings: For every µ-term t there exists a rational term r such that the equation t = r holds in all commutative idempotent continuous semirings. Alternatively, one may just consider rational terms and prove that for each rational term t(x, y 1 , . . . , y n ) in the variables x, y 1 , . . . , y n there is a rational term r(y 1 , . . . , y n ) containing no occurrence of x that provides least solution to the fixed point equation x = t(x, y 1 , . . . , y n ) over all commutative idempotent continuous semirings. This approach has been pursued by Hopkins and Kozen in <ref type="bibr" target="#b22">[23]</ref>, in their argument lifting Parikh's theorem to all commutative idempotent semirings with enough least fixed points to provide solutions to recursion equations. By proving this more general result, Hopkins and Kozen have shown how to replace the analytic arguments of Pilling and Kuich by arguments based only on the the least (pre-)fixed point rule (also known as the Park induction rule <ref type="bibr" target="#b32">[33]</ref>), the fixed point equation, and the algebraic laws of the sum and product operations. But since Parikh's theorem is a claim about equational theories, one would eventually like to have a purely equational proof of it. This question has been addressed recently in <ref type="bibr" target="#b0">[1]</ref>. In this paper, Parikh's theorem is derived from a small set of purely equational axioms involving fixed points.</p><p>Parikh's theorem is not the only result of automata and language theory that can be derived by simple equational reasoning from the algebraic properties of fixed points. Other applications of the equational logic of fixed points include Kleene's theorem and its generalizations <ref type="bibr" target="#b6">[7]</ref>, see also <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b8">9]</ref>, where the presentation is not fully based on equational reasoning, and Greibach's theorem <ref type="bibr" target="#b18">[19]</ref>. The methods employed in the papers <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b16">17]</ref> even indicate that one can embed the Krohn-Rhodes decomposition theorem <ref type="bibr" target="#b20">[21]</ref> for finite automata and semigroups within equational logic. Further applications of fixed point theory include an algebraic proof of the soundness and relative completeness of Hoare's logic <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref>. See also <ref type="bibr" target="#b24">[25]</ref>.</p><p>The aim of this paper is to provide an introduction to the basics of the equational theory of fixed points and to show some of its applications in the solution of axiomatization problems for "generalized languages". In his book, Conway formulated several conjectures regarding the equational theory of the regular sets. Some of his conjectures have since been confirmed (e.g., the completeness of the group-identities, settled by Krob in <ref type="bibr" target="#b25">[26]</ref>), but some are still open. In particular, Conway's "letter reduction" conjecture is still open. In this paper, we generalize both Conway's group-identities and his letter reduction conjecture to continuous algebras over any signature. Just as in the classical setting of regular languages, the group-identities are complete, in conjunction with the classical identities. The generalized letter reduction conjecture remains open.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preiteration algebras</head><p>Terms, or µ-terms, over the signature Σ are defined by the syntax</p><formula xml:id="formula_0">T ::= x | σ( n-times T, . . . , T ) | µx.T,</formula><p>where x ranges over a countably infinite set V of variables, and for each n ≥ 0, σ ranges over Σ n , the set of n-ary function symbols in Σ. Free and bound occurrences of variables in a term are defined as usual. We identify any two µ-terms that differ only in the bound variables. Moreover, for any µ-terms t, t 1 , . . . , t n and distinct variables x 1 , . . . , x n , we write t[t 1 /x 1 , . . . , t n /x n ] or t[(t 1 , . . . , t n )/(x 1 , . . . , x n )] for the term obtained by simultaneously substituting t i for x i , for each i ∈ [n] = {1, . . . , n}. Since we may assume that the bound variables in t are different from the variables that have a free occurrence in the terms t i , no free variable in any t i may become bound as the result of the substitution. Below, we will write t(x 1 , . . . , x n ) or t( x), where x = (x 1 , . . . , x n ) to denote that t is a term with free variables in the set {x 1 , . . . , x n }. When writing µ-terms, we assume that the scope of a prefix µx extends to the right as far as possible.</p><p>We will be interested in interpretations where µx.t provides a "canonical solution" to the fixed point equation x = t.</p><p>A preiteration Σ-algebra is a nonempty set A together with an interpretation of the terms t as functions t A : A V → A such that the following hold: </p><formula xml:id="formula_1">1. When t is a variable x ∈ V , then t A is the corresponding projection A V → A, i.e., t A (ρ) = ρ(x), for all ρ : V → A.</formula><formula xml:id="formula_2">)]) A (ρ) = t A (ρ[x i → (t i ) A (ρ) : i ∈ [n]]),</formula><p>for all ρ : V → A, where for any (a 1 , . . . , a n ) ∈ A n , the function</p><formula xml:id="formula_3">ρ[x i → a i : i ∈ [n]</formula><p>] is the same as ρ except that it maps each x i to a i . A strong preiteration algebra is a preiteration algebra that satisfies the following strengthened version of the third condition above: For all terms t, t and for all ρ :</p><formula xml:id="formula_4">V → A and x ∈ V , if t A (ρ[x → a]) = t A (ρ[x → a]), for all a ∈ A, then (µx.t) A (ρ) = (µx.t ) A (ρ).</formula><p>We will also consider ordered preiteration Σ-algebras which are preiteration Σ-algebras A equipped with a partial order ≤ such that each term function t A is monotonic with respect to the pointwise order on A V , and such that the following stronger version of the third condition above is satisfied: If t, t are terms over Σ with t A ≤ t A in the pointwise order, then for all variables x, also (µx.t) A ≤ (µx.t ) A . The "ordered notion" corresponding to strong preiteration Σ-algebras is the notion of strong ordered preiteration Σ-algebra which is defined in the obvious way.</p><p>Below, if t = t(x 1 , . . . , x n ) and if A is an (ordered) preiteration Σalgebra with a 1 , . . . , a n ∈ A, we write t A (a 1 , . . . , a n ) for t A (ρ), where ρ :</p><formula xml:id="formula_5">V → A maps each x i to a i , i ∈ [n].</formula><p>A morphism of (strong) preiteration Σ-algebras A and B is a function</p><formula xml:id="formula_6">h : A → B such that h(t A (a 1 , . . . , a n )) = t B ((h(a 1 ), . . . , h(a n )),</formula><p>for all terms t(x 1 , . . . , x n ), and for all (a 1 , . . . , a n ) ∈ A n . A morphism of (strong) ordered preiteration Σ-algebras also preserves the partial order.</p><p>Note that any preiteration Σ-algebra A determines a Σ-algebra: For each σ ∈ Σ n and (a 1 , . . . , a n ), we define σ A (a 1 , . . . , a n ) = t A (a 1 , . . . , a n ), where t is the term σ(x 1 , . . . , x n ) for some sequence of different variables x 1 , . . . , x n . Also, any preiteration algebra morphism is a Σ-algebra homomorphism.</p><p>First-order formulas involving µ-terms over Σ are constructed form atomic formulas t = t , where t and t are µ-terms, in the expected way. In the ordered setting, expressions t ≤ t are also atomic formulas. Free and bound occurrences of variables in a formula and substitution are defined as usual. A formula with no free variables is called a sentence. The semantic notion of satisfaction is defined in the usual Tarskian style. Suppose that A is an (ordered) preiteration algebra, ρ is a function V → A and ϕ is a formula. We write (A, ρ) |= ϕ to denote that A satisfies ϕ under the given evaluation of the variables. When φ is a sentence, we say that A satisfies ϕ, or that ϕ holds in A, notation A |= ϕ, if (A, ρ) |= ϕ for all, or for some ρ. (Note that a preiteration algebra is not empty.)</p><p>Most sentences that we will encounter in this paper fall into three categories. First of all, we will have equations and inequations that are sentences of the form ∀x 1 . . . ∀x n (t = t ) and ∀x 1 . . . ∀x n (t ≤ t ), respectively, also denoted as ∀ x(t = t ) and ∀ x(t ≤ t ). An equation is also called an identity. Second, we will consider implications of the form</p><formula xml:id="formula_7">∀ x(t 1 = t 1 ∧. . .∧t k = t k ⇒ t = t ) and ∀ x(t 1 ≤ t 1 ∧. . .∧t k ≤ t k ⇒ t ≤ t ).</formula><p>Finally, we will also have implications between equations (or inequations) that are of the form ∀ x(t</p><formula xml:id="formula_8">1 = t 1 ∧ . . . ∧ t k = t k ) ⇒ ∀ y(s = s ).</formula><p>As usual, we will abbreviate an equation as t = t , an inequation as t ≤ t , and an implication as</p><formula xml:id="formula_9">t 1 = t 1 ∧ . . . ∧ t k = t k ⇒ t = t , etc.</formula><p>Example 2.1 Every preiteration Σ-algebra satisfies the implication between equations</p><formula xml:id="formula_10">∀x∀ y(t = t ) ⇒ ∀ y(µx.t = µx.t ),</formula><p>for all terms t(x, y), t (x, y) over Σ. A preiteration algebra is strong iff it satisfies all sentences</p><formula xml:id="formula_11">∀ y(∀x(t = t ) ⇒ µx.t = µx.t ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Continuous algebras</head><p>Recall that a cpo is a poset (A, ≤) which has a least element, denoted ⊥ A , and such that each directed set<ref type="foot" target="#foot_0">1</ref> D ⊆ A has a supremum D. Note that when A is a cpo, so is any direct power of A equipped with the pointwise ordering, as is the direct product of any number of cpo's.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Suppose that A and B are cpo's and f is a function</head><formula xml:id="formula_12">A → B. We call f monotonic if f (a) ≤ f (b) whenever a ≤ b in A. Moreover, we call f continuous if f is monotonic and f ( D) = f(D) holds for all directed sets D ⊆ A. Finally, we call f strict if f (⊥ A ) = ⊥ B .</formula><p>Below we will make use of the following well-known properties of continuous functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 3.1 Each projection function i∈I</head><formula xml:id="formula_13">A i → A j from a direct product of cpo's A i , i ∈ I to a cpo A j is continuous. Moreover, if f : A 1 × . . . × A n → A and g 1 : B → A 1 , . . . , g n : B → A n are continuous, where A, B, A 1 , . . . , A n are all cpo's, then so is the function h : B → A defined by h(b) = f(g 1 (b), . . . , g n (b)), for all b ∈ B. When f : A × B → A and b is a fixed element of B, let f b denote the function A → A defined by f b (a) = f(a, b). Proposition 3.2 Suppose that A and B are cpo's and f is a continuous function A × B → A. Then for each b ∈ B there is a least a = f † (b) which is a pre-fixed point of f b , i.e., such that f (a, b) ≤ a. Moreover, f † : B → A, as a function of b, is continuous. The least pre-fixed point a is in fact a fixed point of f b , i.e., f (a, b) = a. Indeed, since f (a, b) ≤ a and f is monotonic, also f (f (a, b), b) ≤ f(a, b), showing that f (a, b) is a pre-fixed point. But since a is the least pre-fixed point, we have that a ≤ f (a, b), which, together with f (a, b) ≤ a gives f (a, b) = a.</formula><p>A continuous Σ-algebra consists of a cpo (A, ≤) and a Σ-algebra (A, Σ) such that each operation σ A :</p><formula xml:id="formula_14">A n → A, σ ∈ Σ n is continuous. A morphism of continuous Σ-algebras is a strict continuous Σ-algebra homomorphism.</formula><p>Each continuous Σ-algebra A gives rise to a strong ordered preiteration Σ-algebra. We define t A by induction on the structure of the term t. Suppose that ρ :</p><formula xml:id="formula_15">V → A. 1. When t is the variable x, we define t A (ρ) = ρ(x). 2. When t is a term of the form σ(t 1 , . . . , t n ), we let t A (ρ) = σ A ((t 1 ) A (ρ), . . . , (t n ) A (ρ)).</formula><p>3. When t is of the form µx.t , then we define t A (ρ) to be the least</p><formula xml:id="formula_16">a ∈ A with t A (ρ[x → a]) ≤ a, in fact t A (ρ[x → a]) = a.</formula><p>The fact that t A is a well-defined continuous function A V → A follows from Propositions 3.1 and 3.2. Since strict continuous functions preserve least pre-fixed points, it follows that each strict continuous morphism A → B, where A and B are continuous Σ-algebras, is a (strong) preiteration algebra morphism. Since in continuous algebras, µ-terms are interpreted by least prefixed points, we have:</p><formula xml:id="formula_17">Proposition 3.3 Each continuous Σ-algebra satisfies the fixed point equation µx.t = t[µx.t/x] ( 1 )</formula><p>and the implication</p><formula xml:id="formula_18">t[y/x] ≤ y ⇒ µx.t ≤ y, (<label>2</label></formula><formula xml:id="formula_19">)</formula><p>for all terms t over Σ, and all variables x, y.</p><p>Note that the fixed point equation ( <ref type="formula">1</ref>) is not a single equation, but in fact an equation scheme. Nevertheless, following standard practice, we will call such schemes just equations.</p><p>The above implication (2) is sometimes referred to as the Park induction rule <ref type="bibr" target="#b32">[33]</ref>, or the least pre-fixed point rule. It is an instance of a more general induction principle attributed to Scott. See also <ref type="bibr" target="#b1">[2]</ref>. The Park induction rule has a weak version, which is an implication between inequations: For all terms t(x, y) and t ( y)</p><formula xml:id="formula_20">∀ y(t[t /x] ≤ t ) ⇒ ∀ y(µx.t ≤ t ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conway algebras</head><p>A (strong) Conway Σ-algebra <ref type="bibr" target="#b6">[7]</ref> is a (strong) preiteration algebra satisfying the following diagonal (3) and rolling equations (4) for all terms t, t over Σ and for all variables x, y:</p><formula xml:id="formula_21">µx.t[x/y] = µx.µy.t (3) µx.t[t /x] = t[µx.t [t/x]/x].<label>(4)</label></formula><p>The above equations are by now classic, see <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b30">31]</ref>, to mention a few early references. A morphism of Conway Σ-algebras is a preiteration Σ-algebra morphism. Note that when t is the variable x, (4) reduces to the fixed point equation defined above. Thus, in Conway algebras, µx.t provides a canonical solution to the fixed point equation x = t. A strong Conway algebra is also a strong preiteration algebra. Strong Conway Σalgebras satisfy the same equations as Conway Σ-algebras. <ref type="foot" target="#foot_1">2</ref> Morphisms of (strong) Conway algebras are preiteration algebra morphisms. It turns out that in Conway algebras it is also possible to solve systems of fixed point equations. Below we will often consider term vectors t = (t 1 , . . . , t n ), where n is any positive integer. We say that a variable has a free occurrence in t if it has a free occurrence in one of the t i . Bound occurrences are defined in the same way. Substitution into a term vector is defined component-wise. When t = (t 1 , . . . , t n ) and A is a preiteration algebra, t A : A V → A n is the function ρ → ((t 1 ) A (ρ), . . . , (t n ) A (ρ)). We identify any vector of dimension 1 with its unique component. A formula t = s, where t = (t 1 , . . . , t n ) and s = (s 1 , . . . , s n ), is viewed as an abbreviation for the formula t 1 = s 1 ∧ . . . ∧ t n = s n . Formulas t ≤ s are abbreviations in the same way.</p><p>Suppose that t = (t 1 , . . . , t n ) is a vector of terms and x = (x 1 , . . . , x n ) is a vector of different variables of the same dimension n ≥ 1. We define the term vector µ x. t by induction on n. When n = 1, we define µ x. t = (µx The above definition is motivated by the Bekić-De Bakker-Scott rule <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b1">2]</ref>. See also Pilling <ref type="bibr" target="#b34">[35]</ref>.</p><p>Proposition 4.1 Suppose that t( x, y) and s( x, y) are n-dimensional term vectors where x and y are vectors of distinct variables such that the dimension of x is n.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">If A is a preiteration algebra then</head><formula xml:id="formula_22">A |= ∀ x, y( t = s) ⇒ ∀ y(µ x. t = µ x. s).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">If A is a strong preiteration algebra then</head><formula xml:id="formula_23">A |= ∀ y(∀ x( t = s) ⇒ ∀ y(µ x. t = µ x. s)).</formula><p>Theorem 4.2 <ref type="bibr" target="#b6">[7]</ref> If A is a Conway algebra, then the "vector forms" of ( <ref type="formula">3</ref>) and ( <ref type="formula" target="#formula_21">4</ref>) hold in A: For all term vectors t( x, y, z), where t, x and y have the same dimension,</p><formula xml:id="formula_24">A |= µ x. t[ x/ y] = µ x.µ y. t. (<label>5</label></formula><formula xml:id="formula_25">)</formula><p>Moreover, for all term vectors t( y, z) and s( x, z), where the dimension of t agrees with that of x and the dimension of s with that of y,</p><formula xml:id="formula_26">A |= µ x. t[ s/ y] = t[µ x. s[ t/ x]/ y]. (<label>6</label></formula><formula xml:id="formula_27">)</formula><p>Corollary 4.3 For each term vector t and vector of distinct variables x of the same dimension, the equation</p><formula xml:id="formula_28">µ x. t = t[µ x. t/ x] (<label>7</label></formula><formula xml:id="formula_29">)</formula><p>holds in all Conway algebras. Equation ( <ref type="formula" target="#formula_28">7</ref>) is the vector form of the fixed point equation <ref type="bibr" target="#b0">(1)</ref>. Since by Theorem 4.2, the vector forms of ( <ref type="formula">3</ref>) and ( <ref type="formula" target="#formula_21">4</ref>) hold in any Conway Σ-algebra, so does the vector form of any other equation that holds in these algebras.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 4.4 If an equation holds in all Conway</head><p>Σ-algebras, then so does its vector form.</p><p>For a full characterization of the equations of Conway Σ-algebras we refer to <ref type="bibr" target="#b3">[4]</ref>. It is shown in op. cit. that when Σ contains a symbol of rank &gt; 1 then it is PSPACE-complete to decide whether an equation holds in all Conway Σ-algebras, whereas the problem easily lies in P if each symbol in Σ has rank at most 1.</p><p>We now give a characterization of Conway algebras based on the vector form of the fixed point identity.</p><p>Theorem 4. <ref type="bibr" target="#b4">5</ref> The following three conditions are equivalent for a preiteration Σ-algebra A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1.</head><p>A is a Conway Σ-algebra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">The vector form of the fixed point equation holds in A.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">A satisfies the fixed point equation for binary vectors.</head><p>Below we will abbreviate the term µx.x as ⊥. Suppose that X and Y are finite disjoint sets of variables. We call a term t over Σ primitive with respect to (X, Y ) if it is either ⊥, or a variable in Y , or a term σ(x 1 , . . . , x k ), where σ ∈ Σ k and the not necessarily different variables x 1 , . . . , x k are all in X. The following fact is a version of Salomaa's equational characterization of regular languages <ref type="bibr" target="#b35">[36]</ref>, see also <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b29">30]</ref>. In <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b6">7]</ref>, the result is derived only from the equational axioms of Conway algebras.</p><p>Theorem 4.6 Normal forms <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b6">7]</ref> For each term t( y) in the free variables y = (y 1 , . . . , y m ) there exists an integer n ≥ 1, a vector x = (x 1 , . . . , x n ) of fresh variables and terms s 1 , . . . , s n , all primitive with respect to (X, Y ), where X = {x 1 , . . . , x n } and Y = {y 1 , . . . , y m }, such that equation</p><formula xml:id="formula_30">t = (µ(x 1 , . . . , x n ).(s 1 , . . . , s n )) 1</formula><p>holds in all Conway algebras, where the right side of the equation is the first component of the term vector µ(x 1 , . . . , x n ).(s 1 , . . . , s n ).</p><p>The following result is essentially due to Bekić and De Bakker and Scott.</p><p>Theorem 4.7 <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref> Suppose that A is an ordered preiteration Σ-algebra satisfying the fixed point equation ( <ref type="formula">1</ref>) and the Park induction principle <ref type="bibr" target="#b1">(2)</ref>. Then A is a strong preiteration algebra. Moreover, the vector form of the fixed point equation <ref type="bibr" target="#b6">(7)</ref> and the vector form of the Park induction rule <ref type="bibr" target="#b7">(8)</ref> </p><formula xml:id="formula_31">hold in A: t[ y/ x] ≤ y ⇒ µ x. t ≤ y, (<label>8</label></formula><formula xml:id="formula_32">)</formula><p>for all term vectors t over Σ of dimension n, and all vectors of distinct variables x, y of dimension n.</p><p>We call such algebras Park Σ-algebras. Morphisms of Park Σ-algebras are order preserving preiteration algebra morphisms. Any such morphism is strict.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remark 4.8 Each ordered preiteration Σ-algebra satisfying the fixed point equation and the weak version of the Park induction rule satisfies the vector forms of these axioms.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Iteration algebras</head><p>In his book <ref type="bibr" target="#b9">[10]</ref>, John H. Conway associated an equation of regular sets with every finite group and conjectured that a finite set of classical identities together with the equations associated with the finite (simple) groups form a complete set of equations for the regular sets. Conway's equations can be generalized.</p><p>Suppose that G is a finite group with elements {g 1 , . . . , g n }, and let t( x, y) denote a term over some signature Σ, where x = (x 1 , . . . , x n ) and y = (y 1 , . . . , y m ), so that the dimension of x agrees with the order of G.</p><formula xml:id="formula_33">For each i ∈ [n], let π i : [n] → [n] denote the function j → k iff g i • g j = g k . Define s i = t[(x π i (1) , . . . , x π i (n) )/(x 1 , . . . , x n )], i ∈ [n].</formula><p>Let x denote a fresh variable. The group-equation or group-identity <ref type="bibr" target="#b16">[17]</ref> associated with G is:</p><formula xml:id="formula_34">(µ(x 1 , . . . , x n ).(s 1 , . . . , s n )) 1 = µx.t[(x, . . . , x)/(x 1 , . . . , x n )].<label>(9)</label></formula><p>(The definition of the equation associated with G also depends on the ordering of the group elements g 1 , . . . , g n . However, with respect to the Conway identities, different orderings result in equivalent equations.) A (strong) iteration Σ-algebra is a (strong) Conway Σ-algebra satisfying the group-equations associated with the finite groups. Strong iteration Σ-algebras and iteration Σ-algebras satisfy the same equations. A morphism of (strong) iteration algebras is a preiteration algebra morphism. Theorem 5.1 <ref type="bibr" target="#b16">[17]</ref> If an equation holds in iteration Σ-algebras, then so does its vector form. Theorem 5.2 <ref type="bibr" target="#b16">[17]</ref> An equation holds in all iteration Σ-algebras iff it holds in all continuous Σ-algebras.</p><p>For the axiomatization of iteration algebras based on variants of the Conway identities and the commutative identity, the above result was established in <ref type="bibr" target="#b13">[14]</ref>. See <ref type="bibr" target="#b6">[7]</ref> for a thorough treatment of the earlier results.</p><p>Suppose that A is a set disjoint from Σ and does not contain the special symbol ⊥. A partial (Σ, A)-tree <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b11">12]</ref> is an at most countable, ordered rooted tree whose nodes are labeled by the elements of Σ∪A∪{⊥} such that nodes labeled in Σ n have n descendants and all the nodes labeled in A ∪ {⊥} are leaves. Say that T ≤ T , for trees T and T , if T can be constructed from T by attaching non-uniformly (Σ, A)-trees to the leaves of T labeled ⊥. Equipped with this partial order, the set (Σ, A)T of (Σ, A)-trees is a cpo whose bottom element is the one-node tree labeled ⊥. Moreover, equipped with the usual Σ-operations, (Σ, A)T is a continuous Σ-algebra, in fact, the free continuous Σ-algebra on A.</p><p>Theorem 5.3 <ref type="bibr" target="#b21">[22]</ref> For each set A, the algebra (Σ, A)T is freely generated by A in the class of all continuous Σ-algebras.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 5.4 An equation holds in all iteration Σ-algebras iff it holds in continuous Σ-algebras (Σ, A)T.</head><p>Call a tree (Σ, A) total if it has no leaves labeled ⊥. Moreover, call a tree (Σ, A)-tree regular if it has a finite number of (nonisomorphic) subtrees. Note that every finite tree is regular. It turns out that the free iteration Σ-algebras may also be represented by trees. Theorem 5.5 <ref type="bibr" target="#b13">[14]</ref> The free iteration Σ-algebra on a set A can be represented as the algebra (Σ, A)R of regular (Σ, A)-trees.</p><p>Remark 5.6 The algebra of regular (Σ, A)-trees is also free in the class of regular Σ-algebras <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b36">37]</ref>, and the algebra of total regular trees is free in the class of iterative Σ-algebras <ref type="bibr" target="#b11">[12]</ref>.</p><p>Corollary 5.7 <ref type="bibr" target="#b10">[11]</ref> There is a polynomial time algorithm to decide for an equation between terms over Σ whether it holds in all iteration Σalgebras.</p><p>For later use we recall: Theorem 5.8 <ref type="bibr" target="#b14">[15]</ref> Every Park Σ-algebra, or ordered iteration algebra satisfying the fixed point equation and the weak version of the Park induction rule, is an iteration algebra. An equation between terms over Σ holds in all Park Σ-algebras iff it holds in all iteration Σ-algebras.</p><p>Corollary 5.9 For each set A, the algebra of regular trees (Σ, A)R, equipped with the partial order inherited from (Σ, A)R, is freely generated by A in the class of all Park Σ-algebras. Theorem 5.8 is a hidden completeness result. It follows that an equation between µ-terms over Σ holds in all continuous Σ-algebras iff it can be derived from (instances of) the fixed point equation using the usual rules of (in)equational logic and a non-standard rule corresponding to the weak version of the Park induction principle. This logic was proposed in <ref type="bibr" target="#b30">[31]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">A conjecture</head><p>In addition to the completeness of the group-identities and the classical identities for the equational theory of the regular sets, Conway <ref type="bibr" target="#b9">[10]</ref> conjectured that the system consisting of the classical identities and an equation derived for each n ≥ 3 from the n-state automaton with an input letter inducing a transposition and a letter inducing a cyclic permutation is also complete. As a consequence of the conjecture, it would follow that the regular identities in at most three variables form a complete system, whereas no upper bound on the number of variables is known to date.</p><p>In this section, we formulate a related conjecture for continuous Σalgebras (or equivalently, by Theorem 5.2, for iteration Σ-algebras).</p><p>For each n ≥ 3 and term t over Σ, consider the equation</p><formula xml:id="formula_35">µz.t[(z, z)/(x, y)] = µx.t[(t[t /y], t[t /y])/(x, y)], (<label>10</label></formula><formula xml:id="formula_36">)</formula><p>where t is the term (µy. Conjecture 5.10 A preiteration Σ-algebra is an iteration Σ-algebra iff it is a Conway Σ-algebra and satisfies the equation <ref type="bibr" target="#b9">(10)</ref>, for each n ≥ 3.</p><p>If this conjecture holds, then so does Conway's.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Algebras with a semilattice structure</head><p>We will consider preiteration Σ-algebras equipped with a commutative idempotent additive structure. These are in fact preiteration ∆-algebras for the signature ∆ = Σ + that results by adding the binary symbol + to ∆. Such a preiteration algebra is called a semilattice preiteration Σalgebra if it satisfies the equations:</p><formula xml:id="formula_37">x + (y + z) = (x + y) + z (11) x + y = y + x (12) x + x = x (13) x + ⊥ = x. (<label>14</label></formula><formula xml:id="formula_38">)</formula><p>Thus, semilattice preiteration Σ-algebras have the structure of a commutative idempotent monoid with neutral element the constant denoted by the term ⊥, i.e., µx.x. Each such algebra A comes with the semilattice order defined by a ≤ b iff a + b = b. Note that ⊥ A is least with respect to this order.</p><p>A semilattice Σ-algebra is called continuous if, equipped with the semilattice order, it is a continuous Σ-algebra. Note that if A is a continuous semilattice algebra then A is in fact a complete semilattice, i.e., it has all suprema. Moreover, since the + operation is automatically continuous, A is a continuous ∆-algebra for the enlarged signature ∆ = Σ + . Hence, by Theorem 5.2, any continuous semilattice Σ-algebra is a strong iteration ∆-algebra and satisfies the Park induction rule, i.e., it is a Park ∆-algebra. We call such algebras semilattice Park algebras. In a similar fashion, we define a semilattice Conway Σ-algebra (semilattice iteration Σ-algebra, respectively) to be a semilattice preiteration Σ-algebra which is a Conway ∆-algebra (iteration ∆-algebra, respectively). Morphisms of continuous semilattice Σ-algebras are continuous ∆-algebra morphisms. Morphisms of semilattice preiteration Σ-algebras, semilattice Conway algebras and semilattice iteration algebras and semilattice Park Σ-algebras are just preiteration ∆-algebra morphisms. Note that morphisms are automatically monotonic.</p><p>We end this section with a normal form theorem that applies to all semilattice Conway Σ-algebras, and thus to continuous semilattice Σalgebras, semilattice Park Σ-algebras and semilattice iteration Σ-algebras. We will return to semilattice iteration Σ-algebras, and in particular to continuous semilattice Σ-algebras in Section 8.</p><p>A simple term over Σ + is a term that is the finite sum of different primitive terms over Σ excluding ⊥. More precisely, given a pair (X, Y ) of disjoint sets of variables, a simple term over (X, Y ) is a finite sum of pairwise different terms of two types: Terms σ(x 1 , . . . , x k ), where σ is in Σ and each x i is in X, and terms y, for y a variable in Y . By assumption, the empty sum is ⊥, so that the term ⊥ itself is simple. The next result is a version of Milner's equational characterization of regular processes, cf. <ref type="bibr" target="#b29">[30]</ref>. Theorem 6.1 <ref type="bibr" target="#b17">[18]</ref> For each term t over Σ + with free variables in Y = {y 1 , . . . , y p } there exist a set X = {x 1 , . . . , x n } and simple terms t 1 , . . . , t n over (X, Y ) such that t = (µ(x 1 , . . . , x n ).(t 1 , . . . , t n )) 1 holds in all additive Conway Σ-algebras satisfying µx.x + y = y.</p><p>(</p><formula xml:id="formula_39">)<label>15</label></formula><p>Remark 6.2 In Conway Σ + -algebras, ( <ref type="formula" target="#formula_39">15</ref>) is a strengthened form of idempotence. In fact, <ref type="bibr" target="#b12">(13)</ref> follows from the fixed point equation and <ref type="bibr" target="#b14">(15)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Regular languages and tree languages</head><p>Suppose that A is a Σ-algebra. Then we may turn P(A), the power set of A into a ∆-algebra, where ∆ = Σ + . For each σ ∈ Σ n and B 1 , . . . , B n ∈ P (A), we define</p><formula xml:id="formula_40">σ(B 1 , . . . , B n ) = {σ(b 1 , . . . , b n ) : b i ∈ B i , i ∈ [n]}.</formula><p>Moreover, we define</p><formula xml:id="formula_41">B 1 + B 2 = B 1 ∪ B 2</formula><p>, for all B 1 , B 2 ∈ P(A). Equipped with these operations, P(A) is a continuous semilattice Σ-algebra, hence a (strong) semilattice iteration Σ-algebra and a semilattice Park Σ-algebra. Note that when A is the free Σ-algebra (Σ, B)FT of finite (complete) (Σ, B)-trees, then P(A) is the algebra of all (finite total) (Σ, B)-tree languages that we denote by (Σ, B)TL.</p><p>Theorem 7.1 <ref type="bibr" target="#b12">[13]</ref> For each set A, (Σ, A)TL is freely generated by A in the class of all continuous semilattice Σ-algebras satisfying the following equations for all σ ∈ Σ n and i ∈ [n], n &gt; 0:</p><formula xml:id="formula_42">σ(x 1 + y 1 , . . . , x n + y n ) = z i ∈{x i ,y i } σ(z 1 , . . . , z n ) (16) σ(x 1 , . . . , ⊥, . . . , x n ) = ⊥. (<label>17</label></formula><formula xml:id="formula_43">)</formula><p>On the left-hand side of <ref type="bibr" target="#b16">(17)</ref>, the symbol ⊥ is on the ith position. Suppose now that Σ is a unary signature, i.e., each symbol in Σ has rank one. Then a finite total tree in (Σ, A)FT may be represented as a word in Σ * A. Hence (Σ, A)TL is just the algebra of languages in Σ * A equipped with the prefixing operations L → σL, σ ∈ Σ, and the operation of set union as its sum operation. We let (Σ * A)L denote this continuous semilattice Σ-algebra. By our general results, (Σ * A)L is a (strong) semilattice iteration Σ-algebra and a semilattice Park Σalgebra. The regular sets in (Σ * A)L determine a subalgebra, denoted (Σ * A)RL, which is also a strong semilattice iteration Σ-algebra and a semilattice Park Σ-algebra. The following result is a reformulation of Krob's theorem <ref type="bibr" target="#b25">[26]</ref> that confirms a conjecture of Conway <ref type="bibr" target="#b9">[10]</ref>. In <ref type="bibr" target="#b16">[17]</ref>, Krob's result is derived from Theorem 5.2. Theorem 7.2 <ref type="bibr" target="#b25">[26]</ref> For each set A and unary signature Σ, the algebra (Σ * A)RL is freely generated by A in the class of all (strong) semilattice iteration Σ-algebras satisfying <ref type="bibr" target="#b14">(15)</ref> and</p><formula xml:id="formula_44">t[y + z/x] = t[y/x] + t[z/x] (18) t[0/x] = 0, (<label>19</label></formula><formula xml:id="formula_45">)</formula><p>for all terms t = t[x] over Σ + containing at most the free variable x.</p><p>Since each semilattice Park Σ-algebra is an iteration Σ-algebra (Theorem 5.8), and since (Σ * A)RL is a semilattice Park Σ-algebra, by Krob's theorem we have Corollary 7.3 For each set A and each unary signature Σ, the algebra (Σ * A)RL is freely generated by A in the class of all semilattice Park Σalgebras satisfying <ref type="bibr" target="#b17">(18)</ref> and <ref type="bibr" target="#b18">(19)</ref>.</p><p>This corollary may be viewed as a strengthened version of Kozen's axiomatization <ref type="bibr" target="#b23">[24]</ref> of the equational theory of the regular sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 7.4</head><p>The following conditions are equivalent for an equation t = t between µ-terms over Σ + , where Σ is a unary signature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">The equation holds in all continuous semilattice Σ-algebras equipped</head><p>with operations satisfying ( <ref type="formula">16</ref>) and ( <ref type="formula" target="#formula_42">17</ref>).</p><p>2. The equation holds in all algebras (Σ * A)L of languages, or (Σ * A)RL of regular languages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The equation holds in all semilattice</head><p>Park Σ-algebras satisfying ( <ref type="formula">16</ref>) and <ref type="bibr" target="#b16">(17)</ref>.</p><p>4. The equation holds in all (strong) semilattice iteration Σ-algebras satisfying <ref type="bibr" target="#b17">(18)</ref>, <ref type="bibr" target="#b18">(19)</ref> and <ref type="bibr" target="#b14">(15)</ref>.</p><p>We do not know how Theorem 7.2 carries over to arbitrary signatures. Nevertheless the following result holds for all signatures containing symbols of arbitrary rank. For regular tree languages we refer to <ref type="bibr" target="#b19">[20]</ref>.</p><p>Theorem 7.5 <ref type="bibr" target="#b15">[16]</ref> For each signature Σ and set A, the algebra (Σ, A)RL of regular tree languages is freely generated by the set A in the class of all semilattice Park Σ-algebras satisfying ( <ref type="formula">16</ref>) and <ref type="bibr" target="#b16">(17)</ref>.</p><p>Note that since distributivity is required here only for basic symbols, this result is stronger for unary signatures than Corollary 7.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 7.6</head><p>The following conditions are equivalent for an equation t = t between µ-terms over Σ + .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">The equation t = t holds in all continuous semilattice Σ-algebras</head><p>equipped with operations satisfying ( <ref type="formula">16</ref>) and <ref type="bibr" target="#b16">(17)</ref>.</p><p>2. The equation t = t holds in all complex algebras P(A) derived from Σ-algebras.</p><p>3. The equation t = t holds in all algebras (Σ, A)TL of languages, or (Σ, A)RL of regular tree languages.</p><p>4. The equation t = t holds in all semilattice Park Σ-algebras satisfying ( <ref type="formula">16</ref>) and ( <ref type="formula" target="#formula_42">17</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Synchronization trees</head><p>In this section, we consider the class of all continuous semilattice Σalgebras, where Σ is any signature. The basic question we seek answer to is to provide a basis of identities for these structures. We refer to <ref type="bibr" target="#b29">[30]</ref> and in particular <ref type="bibr" target="#b17">[18]</ref> for the definition of (Σ, A)-labeled synchronization trees and the definition of simulation, originally introduced in <ref type="bibr" target="#b33">[34]</ref>.</p><p>Theorem 8.1 <ref type="bibr" target="#b17">[18]</ref> For each signature Σ and set A, the algebra (Σ, A)RST of regular synchronization trees over A is freely generated by A in the class of all semilattice iteration Σ + -algebras satisfying <ref type="bibr" target="#b14">(15)</ref>  for all terms t over Σ + and variables x, y.</p><p>Note that the meaning of ( <ref type="formula">20</ref>) is that each function induced by any term t is monotonic, while (21) can be rephrased as an implication between equations: ∀x, y(t ≤ t ) ⇒ ∀ y(t ≤ t ), where t(x, y) and t (x, y) are any terms over Σ + .</p><p>Since (Σ, A)RST can be embedded in a continuous semilattice Σalgebra, as shown in <ref type="bibr" target="#b17">[18]</ref>, we have: Theorem 8.2 <ref type="bibr" target="#b17">[18]</ref> The following conditions are equivalent for an equation t = t between terms over Σ + :</p><p>1. t = t holds in all continuous semilattice Σ-algebras.</p><p>2. t = t holds in all semilattice Park Σ-algebras.</p><p>3. t = t holds in all iteration semilattice Σ-algebras satisfying <ref type="bibr" target="#b14">(15)</ref>, <ref type="bibr" target="#b19">(20)</ref> and <ref type="bibr" target="#b20">(21)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">t = t holds in all algebras of regular synchronization trees modulo simulation.</head><p>It is natural to ask what happens if we drop ( <ref type="formula">20</ref>) and ( <ref type="formula">21</ref>) in Theorem 8.1. The answer to this question was given in <ref type="bibr" target="#b7">[8]</ref>: The free algebras can be described as bisimulation equivalence classes of regular synchronization trees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Conclusion</head><p>Several models studied in computer science have some facility of recursion, usually modeled by fixed points. Continuous algebras are those cpo's equipped with a Σ-algebra structure whose operations are continuous, giving rise to recursive definitions by least fixed points. Unfortunately, for µ-terms, the equational theory of the class of models studied is not always recursive, or recursively enumerable. For example, the equational theory of languages equipped with sum (set union) and concatenation as basic operations is not r.e., due to the fact that the equivalence of context-free grammars is not semidecidable. However, the theory of all continuous algebras is decidable, and in fact lies in P, and several equational theories are finitely axiomatizable over it. Moreover, the equations of fixed points in continuous algebras are quite general, and can thus be taken as a basis for the study of the respective equational theories. The relative axiomatization results presented here and elsewhere also provide a classification of the models by their logical properties. We have seen such examples in Sections 7 and 8. It would be of great importance to explore the boundary between axiomatizability and nonaxiomatizability, and decidability and undecidability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Acknowledgment</head><p>This paper was prepared during the author's visit at BRICS (Basic Research in Computer Science, Centre of the Danish Research Foundation) and the Department of Computer Science of the University of Aalborg. He would like to thank the members of the Department, and in particular Anna Ingólfsdóttir, Luca Aceto and Kim G. Larsen, for their hospitality.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>1 .t 1 ). When n &gt; 1, we let µ x. t = (µ(x 1 , . . . , x n-1 ).(t 1 , . . . , t n-1 )[µx n .t n /x n ], µx</figDesc><table /><note><p>n .t n [µ(x 1 , . . . , x n-1 ).(t 1 , . . . , t n-1 )/(x 1 , . . . , x n-1 )]).</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>A set D ⊆ A is called directed if it is not empty and each pair of elements in D has an upper bound in D.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>An equation holds in a "variety" of preiteration algebras iff it holds in the strong preiteration algebras belonging to that variety. See<ref type="bibr" target="#b6">[7]</ref>.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>† Partially supported by grant No. T22423 from the National Foundation of Hungary for Scientific Research and the Austrian-Hungarian Cooperative Research grant OMFB A-4/99.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">L</forename><surname>Aceto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ingólfsdóttir</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>In preparation</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A theory of programs</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>De Bakker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Scott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Seminar</title>
		<imprint>
			<date type="published" when="1969">1969</date>
			<pubPlace>Vienna</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Definable operations in general algebra</title>
		<author>
			<persName><forename type="first">H</forename><surname>Bekić</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969">1969</date>
			<pubPlace>Vienna</pubPlace>
		</imprint>
		<respStmt>
			<orgName>IBM Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Semantics of flowchart programs and the free Conway theories</title>
		<author>
			<persName><forename type="first">L</forename><surname>Bernátsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RAIRO Inform. Théor. Appl</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="35" to="78" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Floyd-Hoare logic in iteration theories</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Bloom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="887" to="934" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Program correctness and matricial iteration theories</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Bloom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Mathematical Foundations of Programming Semantics&apos;91</title>
		<title level="s">LNCS</title>
		<meeting>Mathematical Foundations of Programming Semantics&apos;91</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1992">1992</date>
			<biblScope unit="volume">598</biblScope>
			<biblScope unit="page" from="457" to="475" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Bloom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
	<note>Iteration Theories</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Iteration theories of synchronization trees</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Bloom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Taubner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. and Comput</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="1" to="55" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Equational elements in additive algebras</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bozapalidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1" to="33" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Regular Algebra and Finite Machines</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Conway</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1971">1971</date>
			<publisher>Chapman and Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Algorithmes d&apos;équivalence et de réduction á des expressions minimales dans une classe d&apos;équations récursives simples</title>
		<author>
			<persName><forename type="first">B</forename><surname>Courcelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kahn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vuillemin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICALP</title>
		<meeting>ICALP<address><addrLine>Saarbrücken</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="200" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On the algebraic structure of rooted trees</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Elgot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Bloom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tindell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. System Sci</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="362" to="399" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">IO and OI</title>
		<author>
			<persName><forename type="first">J</forename><surname>Engelfriet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Schmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">I. J. Comput. System Sci</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="328" to="353" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Identities in iterative and rational algebraic theories</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Linguist. Comput. Lang</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="183" to="207" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Completeness of Park induction</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">177</biblScope>
			<biblScope unit="page" from="217" to="283" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Axiomatizing the equational theory of regular tree languages</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. STACS 98</title>
		<meeting>STACS 98<address><addrLine>Paris</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1373</biblScope>
			<biblScope unit="page" from="455" to="466" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Group axioms for iteration</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. and Comput</title>
		<imprint>
			<biblScope unit="volume">148</biblScope>
			<biblScope unit="page" from="131" to="180" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Axiomatizing the least fixed point operation and binary supremum</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CSL 2000</title>
		<meeting>CSL 2000</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="volume">1862</biblScope>
			<biblScope unit="page" from="302" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Z</forename><surname>Ésik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Leiß</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>In preparation</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">F</forename><surname>Gécseg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Steinby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Tree Automata. Akadémiai Kiadó. Budapest</title>
		<imprint>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Algebraic theory of automata</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ginzburg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1968">1968</date>
			<publisher>Academic Press</publisher>
			<pubPlace>New York-London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Initial algebra semantics and continuous algebras</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Goguen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Thatcher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Wright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="68" to="95" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Parikh&apos;s theorem in commutative Kleene algebra</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Hopkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kozen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Logic in Computer Science (LICS&apos;99)</title>
		<meeting>IEEE Conf. Logic in Computer Science (LICS&apos;99)</meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1999-07">July 1999</date>
			<biblScope unit="page" from="394" to="401" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A completeness theorem for Kleene algebras and the algebra of regular events</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kozen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1991 IEEE Symposium on Logic in Computer Science (Amsterdam, 1991), and Inform. and Comput</title>
		<meeting>1991 IEEE Symposium on Logic in Computer Science (Amsterdam, 1991), and Inform. and Comput</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="page" from="366" to="390" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On Hoare logic and Kleene algebra with tests</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kozen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Logic in Computer Science (LICS&apos;99)</title>
		<meeting>IEEE Conf. Logic in Computer Science (LICS&apos;99)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999-07">July 1999. 2000</date>
			<biblScope unit="page" from="60" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Complete systems of B-rational identities</title>
		<author>
			<persName><forename type="first">D</forename><surname>Krob</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="207" to="343" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A characterization of Parikh&apos;s theorem and semilinear sets by commutative semigroups with length</title>
		<author>
			<persName><forename type="first">I</forename><surname>Takanami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Honda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronics and Communications in Japan</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="179" to="184" />
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The Kleene and the Parikh theorem in complete semirings</title>
		<author>
			<persName><forename type="first">W</forename><surname>Kuich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICALP &apos;97</title>
		<meeting>ICALP &apos;97</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="volume">267</biblScope>
			<biblScope unit="page" from="212" to="225" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Gaussian elimination and a characterization of algebraic power series</title>
		<author>
			<persName><forename type="first">W</forename><surname>Kuich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Mathematical Foundations of Computer Science</title>
		<meeting>Mathematical Foundations of Computer Science<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998. 1998</date>
			<biblScope unit="volume">1450</biblScope>
			<biblScope unit="page" from="512" to="521" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A complete inference system for a class of regular behaviors</title>
		<author>
			<persName><forename type="first">R</forename><surname>Milner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. System Sci</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="439" to="466" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Equational µ-calculus</title>
		<author>
			<persName><forename type="first">D</forename><surname>Niwinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computation Theory (Zaborw, 1984)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1985">1985</date>
			<biblScope unit="volume">208</biblScope>
			<biblScope unit="page" from="169" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">On context-free languages</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Parikh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="570" to="581" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Fixpoint induction and proofs of program properties</title>
		<author>
			<persName><forename type="first">D</forename><surname>Park</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="59" to="78" />
			<date type="published" when="1970">1970</date>
			<publisher>American Elsevier</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Concurrency and automata on infinite sequences</title>
		<author>
			<persName><forename type="first">D</forename><surname>Park</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. GI Conf</title>
		<meeting>GI Conf</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1981">1981</date>
			<biblScope unit="volume">104</biblScope>
			<biblScope unit="page" from="167" to="183" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Commutative regular equations and Parikh&apos;s theorem</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Pilling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. London Math. Soc</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="663" to="666" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Two complete axiom systems for the algebra of regular events</title>
		<author>
			<persName><forename type="first">A</forename><surname>Salomaa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="158" to="169" />
			<date type="published" when="1966">1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Fixed-points and algebras with infinitely long expressions. I. Regular algebras</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tiuryn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fund. Inform</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="103" to="127" />
			<date type="published" when="1978">1978/79</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">The Equational Theory of Fixed Points with Applications to Generalized Language Theory</title>
		<idno>RS-01-22 Zoltán Ésik</idno>
	</analytic>
	<monogr>
		<title level="m">th International Conference, Developments in Language Theory DLT &apos;01 Proceedings</title>
		<imprint>
			<date type="published" when="2001-06-21">June 2001. 21. 2001</date>
		</imprint>
	</monogr>
	<note>Recent BRICS Report Series Publications. To appear in Kuich</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Extended abstracts of parts of this paper have appeared in Honsell and Miculan</title>
		<author>
			<persName><forename type="first">Luca</forename><surname>Aceto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zoltán</forename><surname>Ésik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anna</forename><surname>Ingólfsdóttir</surname></persName>
		</author>
		<idno>MAX- PLUS &apos;01</idno>
	</analytic>
	<monogr>
		<title level="m">Foundations of Software Science and Computation Structures, FoSSaCS &apos;01 Proceedings, LNCS 2030</title>
		<editor>
			<persName><forename type="first">Loiseau</forename><surname>Gaubert</surname></persName>
		</editor>
		<imprint>
			<publisher>IFAC Publications</publisher>
			<date type="published" when="2000">June 2001. 2000. 2001</date>
			<biblScope unit="page" from="42" to="56" />
		</imprint>
		<respStmt>
			<orgName>Theoretical Computer Science, and Optimization</orgName>
		</respStmt>
	</monogr>
	<note>IFAC. International Federation of Automatic Control</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">A Temporal Concurrent Constraint Programming Calculus</title>
		<author>
			<persName><forename type="first">Catuscia</forename><surname>Palamidessi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Frank</forename><forename type="middle">D</forename><surname>Valencia</surname></persName>
		</author>
		<idno>RS-01-20</idno>
		<imprint>
			<date type="published" when="2001-06">June 2001</date>
			<biblScope unit="page">31</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">On the Power of Labels in Transition Systems</title>
		<idno>RS-01-19 Jiří Srba</idno>
	</analytic>
	<monogr>
		<title level="m">RS-01-18 Katalin M. Hangos, Zsolt Tuza, and Anders Yeo. Some Complexity Problems on Single Input Double Output Controllers</title>
		<imprint>
			<date type="published" when="2001-06">June 2001. 2001</date>
			<biblScope unit="page">27</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Language-Based Caching of Dynamically Generated HTML</title>
		<author>
			<persName><forename type="first">Claus</forename><surname>Brabrand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anders</forename><surname>Møller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steffan</forename><surname>Olesen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">I</forename><surname>Schwartzbach</surname></persName>
		</author>
		<idno>RS-01-17</idno>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
			<biblScope unit="volume">18</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Normalization by Evaluation with Typed Abstract Syntax</title>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Danvy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Morten</forename><surname>Rhiger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kristoffer</forename><forename type="middle">H</forename><surname>Rose</surname></persName>
		</author>
		<idno>RS-01-16</idno>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Journal of Functional Programming</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">A Calculus of Circular Proofs and its Categorical Semantics</title>
		<idno>RS-01-15 Luigi Santocanale</idno>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
			<biblScope unit="volume">30</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Effective Bounds on Strong Unicity in L 1 -Approximation</title>
		<author>
			<persName><forename type="first">Ulrich</forename><surname>Kohlenbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paulo</forename><forename type="middle">B</forename><surname>Oliva</surname></persName>
		</author>
		<idno>RS-01-14</idno>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
			<biblScope unit="volume">38</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Events in Security Protocols</title>
		<idno>RS-01-13</idno>
	</analytic>
	<monogr>
		<title level="m">Federico Crazzolara and Glynn Winskel</title>
		<imprint>
			<date type="published" when="2001-04">April 2001</date>
			<biblScope unit="volume">30</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
