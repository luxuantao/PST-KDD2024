<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Abacus Turn Model for Time/Space-Efficient Reconfigurable Routing</title>
				<funder ref="#_eDPdKnB">
					<orgName type="full">National Basic Research Program of China</orgName>
				</funder>
				<funder ref="#_AJPndgG #_nbeCwHJ">
					<orgName type="full">unknown</orgName>
				</funder>
				<funder ref="#_aEDmEnJ">
					<orgName type="full">Co-Building Program of Beijing Municipal Education Commission</orgName>
				</funder>
				<funder ref="#_GEBaSbs">
					<orgName type="full">National Natural Science Foundation of China</orgName>
					<orgName type="abbreviated">NSFC</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Binzhang</forename><surname>Fu</surname></persName>
							<email>fubinzhang@ict.ac.cn</email>
						</author>
						<author>
							<persName><forename type="first">Yinhe</forename><surname>Han</surname></persName>
							<email>yinhes@ict.ac.cn</email>
						</author>
						<author>
							<persName><forename type="first">Jun</forename><surname>Ma</surname></persName>
							<email>majun@ict.ac.cn</email>
						</author>
						<author>
							<persName><forename type="first">Huawei</forename><surname>Li</surname></persName>
							<email>lihuawei@ict.ac.cn</email>
						</author>
						<author>
							<persName><forename type="first">Xiaowei</forename><surname>Li</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Institute of Computing Technology</orgName>
								<orgName type="laboratory">Key Laboratory of Computer System and Architecture</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Graduate University of Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">ISCA&apos;11</orgName>
								<address>
									<addrLine>June 4-8</addrLine>
									<postCode>2011</postCode>
									<settlement>San Jose</settlement>
									<region>California</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">An Abacus Turn Model for Time/Space-Efficient Reconfigurable Routing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T09:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.1.2 [Computer Systems Organization]: Interconnection architectures; C.1.4 [Parallel Architectures]: Distributed architectures Algorithms</term>
					<term>Design</term>
					<term>Theory Network-on-Chip (NoC)</term>
					<term>virtual channel (VC)</term>
					<term>wormhole</term>
					<term>turn model</term>
					<term>reconfigurable routing</term>
					<term>deadlock-free routing</term>
					<term>adaptive routing</term>
					<term>load balancing</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Applications' traffic tends to be bursty and the location of hot-spot nodes moves as time goes by. This will significantly aggregate the blocking problem of wormhole-routed Network-on-Chip (NoC). Most of state-of-the-art traffic balancing solutions are based on fully adaptive routing algorithms which may introduce large time/space overhead to routers. Partially adaptive routing algorithms, on the other hand, are time/space efficient, but lack of even or sufficient routing adaptiveness. Reconfigurable routing algorithms could provide on-demand routing adaptiveness for reducing blocking, but most of them are off-line solutions due to the lack of a practical model to dynamically generate deadlockfree routing algorithms.</p><p>In this paper, we propose the abacus-turn-model (AbTM) for designing time/space-efficient reconfigurable wormhole routing algorithms. Unlike the original turn model, AbTM exploits dynamic communication patterns in applications to reduce the routing latency and chip area requirements. We apply forbidden turns dynamically to preserve deadlock-free operations. Our AbTM routing architecture has two distinct advantages: First, the AbTM leads to a new router architecture without adding virtual channels and routing table. This reconfigurable architecture updates the routing path once the communication pattern changes, and always provides full adaptiveness to hot-spot directions to reduce network blocking. Secondly, the reconfiguration scheme has a good scalability because all operations are carried out between neighbors. We demonstrate these advantages through extensive simulation experiments. The experimental results are indeed encouraging and prove its applicability with scalable performance in large-scale NoC applications.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>With today's micro-architecture technology, tens of cores are possible on a single chip multiprocessor (CMP), such as Intel's terascale processor <ref type="bibr" target="#b0">[1]</ref> and Tilera's TILE64 processor <ref type="bibr" target="#b1">[2]</ref>. Recently, Tilera corporation has announced its plan to double the processor cores on a single chip every two years 1 .</p><p>To efficiently interconnect such a high number of elements, Network-on-Chip (NoC) has been widely accepted as the replacement to the shared buses or dedicated wires <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3]</ref>.</p><p>To reduce packet latency and buffer requirement, wormhole routing has become one of main paradigms <ref type="bibr" target="#b3">[4]</ref>. In wormhole routing, packet is divided into fixed-sized flow control digits (flits), including a head flit, several payload flits, and a tail flit. The head flit is responsible for establishing the routing path, which is followed by all succeeding flits and released by the tail flit. Since a packet could move across several nodes simultaneously, very short network delay is incurred. However, when the head flit is blocked, all flits must stay alone the path. This, together with the fact that applications' traffic tends to be very bursty <ref type="bibr" target="#b4">[5]</ref>, significantly increases the possibility of network blocking.</p><p>To reduce network blocking, researchers have turned to the traffic-aware (or congestion-aware) routing algorithms <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b10">11]</ref>, which make routing decisions based on network status. Generally, most of them are based on fully adaptive routing algorithms, so there is always possibility of making selection. However, existing fully adaptive routing algorithms may require a large number of virtual channels (VC) <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref>, or assume a conservative flow control technique <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>.</p><p>The VC is expensive in the NoC scenario, although it was viewed as cheap and abundant <ref type="bibr" target="#b17">[18]</ref>. First, adding VCs often means increasing router latency <ref type="bibr" target="#b18">[19]</ref>, because VA (VC allocation) delay increases with the number of VCs <ref type="bibr" target="#b19">[20]</ref> and at most times VA is the critical stage of virtual-channel routers <ref type="bibr" target="#b18">[19]</ref>. Secondly, adding VCs often means increasing router 1 http://www.tilera.com/about tilera/press-releases/tileradouble-processor-cores-every-two-years area, because buffers are the main contributor to router area and adding VCs often requires more buffers. Algorithms based on Duato's theory <ref type="bibr" target="#b14">[15]</ref> assume a conservative flow control technique that a queue never contains flits belonging to different packets <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>. This helps to reduce the number of VCs, but usually degrades the performance of networks carrying many back-to-back short packets <ref type="bibr" target="#b18">[19]</ref>, e.g., the control packets for cache coherence.</p><p>Compared with fully adaptive routing algorithms, partially adaptive routing algorithms without VCs are more costefficient and can be realized with aggressive flow control techniques <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref>. Glass and Ni <ref type="bibr" target="#b20">[21]</ref> presented the turn model for designing partially adaptive routing algorithms without VCs. The turn model classifies all possible turns into clockwise and counter-clockwise abstract cycles, and prohibits one turn in each cycle to avoid deadlock. Based on the turn model, three partially adaptive routing algorithms: west-first, north-last, and negative-first, were proposed. Unfortunately, the degree of adaptiveness provided by above algorithms is highly uneven. To tackle this problem, Chiu <ref type="bibr" target="#b21">[22]</ref> proposed the odd-even turn model, where EN 2 and ES turns are prohibited in even columns 3 , and NW and SW turns are prohibited in odd columns. Odd-even routing could provide more even adaptiveness, but at the price of that none of long-distance (&gt;2 hops) node pairs are provided with full adaptiveness.</p><p>Both uneven and insufficient routing adaptiveness, of stateof-the-art partially adaptive routing algorithms, may degrade the network performance. Applications' traffic tends to be very bursty <ref type="bibr" target="#b4">[5]</ref>, and the location of hot spots moves as time goes by. To avoid congestions, we expect the packets towards the hot spots are provided with full adaptiveness. Furthermore, since hot spots vary all the time, routing algorithm is expected to be able to provide full adaptiveness to all node pairs. Thus, none of the state-of-the-art partially adaptive routing algorithms could meet applications' requirements.</p><p>Based on above observations, the expected routing algorithm should be:</p><p>1. time/space-efficient, i.e., no VC and routing table requirement, 2. able to provide full adaptiveness to all node pairs. It has been proved that it is impossible to design a deadlockfree fully adaptive routing without VCs for a mesh network <ref type="bibr" target="#b20">[21]</ref>. Thus, the expected routing should be partially adaptive. Partially adaptive routing algorithms cannot provide full adaptiveness to all node pairs at all times, so that the second requirement is reduced to "able to" not "always" provide full adaptiveness to all node pairs. In other words, the routing algorithms could provide full adaptiveness to some node pairs at some time, and to other pairs when the traffic pattern changes.</p><p>To achieve such objectives, the topology <ref type="bibr" target="#b22">[23]</ref> or routing should be reconfigurable 4 . Most of the state-of-the-art reconfigurable routing algorithms are designed for fault-tolerance, 2 An EN turn is made when a packet changes its direction from east to north <ref type="bibr" target="#b20">[21]</ref>. 3 A column is called even (respectively, odd) column if its coordinate in dimension-x is an even (respectively, odd) number <ref type="bibr" target="#b21">[22]</ref>. 4 We should distinguish the reconfigurable routing algorithms from the routing reconfiguration algorithms. The such as <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b28">29]</ref>. The common feature of them is that the reconfiguration is triggered by the detection of faults. If we simply declare the nodes belonging to congestion regions as faulty (temporally), the packets could be routed without entering into the congestion regions. However, according to fault-tolerant routing algorithms <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b28">29]</ref>, faulty nodes, actually those in congestion regions, are not allowed to send and receive packets, otherwise the network maybe deadlock. As we analyzed above, hot-spot nodes are prone to be included into congestion regions, but we cannot forbid sending packets to them.</p><p>Above observations strongly encourage us to design a new reconfigurable routing algorithm, but this is a challenging job due to the deadlock problem. When the hot-spot nodes are detected, there is no existing principle to follow to generate the new deadlock-free routing algorithm. In general, deadlock happens when packets wait for each other in a cycle. To prevent deadlock, the routing algorithms without VCs should keep the channel dependence graph (CDG) acyclic <ref type="bibr" target="#b29">[30]</ref>. So far, most of the cycle elimination algorithms, such as <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b33">34]</ref>, are off-line solutions. On-line dynamically eliminating CDG cycles is almost impossible. Turn models <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref> provide an elegant way to keep the CDG acyclic, but they are all static and cannot be directly used to generate reconfigurable routing.</p><p>To tackle this challenge, we inherit the core idea of turn models that keeping network deadlock free by breaking abstract cycles, and propose a dynamic turn model, namely the Abacus Turn Model (AbTM). AbTM compares a 2D mesh network to an abacus 5 . Imaging each column of a mesh is a wire with two sliding beads: clockwise bead and counterclockwise bead. Actually, the beads represent the crunch points. Routers above and below beads are required to prohibit different turns in a way that CDG cycles cannot be formed. Thus, wherever the beads are located, the network is deadlock free. When the beads move along the column, the turns allowed and prohibited by routers vary as the relative position changes. In fact, turns are resources and reflect the ability of a router to forward packets, i.e., the adaptiveness. If a turn is enabled after the beads movement, corresponding routing adaptiveness is increased. Otherwise, the adaptiveness is reduced. Therefore, when the traffic pattern changes, we could adjust routing adaptiveness by moving beads inside each column. Furthermore, a safe operation is proposed to guarantee each step of bead movement correct, and two reconfigurable routing algorithms based on the AbTM are presented.</p><p>The rest of this paper is organized as follows: Section 2 discusses the proposed AbTM and the related safe operation, bead passing; Section 3 discusses the proposed two reconfigurable routing algorithms; Section 4 proves the claimed characteristic of AbTM-based routing algorithms; Section 5 evaluate the proposed solution; Section 6 discusses possible former, reconfigurable routing algorithm, indicates that the routing algorithm could adjust itself to adapt to network variations, such as the detection of faults or hot-spot nodes. On the other hand, the routing reconfiguration algorithms are proposed to statically <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25]</ref> or dynamically <ref type="bibr" target="#b25">[26]</ref> load a new routing algorithm, which was usually computed offline, to replace the old one without introducing deadlock. 5 Although the proposed AbTM is topology agnostic, we limit our discussion on meshes for simplicity. At the end of this paper, we will show the way to implement AbTM on other topologies.</p><p>extensions; Section 7 distinguishes the proposed technique from related work; finally, Section 8 concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">ABACUS TURN MODEL</head><p>In this section, we will discuss the rules defined by AbT-M and show how do the AbTM-based reconfigurable algorithms reconfigure themselves through an illustrative example. Note that we interchangeably utilize terms, node and router, in the following of this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">The Basic Idea</head><p>According to the turn model proposed by Glass and Ni <ref type="bibr" target="#b20">[21]</ref>, a network is deadlock free if turns do not form any abstract cycle. Chiu <ref type="bibr" target="#b21">[22]</ref> extended the turn model, and proved that a network is deadlock free if the rightmost columns in both clockwise and counter-clockwise abstract cycles never appear. As shown in Figure <ref type="figure" target="#fig_0">1</ref>(a), the clockwise rightmost column consists of two allowed turns, ES and SW, connected by several contiguous NS channels from north to south. To remove the clockwise rightmost column, Chiu <ref type="bibr" target="#b21">[22]</ref> requires the routers in odd columns to disable SW turn as shown in Figure <ref type="figure" target="#fig_0">1</ref>(b), and those in even columns to disable ES turn as shown in Figure <ref type="figure" target="#fig_0">1(c</ref>). The counter-clockwise rightmost column is removed by forbidding NW turn in odd columns and EN turn in even columns.</p><p>However, the odd-even turn model <ref type="bibr" target="#b21">[22]</ref> is static, i.e., nodes cannot change the types of allowed and prohibited turns at runtime. In this paper, we inherit the basic idea of <ref type="bibr" target="#b21">[22]</ref> that "a network is deadlock free if both clockwise and counterclockwise rightmost columns are removed from the network", but we propose a more flexible way to realize it. As shown in Figure <ref type="figure" target="#fig_0">1</ref>(a), to form a clockwise rightmost column, the ES turn should be above an SW turn. Hence, we could remove the clockwise rightmost column by forbidding all ES turns above any SW turn as shown in Figure <ref type="figure" target="#fig_0">1(d)</ref>. Therefore, in each column, there is a node, above which all ES turns are prohibited, and below which all SW turns are prohibited. In this way, no ES turn is above SW turn in any column, thus no clockwise rightmost column can be formed. We name this kind of node as clockwise bead. Similarly, in each column, there is also a counter-clockwise bead, above which NW turn is forbidden and below which EN turn is forbidden. Thus, the counter-clockwise rightmost column is removed. </p><formula xml:id="formula_0">ES SW NS (a) (b) (c) (d)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The Abacus Turn Model</head><p>As shown in Figure <ref type="figure" target="#fig_2">2</ref>(a), a 4?4 mesh is compared to an abacus. Each column is viewed as a wire with two sliding beads: a clockwise bead and a counter-clockwise bead. Clockwise (resp., counter-clockwise) beads, which are separately controlled, are utilized to regulate the distribution of clockwise turns (resp., counter-clockwise turns). In general, AbTM rules are shown in the following:    shows the distribution of prohibited turns that are represented by dashed arrows. According to the AbTM, clockwise (resp., counter-clockwise) bead holder allows all clockwise turns: ES, SW, WN, and NE (resp., all counterclockwise turns: EN, NW, WS, and SE). The router above clockwise (resp., counter-clockwise) bead allows all clockwise (resp., counter-clockwise) turns except the ES (resp., NW) turn. On the other hand, the router below clockwise (resp., counter-clockwise) bead allows all clockwise (resp., counterclockwise) turns except the SW (resp., EN) turn. Turns are distributed in such a way that both clockwise and counterclockwise rightmost columns cannot be formed. Based on AbTM, designing a deadlock-free routing algorithm is reduced to assigning the positions of clockwise and counterclockwise beads inside each column. Once the positions are fixed, the network is deadlock-free. We prove this as the following theorem.</p><p>Theorem 1. The network following abacus turn model is deadlock free.</p><p>Proof. We prove this theorem by contradiction. We assume a network following abacus turn model enters into deadlock, so that there is a turn dependence cycle in the network according to <ref type="bibr" target="#b20">[21]</ref>. Moreover, according to <ref type="bibr" target="#b21">[22]</ref>, there must be a clockwise or counter-clockwise rightmost column in this cycle. Without loss of generality, we assume it is a clockwise rightmost column. Therefore, there must be a node, Na, allowing the ES turn is above a node, N b , allowing the SW turn. According to the abacus turn model, Na should be the clockwise bead or below it, and N b should be the clockwise bead or above it. Therefore, Na cannot be above N b . Contradiction arises.</p><p>For each k ? k mesh, there are two beads in each column and k potential positions for each bead, thus there are k ? k combinations for each column and (k ? k) k combinations for a network. Each combination of beads represents a routing configuration, so that routing reconfiguration is reduced to moving up/down the beads inside each column.</p><p>Example As shown in Figure <ref type="figure" target="#fig_4">3</ref>(a), clockwise beads are located on the bottom row initially. Thus, routers above beads prohibit the ES turn. Meanwhile, a new hot spot, node-5, is detected, and node-6 is expected to send packets to it in a relatively long period. Since there is only one available path between them 6 , this path is highly prone to congestions. Node-6 wants to have more available paths to balance traffic, so it makes a complaint to node-7 about the prohibited ES turn at each time it tries to send packets. Node-7 collects the complaints, and negotiates with the bead holder, node-1. The holder will evaluate the requirements, and determine whether to give up the bead. In this example, node-1 will pass the bead up as shown in Figure <ref type="figure" target="#fig_4">3(b)</ref>. Thus, node-7 could enable the ES turn according to AbTM, and node-6 has two available paths for traffic balancing. In the same way, node-7 will make complaints to node-8. Finally, node-8 also gets the ownership of the clockwise bead as shown in Figure <ref type="figure" target="#fig_4">3(c)</ref>. By now, packets from node-6 to node-5 could utilize all minimal paths to avoid congestion. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Bead Passing</head><p>Moving beads is also a hard job due to the difficulty of keeping the network deadlock free. For example, as shown in Figure <ref type="figure" target="#fig_5">4</ref>(a), node-1 holds the clockwise bead. Thus, it allows the SW turn, and node-4 could utilize it to forward packets to node-0. If the bead is pulled up, as shown in Figure <ref type="figure" target="#fig_5">4</ref>(b), node-1 will prohibit SW turn. If node-4 does not notice that change in time, the packets sent to node-0 could be blocked at node-1. Furthermore, if node-7 enables ES turn when the SW turns, to be disabled by node-1 and node-4, are still hold by packets, a clockwise rightmost column maybe formed and the AbTM is violated.</p><p>To address above problems, bead movement should follow two rules:</p><p>1. a turn cannot be disabled unless no packet will require it, 6 We assume the reconfigurable routing algorithm is minimal. At the end of this paper, we will show the way to implement non-minimal routing based on AbTM. 2. a turn cannot be enabled unless no packet is holding the other turn needed to form the rightmost column.</p><p>Generally, to move a bead h hops, h turns should be disabled and h other turns should be enabled. For example, to move bead from node-1 to node-7, the SW turns on node-1 and node-4 should be disabled, and the ES turns on node-4 and node-7 should be enabled. Thus, it is a hard job to meet above two rules as a large number of turns will be involved, especially in a large-scale network. To reduce the complexity of bead movement, we divide it into h steps, within which the bead is moved up/down just one hop. This basic step is viewed as a safe operation and is named as bead passing. Exploiting this safe operation has two advantages. First, bead passing can be locally realized by the cooperation of adjacent routers leading to a good scalability. Second, bead passing itself can guarantee the network deadlock free during the reconfiguration, so that designers do not need to consider the deadlock problem when designing their own reconfigurable routing algorithms.</p><p>Within each step, only one turn should be disabled at original bead holder. For example, to move bead from node-1 to node-4, node-1's SW turn should be disabled. To do that, node-1 should first notify node-4 to stop injecting southwest packets 7 because they may require the SW turn on node-1. When node-4 receives the notification, it labels its south output port as "southwest unaccepted". After then, all southwest packets will be routed to node-3, instead of node-1, because node-3 always allows the WS turn. However, currently, node-4 cannot send acknowledgement to node-1, because there maybe southwest packets have already been routed based on the old information. Thus, node-4 should drain such kind of packets first, and then send acknowledgement to node-1.</p><p>Draining packets is an extensively-studied topic in the field of reconfiguration algorithms <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b25">26]</ref>. In this paper, we borrow the idea of <ref type="bibr" target="#b24">[25]</ref> that exploits the reconfiguration token. The difference is that not all packets are required to be drained. In above example, node-4 only has to drain southwest packets. Since node-4 only receives southwest packets from its local, east, and north input ports, reconfiguration tokens can only be inserted into the end of the queues belonging to these three input ports. When the south output port receives all these three tokens, node-4 can conclude that there is no southwest packets routed to node-1 existed in itself. Thus, it could send acknowledgement to node-1 at that time.</p><p>When node-1 receives the acknowledgement from node-4, it has the confidence that no new southwest packet will be received from its north neighbor. However, there maybe southwest packets still queued in the north input port. Thus, 7 Southwest packets are those whose destination is on the southwest to current node. it should first drain the southwest packets in itself before disabling SW turn. After then, it could disable the SW turn and pass the bead up. when node-4 receives the bead, it enables its ES turn and notifies its west neighbor, node-3, that it could receive southeast packets from now on. By now, one iteration of bead passing finishes. Above operations are summarized in the line-2 to line-5 in Figure <ref type="figure" target="#fig_7">5</ref>(a). Moving down the clockwise beads and moving up/down counterclockwise beads follow the same procedure, but different packets should be drained in different neighbors as shown in Figure <ref type="figure" target="#fig_7">5</ref>.</p><p>Theorem 2. bead passing does not introduce deadlock into network.</p><p>Proof. We prove this theorem by contradiction. To distinguish packets routed according to old and updated routing algorithms, we refer them as old packets and new packets respectively. We assume a network enters into deadlock during bead passing. According to <ref type="bibr" target="#b21">[22]</ref>, there is a clockwise or counter-clockwise rightmost column. Without loss of generality, we assume it is a clockwise rightmost column. Thus, there should be a packet, Pa, taking an ES turn is above another packet, P b , taking an SW turn. There are four different kinds of combinations of Pa and P b : {new, new}, {new, old}, {old, new}, and {old, old}. Because the network following the AbTM, so that the combination cannot be {new, new} and {old, old} as we proved above. If the combination is {new, old}, Pa must take this ES turn on the new clockwise bead because nodes above it do not allow the ES turn, P b must take this SW turn on the old bead because nodes below it do not allow the SW turn, and the bead is moving up. Therefore, Pa takes ES turn after the declaration of new bead and P b takes SW turn before the declaration. Hence, combination {new, old} is impossible. Due to the similar reason, combination {old, new} is impossible neither. Contradiction arises.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">THE RECONFIGURABLE ROUTING AL-GORITHMS</head><p>Based on AbTM and the safe operation, designing a reconfigurable routing algorithm is reduced to defining a way to determine the direction of bead movement. In this section, we will discuss two possible algorithms. Furthermore, implementation issues of reconfigurable routing algorithms are discussed at the end of this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Arm-wrestling</head><p>According to the AbTM, four turns, WN, NE, WS, and SE, are not critical and always assumed to be enabled. Other four turns, ES, SW, EN, and NW, are updated by bead passing. These four turns can be classified into two groups, clockwise group, ES and SW, and counter-clockwise group, EN and NW. Basically, moving bead means disabling a turn in the old bead holder and enabling the other turn in the same group in the new holder. Therefore, the turn requirement is a nature metric to determine the direction of bead movement.</p><p>With the requirements of each turn, moving bead can be compared to moving a block (mass is 0) pressed onto a wall as shown in Figure <ref type="figure" target="#fig_6">6</ref>. The bead is compared to the block. To pull up the clockwise bead, for example, the north neighbor give a force, Fup, which reflects its eagerness for ES turn.</p><p>On the other hand, the south neighbor give a force, F down , which reflects its eagerness for SW turn. The current holder gives a friction, f , to prevent the motion. The direction of f is always opposite to the direction of bead movement. If Fup &gt; F down , the bead is going to be moved up. Thus, to prevent that movement, f reflects holder's eagerness for SW turn. Otherwise, it reflects its eagerness for ES turn to prevent moving down the bead. Furthermore, to prevent "shaking" that a bead is frequently moved up and down, we set a threshold (T h). Therefore, to move the bead, the force summation should be bigger than the T h. For moving counter-clockwise beads, Fup will reflect north neighbor's eagerness for NW turn, F down reflects south neighbor's eagerness for EN turn. </p><formula xml:id="formula_1">P 0 m up F down F , 0 , , else F F if f F F F F if f F F F down up up down down up down up summation P f down up summation down up summation F F Th F if down F F Th F if up direction &amp; , &amp; ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Tug-war</head><p>With the arm-wrestling algorithm, beside the requirement of current holder, only the direct north and south neighbors are taken into consideration. Therefore, the requirements of farther neighbors maybe not fulfilled in time. To address this problem, we propose the tug-war algorithm that differs with Arm-wrestling in the definition of Fup and F down . With tugwar algorithm, the nodes above bead are viewed as a group, their total requirement to a corresponding turn is defined as the Fup. On the other hand, nodes below bead are viewed as an another group, and their total requirement to the turn is defined as the F down . To get the total requirement, each router increases its local requirement by the requirement received from upstream nodes, and propagates the result to the downstream node through out-of-band dedicated wires. Furthermore, to highlight the requirement of nodes closer to bead, the total requirement is divided by 2 at each node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Implementation Issues</head><p>To calculate the forces, e.g., Fup and F down , each node remembers how many packets required corresponding turns in itself and how many "complaints" were received from neighbors. Particularly, a "complaint" is received when a forbidden turn is required by a neighbor.</p><p>Generally, there are two ways to implement routing algorithms, logic-based and table-based. Logic-based routing algorithms, such as xy routing, are usually time/space efficient. However, they are lack of flexibility for reconfiguration. Table-based solution is flexible, but it may introduce large area and timing overhead. Recently, a logic-based distributed routing (LBDR) is proposed to implement turnbased routing algorithms by utilizing 8 routing bits (Ren, Res, Rse, Rsw, Rwn, Rws, Rne, and Rnw) and 4 connectivity bits (Ce, Cs, Cw, and Cn) <ref type="bibr" target="#b17">[18]</ref>. The routing bits indicate whether the corresponding neighbor accepts such kind of packets. For example, Ren = 1 means that the east neighbor accepts the northeast packets (allows the EN turn). The connectivity bits represent whether the neighbor is connected. LBDR routing is separated into two steps. The first step  compares the coordinates of current router and destination router. The results point out the directions which can take the packet closer to the destination. The second step checks the routing and connectivity bits, and determines whether the corresponding output ports can be taken. For example, the east output can be taken if the east neighbor is connected and one of the following three conditions holds 1. the destination is on the east of the current router, 2. the destination is on the northeast and the east neighbor allows the EN turn,</p><p>3. the destination is on the southeast and the east neighbor allows the ES turn.</p><p>LBDR routing provides just enough flexibility to implement AbTM-based reconfigurable routing algorithms. Since AbTM assumes WN, NE, ES, and SE turns are always enabled, we could remove 4 routing bits, Rse, Rwn, Rws, and Rne. Furthermore, a reconfiguration module, which realizes the bead-passing-based arm-wrestling or tug-war algorithms, should be added. The reconfiguration module is utilized to update these four routing bits based on the runtime network status according to arm-wrestling or tug-war algorithms. Since reconfiguration module does not add operation to the critical path of LBDR routing, the time efficiency of LBDR routing is inherited.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">PROOFS</head><p>In this section, we prove the claimed characteristics of AbTM-based routing, i.e., deadlock-free, livelock-free, and no packets will be dropped or suspended during the reconfiguration. Before the discussion, there is an important assumption that the network should be initialized to be deadlock-free and LBDR-connected. LBDR-connected means the network topology is supported by LBDR, and initially there is at least one minimal LBDR-path existed for any two nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 1. AbTM-based routing always provide at least one minimal path for any two nodes at any time</head><p>Proof. According to AbTM, the WN, NE, WS, and SE turns are always enabled at each node. Therefore, for any two nodes, if AbTM-based routing could provide a minimal path consisted of these four turns only, the lemma is proved. Otherwise, we should prove that the critical turns (ES, SW, EN, and NW) in the path will never be disabled.</p><p>First, we assume the topology is a regular mesh, as shown in Figure <ref type="figure">7</ref>(a). In this case, for any node, such as node-4, any other node can be reached utilizing uncritical turns. For example, to reach northeast destination, such as node-8, AbTM-based routing could route the packet to north until the intermediate node is on the same row as the destination, and then route it to the destination by taking a NE turn. For other directions, the critical turns are not required neither. Therefore, there is always a minimal path between any two nodes at any time.</p><p>Second, we assume there are two nodes are not connected unless utilizing a critical turn. Without loss of generality, we assume the critical turn is ES turn. In this case, there must be an intermediate node without south neighbor (C s = 0), such as the node-4 shown in Figure <ref type="figure">7</ref>(b). Otherwise, this intermediate node could send the packet to its south neighbor because SE turn is always enabled. Since any two nodes are initially connected, the ES turn at node-5 should be enabled. Therefore, the clockwise bead is node-5 or above it. Without loss of generality, we assume node-5 holds clockwise bead. To disable the ES turn at node-5, the bead should be pulled down. According to the description of arm-wrestling and tug-war, the SW turn requirement of nodes below node-5 should be larger than the ES turn requirement of nodes above node-5. However, the SW requirements of nodes below node-5 is always 0 because they do not have west neighbor. Therefore, clockwise bead will never be below node-5, then the ES turn at node-5 is always enabled.</p><p>The proofs for node pairs requiring SW, EN, and NW turns are similar with above proof for ES turn, and are omitted due to the limited space. We should note that, in Figure <ref type="figure">7</ref>(c), node-4 does not have the west neighbor, so that the SW turn at node-1 cannot be disabled. In this case, the ES turn requirements of node-7 is also 0 because it does not have west neighbor neither. Otherwise, if the node-6 exits, the network topology is a horizontally-reversed "C" that is not supported by LBDR routing. In Figure <ref type="figure">7</ref>(d), node-7 does not have the west neighbor due to the same reason. Proof. In general, a packet is dropped at an intermediate node if there is no route for that packet. According to Lemma 1, AbTM-based routing always provides at least one minimal path for any node pair. Therefore, dropping packet will not happen.</p><p>According to Lemma 1 there is always a minimal path between any two nodes. This path will not be changed by the reconfiguration. Therefore, for any packet, it does not need to wait the reconfiguration to finish, and can proceed along the unchanged minimal path. Hence, no packet will be suspended during the reconfiguration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 4. AbTM-based routing is deadlock and livelock free.</head><p>Proof. Deadlock-freeness can be directly proved by Theorem 1 and Theorem 2.</p><p>AbTM-based routing is a minimal routing, so that a packet will get closer to its destination at each hop. Furthermore, Theorem 3 shows that no packet is suspended, thus all packets will definitely reach their destinations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EVALUATION</head><p>In this section, we will evaluate AbTM-based reconfigurable routing algorithms, such as the proposed arm-wrestling and tug-war, by comparing them with other state-of-the-art routing algorithms. Specifically, network performance and implementation overhead are evaluated in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Methodology</head><p>AbTM provides a safe way to dynamically tune the routing algorithm, where "safe" means that the reconfiguration and reconfigured routing algorithm are deadlock free. Thus, we select four baseline routing algorithms which were also proposed to address the "safe" problem. These algorithms include one deterministic routing algorithm: xy routing, two partially adaptive routing algorithms: west-first <ref type="bibr" target="#b20">[21]</ref> and odd-even routing <ref type="bibr" target="#b21">[22]</ref>, and a minimal fully adaptive routing <ref type="bibr" target="#b14">[15]</ref>. Recently proposed routing algorithms, such as C-QR <ref type="bibr" target="#b34">[35]</ref>, O1Turn <ref type="bibr" target="#b35">[36]</ref>, and RCA <ref type="bibr" target="#b9">[10]</ref>, are proposed to improve the load balancing (or address the "port selection" problem). Thus, AbTM is orthogonal to them.</p><p>Adaptive routing algorithms may produce two candidate output ports. In such cases, the output port with more credits is selected. Each router is assumed to have 5 input and output ports. All routers, except <ref type="bibr" target="#b14">[15]</ref>, assume one VC per virtual network, and each VC is assigned with a 4-entries queue. For <ref type="bibr" target="#b14">[15]</ref>, two VCs per virtual network are provided to avoid deadlock. For fair comparison, its input buffer queue is equipped with 2 entries. Furthermore, <ref type="bibr" target="#b14">[15]</ref> does not allow an VC to be reallocated until the tail flit leaves. For other routing algorithms, however, an VC can be reallocated once the tail flit is stored.</p><p>We first evaluate the routing algorithms under synthetic traffic patterns, including uniform, transpose and hotspot, in a 4?4 mesh. After then, we simulate them again in a 8?8 mesh to show their scalability. All of these algorithms are implemented within the cycle accurate Garnet simulator <ref type="bibr" target="#b36">[37]</ref>. Garnet provides two simulation modes, flexible and detailed. In our simulation, we adopt the detailed mode, because it enables us to modify the router architecture for reconfiguration. Routers realize one virtual network per physical channel in this simulation.</p><p>We also evaluate these routing algorithms under real applications's traffic patterns through a trace-driven simulation. We use the GEMS simulator <ref type="bibr" target="#b37">[38]</ref>, which is based on a full-system functional simulation infrastructure, i.e., the Simics <ref type="bibr" target="#b38">[39]</ref>, to trace applications' traffic patterns. Simics could run unmodified Solaries operating system and guarantee the function correctness. GEMS, on the other hand, provides the timing modules of memory system and microprocessors, i.e., the Ruby and Opal modules. In our simulations, we only utilize the Ruby module, which includes the Garnet simulator <ref type="bibr" target="#b36">[37]</ref>. The cache coherence protocol, M-SI MOSI CMP directory, is synthesized. This protocol requires five virtual networks to avoid deadlock, and two of them are ordered <ref type="foot" target="#foot_0">8</ref> . The network is assumed as 4?4 mesh, instead of the 8?8 mesh, to save simulation time. Benchmark suites, Splash-2 <ref type="bibr" target="#b40">[41]</ref> and PARSEC <ref type="bibr" target="#b41">[42]</ref>, are evaluated in this simulation. As for the threshold (T h) used to prevent bead shaking, we set it as 20 in this simulation as averagely about 10 cycles will be cost to finish one bead passing according to our simulation. We manually set the value of T h to show the potential of the reconfigurable routing. We think finding a theoretical or dynamical way to determine the best T h is an interesting and challenge future work.</p><p>Finally, to reveal the cost of AbTM-based routing algorithms for the performance gain, we analyze its timing, area and power overhead in the end of this section. In this simulation, we implement six different routers realizing xy, westfirst <ref type="bibr" target="#b20">[21]</ref>, odd-even <ref type="bibr" target="#b21">[22]</ref>, minimal fully adaptive routing <ref type="bibr" target="#b14">[15]</ref>, and AbTM-based routing algorithms respectively. We utilize the Design Compiler to synthesize the verilog codes with the UMC 90nm standard cell library. Each router, except <ref type="bibr" target="#b14">[15]</ref>, consists of five input/output ports, each input port has one VC, which is provided with a 4-entries queue. For <ref type="bibr" target="#b14">[15]</ref>, each input port has 2 VCs with a 2-entries queue. The width of input buffer queue is assumed as 64 bits, both VC and switch allocators adopt the round-robin arbiter proposed in <ref type="bibr" target="#b19">[20]</ref>, and an fully connected 5?5 crossbar is implemented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Simulation Results and Analysis</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Performance Under Synthetic Traffic Patterns</head><p>Under the uniform traffic pattern, each node sends packets to others with the same possibility. The simulation results for 4?4 and 8?8 meshes are shown in Figure <ref type="figure" target="#fig_9">8</ref>(a) and Figure <ref type="figure" target="#fig_9">8</ref>(b), respectively. Horizontal axis represents the flit injection rate, and the vertical axis indicates the average packet latency in router cycles. It has been widely proved that deterministic routing algorithms could get better performance than adaptive routing algorithms under the uniform traffic pattern <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref>. The main reason for that phenomenon is that adaptive routing algorithms usually make selection based on local information, such as the number of credit of each output port. This kind of short-sight solution usually degrade network performance. According to the results shown in Figure <ref type="figure" target="#fig_9">8</ref>(a), xy routing algorithm gets the best results as expected. Two partially adaptive routing algorithms, west-first and odd-even, get similar results. The results of AbTM-based reconfigurable routing algorithms are worse than that of partially adaptive routing algorithms mainly due to the reconfiguration strategy. Because AbTM-based reconfigurable routing algorithms reconfigure themselves mainly based on the traffic history. However, under uniform traffic pattern, such kind of reconfiguration will be wrong at most times. For example, we assume northeast direction carries the highest traffic load in current interval, so that AbTM-based will allocate more adaptivity to that direction. However, according to the definition of uniform traffic, northeast direction will carry the lowest traffic load in the next interval with very high possibility. The minimal fully adaptive routing algorithm <ref type="bibr" target="#b14">[15]</ref>, labeled as "min-adapt", gets the worst results due to its conservative flow control strategy that an VC cannot be reallocated until it is empty. We also simulate these algorithms under a 8?8 mesh, and the results are shown in Figure <ref type="figure" target="#fig_9">8(b)</ref>. Most of the results agree with that shown in Figure <ref type="figure" target="#fig_9">8</ref>(a). However, the relative performance of min-adapt routing algorithm get improved in this simulation. The reason is that the contention possibility increases with the network size. When contention happens, <ref type="bibr" target="#b14">[15]</ref> requires packets to wait on the escape output port, i.e., the one chosen by xy routing. This characteristic enable min-adapt routing algorithm to exploit the long-term evenness of uniform traffic pattern just like the xy routing.</p><p>In real world, applications usually generate nonuniform traffic patterns, such as transpose. Under transpose traffic pattern, source node s always sends packets to destination d, where d i=s(i+b/2)%b and b is the number of bits used to index nodes. According to the simulation results shown in Figure <ref type="figure" target="#fig_9">8</ref>(c), the AbTM-based routing algorithms get the best results because they could provide full adaptiveness to packets. Transpose traffic pattern tends to cause severe congestion problems, thus the xy routing gets the worst performance. West-first routing gets better results than xy routing as it could provide full adaptiveness to eastward packets. However, the improvement is limited because westward packets still face the congestion problem. Odd-even routing could provide even adaptiveness to packets towards different directions, thus it could get better results than west-first and xy routing. However, the provided adaptiveness is insufficient, thus it cannot get the performance as high as the AbTM-based routing algorithms do. Min-adapt routing algorithm also could provide full adaptiveness, but its conser-vative flow control technique will aggregate the congestion problem, thus it saturates earlier than the proposed AbTMbased routing algorithms. We also simulate these algorithms in a 8?8 mesh, the results are shown in Figure <ref type="figure" target="#fig_9">8(d)</ref>. Relative performance does not change, but the improvement got by the proposed algorithms is enlarged. Because its provided full adaptiveness is useful to tackle the more severer congestion problem in the large network.</p><p>Applications' bursty traffic may cause hotspots, and aggregates the congestion problem. In the following two simulations, we assume four hot-spot nodes: n 0, n4, n8, n12, each of which gets extra 20% traffic than others. These four nodes are selected to simulate the situation that four memory controllers are frequently accessed. In such cases, westward packets are prone to be congested. According to simulation results shown in Figure <ref type="figure" target="#fig_9">8</ref>(e), the AbTM-based routing algorithms get the best results because they could provide full adaptiveness by enabling the NW and SW turns at every routers. Although min-adapt routing algorithm could provide full adaptiveness, but its conservative flow control technique leads to a low utilization of input buffers. Thus, its performance is not better than odd-even routing algorithm. Since west-first and xy routing algorithms cannot provide adaptiveness for avoiding congestions, they get the worst performance. When the network is enlarged, the congestion problem is further aggregated. By successfully reducing blocking, the AbTM-based routing algorithms also get the performance. Furthermore, the improvement, compared with other algorithms, is also enlarged as they did under transpose traffic pattern.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Performance Under Applications' Traffic</head><p>According to above simulations, we find that arm-wrestling and tug-war routing algorithms could get good performance under nonuniform traffic patterns, such as transpose and hotspot. In a short range perspective, there are lots of bursts in application's traffic <ref type="bibr" target="#b42">[43]</ref>. If we view burst as hotspot traffic, then application is consisted of hotspot traffic in consecutive intervals with different hot-spot nodes. If AbTMbased routing could reconfigure itself in time, we could expect the application performance improvement. To prove this assumption, we further carried out the following tracedriven simulation.</p><p>Figure <ref type="figure" target="#fig_10">9</ref>(a) shows the packet latency across Splash-2 benchmarks normalized to the latency of xy routing. By dynamically allocating more adaptivity to bursty packets, the AbTM-based routing could significantly reduce the packet latency. In general, arm-wrestling and tug-war routing algorithms could reduce packet latency for all applications. However, due to the different characteristics of applications, the improvement is different. For example, for applications tend to generate high contented traffic, such as fft and water-spatial, the improvement is significant. However, for applications that generate low contented traffic, such as raytrace and ocean, the improvement will be relative small. For example, for the Ocean applications, where more than 60% traffic is local traffic <ref type="bibr" target="#b40">[41]</ref>, arm-wrestling algorithm could reduce the packet latency by 6% and tug-war algorithm reduces it by 7%. In general, for Splash-2 applications, AbTM-based routing algorithms could reduce the packet latency by maximally 19% and 10% in average.</p><p>To improve the confidence to make the conclusion that AbTM-based routing algorithms outperform other algorithm- s, we simulate them again under PARSEC benchmarks <ref type="bibr" target="#b41">[42]</ref>.</p><p>The simulation results, which are also normalized to the latency of xy routing, are shown in Figure <ref type="figure" target="#fig_10">9</ref>(b). Simulation results point to the same conclusion that AbTM-based routing algorithms could significantly improve the network performance. Specifically, for high-contented applications, such as canneal and freqmine, the improvement is large. For example, for freqmine, tug-war reduces the packet latency by 15%, and arm-wrestling reduces it by 12%. However, for low-contented applications, the reduction is moderate. For example, for streamcluster, the packet latency reduction is 2% and 3% by arm-wrestling and tug-war, respectively. In general, the packet latency is reduced by 15% maximally and 10% in average.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Overhead</head><p>The router frequency is one of the most important performance metrics to evaluate NoCs, and in general, it should be kept as high as possible. As discussed in Section 3.3, AbTM-based routing algorithms provide a solution to dynamically update routing bits of LBDR routing, but does not modify its routing logic. This together with the fact that LBDR routing has been proved to be timing efficient <ref type="bibr" target="#b17">[18]</ref> prove that the AbTM-based routing algorithms are also timing efficient.</p><p>Another kind of overhead is the area overhead, which determines the chip cost. As shown in Figure <ref type="figure" target="#fig_11">10</ref>(a), the router area is normalized to the area of xy router. According to the experiment results, the router realizing min-adapt routing algorithm is the largest because it requires 5 VC allocators. Other routers do not implement virtual channels, so that they do not have the VC allocator. The router realizing tug-war routing algorithms is the second largest, because it requires more logics to propagate traffic information. Armwrestling router requires fewer logics than tug-war, but is still larger than west-first and odd-even router. Compared with xy router, Arm-wrestling router increases the area by 5% and tug-war increases it by 8%. Taking the area of core and caches into consideration, the area increase is negligible. As shown in Figure <ref type="figure" target="#fig_11">10</ref>(b), if the router area is assumed to occupy 11% area of a tile as reported by Intel <ref type="bibr" target="#b0">[1]</ref>, then the increase of tile area will be smaller than 1%.</p><p>Assuming the same VLSI technology and working frequency, the dynamic power is largely determined by the size and activity of routers. As discussed above, the routers do not have significant difference in area. Thus, they consume similar dynamic power as the activity of them does not have significant difference either. Reconfiguration also consumes power, but it is rare to happen compared with routing operations. If we further take the power of cores and caches into consideration, the power overhead is negligible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISCUSSIONS</head><p>AbTM-based routing can be extended to any topology with the help of segment-based routing <ref type="bibr" target="#b30">[31]</ref> which was initially proposed to design deadlock-free fault-tolerant routing algorithms. The segment-based routing divides a network into segments, and places bidirectional turn restrictions within each segment to keep the network deadlock-free. Currently, the segment-based routing requires off-line computation to determine how to divide the network and where to place the turn restrictions. With the AbTM-based routing, we require the processor allocation algorithms to provide the information about the segments. Thus, the AbTMbased routing could dynamically determines where to put the restrictions at runtime.    AbTM-based routing is minimal because the underlying LBDR is minimal. However, at some times, non-minimal routing is useful for balancing traffic and tolerating faults. Recently, Rodrigo et.al. have extended the LBDR to be nonminimal <ref type="bibr" target="#b43">[44]</ref>. Since AbTM-based routing does not modify LBDR's routing logic, the extension proposed by Rodrigo et.al. can also be applied to AbTM-based routing.</p><p>The reconfiguration time, i.e., the cycles utilized to finish one reconfiguration, is usually evaluated to reflect the performance of reconfiguration algorithm. Compared with <ref type="bibr" target="#b24">[25]</ref>, since fewer packets are required to be drained, the reconfiguration of the proposed reconfigurable routing should be faster than <ref type="bibr" target="#b24">[25]</ref>. Furthermore, because the proposed algorithm does not suspend packets, we did not evaluate the reconfiguration time in this paper due to the limited space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Deadlock-Free Reconfiguration Algorithms</head><p>Generally, deadlock-free reconfiguration algorithms can be categorized into static algorithms <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25]</ref> and dynamic algorithms <ref type="bibr" target="#b25">[26]</ref>. Traditional static algorithms avoid deadlock during the reconfiguration by stopping user traffic until the reconfiguration finishes <ref type="bibr" target="#b23">[24]</ref>. As a consequence, significant network performance degradation is introduced. On the other hand, dynamic reconfiguration algorithms let user traffic continue while the network reconfigures (packets also should be suspended in regions affected by reconfiguration) <ref type="bibr" target="#b25">[26]</ref>. However, they are either complex to implement or designed for specific routing algorithms, such as the up*/down* routing algorithm. Recently, an overlapping static reconfiguration algorithm is proposed to reduce the performance degradation caused by static reconfiguration while still maintain the simplicity <ref type="bibr" target="#b24">[25]</ref>. Its basic idea is to globally overlap reconfiguration phases via locally synchronization. However, some packets still should be suspended until the local synchronization finishes.</p><p>The proposed reconfiguration algorithms are different with prior algorithms in the following aspects. First, most of the previous algorithms are proposed to handle the topology changes caused by router or link failures <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b25">26]</ref>. On the other hand, the proposed algorithms assume the network is fault free. This assumption is reasonable because allocation algorithms always schedule a fault-free subnetwork to incoming applications <ref type="bibr" target="#b44">[45]</ref>. Second, previous algorithms should suspend packets, in the whole network <ref type="bibr" target="#b23">[24]</ref> or regions affected by the reconfiguration <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b25">26]</ref>. With the proposed algorithms, however, no packet will be suspended. Finally, no packet is dropped during the reconfiguration and all packets (old and new) will be correctly delivered to their destinations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Application-/Traffic-/Congestion-Aware Routing Algorithms</head><p>Exploiting the traffic or application information is an effective way to improve routing performance <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b10">11]</ref>. If the application's traffic information, such as the communication graph, can be obtained in advance, we could design a routing algorithm that not only keeps the network deadlock free but also maximally improve the network performance. This assumption usually holds in MPSoC scenarios, and the representative algorithms are the APSRA proposed by Palesi et.al. <ref type="bibr" target="#b31">[32]</ref>, the deadlockfree oblivious routing proposed by Kinsy et.al. <ref type="bibr" target="#b32">[33]</ref>, and the ACES proposed by Cong et.al. <ref type="bibr" target="#b33">[34]</ref>. However, in the chip multiprocessor scenario, where the proposed AbTM-based routing focuses on, traffic/application information should be gathered at runtime. Existing routing algorithms exploiting runtime traffic information are designed for output port selection <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref>, congestion reduction <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10]</ref>, or pipeline reduction <ref type="bibr" target="#b10">[11]</ref>. Thus, the proposed AbTM-based routing, which is designed for on-line routing reconfiguration, is orthogonal to them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSION</head><p>Exploiting applications' traffic information to improve NoC performance has been proved to be effective. In this paper, we present an on-line routing reconfiguration strategy. It dynamically reconfigures itself to provide full adaptiveness to the highest traffic load directions. The major challenge addressed in this paper is the way to keep the network deadlock free during and after each reconfiguration. To this end, we propose the AbTM, which keeps the network, with a stable configuration, deadlock free. AbTM significantly reduces the complexity of routing reconfiguration. Furthermore, we propose an atomic reconfiguration operation, i.e., bead passing, which inherently keeps the network deadlock-free during the reconfiguration without suspending and dropping packets. Based on AbTM, two reconfigurable routing algorithms, arm-wrestling and tug-war, are proposed. The AbTM-based routing algorithms are proved to be deadlockand livelock-free, and are evaluated against both synthetic and real application traffic. The experimental results are indeed encouraging and prove its applicability with scalable performance in large-scale NoC applications.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Clockwise rightmost column. (a) ES above SW. (b) ES only. (c) SW only. (d) ES below SW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: An AbTM example. Dashed blocks represent possible position for beads, solid ellipses represent clockwise beads, hollow ellipses represent counter-clockwise beads, dashed arrows indicate the prohibited turns, and allowed turns are not shown for simplicity.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 (</head><label>2</label><figDesc>Figure 2(b)  shows the distribution of prohibited turns that are represented by dashed arrows. According to the AbTM, clockwise (resp., counter-clockwise) bead holder allows all clockwise turns: ES, SW, WN, and NE (resp., all counterclockwise turns: EN, NW, WS, and SE). The router above clockwise (resp., counter-clockwise) bead allows all clockwise (resp., counter-clockwise) turns except the ES (resp., NW) turn. On the other hand, the router below clockwise (resp., counter-clockwise) bead allows all clockwise (resp., counterclockwise) turns except the SW (resp., EN) turn. Turns are distributed in such a way that both clockwise and counterclockwise rightmost columns cannot be formed. Based on AbTM, designing a deadlock-free routing algorithm is reduced to assigning the positions of clockwise and counterclockwise beads inside each column. Once the positions are fixed, the network is deadlock-free. We prove this as the following theorem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: AbTM reconfigurable routing example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Prohibited turns distribution, (a) before bead movement, (b) after bead movement.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: An example of moving up/down a block.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Pseudo code of bead passing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :Theorem 3 .</head><label>73</label><figDesc>Figure 7: Nodes are always connected in AbTM-based routing. Theorem 3. AbTM-based routing does not drop and suspend packets during the reconfiguration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Average packet latency under synthetic traffic patterns.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Packet latency across Splash-2 and PARSEC benchmarks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Area overhead evaluation.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_0"><p>Techniques have been proposed to keep packets' ordering in adaptive routing<ref type="bibr" target="#b39">[40]</ref> </p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head n="9.">ACKNOWLEDGMENTS</head><p>The work was supported in part by <rs type="funder">National Basic Research Program of China</rs> (<rs type="grantNumber">973</rs>) under grant No. <rs type="grantNumber">2011CB302503</rs>, in part by <rs type="funder">National Natural Science Foundation of China (NSFC)</rs> under grant No.( <rs type="grantNumber">60806014</rs>, <rs type="grantNumber">61076037</rs>, <rs type="grantNumber">60921002</rs>), in part by <rs type="funder">Co-Building Program of Beijing Municipal Education Commission</rs>.</p><p>We would like to thank <rs type="person">Prof. Kai Hwang</rs> of <rs type="institution">USC</rs> for his long time help, <rs type="person">Prof. Ninghui Sun</rs> for his insight suggestions to our work, <rs type="person">Dr. Kun Wang</rs> and <rs type="person">Dr. Xiaotao Chang</rs> of the <rs type="institution">IBM CRL</rs> for their discussion, and the anonymous reviewers for their constructive comments.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_eDPdKnB">
					<idno type="grant-number">973</idno>
				</org>
				<org type="funding" xml:id="_GEBaSbs">
					<idno type="grant-number">2011CB302503</idno>
				</org>
				<org type="funding" xml:id="_AJPndgG">
					<idno type="grant-number">60806014</idno>
				</org>
				<org type="funding" xml:id="_nbeCwHJ">
					<idno type="grant-number">61076037</idno>
				</org>
				<org type="funding" xml:id="_aEDmEnJ">
					<idno type="grant-number">60921002</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An 80-tile sub-100-w teraflops processor in 65-nm cmos</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Vangal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Ruhl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dighe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tschanz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Finan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Jacob</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Erraguntla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Roberts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hoskote</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Borkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Borkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal of Solid-State Circuits</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="41" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Tile64 -processor: A 64-core soc with mesh interconnect</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Edwards</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Amann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Conlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Joyce</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mackay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reif</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Liewei</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mattina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chyi-Chang</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ramey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wentzlaff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Fairbanks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Montenegro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stickney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Digest of Technical Papers. IEEE International Solid-State Circuits Conference</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Principles and practices of interconnection networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Towles</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Deadlock-free message routing in multiprocessor interconnection networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Seitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers, C</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="547" to="553" />
			<date type="published" when="1987-05">May 1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A communication characterisation of splash-2 and parsec</title>
		<author>
			<persName><forename type="first">N</forename><surname>Barrow-Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fensch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Moore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Symposium on Workload Characterization</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="86" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A low latency router supporting adaptivity for on-chip interconnects</title>
		<author>
			<persName><forename type="first">Jongman</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dongkook</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Theocharides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vijaykrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Design Automation Conference</title>
		<meeting>Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="559" to="564" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Goal: a load-balanced adaptive routing algorithm for torus networks</title>
		<author>
			<persName><forename type="first">Arjun</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Towles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Computer Architecture</title>
		<meeting>International Symposium on Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="194" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Congestion-controlled best-effort for networks-on-chip</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Van Den Brand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ciordas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Goossens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Basten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design, Automation Test in Europe Conference Exhibition</title>
		<imprint>
			<date type="published" when="2007">2007. 2007</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A new scalable and cost-effective congestion management strategy for lossless multistage interconnection networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Duato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Flich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Naven</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Nachiondo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on High-Performance Computer Architecture</title>
		<meeting>International Symposium on High-Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="108" to="119" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Regional congestion awareness for load balance in networks-on-chip</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gratz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Grot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Keckler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Symposium on High Performance Computer Architecture</title>
		<meeting>IEEE International Symposium on High Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="203" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Design of a dynamic priority-based fast path architecture for on-chip interconnects</title>
		<author>
			<persName><forename type="first">D</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Nicopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jongman</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vijaykrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Iyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on High-Performance Interconnects</title>
		<meeting>IEEE Symposium on High-Performance Interconnects</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="15" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Virtual-channel flow control</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="194" to="205" />
			<date type="published" when="1992-03">March 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Fully-adaptive routing: packet switching performance and wormhole algorithms</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Felperin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gravano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Pifarre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L C</forename><surname>Sanz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Conference on Supercomputing</title>
		<meeting>ACM/IEEE Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="654" to="663" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Deadlock-free adaptive routing in multicomputer networks using virtual channels</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Aoki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="466" to="475" />
			<date type="published" when="1993-04">April 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A new theory of deadlock-free adaptive routing in wormhole networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Duato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1320" to="1331" />
			<date type="published" when="1993-12">December 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Efficient fully adaptive wormhole routing in n-dimensional meshes</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">M</forename><surname>Boura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on Distributed Computing Systems</title>
		<meeting>International Conference on Distributed Computing Systems</meeting>
		<imprint>
			<date type="published" when="1994-06">June 1994</date>
			<biblScope unit="page" from="589" to="596" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Efficient and balanced adaptive routing in two-dimensional meshes</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Upadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Varavithya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mohapatra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on High-Performance Computer Architecture</title>
		<meeting>IEEE Symposium on High-Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An efficient implementation of distributed routing algorithms for nocs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Flich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rodrigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Duato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE International Symposium on Networks-on-Chip</title>
		<meeting>ACM/IEEE International Symposium on Networks-on-Chip</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="87" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A delay model and speculative architecture for pipelined routers</title>
		<author>
			<persName><forename type="first">L.-S</forename><surname>Peh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on High-Performance Computer Architecture</title>
		<meeting>International Symposium on High-Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Round-robin arbiter design and generation</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">S</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">J</forename><surname>Mooney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">F</forename><surname>Riley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on System Synthesis</title>
		<meeting>International Symposium on System Synthesis</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The turn model for adaptive routing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Glass</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Ni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Computer Architecture</title>
		<meeting>International Symposium on Computer Architecture</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The odd-even turn model for adaptive routing</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Chiu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="729" to="738" />
			<date type="published" when="2000-07">July 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">On topology reconfiguration for defect-tolerant noc-based homogeneous manycore systems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Very Large Scale Integration(VLSI) Systems</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1173" to="1186" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Automatic reconfiguration in autonet</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Rodeheffer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Schroeder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM symposium on operating systems principles</title>
		<meeting>ACM symposium on operating systems principles</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="183" to="197" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">An efficient and deadlock-free network reconfiguration protocol</title>
		<author>
			<persName><forename type="first">O</forename><surname>Lysne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Montanana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Flich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Duato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">M</forename><surname>Pinkston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Skeie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="762" to="779" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Dynamic reconfiguration in computer clusters with irregular topologies in the presence of multiple node and link failures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Avresky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Natchev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="603" to="615" />
			<date type="published" when="2005-05">May 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A fault-tolerant and deadlock-free routing protocol in 2d meshes based on odd-even turn model</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1154" to="1169" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A reconfigurable routing algorithm for a fault-tolerant 2d-mesh network-on-chip</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Taktak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Design Automation Conference</title>
		<meeting>ACM/IEEE Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="441" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A new multiple-round dor routing for 2d network-on-chip meshes</title>
		<author>
			<persName><forename type="first">B</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Pacific Rim International Symposium on Dependable Computing</title>
		<meeting>IEEE Pacific Rim International Symposium on Dependable Computing</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="276" to="281" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Deadlock-free message routing in multiprocessor interconnection networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Seitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers, C</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="547" to="553" />
			<date type="published" when="1987-05">May 1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Segment-based routing: an efficient fault-tolerant routing algorithm for meshes and tori</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mejia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Flich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Duato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-A</forename><surname>Reinemo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Skeie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Parallel and Distributed Processing</title>
		<meeting>International Symposium on Parallel and Distributed Processing</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Application specific routing algorithms for networks on chip</title>
		<author>
			<persName><forename type="first">M</forename><surname>Palesi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Holsmark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Catania</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="316" to="330" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Application-aware deadlock-free oblivious routing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Michel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Myong</forename><surname>Kinsy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hyon</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tina</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Edward</forename><surname>Suh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marten</forename><surname>Van Dijk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Srinivas</forename><surname>Devadas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of international symposium on Computer architecture</title>
		<meeting>international symposium on Computer architecture<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="208" to="219" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Aces: Application-specific cycle elimination and splitting for deadlock-free routing on irregular network-on-chip</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Reinman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Design Automation Conference</title>
		<meeting>ACM/IEEE Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="443" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Adaptive channel queue routing on k-ary n-cubes</title>
		<author>
			<persName><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Towles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM symposium on Parallelism in Algorithms and Architectures</title>
		<meeting>ACM symposium on Parallelism in Algorithms and Architectures</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="11" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Near-optimal worst-case throughput routing for two-dimensional mesh networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Rafique</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Thottethodi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of international symposium on Computer Architecture</title>
		<meeting>international symposium on Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="432" to="443" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Garnet: A detailed interconnection network model inside a full-system simulation framework</title>
		<author>
			<persName><forename type="first">N</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Peh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jha</surname></persName>
		</author>
		<idno>TR CE-P08-001</idno>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
		<respStmt>
			<orgName>Princeton University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Multifacet&apos;s general execution-driven multiprocessor simulator (GEMS) toolset</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M K</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Sorin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">M</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Marty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Alameldeen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">E</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGARCH Computer Architecture News</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="92" to="99" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Simics: A full system simulation platform</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">S</forename><surname>Magnusson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Christensson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Eskilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Forsgren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hallberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hogberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Larsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Moestedt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Werner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="50" to="58" />
			<date type="published" when="2002-02">February 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">In-network snoop ordering (inso): Snoopy coherence on unordered interconnects</title>
		<author>
			<persName><forename type="first">N</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Li-Shiuan</forename><surname>Peh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Jha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on High Performance Computer Architecture</title>
		<meeting>International Symposium on High Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="67" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">The splash-2 programs: characterization and methodological considerations</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ohara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Torrie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Computer Architecture</title>
		<meeting>International Symposium on Computer Architecture</meeting>
		<imprint>
			<date type="published" when="1995-06">June 1995</date>
			<biblScope unit="page" from="24" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">The parsec benchmark suite: characterization and architectural implications</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bienia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of international conference on Parallel architectures and compilation techniques</title>
		<meeting>international conference on Parallel architectures and compilation techniques</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="72" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Trace-driven optimization of networks-on-chip configurations</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Samadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Ramanujam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Design Automation Conference (DAC)</title>
		<meeting>ACM/IEEE Design Automation Conference (DAC)</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="437" to="442" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Addressing manufacturing challenges with cost-efficient fault tolerant routing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Rodrigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Flich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Medardoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bertozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Camacho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Silla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Duato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Networks-on-Chip</title>
		<meeting>International Symposium on Networks-on-Chip</meeting>
		<imprint>
			<date type="published" when="2010-05">May 2010</date>
			<biblScope unit="page" from="25" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">An efficient submesh allocation strategy for mesh computer systems</title>
		<author>
			<persName><forename type="first">P.-J</forename><surname>Chuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N.-F</forename><surname>Tzeng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on Distributed Computing Systems</title>
		<meeting>International Conference on Distributed Computing Systems</meeting>
		<imprint>
			<date type="published" when="1991-05">May 1991</date>
			<biblScope unit="page" from="256" to="263" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
