<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On Inferring Autonomous System Relationships in the Internet</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Lixin</forename><surname>Gao</surname></persName>
							<email>lgao@ecs.umass.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01002</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">On Inferring Autonomous System Relationships in the Internet</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">BE1D152A0C237F4C30C15D42C60C62A1</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:57+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Internet consists of rapidly increasing number of hosts interconnected by constantly evolving networks of links and routers. Interdomain routing in the Internet is coordinated by the Border Gateway Protocol (BGP). BGP allows each autonomous system (AS) to choose its own policy in selecting routes and propagating reachability information to others. These routing policies are constrained by the contractual commercial agreemeats between administrative domains. For example, an AS sets its policy so that it does not provide transit services between its providers. Such policies imply that connectivity alone can not Puuy characterize the structural properties of the Internet. We propose an augmented AS graph representation that dassifies AS relationships ihto customer-to-provider, peer-to-peer, and siblingto-sibling relationships. We classiiy the types of routes that can appear in BGP routing tables based on the relationships between the ASes in the path and present heuristic algorithms that infer AS relationships from BGP routing tables. The algorithms are tested on publicly available BGP routing tables that contains dose to l million route entries. The algorithms infer that more than 90.5% of the connected AS pairs have customer-to-provider relationships, less than 1.5% of the connected AS pairs have sibling-to-sibling relationships. We verify our inference results with AT&amp;T internal information on its relationship with neighboring ASes. 99% of our inference results are confirmed by the AT&amp;T internal information. We also verify our inferred sibling-to-sibling relationships with the information acquired from the WHOIS lookup service [l]. More than half of our inferred sibling-tosibling relationships are confirmed by the WHOIS lookup service. To the best of our knowledge, there has been no publidy available information about inter-AS relationships and this is the first attempt in understanding and inferring AS relationships in the Internet. We show evidences that some routiig table entries stem from unusual AS relationships or router misconfiguration.</p><p>relationships, and less than 8% Of the Connected AS pairs have Pm-tO-pW</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>The Internet has experienced a tremendous growth in its size and complexity since its commercialization. The Internet connects thousands of Autonomous Systems (ASes) operated by many different administrative domains such as Internet Service Providers (ISPs), companies and universities. Since two ISPs might merge into one and each administrative domain can possess several ASes, an administrative domain can operate one or several ASes. Routing within an AS is controlled by intradomain routing protocols such as static routing, OSPF, IS-IS, and RIP. A pair of ASes interconnect via dedicated links and/or public network access points. and routing between ASes is determined by the interdomain routing protocol -Border Gateway Protocol (BGP). One key distinct feature of the interdomain routing protocol is that it allows each AS to choose its own policy in selecting the best route, and announcing and accepting routes. One of the most important factors in determining routing policies is the commercial contractual relationships between administrative domains.</p><p>The author was supported in part by NSF grant NCR-9977555. and NSF CA-REER Award grant ANI-9875513. Any opinions, findings, and conclusions or recommendations expressed io this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.</p><p>The commercial agreements between pairs of administrative domains can be classified into customer-provider, peering, and mutual-transit agreements 121, [3]. A customer pays its provider for connectivity to the rest of the Internet. Therefore, a provider does transit traffic for its customers. However, a customer does not transit traffic between two of its providers. A pair of peers agree to exchange traffic between their respective customers free of charge. A mutual-transit agreement allows a pair of administrative domains to provide connectivity to the rest of the Internet for each other. This mutual transit relationship is typically between two administrative domains such as small ISPs or universities who are located close to each other and who can not afford additional Internet services for better connectivity.</p><p>These contractual commercial agreements between administrative domains play a crucial role in shaping the structure of the Internet and the end-to-end performance characteristics. Previous work on the Internet topology has been focused on the in- terconnection structure at either AS or router level [4], [5], [6],</p><p>[7], [SI. <ref type="bibr">[9]</ref>. Since routing between ASes is controlled by BGP a policy-based routing protocol, connectivity does not imply reachability. For example, national ISPs A and B are connected to their customera regional ISP C respectively. Although ISPs A and B are connected through ISP C, ISP A can not reach ISP B via ISP C since C as a customer does not provide transit services between its providers. Even if ISPs A and B can reach each other via other ISPs, the end-to-end performance characteristics between A and B can not be inferred from that of between A and C and between C and B. For example, the delay between A and B is independent of the total delay between A and C and between C and B. This has been observed by several measurement studies <ref type="bibr">[IO]</ref>, <ref type="bibr">[ll]</ref>. Therefore, the connectivity (at either the AS or the router level) alone does not fully characterize the structural properties of the Internet.</p><p>We propose an augmented AS graph representation to capture AS relationships. We classify the relationship between a pair of interconnected ASes into customer-to-provider, peer-to-peer, and sibling-to-sibling relationships according to the commercial contractual agreement between the administrative domains they belong to. A pair of interconnected ASes has a customer-toprovider (peer-to-peer) relationship if their respective administrative domains have a customer-provider (peering) relationship. Two ASes have a sibling-to-sibling relationship if they belong to the same administrative domain or their respective administrative domains have a mutual-transit agreement.</p><p>There is no publicly available information about inter-AS relationships. ISPs do not register their relationships to the Internet registries. Internet registries such as ARM [ 11 do provide infor-mation such as who administrates an AS. However, the information can be out of date and does not imply anything about how ASes relate to each other. Contractual agreements between ISPs are proprietary and companies are unwilling to reveal even the names of their ISPs [ 121. Internet Routing Registries (IRR) was created as a repository of routing policies. However, many ISPs are not willing to reveal their policies and even if they are, these routing policies might not specify AS relationships.</p><p>The knowledge of global inter-AS relationships have many applications. First, it can be crucial in Internet service management decisions including the optimal placement of proxy servers or web hosting servers. Second, it can help ISP or domain administrators to achieve load balancing, congestion avoidance and fault tolerance goal. Third, it can aid ISPs in planning for future contractual agreements. Fourth, it can help ISPs to reduce the effect of the misconfiguration and to debug router configuration files <ref type="bibr">[ 131,</ref><ref type="bibr">[ 141,</ref><ref type="bibr">[ 151. Fifth,</ref><ref type="bibr">it</ref> can potentially avoid route divergence problem. Sixth, understanding AS relationships can verify the consistency of information in IRR.</p><p>In this paper, we present heuristic algorithms that infer the augmented AS graph from BGP routing tables. Since the BGP routing tables closely capture the current state of the Internet, inferring AS relationships from them can effectively derive the most up-to-date AS relationships. We first formally present the routing policies implied by AS relationships and derive routing table entry patterns as the result of routing policies. We then infer the AS relationships based on the heuristic that the size of an AS is typically proportional to its degree in the AS graph. This heuristic has been used by <ref type="bibr">Govindan and Reddy [5]</ref> in classifying ASes into four levels of hierarchy. Our heuristic algorithms classify an interconnected AS pair into having a providerto-customer, peer-to-peer, or siblingto-sibling relationship. The running time of the algorithm is linear in the total number of consecutive AS pairs in the routing tables. To the best of our knowledge, this is the first attempt in understanding and inferring AS relationships in the Internet.</p><p>Furthermore, we perform an experimental study of AS relationships in the Internet. The BGP routing table is retrieved from the Route Viewer server in Oregon [ 161, which is publicly available and has the most complete view of the current Internet by establishing BGP peering sessions with 22 ISPs at 24 locations. The algorithms infer that more than 90.5% of the connected AS pairs have customer-to-provider relationships, less than 1.5% of the connected AS pairs have sibling-to-sibling relationships, and less than 8% of the connected AS pairs have peer-to-peer relationships. We verify our inference results with AT&amp;T internal information on its relationship with neighboring ASes. Our result shows that 99.8% of our inferred customers are confirmed by the AT&amp;T internal information. 100% of our inferred peers are confirmed by the AT&amp;T internal information. 20% of our inferred siblings are confirmed by the AThT internal information. Out of our inference results, 99% of inference results are confirmed by the AT&amp;T internal information. We also verify our inferred sibling-to-sibling relationships with the information acquired from the WHOIS lookup service [ 11. More than half of the inferred sibling-to-sibling relationships are confirmed by the WHOIS lookup service. Note that not being confirmed by the WHOIS lookup service does not mean that the inference results are incorrect since the WHOIS server does not have up-to-date and complete information about ASes. We show evidences that some BGP routing table entries stem from unusual AS relationships or router misconfiguration. Furthermore, we demonstrate that inferred AS relationships have many applications including enhancing the reliability of Internet routing.</p><p>The remainder of the paper is structured as follows. Section I1 presents an overview of interdomain routing and discusses previous work on the Internet topology and routing. In Section 111, we define the types of relationships between ASes and implied export policies. We also derive routing table entry patterns resulted from the export policies. Section IV presents heuristic algorithms for inferring AS relationships. In Section V, we perform an empirical study of inferring AS relationships in Internet by using publicly available BGP routing tables. We conclude the paper in Section VI with a summary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">BACKGROUND ON INTERDOMAIN ROUTING AND RELATED WORK</head><p>In this section, we present background materia1 on the Internet routing architecture [ 171 and the use of BGP for interdomain routing [18], <ref type="bibr">[19]</ref>. We also summarize previous work on the Internet topology discovery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Internet Architecture</head><p>The Internet consists of a large collection of hosts interconnected by networks of links and routers. The Internet is divided into thousands of distinct regions of administrative domain, each of which possesses one or several autonomous systems (ASes). Examples of administratrive domain range from college campuses and corporate networks to large Internet Service Providers (ISPs) such as AT&amp; or MCI Worldcom. Each AS in the Internet is represented by a 16-bit AS number, which brings to a total of 65536 AS numbers. Not all AS numbers are assigned to administrative domains and some assigned AS numbers are not used. On January 2, 2000, there are at least 6474 ASes in use <ref type="bibr">[20]</ref>. Many ISPs possesses several ASes. For example, MCI Worldcom owns at least 143 ASes on <ref type="bibr">Dec. 10, 1997 [20]</ref>. An AS has its own routers and routing policies, and connects to other ASes to exchange traffic with remote hosts. A router typically has very detailed knowledge of the topology within its AS, and limited reachability information about other ASes. ASes interconnect at dedicated point-to-point links or public Internet exchange points ( I n s ) such as MAE-EAST or MAE-WEST. Public exchange points typically consist of a shared medium, such as a FDDI ring or an ATM switch, that interconnects routers from several different ASes. Physical connectivity at the IXP does not necessarily imply that every pair of ASes exchanges traffic with each other.</p><p>We can model the connectivity between ASes in the Internet using an AS graph G = (V, E ) , where the node set V consists of ASes and the edge set E consists of AS pairs that exchange traffic with each other. Note that the edges of AS graph represent logical relationships between ASes and do not represent the form of the physical connection. Figure <ref type="figure">I</ref> shows an example of an AS graph. The degree of an AS is the number of ASes that are its neighbors. Formally, the degree of AS U , D(u) = I{vl(u, v ) E E} 1. The degree of an AS can be a good heuristic in determining the size of the AS. In [5], AS degrees have been used to classify ASes into four levels of hierarchy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. I . An AS graph example</head><p>Each AS has responsibility for carrying traffic to and from a set of customer IP addresses. The scalability of the Internet routing infrastructure depends on the aggregation of IP addresses in contiguous blocks, calledprefixes, each consisting of a 32-bit IP address and a mask length (e.g., 1.2.3.0/24). An AS employs an intradomain routing protocol (such as OSPF or IS-IS) to determine how to reach each customer prefix, and employs an interdomain routing protocol (BGP) to advertise the reachability of these prefixes to neighboring ASes. We denote the set of prefixes that are originated from AS U by O(u), Since the commercialization of the Internet in 1995, the Internet has experienced tremendous growth in both size and complexity. The interconnection between ASes are dynamically evolving since ISPs can add or remove connections to other ASes and companies can change their Internet service providers. Furthermore, the contractual agreements between ASes can change due to ISP merging and restructuring. There are several registration services for the administration and registration of IP and AS numbers. <ref type="bibr">ARIN [ l ]</ref> is an Internet regististry that provides the WHOIS lookup service in North America, South America, the Caribbean and sub-Saharan Africa. The WHOIS service provides information about each AS such as the name and address of the admistrative domain that the AS belongs to. Other registration services include RIPE NCC, which provides services for Europe, the Middle East and parts of Africa, and APNIC, which provides services for Asia Pacific. However, answering simple questions such as which ASes belong to an ISP or which prefixes are originated from AS U is not a straightforward undertaking. There is no one-to-one relationship between AS numbers and ISPs, and networks are at times connected via multiple ISPs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Routing Policies and BGP Routing Tables</head><p>BGP is a distance-vector protocol that constructs paths by successively propagating updates between pairs of BGP speaking routers that establish BGPpeering sessions <ref type="bibr">[ 191, [18]</ref>. Each update T concerns a particular prefix, r.pre f iz, and includes the list of the ASes along the path (the ASpath), r.asqath. Each BGP speaking router originates updates for one or more prefixes, and can send the updates to the immediate neighbors via BGP sessions. The simplest distance-vector protocol would employ shortest-path routing, where each AS selects a route with the shortest AS path. However, BGP allows a much wider range of routing policies so as to honor contractual agreements that con-trol the exchange of traffic. Upon receiving an update, a router must decide whether or not to use this path according to import policies and, if the path is chosen, whether or not to propagate the update to neighboring ASes according to exportpolicies. Although routing policies are configured on each BGP speaking router, BGP speaking routers in an AS should share the same policy. For the simplicity of exposition, we assume that there is only one BGP speaking router in an AS and use the AS and its BGP speaking router interchangeably throughout this paper. The routing policies are set by manipulating update attributes including next-hop interface address (r.nezt-hop), local preference (r.Zocal-pre f), multiple-exit discriminator (rmed), and community set (r.c-set) as described in the following paragraphs.</p><p>An AS uses import policies to transform incoming route updates. These import policies include denying an update, or permiting an update and assigning a localpreference to indicate how favorable the path is. We consider a BGP session (U, U) E E between two ASes, U and U. v receives a set of route updates R from U. <ref type="bibr">Let import(u, v)</ref>[R] represent U'S update set after applying the import policy. For example, an import policy could assign r.local-pre f = 100 if AS 1 appears in T.as-path or deny any update that includes AS 2 in r.asqath. Further, BGP discards a routing update when v already appears in the AS path of the update; this is essential to avoid introducing a cycle in the AS path. That is, BGP has the following loop-avoidance rule:</p><formula xml:id="formula_0">if v E r.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>aspath, then import(l,v)[{r)] = {}</head><p>After applying the import policies for route updates from a BGP session, an AS saves all the imported updates in its BGP routing table. The AS then follows a route selection process that picks the best route for each prefix. Let B(u, d) denote the best route selected by U for prefix d. B(u, d) is selected by picking the route with the highest local-pre f, breaking ties by selecting the route with the shortest asqath. Note that local preference overrides the AS-path length. Among the remaining routes, the AS picks the one with the smallest med, breaking ties by selecting the route with the smallest intradomain routing cost. If a tie still exists, the AS picks the route with the smallest nezt-hop.</p><p>Each AS sends only its best route for a prefix to a neighbor. Export policies allow an AS to determine whether to send its best route to a neighbor and, if it does send the route, what hint it should send to its neighbor on using the route. AS U applies export policies ezpmt(v, U) to its best route set, R, for sending to a neighboring AS U. Export policies include permitting or denying a route, assigning multiple exit discriminator (to control how traffic enters its network), adding a community value to community set (to hint on what preference a neighbor should give to the route), and prepending U one or more times to AS path (to discourage traffic from entering its network by inflating the length of the AS path listing its AS number multiple times). For example, AS U could decline to advertise routes to AS v that have community 10 in the community set. Also, AS U could prepend U two times to the AS path for prefix 1.2.3.0/24 and for any route that includes AS 2 in the AS path. For any route update T , an AS always applies an implicit policy that sets r.1ocal-pr-e f and r.med to default values, assigns r.nezt-hop to U ' S interface connecting to v , and prepends U to r.asqath. Ultimately, the export policy transforms the set of updates R as expuTt(v, u)[R], which U transmits to v using a BGP session.</p><p>Each BGP speaking router keeps a BGP routing table, which stores a set of candidate routes for the router. We refer to a candidate route as a routing table entry, which contains a destination prefix, next-hop, med, local preference and AS path of the route. For the sake of simplicity, we describe the route table entries for a fixed prefix d. The routing table entry in AS U for destination d is a route with empty AS path, denoted as e(u,d), if U originates prefix d. Otherwise, the routing table entries in U for d depend on the best route of its neighboring AS U , B ( v , d ) . as well as the import policies of U from U and the export policies of U to U. Formally, the routing table entries of U for destinaton prefix d Routing policies are constrained by the commercial contractual agreements negotiated between administrative domain pairs. These contractual agreements include customer-provider, peering, and mutual transit. A customer pays its provider for connectivity to the rest of the Internet. A pair of peers agree to exchange traffic between their respective customers free of charge. A mutual-transit agreement allows a pair of administrative domains to provide connectivity to the rest of the Internet for each other. This mutual-transit agreement is typically between two small administrative domains such as local ISPs or universities who are located close to each other and who can not afford additional Internet services for better connectivity. In addition, an AS can specify a diverse set of routing policies including its preference on route selection and filtering. The routing policies are manually configured in BGP speaking routers by administrative domain operators. The potential for the various policies to conflict with and contradict one another is enormous [ 151.</p><formula xml:id="formula_1">Routing_Table(u, d) = 4% 4 (1) if d E O(u) U(u,v)EEimpWt(v, u)[exPWt(u, v)[B(U, d)]] { otherwise</formula><p>To address these challenges, Internet Routing Registries (IRR), a distributed database of routing registries, was created.</p><p>The aim of IRR is to act as a repository of routing policies and to perform consistency checking on the registered information. However, many ISPs are not willing to reveal their policies and even if they are, Routing Policy Specification Language (WSL) [21], [22] has only been recently standardized. ISPs are still in the early stage of migrating to the new standard. As a result, information on IRR is far from complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Related Work</head><p>The increasing importance and complexity of the Internet routing infrastructure has sparked interest in understanding Internet topology and its effect on the end-to-end performance. With the exception of [5], all of the aforementioned work do not have explicit notion of AS hierarchy. To the best of our knowledge, all studies have assumed that the connectivity is equivalent to the reachability and there is no explicit notion of AS relationships in the topology characterization. Our paper is the first study that explores AS relationships, which is an inherent aspect of the policy-based Internet routing structure. The information about AS relationships is crucial in fully understanding the structural properties of the Internet. Further, AS relationships can help to effectively place measurement servers and better approximate the end-to-end distance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="111.">AS RELATIONSHIPS AND ROUTING TABLE ENTRY PATTERNS</head><p>Our algorithm for inferring AS relationships is based on the fact that ASes set up their export policies according to these relationships and on the resulting patterns on BGP routing table entries. In this section, we describe the annotated AS graph representation, the implied export policies, and the resulting patterns on routing table entries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Annotated AS Graph and Selective Export Policies</head><p>The relationships between ASes arise from contracts that define the pricing model and the exchange of traffic between the administrative domains that the two ASes belong to. Two ASes that exchange traffic have a customer-to-provider, provider-tocustomer, peer-to-peer, or sibling-to-sibling relationship. In a customer-to-provider or provider-to-customer relationship, the customer typically belongs to a smaller administrative domain that pays a larger administrative domain for access to the rest of the Internet. The provider is an AS that belongs to the larger administrative domain. In a peer-to-peer relationship, the two peers typically belong to administrative domains of comparable size and find it mutually advantageous to exchange traffic between their respective customers. Two ASes have a sibling-tosibling relationship if they belong to the same administrative domain or to the administrative domains that have a mutual-transit agreement.</p><p>We propose to represent AS relationships by an annotated AS graph. Although there might be multiple BGP sessions between router pairs belonging to two ASes, the relationship between the two ASes should be uniquely defined since the routers within an AS share the same policies. An annotated AS graph is a partially directed graph whose nodes represent ASes and whose edges are classified into provider-to-customer, customerto-provider, peer-to-peer and sibling-to-sibling edges. Furhtermore, only edges between providers and customers are directed. When traversing an edge from a provider to a customer, we refer to the edge as a provider-to-customer edge. When traversing an edge from a customer to a provider, we refer to the edge as a customer-to-provider edge. We call the edge between two ASes that have a peer-to-peer relationship a peer-tu-peer edge and the edge between two ASes that have a sibling-to-sibling relationship a sibling-to-sibling edge. Figure <ref type="figure">2</ref> shows an example of an annotated AS graph. An AS may have multiple customers, providers, peers and siblings. We define customer(a), peer(a), sibling(a), and prmider(a) as the set of customers, peers, siblings, and providers of a, respectively.</p><p>provider-to -customex edge peer-to-peer edge sibling-tosibling edge . . . . . . . . .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 2. An Anotated AS Graph</head><p>The AS relationships translate into the following rules that govern BGP export policies [23], [3]:</p><p>Exporting to a provider: In exchanging routing information with a provider, an AS can export its routes and the routes of its customers and siblings, but can not export routes learned from other providers or peers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Exporting to a customer:</head><p>In exchanging routing information with a customer, an AS can export its routes and the route of its customers and siblings, as well as routes learned from its providers and peers.</p><p>Exporting to a peer: In exchanging routing information with a peer, an AS can export its routes and the routes of its customers and siblings, but can not export the routes learned from other providers or peers.</p><p>Exporting to a sibling: In exchanging routing information with a sibling, an AS can export its routes and routes of its customers and siblings, as well as routes learned from its providers and peers. Note that although exporting policies are same for providers and peers ( or customers and siblings), provider-customer rela-tionships are symetric, which is the key in distinguish providercustomer relationships from peer-peer (or sibling-sibling) relationships. In summary, an AS selectively provides transit services for its neighboring ASes. Let first(r.as-path) denote the first AS in r.as-path. An AS sets up its export policy according to the following rule. Selective Export Rule : an AS does not provide transit services between any two of its providers and peers. Formally, consider AS u and AS w E provider(u) U peer(u). For each best route</p><formula xml:id="formula_2">r of U , if first(r.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>as-path) E prmider(u) U peer(u), then e z p m t ( w , u ) [ { r } ]</head><p>= {}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Routing Table Entry Patterns</head><p>The selective export rule indicates that a BGP routing table entry should have a certain pattern. Before we explain the pattern, we present a lemma that infers export policies from routing table entries. This lemma aids us to derive the routing table entry patterns. We omit the proof here. . . , U,), then we conclude that for 1 5 i 5 n , (a) ui selects a route with as-path (ui+l, . . . , U,) as the best route to prefix d, i.e., B(ui, d).as-path = (ui+l,. . . ,U,).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma</head><p>(b) ui exports its best route to ui-1, i.e.,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ezpmt(ui-l,'Ili)[{B('lli, 411 # {}*</head><p>In the next theorem, we show that the selective export policies and Lemma 111.1 ensure that the AS path of an BGP routing table entry has the property Valley-free: after traversing a provider-to-customer or peer-topeer edge, the AS path can not traverse a customer-to-provider or peer-to-peer edge. Formally, an AS path (u1 , 212, . . . , U,) is valley-free iff the following conditions hold true.</p><p>A provider-to-customer edge can be followed by only provider-to-customer or sibling-to-sibling edges: If (ui, ui+l) is a provider-to-customer edge, then ( u j , uj+l) must be either a provider-to-customer or a sibling-to-sibling edge for any i &lt; j &lt; n .</p><p>A peer-to-peer edge can be followed by only provider-tocustomer or sibling-to-sibling edges: If (ui, ui+l) is a peer-topeer edge, then ( u j , ~j + ~) must be either a provider-to-customer or a sibling-to-sibling edge for any i &lt; j &lt; n .</p><p>For example, in Figure <ref type="figure">3</ref>, AS paths (1,2, 3) and (1,2,6,3) are valley-free while as-path (1,4, 3) and (1,4,5,3) are not valleyfree. Note that the selective export rule ensures that BGP routing table entries contain only valley-free AS paths. For example, if AS path (1,4,3) appears in a BGP routing table, then AS 4 provides transit services between its two providers: AS 1 and AS 3. This violates the selective export rule. Formally, we have the following theorem. Theorem 111.1: If all ASes set their export policies according to the selective export rule, then the AS path in any BGP routing table entry is valley-free.</p><p>We omit the proof of the theorem. The valley-free property derived from Theorem 111.1 enables us to identify patterns for tionships are asymetric and peer-peer (or sibling-sibling) rela-BGP routing table entries. We have a corollary that indicates such patterns. But first, we define notations that simplify the description of the routing table entry patterns. Downhill Path: a sequence of edges that are either providerto-customer or sibling-to-sibling edges. Formally, a path ( ~1 , 2 1 2 , .</p><p>. . , u,,-1, U,) is a downhill path iff (ui, ui+l) is either a provider-to-customer or a sibling-to-sibling edge for all i &lt; n.</p><p>Uphill Path: a sequence of edges that are either customerprovider or sibling-to-sibling edges. Formally, a path (UI, 212,. . . ,U,) is an uphill path iff (ui, ui+l) is either a customer-to-provider or a sibling-to-sibling edge for all i &lt; n.</p><p>Corollary III.1: An AS path of a BGP routing table entry has one of the following patterns: (a) an uphill path, (b) a downhill path, (c) an uphill path followed by a downhill path, (d) an uphill path followed by a peer-to-peer edge, (e) a peer-to-peer edge followed by a downhill path, or (0 an uphill path followed by a peer-to-peer edge, which is followed by a downhill path.</p><p>It is easy to verify that any other types of AS paths are not valley-free. Corollary 111.1 implies that an AS path can be partitioned into either:</p><p>(a) the maximal uphill path, the peer-to-peer edge and the maximal downhill path in order or (b) the maximal uphill path and the maximal downhill path in order, where the maximal uphill path and the maximal downhill path are defined as follows.</p><p>Maximal uphill path: the longest uphill path in the AS path.</p><p>Formally, (211, . . . ,U,) is the maximal uphill path of AS path (ul,. . . ,U,) iff (211,. . . ,ui) is an uphill path and ( u i , u i + ~) is a provider-to-customer or peer-to-peer edge.</p><p>Maximal downhill path: the remaining AS path after removing the maximal uphill path and the peer-to-peer edge. Formally, ( u j , . . . , U,) is the maximal downhill path of AS path (ul,. . . ,U,) iff (uj, . . . , U,) is a downhill path and (uj-1, u j ) is a peer-to-peer edge or belongs to the maximal uphill path. Note that any one or both of the maximal uphill path and the maximal downhill path of an AS path can be empty. An AS path can have an uphill top provider and a downhill top provider, where the uphill top provider is the last AS in its maximal uphill path and the downhill topprovider is the first AS in its maximal downhill path. Note that an AS path's uphill top provider and downhill top provider are the same AS if there is no peer-to-peer edge in the AS path. If the uphill and downhill top providers are known, then we can infer the relationship between any consecutive pair of the AS path. Therefore, identifying the uphill and downhill top providers is the key in inferring AS relationships.</p><p>The goal of this paper is to produce an annotated AS graph by taking advantage of BGP routing table entry patterns. In other words, given a BGP routing table RT, we derive an annotated AS graph G that is consistent with BGP routing table RT. In the next two sections, we present heuristic algorithms that use a BGP routing table to infer AS relationships and show experimental results derived from the Internet BGP routing tables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Iv. HEURISTIC ALGORITHMS FOR INFERRING AS RELATIONSHIPS</head><p>In this section, we present heuristic algorithms for inferring AS relationships. Our algorithms are based on the intuition that a provider typically has a larger size than its customer does and the size of an AS is typically proportional to its degree in the AS graph. The uphill (or downhill) top provider of an AS path should be the AS that has the highest degree among all ASes in its maximal uphill (or downhill) path. Let the top provider of an aspath to be the AS that has a higher degree between the uphill and downhill top provider. Therefore, the top provider of an AS path is the AS that has the highest degree among all ASes in the AS path.</p><p>For the sake of simplicity, we do not identify peer-to-peer edges from provider-to-customer and sibling-to-sibling edges. Now, we can infer that consecutive AS pairs on the left of the top provider are customer-to-provider or sibling-to-sibling edges, and consecutive pairs on the right of the top provider are provider-to-customer or sibling-to-sibling edges. We first show algorithms that classify AS relationships into provider-tocustomer and sibling-to-sibling edges in Section IV-A, and then present an algorithm that identifies AS pairs who can have peerto-peer relationships in Section IV-B.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Algorithms for Inferring Provider-to-Customer and Sibling-</head><p>In this section, we first present a basic algorithm for inferring provider-to-customer and sibling-to-sibling relationships in Section IV-A. 1. We then refine this algorithm in Section 1V-A.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. 1 A Basic Algorithm</head><p>Our basic heuristic algorithm goes through the AS path of each routing table entry. It finds the highest degree AS and lets the AS be the top provider of the AS path. Knowing the top provider, we can infer that consecutive AS pairs on the left of the top provider have a customer-to-provider or sibling-to-sibling relationship, and consecutive AS pairs on the right of the top provider have a provider-to-customer or sibling-to-sibling relationship. If an AS pair ( u l , u 2 ) is on the left of the top provider of an AS path, then u 2 provides transit services for u1, and if an AS pair ( u ~, u z ) is on the right of the top provider of an AS path, then u1 provides transit services for uz. Therefore, an AS pair (211, ~2 ) has a provider-to-customer (or customer-to-provider) relationship if u1 (u2) provides transit services for u2 (ul). An AS pair has a sibling-to-sibling relationship if the pair provides transit services for each other.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>to-Sibling Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Basic Algorithm:</head><p>Input: BGP routing table RT Output: Annotated AS graph G Phase 1: Compute the degree for each AS 1 .For each aspath (u1, uz, . . . , tin) in RT.</p><p>2. for each i = 1,. . . , n -1,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head><p>neigbhor 3. fori = 1 ,..., j -1 ,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>transient <ref type="bibr">[ui, ui+l]</ref>=l 5. f o r i = j ,..., n-1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">transient[ui+l, ui]=l</head><p>Phase 3: Assign relationships to AS pairs 1.For each AS path (u1, u2, . . . ,U,) in RT, 2. f o r i = 1 ,..., n -1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>relationship <ref type="bibr">[ui, ui+1]</ref> = sibling-to-sibling 5.</p><p>else if transient[ui+l, ui]=l 6.</p><p>relationship [ui, ui+~]  This leads to a three-phase heuristic algorithm for inferring provider-to-customedpeer-to-peer and sibling-to-sibling relationships. The first phase parses the routing table and figures out the degree of each AS. The second phase parses each entry of the routing table. It first identifies the top provider and then assigns consecutive AS pairs on the left of the top provider with a transient relationship and consecutive AS pairs on the right of the top provider with a transient relationship. The third phase finalizes the relationship between AS pairs. An AS pair has a siblingto-sibling relationship if and only if the pair provides transit services for each other. An AS pair (211,212) has a provider-tocustomer (or customer-to-provider) relationship if and only if u1 (u2) provides transit services for '112 (u1) and 212 (211) provides transit services for u1 (u2) . Figure <ref type="figure" target="#fig_3">4</ref> shows the basic algorithm in details.</p><p>The Basic algorithm has the running time complexity of O ( N ) , where N is the total number of consecutive AS pairs in the routing table. As we will see later, we evaluate the algorithm by using the publicly available routing table, in which there are 1 million route entries and N is over 2.6 million. Therefore, it is important to construct a linear time algorithm in N .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 A Refined Algorithm</head><p>The Basic algorithm bases on the heuristic that the top provider has the highest degree among all ASes in the AS path. It is possible that the top provider of an AS path is not the AS that has the highest degree. Therefore, some route entries might infer</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Refined Algorithm:</head><p>Input: BGP routing table RT Output: Annotated AS graph G Phase 1: Same as Phase 1 in the basic algorithm Phase 2: Count the number of routes that infers an AS pair's relationship 1.For each AS path (u1, u2,. . . , U,) in RT, 2. find the smallest j such that degree[uj]=maxl &lt;is,, degree <ref type="bibr">[ui]</ref> 3. f o r i = 1 ,..., j -1,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>transient <ref type="bibr">[ui, ui+l]</ref>  the relationship of an AS pair incorrectly. To reduce the possibility of incorrect inference, we propose a refined algorithm that determines AS relationships by letting each routing table entry to vote on the relationship of an AS pair. In the refined algorithm, if a sibling-to-sibling relationship is concluded from only one entry, then we ignore that entry. One exception is that if a siblingto-sibling relationship is inferred from only two entries, then we infer that the AS pair has a sibling-to-sibling relationship.</p><p>The refined algorithm infers AS relationships as follows. If all routing table entries agree that an AS pair has a providerto-customer (or customer-to-provider) relationship, then the AS pair has the relationship. If only one routing table entry infers that an AS pair has a provider-to-customer (or customer-toprovider) relationship and more than one entry infer that the AS pair has a customer-to-provider (or provider-to-customer) relationship, then the AS pair has a customer-to-provider (providerto-customer) relationship. For all other cases, the AS pair has a sibling-to-sibling relationship. Note that unlike the basic algorithm, the refined algorithm ignores some routing table entries. Figure <ref type="figure" target="#fig_4">5</ref> shows the refined algorithm in details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. A Heuristic Algorithm for Inferring Peer-to-Peer Relationships</head><p>Both the Basic and Refined algorithms classify AS relationships into provider-to-customer or sibling-to-sibling relationships. In this section, we present a heuristic algorithm for identifying peer-to-peer relationships. According to Corollary 111.1, a peer-to-peer edge can be only between a top provider and one of its neighboring ASes in an AS path. Therefore, if an AS pair appears in the maximal uphill (or downhill) path and neither of the AS pair is a top provider, then the AS pair can not have a peer-to- peer relationship. Therefore, the top provider can have a peer-topeer relationship with its left or right AS in the AS path. Furthermore, an AS path has at most one consecutive AS pair that has a peer-to-peer relationship. Therefore, we assign a peer-to-peer relationship between the top provider and its neighboring AS in the AS path as follows. If the top provider has a sibling-to-sibling relatioship with its one of the neighbors, then the top provider has a peer-to-peer relationship with the other neighbor. Otherwise, since a peer-to-peer relationship is typically between ASes of comparable sizes, we use the heuristic that a peer-to-peer edge is between the top provider and its neighboring AS (in the AS path) that has a higher degree. Moreover, we use the heuristic that the degrees of two peers do not differ significantly. Specifically, we assume that the degrees of the two ASes that have a peer-to-peer relationship do not differ by more than R times, where R is a fixed number that depend on the current state of the Internet. The Final algorithm infers peer-to-peer relationships as follows. Phase 1 coarsely classifies AS pairs into having providerto-customer or sibling-to-sibling relationships. Phase 2 identifies all AS pairs that can not have peer-to-peer relationships. Finally, Phase 3 infers peer-to-peer relationships from the rest of connected AS pairs as long as the pair degrees do not differ by more than R times. Figure <ref type="figure">6</ref> shows the Final algorithm in details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>v. INFERRING AS RELATIONSHIPS I N THE INTERNET</head><p>In this section, we present experimental results of inferring AS relationships in Internet. We use the publicly available routing </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experimental Results</head><p>We implement the Basic, Refined, and Final algorithms using the perl programming language. For the Final algorithm, we use the Basic algorithm for inferring sibling-to-sibling relationships and Iet the limit of the ratio between the degrees of two peer ASes, R, be infinite or 60. We will see in the next subsection that fine-tuning R to be 60 can significantly improve the inference result. We run the algorithms for the BGP routing tables from 199919127,200011/2 and 20001319. The total number of edges in the AS graph, sibling-to-sibling edges inferred by both Basic and Refined, and the total number of peer-to-peer edges inferred by Final are shown in Table <ref type="table">I</ref>.</p><p>Note that the total number of edges in the AS graph is inconsistent with the publicly available data at <ref type="bibr">[20]</ref>. In <ref type="bibr">[20]</ref>, AS summary data indicates that there are 13895 edges on 20001112 and 12468 edges on 199919127. Because of the AS-prepend operation in BGP, an AS can appear twice in a routing table entry. The perl script <ref type="bibr">[20]</ref> overcounts the number of edges by including self edges (A self edge is an edge between an AS and itself) when parsing the BGP routing table. In our perl programs, we eliminate self edges.</p><p>These BGP routing tables contain almost 1 million route entries. From the BGP routing table on 199919127, the Basic and Final algorithms infer that among 11288 AS graph edges, there are 10745 provider-to-customer edges, 149 sibling-to-sibling edges, and 884 peer-to-peer edges. By using the Refined algorithm. the number of sibling-to-sibling edges is reduced to 124 and by using the Final algoirthm with R = 60, the number of peer-to-peer edges is reduced to 733. From the BGP routing ta- ble on 20001112, the Basic and Final algorithms infer that among 1257 1 AS graph edges, there are 12013 provider-to-customer edges, 186 sibling-to-sibling edges, and 372 peer-to-peer edges. By using the Refined algorithm, the number of sibling-to-sibling edges is reduced to 135 and by using the Final algoirthm with R = 60, the number of peer-to-peer edges is reduced to 668.</p><p>From the BGP routing table on 20001319, the Basic and Final algorithms infer that among 13800 AS graph edges, there are 13661 provider-to-customer edges, 203 sibling-to-sibling edges, and 836 peer-to-peer edges. By using the Refined algorithm, the number of sibling-to-sibling edges is reduced to 157 and by using the Final algoirthm with R = 60, the number of peer-topeer edges is reduced to 713. Therefore, for all three routing tables, we can find a consistent view of AS relationships which has more than 90.5% provider-to-customer edges, less than 1.5% of sibling-to-sibling edges and less than 8% of peer-to-peer edges. Note that the number or the percentage of sibling-to-sibling relationship is increasing. It might be caused by the increasing number of complex AS relationships and ISP mergers.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Verijication of Inferred Relationships by AT&amp;T</head><p>Although there is no publicly available information about AS relationships, we verify our inferred relationships by comparing with AT&amp;T internal information. We compare our data for March 9,2000 with that of AT&amp;T Common IP Backbone in the same day.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table I1 compares the inference results from Basic and</head><p>Final(R = CO) algorithms with AT&amp;T internal information.</p><p>From the table, we see that 99.8% of our inferred customers are confirmed by the AT&amp;T internal information. 76.5% of our inferred peers are confirmed by the AT&amp;T internal information. 20% of our inferred siblings are confirmed by the AT&amp;T internal information. Out of our inference results, 96.3% of inference results are confirmed by the AT&amp;T internal information. Note we do not necessarily have all AT&amp;T's neighbors from the routing table in Route Viewer since AT&amp;T announces only its best route to outside and some of its announced are aggregate routes. Out of neighbors from the AT&amp;T list, 20% ASes do not exist in our adjacence list and most of these ASes are customers of AT&amp;T.</p><p>Table <ref type="table" target="#tab_11">111</ref> compares the inference results from Refined and Final(R = 00) algorithms with AT&amp;T internal information.</p><p>Using Refined algorithm, we improve the inference results on sibling-to-sibling relationships. Table IV compares the inference results from Basic and Final(R = 60) algorithms with AT&amp;T internal information. Using the heuristic that peers are typically of comparable sizes by setting a reasonable value for R, we improve the inference results on peer-to-peer relationships significantly.</p><p>1 Our Inference I AT&amp;T Information I Percentage of ASes 1  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Verijications by the WHOIS service</head><p>We verify our inferred sibling-to-sibling relationships by checking with the WHOIS lookup service. Since the WHOIS lookup service supplies the name and address of the company that owns an AS, we can confirm that an AS pair has a siblingto-sibling relationship if the two ASes belong to the same company or two merging companies (such as AT&amp;T and Cerfnet). Further, we also confirm that an AS pair has a sibling-to-sibling relationship if the ASes belong to two small companies that are located in the same city (which increases the likelihood that they have a mutual-transit agreement). We manually query the WHOIS lookup service and confirm 101 of 186 inferred siblingto-sibling relationships for the more recent data, i.e., 2000/1/2 data. This is more than 50% of the inferred sibling-to-sibling relationships. Note that other unconfirmed sibling-to-sibling re-lationships might still have sibling-to-sibling relationships since the WHOIS lookup service might be out of date and we do not have sufficient information about ISP mergers.</p><p>The Refined algorithm reduces the number of sibling-tosibling relationships by ignoring some of the routing table entries as shown in Table <ref type="table">I</ref>. For 1999/9/27 data, the Refined algorithm infers 124 sibling-to-sibling edges by ignoring only 25 route entries. For 2000/1/2 data, the Refined algorithm infers 135 sibling-to-sibling edges by ignoring only 51 route entries. For 2000/3/9 data, the Refined algorithm infers 157 sibling-tosibling edges by ignoring only 46 route entries. This encourages us to look into routing table entries that infer unconfirmed sibling-to-sibling relationships and analyze routes that might mislead us in inferring AS relationships.</p><p>We analyze the routes that contribute to the inference of unconfirmed sibling-to-sibling relationships. Our goal is to find the possible patterns for these routes and perhaps to use the patterns to increase the accuracy of then inference. We report here several possible reasons behind the inference of unconfirmed sibling-tosibling relationships.</p><p>1. Router Configuration Typo: some router prepends its AS num ber by explicitly specifying the AS numbers to prepend. A typo in the configuration can result routing table entries that violate the loop-avoidance rule defined in BGP. For example, in AS path (7018 3561 7057 7075 7057), AS7057 appears twice and does not appear consecutively. This might be the result of the router configuration typo in AS7057. 2. Misconfiguration of small ISPs: some small ISPs do not follow the Selective export rule in their router configuration. For example, AS path (1239 11116 701 7018) has Sprint (AS1239) uses a small ISP in California (AS11116) to get to AT&amp;T (AS7018) via MCI (AS701). According to the AS graph, MCI and Sprint are directly connected although the route does not use the direct connection. It is likely that AS1 11 16 is a customer of both AS701 and AS1239. Therefore, this route might be caused by the misconfiguration of AS 11 116 that announces its provider route to another provider. 3. Unusual AS refationships: some AS pairs have their relationships defined at the prefix level. For example, in AS path (1239 3561 2856 701 702 1849 9090), Sprint (AS1239) uses AS3561 and AS2856 to get the route of MCI (AS701) instead of using the direct link to MCI (AS701). Note that AS2856, AS1849 and AS9090 are European ASes. This might be the result of specifically defined relationship for prefixes in Europe. 4. Inaccuracy of the heuristic: the top provider does not have the highest degree. For example, in AS path (3333 7905 5727 1327). although AS3333 has the highest degree, it might not be the top provider since AS5727 (AT&amp;T) is likely to be the top provider. This scenario is resulted from the fact that AS3333 is an European ISP that has many customers.</p><p>Reasons 1.2 and 3 suggest that we have to ignore some routing table entries in inferring AS relationships. It is not clear, however, how to identify these entries. Reason 4 hints that we can ignore some routing table entries. However, it can not be done without the knowledge of the ISPs that each AS belongs to. Therefore, it is a challenging task to increase the accuracy of the AS relationship inference with only BGP routing tables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>Interdomain routing policies are constrained by the commercial contractual relationships between administrative domains. As a result, AS relationships are an inherent aspect of the Internet routing structure. We present heuristic algorithms that infer AS relationships from BGP routing tables, and perform experimental studies of AS relationships in the Internet. We verify our inferred relationships with both AT&amp;T internal information and the WHOIS lookup service. 99.8% of our inferred relationships between AT&amp;T and its neighboring ASes are confirmed by the AT&amp;T internal information. More than 50% of inferred siblingto-sibling pairs can be confirmed by the data from the WHOIS lookup service.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Previous work consists of discovering the Internet topology, constructing the Internet distance map, and identifying inherent structural properties of the Internet. Several studies [6], [9] present heuristics on discovering the router adjacencies by effectively using the traceroute tool. Motivated by important problems such as the mirror site placement, Jamin and Theilmann et a1 study the construction of the distance map by estimating the end-to-end distance using strategically placed measurement servers [7], [8], [lo]. Faloutsos et a1 identify the power-law properties of the Internet connectivity at both router and AS levels [4]. In [5], inter-AS connectivity is characterized by a hierarchy of ASes, where ASes are classified into four levels by the degree of the AS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Il1.1: If uo's BGProuting tablecontains an entry with AS path (u1,u2, . . . ,U,) for destination prefix d, i.e., there is an entry e such that e E Routing_Table(uo,d) and e.as-path = ( u 1 , ~2 , .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig</head><label></label><figDesc>Fig. 3. AS p a t h ( I .2, 3 ) and (1. 2, 6, 3) are valley-free while ASpathr ( I , 4, 3 )and (1, 4, 5, 3) are not valley-free.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Baric Heuristic Algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Refined Heuristic Algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>2.24.0121: AS path (1740 1) via nexthop 134.24.127.3, AS path (5459 5413 1) via nexthop 194.68.130.254, etc</head><label></label><figDesc>We show a router's BGP routing table entries for destination prefix 4.2.24.0121 below. The AS has five candidate routes to 4.. Note that the third cadidate route has AS path (1849 702 702 l), where AS 702 appears twice consecutively. This is resulted from the fact that AS 702 appends its AS number twice before exporting to AS 1849. Since we are interested in inferring AS relationships in this paper, the extra appearanceof an AS number does not give us additional information in this context. Therefore, for the sake of simplicity, we assume that the AS path in the BGP routing table entry is proprocessed so that no AS appears more than once thoughout this paper.</figDesc><table><row><cell>Network</cell><cell>N e x t Hop</cell><cell>P a t h</cell></row><row><cell>i4.2</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>.24.0/21 134.24.127.3 1740 1 194.68.130.254 5459 5413 1 158.43.133.48 1849 702 702 1 193.0.0.242 3333 286 1 144.228.240.93 1239 1</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Use either basic or refined algorithm to coarsely classify AS pairs' relationships Phase 2: Identify AS pairs that can not have a peer-to-peer relationship</head><label></label><figDesc>Input: BGP routing table RT</figDesc><table><row><cell cols="2">Final Algorithm:</cell></row><row><cell cols="2">Output: Annotated AS graph G</cell></row><row><cell cols="2">Phase 1: 1.For each AS path (211 ,212,. . . , U,) in RT,</cell></row><row><cell cols="2">2. find the AS U, such that</cell></row><row><cell cols="2">degree[uj]=maxl &lt;isn degree[u,] 3. fori = 1 ,..., j -2 ,</cell></row><row><cell cols="2">4. 5. f o r i = j + l , ..., n -1 , notpeering[ui, ui+l]=l</cell></row><row><cell>6.</cell><cell>notpeering[ui, ui+l]=l</cell></row><row><cell cols="2">7. if relationship[uj-l, uj]#sibling-to-sibling</cell></row><row><cell>9.</cell><cell>notpeering[uj, uj+ll= 1</cell></row><row><cell cols="2">10. else</cell></row><row><cell>11.</cell><cell>notpeering[uj-1,uj]= 1</cell></row><row><cell cols="2">Phase 3:</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Assign peer-to-peer relationships to AS pairs 1</head><label></label><figDesc>.For each AS path ( q , uz, . . . , Un) in RT,</figDesc><table><row><cell></cell><cell>and relationship[uj, uj+l]# sibling-to-sibling</cell></row><row><cell cols="2">2. for j=1. ..., n-1,</cell></row><row><cell>3.</cell><cell>if notpeering[uj,uj+ll# 1</cell></row><row><cell></cell><cell>and degree[uj]ldegree[uj+ll&lt; R</cell></row><row><cell></cell><cell>and degree[uj]ldegree[uj+l]&gt; 1/R</cell></row><row><cell>4.</cell><cell>relationship[uj, uj+l] = peer-to-peer</cell></row><row><cell></cell><cell>Fig. 6. Fiml Algorithm</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>table from the Route Viewer router in Oregon [ 161, which has the most complete view of the current Internet. The BGP routing table in the Router Viewer router closely captures the current state of the Internet by establishing BGP peering sessions with 22 ISPs at 24 locations. For the detailed description of the Route Viewer server, see [ 161. TheRoute Viewer server collects the BGP routing table once every night [20].</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head></head><label></label><figDesc>Our Inference I AT&amp;T Information I Percentage of ASes I</figDesc><table><row><cell>I</cell><cell cols="4">TABLE I Inference Results Basic (Percentage) (Ignored Entries) 11288 149 (1.3%) 124 (25) 12571 186 (1.47%) 135 (5 1) 1227596 13800 203 (1.47%) 968674 936058 157 (46) f Entries 1999/9/27 2000/1/2 2000/3/9 -Customer I Customer I 99.8% I Peer I 0.2% .-&gt; 76.5% Customer 23.5%</cell><cell>[R = 001 (Percentage) [R = 601 (Percentage) 884 (7.8%) 733 (6.5%) 838 (6.7%) 668 (5.3%) 713 (5.7%) 857 (6.2%)</cell></row><row><cell></cell><cell>Sibling</cell><cell>Sibling</cell><cell></cell></row><row><cell></cell><cell cols="2">Peer ~~ I Customer Nonexistent I Customer</cell><cell>60% .. .~ I 20% I 95.6%</cell></row><row><cell></cell><cell>I</cell><cell>I Peer</cell><cell>I 4.4%</cell><cell>I</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Peer</cell><cell>0.2%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Peer</cell><cell>Peer</cell><cell>100%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Sibling Y</cell><cell>Sibline Y</cell><cell>20%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Peer</cell><cell>60%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Customer</cell><cell>20%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Nonexistent</cell><cell>Customer</cell><cell>95.6%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Peer</cell><cell>4.4%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>TABLE I1 Comparing inference resultsfrom Bmic and Final(R = 00) with AT&amp;T internal information</head><label>I1</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>TABLE 111 Comparing inference resultsfrom Refined and Final(R = 00) with AT&amp;T internal information</head><label>111</label><figDesc>Our Inference 1 AT&amp;T Information 1 Percentage of ASes</figDesc><table><row><cell>Customer</cell><cell>I Customer</cell><cell>1 99.8%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>TABLE IV Comparing inference resultsfrom Basic and Final(R = 60) with AT&amp;T internal information</head><label></label><figDesc></figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. The author would like to thank Jennifer Rexford and Toel Gottlieb for providing AT&amp;T information and helpful comments on the paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Interconnection, peering and settlements-Part I</title>
		<author>
			<persName><forename type="first">G</forename><surname>Huston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internet Protocol Journal</title>
		<imprint>
			<date type="published" when="1999-03">March 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interconnection, peering and settlements-Part 11</title>
		<author>
			<persName><forename type="first">G</forename><surname>Huston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internet Protocol Journal</title>
		<imprint>
			<date type="published" when="1999-06">June 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On power-law relationships of the lntemet topology</title>
		<author>
			<persName><forename type="first">M</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM</title>
		<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="1999-08">August 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An analysis of Intemet inter-domain topology and route stability</title>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Reddy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1997-04">April 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Heuristics for lntemet map discovery</title>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tangmunarunkit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000-03">March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Dynamic distance maps of the Intemet</title>
		<author>
			<persName><forename type="first">W</forename><surname>Theilmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rothermel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000-03">March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On the placement of lntemet instrumentation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jamin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Raz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shavitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000-03">March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Discovering Intemet topology</title>
		<author>
			<persName><forename type="first">R</forename><surname>Siamwalla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">tech. rep</title>
		<imprint>
			<date type="published" when="1999-05">May 1999</date>
		</imprint>
	</monogr>
	<note>Comell</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An architecture for a global lntemet host distance estimation service</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jamin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Paxson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gryniewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1999-03">March 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The end-toend effects of Intemet path selection</title>
		<author>
			<persName><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hoffman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Snell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rickard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM</title>
		<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="1999-08">August 1999. December 19</date>
		</imprint>
	</monogr>
	<note>Mapping the lntemet with traceroute. in Broadwatch Magazine</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Experimental study of lntemet stability and wide-area network failures</title>
		<author>
			<persName><forename type="first">C</forename><surname>Labovitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ahuja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jahanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. International Symposium on Fault-Tolerant Computing</title>
		<meeting>International Symposium on Fault-Tolerant Computing</meeting>
		<imprint>
			<date type="published" when="1999-06">June 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">End-to-end routing behavior in the Intemet</title>
		<author>
			<persName><forename type="first">V</forename><surname>Paxson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEUACM Trans. Networking</title>
		<imprint>
			<date type="published" when="1997-10">October 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Netdb 1P network configuration debugger/database</title>
		<author>
			<persName><forename type="first">A</forename><surname>Feldmann</surname></persName>
		</author>
		<ptr target="http://www.antc.uoregon.edu/route-vigws!" />
	</analytic>
	<monogr>
		<title level="m">AT&amp;T Somare Symposium</title>
		<imprint>
			<date type="published" when="1999-09">September 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Internet Routing Architectures</title>
		<author>
			<persName><forename type="first">B</forename><surname>Halabi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>Cisco Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Inter-Domain Routing in the Internet</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BGP</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<date type="published" when="1999">1999</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">A border gateway protocol 4 (BGP-4):&apos; Request for Comments 1771</title>
		<author>
			<persName><forename type="first">T</forename><surname>Rekhter</surname></persName>
		</author>
		<author>
			<persName><surname>Li</surname></persName>
		</author>
		<ptr target="http://moat.nlanr.net/AS/" />
		<imprint>
			<date type="published" when="1995-03">March 1995</date>
		</imprint>
		<respStmt>
			<orgName>National Laboratory for Applied Network Research</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Using RPSL in practice</title>
		<author>
			<persName><forename type="first">D</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Orange</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Prior</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Alaettinoglu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-08">August 1999</date>
		</imprint>
	</monogr>
	<note>Request for Comments 2650</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Routing policy specification language (RPSL)</title>
		<author>
			<persName><forename type="first">C</forename><surname>Alaettinoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Villamizar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gerich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Kessens</surname></persName>
		</author>
		<author>
			<persName><forename type="middle">T</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bates</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Karrenberg</surname></persName>
		</author>
		<author>
			<persName><surname>Terpstra</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-06">June 1999</date>
		</imprint>
	</monogr>
	<note>Request for Comments 2622</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Scalable router configuration for the Internet</title>
		<author>
			<persName><forename type="first">C</forename><surname>Alaettinoglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pror. IEEE K 3 N</title>
		<imprint>
			<date type="published" when="1996-10">October 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Persistent route oscillations in inter-domain routing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Varadhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Eshin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996-02">February 1996</date>
			<publisher>USUISI</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. 96-631</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An analysis of BGP convergence properties</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">G</forename><surname>Griffin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Wilfong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM</title>
		<meeting>ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="1999-09">September 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A stable lntemet routing without global coordination</title>
		<author>
			<persName><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMETRICS</title>
		<meeting>ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="2000-06">June 2000</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
