<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">FIFO can be Better than LRU: the Power of Lazy Promotion and Quick Demotion</title>
				<funder ref="#_Bx2sWhx #_nyEUK6h">
					<orgName type="full">NFS</orgName>
				</funder>
				<funder>
					<orgName type="full">Meta Fellowship</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Ziyue</forename><surname>Qiu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yazhuo</forename><surname>Zhang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yao</forename><surname>Yue</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Pelikan</forename><surname>Foundation</surname></persName>
						</author>
						<author>
							<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Rashmi</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Emory University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">FIFO can be Better than LRU: the Power of Lazy Promotion and Quick Demotion</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3593856.3595887</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T09:23+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>LRU has been the basis of cache eviction algorithms for decades, with a plethora of innovations on improving LRU's miss ratio and throughput. While it is well-known that FIFObased eviction algorithms provide significantly better throughput and scalability, they lag behind LRU on miss ratio, thus, cache efficiency.</p><p>We performed a large-scale simulation study using 5307 block and web cache workloads collected in the past two decades. We find that contrary to what common wisdom suggests, some FIFO-based algorithms, such as FIFO-Reinsertion (or CLOCK), are, in fact, more efficient (have a lower miss ratio) than LRU. Moreover, we find that qick demotion -evicting most new objects very quickly -is critical for cache efficiency. We show that when enhanced by qick demotion, not only can state-of-the-art algorithms be more efficient, a simple FIFO-based algorithm can outperform five complex state-of-the-art in terms of miss ratio.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Caching is a well-known and widely deployed technique to speedup data accesses <ref type="bibr" target="#b4">[9,</ref><ref type="bibr" target="#b12">17,</ref><ref type="bibr" target="#b18">23,</ref><ref type="bibr" target="#b20">25,</ref><ref type="bibr" target="#b27">32,</ref><ref type="bibr" target="#b31">36,</ref><ref type="bibr" target="#b34">39,</ref><ref type="bibr" target="#b38">43,</ref><ref type="bibr" target="#b39">44,</ref><ref type="bibr" target="#b41">46,</ref><ref type="bibr" target="#b48">53,</ref><ref type="bibr" target="#b59">63,</ref><ref type="bibr" target="#b62">66,</ref><ref type="bibr" target="#b75">79,</ref><ref type="bibr" target="#b76">80,</ref><ref type="bibr" target="#b81">85]</ref>, reduce repeated computation <ref type="bibr" target="#b35">[40,</ref><ref type="bibr" target="#b45">50,</ref><ref type="bibr" target="#b60">64,</ref><ref type="bibr" target="#b78">82]</ref> and data transfer <ref type="bibr">[16, 18, 21, 41, 52, 57, 69-71, 81, 86, 89]</ref>.</p><p>A core component of a cache is the eviction algorithm, which chooses the objects stored in the limited cache space. Two metrics describe the performance of an eviction algorithm: efficiency measured by the miss ratio and throughput measured by the number of requests served per second.</p><p>The study of cache eviction algorithms has a long history <ref type="bibr" target="#b9">[14,</ref><ref type="bibr" target="#b19">24,</ref><ref type="bibr" target="#b21">26,</ref><ref type="bibr" target="#b64">68]</ref>, with a majority of the work centered around LRU (that is to evict the least-recently-used object). LRU maintains a doubly-linked list, promoting objects to the head of the list upon cache hits and evicting the object at the tail of the list when needed. Belady and others found that memory access patterns often exhibit temporal locality -"the most recently used pages were most likely to be reused in the immediate future". Thus, LRU using recency to promote objects was found to be better than FIFO <ref type="bibr" target="#b9">[14,</ref><ref type="bibr" target="#b22">27]</ref>.</p><p>Most eviction algorithms designed to achieve high efficiency start from LRU. For example, many algorithms such as ARC <ref type="bibr" target="#b51">[56]</ref>, SLRU <ref type="bibr">[6,</ref><ref type="bibr" target="#b43">48]</ref>, 2Q [7, <ref type="bibr" target="#b25">30,</ref><ref type="bibr" target="#b42">47,</ref><ref type="bibr" target="#b43">48]</ref>, MQ <ref type="bibr" target="#b88">[92]</ref> and multi-generational LRU <ref type="bibr" target="#b2">[5]</ref>, use multiple LRU queues to separate hot and cold objects. Some algorithms, e.g., LIRS <ref type="bibr" target="#b40">[45]</ref> and LIRS2 <ref type="bibr" target="#b86">[90]</ref>, maintain an LRU queue but use different metrics to promote objects. While other algorithms, e.g., LRFU <ref type="bibr" target="#b24">[29]</ref>, EE-LRU <ref type="bibr" target="#b63">[67]</ref>, LeCaR <ref type="bibr" target="#b68">[72]</ref> and CACHEUS <ref type="bibr" target="#b61">[65]</ref>, augment LRU's recency with different metrics. In addition, many recent works, e.g., Talus <ref type="bibr" target="#b8">[13]</ref>, improve LRU's ability to handle scan and loop requests.</p><p>Besides efficiency, there have been fruitful studies on enhancing the cache's throughput performance and thread scalability. Each cache hit in LRU promotes an object to the head of the queue, which requires updating at least six pointers guarded by locks. These overheads are not acceptable in many deployments that need high performance <ref type="bibr" target="#b5">[10,</ref><ref type="bibr" target="#b32">37,</ref><ref type="bibr" target="#b57">62,</ref><ref type="bibr" target="#b74">78]</ref>. Thus, performance-centric systems often use FIFObased algorithms to avoid LRU's overheads. For example, FIFO-Reinsertion and variants of CLOCK <ref type="bibr" target="#b19">[24,</ref><ref type="bibr" target="#b55">60,</ref><ref type="bibr" target="#b64">68]</ref> have been developed, which serve as LRU approximations. It is often perceived that these algorithms trade miss ratio for better throughput and scalability <ref type="bibr" target="#b6">[11,</ref><ref type="bibr" target="#b33">38,</ref><ref type="bibr" target="#b38">43,</ref><ref type="bibr" target="#b42">47,</ref><ref type="bibr" target="#b55">60]</ref>.</p><p>Via a large-scale simulation study, we make a case for breaking away from LRU completely and instead designing eviction algorithms based on FIFO. To the best of our knowledge, this is by far the most comprehensive eviction algorithm study. Compared to previous work <ref type="bibr" target="#b61">[65]</ref>, our datasets have 16? more traces with 58,100? more requests. And the datasets are more diverse, containing traces of block, keyvalue, and object caches collected over two decades.</p><p>FIFO provides many benefits compared to LRU, including fewer metadata, less computation, better scalability <ref type="bibr" target="#b32">[37,</ref><ref type="bibr" target="#b79">83]</ref> and flash friendliness <ref type="bibr" target="#b17">[22,</ref><ref type="bibr" target="#b50">55,</ref><ref type="bibr" target="#b71">75,</ref><ref type="bibr" target="#b80">84]</ref>. However, FIFO alone often leaves a large efficiency headroom. To bridge the gap, we introduce two broad classes of techniques -Lazy Promotion and Quick Demotion.</p><p>Lazy Promotion (LP) performs promotion only at the eviction time. An example of this technique is "reinsertion", which puts the eviction candidate back into the cache if requested since the last insertion. Common wisdom suggests that FIFO with Lazy Promotion is an LRU approximation that is less efficient than LRU <ref type="bibr" target="#b6">[11,</ref><ref type="bibr" target="#b33">38,</ref><ref type="bibr" target="#b38">43,</ref><ref type="bibr" target="#b42">47,</ref><ref type="bibr" target="#b55">60]</ref>. However, our large-scale empirical study on 5307 traces shows that such "weak LRUs" are more efficient than LRU ( ?3).</p><p>Quick Demotion (QD) removes most objects quickly after they are inserted. We show that the opportunity cost of waiting for new objects to traverse through the queue(s) is too high. We demonstrate the importance of QD by adding a small probationary FIFO queue and a metadata-only ghost queue to five state-of-the-art eviction algorithms. Evaluations show that QD-enhanced ARC can reduce ARC's miss ratio by up to 59.8%, and QD-enhanced LIRS can reduce LIRS's miss ratio by up to 49.8%. On average, QD-enhanced algorithms reduce the miss ratio from the corresponding state-of-the-art algorithm by 2.7% on the 5307 traces. Note that the seemingly small improvement is huge due to the large number of traces. We further demonstrate a simple eviction algorithm QD-LP-FIFO by applying the aforementioned Lazy Promotion and Quick Demotion on top of FIFO. QD-LP-FIFO is simple yet efficient. Our evaluations show that QD-LP-FIFO achieves lower miss ratios than state-of-the-art eviction algorithms. For example, QD-LP-FIFO reduces the miss ratios of LIRS and LeCaR by 1.6% and 4.3% on average.</p><p>We believe that further innovations in better Lazy Promotion and Quick Demotion techniques will lead to a class of simple and efficient eviction algorithms. Moreover, we envision that future eviction algorithms can be designed like building a LEGO by adding different LP and QD techniques to a base algorithm such as FIFO.</p><p>This paper makes two main contributions:</p><p>? Contrary to the common belief that LRU approximations are less efficient, we show that FIFO with Lazy Promotion (e.g., FIFO-Reinsertion/CLOCK) achieves a lower miss ratio than LRU on a large collection of workloads. ? We demonstrate that Quick Demotion is critical for cache efficiency. A simple QD technique, e.g., a probationary  FIFO, can reduce the miss ratio of state-of-the-art algorithms by up to 59.8%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Why FIFO and What it needs</head><p>The benefits of FIFO over LRU have been explored in many previous works <ref type="bibr" target="#b32">[37,</ref><ref type="bibr" target="#b33">38,</ref><ref type="bibr" target="#b78">82,</ref><ref type="bibr" target="#b79">83]</ref>. For example, FIFO has less metadata (if any) and requires no metadata update on each cache hit, and thus is faster and more scalable than LRU. In contrast, LRU requires updating six pointers on each cache hit, which is not friendly for modern computer architecture due to random memory accesses and extensive locking. Moreover, FIFO is always the first choice when implementing a flash cache because it does not incur write amplification <ref type="bibr" target="#b10">[15,</ref><ref type="bibr" target="#b17">22,</ref><ref type="bibr" target="#b50">55,</ref><ref type="bibr" target="#b80">84]</ref>. Although FIFO has throughput and scalability benefits, it is common wisdom that FIFO provides lower efficiency (higher miss ratio) than LRU.</p><p>To understand the various factors that affect the miss ratio, we introduce a cache abstraction (Fig. <ref type="figure" target="#fig_0">1</ref>). A cache can be viewed as a logically total-ordered queue with four operations: insertion, removal, promotion, and demotion. Objects in the cache can be compared and ordered based on some metric (e.g., time since the last request), and the eviction algorithm evicts the least valuable object based on the metric. Insertion and removal are user-controlled operations, where removal can either be directly invoked by the user or indirectly via the use of time-to-live (TTL). Promotion and demotion are internal operations of the cache used to maintain the logical ordering between objects.</p><p>We observe that most eviction algorithms use promotion to update the ordering between objects. For example, all the LRU-based algorithms promote objects to the head of the queue on cache hits, which we call eager promotion. Meanwhile, demotion is performed implicitly: when an object is promoted, other objects are passively demoted. We call this process passive demotion, a slow process as objects need to traverse through the cache queue before being evicted. However, we will show that instead of eager promotion and passive demotion, eviction algorithms should use Lazy Promotion ( ?3) and Quick Demotion ( ?4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Lazy Promotion</head><p>To avoid popular objects from being evicted while not incurring much performance overhead, we propose adding Lazy Promotion on top of FIFO (called LP-FIFO), which promotes objects only when they are about to be evicted. Lazy Promotion aims to retain popular objects with minimal effort. An example is FIFO-Reinsertion<ref type="foot" target="#foot_1">1</ref> : an object is reinserted at eviction time if it has been requested while in the cache.</p><p>LP-FIFO has several benefits over eager promotion (promoting on every access) used in LRU-based algorithms. First, LP-FIFO inherits FIFO's throughput and scalability benefits because few metadata operations are needed when an object is requested. For example, FIFO-Reinsertion only needs to update a Boolean field upon the first request to a cached object without locking. Second, performing promotion at eviction time allows the cache to make better decisions by accumulating more information about the objects, e.g., how many times an object has been requested.</p><p>To understand LP-FIFO's efficiency, we performed a largescale simulation study on 5307 production traces from 10 data sources (Table <ref type="table" target="#tab_0">1</ref>), which include open-source and proprietary datasets collected between 2007 and 2020. The 10 datasets contain 814 billion (6,386 TB) requests and 55.2 billion (533 TB) objects, and cover different types of caches, including block, key-value (KV), and object caches. We further divide the traces into block and web (including Memcached and CDN). We choose small/large cache size as 0.1%/10% of the number of unique objects in the trace.</p><p>We compare the miss ratios of LRU with two LP-FIFO algorithms: FIFO-Reinsertion and 2-bit CLOCK. 2-bit CLOCK tracks object frequency up to three, and an object's frequency decreases by one each time the CLOCK hand scans through it. Objects with zero frequency are evicted.</p><p>Common wisdom suggests that these two LP-FIFO examples are LRU approximations and will exhibit higher miss ratios than LRU 2 <ref type="bibr" target="#b6">[11,</ref><ref type="bibr" target="#b33">38,</ref><ref type="bibr" target="#b38">43,</ref><ref type="bibr" target="#b42">47,</ref><ref type="bibr" target="#b55">60]</ref>. However, we found that LP-FIFO often exhibits miss ratios lower than LRU.</p><p>Fig. <ref type="figure" target="#fig_1">2</ref> shows that FIFO-Reinsertion and 2-bit CLOCK are better than LRU on most traces. Specifically, FIFO-Reinsertion is better than LRU on 9 and 7 of the 10 datasets using a small and large cache size, respectively. Moreover, on half of the datasets, more than 80% of the traces in each dataset favor FIFO-Reinsertion over LRU at both sizes. On the two social network datasets, LRU is better than FIFO-Reinsertion (especially at the large cache size). This is because most objects are accessed more than once 3 , and using one bit to track object access is insufficient. Therefore, when increasing the one bit in FIFO-Reinsertion (CLOCK) to two bits (2-bit CLOCK), 2 We suspect this impression came from the 1960s when LRU and CLOCK were designed for virtual memory page replacement. We conjecture that CLOCK may not work as well as LRU for such workloads because LRU can better adapt to sudden working set changes. According to Denning, memory access patterns show abrupt changes between phases <ref type="bibr" target="#b22">[27]</ref>. However, we do not observe such patterns in the block and web cache workloads. 3 Many cache traces are collected after the first-layer cache, e.g., the CDN cache is behind browser caches, and the block traces record requests after the page cache. The two social network cache datasets used are from firstlayer caches, contributing to high object access frequencies. Moreover, the high frequency could also come from the nature of being a social network or key-value cache workload. we observe that the number of traces favoring LP-FIFO increases to around 70%. Across all datasets, 2-bit CLOCK is better than FIFO on all datasets at the small cache size and 9 of the 10 datasets at the large cache size. Two reasons contribute to LP-FIFO's high efficiency. First, Lazy Promotion often leads to Quick Demotion ( ?4). For example, under LRU, a newly-inserted object ? is pushed down the queue only by 1) new objects and 2) cached objects that are requested after ?. However, besides the objects requested after ?, the objects requested before ? (but have not been promoted, e.g., ?, ?) also push ? down the queue when using FIFO-Reinsertion (Fig. <ref type="figure" target="#fig_1">2e</ref>). Second, compared to promotion at each request, object ordering in LP-FIFO is closer to the insertion order, which we conjecture is better suited for many workloads that exhibit popularity decayold objects have a lower probability of getting a request.</p><p>While LP-FIFO surprisingly wins over LRU in miss ratio, it cannot outperform state-of-the-art algorithms. We next discuss another building block that bridges this gap.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Quick Demotion</head><p>Efficient eviction algorithms not only need to keep popular objects in the cache but also need to evict unpopular objects fast. In this section, we show that Quick Demotion (QD) is critical for an efficient eviction algorithm, and it enables FIFO-based algorithms to achieve state-of-the-art efficiency.</p><p>Because demotion happens passively in most eviction algorithms, an object typically traverses through the cache before being evicted. Such traversal gives each object a good chance to prove its value to be kept in the cache. However, cache workloads often follow Zipf popularity distribution <ref type="bibr" target="#b3">[8,</ref><ref type="bibr" target="#b10">15,</ref><ref type="bibr" target="#b15">20,</ref><ref type="bibr" target="#b78">82]</ref> with most objects being unpopular. This is further exacerbated by 1) the scan and loop access patterns in the block cache workloads <ref type="bibr" target="#b7">[12,</ref><ref type="bibr" target="#b61">65,</ref><ref type="bibr" target="#b68">72]</ref>, and 2) the vast existence of dynamic and short-lived data, the use of versioning in object names, and the use of short TTLs in the web cache workloads <ref type="bibr" target="#b78">[82]</ref>. We believe the opportunity cost of new objects demonstrating their values is often too high: the object being evicted at the tail of the queue may be more valuable than the objects recently inserted.</p><p>Removing low-value objects faster is not a new idea and has been discussed under various contexts, such as removing scan pages <ref type="bibr" target="#b7">[12,</ref><ref type="bibr" target="#b40">45]</ref>, correlated accesses <ref type="bibr" target="#b42">[47]</ref>, and one-hit wonders <ref type="bibr" target="#b0">[2,</ref><ref type="bibr" target="#b49">54]</ref>. These observations have inspired eviction algorithms such as 2Q <ref type="bibr" target="#b42">[47]</ref>, MQ <ref type="bibr" target="#b88">[92]</ref>, ARC <ref type="bibr" target="#b51">[56]</ref>, SLRU <ref type="bibr" target="#b37">[42]</ref>,  LHD <ref type="bibr" target="#b7">[12]</ref>, and Hyperbolic <ref type="bibr" target="#b14">[19]</ref>. However, we find that the demotion in existing algorithms is often not fast enough.</p><p>We study how different algorithms spend cache resources on objects of varying popularity. The resource consumption of an object is calculated using ? ?? ? = (? ???????? -? ????????? ) ?? ?? ? similar to the idea in the previous work <ref type="bibr" target="#b7">[12]</ref>. Throughout this work, we assume objects to be uniform in size so that we can focus on the effect of access patterns on efficiency. Fig. <ref type="figure" target="#fig_2">3</ref> shows two representative traces, and Table <ref type="table" target="#tab_1">2</ref> shows the corresponding miss ratios. ARC and LHD often spend fewer resources on unpopular objects than LRU and show lower miss ratios. Between ARC and LHD, ARC spends fewer resources on unpopular objects and has a notably lower miss ratio than LHD on the MSR trace. We have a similar observation on the Twitter trace as well. Moreover, among all four algorithms, Belady <ref type="bibr" target="#b9">[14]</ref> always spends the fewest resources on unpopular objects and has significantly lower miss ratios. In summary, efficient algorithms often spend fewer resources on unpopular objects.</p><p>To further illustrate the importance of Quick Demotion, we add a simple QD technique on top of state-of-the-art eviction algorithms (Fig. <ref type="figure" target="#fig_3">4</ref>). The QD technique consists of a small probationary FIFO queue storing cached data and a ghost FIFO queue storing metadata of objects evicted from the probationary FIFO queue. The probationary FIFO queue uses 10% of the cache space and acts as a filter for unpopular objects: objects not requested after insertion are evicted early from the FIFO queue. The main cache runs a state-of-the-art algorithm and uses 90% of the space. And the ghost FIFO stores as many entries as the main cache. Upon a cache miss, the object is written into the probationary FIFO queue unless Figure <ref type="figure">5</ref>: Evaluated on the 5307 traces, QD-enhanced algorithms outperform state-of-the-art algorithms at both small and large cache sizes. QD-LP-FIFO achieves similar or better miss ratio reduction compared to state-of-the-art algorithms.</p><p>it is in the ghost FIFO queue, in which case, it is written into the main cache. When the probationary FIFO queue is full, if the object to evict has been accessed since insertion, it is inserted into the main cache. Otherwise, it is evicted and recorded in the ghost FIFO queue. We add this FIFO-based QD technique to five state-of-theart eviction algorithms, ARC <ref type="bibr" target="#b51">[56]</ref>, LIRS <ref type="bibr" target="#b40">[45]</ref>, CACHEUS <ref type="bibr" target="#b61">[65]</ref>, LeCaR <ref type="bibr" target="#b68">[72]</ref> and LHD <ref type="bibr" target="#b7">[12]</ref>. We used the open-source LHD implementation from the authors, implemented the others following the corresponding papers, and cross-checked with open-source implementations 4 . We evaluated the QDenhanced and original algorithms on the 5307 traces. Because the traces have a wide range of miss ratios, we choose to present each algorithm's miss ratio reduction from FIFO calculated as ?? ? ? ?? -?? ???? ?? ? ? ?? . Fig. <ref type="figure">5</ref> shows that the QD-enhanced algorithms further reduce the miss ratio of each state-of-the-art algorithm on almost all percentiles. For example, QD-ARC (QD-enhanced ARC) reduces ARC's miss ratio by up to 59.8% with a mean reduction of 1.5% across all workloads on the two cache sizes, QD-LIRS reduces LIRS's miss ratio by up to 49.6% with a mean of 2.2%, and QD-LeCaR reduces LeCaR's miss ratio by up to 58.8% with a mean of 4.5%. Note that achieving a large miss ratio reduction on a large number of diverse traces is non-trivial. For example, the best state-of-the-art algorithm, ARC, can only reduce the miss ratio of LRU 6.2% on average.</p><p>The gap between the QD-enhanced algorithm and the original algorithm is wider 1) when the state-of-the-art is relatively weak, 2) when the cache size is large, and 3) on 4 All state-of-the-art algorithms are complex, and we found two different open-source LIRS implementations used in previous works have bugs. the web workloads. With a weaker state-of-the-art, the opportunity for improvement is larger, allowing QD to provide more prominent benefits. For example, QD-LeCaR reduces LeCaR's miss ratios by 4.5% average, larger than the reductions on other state-of-the-art algorithms. When the cache size is large, unpopular objects spend more time in the cache, and Quick Demotion becomes more valuable. For example, QD-ARC and ARC have similar miss ratios on the block workloads at the small cache size. But QD-ARC reduces ARC's miss ratio by 2.3% on average at the large cache size. However, when the cache size is too large, e.g., 80% of the number of objects in the trace, adding QD may increase the miss ratio (not shown). At last, QD provides more benefits on the web workloads than the block workloads, especially when the cache size is small. We conjecture that web workloads have more short-lived data and exhibit stronger popularity decay, which leads to a more urgent need for Quick Demotion. While Quick Demotion improves the efficiency of most state-of-the-art algorithms, for a small subset of traces, QD may increase the miss ratio when the cache size is small because the probationary FIFO is too small to capture some potentially popular objects.</p><p>Although adding the probationary FIFO improves efficiency, it further increases the complexity of the already complicated state-of-the-art algorithms. To reduce complexity, we add the same QD technique on top of the 2-bit CLOCK discussed in ?3 and call it QD-LP-FIFO. QD-LP-FIFO uses two FIFO queues to cache data and a ghost FIFO queue to track evicted objects. It is not hard to see QD-LP-FIFO is simpler than all state-of-the-art algorithms -it requires at most one metadata update on a cache hit and no locking for any cache operation. Therefore, we believe it will be faster and more scalable than all state-of-the-art algorithms. Besides enjoying all the benefits of simplicity, QD-LP-FIFO also achieves lower miss ratios than state-of-the-art algorithms (Fig. <ref type="figure">5</ref>). For example, compared to LIRS and LeCaR, QD-LP-FIFO reduces miss ratio by 1.6% and 4.3% on average respectively across the 5307 traces. While the goal of this work is not to propose a new eviction algorithm, QD-LP-FIFO illustrates how we can build simple yet efficient eviction algorithms by adding Quick Demotion and Lazy Promotion techniques to a simple base eviction algorithm such as FIFO.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussions</head><p>LP and QD techniques. We have demonstrated reinsertion as an example of LP ( ?3) and the use of a small probationary FIFO queue as an example of QD ( ?4). However, these are not the only techniques. For example, reinsertion can leverage different metrics to decide whether the object should be reinserted. Besides reinsertion, several other techniques are often used to reduce promotion and improve scalability, e.g., periodic promotion <ref type="bibr" target="#b57">[62]</ref>, batched promotion <ref type="bibr" target="#b72">[76]</ref>, promoting old objects only <ref type="bibr" target="#b10">[15]</ref>, promoting with try-lock [3]. Although these techniques do not fall into our strict definition of Lazy Promotion (promotion on eviction), many of them effectively retain popular objects from being evicted. On the Quick Demotion side, besides the small probationary FIFO queue, one can leverage other techniques to define and discover unpopular objects such as Hyperbolic <ref type="bibr" target="#b14">[19]</ref> and LHD <ref type="bibr" target="#b7">[12]</ref>. Moreover, admission algorithms, e.g., TinyLFU <ref type="bibr" target="#b28">[33,</ref><ref type="bibr" target="#b29">34]</ref>, Bloom Filter <ref type="bibr" target="#b13">[18,</ref><ref type="bibr" target="#b49">54]</ref>, probabilistic <ref type="bibr" target="#b10">[15]</ref> and ML-based <ref type="bibr" target="#b30">[35]</ref> admission algorithms, can be viewed as a form of QD -albeit some of them are too aggressive at demotion (rejecting objects from entering the cache).</p><p>We remark that QD bears similarity with some generational garbage collection algorithms <ref type="bibr" target="#b23">[28,</ref><ref type="bibr" target="#b56">61]</ref> which separately store short-lived and long-lived data in young-gen and old-gen heaps. Therefore, ideas from garbage collection may be borrowed to strengthen cache eviction algorithms.</p><p>We believe that the design of QD-LP-FIFO opens the door to designing simple yet efficient cache eviction algorithms by innovating on LP and QD techniques. And we envision future eviction algorithms can be designed like building LEGOadding lazy promotion and qick demotion on top of a base eviction algorithm. Why "X" is not better than QD-LP-FIFO. Eviction algorithms that use multiple queues (e.g., ARC, 2Q, and 2Q variants in many production systems <ref type="bibr" target="#b1">[4,</ref><ref type="bibr">6,</ref><ref type="bibr">7,</ref><ref type="bibr" target="#b10">15]</ref>) share similarities with QD-LP-FIFO. However, there are two major differences between QD-LP-FIFO and previous works. First, QD-LP-FIFO only uses FIFO queues, and promotion to a different queue (e.g., main cache) only happens when an object is being evicted. Second, QD-LP-FIFO uses a tiny fixed-size FIFO queue (10% of cache size) for Quick Demotion, while previous works use much larger (e.g., 50% of cache size) or adaptive queue sizes. Ideally, the adaptive algorithms (e.g., ARC) should provide similar or lower miss ratios than Quick Demotion. However, our study suggests otherwise. There are a few reasons behind this. First, the adaptive algorithms' methods to adjust queue size are not optimal. For ARC, we observe that manually limiting the queue size and slowing down the queue size adjustment often reduce miss ratios. Second, Lazy Promotion is resistant to request bursts and better suited for workloads with popularity decay ( ?3). We observe that replacing the LRU queues in ARC with FIFO-Reinsertion also reduces the miss ratio. In general, adaptive algorithms, such as ARC and CACHEUS, adapt their parameters based on a limited number of past requests, which may not predict the future well. Limitations. Throughout this work, to focus on how access patterns affect cache efficiency, we ignore other factors, such as object size and TTL, which are important for web cache workloads. While the Lazy Promotion and Quick Demotion techniques we have discussed are not size-aware, designing size-aware Lazy Promotion and Quick Demotion techniques are worth pursuing in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>To the best of our knowledge, this is by far the most comprehensive eviction algorithm study. Contrary to the common belief, we discover that LP-FIFO (e.g., FIFO-Reinsertion) is more efficient than LRU with lower miss ratios (in addition to its well-known benefits on throughput and scalability). Moreover, we demonstrate the importance of Quick Demotion for efficient caching by adding a probationary FIFO queue to five state-of-the-art eviction algorithms. The QDenhanced algorithms can further improve the state-of-the-art algorithms' efficiency. This study illustrates the importance of lazy promotion and qick demotion for eviction algorithms' throughput and efficiency. And it demonstrates a new LEGO-like approach to designing future eviction algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The cache abstraction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: (a,b,c,d): the fraction of the 5307 traces on which an algorithm has a lower miss ratio when comparing LRU with FIFO-Reinsertion (1-bit CLOCK) and 2-bit CLOCK. FIFO-Reinsertion and 2-bit CLOCK are more efficient than LRU, with a lower miss ratio on most traces. (e): Lazy Promotion often leads to Quick Demotion. Using FIFO-Reinsertion as an example, the newly-inserted object ? will be pushed down by both objects requested before (e.g., ?, ?) and after ?. In contrast, only objects requested after ? can push ? down in LRU.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Cache resource consumption by objects in different algorithms. More efficient algorithms spend fewer resources on unpopular objects.</figDesc><graphic url="image-5.png" coords="4,341.98,226.64,192.19,62.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: An example of QD: add a probationary FIFO queue to an existing cache.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Block workloads, small size (0.1% of all objects) Block workloads, large size (10% of all objects) Web workloads, small size (0.1% of all objects) Web workloads, large size (10% of all objects)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Datasets used in this work (traces with less than 1 million requests or 10,000 objects are excluded).</figDesc><table><row><cell>trace</cell><cell>approx</cell><cell>#</cell><cell>cache</cell><cell># request</cell><cell># object</cell></row><row><cell>collections</cell><cell>time</cell><cell>traces</cell><cell>type</cell><cell>(million)</cell><cell>(million)</cell></row><row><cell>MSR [58, 59]</cell><cell>2007</cell><cell cols="2">13 block</cell><cell>410</cell><cell>74</cell></row><row><cell>FIU [49]</cell><cell>2008</cell><cell cols="2">9 block</cell><cell>514</cell><cell>20</cell></row><row><cell>Cloudphysics[73]</cell><cell>2015</cell><cell cols="2">106 block</cell><cell>2,114</cell><cell>492</cell></row><row><cell>Major CDN</cell><cell>2018</cell><cell cols="2">219 object</cell><cell>3,728</cell><cell>298</cell></row><row><cell>Tencent Photo [91]</cell><cell>2018</cell><cell cols="2">2 object</cell><cell>5,650</cell><cell>1,038</cell></row><row><cell>Wiki CDN [77]</cell><cell>2019</cell><cell cols="2">3 object</cell><cell>2,863</cell><cell>56</cell></row><row><cell>Tencent CBS [87, 88]</cell><cell>2020</cell><cell cols="2">4030 block</cell><cell>33,690</cell><cell>551</cell></row><row><cell>Alibaba [1, 51, 74]</cell><cell>2020</cell><cell cols="2">652 block</cell><cell>19,676</cell><cell>1702</cell></row><row><cell>Twitter [82]</cell><cell>2020</cell><cell>54</cell><cell>KV</cell><cell>195,441</cell><cell>10,650</cell></row><row><cell>Social Network</cell><cell>2020</cell><cell>219</cell><cell>KV</cell><cell>549,784</cell><cell>42,898</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>The miss ratios of the algorithms in Fig.3.</figDesc><table><row><cell cols="2">Algorithm/workload LRU</cell><cell>ARC</cell><cell>LHD Belady</cell></row><row><cell>MSR</cell><cell cols="3">0.5263 0.4899 0.5131 0.4438</cell></row><row><cell>Twitter</cell><cell cols="3">0.2005 0.1841 0.1756 0.1309</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>This work is licensed under a Creative Commons Attribution International 4.0 License.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>Note that FIFO-Reinsertion, 1-bit CLOCK, and Second Chance are different implementations of the same eviction algorithm.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>Acknowledgments</head><p>We thank the anonymous reviewers for their valuable feedback. We also would like to thank the people and organizations that have open-sourced and shared production traces. We thank Cloudlab [31] for the infrastructure support for running experiments. This work is funded in part by a <rs type="funder">Meta Fellowship</rs>, and <rs type="funder">NFS</rs> grants <rs type="grantNumber">CNS 1901410</rs> and <rs type="grantNumber">CNS 1956271</rs>. We also thank the members of the <rs type="institution">PDL Consortium</rs> for their interest, insights, feedback, and support.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_Bx2sWhx">
					<idno type="grant-number">CNS 1901410</idno>
				</org>
				<org type="funding" xml:id="_nyEUK6h">
					<idno type="grant-number">CNS 1956271</idno>
				</org>
			</listOrg>

			<div type="availability">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Availability</head><p>The code we used is open-sourced at https://github.com/ TheSys-lab/HotOS23-QD-LP.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="https://phabricator.wikimedia.org/T144187" />
		<title level="m">Better handling for one-hit-wonder objects</title>
		<imprint>
			<biblScope unit="page" from="2021" to="2033" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Memcached -a distributed memory object caching system</title>
		<ptr target="http://memcached.org/" />
		<imprint>
			<biblScope unit="page" from="2021" to="2033" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Multi-Gen</forename><surname>Lru</surname></persName>
		</author>
		<ptr target="https://docs.kernel.org/admin-guide/mm/multigen_lru.html" />
		<imprint>
			<biblScope unit="page" from="2023" to="2024" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Workload Analysis of a Large-Scale Key-Value Store</title>
		<author>
			<persName><forename type="first">Berk</forename><surname>Atikoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuehai</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eitan</forename><surname>Frachtenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Song</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mike</forename><surname>Paleczny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th ACM SIGMETRICS/PERFORMANCE Joint International Conference on Measurement and Modeling of Computer Systems, SIGMETRICS &apos;12</title>
		<meeting>the 12th ACM SIGMETRICS/PERFORMANCE Joint International Conference on Measurement and Modeling of Computer Systems, SIGMETRICS &apos;12<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="53" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Caching with Delayed Hits</title>
		<author>
			<persName><forename type="first">Nirav</forename><surname>Atre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Justine</forename><surname>Sherry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Weina</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">S</forename><surname>Berger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Annual Conference of the ACM Special Interest Group on Data Communication on the Applications, Technologies, Architectures, and Protocols for Computer Communication, SIGCOMM &apos;20</title>
		<meeting>the Annual Conference of the ACM Special Interest Group on Data Communication on the Applications, Technologies, Architectures, and Protocols for Computer Communication, SIGCOMM &apos;20<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="495" to="513" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Finer-LRU: A Scalable Page Management Scheme for HPC Manycore Architectures</title>
		<author>
			<persName><forename type="first">Jiwoo</forename><surname>Bang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chungyong</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sunggon</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qichen</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cheongjun</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eun-Kyu</forename><surname>Byun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jaehwan</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hyeonsang</forename><surname>Eom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2021 IEEE International Parallel and Distributed Processing Symposium (IPDPS)</title>
		<imprint>
			<date type="published" when="2021-05">May 2021</date>
			<biblScope unit="page" from="567" to="576" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">CAR: Clock with Adaptive Replacement</title>
		<author>
			<persName><forename type="first">Sorav</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dharmendra</forename><forename type="middle">S</forename><surname>Modha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3rd USENIX Conference on File and Storage Technologies, FAST&apos;04</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">LHD: Improving cache hit rate by maximizing hit density</title>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haoxian</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Asaf</forename><surname>Cidon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">15th USENIX symposium on networked systems design and implementation, NSDI&apos;18</title>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="389" to="403" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Talus: A simple way to remove cliffs in cache performance</title>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Sanchez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE 21st International Symposium on High Performance Computer Architecture, HPCA&apos;15</title>
		<meeting><address><addrLine>Burlingame, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015-02">February 2015</date>
			<biblScope unit="page" from="64" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A study of replacement algorithms for a virtual-storage computer</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Belady</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Systems Journal</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="78" to="101" />
			<date type="published" when="1966">1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The CacheLib caching engine: Design and experiences at scale</title>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">S</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sara</forename><surname>Mcallister</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Isaac</forename><surname>Grosof</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sathya</forename><surname>Gunasekar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Uhlar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jim</forename><surname>Carrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mor</forename><surname>Harchol-Balter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gregory</forename><forename type="middle">R</forename><surname>Ganger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th USENIX symposium on operating systems design and implementation, OSDI&apos;20</title>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2020-11">November 2020</date>
			<biblScope unit="page" from="753" to="768" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Towards Lightweight and Robust Machine Learning for CDN Caching</title>
		<author>
			<persName><forename type="first">S</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName><surname>Berger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th ACM Workshop on Hot Topics in Networks, Hotnets&apos;18</title>
		<meeting>the 17th ACM Workshop on Hot Topics in Networks, Hotnets&apos;18<address><addrLine>Redmond WA USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018-11">November 2018</date>
			<biblScope unit="page" from="134" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">RobinHood: Tail latency aware caching -dynamic reallocation from Cache-Rich to Cache-Poor</title>
		<author>
			<persName><forename type="first">S</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siddhartha</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mor</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><surname>Harchol-Balter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">13th USENIX symposium on operating systems design and implementation, OSDI&apos;18</title>
		<meeting><address><addrLine>Carlsbad, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2018-10">October 2018</date>
			<biblScope unit="page" from="195" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Adapt-Size: Orchestrating the hot object memory cache in a content delivery network</title>
		<author>
			<persName><forename type="first">Ramesh</forename><forename type="middle">K</forename><surname>Daniel S Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mor</forename><surname>Sitaraman</surname></persName>
		</author>
		<author>
			<persName><surname>Harchol-Balter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th USENIX symposium on networked systems design and implementation, NSDI&apos;17</title>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="483" to="498" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Hyperbolic caching: Flexible caching for web applications</title>
		<author>
			<persName><forename type="first">Aaron</forename><surname>Blankstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siddhartha</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Freedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2017 USENIX annual technical conference, ATC&apos;17</title>
		<meeting><address><addrLine>Santa Clara, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2017-07">July 2017</date>
			<biblScope unit="page" from="499" to="511" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Web caching and Zipf-like distributions: evidence and implications</title>
		<author>
			<persName><forename type="first">L</forename><surname>Breslau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pei</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Li Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Phillips</surname></persName>
		</author>
		<author>
			<persName><surname>Shenker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings. Eighteenth Annual Joint Conference of the IEEE Computer and Communications Societies</title>
		<meeting>Eighteenth Annual Joint Conference of the IEEE Computer and Communications Societies<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="126" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Cost-Aware WWW Proxy Caching Algorithms</title>
		<author>
			<persName><forename type="first">Pei</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sandy</forename><surname>Irani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Symposium on Internet Technologies and Systems, USITS&apos;97</title>
		<meeting><address><addrLine>Monterey, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="1997-12">December 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">FASTER: A Concurrent Key-Value Store with In-Place Updates</title>
		<author>
			<persName><forename type="first">Badrish</forename><surname>Chandramouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guna</forename><surname>Prasaad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Donald</forename><surname>Kossmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Justin</forename><surname>Levandoski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Hunter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mike</forename><surname>Barnett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 International Conference on Management of Data</title>
		<meeting>the 2018 International Conference on Management of Data<address><addrLine>Houston TX USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018-05">May 2018</date>
			<biblScope unit="page" from="275" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Memshare: a dynamic multi-tenant key-value cache</title>
		<author>
			<persName><forename type="first">Asaf</forename><surname>Cidon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Rushton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><forename type="middle">M</forename><surname>Rumble</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ryan</forename><surname>Stutsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2017 USENIX annual technical conference, ATC&apos;17</title>
		<meeting><address><addrLine>Santa Clara, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2017-07">July 2017</date>
			<biblScope unit="page" from="321" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">A paging experiment with the multics system</title>
		<author>
			<persName><forename type="first">J</forename><surname>Fernando</surname></persName>
		</author>
		<author>
			<persName><surname>Corbato</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1968">1968</date>
			<publisher>MASSACHUSETTS INST OF TECH CAMBRIDGE PROJECT MAC</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Cooperative caching: Using remote client memory to improve file system performance</title>
		<author>
			<persName><forename type="first">Randolph</forename><forename type="middle">Y</forename><surname>Michael D Dahlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><forename type="middle">E</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">A</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><surname>Patterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st USENIX conference on Operating Systems Design and Implementation, OSDI&apos;94</title>
		<meeting>the 1st USENIX conference on Operating Systems Design and Implementation, OSDI&apos;94</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page">19</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The working set model for program behavior</title>
		<author>
			<persName><forename type="first">J</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName><surname>Denning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="323" to="333" />
			<date type="published" when="1968">1968</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Working Set Analytics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName><surname>Denning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1" to="36" />
			<date type="published" when="2021-11">November 2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Garbage-first garbage collection</title>
		<author>
			<persName><forename type="first">David</forename><surname>Detlefs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christine</forename><surname>Flood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steve</forename><surname>Heller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tony</forename><surname>Printezis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th international symposium on Memory management</title>
		<meeting>the 4th international symposium on Memory management</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="37" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">LRFU: a spectrum of policies that subsumes the least recently used and least frequently used policies</title>
		<author>
			<persName><forename type="first">Donghee</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jongmoo</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jong-Hun</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Noh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sang</forename><surname>Lyul Min</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yookun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chong</forename><surname>Sang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kim</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1352" to="1361" />
			<date type="published" when="2001-12">December 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Replacing the cache replacement algorithm in memcached</title>
		<author>
			<persName><surname>Dormando</surname></persName>
		</author>
		<ptr target="https://memcached.org/blog/modern-lru/" />
		<imprint>
			<biblScope unit="page" from="2023" to="2024" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Emmanuel Cecchet, Snigdhaswin Kar, and Prabodh Mishra. The design and operation of CloudLab</title>
		<author>
			<persName><forename type="first">Dmitry</forename><surname>Duplyakin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Ricci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aleksander</forename><surname>Maricq</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gary</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathon</forename><surname>Duerig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Eide</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leigh</forename><surname>Stoller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mike</forename><surname>Hibler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kirk</forename><surname>Webb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Akella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kuangching</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Glenn</forename><surname>Ricart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Larry</forename><surname>Landweber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chip</forename><surname>Elliott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Zink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Annual Technical Conference (ATC)</title>
		<meeting>the USENIX Annual Technical Conference (ATC)</meeting>
		<imprint>
			<date type="published" when="2019-07">July 2019</date>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Crystal: a unified cache storage system for analytical databases</title>
		<author>
			<persName><forename type="first">Dominik</forename><surname>Durner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Badrish</forename><surname>Chandramouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yinan</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the VLDB Endowment</title>
		<meeting>the VLDB Endowment</meeting>
		<imprint>
			<date type="published" when="2021-07">July 2021</date>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="2432" to="2444" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Adaptive Software Cache Management</title>
		<author>
			<persName><forename type="first">Gil</forename><surname>Einziger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ohad</forename><surname>Eytan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Manes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th International Middleware Conference</title>
		<meeting>the 19th International Middleware Conference<address><addrLine>Rennes France</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018-11">November 2018</date>
			<biblScope unit="page" from="94" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">TinyLFU: A Highly Efficient Cache Admission Policy</title>
		<author>
			<persName><forename type="first">Gil</forename><surname>Einziger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Manes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Storage</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="31" />
			<date type="published" when="2017-12">December 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Flashield: a hybrid key-value cache that controls flash write amplification</title>
		<author>
			<persName><forename type="first">Assaf</forename><surname>Eisenman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Asaf</forename><surname>Cidon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Evgenya</forename><surname>Pergament</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Or</forename><surname>Haimovich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ryan</forename><surname>Stutsman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammad</forename><surname>Alizadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sachin</forename><surname>Katti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">16th USENIX symposium on networked systems design and implementation, NSDI&apos;19</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2019-02">February 2019</date>
			<biblScope unit="page" from="65" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Bandana: Using non-volatile memory for storing deep learning models</title>
		<author>
			<persName><forename type="first">Assaf</forename><surname>Eisenman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maxim</forename><surname>Naumov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Darryl</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Misha</forename><surname>Smelyanskiy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Pupyrev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kim</forename><surname>Hazelwood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Asaf</forename><surname>Cidon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sachin</forename><surname>Katti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of machine learning and systems</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Talwalkar</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">V</forename><surname>Smith</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Zaharia</surname></persName>
		</editor>
		<meeting>machine learning and systems</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="40" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">It&apos;s time to revisit LRU vs. FIFO</title>
		<author>
			<persName><forename type="first">Ohad</forename><surname>Eytan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Danny</forename><surname>Harnik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Effi</forename><surname>Ofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ronen</forename><surname>Kat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th USENIX workshop on hot topics in storage and file systems, hotStorage&apos;20. USENIX Association</title>
		<imprint>
			<date type="published" when="2020-07">July 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">MemC3: Compact and concurrent MemCache with dumber caching and smarter hashing</title>
		<author>
			<persName><forename type="first">Bin</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>David G Andersen</surname></persName>
		</author>
		<author>
			<persName><surname>Kaminsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th USENIX symposium on networked systems design and implementation, NSDI&apos;13</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="371" to="384" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">TriCache: A User-Transparent Block Cache Enabling High-Performance Out-of-Core Processing with In-Memory Programs</title>
		<author>
			<persName><forename type="first">Guanyu</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Huanqi</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaowei</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bowen</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuanwei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zixuan</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shengqi</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenguang</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">16th USENIX Symposium on Operating Systems Design and OSDI&apos;22</title>
		<meeting><address><addrLine>Carlsbad, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2022-07">July 2022</date>
			<biblScope unit="page" from="395" to="411" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">FaasCache: keeping serverless computing alive with greedy-dual caching</title>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Fuerst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prateek</forename><surname>Sharma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems</title>
		<meeting>the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2021-04">April 2021</date>
			<biblScope unit="page" from="386" to="400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Raven: belady-guided, predictive (deep) learning for in-memory and content caching</title>
		<author>
			<persName><forename type="first">Xinyue</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eman</forename><surname>Ramadan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Feng</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhi-Li</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th International Conference on emerging Networking EXperiments and Technologies, CoNEXT &apos;22</title>
		<meeting>the 18th International Conference on emerging Networking EXperiments and Technologies, CoNEXT &apos;22<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2022-11">November 2022</date>
			<biblScope unit="page" from="72" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An analysis of Facebook photo caching</title>
		<author>
			<persName><forename type="first">Qi</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ken</forename><surname>Birman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robbert</forename><surname>Van Renesse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wyatt</forename><surname>Lloyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Harry</forename><forename type="middle">C</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles, SOSP &apos;13</title>
		<meeting>the Twenty-Fourth ACM Symposium on Operating Systems Principles, SOSP &apos;13<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2013-11">November 2013</date>
			<biblScope unit="page" from="167" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">CLOCK-Pro: an effective improvement of the CLOCK replacement</title>
		<author>
			<persName><forename type="first">Song</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Feng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual conference on USENIX Annual Technical Conference, ATC&apos;05</title>
		<meeting>the annual conference on USENIX Annual Technical Conference, ATC&apos;05<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2005-04">April 2005</date>
			<biblScope unit="volume">35</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">DULO: an effective buffer cache management scheme to exploit both temporal and spatial locality</title>
		<author>
			<persName><forename type="first">Song</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaoning</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Feng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Enhua</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th conference on USENIX Conference on File and Storage Technologies</title>
		<meeting>the 4th conference on USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="8" to="8" />
		</imprint>
	</monogr>
	<note>of FAST&apos;05</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">LIRS: an efficient low inter-reference recency set replacement policy to improve buffer cache performance</title>
		<author>
			<persName><forename type="first">Song</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGMETRICS Performance Evaluation Review</title>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="31" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">NetCache: Balancing keyvalue stores with fast in-network caching</title>
		<author>
			<persName><forename type="first">Xin</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaozhou</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haoyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Soul?</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeongkeun</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nate</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Changhoon</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ion</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th symposium on operating systems principles, SOSP &apos;17</title>
		<meeting>the 26th symposium on operating systems principles, SOSP &apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="121" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Q: A Low Overhead High Performance Buffer Management Replacement Algorithm</title>
		<author>
			<persName><forename type="first">Theodore</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dennis</forename><surname>Shasha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th International Conference on Very Large Data Bases, VLDB&apos;94</title>
		<meeting>the 20th International Conference on Very Large Data Bases, VLDB&apos;94<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<date type="published" when="1994-09">September 1994</date>
			<biblScope unit="page" from="439" to="450" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Caching strategies to improve disk system performance</title>
		<author>
			<persName><forename type="first">R</forename><surname>Karedla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Love</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Wherry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="38" to="46" />
			<date type="published" when="1994-03">March 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">I/o deduplication: Utilizing content similarity to improve i/o performance</title>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Raju</forename><surname>Rangaswami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Storage (TOS)</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="26" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">All-Flash Array Key-Value Cache for Large Objects</title>
		<author>
			<persName><forename type="first">Jinhyung</forename><surname>Koo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinwook</forename><surname>Bae</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Minjeong</forename><surname>Yuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seonggyun</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jungwoo</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jung-Soo</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eunji</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bryan</forename><forename type="middle">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sungjin</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighteenth European Conference on Computer Systems, EuroSys &apos;23</title>
		<meeting>the Eighteenth European Conference on Computer Systems, EuroSys &apos;23<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2023-05">May 2023</date>
			<biblScope unit="page" from="784" to="799" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">An in-depth analysis of cloud block storage workloads in large-scale production</title>
		<author>
			<persName><forename type="first">Jinhong</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qiuping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Patrick Pc</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chao</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2020 IEEE International Symposium on Workload Characterization (IISWC)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="37" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">CacheSifter: Sifting Cache Files for Boosted Mobile Performance and Lifetime</title>
		<author>
			<persName><forename type="first">Yu</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Riwei</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianyu</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yufei</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rachata</forename><surname>Ausavarungnirun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xianzhang</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Changlong</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tei-Wei</forename><surname>Kuo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chun</forename><surname>Jason</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xue</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">20th USENIX Conference on File and Storage Technologies, FAST&apos;22</title>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="445" to="459" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">DistCache: Provable load balancing for Large-Scale storage systems with distributed caching</title>
		<author>
			<persName><forename type="first">Zaoxing</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhihao</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhenming</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaozhou</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Changhoon</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vladimir</forename><surname>Braverman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">17th USENIX conference on file and storage technologies, FAST&apos;19</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2019-02">February 2019</date>
			<biblScope unit="page" from="143" to="157" />
		</imprint>
	</monogr>
	<note>Xin Jin, and Ion Stoica</note>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Algorithmic Nuggets in Content Delivery</title>
		<author>
			<persName><forename type="first">Bruce</forename><forename type="middle">M</forename><surname>Maggs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramesh</forename><forename type="middle">K</forename><surname>Sitaraman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="52" to="66" />
			<date type="published" when="2015-07">July 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Kangaroo: Theory and practice of caching billions of tiny objects on flash</title>
		<author>
			<persName><forename type="first">Sara</forename><surname>Mcallister</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julian</forename><surname>Tutuncu-Macias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sathya</forename><surname>Gunasekar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">S</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Beckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gregory</forename><forename type="middle">R</forename><surname>Ganger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM Transactions on Storage</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">22</biblScope>
			<date type="published" when="2022-08">August 2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">ARC: A self-tuning, low overhead replacement cache</title>
		<author>
			<persName><forename type="first">Nimrod</forename><surname>Megiddo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dharmendra</surname></persName>
		</author>
		<author>
			<persName><surname>Modha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2nd USENIX conference on file and storage technologies, FAST&apos;03</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Caching in video CDNs: building strong lines of defense</title>
		<author>
			<persName><forename type="first">Kianoosh</forename><surname>Mokhtarian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hans-Arno</forename><surname>Jacobsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth European Conference on Computer Systems -EuroSys &apos;14, EuroSys&apos;14</title>
		<meeting>the Ninth European Conference on Computer Systems -EuroSys &apos;14, EuroSys&apos;14<address><addrLine>Amsterdam, The Netherlands</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">SNIA IOTTA Trace Repository. Storage Networking Industry Association</title>
		<author>
			<persName><forename type="first">Dushyanth</forename><surname>Narayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Austin</forename><surname>Donnelly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Antony</forename><surname>Rowstron</surname></persName>
		</author>
		<editor>Geoff Kuenning</editor>
		<imprint>
			<date type="published" when="2007-03">March 2007</date>
		</imprint>
	</monogr>
	<note>MSR Cambridge traces (SNIA IOTTA trace set 388)</note>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Write off-loading: Practical power management for enterprise storage</title>
		<author>
			<persName><forename type="first">Dushyanth</forename><surname>Narayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Austin</forename><surname>Donnelly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Antony</forename><surname>Rowstron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">6th USENIX Conference on File and Storage Technologies (FAST 08)</title>
		<meeting><address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2008-02">February 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Analysis of the generalized clock buffer replacement scheme for database transaction processing</title>
		<author>
			<persName><forename type="first">F</forename><surname>Victor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Asit</forename><surname>Nicola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">M</forename><surname>Dan</surname></persName>
		</author>
		<author>
			<persName><surname>Dias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">20 of SIGMETRICS&apos;92</title>
		<imprint>
			<date type="published" when="1992-06">June 1992</date>
			<biblScope unit="page" from="35" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Analysis of garbage collection algorithms and memory management in java</title>
		<author>
			<persName><forename type="first">Paula</forename><surname>Pufek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hrvoje</forename><surname>Grgi?</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Branko</forename><surname>Mihaljevi?</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 42nd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1677" to="1682" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Frozenhot cache: Rethinking cache management for modern software</title>
		<author>
			<persName><forename type="first">Ziyue</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cheng</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaosong</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mao</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yinlong</forename><surname>Xu</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>In Twenty-third EuroSys</note>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<author>
			<persName><surname>Conference</surname></persName>
		</author>
		<title level="m">EuroSys&apos;23</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">EC-Cache:load-balanced,low-latency cluster caching with online erasure coding</title>
		<author>
			<persName><forename type="first">Mosharaf</forename><surname>Kv Rashmi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jack</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ion</forename><surname>Kosaian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kannan</forename><surname>Stoica</surname></persName>
		</author>
		<author>
			<persName><surname>Ramchandran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th USENIX symposium on operating systems design and implementation, OSDI&apos;16</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="401" to="417" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Unifying the data center caching layer: Feasible? Profitable?</title>
		<author>
			<persName><forename type="first">Liana</forename><forename type="middle">V</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexis</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pratik</forename><surname>Poudel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Raju</forename><surname>Rangaswami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th ACM workshop on hot topics in storage and file systems, HotStorage &apos;21</title>
		<meeting>the 13th ACM workshop on hot topics in storage and file systems, HotStorage &apos;21<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="50" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Learning Cache Replacement with CACHEUS</title>
		<author>
			<persName><forename type="first">Liana</forename><forename type="middle">V</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Farzana</forename><surname>Yusuf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Lyons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eysler</forename><surname>Paz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Raju</forename><surname>Rangaswami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giri</forename><surname>Narasimhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">19th USENIX Conference on File and Storage Technologies, FAST&apos;21</title>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2021-02">February 2021</date>
			<biblScope unit="page" from="341" to="354" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">CliqueMap: productionizing an RMA-based distributed caching system</title>
		<author>
			<persName><forename type="first">Arjun</forename><surname>Singhvi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Akella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maggie</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rob</forename><surname>Cauble</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Harshad</forename><surname>Deshmukh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dan</forename><surname>Gibson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Milo</forename><forename type="middle">M K</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amanda</forename><surname>Strominger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><forename type="middle">F</forename><surname>Wenisch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amin</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2021 ACM SIGCOMM 2021 Conference, SIGCOMM&apos;21</title>
		<meeting>the 2021 ACM SIGCOMM 2021 Conference, SIGCOMM&apos;21</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2021-08">August 2021</date>
			<biblScope unit="page" from="93" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">EELRU: simple and effective adaptive page replacement</title>
		<author>
			<persName><forename type="first">Yannis</forename><surname>Smaragdakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Scott</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGMETRICS Performance Evaluation Review</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="122" to="133" />
			<date type="published" when="1999-05">May 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Sequentiality and prefetching in database systems</title>
		<author>
			<persName><forename type="first">Alan</forename><surname>Jay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Smith</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="223" to="247" />
			<date type="published" when="1978-09">September 1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Arvind Krishnamurthy, Emmett Witchel, and others. Learning relaxed belady for content distribution network caching</title>
		<author>
			<persName><forename type="first">Zhenyu</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anees</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wyatt</forename><surname>Shaikh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Soudeh</forename><surname>Lloyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Changhoon</forename><surname>Ghorbani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><surname>Akella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">17th USENIX symposium on networked systems design and implementation, NSDI&apos;20</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="529" to="544" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Footprint Descriptors: Theory and Practice of Cache Provisioning in a Global CDN</title>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Sundarrajan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mingdong</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mangesh</forename><surname>Kasbekar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramesh</forename><forename type="middle">K</forename><surname>Sitaraman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th International Conference on emerging Networking EXperiments and Technologies, CoNEXT&apos;17</title>
		<meeting>the 13th International Conference on emerging Networking EXperiments and Technologies, CoNEXT&apos;17<address><addrLine>Incheon Republic of Korea</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017-11">November 2017</date>
			<biblScope unit="page" from="55" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">RIPQ: Advanced photo caching on flash for facebook</title>
		<author>
			<persName><forename type="first">Linpeng</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wyatt</forename><surname>Lloyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">13th USENIX Conference on File and Storage Technologies, FAST&apos;15</title>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="373" to="386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Driving cache replacement with ML-based LeCaR</title>
		<author>
			<persName><forename type="first">Giuseppe</forename><surname>Vietri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Liana</forename><forename type="middle">V</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wendy</forename><forename type="middle">A</forename><surname>Martinez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Lyons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Raju</forename><surname>Rangaswami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giri</forename><surname>Narasimhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th USENIX workshop on hot topics in storage and file systems, hotStorage&apos;18</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2018-07">July 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Efficient MRC construction with SHARDS</title>
		<author>
			<persName><forename type="first">Carl</forename><forename type="middle">A</forename><surname>Waldspurger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nohhyun</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Garthwaite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Irfan</forename><surname>Ahmad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">13th USENIX conference on file and storage technologies, FAST&apos;15</title>
		<meeting><address><addrLine>Santa Clara, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2015-02">February 2015</date>
			<biblScope unit="page" from="95" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Separating data via block invalidation time inference for write amplification reduction in {Log-Structured} storage</title>
		<author>
			<persName><forename type="first">Qiuping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinhong</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tao</forename><surname>Ouyang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chao</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lilong</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">20th USENIX Conference on File and Storage Technologies (FAST 22)</title>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="429" to="444" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Austere flash caching with deduplication and compression</title>
		<author>
			<persName><forename type="first">Qiuping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinhong</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wen</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erik</forename><surname>Kruus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Biplob</forename><surname>Debnath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Patrick Pc</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2020 USENIX Annual Technical Conference (USENIX ATC 20)</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="713" to="726" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<monogr>
		<title level="m" type="main">Enhancing the scalability of memcached</title>
		<author>
			<persName><forename type="first">Alex</forename><surname>Wiggins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Langston</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
	<note type="report_type">Intel document</note>
</biblStruct>

<biblStruct xml:id="b73">
	<monogr>
		<title/>
		<author>
			<persName><surname>Analytics</surname></persName>
		</author>
		<ptr target="https://wikitech.wikimedia.org/wiki/Analytics/Data_Lake/Traffic/Caching" />
		<imprint>
			<biblScope unit="page" from="2020" to="2025" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">The storage hierarchy is not a hierarchy: Optimizing caching on modern storage devices with orthus</title>
		<author>
			<persName><forename type="first">Kan</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhihan</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guanzhou</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kaiwei</forename><surname>Tu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramnatthan</forename><surname>Alagappan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rathijit</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kwanghyun</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><forename type="middle">C</forename><surname>Arpaci-Dusseau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Remzi</forename><forename type="middle">H</forename><surname>Arpaci-Dusseau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">19th USENIX conference on file and storage technologies, FAST&apos;21</title>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2021-02">February 2021</date>
			<biblScope unit="page" from="307" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<monogr>
		<title level="m" type="main">Towards Latency Awareness for Content Delivery Network Caching. ATC&apos;22</title>
		<author>
			<persName><forename type="first">Gang</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Li</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="789" to="804" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Mithril: mining sporadic associations for cache prefetching</title>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reza</forename><surname>Karimi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Trausti</forename><surname>Saemundsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Avani</forename><surname>Wildani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ymir</forename><surname>Vigfusson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 Symposium on Cloud Computing, SoCC &apos;17</title>
		<meeting>the 2017 Symposium on Cloud Computing, SoCC &apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2017-09">September 2017</date>
			<biblScope unit="page" from="66" to="79" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">C2DN: How to harness erasure codes at the edge for efficient content delivery</title>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anirudh</forename><surname>Sabnis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">S</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Rashmi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramesh</forename><forename type="middle">K</forename><surname>Sitaraman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">19th USENIX symposium on networked systems design and implementation, NSDI&apos;22</title>
		<meeting><address><addrLine>Renton, WA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2022-04">April 2022</date>
			<biblScope unit="page" from="1159" to="1177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">A large scale analysis of hundreds of in-memory cache clusters at Twitter</title>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Yue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Rashmi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th USENIX symposium on operating systems design and implementation, OSDI&apos;20</title>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2020-11">November 2020</date>
			<biblScope unit="page" from="191" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Segcache: a memoryefficient and scalable in-memory key-value cache for small objects</title>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Yue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rashmi</forename><surname>Vinayak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">18th USENIX Symposium on Networked Systems Design and Implementation, NSDI&apos;21</title>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2021-04">April 2021</date>
			<biblScope unit="page" from="503" to="518" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">CacheSack: Admission Optimization for Google Datacenter Flash Caches</title>
		<author>
			<persName><forename type="first">Tzu-Wei</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seth</forename><surname>Pollen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mustafa</forename><surname>Uysal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arif</forename><surname>Merchant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Homer</forename><surname>Wolfmeister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2022 USENIX Annual Technical Conference, ATC&apos;22</title>
		<meeting><address><addrLine>Carlsbad, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2022-07">July 2022</date>
			<biblScope unit="page" from="1021" to="1036" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Optimal Data Placement for Heterogeneous Cache, Memory, and Storage Systems</title>
		<author>
			<persName><forename type="first">Lei</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reza</forename><surname>Karimi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Irfan</forename><surname>Ahmad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ymir</forename><surname>Vigfusson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM on Measurement and Analysis of Computing Systems</title>
		<meeting>the ACM on Measurement and Analysis of Computing Systems</meeting>
		<imprint>
			<date type="published" when="2020-05">May 2020</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<monogr>
		<title level="m" type="main">When is the Cache Warm? Manufacturing a Rule of Thumb</title>
		<author>
			<persName><forename type="first">Lei</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juncheng</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anna</forename><surname>Blasiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mike</forename><surname>Mccall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ymir</forename><surname>Vigfusson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Tencent block storage traces (SNIA IOTTA trace set 27917)</title>
		<author>
			<persName><forename type="first">Yu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ping</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ke</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hua</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianying</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yongguang</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bin</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SNIA IOTTA Trace Repository. Storage Networking Industry Association</title>
		<editor>
			<persName><forename type="first">Geoff</forename><surname>Kuenning</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2018-10">October 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">OSCA: An Online-Model based cache allocation scheme in cloud block storage systems</title>
		<author>
			<persName><forename type="first">Yu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ping</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ke</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hua</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianying</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yongguang</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bin</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2020 USENIX Annual Technical Conference (USENIX ATC 20)</title>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2020-07">July 2020</date>
			<biblScope unit="page" from="785" to="798" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">AutoSight: Distributed Edge Caching in Short Video Network</title>
		<author>
			<persName><forename type="first">Yuchao</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pengmiao</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhili</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bo</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wendong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bo</forename><surname>Lian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ke</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="194" to="199" />
			<date type="published" when="2020-05">May 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">LIRS2: an improved LIRS replacement algorithm</title>
		<author>
			<persName><forename type="first">Chen</forename><surname>Zhong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xingsheng</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Song</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th ACM International Conference on Systems and Storage, SYSTOR&apos;21</title>
		<meeting>the 14th ACM International Conference on Systems and Storage, SYSTOR&apos;21<address><addrLine>Haifa Israel</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2021-06">June 2021</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Tencent photo cache traces (SNIA IOTTA trace set 27476)</title>
		<author>
			<persName><forename type="first">Ke</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Si</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hua</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ping</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xubin</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rui</forename><surname>Lan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenyan</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenji</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianming</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SNIA IOTTA Trace Repository</title>
		<editor>
			<persName><forename type="first">Geoff</forename><surname>Kuenning</surname></persName>
		</editor>
		<imprint>
			<publisher>Storage Networking Industry Association</publisher>
			<date type="published" when="2016-02">February 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">The multi-queue replacement algorithm for second level buffer caches</title>
		<author>
			<persName><forename type="first">Yuanyuan</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Philbin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual conference on USENIX Annual Technical Conference, ATC&apos;01</title>
		<meeting>the annual conference on USENIX Annual Technical Conference, ATC&apos;01<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="91" to="104" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
