<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Design Patterns in FPS Levels</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Kenneth</forename><surname>Hullett</surname></persName>
							<email>khullett@soe.ucsc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95064</postCode>
									<settlement>Santa Cruz Santa Cruz</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jim</forename><surname>Whitehead</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95064</postCode>
									<settlement>Santa Cruz Santa Cruz</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Design Patterns in FPS Levels</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5F636A433C62AF85081C0A8D659B50FC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T10:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D.2.2 [Software Engineering]: Design Tools and Techniques</term>
					<term>K.8.0 [Personal Computing]: Games level design</term>
					<term>game design</term>
					<term>design patterns</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Level designers create gameplay through geometry, AI scripting, and item placement. There is little formal understanding of this process, but rather a large body of design lore and rules of thumb. As a result, there is no accepted common language for describing the building blocks of level design and the gameplay they create. This paper presents level design patterns for first-person shooter (FPS) games, providing cause-effect relationships between level design elements and gameplay. These patterns allow designers to create more interesting and varied levels.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>This paper presents a taxonomy of design patterns that appear in single-player first-person shooter (FPS) levels. FPS games are combat-oriented games where the player engages other characters with a variety of projectile and melee weapons. The player navigates a 3D world while looking through the eyes of the main character (i.e., a first-person point of view).</p><p>Play in FPS games is divided into discrete levels. Levels are generally designed for single-or multi-player play, but not both. Single-player levels tend to be a linear sequence of challenges the player must overcome to reach the final goal, whereas multiplayer levels are designed to create areas for player-vs.-player combat to occur.</p><p>While level geometry is the most noticeable aspect of the level designer's work, other considerations are important in the creation of gameplay. Level designers place objects in the world, including weapons, ammunition, and power-ups. They must be sure to provide enough so the player can complete the level, but not so much as to remove all challenge. They also place Non-Player Characters (NPCs), both friendly and enemy, and use AI scripting to control their behavior.</p><p>When designing an FPS level, there are many factors the designer must consider, including challenge, pacing, and ease of navigation. Though many FPS games have been made, and numerous books have been written on the subject <ref type="bibr" target="#b3">[4]</ref> <ref type="bibr" target="#b5">[6]</ref>[7] <ref type="bibr" target="#b10">[11]</ref>, there is little formal understanding of their level design. The existing literature conveys design lore and industry practice without exploring how levels create gameplay. Experienced level designers draw from their extensive knowledge of existing games when they create a level. They have an intuitive feel for what features they should include in a level to create different types of gameplay. They may imitate and adapt elements they've observed in other levels. Presently, there is no structured way for experienced designers to pass on this knowledge to less experienced designers. A more formal framework would improve designers' abilities to communicate design ideas as well as provide a reference for possible features to incorporate into levels.</p><p>The design patterns presented in this paper were developed from an analysis of single-player levels, and therefore have the greatest applicability to single-player level design; they can also be applied to many situations that arise in multi-player level design. The patterns are described in terms of their intended use, effect on gameplay, and variations within the pattern. Examples from popular commercial games are given.</p><p>The use of design patterns to describe levels is inspired by design patterns used in both software engineering and architecture (the latter of which also inspired the former) <ref type="bibr" target="#b0">[1]</ref> <ref type="bibr" target="#b11">[12]</ref>. A set of design patterns form a language for describing design practices in the domain. <ref type="bibr">Duffy et al.</ref> characterize patterns in software engineering by the following:</p><p>• "Noticing and naming the common problems in a field of interest,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Describing the key characteristics of effective solutions for meeting some stated goal,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Helping the designer move from problem to problem in a logical way, and • Allowing for many different paths through the design process." <ref type="bibr" target="#b9">[10]</ref> This paper adapts these characteristics to the domain of level design in FPS games. For level designers the problem is creating an entertaining and engaging experience for the player, and the solution is in how they design the level. We adapt the above to define characteristics of a pattern language for the domain of level design, described in detail below:</p><p>• Noticing and naming common structures that produce specific types of gameplay,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Describing the key characteristics of these structures and how they affect gameplay,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Helping the designer address level design concerns in a logical way, and</p><formula xml:id="formula_0">•</formula><p>Allowing for different approaches to create the desired gameplay.</p><p>Noticing and naming common structures. The taxonomy was created by identifying design patterns in levels and the gameplay they produce. Examining existing levels and inferring the intended gameplay is the most common means of identifying design patterns, but other methods can be employed, including interviewing designers about how they design to elicit certain types of gameplay and reading books and articles that describe standard industry practices.</p><p>Describing the key characteristics of these structures. In identifying the patterns, we noticed that significant variations exist within any given pattern, and those variations have an impact on the gameplay produced. As examples of patterns are identified, variations and their effects are noted, resulting in a more complete detailed view of the pattern and its parameters.</p><p>Helping the designer address level design concerns in a logical way. Armed with knowledge of level design patterns, the designer can tailor a level to the desired gameplay. For example, if a designer wants to change the pace of a level, they can add or alter instances of patterns that are known to affect pacing. If, during gameplay tuning, they discover a problem in a level, they can use the taxonomy to modify existing patterns to address the issues.</p><p>Allowing for different approaches. The taxonomy identifies different design patterns that will affect gameplay in similar ways.</p><p>If the designer wants to create a certain type of gameplay, they can identify multiple elements in the taxonomy that would be suitable, and pick one that is appropriate for that instance. They are not limited to repeatedly using the same patterns in the same ways; they can use different patterns, or variations with patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>There are two broad streams of work related to design patterns for level design, those concerning patterns in game design, and other work on level design in general. These are described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Design Patterns</head><p>The use of design patterns to better understand levels is inspired by their use in software engineering <ref type="bibr" target="#b11">[12]</ref>, which were in turn inspired by design patterns in architecture <ref type="bibr" target="#b0">[1]</ref>. Kreimeier was among the first to adapt the concept of design patterns to the domain of digital games by identifying game design patterns <ref type="bibr" target="#b15">[16]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Level Design</head><p>There are many books on level design written from an industry perspective. They discuss common practices and provide instruction on tools for aspiring level designers. In his book, Co takes the reader through the process of designing an FPS level, from brainstorming initial ideas, building the level using Unreal Editor, to testing and improving the level <ref type="bibr" target="#b6">[7]</ref>. While useful references, neither this work, nor similar books by Bryne <ref type="bibr" target="#b3">[4]</ref>, Clayton <ref type="bibr" target="#b5">[6]</ref>, or Feil et al. <ref type="bibr" target="#b10">[11]</ref> present deep analysis of how level design creates gameplay.</p><p>For example, Feil et al. describe the importance of overall pacing in a level. They discuss how a rhythm of rising and falling tension can contribute to the overall flow of a level without providing methods for creating these effects. Similarly, they discuss strategic considerations of terrain, such as access and height advantage, but do not discuss how they create gameplay. In contrast, the work presented in this paper provides specific, concrete idioms of level design described in terms of their direct impact on gameplay.</p><p>Several shorter works examine single aspects of level design, from both academic and industry perspectives. The aspects examined can be broadly categorized as relating to gameplay -pacing, tension, and challenge -or space -spatial configurations and how the player navigates.</p><p>Pacing. Pacing is the overall flow of a level resulting from raising or lowering tempo, tension, challenge, or difficulty throughout the level. Coulianos proposes methods to analyze and improve level pacing <ref type="bibr" target="#b7">[8]</ref>. Designers can plot the expected pacing as a sequence of gameplay elements. Playtesting can then be used to see how closely the player's experience matches the designer's expectations, leading to a series of iterative changes until the designer is satisfied.</p><p>Davies also explores aspects of level pacing and suggests techniques designers can use to control pacing <ref type="bibr" target="#b8">[9]</ref>. For example, the player's impetus to move is a key aspect of game pace, which the designer may want to increase or decrease. Movement impetus can be increased by elements such as a time limit or a threat from behind, or decreased by an obstacle or NPC interaction.</p><p>Tension. Tension is the mental strain a game can create in the player as they struggle to survive or complete objectives. Level designers use tension to affect pacing. For example, NPCs can create tension by urging the player to move through the level faster. Its use is examined in depth by Wright <ref type="bibr" target="#b20">[21]</ref>, who conducted a study with subjects playing one of three levels that used NPCs to create tension differently. Completion times as well as the subject's subjective impressions were compared to evaluate the methods. He found that urgency imparted from a friendly NPC was the most effective method, while chasing or being chased by enemy NPCs were less effective.</p><p>Challenge. In his study of what makes games fun, Malone identified three main elements: challenge, fantasy, and curiosity <ref type="bibr" target="#b16">[17]</ref>. All three of these are useful to level designers, but challenge is the most critical. Malone found the best way to create challenge is to provide clear goals whose attainment is uncertain. If the goal is unclear, the player will become frustrated. If the goal is too easy to attain, the player will become bored. Furthermore, if the goal is long range, there should be feedback given to the player that communicates progress towards the goal.</p><p>Segmentation. Segmentation is a broad concept that can be applied to the examination of levels both in terms of gameplay and space. It refers to methods for breaking down aspects of the game into smaller elements. Zagal et al. <ref type="bibr" target="#b21">[22]</ref> describe three types of segmentation: temporal, spatial, and challenge. Temporal segmentation is closely related to pacing, as increasing or decreasing the length of time allowed for gameplay can affect tension and challenge. In terms of spatial segmentation, levels themselves are a form of this, but they can be segmented internally as well. As a player moves into a distinct section of a level, their behavior may be affected. For example, moving into a large arena with enemy NPCs will increase tension and difficulty. The third type of segmentation, challenge, also relates to pacing.</p><p>Breaking up the challenges presented to the player allows the designer to control the level pace.</p><p>Spatial configurations. Chen et al. compares level design to the architectural design that is used in real world buildings <ref type="bibr" target="#b4">[5]</ref>. When designing a building, the architect includes architectural devices to create specific effects, such as customizing a space to a particular use. The authors identify some architectural principles that level designers can apply to create spaces for gameplay, including having a clear path through the level, how to use different spatial organizations such as linear or hub-and-spoke, or including unique elements to break up the design.</p><p>An examination of how space is used in team-based multi-player FPS levels was presented by Güttler et al. <ref type="bibr" target="#b13">[14]</ref>. They identified common spatial configurations and how they contribute to gameplay. The key elements they studied are collision points and tactical choice. In a team multi-player level, the designer provides multiple routes through the level, allowing players the chance to make a strategic decision. The choice of route determines where in the level the two teams will eventually clash; these collision points are the major contested spaces where the game is played.</p><p>There are some significant empirical studies that evaluate the effects of level design on gameplay. Gee studied the use of deadends in FPS levels <ref type="bibr" target="#b12">[13]</ref>. He identified ways in which dead ends are used and built example levels that included them or not. Subjects were observed playing levels and their preferences and playing time were reported. Results indicated that dead ends did not negatively impact FPS levels.</p><p>An empirical study by Tahhan explored directional choices in FPS levels <ref type="bibr" target="#b19">[20]</ref>. Similar to the Gee study, they identified different techniques for presenting alternate routes and performed user studies on a set of representative levels. Survey responses and subject observations contributed to their conclusion that choice improves player immersion, as the lack of choice in a linear level can break the illusion of being in large, dynamic world.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Navigation.</head><p>A key use of spatial configuration in levels is in providing navigational cues to the player. This is particularly true in FPS levels as they are generally large, complex environments.</p><p>Nerurkar examines some means level designers use to aid player navigation <ref type="bibr" target="#b17">[18]</ref>. Some, such as maps and navigation markers, are separate from the level design, but many are a function of the level design. Examples include features that attract the player's attention, use of light and contrast, and directions from NPCs.</p><p>Hoeg performed an empirical study of player navigation and player types in FPS levels <ref type="bibr" target="#b14">[15]</ref>. He identified elements that designers use to influence pathing decisions, including lighting, sound, and resistance, and formed a theory about how Bartle's player types <ref type="bibr" target="#b1">[2]</ref> would react in each case. He constructed a level with multiple decision points, using different navigation cues. Subjects' player types were determined by a survey, and their routing choices were recorded while playing the level. The results were compared to see if the theory was consistent with the player's behavior. They found that some elements, such as placement of doors and motion, had strong correlation, whereas other factors had weak or no correlation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PATTERN COLLECTION</head><p>The descriptions of the patterns explain how they can be used, the concerns designers must address, and the gameplay created. The fields are listed below:</p><p>Description -A high level description of the pattern and the major design considerations.</p><p>Affordances -Aspects of the pattern that can be varied by the designer.</p><p>Consequences -A description of the gameplay the pattern creates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships -How the pattern interacts with other patterns.</head><p>Examples -Some examples from popular commercial games that illustrate the pattern. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Patterns for Positional Advantage</head><p>These patterns all result in one entity gaining an advantage in position over another entity. A positional advantage usually affords opportunities to attack other entities without being exposed to counter attack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Sniper Location</head><p>Description. Sniper locations are one of the most common patterns. A character in a sniper location can attack other characters with long-range weapons while remaining protected.</p><p>Any elevated position that overlooks some portion of the level is potentially a sniper location. They may be intended for use by either players, NPCs, or both.</p><p>Creating a sniper location for use by an enemy rather than the player requires additional consideration. Enemies positioned in the sniper location may require special scripting to create the desired behavior; they should remain in place, using cover if available, and engage the player with long range weapons.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The height of the sniper location over the main part of the level • How large of an area is available for the sniper</p><formula xml:id="formula_1">•</formula><p>The amount of cover available for the sniper •</p><p>The size of the area that the sniper can cover from the sniper location • How accessible the sniper location is from the area overlooked</p><p>Consequences. When confronted with an enemy sniper location, the player is forced to make careful use of cover or seek alternate routes to avoid being exposed to fire. This can increase the tension and slow the pace of a level while creating a challenge for the player.</p><p>A player sniper location generally slows the pace of a level while lowering tension as the player is able to engage enemy NPCs without being exposed to enemy fire. However, if the sniper location is not isolated from the rest of the level, the player will have to defend the access point as well, increasing tension.</p><p>Relationships. Sniper locations interact with many other patterns. They may be placed to cover an arena or a choke point. Most stationary turrets are also sniper locations. A shooting gallery is specialized type of sniper location.</p><p>Examples. In the level "Route Kanal" of Half-Life 2, the player encounters an enemy sniper location, shown in Figure <ref type="figure" target="#fig_1">2</ref>. It is high above the player's position, but has very little cover. The player can engage the enemy NPCs, but is exposed and needs to be cautious.</p><p>There is a sniper location in the level "Corinth River" of Killzone 2. The player is on an elevated walkway overlooking a mediumsized area containing enemy NPCs. Both the player and enemy NPCs have cover, but by looking down from above, the player is able to locate the enemy NPCs and engage them. Affordances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The length and width of the passageway covered</p><formula xml:id="formula_2">•</formula><p>The height of the elevated area above the passageway</p><formula xml:id="formula_3">•</formula><p>The amount of cover available in the passageway Consequences. A gallery is used by a designer to create a challenge for the player. The characters in the passageway are open to attack and need to use cover if available. If the player is in the elevated area, the intent may be to enable the use of special weapons like grenades.</p><p>Relationships. Similar to sniper location, with the added element of covering a specific passageway that characters are moving through.</p><p>Examples. There is a gallery in the level "Urban Flight" of Half-Life 2: Episode 2. A friendly NPC is positioned overlooking a passageway enemy NPCs are advancing through towards the player. The friendly NPC is able to eliminate the most of the enemy NPCs before they reach the player.</p><p>The Halo 3 level "Floodgate" features a gallery. The player has to move up a ramp with enemies positioned on the elevated area above. The player can attempt to engage with grenades, or move up the ramp quickly and engage with conventional weapons.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Choke Point</head><p>Description. A choke point is a narrow area with no alternate routes. Typically, it is an entrance to a room, but a choke point could exist in an otherwise open area. As the player or enemy NPCs move through the choke point, they are exposed to attack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The width of the choke point opening •</p><p>The length of the choke point</p><p>Consequences. If the player is moving through the choke point, they are exposed to enemy fire, increasing tension in the level. If enemy NPCs are moving through the choke point, the player is able to attack with little risk, reducing tension and challenge.</p><p>Increasing the width lessens the effects as more characters are able to move through at a time. Increasing the length can also reduce effects as characters have a place to retreat to.</p><p>Relationships. A choke point may be used in conjunction with a sniper location, providing cover for the attacker.</p><p>Examples. The player encounters a choke point in the level "Corinth River" of Killzone 2. They must move through a long, narrow corridor with some cover, while being engaged by enemy NPCs from both sides.</p><p>The level "Recovery" of Crysis contains a choke point. The player has to move up a narrow path with minimal cover. To proceed, they must pass through a choke point defended by enemy NPCs operating a turret. The player is forced to use cover carefully until they can get close enough to engage them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Patterns for Large-scale Combat</head><p>These patterns provide areas for combat gameplay, with the player either engaging large numbers of enemy NPCs or a single powerful enemy NPC (a boss fight).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Arena</head><p>Description. Easily the most common pattern, an arena is an open area or wide corridor where the player encounters some form of heavy resistance, either waves of enemy NPCs, or a boss fight. Designers should ensure that the player is not overwhelmed. Cover and items can be placed to allow the player to make continual progress towards their goal.</p><p>In a boss fight the player may have to find the boss' weak spot, or hit it a certain number of times. The designer must communicate the method of defeating the boss to the player. For example, the player may be provided with a high powered weapon just before entering the arena.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The size of the arena (length, width, height)</p><formula xml:id="formula_4">•</formula><p>The amount of cover available in the arena Consequences. If the player is outnumbered and lacks powerful weapons, they are forced to move deliberately and make use of cover. This increases challenge and slows the pace. If the player has a powerful weapon or is otherwise not seriously threatened, the effect is to increase pace as the player quickly eliminates large numbers of enemy NPCs.</p><p>Relationships. An arena can contain sniper locations or turrets.</p><p>Entrances to an arena may be choke points.</p><p>Examples. The Gears of War level "Trial by Fire" contains several arenas. One example is a room of medium width and length and a low ceiling. There is a significant amount of cover, which is used by both the player and enemy NPCs.</p><p>The level "Corinth River" of Killzone 2 begins with a large arena. The player and friendly NPCs engage enemy NPCs in a space with medium width and depth, with large amounts of cover. Some NPCs are positioned at elevated sniper locations with turrets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Stronghold</head><p>Description. A stronghold is a confined area, generally with good cover. Characters in a stronghold can defend against attackers while remaining protected. A stronghold has limited access points so the defending characters can cover them easily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The size of the stronghold</p><formula xml:id="formula_5">•</formula><p>The amount of cover available in the stronghold</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The number and type of access points • If defending/capturing the stronghold is a level objective Consequences. Generally a stronghold would be designed as a defensible location for the player. The effect is usually to reduce the pace of the level, but in some cases, a large number of entrances or advancing enemy NPCs can have the effect of increasing tension and challenge.</p><p>Relationships. A stronghold can be considered a specialized type of arena. Entrances to the stronghold may be choke points.</p><p>Examples. The Halo 3 level "The Covenant" contains a stronghold. The player is in a large open area and engages enemy NPCs entering through multiple entrances. These entrances are choke points that help keep the player from being swarmed by enemy NPCs, but it is challenging to cover them all at once.</p><p>There is an instance of a stronghold in the level "Fish in a Barrel" of Gears of War, shown in Figure <ref type="figure" target="#fig_2">3</ref>. The player and friendly NPCs are in a central area with minimal amounts of cover while being engaged by enemy NPCs from multiple directions. The effect is challenging and high tension combat. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Patterns for Alternate Gameplay</head><p>These patterns are used to break up levels with sections of gameplay that differ significantly from the standard gameplay.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Turret</head><p>Description. A turret is a special, high-powered weapon that is usually fixed at a location. The turret may be operable by the player or NPCs, or be automatic. Since turrets are usually more powerful than standard weapons, care must be taken to insure that the turret does not unbalance the level.</p><p>A common use of a turret is to create a challenge where the player has to carefully move from cover to cover.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The size of the area covered by the turret</p><formula xml:id="formula_6">•</formula><p>The type of weapon used as a turret</p><formula xml:id="formula_7">•</formula><p>The amount of ammunition available for the turret • If the turret is fixed or mobile Consequences. When the player is given a turret, the effect is to break up the level by providing an alternate gameplay state. Using a powerful weapon generally increases pace as the player is able to overcome enemy NPCs quickly.</p><p>Automatic or enemy NPC turrets have effects similar to sniper locations: player movement is limited, increasing tension and challenge while slowing the pace.</p><p>Relationships. A turret may be placed in a sniper location. A turret may be mounted on a vehicle during a vehicle section.</p><p>Examples. There is a turret in the level "Route Kanal" of Half-Life 2; a fixed, powerful weapon used by the player to engage several waves of enemy NPCs.</p><p>In the Gears of War level "Fish in a Barrel" there is a turret operated by an Enemy NPC. The turret itself has little cover, but prevents the player from advancing through the arena. If the player uses a flanking route, they can eliminate the enemy NPC and operate the turret themselves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Vehicle Section</head><p>Description. Vehicle sections are a form of alternate gameplay where the player drives or rides in a vehicle. The player may be able to shoot, either with a standard weapon or a special weapon mounted to the vehicle. Enemy NPCs may also use vehicles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances.</head><p>• Whether the player is a driver or passenger in the vehicle •</p><p>The type of vehicle available, including its speed, armament, and capacity • Whether the vehicle section is linear or an arena</p><formula xml:id="formula_8">•</formula><p>The nature of the terrain: flat or undulating</p><p>Consequences. The effect of a vehicle section is to break up a level by significantly altering the gameplay. Since vehicles are generally faster than normal movement, the pace of the level is increased. Challenge can be increased if the vehicle is difficult to control or the terrain is difficult to negotiate.</p><p>Relationships. The vehicle may have a powerful mounted weapon with similar effects as a turret.</p><p>Examples. Most of the level "Tsavo Highway" in Halo 3 is a vehicle section. The player can either drive the vehicle or ride while using either standard weapons or the mounted turret. Parts of the level are narrow linear sections that have no enemy NPCs but are difficult to negotiate, while other sections are arenas with large numbers of enemy NPCs, also in vehicles.</p><p>There is a vehicle section in the Crysis level "Recovery." The player drives the vehicle down a narrow road. The narrowness and difficulty of controlling the vehicle create a challenge for the player. There are some enemy NPCs that the player can engage with a mounted turret.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Patterns for Alternate Routes</head><p>These patterns provide players with choices about how they want to engage the level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1">Split Level</head><p>Description. A split level is a corridor with an upper and a lower section. Characters on the upper section can attack characters on the lower level. Players can chose the upper or lower route, or switch between them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The difference in height between the levels</p><formula xml:id="formula_9">•</formula><p>The amount of openness between the levels Consequences. Allows for different strategies and can increase the pace of a level as the player moves back and forth between levels.</p><p>Relationships. If the corridor is narrow, the upper section could be a gallery. Using one section to avoid enemy NPCs in the other section makes it a type of flanking route.</p><p>Examples. There is a split level in the "Lowlife" level of Half-Life 2: Episode 1, shown in  The Halo 3 level "Crow's Nest" features a long split level section.</p><p>The player may stay on the upper level and engage enemies on the lower level, or use the lower section and engage them directly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2">Hidden Area</head><p>Description. An example of a hidden area is a small room containing a cache of items, often special weapons or power-ups. Hidden areas are usually off the main route followed by the player. The intent is to reward players for exploration. The difficulty of finding or accessing a hidden area may be proportional to value of the reward.</p><p>Affordances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The ease of finding and accessing the hidden area</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>What rewards are available in the hidden area • Whether the hidden area is defended by enemy NPCs or not</p><p>Consequences. If the player is reward given a powerful reward, the overall challenge of the level will decrease as they've gained a significant advantage. Too powerful of a reward may completely upset the level's balance. The pacing of the level will increase and tension decrease if the player the player is now able to move quickly without worrying about threats from enemy NPCs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships. None.</head><p>Examples. The Half-Life 2: Episode 1 level "Lowlife" contains a hidden area. Just off the main path, it contains an enemy NPC and a small reward. This rewards the player for doing additional exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.3">Flanking Route</head><p>Description. An area with heavy resistance may contain an alternate route that allows characters to gain a positional advantage. Generally, enemy NPCs are positioned in the main corridor, while the player has the option to use the flanking route to get behind or alongside the enemy NPCs. A flanking route may be a separate corridor or elements of cover in a large arena.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affordances. •</head><p>The position that can be reached by flanking</p><formula xml:id="formula_10">•</formula><p>The amount of cover available while flanking Consequences. A flanking route is used to provide the player with options in combat. Players who prefer direct combat may attack the enemy NPCs without using the flanking route, whereas players who prefer a more stealthy style may avoid the enemies and engage from the side or behind. When a flanking route is used the pace of the game is reduced as a difficult section is bypassed.</p><p>Relationships. Flanking routes can exist in arenas. A flanking route might be a hidden area.</p><p>Examples. In the level "Trial by Fire" of Gears of War, the player engages enemies in a wide, narrow arena with a flanking route down one side. While the enemy NPCs engage the friendly NPCs from a cover position, the player can use the flanking route to get move behind them and engage from a covered position.</p><p>Many of the arenas in the Killzone 2 level "Corinth River" include flanking routes. For example, in one large arena with a large number of enemy NPCs, the player can move from cover to cover along the side of the arena, gaining a positional advantage on the enemy NPCs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXAMPLE</head><p>The expressive power of level design patterns is illustrated by describing an existing level in terms of the patterns. The game and level chosen, "Medical Pavilion" in Bioshock has not previously been used in the examples given above.</p><p>This level is the second in Bioshock, and the first of significant length. The initial goal of the level is to exit the level and meet up with the friendly NPC who urges the player on throughout the level via radio messages. However, this goal is not straightforward; the player discovers the exit is locked and the key is held by the level's main boss. The player must explore most of the level in order to gather items needed to engage the boss, then locate and defeat him. The level also contains some side areas that are not necessary to complete to finish the level, but do provide additional items to help the player.</p><p>The first instances of patterns the player encounters are an arena in combination with a turret. The arena is narrow, long, and high, with an upper level from which enemy NPCs emerge. There is little cover available to the player, while the enemy NPCs have a moderate amount of cover. To compensate for the lack of cover, the turret is automatic, friendly, and mobile. It moves throughout the arena and engages the enemy NPCs, allowing the player to stay reasonably protected and engage the enemies. Though this section creates tension due to the large number of aggressive enemy NPCs, the pace remains low as the player doesn't have to move or act quickly.</p><p>After the arena, the player encounters a stronghold consisting of a small room. The room has only minimal cover, and a single, narrow entrance that is a choke point. The player can also be engaged by enemy NPCs in a nearby sniper location. The player can use the available cover and engage the enemy NPCs moving through the choke point. The pace and challenge of the level is increased in this section due to the large numbers of enemy NPCs engaging the player and the minimal amount of cover available.</p><p>The next section of the level is an arena. The room is long and wide, but has a low ceiling and provides ample cover for both the player and enemy NPCs. The cover creates multiple flanking routes throughout the arena. There are two automatic enemy turrets in the room that initially prevent the player from moving, but later become friendly turrets. The effect on gameplay is initially an increase in tension and challenge, but the pace drops considerably once the turrets begin engaging the enemy NPCs.</p><p>This section ends with a small hidden area containing item rewards. This helps relieve the tension of the previous arena by giving the player an opportunity to relax while gathering items, and reduces the challenge of the following section as the player is restocked in terms of health and ammunition.</p><p>After this, the player encounters a series of small arenas, most containing enemy turrets, small numbers of enemy NPCs, and lots of cover. The effect is to establish a rhythm for the player: enter a room, find cover, disable the turret, engage enemy NPCs, collect items, and then move on. The player can set the pace as tension and challenge are low. In the middle of this sequence the rhythm is broken with a different type of arena. This one has many enemy NPCs and no cover. The player's rhythm is broken, temporarily increasing tension and pacing due to the surprise. The rhythm is then reestablished, reducing tension and pace. Some hidden areas are also in this section. The generally slow pace of this section creates an overall arc of falling and then increasing pace throughout the level.</p><p>The final section of the level is punctuated by two arenas containing boss fights. The first is a long, narrow space with flanking routes on each side. The boss is extremely difficult to defeat with the player's weapons, and he can regenerate health. The effect is a very challenging and tense fight. Following the previous section of generally low pace, the first boss fight is the peak of the overall arc of the level.</p><p>After the first boss fight, the level concludes on a generally fast pace without too much challenge. The player encounters a wave of normal enemy NPCs in a small arena with no cover and a friendly automatic turret. Following this is a boss fight in a large arena with a lot of cover. While challenging, this boss fight is not as tense and fast paced as the previous. After defeating the boss, the player encounters an enemy NPC in a sniper location just before the end of the level.</p><p>Discussion. While this level makes use of the majority of the design patterns described in this paper, it lacks any instances of the split level or gallery patterns. These patterns work best in levels with a high degree of verticality, which this level lacks. This example shows how level design patterns form a vocabulary for concisely describing a level. Without the terms introduced in this paper it would be difficult to describe a level in such a small space, and with such precision.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">DISCUSSION</head><p>Design patterns describe common FPS level design idioms, expressing cause-effect relationships between level elements and gameplay. Ten patterns are identified here, but there are undoubtedly other, unidentified patterns in the domain of FPS levels, particularly in multi-player levels.</p><p>Level design patterns can support level designers in the same way that game design patterns support game designers. They can help designers generate new ideas by combining patterns in previously unexpected ways. Development of levels can be more structured when designers initially block out sections with general descriptions in terms of patterns and fill in details later. Patterns can help solve design problems by identifying elements that create certain types of gameplay, giving the designer guidance on what to add or remove to make adjustments. Finally, they provide a language for communicating ideas about level design, as illustrated in the example above.</p><p>Unlike existing work on level design, these level design patterns provide concrete cause-effect explanations that designers can use to organize their thinking, communicate their ideas, and explore design alternatives. Additionally, these design patterns provide a useful, tangible way to teach level design. We anticipate these design patterns will lead to greater understanding of level design in FPS games, and through this, greater innovation in the genre.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ACKNOWLEDGMENTS</head><p>Special thanks to Ray Almaden of Microsoft for his insight to level design practice and Jacob Pernell, Clement Tran, Kyle Huey, and Adrien Young for their help refining the design patterns. 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">GAMES CITED</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A screenshot from Halo 3, a popular FPS game.</figDesc><graphic coords="1,309.36,297.60,233.52,131.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Sniper location in Half-Life 2 3.1.2 Gallery Description. A gallery is an elevated area parallel and adjacent to a narrow passageway. Characters in the elevated area can easily engage characters in the passageway.</figDesc><graphic coords="4,309.36,216.36,233.28,174.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Stronghold in Gears of War</figDesc><graphic coords="5,309.36,518.76,233.76,156.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 .</head><label>4</label><figDesc>The player is moving through a large open area with elevated passageways. The player must switch back and forth between the two paths to avoid the most powerful enemy NPCs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Split level in Half-Life 2: Episode 1</figDesc><graphic coords="6,309.36,443.40,233.52,131.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>The patterns are grouped into one of four following categories based on the type of gameplay produced. The categories are Positional Advantage, Large-scale Combat, Alternate Gameplay, and Alternate Routes.</figDesc><table /><note><p>Due to length constraints, this paper is only able to provide limited screenshots for all examples; for additional screenshots and more extensive examples visit the authors' website at http://eis.ucsc.edu/LevelDesignPatterns.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>There are areas with vertical offset, but there are few large open areas where it would be appropriate to include these patterns. Including them would result in a more open, expansive level. Tight, constrained levels are more appropriate to the game's theme, and open areas would break that immersion. This level also lacks any vehicle sections. Again this does not fit with the level's aesthetic.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Half-Life 2, Valve Software, 2004. Half-Life 2: Episode 1, Valve Software, 2006. Half-Life 2: Episode 2, Valve Software, 2006.</figDesc><table><row><cell>Killzone 2, Guerrilla, 2009.</cell></row><row><cell>Bioshock, 2K, 2007.</cell></row><row><cell>Crysis, Crytek, 2007.</cell></row><row><cell>Gears of War, Epic Games, 2006.</cell></row><row><cell>Halo 3, Bungie Software, 2007.</cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A Pattern Language</title>
		<author>
			<persName><forename type="first">C</forename><surname>Alexander</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977">1977</date>
			<publisher>Oxford University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Hearts, Clubs, Diamonds, Spades: Players Who suit MUDs</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bartle</surname></persName>
		</author>
		<ptr target="www.mud.co.uk/richard/hcds.htm" />
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>MUSE Ltd</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Patterns in Game Design</title>
		<author>
			<persName><forename type="first">S</forename><surname>Björk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Holopainen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Charles River Media</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Game Level Design</title>
		<author>
			<persName><forename type="first">E</forename><surname>Bryne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Charles River Media</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The Architecture of Level Design</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Brown</surname></persName>
		</author>
		<ptr target="www.gamasutra.com/resource_guide/20010716/chen_01.htm" />
	</analytic>
	<monogr>
		<title level="j">Gamasutra</title>
		<imprint>
			<date type="published" when="2001-07-16">July 16. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Introduction to Level Design for PC Games</title>
		<author>
			<persName><forename type="first">A</forename><surname>Clayton</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Level Design for Games: Creating Compelling Game Experiences</title>
		<author>
			<persName><forename type="first">P</forename><surname>Co</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">A Method for Pacing Analysis</title>
		<author>
			<persName><forename type="first">F</forename><surname>Coulianos</surname></persName>
		</author>
		<ptr target="gamecareerguide.com/features/788/a_method_for_pacing_.php" />
		<imprint>
			<date type="published" when="2009-06">Oct. 6, 2009</date>
		</imprint>
	</monogr>
	<note>Game Career Guide</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Examining Game Pace: How Single-Player Levels Tick</title>
		<author>
			<persName><forename type="first">M</forename><surname>Davies</surname></persName>
		</author>
		<ptr target="www.gamasutra.com/view/feature/4024/examining_game_pace_how_.php" />
	</analytic>
	<monogr>
		<title level="j">Gamasutra</title>
		<imprint>
			<date type="published" when="2009-05-12">May 12, 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Monte Carlo Frameworks: Building Customisable High-Performance C++ Applications</title>
		<author>
			<persName><forename type="first">D</forename><surname>Duffy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kienitz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Beginning Game Level Design</title>
		<author>
			<persName><forename type="first">J</forename><surname>Feil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Scattergood</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Thomson Course Technology</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Design Patterns: Elements of Reusable Object-Oriented Software</title>
		<author>
			<persName><forename type="first">E</forename><surname>Gamma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Helm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vlissides</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">The Right Way is the Wrong Way: Dead-End Theory in Level Design</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gee</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<pubPlace>Dallas, TX</pubPlace>
		</imprint>
		<respStmt>
			<orgName>SMU Guildhall</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">MIT Thesis</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Spatial Principles of Level-Design in Multi-Player First-Person Shooters</title>
		<author>
			<persName><forename type="first">C</forename><surname>Güttler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Johansson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NetGames</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">The Invisible Hand: Using Level Design Elements to Manipulate Player Choice</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hoeg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<pubPlace>Dallas, TX</pubPlace>
		</imprint>
		<respStmt>
			<orgName>SMU Guildhall</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">MIT Thesis</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The Case For Game Design Patterns</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kreimeier</surname></persName>
		</author>
		<ptr target="www.gamasutra.com/features/20020313/kreimeier_03.htm" />
	</analytic>
	<monogr>
		<title level="j">Gamasutra. March</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">What makes computer games fun?</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">W</forename><surname>Malone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Byte</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="258" to="277" />
			<date type="published" when="1981">1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">No More Wrong Turns</title>
		<author>
			<persName><forename type="first">M</forename><surname>Nerurkar</surname></persName>
		</author>
		<ptr target="www.gamasutra.com/view/feature/4115/no_more_wrong_turns.php" />
	</analytic>
	<monogr>
		<title level="j">Gamasutra</title>
		<imprint>
			<date type="published" when="2009-08-25">August 25, 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Educational Game Design Pattern Candidates</title>
		<author>
			<persName><forename type="first">J</forename><surname>Plass</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Homer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>White Paper, Institute for Games for Learning</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Creating Meaningful Choices in Single Player First Person Shooter Levels with Modifiable Spaces</title>
		<author>
			<persName><forename type="first">A</forename><surname>Tahhan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<pubPlace>Dallas, TX</pubPlace>
		</imprint>
		<respStmt>
			<orgName>SMU Guildhall</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">MIT Thesis</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Evoking Urgency through Level Design</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wright</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<pubPlace>Dallas, TX</pubPlace>
		</imprint>
		<respStmt>
			<orgName>SMU Guildhall</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">MIT Thesis</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Rounds, Levels, and Waves: The Early Evolution of Gameplay Segmentation</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Zagal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fernandez-Vara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mateas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Games &amp; Culture</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="175" to="198" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
