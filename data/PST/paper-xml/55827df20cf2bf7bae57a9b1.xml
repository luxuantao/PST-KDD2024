<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Analysis and Design of Controllers for AQM Routers Supporting TCP Flows</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">C</forename><forename type="middle">V</forename><surname>Hollot</surname></persName>
							<email>hollot@ecs.umass.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Vishal</forename><surname>Misra</surname></persName>
							<email>misra@cs.columbia.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027-7003</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Donald</forename><surname>Towsley</surname></persName>
							<email>towsley@cs.umass.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">University of Massa-chusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Weibo</forename><surname>Gong</surname></persName>
							<email>gong@ecs.umass.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Massachusetts</orgName>
								<address>
									<postCode>01003</postCode>
									<settlement>Amherst</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Analysis and Design of Controllers for AQM Routers Supporting TCP Flows</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">ECC7A2AB68AFB62514AE4999CDC49B07</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Computer networks</term>
					<term>feedback control</term>
					<term>parametric robustness</term>
					<term>stability</term>
					<term>time delay</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In active queue management (AQM), core routers signal transmission control protocol (TCP) sources with the objective of managing queue utilization and delay. It is essentially a feedback control problem. Based on a recently developed dynamic model of TCPs congestion-avoidance mode, this paper does three things. First, it relates key network parameters such as the number of TCP sessions, link capacity and round-trip time to the underlying feedback control problem. Second, it analyzes the present de facto AQM standard: random early detection (RED) and determines that REDs queue-averaging is not beneficial. Finally, it recommends alternative AQM schemes which amount to classical proportional and proportional-integral control. We illustrate our results using ns simulations and demonstrate the practical impact of proportional-integral control on managing queue utilization and delay.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>T HE development of new active queue management (AQM) routers will play a key role in meeting tomorrow's increasing demand for performance in Internet applications. Such applications include voice over IP (VoIP), class of service (CoS), and streaming video where packet size and session duration exhibit significant variations. In this context this paper has three objectives. First, to relate key network parameters to the AQM problem. Second, to analyze the present de facto AQM standard: random early detection (RED) and finally, to recommend alternative AQM schemes. The uniqueness of our approach comes from the use of a recently developed dynamic model of the transmission control protocol (TCP) which enables application of control principles to address the basic feedback nature of AQM.</p><p>To begin, we first consider a simple sender-receiver connection passing through a bottleneck router as shown in Fig. <ref type="figure" target="#fig_0">1</ref> and schematic of Fig. <ref type="figure">2</ref>. Under TCP, a sender probes the network's available bandwidth by linearly increasing its rate until data packets are lost. 1 Upon packet loss, the receiver signals the sender to reduce its rate. Some drawbacks in this packet-dropping scheme include flow-synchronization and performance degradation due to excessive time-outs and restarts. Motivated by these network inefficiencies, the RED scheme was introduced in <ref type="bibr" target="#b1">[2]</ref> to allow the router to assist TCPs management of network performance. Rather than waiting for packet loss to occur, RED acts preemptively by measuring the router's queue length and throttling the sender's rate accordingly. Since TCP is an end-to-end protocol, RED achieves this feedback indirectly by randomly dropping/marking packets and routing them to the receiver. 2 The receiver, in turn, completes the feedback by acknowledging the receipt of marked packets to the sender; this is depicted in Fig. <ref type="figure">3</ref> where we emphasize the implicit, delayed, 3 feeding-back of acknowledgment packets. Upon receipt of such acknowledgments, the sender increases or decreases its rate according to the TCP algorithm. The randomness in REDs packet-marking scheme is meant to eliminate flow-synchronization while queue-averaging was introduced to attenuate the effects of bursty traffic on the feedback signal. A drawback in deploying RED stems from its apparent tuning difficulties 4 (see <ref type="bibr" target="#b3">[4]</ref> and <ref type="bibr" target="#b4">[5]</ref>) and the research community has responded with modifications such as in <ref type="bibr" target="#b5">[6]</ref>- <ref type="bibr" target="#b9">[10]</ref> and <ref type="bibr" target="#b10">[11]</ref>. It has also motivated our research and this paper. Central to our approach is the recognition that AQM schemes, such as RED, 1 See <ref type="bibr" target="#b0">[1]</ref> for a thorough but accessible treatment of TCP. 2 AQM schemes communicate congestion to the sources using either packet dropping of marking. Here, we will assume marking using the explicit congestion notification (ECN) mechanism, e.g., see <ref type="bibr" target="#b2">[3]</ref>. 3 This time delay is equivalent to one round-trip time which is comprised of propagation and queueing delays. 4 By tuning we mean selecting the averaging and packet-marking parameters of RED for a given set of network conditions. 0018-9286/02$17.00 Â© 2002 IEEE Fig. <ref type="figure">2</ref>. A schematic of a sender-receiver connection. Fig. <ref type="figure">3</ref>. RED randomly marks packets to anticipate congestion. use feedback (evident in Fig. <ref type="figure">3</ref>) to regulate queue efficiency. Consequently, feedback control principles appear to be an appropriate tool in the analysis and design of AQM strategies. While such principles can be found in the analysis of ATM networks (see, for example, <ref type="bibr" target="#b11">[12]</ref>- <ref type="bibr" target="#b13">[14]</ref> and the references cited therein) they have not been applied to TCP-controlled flows. This is apparently due to a lack of analytical model of TCPs congestion-avoidance mode. Recently, there has been progress in modeling of TCP; see <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b15">[16]</ref>.</p><p>The launching point for this paper is a fluid-flow model of TCP behavior developed in <ref type="bibr" target="#b16">[17]</ref>. This model expresses TCP in a language that allows control engineers to analyze and design AQM schemes-that's what we accomplish in this paper. To be more specific, this model enables us to do several things. First, to relate key network parameters such as TCP load, link capacity and round-trip time to the underlying feedback control problem. Second, to analyze RED and recommend that averaging is not beneficial, <ref type="foot" target="#foot_0">5</ref> and finally, to suggest alternative AQM schemes which amount to classical proportional (P) and proportional-integral (PI) control. <ref type="foot" target="#foot_1">6</ref> The benefits of these schemes are illustrated through ns simulations. One of the most promising outcomes of this work is the impact PI control has on queue utilization. Specifically, in Section VI, we will provide a tradeoff curve between queue utilization and delay which shows the trend of increased utilization with increased queueing delay. The key feature is that PI control allows one to explicitly set the net-work queueing delay-independent of network parameters. In Sections IV-VI we will discuss RED, P and PI in detail and provide ns simulations to validate our designs. In Section III, we relate network parameters to the AQM control problem, and in the next section we introduce the fluid-flow model developed in <ref type="bibr" target="#b16">[17]</ref>. This paper is an extended version of work appearing in <ref type="bibr" target="#b18">[19]</ref> and <ref type="bibr" target="#b19">[20]</ref>. The reader is also directed to the recent paper <ref type="bibr" target="#b20">[21]</ref> which provides additional control-theoretic perspective on congested TCP networks.</p><p>Finally, we would like to point out that the while paper does not introduce new control theory nor new control concepts, it does provide a positive example of how classical control can impact an important modern day problem. It also shows the synergy between modeling and control and how appropriate modeling can shed light on seemingly complex systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. DYNAMICS OF TCP'S CONGESTION-AVOIDANCE FLOW-CONTROL MODE</head><p>We begin our discussion of AQM by first introducing a dynamic model for TCPs congestion-avoidance mode.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. A Fluid-Flow Model of TCP Behavior</head><p>In <ref type="bibr" target="#b16">[17]</ref>, a dynamic model of TCP behavior was developed using fluid-flow and stochastic differential equation analysis. Simulation results demonstrated that this model accurately captured the dynamics of TCP. In this paper we use a simplified version of that model which ignores the TCP timeout mechanism. This model relates the average value of key network variables and is described by the following coupled, nonlinear differential equations: load factor (number of TCP sessions) probability of packet mark</p><p>The first differential equation in (1) describes the TCP window control dynamic. Roughly speaking, the term on its right-hand side models the window's additive increase, while the term models the window's multiplicative decrease in response to packet marking . The second equation in (1) models the bottleneck queue length as simply an accumulated difference between packet arrival rate and link capacity . The queue length and window-size are positive, bounded quantities; i.e., and where and denote buffer capacity and maximum window size respectively. Also, the marking probability takes value only in [0, 1]. We illustrate these differential equations in the block diagram of Fig. <ref type="figure">4</ref> which highlights TCP window-control and queue dynamics. We now approximate these dynamics by their small-signal linearization about an operating point to gain insight for the purposes of feedback control (AQM).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Linearization</head><p>To linearize (1) we first assume that the number of TCP sessions and link capacity are constant, i.e., and . Taking as the state and as input, the operating point is then defined by and so that</p><p>(2)</p><p>Given the vector of network parameters , we define the set of feasible operating points by and satisfied</p><p>In turn, we say that network parameters are feasible if is nonempty.</p><p>To proceed with linearization of (1), we ignore the dependence of the time-delay argument on queue-length , and assume it fixed to . On the other hand, we retain the dependence of round-trip time on queue length in the dynamic's parameters; see <ref type="bibr" target="#b20">[21]</ref> for related discussion. As a result, we have the simplified dynamics <ref type="bibr" target="#b2">(3)</ref> We linearize (3) about the operating point (see Appendix A for details) to obtain <ref type="bibr" target="#b3">(4)</ref> where represent the perturbed variables about the operating point. A block-diagram representation of these linearized dynamics is given in Fig. <ref type="figure" target="#fig_2">5</ref> where the TCP window-control and queue dynamics are explicitly identified. A main reason for modeling and linearization of window and queue dynamics is for the purpose of the design and analysis of AQM schemes. To this end, we continue to simplify these dynamics by focusing on the nominal (low-frequency) behavior of the window dynamic and accounting for the residual behavior into a high-frequency parasitic. In Fig. <ref type="figure" target="#fig_3">6</ref>, we perform block-diagram manipulation to isolate this nominal dynamic as well as identifying the high-frequency residual <ref type="bibr" target="#b4">(5)</ref> In the next sections, we analyze different AQM schemes and primarily focus on nominal performance (performance with respect to the nominal window dynamic) treating as an unmodeled dynamic.</p><p>The modes of the window and queue dynamics are, respectively,</p><p>and . An interpretation of the window time constant comes from expressing the linearization of the aforementioned equation as where is the equilibrium packet-marking rate as discussed in <ref type="bibr" target="#b16">[17]</ref>. Therefore, the window-control time constant can be equivalently expressed as . In equilibrium, implies that the multiplicative decrease in window size balances its additive increase . Consequently, . Finally, it is interesting to note that linearization of the queue dynamic does not yield a pure integrator, as one may expect and as one sees in the literature (for example, <ref type="bibr" target="#b14">[15]</ref>) but produces a leaky integrator with time constant . This can be partially explained by noting that the queue's arrival rate is a function of the round-trip time which, in turn, is a function of the queue length due to the queueing delay . Remark 1: In <ref type="bibr" target="#b15">[16]</ref>, a nonlinear discrete-time model for the TCP window-control mechanism was developed which is analogous to the window-size differential equation in <ref type="bibr" target="#b3">(4)</ref>. However, this AQM analysis was arrival-rate based and did not contain a queue dynamic. Consequently, the resulting linearization is fundamentally different from that in (4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. THE AQM CONTROL PROBLEM</head><p>The objective of this section is to analyze the TCP dynamic described in (4) in terms of network parameters such as TCP load , round-trip time and link capacity , and in terms of the feedback nature of AQM. We will also discuss performance objectives for AQM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Plant Dynamics</head><p>In Fig. <ref type="figure" target="#fig_4">7</ref>, we give a feedback control system depiction of AQM. The action of an AQM control law is to mark packets (with probability ) as a function of measured queue length . The plant dynamics, denoted by the transfer function , then relates how this packet-marking probability dynamically affects the queue length. The transfer function represents high-frequency window dynamics; see <ref type="bibr" target="#b4">(5)</ref>. From Fig. <ref type="figure" target="#fig_3">6</ref>, we have <ref type="bibr" target="#b5">(6)</ref> As a numerical illustration consider the case when packets, seconds and packets/s. <ref type="foot" target="#foot_2">7</ref> Then, for  a load of TCP sessions, we have packets;</p><p>For a load of TCP sessions, we have</p><p>The magnitude Bode plots for these transfer functions are shown in Fig. <ref type="figure" target="#fig_5">8</ref>. The Bode plots of reveal the low-pass nature of the TCP-queue dynamics as well as the inverse dependence of loop gain on the number of TCP sessions . The frequency response of residual shows its influence at higher frequencies. One objective of an AQM design is to gain stabilize these residual dynamics as discussed in the next sections.</p><p>Remarks 2:</p><p>1) The high-frequency plant gain of in ( <ref type="formula">6</ref>) is while the low-frequency gain is . The variation in these gains as a function of TCP load and link capacity is a concern in the design of AQM control schemes since it has direct bearing on stability, transient response and steady-state performance. Indeed, either small TCP loads or large link capacities increase this gain, leading to decreased stability margins and increased oscillatory response. Conversely, either larger TCP loads or smaller link capacities tend to dampen the AQMs responsiveness.</p><p>2) Stablizing an AQM control system in the face of the time-delay places hard limits on the closed-loop control bandwidth and, consequently, on the achievable speed of transient response. Indeed, for stable behavior, closed-loop time constants are approximately bounded by s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. AQM Performance Objectives</head><p>As in any control system design, a first step is to pose performance objectives. For AQM, performance objectives include efficient queue utilization, regulated queueing delay, and robustness. 1) Efficient queue utilization: For efficient use, the queue should avoid overflow or emptiness. The former situation results in lost packets and undesired retranmissions, while an empty buffer underutilizes the link. Both of these extremes should be avoided in both transient and steadystate operation. 2) Queueing delay: The time required for a data packet to be serviced by the routing queue is called the queueing delay and is equal to . This time, together with the propagation delay , accounts for the network's delay and it is desirable to keep small both the queueing delay and its variations. This calls for regulating to small queue lengths. However, doing so may result in link underutilization and this limitation presents a fundamental tradeoff to AQM design. 3) Robustness: AQM schemes need to maintain closed-loop performance in spite of varying network conditions. These conditions include variations in the number of TCP sessions , and variations in the propagation delay and link capacity . </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Stabilizing AQM Control Laws</head><p>Consider the linear control system in Fig. <ref type="figure" target="#fig_6">9</ref> where transfer function represents a linear AQM control law. Closed-loop stability is fundamental in meeting the above performance objectives. Our next result gives conditions for stabilization which amount to stabilizing the delayed nominal plant and gain-stabilizing the high-frequency window dynamic . One reason for gain-stabilizing is that it allows us to focus on nominal stabilization and helps make the design of AQM control laws transparent. <ref type="foot" target="#foot_3">8</ref> In the following proposition, we require the transfer function:</p><p>Proposition 1: Given feasible network parameters and operating point , the linearized AQM control system, illustrated in Fig. <ref type="figure" target="#fig_6">9</ref> . Thus, must have a positive phase margin.</p><p>In the remainder of this paper, we will design and compare some simple AQM control laws including proportional and proportional-integral (PI) controllers. We begin our discussion by first analyzing the de facto AQM standard; RED.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. AQM USING RED</head><p>The simplest of congestion-avoidance scheme is the so-called drop-tail law which signals TCP sources to reduce window sizes whenever the queue overflows. In the context of previous discussions, this amounts to an "on-off" AQM control law described by when otherwise This on-off mechanism leads to queue-length oscillations, flow synchronization and performance degradation due to excessive time-outs and restarts. Such oscillations are not surprising given the previous analysis which shows that tail-drop amounts to the binary control of a plant, in ( <ref type="formula">6</ref>), with pole-zero excess of two and with time delay. It is known in control theory that such on-off mechanism leads to oscillations that can exhibit complex and even chaotic behavior, e.g., see <ref type="bibr" target="#b22">[23]</ref>. Chaotic behavior of TCP congestion control has been reported in <ref type="bibr" target="#b23">[24]</ref>.</p><p>Motivated by these network inefficiencies, the RED AQM scheme was introduced in <ref type="bibr" target="#b1">[2]</ref> to allow the router to assist TCPs management of network performance; see Fig. <ref type="figure">3</ref>. Rather than waiting for packet loss to occur, RED acts preemptively by taking an average measure of the router's queue length and throttling the TCP window accordingly by randomly marking packets. This randomness in REDs packet-marking scheme was meant to eliminate flow-synchronization, while queue-averaging was introduced to attenuate the effects of bursty traffic due to restarts and time-outs on the feedback signal. A drawback in deploying RED stems from its apparent tuning difficulties, see <ref type="bibr" target="#b3">[4]</ref> and <ref type="bibr" target="#b4">[5]</ref>. As we now show, we believe this difficulty stems in large part to RED's use of average queue length. 9 Indeed, given the plant dynamics in ( <ref type="formula">6</ref>), introduction of a low-pass filter into the feedback system in Fig. <ref type="figure" target="#fig_6">9</ref> can lead to sluggish, oscillatory closed-loop behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Description of RED</head><p>The RED active queue management control law computes the packet-marking probability as a function of measured queue length as depicted by the AQM control law in the block diagram of Fig. <ref type="figure" target="#fig_4">7</ref>. Specifically, RED consists of a low-pass filter (for queue averaging) and packet-marking profile as shown in Fig. <ref type="figure" target="#fig_7">10</ref>. 10 Tuning RED amounts to selection of the low-pass filter pole , threshold , level and gain . 9 The averaging of queue length in RED is different than the notion of averaged variables W and q in the differential equations <ref type="bibr" target="#b0">(1)</ref>. The former is an average over time, while W and q in (1) are ensemble averages. 10 The form of the low-pass filter was derived in <ref type="bibr" target="#b16">[17]</ref>. The pole K is equal to log (10)=, where is the averaging weight and is the sampling frequency.</p><p>Normally RED updates it's moving average on every packet arrival, and hence is 1=C , where C is the link capacity in packets/s. At high load levels, this sampling frequency exceeds C, whereas at low load levels it falls below C.</p><p>On an average however, under the assumption of a stable congested queue, the sampling frequency is C.</p><p>Remark 4: The apparent motivation for introducing low-pass filtering in the AQM control law was to attenuate the effect of bursty, non-TCP controlled traffic on packet-marking; see <ref type="bibr" target="#b1">[2]</ref>. In Fig. <ref type="figure">4</ref>, such traffic enters at the input to the bottleneck queue and is not directly controlled in TCPs congestion-avoidance mode. While this rationale for introducing low-pass filtering has some intuitive merit, it ignores the effect on closed-loop stability which amounts to introducing additional phase lag into a loop already containing time delay and two low-pass filter dynamics (associated with the TCP window and queue).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Tuning RED</head><p>A transfer-function model for RED is <ref type="bibr" target="#b7">(8)</ref> where, from Fig. <ref type="figure" target="#fig_7">10</ref> From ( <ref type="formula">6</ref>) and ( <ref type="formula">8</ref>), the nominal loop transfer function is then</p><p>This loop-transfer function has three poles and a time delay. To obtain gain from this loop (that is, to expect performance in the closed loop) while achieving closed-loop stability, the low-pass pole must either be placed outside the loop's bandwidth, or taken less than the corner frequencies of . The first choice is tantamount to using an instantaneous measure of the queue length. 11 We will discuss this option in the next section. The second situation, which preserves the original intent of RED, allows the averaging filter to dominate closed-loop behavior. Consequently, the loop bandwidth will be small and the closed-loop time-constants long; but this is the price paid for introducing additional phase lag of RED into the AQM loop.</p><p>Tuning a RED controller for stable operation follows from simple application of classical control techniques. Since monotonically decreases it has unique unity-gain crossover frequency ; i.e., . The following design rules amount to producing a positive phase margin, or equivalently, a crossover phase . To illustrate the design procedure, we first allow REDs low-pass filter to dominate the loop by requiring to be less than the corner frequencies of either the TCP or queue dynamic, that is (9) Then and 11 In fact, this suggestion has been previously made in <ref type="bibr" target="#b6">[7]</ref>.</p><p>Since is stable, nominal closed-loop stability is insured by selecting the triplet to satisfy (9), and , that is <ref type="bibr" target="#b9">(10)</ref> Equations ( <ref type="formula">9</ref>) and ( <ref type="formula">10</ref>) provide guidelines for designing a stabilizing RED controller, i.e., a controller satisfying condition i) of Proposition 1. In addition to nominal stability, these guidelines guarantee stability for parametric variations in and as pointed out in Proposition 2. Finally, to insure stability against the high-frequency parasitic , condition (ii) of Proposition 1 should be satisfied. We demonstrate this in the next example.</p><p>Example 1: Consider the network parameters considered in Section III-A: packets/s, flows and s. From ( <ref type="formula">9</ref>), take rad/s To satisfy <ref type="bibr" target="#b9">(10)</ref> we choose and giving the RED controller <ref type="bibr" target="#b10">(11)</ref> In Fig. <ref type="figure" target="#fig_8">11</ref>, we give the Bode plot for . The positive gain and phase margins indicate that stabilizes the delayed nominal plant</p><p>. In this same figure, we plot showing that condition ii) of Proposition 1 is met and stability against the high-frequency TCP parasitic is achieved. Finally, since is monotonically decreasing, we can invoke Proposition 2 and conclude that stabilizes the perturbed plant <ref type="bibr" target="#b6">(7)</ref> for all feasible network parameters satisfying and . Remark 5: The phase constraint in (10) describes a fundamental tradeoff between control bandwidth (speed of response) and (level of queue averaging) for RED controllers. For a desired phase margin, an increase in queue averaging (smaller ) requires a commensurate decrease in . <ref type="bibr" target="#b9">(10)</ref> can also be used to identify stabilizing RED parameters. For example, for a link capacity of Mb/s and round-trip time , Fig. <ref type="figure" target="#fig_0">12</ref> identifies stabilizing RED parameters as a function of TCP load . As expected, the region of stabilizing RED parameters grows with increasing .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. ns Simulations With RED</head><p>We illustrate our RED design (11) via simulations using the ns simulator. Although the preceding analysis was carried out using the linearized model (4), the ns simulator captures the stochastic, nonlinear nature of the network dynamic. We considered a single bottlenecked router running RED and, in addition to the TCP flows addressed in our model, we also introduced short-lived http flows into the router to generate a realistic traffic scenario. The http flows were simulated using the http module provided with ns. The effect of these short-lived flows was to introduce an exogenous, noisy flow into the queue. In all of our plots the horizontal axis measures time (s) while the vertical axis displays instantaneous queue length (packets). In the first simulation, we introduced 60 TCP flows and 180 http sessions. The capacity is 15 Mb/s and the propagation delay ranges uniformly between 160 and 240 ms. To provide a queueing delay of around 50-70 ms we set and of the packet-marking profile in Fig. <ref type="figure" target="#fig_7">10</ref> to 200 and 250 respectively. The average packet size was set to 500 bytes. REDs averaging weight and were taken to be "vanilla;" i.e., the default values in ns. The buffer capacity was 800 packets. We set the gentle parameter in RED to "on". The result is shown in Fig. <ref type="figure" target="#fig_0">13</ref> which shows the oscillating nature of the queue length. The link is underutilized whenever the queue length goes to zero. Also, the large queue oscillation results in considerable variation in the round-trip times of packets. Now we use the RED design in <ref type="bibr" target="#b10">(11)</ref> and take the averaging weight to be to 0.1 and the dynamic range (150, packets. The results are plotted in Fig. <ref type="figure" target="#fig_0">13</ref>. We see that the system response is stable, with fluctuations about an operating level of the queue. The larger oscillations experienced in the previous experiment are absent in this RED design. The slow response time is related to a low value of in our design. <ref type="foot" target="#foot_4">12</ref> To improve the transient response, we can design for larger bandwidth . However, this would come at the expense of lower stability margins.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. AQM USING PROPORTIONAL CONTROL</head><p>The preceding RED controller resulted in small closed-loop bandwidths and thus sluggish behavior. One way to improve the response time of the system is to remove the low-pass filter completely. 13 In doing so, we arrive at a classical proportional controller. 14 In proportional control the feedback is simply a scaling of the queue length and, in context of RED, this amounts to obtaining the packet-marking probability based on the instantaneous queue length rather than averaged queue length.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The Proportional Controller</head><p>As in the case of RED, the design of a proportional controller <ref type="bibr" target="#b11">(12)</ref> follows from standard frequency-domain techniques. The nominal loop transfer function in the proportional case is Again, there exists a tradeoff between loop bandwidth and stability. However, the tradeoff is more favorable in the proportional case. 15 For example, one can take the loop's unity-gain crossover frequency to be the geometric mean of corner frequencies <ref type="bibr" target="#b12">(13)</ref> and choose to make . Under the likely case when ; i.e., when , this choice leads to positive phase margins. Indeed, since and , then Hence, we have nominal stability and parametric robustness as outlined in Proposition 2. Let us illustrate with an example.</p><p>Example 2: Consider the same setup studied in Example 1 where packets/s, flows and s. From ( <ref type="formula">13</ref>), rad/s and from we obtain</p><p>The proportional controller is then . In Fig. <ref type="figure" target="#fig_10">14(a)</ref>, we give the Bode plot for showing positive gain and phase margins. The bandwidth rad/s is almost 30 times that of the RED design in Fig. <ref type="figure" target="#fig_8">11</ref>. The high-frequency parasitic is gain-stabilized as shown in Fig. <ref type="figure" target="#fig_10">14(b)</ref>. 13 This is equivalent to taking K = 1 in (8). 14 Proportional control has also been suggested in <ref type="bibr" target="#b6">[7]</ref>. 15 This improved tradeoff is obvious from <ref type="bibr" target="#b9">(10)</ref> where the proportional controller corresponds to selecting the RED "queue averaging" parameter to be K ! 1. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. ns Simulations With Proportional Control</head><p>In this simulations, we consider a queue with 60 TCP flows and 180 http sessions. The link bandwidth is 15 Mb/s, and the propagation delays for the flows range uniformly between 160 and 240 ms, with average packet size being 500 bytes. The buffer size is 800 packets. We also introduce a time-varying TCP load to compare the speed of response between the RED and proportional controllers. At time , 20 of the TCP flows drop out and at time they return. For the proportional controller, we set the averaging weight thereby removing the low-pass filter. We set the slope of the packetmarking profile to be the gain calculated above, varying the loss linearly from 0 at queue length 100 with the slope specified by gain. Note that the buffer size of 800 puts an upper limit on the marking probability, which is -, which is approximately 0.04. We' will return to this issue following the experiment. For the RED controller we use the parameters derived in Example 1. The queue length plots are shown in Fig. <ref type="figure" target="#fig_11">15(a)</ref>. As evident from the traces, the proportional controller performs better, responding more quickly to load variations. However, this was to be expected since the closed-loop bandwidth for the proportional design exceeded that of the RED design by almost a factor of thirty. While the proportional controller exhibits more responsive behavior than RED, it also suffers from a limitation which makes it impractical to implement under certain situations. For example, the steady-state buffer length is commensurate to the proportional controller's gain. Hence, buffer-size limitations could require gains outside the region of stabilizing proportional gains; such observations are also made in <ref type="bibr" target="#b10">[11]</ref>. To illustrate, we repeat the previous experiment but change from 0.04 to 1 for the proportional controller, to reflect a desire to keep the steady-state buffer length small. The result in Fig. <ref type="figure" target="#fig_11">15</ref>(b) shows significant oscillations.</p><p>Increasing the buffer size to work around this problem is not an option since this could lead to unacceptably large queueing delays. The problem arises due to the coupling between queue length and marking probability. The two can be decoupled if we use integral control <ref type="bibr" target="#b21">[22]</ref> in the AQM controller . Both the proportional and RED controllers result in control systems having (network-dependent) steady-state errors. For stable closed-loop systems, integral control drives the steady-state error to zero. Thus, we can design an integral controller for AQM which regulates the queue to a given operating level, independent of the load . The simplest integral controller is the proportional-integral (PI) controller which appears appropriate for AQM context since, in comparison to RED, yields larger closed-loop bandwidths without sacrificing stability margins. 16   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. AQM USING PROPORTIONAL-INTEGRAL CONTROL</head><p>A PI controller has a transfer function of the form A desired consequence of the integral term is that in Fig. <ref type="figure" target="#fig_6">9</ref> asymptotically converges to zero if stabilizes. In Fig. <ref type="figure" target="#fig_12">16</ref>, we show implementation of the PI control law with the nonlinear TCP/AQM dynamic (1) emphasizing the role of the queue's operating point . The open-loop transfer function using PI control is Design of the PI controller is straightforward. First, we choose the PIs zero to coincide with the corner frequency of the TCP window dynamic, i.e., <ref type="bibr" target="#b13">(14)</ref> Then, we take the loop's unity gain crossover frequency as <ref type="bibr" target="#b14">(15)</ref> where is next chosen to set the phase margin. To meet the crossover condition we insist that <ref type="bibr" target="#b15">(16)</ref> and then calculate the loop phase A plot of versus in Fig. <ref type="figure" target="#fig_4">17</ref> shows that values of yield positive phase margins, with margins increasing for decreasing . For example, gives a phase margin of 16 The REM scheme introduced in <ref type="bibr" target="#b17">[18]</ref> also employs a PI control element. Fig. <ref type="figure" target="#fig_4">17</ref>. Loop phase angle L(j! ) as a function of design parameter in <ref type="bibr" target="#b14">(15)</ref>. Positive phase margins occur for 2 (0; 0:85).</p><p>Fig. <ref type="figure" target="#fig_5">18</ref>. PI parameters (; K ) satisfying ( <ref type="formula">14</ref>)-( <ref type="formula">16</ref>) lie below the curves.</p><p>about 30 . For pairs designed according to ( <ref type="formula">14</ref>)-( <ref type="formula">16</ref>), the PI compensator stabilizes the nominal delayed plant (see Proposition 1) and enjoys the robust stabilization described in Proposition 2.</p><p>Remark 6: Similar to the analysis of the RED controller in Remark 5 and Fig. <ref type="figure" target="#fig_0">12</ref>, we can identify PI parameters , as a function of TCP load, that satisfy the above design rules. We do this in Fig. <ref type="figure" target="#fig_5">18</ref> for a link capacity of Mb/s and round-trip time s. As expected, the region of stabilizing PI parameters shrinks with smaller TCP loads .</p><p>Example 3: Consider the same setup as in Examples 1 and 2 where packets/s, flows and s. We set the unity gain crossover to rad/s, about ten times that of the RED controller in Example 1. From ( <ref type="formula">15</ref>), showing stability on face of the high-frequency TCP parasitic. which, from Fig. <ref type="figure" target="#fig_4">17</ref>, sets the phase margin to about 80 . From <ref type="bibr" target="#b15">(16)</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Thus</head><p>In Fig. <ref type="figure" target="#fig_13">19</ref>, we give the resulting frequency responses of and . Compared with the RED design in Example 1, the PI design has increased bandwidth from 0.05 to 0.5 rad/s. This larger bandwidth results in more responsive AQM as we show in the following simulations. Also, the integral action of PI is evident in the low-frequency gain of . Finally, we plot stability boundaries for variations in network parameters in Fig. <ref type="figure" target="#fig_14">20</ref>. Parameters below the curves correspond to closed-loop stability while parameters above correspond to unstable networks. Stability margins decrease with increased link capacity , increased round-trip time , or decreased number of TCP flows, consistent with the robustness properties described in Proposition 2.</p><p>Remark 7: As with any application of integral control, one should be aware of integrator windup due to control signal saturation, e.g., see <ref type="bibr" target="#b21">[22]</ref>. This is certainly a possibility in AQM where the control signal (the packet-marking probability) takes value in [0, 1]. We have not implemented antiwindup schemes in the following ns simulations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. ns Simulations With PI Control</head><p>To validate the performance of the PI controller, we implemented it in ns with a sampling frequency of 160 Hz. The operating point was chosen as packets. We repeat the simulation shown in Fig. <ref type="figure" target="#fig_11">15</ref>(a), using the PI controller in lieu of proportional. The queue length plots for the RED and PI controllers are plotted in Fig. <ref type="figure" target="#fig_15">21(a)</ref>. The faster response time as well as the regulation of the output to a constant value by the PI controller is clearly observed. The PI controller is less sensitive to the load level variations and regulates the queue length to the operating point of 200 packets.</p><p>We now increase the number of TCP flows to 180 and http flows to 360. From Remark 2.1, the response should be slower for this higher load level . The queue lengths are plotted in Fig. <ref type="figure" target="#fig_15">21(b</ref>) and we observe significantly better performance from the PI controller. The RED controller takes a long time to settle down, with the steady-state queue length quite large compared to the preceding simulation. The PI controller on the other hand is still regulating the queue length to 200 packets. The PI controller regulates to independent of TCP load.</p><p>In the next simulation, we exercise the controllers at the other end of the load spectrum by reducing the TCP flows to 16 sessions. As observed in Fig. <ref type="figure" target="#fig_16">22(a)</ref>, the responses are more oscillatory corresponding to reduced phase margins. Finally, we stretch the controllers to the limit by increasing the number of TCP flows to 400. In Fig. <ref type="figure" target="#fig_16">22(b)</ref>, the PI controller continues to exhibit acceptable performance, although its response has slowed. The RED controller, on the other hand, keeps the buffer in overflow. At such high load levels, the loop gain has decreased to a point where (large) regulating errors have pushed the steady-state queue length beyond the buffer size. This sim- ulation illustrates the benefit of integral control in an AQM system with a finite buffer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Tradeoff Between Queueing Delay and Utilization</head><p>An important consideration in designing AQM systems is the tradeoff between queueing delay and utilization. Intuitively, larger buffers lead to higher utilizations of the link, but they also result in larger queueing delays. With the PI controller, the delay is essentially tunable with a single parameter . Larger values of give larger delay and utilization. In contrast, with RED, the delay is a function network conditions such as load level and packet-marking profile parameters and . We performed simulations to study this tradeoff as illustrated in Figs. <ref type="bibr" target="#b22">23</ref>-25 where both pure ftp and mixed ftp and http flows are considered. As we observe in Figs. <ref type="figure" target="#fig_17">23(a)</ref>, small yields nearly full utilization in the case of pure ftp flows, whereas a larger is needed to reach this same level of utilization when both ftp and http are considered. The corresponding queueing delays are shown in Fig. <ref type="figure" target="#fig_17">23</ref>(b) indicating a nearly linear relationship with . The corresponding delay-utilization curves are shown in Fig. <ref type="figure" target="#fig_18">24</ref>. We repeated these experiments with RED attempting to control delay through parameter . We kept the range constant throughout.We ran the first experiment using a dynamic range of 550 (this corresponds to our RED design in <ref type="bibr" target="#b10">(11)</ref>) and then repeated with a range of 55. We compare the performance with the PI design in Fig. <ref type="figure" target="#fig_19">25</ref> where both long and short-lived flows were used. In the first of these figures, RED yields high utilization at the expense of large delays. When we reduced the queueing delay by lowering REDs dynamic range, utilization suffered. The PI design was capable of operating at both low delay and high utilization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION</head><p>In this paper, we analyzed a combined TCP and AQM model from a control engineering standpoint. We used linearization to analyze a previously developed nonlinear model of TCP. We performed the analysis on an AQM system implementing RED and presented design guidelines for choosing parameters which lead to local stability. We performed nonlinear simulations using ns which verified our analysis. In doing the analysis, we uncovered limitations of the averaging algorithm in RED. In addition we have proposed and designed two alternative controllers. The resulting control systems had faster response than the RED controller. The first of the designs, a proportional controller, displayed good transient response but suffered steady-state errors in queue regulation. This restricts its usefulness in systems where the buffer size is limited. Motivated by that lim-  itation, we designed a classical PI controller which exhibited zero steady-state regulation error and acceptable transient behavior. The PI controller was simple to implement in ns which we compared under various scenarios with RED. The PI controller exhibited better performance under all cases considered. We also demonstrated the practical impact of the PI controller in managing queue utilization and delay. In this paper, we have concentrated on simple and classical designs for AQM control. Modern control methodologies could be used. However, going this route may have obfuscated one of our main objectives which is to relate AQM control objectives directly to network parameters. Finally, there are a number of different areas in which the techniques presented here could be extended. Examples include networks with heterogeneous round-trip times, multiple congested routers and uncertain routing topologies. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A LINEARIZATION OF THE FLUID-FLOW MODEL</head><p>In this Appendix, we linearize the differential equations in <ref type="bibr" target="#b2">(3)</ref>. We first define their right-hand sides by <ref type="bibr" target="#b16">(17)</ref> where and . Recall the operating point relationships Evaluating the partials of and at this operating point gives</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. A single sender-receiver connection.</figDesc><graphic coords="1,330.78,175.62,191.76,138.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>( 1 )Fig. 4 .</head><label>14</label><figDesc>Fig. 4. Block-diagram of TCPs congestion-avoidance mode.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Block-diagram of the linearized TCP connection.</figDesc><graphic coords="3,301.14,62.28,254.16,185.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Linearized dynamics illustrating the nominal window dynamic and high-frequency parasitic.</figDesc><graphic coords="4,305.04,62.28,246.24,119.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. AQM as feedback control.</figDesc><graphic coords="4,340.86,223.08,174.72,137.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Magnitude Bode plots for P (s) and 1(s) for TCP loads of 60 and 120 sessions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Block diagram of a linearized AQM control system.</figDesc><graphic coords="5,38.16,62.28,251.04,195.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. RED as a cascade of low-pass filter and nonlinear gain element.</figDesc><graphic coords="6,306.90,62.28,242.64,72.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Frequency responses using RED controller C(s) = ((5 2 10 )(1:86 2 10 )=s + 0:005). (a) Frequency response of L(s) shows positive gain and phase margins and crossover frequency ! 0:05rad/s. (b) j1(j!)V (j!)j &lt; 1 shows stability to the high-frequency TCP parasitic.</figDesc><graphic coords="8,60.12,239.46,210.00,161.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 12 .Fig. 13 .</head><label>1213</label><figDesc>Fig. 12. Design curves for tuning RED. Stabilizing pairs (K; L ) lie under the curves.</figDesc><graphic coords="8,307.32,62.28,241.68,190.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Frequency responses for proportional controller C(s) = 5:8624 2 10 . (a) Frequency response of L(s) shows positive margins and crossover frequency ! 1:5rad/s. (b) Proportional controller gain-stabilizes the high-frequency TCP parasitic.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. ns simulations of proportional control. (a) Proportional control compares favorably with RED. TCP load flow changes at 100 and 140 s. (b) Limitation in using proportional control.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. Implementation of the PI controller emphasizing the role of operating point q .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 19 .</head><label>19</label><figDesc>Fig. 19. Frequency responses using PI controller C(s) = 9:64 2 10 (((s=0:53)+ 1)=s). (a) Frequency response of L(s) shows positive gain and phase margins. Notice the increased low-frequency gain and bandwidth of ! 0:5rad/scompared to the RED design in Fig. 11. (b) j1(j!)V (j!)j &lt; 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 20 .</head><label>20</label><figDesc>Fig. 20. Stability boundaries for a single-link network under PI AQM. Parameters below curves correspond to stable networks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 21 .</head><label>21</label><figDesc>Fig. 21. Comparison of RED and PI control under time-varying and heavy TCP loads. (a) PI regulates to a queue length of 200 packets, independent of TCP flow level. (b) Increasing the TCP flow N results in lower nadwidth and slower response time. Unlike RED, the PI controller maintains the staedy-state queue length to 200 packets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 22 .</head><label>22</label><figDesc>Fig. 22. Comparison of RED and PI control under a light and very TCP loads, see (a) and (b), respectively. Under heavy load, RED loses control and the buffer overflows while PI continues to regulate.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 23 .</head><label>23</label><figDesc>Fig. 23. Utilization and queueing delay of the PI controller. (a) Utilization versus opertaing point q . (b) Queueing delay.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 24 .</head><label>24</label><figDesc>Fig. 24. Utilization versus queueing delay: PI controller.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 25 .</head><label>25</label><figDesc>Fig. 25. Queueing delay-utilization tradeoff: comparison between RED and PI control. (a) RED's dynamic range is 550. (b) RED's dynamic range is 55.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_0"><p>On a constructive note, we will suggest RED parameters for stable queue management.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_1"><p>We note that both P and PI structures have been previously suggested in the literature; see<ref type="bibr" target="#b6">[7]</ref> and<ref type="bibr" target="#b17">[18]</ref> respectively. In this paper we show how these schemes come from straightforward application of control engineering principles to the TCP model developed in<ref type="bibr" target="#b16">[17]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_2"><p>Corresponds to a 15 Mb/s link with average packet size 500 Bytes.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_3"><p>Subsequently, we consider only simple controllers such as proportional and PI control laws.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_4"><p>This slow response time is also due to the nonlinear effects of the tail-drop phenomena occuring when the queue size reaches 800 packets and overflows.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank Y. Chait of the Mechanical and Industrial Engineering Department at the University of Massachusetts, Amherst, for many fruitful discussions. They also acknowledge the anonymous reviewers whose constructive comments improved this paper.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recommended by the Guest Editors W. Gong and T Bas Â¸ar. This work was supported in part by the National Science Foundation under Grant ANI-9873328 and in paer by DARPA under Contract DOD F30602-00-0554.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>C. V. <ref type="bibr">Hollot</ref>  </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Comer</surname></persName>
		</author>
		<title level="m">Internetworking with TCP/IP, Principles, Protocols and Architectures</title>
		<meeting><address><addrLine>Saddle River, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Random early detection gateways for congestion avoidance</title>
		<author>
			<persName><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Networking</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="397" to="413" />
			<date type="published" when="1993-08">Aug. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A proposal to add explicit congestion notification (ECN) to IP</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RFC 2481</title>
		<imprint>
			<date type="published" when="1999-01">Jan. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Tuning red for web traffic</title>
		<author>
			<persName><forename type="first">M</forename><surname>Christiansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jeffay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM/SIGCOMM</title>
		<meeting>ACM/SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Analytic evaluation of RED performance</title>
		<author>
			<persName><forename type="first">M</forename><surname>May</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Bonald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-C</forename><surname>Bolot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Dynamics of random early eetection</title>
		<author>
			<persName><forename type="first">D</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM/SIGCOMM</title>
		<meeting>ACM/SIGCOMM</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">M</forename><surname>May</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Diot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lyles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bolot</surname></persName>
		</author>
		<ptr target="ftp://ftp.sprintlabs.com/diot/aqm.zip" />
		<imprint/>
	</monogr>
	<note>Available</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">SRED: Stabilized RED</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Ott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">V</forename><surname>Lakshman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">H</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Blue: A new class of active queue management algorithms</title>
		<author>
			<persName><forename type="first">W</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kandlur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Shin</surname></persName>
		</author>
		<idno>UM CSE-TR-387-99</idno>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A self-configuring RED gateway</title>
		<author>
			<persName><forename type="first">W</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Kandlur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A study of active queue management for congestion control</title>
		<author>
			<persName><forename type="first">V</forename><surname>Firoiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Borden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A linear dynamic model for design of stable explicit-rate ABR control schemes</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sigarto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Robust rate-based flow control for high-speed networks: The case of uncertain time-varying multiple time delays</title>
		<author>
			<persName><forename type="first">B</forename><surname>Ataslar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Quet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iftar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ozbay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kalyanaraman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. American Control Conf</title>
		<meeting>American Control Conf<address><addrLine>Chicago, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="2804" to="2808" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Robust rate control for ABR sources</title>
		<author>
			<persName><forename type="first">E</forename><surname>Altman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Basar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Congestion control in high-speed communication networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mascolo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1921" to="1935" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Mathematical modeling of the internet</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kelly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">presented at the Mathematics Unlimited-2001 and Beyond</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Fluid-based analysis of a network of AQM routers supporting TCP flows with an application to RED</title>
		<author>
			<persName><forename type="first">V</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">B</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM/SIGCOMM</title>
		<meeting>ACM/SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">REM: Active queue management</title>
		<author>
			<persName><forename type="first">S</forename><surname>Athuraliya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network Mag</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="48" to="53" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A control theoretic analysis of RED</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">V</forename><surname>Hollot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">B</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">On designing improved controllers for AQM routers supporting TCP flows</title>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Internet congestion control</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Paganini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Doyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Contr. Syst. Mag</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="28" to="43" />
			<date type="published" when="2002-01">Jan. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">F</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Emami-Naeini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Feedback Control of Dynamic Systems</title>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Oscillations in systems with relay feedback</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J</forename><surname>ÃstrÃ¶m</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IMA Volumes Math. Appl</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="1" to="25" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
	<note>Adapt. Control, Filtering Signal Processing</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The chaotic nature of TCP congestion control</title>
		<author>
			<persName><forename type="first">A</forename><surname>Veras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Boda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
