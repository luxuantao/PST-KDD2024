<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Information Systems Design</orgName>
								<orgName type="department" key="dep2">Faculty of Engineering</orgName>
								<orgName type="laboratory">ATR Network Informatics Laboratories</orgName>
								<orgName type="institution">Doshisha University</orgName>
								<address>
									<postCode>610-0321, 619-0288</postCode>
									<settlement>Kyotanabe, Kyoto</settlement>
									<region>Kyoto</region>
									<country>Japan, Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Zoology</orgName>
								<orgName type="institution">University of Oklahoma</orgName>
								<address>
									<postCode>73019</postCode>
									<settlement>Norman</settlement>
									<region>OK</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">ATR Network Informatics Laboratories</orgName>
								<address>
									<postCode>619-0288</postCode>
									<settlement>Kyoto</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F9867A5C4344DE85B9CE5990650CA163</idno>
					<idno type="DOI">10.1109/TRO.2005.851028</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Automated Evolutionary Design, Robustness, and</head><p>Adaptation of Sidewinding Locomotion of a Simulated Snake-Like Robot Ivan Tanev, Member, IEEE, Thomas Ray, and Andrzej Buller Abstract-Inspired by the efficient method of locomotion of the rattlesnake Crotalus cerastes, the objective of this work is automatic design through genetic programming (GP) of the fastest possible (sidewinding) locomotion of simulated limbless, wheelless snake-like robot (Snakebot). The realism of simulation is ensured by employing the Open Dynamics Engine (ODE), which facilitates implementation of all physical forces, resulting from the actuators, joints constrains, frictions, gravity, and collisions. Reduction of the search space of the GP is achieved by representation of Snakebot as a system comprising identical morphological segments and by automatic definition of code fragments, shared among (and expressing the correlation between) the evolved dynamics of the vertical and horizontal turning angles of the actuators of Snakebot. Empirically obtained results demonstrate the emergence of sidewinding locomotion from relatively simple motion patterns of morphological segments. Robustness of the sidewinding Snakebot, which is considered to be the ability to retain its velocity when situated in an unanticipated environment, is illustrated by the ease with which Snakebot overcomes various types of obstacles such as a pile of or burial under boxes, rugged terrain, and small walls. The ability of Snakebot to adapt to partial damage by gradually improving its velocity characteristics is discussed. Discovering compensatory locomotion traits, Snakebot recovers completely from single damage and recovers a major extent of its original velocity when more significant damage is inflicted. Exploring the opportunity for automatic design and adaptation of a simulated artifact, this work could be considered as a step toward building real Snakebots, which are able to perform robustly in difficult environments. Index Terms-Adaptation, genetic programming, snake-like robot, robustness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>W HEELLESS, limbless snake-like robots (Snakebots)   feature potential robustness characteristics beyond the capabilities of most wheeled and legged vehicles-ability to traverse terrain that would pose problems for traditional wheeled or legged robots, and insignificant performance degradation when partial damage is inflicted. Moreover, due to their modular design, Snakebots may be cheaper to build, maintain, and repair. Some useful features of Snakebots include smaller size of the cross-sectional areas, stability, ability to operate in difficult terrain, good traction, high redundancy, and complete sealing of the internal mechanisms <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b37">[37]</ref>. Robots with these properties open up several critical applications in exploration, reconnaissance, medicine, and inspection. However, compared to the wheeled and legged vehicles, Snakebots feature: 1) smaller payload; 2) more difficult thermal control; 3) more difficult control of locomotion gaits; and 4) inferior speed characteristics. Considering the first two drawbacks as beyond the scope of our work and focusing on the issues of control and speed, we intend to address the following challenge: how to develop control sequences of Snakebot's actuators, which allow for achieving the fastest (for considered morphology of the artifact) possible speed of locomotion.</p><p>For many tasks and robot morphologies, it might be seen as a natural approach to handcraft the locomotion control code by applying various theoretical approaches <ref type="bibr" target="#b2">[3]</ref>- <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b8">[9]</ref>- <ref type="bibr" target="#b11">[11]</ref>, <ref type="bibr" target="#b25">[25]</ref>, <ref type="bibr" target="#b28">[28]</ref>, <ref type="bibr" target="#b33">[33]</ref>, <ref type="bibr" target="#b37">[37]</ref>. However, handcrafting might not be feasible for developing the control code of a real Snakebot due to its morphological complexity and the anticipated need of prompt adaptation under degraded mechanical abilities and/or unanticipated environmental conditions. Moreover, while a fast locomotion gait might emerge from relatively simply defined motion patterns of morphological segments of Snakebot, neither the degree of optimality of the developed code nor the way to incrementally improve the code is evident to the human designer <ref type="bibr" target="#b22">[22]</ref>. Thus, an automated mechanism for solution evaluation and corresponding rules for incremental optimization of the intermediate solution(s) (e.g., based on various models of learning or evolution of species in nature) are needed <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b12">[12]</ref>- <ref type="bibr" target="#b16">[16]</ref>, <ref type="bibr" target="#b22">[22]</ref>, <ref type="bibr" target="#b29">[29]</ref>, <ref type="bibr" target="#b34">[34]</ref>, <ref type="bibr" target="#b39">[39]</ref>. The proposed approach of employing genetic programming (GP) implies that the code which governs the locomotion of Snakebot is automatically designed by a computer system via simulated evolution through selection and survival of the fittest in a way similar to the evolution of species in the nature <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b19">[19]</ref>. The use of an automated process to design the control code opens the possibility of creating a solution that would be better than one designed by a human <ref type="bibr" target="#b20">[20]</ref>.</p><p>The latter is especially true for problems, which either: 1) have no known analytical model; 2) the analytical model is known but it has no known single, deterministically obtained optimal solution; or 3) the analytical model features a single optimal solution, but it is currently recognized that, due to considerable computational complexity of the model, this solution cannot be deterministically obtained in a reasonable runtime.</p><p>In principle, the task of designing the code of Snakebot could be formalized and the formal mathematical models incorporated into direct programmable control strategies. However, the eventual models would feature enormous complexity and such models are not recognized to have a known, analytically obtained exact optimal solution. The complexity of the model stems from the considerable amount of degrees of freedom of the Snakebot, which cannot be treated independently of each other. The dynamic patterns of the position, orientation, velocity vectors, and, moreover, the points and times of contact with the surface (and, consequently, the vectors of resulting traction forces, which propel the Snakebot) of each of the morphological segments of Snakebot has to be considered within the context of other segments. Furthermore, often the dynamic patterns of these parameters cannot be deterministically inferred from the desired velocity characteristics of the locomotion of Snakebot. Instead, the locomotion of the Snakebot is viewed as an emergent property at higher level of consideration of a complex hierarchical system, comprising many relatively simply defined entities (morphological segments). In such systems, the higher level properties of the system and the lower level properties of comprising entities cannot be induced from each other. GP (and evolutionary algorithms in general) is considered as an efficient way to tackle such ill-posed problems due to the ability of GP to find a near-optimal solution in a reasonable runtime. This ability often overcompensates the drawbacks of GP <ref type="bibr" target="#b18">[18]</ref>, which can be summarized as follows:</p><p>1) relatively long runtime stemming from the significant computational effort (many potential solutions need to be evaluated before the sufficiently good solution is discovered) and poor computational performance (often the fitness evaluation is a time-consuming routine) of GP; 2) nondeterminism-the exact runtime needed to obtain the solution cannot be estimated in advance. Instead, a statistically obtained probability of success for various runtime intervals is applied as a characteristic of computational efficiency of GP. The nondeterminism of GP is viewed as a natural consequence of the stochastic nature of both the way of creating the initial population of potential solutions to the problem and the genetic operations applied to evolve this population (crossover, mutation, and selection); 3) often the solution, automatically obtained via GP, is quite complex and difficult to be comprehended by a human designer. Consequently, even simple man-made modification to such a solution is not a straightforward task. As an instance of evolutionary algorithms, genetic algorithms (GAs) differ from GP mainly in the genotypic representation (i.e., chromosome) of potential solutions <ref type="bibr" target="#b7">[8]</ref>. Instead of representing the solution as a computer program (usually-a parsing tree) featuring arbitrary structure and complexity as in GP, GA employs a fixed-length linear chromosome. This difference implies a favorable computational advantage of GA over GP for simple problems, because the linear chromosomes are computa-tionally efficiently manipulated by genetic operations and interpreted by fitness evaluation routines. For complex tasks, however (such as evolution of locomotion gaits of Snakebot), the runtime overhead associated with the manipulation of genotype is negligible compared to the much more significant overhead of the fitness evaluation of the evolved (simulated or real) artifact in the (simulated or real) environment. Moreover, an efficient GA (in terms of computational effort or number of fitness evaluations) often requires incorporation of extremely computationally heavy probabilistic learning models <ref type="bibr" target="#b26">[26]</ref> aimed at maintaining the complex interrelations between the variables in the chromosome. In addition, the fixed-length chromosome usually implies that the latter comprises various, carefully encoded problem-domain-dependent parameters of the solution with an a priori known structure and complexity. This might be a concern when no such knowledge is available in advance, but rather needs to be automatically and autonomously discovered by the evolving artifact. The latter is especially true when the artifact has to perform in unanticipated, uncertain environmental conditions or under its own (possibly degraded) mechanical abilities.</p><p>However, an example of the possibility of implementing evolution (using GA) and adaptation (via hierarchical, two-layered Q-learning) of locomotion gaits of a real-world snake-like robot is demonstrated in <ref type="bibr" target="#b12">[12]</ref>. Each gene in the linear chromosome represents the angle of the corresponding joint in the snake, and the number of genes is the same as the number of joints. This work demonstrates the efficiency of canonical GA for the particular complexity of the task-evolution of two-dimensional (2-D) gaits of a snake having five joints. The efficiency of GA is adequate even without the need to consider either the scalability problem (the inflation of search space with the increase of the number of joints) or the linkage problem (the correlation between the genes in linear chromosomes).</p><p>Evolving a Snakebot's locomotion (and, in general, behavior of any robot) applying GP could be performed as a first step in the sequence of simulated off-line evolution (phylogenetic learning) on the software model, followed by on-line adaptation (ontogenetic learning) of evolved code on a physical robot situated in a real environment <ref type="bibr" target="#b12">[12]</ref>, <ref type="bibr" target="#b15">[15]</ref>, <ref type="bibr" target="#b24">[24]</ref>. Off-line software simulation facilitates the process of Snakebot's controller design because the verification of behavior on a physical Snakebot is extremely time consuming, costly, and often dangerous for Snakebot and a surrounding environment. Moreover, in some cases, it is appropriate to initially model not only the locomotion, but also to co-evolve the most appropriate morphology of the artifact (i.e., number of phenotypic segments; types and parameters of joints which link segments; actuators' power; and type, amount and location of sensors) <ref type="bibr" target="#b27">[27]</ref>, <ref type="bibr" target="#b29">[29]</ref>, <ref type="bibr" target="#b30">[30]</ref> and only then (if appropriate) to physically implement it as hardware. The software model used to simulate Snakebot should fulfill the basic requirements of being quickly developed, adequate, and fast running <ref type="bibr" target="#b17">[17]</ref>. Typically slow development time of GP stems from the highly specific semantics of the main attributes of GP (e.g., representation, genetic operations, fitness evaluation) and can be significantly reduced through incorporating offthe-shelf software components and open standards in software engineering. To address this issue, we developed a GP framework based on open XML standard and ensure adequacy and runtime efficiency of Snakebot simulation we applied the Open Dynamic Engine (ODE) freeware software library for simulation of rigid body dynamics.</p><p>The objectives of our study are: 1) to explore the feasibility of applying GP for automatic design of the fastest possible locomotion of realistically simulated Snakebot and 2) to investigate the robustness and adaptation of such locomotion to unanticipated environmental conditions and degraded abilities of Snakebot. Inspired by the fast sidewinding locomotion of the rattlesnake Crotalus cerastes, this work is motivated by our desires: 1) to model the sidewinding locomotion of natural snakes; 2) to explore the phenomenon of emergence of locomotion of complex bodies from simply defined motion patterns of the morphological segments comprising these bodies; 3) to verify the feasibility of employing ODE for realistic software simulation of a Snakebot; and 4) to investigate the practicality of building real Snakebots.</p><p>The remainder of this paper is organized as follows. Section II emphasizes the main features of the GP proposed for evolution of locomotion of simulated Snakebot. Section III presents empirical results of evolving locomotion gaits of Snakebots and discusses the emergence of sidewinding. The same section elaborates on robustness and adaptation of sidewinding to unanticipated environmental conditions and partial damage of Snakebot. Finally, Section IV draws a conclusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. APPROACH</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Representation of Snakebot</head><p>Snakebot is simulated as a set of identical spherical morphological segments ("vertebrae"), linked together via universal joints. All joints feature identical (finite) angle limits and each joint has two attached actuators ("muscles"). In the initial standstill position of Snakebot, the rotation axes of the actuators are oriented vertically (vertical actuator) and horizontally (horizontal actuator) and perform rotation of the joint in the horizontal and vertical planes, respectively (Fig. <ref type="figure" target="#fig_0">1</ref>). Considering the representation of Snakebot, the task of designing the fastest locomotion can be rephrased as developing temporal patterns of desired turning angles of horizontal and vertical actuators of each segment that result in the fastest overall locomotion of Snakebot.</p><p>The proposed representation of Snakebot as a homogeneous system comprising identical morphological segments is intended to significantly reduce the size of the search space of the GP. Moreover, because the size of the search space does not necessarily increase with the increase of the complexity of Snakebot (i.e., the number of morphological segment), the proposed approach allows achievement of favorable scalability characteristics of the GP.</p><p>An alternative approach of employing phase automata has been recently proposed for representing and programming the functionality of segments in modular chain-type artifacts <ref type="bibr" target="#b38">[38]</ref>. The approach is based on an event-driven input/output state automaton with an initial phase delay and promises great versatility, robustness and scalability. However, the proposed model is inherently suitable for programming periodical locomotion gaits only, and eventual automatic programming of these locomotion gaits (rather than handcrafting them) is still an open issue in this approach.</p><p>In the proposed representation of Snakebot, no anisotropic (directional) friction between the morphological segments and the surface is considered. Despite the anticipated ease of simulation and design of eventual morphological segments featuring anisotropic friction with the surface (using simple attached wheels <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b8">[9]</ref>- <ref type="bibr" target="#b11">[11]</ref>, <ref type="bibr" target="#b13">[13]</ref> or "belly" scales), such an approach would have the following drawbacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Wheels attached to the morphological segments of</head><p>Snakebot are mainly effective in 2-D locomotion gaits. However, neither the fastest gaits in unconstrained environments nor the adaptive gaits in challenging environments (narrow tunnels, obstacles etc.) are necessarily 2-D. In three-dimensional (3-D) locomotion gaits, the orientation (the pitch, roll, and yaw angles) of morphological segments at the instant of contact with the surface are arbitrary, which renders the design of effective wheels for such locomotion gaits a nontrivial engineering task. 2) Wheels may compromise the potential robustness characteristics of Snakebot because they can be trapped easily in the challenging environments (e.g., rugged terrain and obstacles). 3) Wheels potentially reduce the application areas of the Snakebot because their engineering design implies a lack of complete sealing of all mechanisms of Snakebot. 4) Belly scales (if implemented) would not promote any anisotropic friction when Snakebot operates on smooth, flat, clean, and/or too loose surfaces which compromises the generality of derived locomotion gaits and their robustness to various environmental conditions. 5) Belly scales are efficiently utilized as a source of anisotropic friction in some locomotion gaits of natural snakes. However, these gaits usually require an involvement of a large amount of complex muscles located immediately under the skin of the snake. These muscles lift the scales off the ground, angle them forward, and then push them back against the surface. In the Snakebot, implementing actuators, which mimic such muscles in the natural snakes, would be expensive and thus infeasible from an engineering point of view.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Algorithmic Paradigm</head><p>1) GP: GP <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b19">[19]</ref> is a domain-independent problemsolving approach in which a population of computer programs (individuals' genotypes) is evolved to solve problems. The simulated evolution in GP is based on the Darwinian principle of reproduction and survival of the fittest. The fitness of each individual is based on the quality with which the phenotype of the simulated individual is performing in a given environment. The major attributes of GP-function set, terminal set, fitness evaluation, genetic representation, and genetic operations are elaborated in the remaining of this section.</p><p>2) Function Set and Terminal Set: In applying GP to the evolution of Snakebot, the genotype is associated with two algebraic expressions which represent the temporal patterns of desired turning angles of both the horizontal and vertical actuators of each morphological segment. Since locomotion gaits are periodical, we include the trigonometric functions and in the GP function set in addition to the basic algebraic functions. The choice of these trigonometric functions reflects our intention to verify the hypothesis (first expressed by Petr Miturich in the 1920s) that undulative motion mechanisms could yield efficient gaits of snake-like artifacts operating in air, land, or water.</p><p>From another perspective, the introduction of and in the function set of GP reflects our intention to mimic (at a functional rather than neurological level) to some extent the central pattern generator (CPG) in the central nervous system (usually located in the ganglia or spinal cord) of animals, which is believed to be necessary and sufficient for the generation of rhythmic patterns of activities <ref type="bibr" target="#b21">[21]</ref>. CPG for robot control typically comprises coupled neural controllers, which generate (without the need of external feedback) the motion pattern of actuators in the respective morphological segments of the artifact. The approach of employing CPG for developing the locomotion gaits of the Snakebot would be based on an iterative process (e.g., employing the machine learning and/or evolutionary computations paradigms) of tuning the main parameters of CPG including, for example, the common single frequency across the coupled oscillators, the fixed phase relationship between the oscillators, and the amplitude of each of the oscillations. The proposed approach of applying GP for evolution of locomotion gaits of Snakebot shares some of the features of CPG-based approaches such as the open-loop control scheme and the incorporation of coupled oscillators. Conversely to the CPG-based approaches, however, the proposed method incorporates too little domain-specific knowledge about the task. The comparative flexibility of GP, resulting from not considering all of the domain-specific constrains, can potentially yield an optimal solution with the following, typically uncommon for CPG, properties.</p><p>1) The optimal oscillations of segments might be an arbitrary superposition of several oscillations featuring different frequencies. Moreover, the proposed method of using GP does not necessarily imply that the frequency across the oscillators is common.</p><p>2) The relationship between the oscillators in the morphological segments of Snakebot is not necessarily a simple phase relationship. Arbitrary relationships involving amplitude, phase, and frequency are allowed to be developed by the simulated evolution via GP.</p><p>3) The evolved optimal phase relationship between the oscillators in the morphological segments might vary along the body of Snakebot, rather than being fixed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TABLE I MAIN PROPERTIES OF GP</head><p>The above-mentioned features are achieved via the incorporation of the terminal symbol segment ID (a unique index of morphological segments of Snakebot), which allows GP to discover how to specialize (e.g., by phase, amplitude, and frequency) the temporal motion patterns (i.e., the turning angles) of actuators of each of the identical morphological segments of the Snakebot. In addition, the terminal symbols of GP include the variables time and two constants: Pi, and randomconstant within the range [0, 2]. The introduction of variable time reflects our objective to develop temporal patterns of turning angles of actuators.</p><p>The main parameters of the GP are summarized in Table <ref type="table">I</ref>. The rationale of employing automatically defined function (ADF) is based on empirical observation that the evolvability of straightforward independent encoding of desired turning angles of both horizontal and vertical actuators is poor, although it allows GP to adequately explore the potentially large search space and ultimately, to discover the areas which correspond to fast locomotion gaits in solution space. We discovered that: 1) the motion patterns of horizontal and vertical actuators of each segment in fast locomotion gaits are highly correlated (e.g., by frequency or direction) and 2) discovering and preserving such correlation by GP is associated with enormous computational effort. ADF, as a way of limiting the search space by introducing modularity and reuse of code in GP <ref type="bibr" target="#b19">[19]</ref>, is employed in our approach to allow GP to explicitly evolve the correlation between motion patterns of horizontal and vertical actuators as shared fragments in algebraic expressions of desired turning angles of actuators. Moreover, we observed that the best result is obtained by: 1) allowing the use of ADF as a terminal symbol in algebraic expression of desired turning angle of vertical actuator only and 2) by evaluating the value of ADF by equalizing it to the value of currently evaluated algebraic expression of desired turning angle of horizontal actuator.</p><p>Notice that there is no information in the terminal set of GP which represents the state or actions of (other) morphological segments of the Snakebot, which implies an evolution of centralized control mapped over the decentralized mechanical struc- ture of the artifact. Although the states of segments in an eventual decentralized control system can be inherently represented as respective variables (terminal symbols) <ref type="bibr" target="#b30">[30]</ref>, the efficiency of evolution would be inferior due to the corresponding inflation of the search space of GP. In addition, it would be computationally hard to estimate the adaptation and robustness of Snakebot due to the need to consider various cases of damage to the interconnection network and the possible implications of such damage to the functionality of the (distant from the damage) segments of the artifact.</p><p>3) Fitness Evaluation: The fitness function is based on the velocity of Snakebot, estimated from the distance which the center of the mass of Snakebot travels during the trial. The real values of the raw fitness, which are usually within the range (0, 2) are multiplied by a normalizing coefficient in order to deal with integer fitness values within the range (0, 200). A normalized fitness of 100 (one of the termination criteria shown in Table <ref type="table">I</ref>) is equivalent to a velocity, which displaced Snakebot a distance equal to twice its length. The fitness evaluation routine is shown in Fig. <ref type="figure" target="#fig_1">2</ref>.</p><p>4) Representation of Genotype: Inspired by its flexibility and the recently emerged widespread adoption of document object model (DOM) and extensible markup language (XML), we represent evolved genotypes of simulated Snakebot as DOM-parse trees featuring equivalent flat XML-text in a way as first implemented in <ref type="bibr" target="#b35">[35]</ref>. Our approach implies that both: 1) the calculation of the desired turning angles during fitness evaluation (functions EvalHorisontalAngleand EvalVerticalAngle, shown in Fig. <ref type="figure" target="#fig_1">2</ref>, lines 18 and 20, respectively) and 2) the genetic operations are performed on DOM-parse trees using off-the shelf, platform and language neutral DOM-parsers. The corresponding XML-text representation (rather than S-expression) is used as a flat file format, feasible for migration of genetic programs among the computational nodes in an eventual distributed implementation of the GP. The benefits of using DOM/XML-based representations of genetic programs are: 1) fast prototyping of GP by using standard built-in API of DOM-parsers for traversing and manipulating genetic programs; 2) generic support for the representation of grammar of strongly-typed GP using W3C-standardized XML-schema; and 3) inherent Web-compliance of eventual parallel distributed implementation of GP.</p><p>The slight performance degradation in computing the desired turning angles of actuators by traversing the DOM/XML-based representation of genetic programs during fitness evaluation is not relevant for the overall performance of GP. The performance profiling results indicate that fitness evaluation routine consumes more than 99% of GP runtime, however, even for relatively complex genetic programs featuring a few hundred tree nodes, most of the fitness evaluation runtime at each time step is associated with the relatively enormous computational cost of the physics simulation (e.g., actuators, joint limits, friction, gravity, and collisions) of phenotypic segments of the simulated Snakebot (routine dWorldStep in Fig. <ref type="figure" target="#fig_1">2</ref>, line 32), rather than computing the desired turning angles of actuators.</p><p>5) Genetic Operations: Binary tournament selection is employed-a robust, commonly used selection mechanism, which has proved to be efficient and simple to code. Crossover operation is defined in a strongly typed way in that only the DOMnodes (and corresponding DOM-subtrees) of the same data type (i.e., labeled with the same tag) from parents can be swapped. The sub-tree mutation is allowed in strongly typed way in that a random node in genetic program is replaced by syntactically correct sub-tree. The mutation routine refers to the data type of currently altered node and applies randomly chosen rule from the set of applicable rewriting rules as defined in the grammar of GP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>6) ODE:</head><p>We have chosen ODE <ref type="bibr" target="#b32">[32]</ref> to provide a realistic simulation of physics in applying forces to phenotypic segments of Snakebot, for simulation of Snakebot locomotion. ODE is a free industrial-quality software library for simulating articulated rigid-body dynamics. It is fast, flexible, and robust, and it has built-in collision detection. The ODE-related parameters of simulated Snakebot are summarized in Table <ref type="table">II</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. EXPERIMENTAL RESULTS</head><p>This section discusses experimental results verifying the feasibility of applying GP for evolution of the fastest possible locomotion gaits of Snakebot for various fitness and environmental conditions. In addition, it investigates the properties of the fastest locomotion gait, evolved in an unconstrained environment from two perspectives: 1) robustness to various unanticipated environmental conditions and 2) gradual adaptation to degraded mechanical abilities of Snakebot. These challenges are considered as relevant for successful Fig. <ref type="figure">3</ref>. Fitness convergence characteristics of ten independent runs of GP for cases (a) where fitness is measured as velocity in any direction and (b), (c), snapshots of sample evolved best-of-run sidewinding locomotion gaits of simulated Snakebot viewed from above. The dark trailing circles depict the trajectory of the center of the mass of Snakebot. Timestamp interval between each of these circles is fixed and it is the same (ten time steps) for both snapshots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TABLE II ODE-RELATED PARAMETERS OF SIMULATED SNAKEBOT</head><p>accomplishment of various practical tasks during anticipated exploration, reconnaissance, medicine and inspection missions. In all of the cases considered, the fitness of Snakebot reflects the low-level objective (i.e., what is required to be achieved) of Snakebot in these missions, namely, to be able to move fast regardless of environmental challenges or degraded abilities. The experiments discussed illustrate the ability of the evolving Snakebot to learn how (e.g., by discovering beneficial locomotion traits) to accomplish the required objective without being explicitly taught about the means to do so. Such know-how acquired by Snakebot automatically and autonomously can be viewed as a demonstration of emergent intelligence <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b23">[23]</ref> in that the task-specific knowledge of how to accomplish the task emerges in the Snakebot from the interaction of the problem solver and a fitness function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Evolution of Fastest Locomotion Gaits</head><p>Fig. <ref type="figure">3</ref> shows the fitness convergence characteristics of ten independent runs of GP [Fig. <ref type="figure">3(a)</ref>] and sample snapshots of evolved best-of-run locomotion gaits [Fig. <ref type="figure">3(b)</ref> and<ref type="figure">(c)</ref>] when fitness is measured in any direction in an unconstrained environment, as illustrated in Fig. <ref type="figure">4</ref>(a), case a. Despite the fact that fitness is unconstrained and measured as velocity in any direction, sidewinding locomotion (defined as locomotion predominantly perpendicular to the long axis of Snakebot) emerged in all ten independent runs of GP, suggesting that it provides superior speed characteristics for Snakebot morphology.</p><p>The genotype of sample best-of-run genetic program is shown in Fig. <ref type="figure">5</ref>. The dynamics of evolved turning angles of actuators in sidewinding locomotion result in characteristic circular motion pattern of segments around the center of the mass as shown in Fig. <ref type="figure" target="#fig_3">6(a)</ref>. The circular motion pattern of segments and the characteristic track on the ground as a series of diagonal lines [Fig. <ref type="figure" target="#fig_3">6(b)</ref>] suggest that during sidewinding the shape of Snakebot takes the form of a rolling helix. Fig. <ref type="figure" target="#fig_3">6</ref> demonstrates that the simulated evolution of locomotion via GP is able to invent the improvised "cylinder" of the sidewinding Snakebot to achieve fast locomotion. Snapshots taken during the motion of a sample evolved best-of-run sidewinding Snakebot are shown in Fig. <ref type="figure" target="#fig_4">7</ref>. The X, Y, and Z axes shown in the figure illustrate the dynamics of the orientation of the central segment of the Snakebot. Notice that, even though the Snakebot takes the form of a rolling helix (wrapped around an improvised "cylinder," as Fig. <ref type="figure" target="#fig_3">6</ref> suggests), the morphological segments of Snakebot do not roll over, supporting the conclusion that the evolved sidewinding locomotion gaits are not associated with rolling over of the Snakebot.</p><p>In order to attain the best possible velocity of locomotion for the considered morphology of Snakebot, we performed an additional ten independent runs of GP simulating an openended evolution of locomotion gaits. Only the stagnation of the population for more than 16 consecutive generations was used as a termination criterion in these runs. The best fitness of evolved (sidewinding) locomotion was 142, which corresponds to the velocity of simulated Snakebot equal to 0.21 m/s (0.75 km/h). However, due to the disproportional degradation of the computational performance (a single run might require few days of a runtime), we consider the open-ended evolution as unfeasible (from engineering point of view) for evolution and adaptation of Snakebot. Therefore, the experimental results discussed in throughout the remaining of this Section are obtained from GP featuring termination criterion as elaborated before in Table <ref type="table">I</ref>.</p><p>By modulating the oscillations of the actuators along the snake's body, the diameter of the cross section of the "cylinder" can be tapered toward either the tail or head of the snake, providing an efficient way of "steering" the Snakebot (Fig. <ref type="figure">8</ref>). We consider the benefits of modulating the oscillations of actuators along the body of Snakebot as a straightforward implication of our understanding of the underlying mechanism of sidewinding. Therefore, in our experiment, such modulation is implemented as a handcrafted (rather than evolved) feature of evolved best-of-run sidewinding Snakebots. Fig. <ref type="figure" target="#fig_5">9</ref> illustrates the ability of Snakebot to perform sharp turn with radius similar to its length in both clockwise and counterclockwise directions.</p><p>In order to verify the superiority of velocity characteristics of sidewinding locomotion for Snakebot morphology, we compared the fitness convergence characteristics of evolution in unconstrained environment for the following two cases: 1) unconstrained fitness measured as velocity in any direction [as discussed above and illustrated in Fig. <ref type="figure">4(a)</ref>] and 2) fitness, measured as velocity in forward direction only, as illustrated in Fig. <ref type="figure">4(b)</ref>. The results of evolution of forward locomotion shown in Fig. <ref type="figure" target="#fig_0">10</ref> indicate that nonsidewinding motion, compared to sidewinding, features much inferior velocity characteristics.</p><p>The results of evolution of rectilinear locomotion of simulated Snakebot confined in narrow "tunnel" are shown in Fig. <ref type="figure" target="#fig_0">11</ref>. The width of the tunnel is three times the diameter of the cross-section (which equals to the diameter of the segment) of Snakebot. Compared to forward locomotion in unconstrained environment (Fig. <ref type="figure" target="#fig_0">10</ref>), the velocity in this experiment is superior, and comparable to the velocity of sidewinding (Fig. <ref type="figure">3</ref>). This seemingly anomalous phenomenon demonstrates the ability of simulated evolution to discover a way to utilize the walls of "tunnel" as a source of: 1) extra grip and 2) locomotion  The dynamics of orientation of other segments of Snakebot is very similar. Notice that even though Snakebot takes the form of a rolling helix (wrapped around an improvised "cylinder," as Fig. <ref type="figure" target="#fig_3">6</ref> suggests), the morphological segments of Snakebot do not roll over. This supports the conclusion that the evolved sidewinding locomotion gaits are not associated with rolling over of the Snakebot. gaits which are fast yet unbalanced in an unconstrained environment. As Fig. <ref type="figure" target="#fig_0">11(c</ref>) illustrates, as soon as Snakebot clears the tunnel, the gait flattens and velocity (visually estimated as a distance between the traces of the center of gravity of Snakebot) drops dramatically.</p><p>The final experiment discussed in this section is intended to verify the ability of GP to evolve not only periodic locomotion gaits but also standstill postures, such as elevation of the head of Snakebot. In this experiment, the fitness of evolved postures is estimated as sustained (standstill for more than 20 time steps) elevation of the head of Snakebot above the surface. The best-of-run postures (as shown in Fig. <ref type="figure" target="#fig_1">12</ref>) feature well-balanced, standstill elevation of the head. The elevation is approximately three diameters of Snakebot's segments or about 20% of overall length of creature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Robustness of Evolved Sidewinding Locomotion</head><p>Within the scope of this study, we consider the robustness of sidewinding locomotion as the ability of the sidewinding Snakebot to retain its velocity when situated in a challenging environment. Robustness is qualitatively demonstrated by the ease with which the sidewinding Snakebot, initially evolved in an unconstrained environment, overcomes a pile of 80 boxes which have the same density of 0.9 g/cm as the segments of Snakebot (Fig. <ref type="figure" target="#fig_0">13</ref>), burial under 80 boxes with the same density Fig. <ref type="figure">8</ref>. Steering the Snakebot. (a) The moving Snakebot straight is wrapped around an imagined cylinder taking the form of a rolling helix. By modulating the oscillations of the actuators along the snake's body, the diameter of the cross section of the "cylinder" can be tapered toward either the tail or head of the snake, providing an efficient way of "steering" the Snakebot. (b) The Snakebot turning counterclockwise. The images are idealized: in simulated Snakebot (and in snakes in Nature too) the cross sectional areas of the imagined "cylinder" (a) and "cone" (b) are much more similar to ellipses [as shown in Fig. <ref type="figure" target="#fig_3">6(a)</ref>] rather than to perfect circles as depicted here.   <ref type="figure" target="#fig_0">10</ref>. Fitness convergence characteristics of ten independent runs of GP for cases (a) where fitness is measured as velocity in forward direction and (b), (c) snapshots of sample evolved best-of-run forward crawling locomotion gaits of simulated Snakebot. Timestamp interval between the traces of the center of the mass is the same as for sidewinding locomotion gaits, shown in Fig. <ref type="figure">3(b)</ref> and<ref type="figure">(c</ref>). The distance between the traces of center of the mass in both forward and sidewinding locomotion gaits comparatively illustrates the achieved velocity in both cases. of 0.9 g/cm (Fig. <ref type="figure" target="#fig_0">14</ref>), rugged terrain with 200 randomly positioned obstacles with uniform random distribution of size in the range 0.1-1 of the diameter of the cross section of Snakebot (Fig. <ref type="figure" target="#fig_0">15</ref>), and, finally, walls with height equal to the diameter of the cross section of Snakebot (Fig. <ref type="figure" target="#fig_3">16</ref>). Cosidering the latter case, we conducted an additional experiment with evolution of Snakebot capable of overcoming the highest possible walls of the pen. Even though fitness was estimated as velocity of locomotion, the evolving Snakebot discovered the knowledge that higher elevation of the body is a beneficial locomotion trait. The best results of overcoming walls with height equal to the 2.5 diameters of the cross section of Snakebot correlates with the mean elevation of the center of the mass of the sidewinding Snakebot. However, the maximum possible value of such ele-vation proved to be highly dependent on several environmental conditions and parameters of morphology of Snakebot, such as gravity, friction with surface, length of the Snakebot (number of segments), power of actuators, and actuator stop limits</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Adaptation</head><p>Adaptation in nature is viewed as an ability of species to discover the best phenotypic (i.e., pertaining to biochemistry, morphology, physiology, and behavior) traits for survival in continuously changing fitness landscape. The adaptive phenotypic traits are result of beneficial genetic changes occurred during the course of evolution (phylogenesis) and/or phenotypic plasticity (ontogenesis, e.g., learning, polymorphism, polyphenism, immune response, and adaptive metabolism) occurring during the lifetime of the individuals. Although the adaptive processes in nature feature dramatically different time scales (from a few seconds for short-term adaptation by learning to thousands and millions of years for long-term adaptation by evolution), their modeling in the digital world through corresponding biologically inspired algorithmic paradigms is not necessarily associated with similar ratio of their computational efficiencies. Indeed, from a behavioral perspective both the learning and evolution (of either simulated or real artifacts) involve time-consuming collection and storage of information prior to actual learning. Typically, the implementation of various learning algorithms for artifacts with many degrees of freedom is associated with enormous computational cost of learning and huge size of action-state space. Also, Q-learning (one of the most efficient reinforcement learning algorithms) requires a Q-table with a size which grows more than linearly with the number of degrees of freedom. The primary concerns regarding the possibility of implementing real-time adaptation learning is based on the recognition that the fundamental process of learning (including even the fastest, Hebbian-style learning) involves stages <ref type="bibr" target="#b31">[31]</ref>, which are essentially identical (and equally time-consuming when modeled in the digital world) to evolution. These stages are: 1) collection and storage of information about the problem; 2) examination of the information at hand to determine the complexity of the problem; 3) development of trial solutions for the problem; 4) testing of trial solutions; 5) discarding trial solutions if they are not good enough; and 6) repetition of these processes until an acceptable solution is found.</p><p>In our approach, we employ GP for adaptation of Snakebot to changes in the fitness landscape caused by partial damage to one, two, four, and eight segments. The proposed approach is in principle applicable to adaptation to changeable environmental condition and/or to the real environmental condition, which often differ from the simulated world.</p><p>In contrast to the proposed approach, which employs GP for both evolution and adaptation, several hybrid methods of adaptation combining evolutionary algorithms (GA or GP for offline evolution) and learning (for on-line adaptation) have been recently proposed <ref type="bibr" target="#b12">[12]</ref>, <ref type="bibr" target="#b13">[13]</ref>, <ref type="bibr" target="#b15">[15]</ref>, <ref type="bibr" target="#b36">[36]</ref>. The learning component in these approaches is usually intended to fine-tune in on-line mode the solution obtained off-line via GP. Such approaches, viewed as an on-line parametric optimization of solution via local search, are efficient when the changes of fitness landscape are not assumed to be significant. However, adaptation to unanticipated, unknown, or uncertain changes in the fitness landscape might require the discovery of completely new solutions, which often could not be achieved by parametric optimization of already existing solutions. We assume that GP alone, which is able to balance inherently the exploration (of completely new solutions) and exploitation (of previously obtained solutions) by maintaining a diverse population of solutions, offers good opportunities to discover these new solutions.</p><p>An inverse approach, based on the evolution (estimation) of the morphology of potentially damaged robot given a controller (instead of evolving a controller given a morphology of the damaged robot) allows to evolve a damage hypothesis after failure and then to re-evolve a compensatory neural controller to restore the robots functionality <ref type="bibr" target="#b1">[2]</ref>. Conversely, in our work, we adhere to the conventional approaches of employing simulated evolution to develop the compensatory traits of a controller given the unanticipated changes of morphology due to partial damage of the Snakebot.</p><p>The ability of sidewinding Snakebot to adapt to a changeable fitness landscape (due to changed morphology) caused by partial damage to the first, second, fourth, and eighth (out of 15) segments by gradually improving its velocity by simulated evolution via GP is shown in Fig. <ref type="figure" target="#fig_9">17</ref>. Demonstrated results are averaged over four independent runs for each case, where GP is initialized with a population comprising 190 randomly created individuals, plus ten best-of-run genetic programs obtained from experiments with evolving sidewinding in an unconstrained environment as elaborated in Section III-A. The fitness function is    a complete loss of functionality of both horizontal and vertical actuators of the corresponding joint. As Fig. <ref type="figure" target="#fig_9">17</ref>(a) illustrates, Snakebot completely recovers from damage to single segment in 25 generations, attaining its previous velocity. Snakebot recovers to average of 94% of its previous velocity in the case where two (13% of total amount of 15) segments are damaged. With four (27%) and 8 (53%) damaged segments, the degree of recovery is 77% (23% degradation) and 64% (36% degradation), respectively.</p><p>The real-time of adaptation to single damage, as Fig. <ref type="figure" target="#fig_9">17</ref> illustrates, is associated with the need to evaluate about 25 generations of a population of 200 Snakebots over many time steps of 50 ms. In order to minimize the adaptation run-time by reducing the actual time steps of the trial, we implemented noisy evaluation of the fitness of Snakebot. In the proposed approach, the fitness trial (nominally time steps, sufficient to verify sustained locomotion gaits) is prematurely terminated in either of the following two cases.</p><p>1) The velocity of Snakebot, measured intermediately by 0.20 of the nominal time interval, is less than what we called "qualifying" threshold of velocity (QTV). The QTV considered is dynamically equalized to 0.10 of the fitness of the fastest Snakebot in the current population. The fitness of "nonqualified" Snakebots is noisily estimated as equal to the actual velocity of Snakebot measured during the reduced (by 80%) trial interval. This approach is based on the empirical observation that fast locomotion gaits feature relatively constant velocity and these gaits are typically fast from the onset of the fitness trial, 2) A sustained standstill posture of the snake is detected.</p><p>Empirical data indicate that Snakebot rarely recovers from a sustained standstill posture, and often such a standstill posture usually lasts till the end of the trial. The fitness of standstill Snakebots is equalized to 0 (i.e., no motion at all) regardless of the distance they have traveled before stalling. Performance evaluation results indicate that the proposed approach of noisy fitness evaluation of the adapting snakebot contributes to a threefold to fourfold reduction of the average nom-inal trial interval, which results in a mean real-time of adaptation of a few hours of runtime on a PC featuring Intel ® 3GHz Pentium ® 4 microprocessor and 2 GB RAM under Microsoft Windows NT OS.</p><p>In addition to the adaptation characteristics of Snakebot, Fig. <ref type="figure" target="#fig_9">17</ref>(a) also illustrates the robustness of sidewinding locomotion to the damage of one, two, four, and eight (out of 15) segments: compared to the velocity of healthy Snakebots, these damages cause an immediate (before the adaptation) loss of about 24%, 33%, 42%, and 63% of velocity, respectively.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CONCLUSION</head><p>We presented an approach to automated design through genetic programming of sidewinding locomotion of simulated limbless, wheelless artifacts. The software model used to simulate Snakebot should fulfill the basic requirements of being quickly developed, adequate, and fast running. To address the first of these issues, we employed an XML-based GP framework. To address the issues of adequacy, we applied the ODE-a freeware software library for simulation of rigid-body dynamics. Runtime efficiency was addressed by the proposed approach of employing modularity aimed at reducing the size of the search space of GP. The approach implies that the snake is represented as a set of identical morphological segments, each of which feature (identical) evolvable dynamics of turning angles of horizontal and vertical actuators. The modularity within the evolvable code is introduced by the suggested approach of using ADF as a way to automatically evolve the code fragments, shared among (and expressing the correlation between) the codes of turning angles of horizontal and vertical actuators.</p><p>The empirically obtained results demonstrate that the complex locomotion of sidewinding emerges from relatively simple motion patterns of phenotypic segments (vertebrae). The evolved locomotion pattern of each segment is such that the segment is rotating in a circle-like trajectory around the center of the mass of the simulated Snakebot. This suggests that evolved sidewinding locomotion can be viewed as a process of rolling of the body of the simulated Snakebot in a helix shape, effectively inventing a kind of improvised wheel. The efficiency of sidewinding locomotion is much superior to locomotion in the forward direction, suggesting that sidewinding is the fastest possible locomotion for the simulated limbless wheelless robots with the characteristics used in this study (e.g., morphology, limits of actuator forces, joint type, and joint movement limits). Robustness of the sidewinding Snakebot, initially evolved in unconstrained environment (considered as ability to retain its velocity when situated in unanticipated environment) was illustrated by the ease with which Snakebot overcomes various types of obstacles such as piles of and burial under boxes, rugged terrain, and walls. The ability of Snakebot to adapt to partial damage by gradually improving its velocity characteristics was discussed. Discovering compensatory locomotion traits, Snakebot recovers completely from single damage and recovers a major extent of its original velocity when more significant damage is inflicted. Contributing to the better understanding of sidewinding locomotion, this work could be considered as a step toward building real limbless, wheelless robots, which featuring unique engineering characteristics that enable them to perform robustly in difficult environments.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Morphological segments of Snakebot linked via universal joint. Horizontal and vertical actuators attached to the joint perform rotation of the segment #i + 1 in vertical and horizontal planes, respectively.</figDesc><graphic coords="3,61.26,65.56,207.00,71.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Fitness evaluation routine.</figDesc><graphic coords="5,43.56,65.34,243.00,324.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .Fig. 5 .</head><label>45</label><figDesc>Fig. 4. (a) Velocity vectors and their lengths used as fitness criterion for evolved unconstrained locomotion gaits and (b) locomotion gaits propelling the Snakebot in forward direction. Only the forward-oriented component of velocity vector is considered in case (b). (X ; Y ); (X ; Y );(X ; Y ) denote the coordinates of the center of mass of Snakebot at the initial position, final position in unconstrained and final position in forward locomotion respectively. V and V denote velocity vectors in unconstrained and forward locomotion, respectively. 1t is the interval of the trial.</figDesc><graphic coords="7,104.04,65.98,385.00,209.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Trajectory of the central segment (cs) around the center of mass (cm) of Snakebot for (a) a sample-evolved best-of-run sidewinding locomotion and (b) traces of ground contacts.</figDesc><graphic coords="8,117.90,65.68,354.00,119.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig.7. Snapshots of a sample evolved best-of-run sidewinding locomotion of simulated Snakebot (left-right top-down). The X, Y, and Z axes illustrate the dynamics of orientation of the central segment of Snakebot. The dynamics of orientation of other segments of Snakebot is very similar. Notice that even though Snakebot takes the form of a rolling helix (wrapped around an improvised "cylinder," as Fig.6suggests), the morphological segments of Snakebot do not roll over. This supports the conclusion that the evolved sidewinding locomotion gaits are not associated with rolling over of the Snakebot.</figDesc><graphic coords="8,93.54,225.80,403.00,319.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Snapshots of Snakebot performing sharp turns in both (a) clockwise and (b) counterclockwise directions.</figDesc><graphic coords="9,137.76,272.40,317.00,102.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig.</head><label></label><figDesc>Fig.10. Fitness convergence characteristics of ten independent runs of GP for cases (a) where fitness is measured as velocity in forward direction and (b), (c) snapshots of sample evolved best-of-run forward crawling locomotion gaits of simulated Snakebot. Timestamp interval between the traces of the center of the mass is the same as for sidewinding locomotion gaits, shown in Fig.3(b) and (c). The distance between the traces of center of the mass in both forward and sidewinding locomotion gaits comparatively illustrates the achieved velocity in both cases.</figDesc><graphic coords="9,130.38,408.52,332.00,122.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 11 .Fig. 12 .</head><label>1112</label><figDesc>Fig. 11. Fitness convergence characteristics of ten independent runs of GP (a) when simulated Snakebot is confined in narrow "tunnel." (b) Snapshots of sample evolved best-of-run gaits at the intermediate. (c) Final stages of the trial.</figDesc><graphic coords="10,108.78,66.16,372.00,146.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 13 .Fig. 14 .Fig. 15 .Fig. 16 .</head><label>13141516</label><figDesc>Fig. 13. Snapshots illustrating the robustness of sidewinding in clearing a pile of boxes. (a) Initial, (b) intermediate, and (c) final stages of the trial.</figDesc><graphic coords="11,129.24,187.14,334.00,66.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 17 .</head><label>17</label><figDesc>Fig. 17. (a) Adaptation of sidewinding Snakebot to damage of one, two, four, and eight segments. (b) Snapshots of frontal view of sidewinding of healthy Snakebot. (c) Sidewinding immediately after the damage of a single segment. (d) After having completely recovered from the damage through adaptation. Fd is the best fitness in evolved population of damaged snakebots, and Fh is the best fitness of ten best-of-run healthy sidewinding Snakebots.</figDesc><graphic coords="11,44.64,548.38,504.00,113.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 18 .</head><label>18</label><figDesc>Fig. 18. Adaptation of the sidewinding Snakebot to damage of a single segment. (a) Healthy snakebot. (b) Snakebot immediately after damage to segment #7, causing 24% loss of velocity. (c) After having completely recovered from the damage through adaptation. Notice the shorter distances between the traces of the center of the mass (and consequently, slower locomotion) in case (b) compared to both (a) and (c). Parts (a)-(c) depict the same positions of Snakebot as shown in Fig. 17(b)-(d), respectively, viewed from above.</figDesc><graphic coords="12,108.60,65.46,373.00,147.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>Fig. 18. Adaptation of the sidewinding Snakebot to damage of a single segment. (a) Healthy snakebot. (b) Snakebot immediately after damage to segment #7, causing 24% loss of velocity. (c) After having completely recovered from the damage through adaptation. Notice the shorter distances between the traces of the center of the mass (and consequently, slower locomotion) in case (b) compared to both (a) and (c). Parts (a)-(c) depict the same positions of Snakebot as shown in Fig. 17(b)-(d), respectively, viewed from above.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 17 (</head><label>17</label><figDesc>b) shows a photograph of the frontal view of a sidewinding Snakebot adapted to damage of a single segment. Compared to the sidewinding locomotion of Snakebot before the adaptation [Fig.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>17</head><label>17</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>(c)], the adapted locomotion gait features much higher elevation of the middle part of the body. This elevation compensates the complete lack of functionality of actuators in the damaged segment. Snapshots of the sidewinding Snakebot are shown in Fig.18before damage to a single segment, immediately after damage to the segment, and after having completely recovered from the damage by adaptation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="6,43.68,259.66,239.00,341.00" type="bitmap" /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank K. Shimohara for his immense support of this research.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Manuscript received August 25, 2004; revised December 10, 2004. This paper was recommended for publication by Associate Editor S. Ma and Editor H. Arai upon evaluation of the reviewers' comments. This work was supported in part by the National Institute of Information and Communications Technology of Japan. This paper was presented in part at the IEEE Congress on Evolutionary Computation, Portland, OR, June 2004.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>From 1988 to 1996, he was with Gdansk University of Technology as an Assistant Professor of artificial intelligence, neural networks, and human-computer interfaces. He spent the academic year 1994-1995 at the International Computer Science Institute and University of California, Berkeley, as a Fulbright Scholar. He is currently a Senior Researcher with the Network Informatics Laboratories, ATR, Kyoto, Japan, where he coordinates the Artificial Brain Project. His research interests include machine psychodynamics, dynamic-fuzzy logic, cognitive modeling, and neurocomputing.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Genetic programming and emergent intelligence</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Angeline</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">E</forename><surname>Kinnear</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName><surname>Ed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Cambridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Genetic Programming</title>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="75" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automated damage diagnosis and recovery for remote robotics</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Bongard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lipson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robot. Autom</title>
		<meeting>IEEE Int. Conf. Robot. Autom</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="3545" to="3550" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A &quot;Sidewinding&quot; locomotion gait for hyper-redundant robots</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Burdick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Chirikjian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="101" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Studies on lateral rolling locomotion of a snake robot</title>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-05-01">Apr. 26-May 1 2004</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="5070" to="5074" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The kinematics of hyper-redundant robotic locomotion</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Chirikjian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Burdick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Robot. Autom</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="781" to="793" />
			<date type="published" when="1995-12">Dec. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Automated learning of muscle-actuated locomotion through control abstraction</title>
		<author>
			<persName><forename type="first">R</forename><surname>Grzeszczuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 22nd Annu. Conf. Computer Graphics</title>
		<meeting>22nd Annu. Conf. Computer Graphics<address><addrLine>Los Angeles, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-08">Aug. 1995</date>
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Limbless locomotion: Learning to crawl with a snake robot</title>
		<author>
			<persName><forename type="first">K</forename><surname>Dowling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<pubPlace>Pittsburgh, PA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon Univ</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation, Robotics Inst</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Genetic Algorithms in Search, Optimization, and Machine Learning</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Addision-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Biologically Inspired Robots: Snake-Like Locomotors and Manipulators</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hirose</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>Oxford, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Connected differential mechanism and its applications</title>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
		<author>
			<persName><surname>Int</surname></persName>
		</author>
		<author>
			<persName><surname>Conf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Robot</title>
		<imprint>
			<biblScope unit="page" from="319" to="326" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Design of practical snake vehicle: Articulated body mobile robot KR-II</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hirose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Morishima</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tukagosi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Int. Conf</title>
		<meeting>5th Int. Conf<address><addrLine>Pisa, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="833" to="838" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Emergence of adaptive behaviors by redundant robots-Robustness to changes environment and failures</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gofuku</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Congr</title>
		<meeting>IEEE Congr<address><addrLine>Canberra, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-12">Dec. 2003</date>
			<biblScope unit="page" from="2572" to="2579" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Extended QDSEGA for controlling real robots-Acquisition of locomotion patterns for snake-like robot</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kamegawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Matsuno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robot. Autom</title>
		<meeting>IEEE Int. Conf. Robot. Autom</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="791" to="796" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Application of reinforcement learning to hyper-redundant system: Acquisition of locomotion pattern of snake-like robot</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Matsuno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Pacific Asian Conf. Intell. Syst</title>
		<meeting>Pacific Asian Conf. Intell. Syst<address><addrLine>Seoul, Korea</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-11">Nov. 2001</date>
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Integration of genetic programming and reinforcement learning for real robots</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kamio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mitsuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Iba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Genetic Evol. Computat. Conf</title>
		<imprint>
			<biblScope unit="page" from="470" to="482" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Reinforcement learning of walking behavior for a four-legged robot</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kimura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Yamashita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kobayashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 40th IEEE Conf. Decision and Control</title>
		<meeting>40th IEEE Conf. Decision and Control</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="411" to="416" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Minimal simulations for evolutionary robotics</title>
		<author>
			<persName><forename type="first">N</forename><surname>Jacobi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ph.D. dissertation, School of Cognitive and Comput. Sci., Univ. of Sussex</title>
		<imprint>
			<date type="published" when="1998">1998</date>
			<pubPlace>Falmer, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Genetic Programming: On the Programming of Computers by Means of Natural Selection</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Koza</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Genetic Programming 2: Automatic Discovery of Reusable Programs</title>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Automatic creation of human-competitive programs and controllers by means of genetic programming</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Koza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Keane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">H</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Iii</surname></persName>
		</author>
		<author>
			<persName><surname>Mydlowec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Genetic Program. Evolvable Mach</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="121" to="164" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">B</forename><surname>Levitan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">K</forename><surname>Kaczmarek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Neuron: Cell and Molecular Biology</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Evolving motion of robots with muscles</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mahdavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Bentley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd Eur</title>
		<meeting>2nd Eur</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="655" to="664" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">The Emergence of Everything: How the World Became Complex</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Morowitz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Trends in evolutionary robotics</title>
		<author>
			<persName><forename type="first">L</forename><surname>Meeden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Soft Computing for Intelligent Robotic Systems</title>
		<editor>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Jain</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Fukuda</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Physica-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="215" to="233" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Gait kinematics for a serpentine robot</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ostrowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Burdick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robot. Autom</title>
		<meeting>IEEE Int. Conf. Robot. Autom<address><addrLine>Minneapolis, MN</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="1294" to="1299" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Linkage Problem, Distribution Estimation, and Bayesian Networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Pelikan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cantú-Paz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Univ. Illinois at</title>
		<imprint>
			<date type="published" when="1998">1998</date>
			<pubPlace>Urbana-Champaign, Urbana, IL</pubPlace>
		</imprint>
	</monogr>
	<note>Illinois Genetic Algorithm Lab. IlliGAL Rep. 98013</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">On the role of morphology and materials in adaptive behavior</title>
		<author>
			<persName><forename type="first">R</forename><surname>Pfeifer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Int. Conf. Simulation Adaptive Behavior</title>
		<editor>
			<persName><forename type="first">J.-A</forename><surname>Meyer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Berthoz</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Floreano</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Roitblat</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Wilson</surname></persName>
		</editor>
		<meeting>6th Int. Conf. Simulation Adaptive Behavior<address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="23" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Distributed task negotiation in modular robots</title>
		<author>
			<persName><forename type="first">B</forename><surname>Salemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Will</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-M</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Robot. Soc. Japan</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="32" to="39" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Evolving 3D morphology and behavior by competition</title>
		<author>
			<persName><forename type="first">K</forename><surname>Sims</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="28" to="39" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Aesthetically evolved virtual pets</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Leonardo</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="313" to="316" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Neural correlates of motor memory consolidation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Shadmehr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Holcomb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">277</biblScope>
			<biblScope unit="page" from="821" to="825" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Smith</surname></persName>
		</author>
		<ptr target="http://q12.org/ode/" />
		<title level="m">Open dynamics engine</title>
		<imprint>
			<date type="published" when="2001">2001-2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A simple approach to the control of locomotion in self-reconfigurable robots</title>
		<author>
			<persName><forename type="first">K</forename><surname>Stoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-M</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Will</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Robot. Auton. Syst</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="191" to="200" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Evolution of dynamic gaits for a robot</title>
		<author>
			<persName><forename type="first">S</forename><surname>Takamura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Hornby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Yamamoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yokono</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fujita</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Consum. Electron</title>
		<meeting>IEEE Int. Conf. Consum. Electron</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="192" to="193" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">DOM/XML-based portable genetic representation of morphology, behavior and communication abilities of evolvable agents</title>
		<author>
			<persName><forename type="first">I</forename><surname>Tanev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 8th Int. Symp</title>
		<meeting>8th Int. Symp<address><addrLine>Beppu, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="185" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Incorporating learning probabilistic context-sensitive grammar in genetic programming for efficient evolution and adaptation of Snakebot</title>
	</analytic>
	<monogr>
		<title level="m">Proc. 8th Eur. Conf. Genetic Programming</title>
		<meeting>8th Eur. Conf. Genetic Programming<address><addrLine>Lausanne, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-04">Mar.-Apr. 2005</date>
			<biblScope unit="page" from="155" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Robotic snakes</title>
		<author>
			<persName><forename type="first">R</forename><surname>Worst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 3rd German Workshop Artif. Life</title>
		<meeting>3rd German Workshop Artif. Life</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="113" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Phase automata: A programming model of locomotion gaits for scalable chain-type modular robots</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Yim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Eldershaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Duff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Roufas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE/RSJ Int. Conf. Intell. Robots Syst</title>
		<meeting>IEEE/RSJ Int. Conf. Intell. Robots Syst<address><addrLine>Las Vegas, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
			<biblScope unit="page" from="2442" to="2447" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Emergent systems of motion patterns for locomotion robots</title>
		<author>
			<persName><forename type="first">M</forename><surname>Svinin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ushio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Yamada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ueda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop Emergent Synthesis</title>
		<meeting>Int. Workshop Emergent Synthesis</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="119" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<author>
			<persName><forename type="first">Ivan</forename><surname>Tanev</surname></persName>
		</author>
		<title level="m">Russia, in 1987 and 1993, respectively, and the Dr.Eng. degree from Muroran Institute of Technology, Muroran, Japan</title>
		<meeting><address><addrLine>Sofia, Bulgaria; Sofia, Bulgaria; Sofia, Bulgaria; Tokyo, Japan; Kyoto, Japan; Kyoto, Japan; Kyoto, Japan</addrLine></address></meeting>
		<imprint>
			<publisher>the Synthetic Planning Industry Company, Ltd</publisher>
			<date type="published" when="1987">2001. 1987. 1988-1989. 1994-1997. 2001-2002. 2002-2004</date>
		</imprint>
		<respStmt>
			<orgName>D. degrees from Saint-Petersburg State Electrotechnical University, Saint Petersburg ; Bulgarian Central Institute of Computer Engineering and Computer Technologies ; Lecturer wth Doshisha University</orgName>
		</respStmt>
	</monogr>
	<note>His research interests include evolutionary computations, multiagent systems, and socioinformatics</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
