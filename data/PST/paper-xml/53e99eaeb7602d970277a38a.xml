<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Information Electronics</orgName>
								<orgName type="department" key="dep2">Graduate School of Engineering</orgName>
								<orgName type="laboratory">Laboratory of Bio-Electronics</orgName>
								<orgName type="institution">Nagoya University</orgName>
								<address>
									<postCode>464-8603</postCode>
									<settlement>Nagoya</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Systems Science</orgName>
								<orgName type="department" key="dep2">Graduate School of Informatics</orgName>
								<orgName type="laboratory">Theory of Symbiotic Systems Laboratory</orgName>
								<orgName type="institution">Kyoto University</orgName>
								<address>
									<addrLine>Yoshida Honmachi, Sakyo-ku</addrLine>
									<postCode>606-8501</postCode>
									<settlement>Kyoto</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Department of Information Electronics</orgName>
								<orgName type="department" key="dep2">Graduate School of Engineering</orgName>
								<orgName type="laboratory">Laboratory of Bio-Electronics</orgName>
								<orgName type="institution">Nagoya University</orgName>
								<address>
									<addrLine>Chikusa-ku</addrLine>
									<postCode>464-8603</postCode>
									<settlement>Nagoya</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C0CE675FEE7662A268E0434ED1080BF6</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:07+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fuzzy System Parameters Discovery by Bacterial Evolutionary Algorithm Norberto Eiji Nawa and Takeshi Furuhashi</head><p>Abstract-This paper presents a new method for discovering the parameters of a fuzzy system; namely, the combination of input variables of the rules, the parameters of the membership functions of the variables, and a set of relevant rules; from numerical data using the newly proposed bacterial evolutionary algorithm (BEA). In early work, the authors proposed the pseudobacterial genetic algorithm (PBGA) that incorporates a modified mutation operator called bacterial mutation, based on a biological phenomenon of microbial evolution. The BEA has the same features of the PBGA, but introduces a new operation, called gene transfer operation, equally inspired by a microbial evolution phenomenon. While the bacterial mutation performs local optimization within the limits of a single chromosome, the gene transfer operation allows the chromosomes to directly transfer information to the other counterparts in the population. The gene transfer is inspired by the phenomenon of transfer of strands of genes in a population of bacteria. By means of this mechanism, one bacterium can rapidly spread its genetic information to other cells. Numerical experiments were performed to show the effectiveness of the BEA. The obtained results show the benefits that can be obtained with this method. Index Terms-Automatic fuzzy rule discovery, bacterial evolution, fuzzy genetic systems, hybrid systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>G ENETIC algorithms (GA's) constitute a class of opti- mization techniques inspired by the evolutionary process of biological organizms in nature. Since the seminal work of Holland <ref type="bibr" target="#b0">[1]</ref>, GA's have been successfully used in an uncountable number of different fields, due to their general nature and their power in performing global search. As a natural extension, features that improve the performance of GA's at the chromosomal local level, where simple GA's perform relatively poorly, were introduced leading to the creation of hybrid GA's. There are several hybrid GA's combining special local improvement mechanisms to the simple GA paradigm, very often including domain-specific knowledge, in the spirit of "hybridization" presented in <ref type="bibr" target="#b1">[2]</ref>.</p><p>Fuzzy systems have the power to model nonlinear systems using linguistic variables in a straightforward form when enough knowledge about the object system is available. However, when the necessary knowledge is incomplete or cannot be easily described in linguistic form, alternative methods for building the structure and setting up the parameters of a fuzzy system have to be used. In these cases, the combination of fuzzy systems and evolutionary algorithms has proved to be very suitable. The literature in the field is extensive and the diversity of different combinations using fuzzy systems and evolutionary algorithms is considerable (see <ref type="bibr" target="#b2">[3]</ref> for a bibliographic survey and <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref> for overviews of the field).</p><p>The authors have proposed the pseudobacterial genetic algorithm (PBGA) <ref type="bibr" target="#b5">[6]</ref>, which has a local improvement mechanism called bacterial mutation. The bacterial mutation was inspired by a process that occurs in the bacterial genetics level and it aims the improvement of parts within the chromosomes. In cases where only weak interrelationships connect the parameters encoded in the genes of a chromosome (in other words, low epistasis), it is possible to perform optimization in parts. On the other hand, these same weak interrelationships disable any attempt of exhaustive individual optimization of each one of the parts, since the overall result would probably not be optimal. The parameters of a fuzzy rule can be considered to be an example where these weak interrelationships can be found: one rule can be codified in a chromosome through its parameters (combination of input variables, output variables, parameters of the membership functions, etc.), these parameters synergistically contribute to the calculation of the output value of the rule, which itself is part of the sum that will generate the output value of the entire system. The claim is that it should be far more efficient to try an optimization regarding a group of parameters as a unit (for instance, one fuzzy rule) than loosely perform optimization at once in all the parameters of the fuzzy system or, in the other extreme, try to optimize individually each and every parameter of the rules.</p><p>The PBGA has been applied for the discovery of fuzzy rules <ref type="bibr" target="#b5">[6]</ref>, extraction of personal features for signature verification <ref type="bibr" target="#b6">[7]</ref>, and design of fuzzy controllers <ref type="bibr" target="#b7">[8]</ref>. In <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b7">[8]</ref> a flexible encoding method was proposed, suitable for the features presented by the PBGA, namely, part optimization in chromosomes loci. The authors have proposed also an adaptive operator <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref> to determine the parts in the chromosomes for the bacterial mutation and also the cutting points for the crossover operator. The adaptive operator decides these points according to the moving average of the activation values of the fuzzy rules. The idea is that strings with high degrees of moving averages have a higher concentration of meaningful rules, thus they are desired to be preserved. Accordingly, strings with low moving averages of truth values should be modified more intensively in order to increase their relevance to the system.</p><p>Here, the bacterial evolutionary algorithm (BEA) is presented as an optimization method that incorporates only special mechanisms inspired by natural phenomena of microbial evo-lution for the discovery of the parameters of fuzzy systems from numerical data. Being an extension of the early proposed PBGA, the BEA also has the bacterial mutation as the local improvement mechanism performed within the limits of a chromosome. However, it introduces a new operation called gene transfer operation, in place of the traditional crossover operation, for the exchange of information between chromosomes in the population. The gene transfer operation is inspired by the phenomenon of transfer of strands of genes between bacteria that occurs in nature. By means of this mechanism, one bacterium can rapidly spread its genetic information to the other cells without the crossover operation. The chromosomes encode the parameters of the fuzzy rules. The analog aimed idea is to spread high-quality rules of individuals to the rest of the population by using the gene transfer operation. The experimental results show the benefits obtained by the introduction of the new operation. This paper is organized as follows: Section II gives a brief explanation on systems combining fuzzy logic and genetic algorithms, Section III describes the BEA, Section IV explains the encoding method of fuzzy systems in the chromosomes, Section V presents the experiments and the obtained results, and Section VI presents the conclusions and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. FUZZY SYSTEMS AND GENETIC ALGORITHMS</head><p>Systems that use fuzzy inference have been used in a wide range of applications. Fuzzy inference uses IF-THEN type linguistic rules that can deal with vagueness of concepts, cope with contradictions, and incorporate knowledge of experts. All these characteristics make fuzzy systems especially suitable for modeling and dealing with real-world systems. Very often is the case that there is no analytical description available about the objective system to be controlled or modeled, or the control policy to be implemented, although a human expert can describe the system's behavior by means of linguistic natural language variables and rules that can be used as a basis for the construction of a fuzzy system. This formidable quality of fuzzy systems enables their wide use in real-world applications.</p><p>Basically, the design process of a fuzzy model consists of determining:</p><p>1) the input and output variables of the system; 2) the membership functions of each variable; 3) the fuzzy rules; and 4) the parameters of 2) and 3). Tasks 1)-3) are related to the definition of the the structure of the fuzzy model. Task 4) is related to the tuning of the parameters of the model.</p><p>Even for the cases where there is a human expert present or when a linguistic description of the modeled system can be found, a time-consuming tuning phase of the fuzzy systems based on trial and error is necessary, in order to eliminate major imprecision and inconsistencies in the system. In the worst case, when there is neither an expert nor a linguistic description available, the system has to be designed by other methods and be based on numerical data. In this context, automatic design methods and fuzzy rule acquisition proce-dures have been proposed to perform one or more of the tasks described above, mostly making use of hybrid systems with artificial neural networks <ref type="bibr" target="#b10">[11]</ref> and/or genetic algorithms (GA's) <ref type="bibr" target="#b11">[12]</ref>- <ref type="bibr" target="#b13">[14]</ref>.</p><p>Earlier work on combinations of fuzzy systems and genetic algorithms realized optimization of membership functions <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b14">[15]</ref> and selection of rules from a set <ref type="bibr" target="#b15">[16]</ref>. Membership functions and rule sets are simultaneously designed in <ref type="bibr" target="#b13">[14]</ref>, where it is pointed out that since these two parameters are interdependent concerning the overall performance of the system, it is necessary to adjust them at the same time, in order to achieve better performance. One common point that these works share is that there is always a limitation concerning the membership functions: either their number is fixed, or the membership functions parameters are determined in advance. The encoding method used in this work (see Section IV for more details) and in <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b7">[8]</ref>- <ref type="bibr" target="#b9">[10]</ref> does not impose this limitation. The claim is that the design in advance of the membership functions can be a strong constraint for the achievement of an optimal fuzzy system. Contrarily, the idea is that the evolutionary computation method should freely determine the parameters of the membership functions and the fuzzy rules from numerical samples taken from the system, minimizing the need of interference in the design process by experts. The by-product of this approach is that the lack of constraints concerning the positioning of the membership functions may generate complex fuzzy sets with overlapping membership functions, jeopardizing their readability and the possibility of manipulation by humans. For those cases, rule base simplification methods <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref> can be applied to achieve a better balance between performance and structural complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. BACTERIAL EVOLUTIONARY ALGORITHM</head><p>Nature has served as an endless source of ideas for building variations on the basic GA scheme. For instance, in <ref type="bibr" target="#b19">[20]</ref> a population of "viruses," which are pieces of the chromosomes that are effectively being evaluated, is co-evolved with the population of chromosomes. In <ref type="bibr" target="#b20">[21]</ref>, a minimal genetic algorithm called microbial genetic algorithm is proposed. The algorithm keeps the features of a genetic algorithm but integrates several genetic operations in a "microbial tournament."</p><p>An interesting process of bacterial recombination can be found in nature: bacteria can transfer DNA to recipient cells through mating. This process is called transduction. By transduction, it is possible to spread the characteristics of a single bacterium to the rest of the population. This genetic recombination mechanism configures a microbial evolution process. Male cells directly transfer strands of genes to female cells. After that, those female cells acquire characteristics of male cells and transform themselves into male cells. By these means, the characteristics of one bacterium can be spread among the entire bacteria population. Genes can be transferred from a single bacterium (host cell) to others (recipient cells) and eventually this would lead to an increase in the evolution speed of the entire population. Two aspects of interest can be pointed out in this biological process: first, the direct transfer of genetic material between cells, and second, the acquisition of traits found in the host cell by the recipient cell.</p><p>Inspired by this phenomenon, the authors proposed the bacterial mutation as a local improvement mechanism based on the acquisition of traits by recipient cells. It was first used within the framework of the PBGA. The BEA, as an extension of that work, incorporates another operation analog to the direct transfer of strands of genes from host cells to other cells, which is called gene transfer operation. The gene transfer operation substitutes the crossover operation, allowing the recombination of information between different individuals, in the expectation that this will lead to the creation of better individuals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. BEA Description</head><p>The flow of the BEA is described as follows (see Fig. <ref type="figure" target="#fig_0">1</ref>). 1) Generation of the initial population: chromosomes are randomly created and evaluated; 2) Genetic Operations: a) Bacterial Mutation: The bacterial mutation is applied to each chromosome one by one. Suppose there are parts in a chromosome. A part is defined according to the hierarchical level in which the optimization is expected to take place, for instance, the parameters that define a single fuzzy rule, or a group of fuzzy rules. The first chromosome is chosen and it is reproduced in clones. Portions within the th part (randomly chosen) of clones are mutated. The elite individual among the chromosomes is selected and the th part of the selected chromosome is transferred to the chromosomes. At this stage, the th part of all the clones is replaced by the th part of the selected chromosome. This process, mutation-evaluation-selection-replacement, is repeated. The mutation is applied to another randomly chosen part, different from the already chosen ones. When all the parts have been tested, the best chromosome from the individuals is selected to remain in the population and the other individuals are deleted. This genetic operation is applied to all the chromosomes in the population. b) Gene Transfer Operation: The gene transfer operation occurs in the following way (see Fig. <ref type="figure" target="#fig_1">2</ref>): i) Sort the population and divide it in two halves; the half with the individuals with better fitnesses is called the superior half, and the other half is called inferior half; ii) Choose at random one chromosome from the superior half, named source chromosome, and another chromosome from the inferior half, named destination chromosome; iii) According to a given criterion, choose a good part from the source chromosome that will be transferred to the destination chromosome. (A good part can be a fuzzy rule with a high degree of activation value, or a group of rules.) In the destination chromosome, with equal chances, the coming part can overwrite a not-so-good part of the destination chromosome or simply be added. iv) Repeat i), ii), and iii) for times, where is the number of "infections" per generation.</p><p>3) Stop Condition: If the stop condition is satisfied, stop; otherwise, go back to 2). In <ref type="bibr" target="#b8">[9]</ref> and <ref type="bibr" target="#b9">[10]</ref>, an adaptive operator was introduced to determine the parts (which were considered to be groups of contiguous rules) within the chromosome when the bacterial mutation is to be applied. The idea of the adaptive operator is to choose the cut points of parts according to a given quality criterion, in the case, groups of fuzzy rules with high values of moving average of activation values are considered to be good. Strings that are low-ranked have higher probability of being chosen as delimiters of parts. The rationale is to divide these low-ranked strings when applying the bacterial mutation. By dividing them, it is expected that the bacterial mutation can work more effectively toward the construction of better ranked strings.</p><p>The expected effect of the gene transfer operation is to rapidly spread good portions of the chromosomes with superior fitnesses to the chromosomes with inferior fitnesses. By doing so, the overall search process should be made more efficient, as the operators actuate more frequently on better rules, leading to the rapid construction of systems that fulfill the requirements posed by the fitness function.</p><p>A question of utmost importance resides in how to evaluate the quality of portions of chromosomes in order to choose the suitable parts to be transferred when the gene transfer is to be performed. In <ref type="bibr" target="#b19">[20]</ref>, a genetic algorithm called VEGA, based on the virus theory of evolution co-evolves two populations, one of chromosomes and one of viruses, which are strands/parts of chromosomes. The viruses are evaluated and have their survival time calculated based on the possible increment in fitness that they bring to the infected chromosome. Although apparently the VEGA and the gene transfer operation are similar, they aim different objectives and are different in essence. Here, the gene transfer operation realizes the interaction between individuals in the population, substituting the crossover operation. The aim of the VEGA is to perform local and global search adaptively, co-evolving the two populations. In the framework of the BEA, the bacterial mutation performs the local search in a different fashion, restricted to parts within a chromosome, with no exchange of information between different individuals. The exchange of information interindividuals is performed by the gene transfer operation.</p><p>In this paper, the BEA was used to discover fuzzy rules for a modeling problem. The criterion used when applying the gene transfer operation was that fuzzy rules with high degrees of activation value have higher quality than rules with low activation values of truth value. This criterion follows the simple rationale that the activation value of a fuzzy rule indicates how often or how intensely the rule is activated, thus the degree of activation value can be taken as a measure of the relevance and effectiveness of a fuzzy rule, in the sense of coverage of the input variables space by the condition part of the rules <ref type="bibr" target="#b21">[22]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. ENCODING METHOD</head><p>Each chromosome in the population encodes the rules of the rule base of the fuzzy model as well as the membership where means the isosceles triangle-shaped membership function whose center point is located on and with width and where and are input variables of the fuzzy model and is the output variable. This encoding method gives a high degree of freedom for the BEA, which can simultaneously define the variables to be used in the rules, the rules themselves, the parameters of the membership functions, and the number of rules in the rule base. However, this encoding method has some drawbacks due to the lack of uniformity of membership functions. For instance, every rule has a different set of membership functions to refer to, and, consequently, there is no bonding between the membership functions of a variable. On the other hand, this freedom of action allows the evolutionary algorithm to find relevant portions in the universe of discourse of the variables, in the sense that there is a tendency that unimportant regions will not appear in the rules. If the process is successful, the evolutionary algorithm should create rules that only contain membership functions that refer to essential regions in the universe of discourse of the variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENTS AND RESULTS</head><p>Comparative experiments were performed in order to test the suitability and effectiveness of the BEA to the task of designing a fuzzy model of the following nonlinear equation:</p><p>(1)</p><p>The training and test set had entries sampled from the following intervals: and . The function was modeled on seven fuzzy variables, six arguments of the function, and one dummy variable. Eighty -tuples were used as training data and another 80 entries were used as test data. The population of chromosomes was fixed in 30 individuals and the number of clones produced in the bacterial operation was arbitrarily fixed to 4.</p><p>The performance index (PI) used in the simulation session was defined as follows:</p><formula xml:id="formula_0">PI NumRules Num (2)</formula><p>where is the number of entries in the training/test data sets, is the desired output value, is the inferred value by the model, NumRules is the number of fuzzy rules of the model, Num is the maximum number of rules allowed to one chromosome and is an assigned weight. Num was arbitrarily set to 50 and was set to 0.1 after some parameter adjusting experiments. The second term in PI increases the payoff to models with fewer rules.</p><p>Comparative experiments were performed in order to test the suitability and effectiveness of the BEA. Three algorithms besides the BEA were used in the experiments: a simple PBGA, a GA with a radical local improvement mechanism (RLIM-GA), and a GA with a hill-climbing method (HCGA), the latter two being also proposed by the authors <ref type="bibr" target="#b22">[23]</ref> for purposes. The simple PBGA applies the bacterial mutation to each one of the fuzzy rules encoded in the chromosome and besides, it uses a special crossover operator. The special crossover operator determines the cutting points based on the moving average of the degrees of activation values of the fuzzy rules. The strings where the moving averages of the truth value are low have higher probability of being selected as cutting points for the single-point crossover. The idea is to facilitate the construction of blocks of rules with high moving averages of truth values, in the same spirit of the adaptive operator. Those rules are considered to be more effective and meaningful to the system.</p><p>The GA with a radical local improvement mechanism (RLIM-GA) has a similar dynamics to the simple PBGA and was designed as an algorithm with an extreme version of the bacterial mutation; it uses the same encoding in their chromosomes and the other genetic operators are identical, including the special crossover operator. The PBGA and the RLIM-GA differ in the hierarchical level of representation where the bacterial mutation is applied. The latter applies the bacterial mutation to each one of the loci of each one of the fuzzy rules in the chromosome. It tries to radically improve each one of the parameters of the fuzzy rules. It was introduced in the experiments to verify the possibility of improving the overall action of a rule base by acting in each of the parameters of the fuzzy rules.</p><p>The GA with a hill-climbing method (HCGA) is, as its name suggests, a mixture of a GA with a hill-climbing method. The HCGA incorporates in the GA an iterated hill-climbing phase, as defined in <ref type="bibr" target="#b23">[24]</ref>, where the new configuration is not randomly constructed, but obtained through mutation. The mutation that generates new configurations randomly modifies the parameters from a random number of rules. In fact, the  HCGA has the mutation operator incorporated in the the hillclimbing method. The special crossover operator was also utilized in the HCGA.</p><p>The three compared algorithms employed tournament selection to select the individuals to fill up the worse half and the crossover operation to produce the other half. In the case of the BEA, since no crossover operation was used, the best half of the population was preserved through the generations. For all the cases, the number of evaluations is approximately the same, around 30 000 evaluations per run. This puts the comparative study in fair terms, since the algorithms have different number of evaluations per generation. The initial population of chromosomes was randomly generated.</p><p>The obtained results concerning the errors of the best built models are shown in Table <ref type="table" target="#tab_0">I</ref>. The error of the model corresponds to the first term of <ref type="bibr" target="#b1">(2)</ref>. The data in Table <ref type="table" target="#tab_0">I</ref> are mean values over 50 runs for each method.</p><p>From the data in Table <ref type="table" target="#tab_0">I</ref>, it can be clearly seen that the BEA and the PBGA can design better models than the other two methods. The column entitled "train set" contains the values of the errors of the models when they are tested to the 80 entries of the training data set. The column entitled "test set" contains the values of the errors of the models when they are tested to the 80 entries of the test data set.</p><p>The BEA brings the best results concerning the training set, and moreover, concerning the test data, it achieves a performance similar to the PBGA.</p><p>Table <ref type="table" target="#tab_1">II</ref> shows the average of the number of rules of the built models. The column entitled "Nonused Rules" shows the percentage of nonused rules of the fuzzy models when the test data is applied to the models. The number of rules obtained when using the BEA is comparatively higher than when using the simple PBGA. This can be explained by the fact that when the transfer occurs, the transferred rule can either overwrite the worst rule of the destination chromosome or be added to the  end of the chromosome, with equal probability. This may lead to the construction of longer chromosomes than when using a simple crossover operation. Nevertheless, the size of the chromosomes has no direct relation with the performance of the obtained models, in terms of model errors, as can be seen from the results in Tables <ref type="table" target="#tab_0">I</ref> and<ref type="table" target="#tab_1">II</ref>.</p><p>Table <ref type="table" target="#tab_2">III</ref> shows the standard deviations of the data obtained in the experimental results. It can be seen that the variance of the results is less when using the variations of the bacterial evolutionary algorithms.</p><p>Fig. <ref type="figure" target="#fig_3">4</ref> shows the interpolated curves obtained from results of 50 runs using different values of The upper curve shows the error concerning the test data, the lower curve shows the error concerning the training data. It is possible to observe that the parameter is relevant to the performance of the system. In this case, the value of was fixed in 35 for all the runs, determined after some test experiments. This drawback can be also found, for example, in the calculation of suitable values of crossover and mutation rates in conventional genetic algorithms, where basically there is no rule of thumb that always assures a successful search. Care should be taken against extremely high values of , which would quickly diminish the diversity of rules in the population, probably trapping the process in local minima. Moderate values should be harmless in this sense. Fig. <ref type="figure" target="#fig_4">5</ref> shows the average of the performance index [as defined by (2)] of the population through the generations, obtained by the PBGA and the BEA for 50 runs. It should be noted that the performance index includes not only the model errors by also a second term that takes into account the number of rules of the models. From Fig. <ref type="figure" target="#fig_4">5</ref> it is possible to observe that the population of individuals evolved by the BEA are better ranked than the ones evolved by the PBGA, on average. Considering that the models built by the BEA have more rules than the ones built by the PBGA, this is an indication that the BEA population performs better in terms of the error of the models, as it was previously noticed. The supposition made to explain this result is that the gene transfer operation is spreading good rules in the population, and thus inducing the improvement of the overall performance of the population.</p><p>Experiments were performed introducing the special crossover operator in the BEA, providing two operators for the interactions between individuals in the population. The obtained results of the BEA with the special crossover operator are presented in Tables <ref type="table" target="#tab_4">IV</ref> and<ref type="table" target="#tab_4">V</ref>. From Table <ref type="table" target="#tab_3">IV</ref> it can be   seen that the introduction of the crossover operator does not bring considerable improvements to the overall performance of the system. The average of the number of rules, presented in Table V is illustrative: the BEA with crossover operator obtains a number of rules between the results obtained by the PBGA and the BEA. The nature of the crossover operator might help to keep the average of the number of rules of the individuals in the population low, while the gene transfer operation has a tendency of building longer individuals. Some additional experiments were performed in order to more thoroughly investigate, first, the effect of the second term of the performance index PI, which is related to the number of rules in the fuzzy rule bases, and second, the difference in convergence power between the PBGA and the BEA. The experiment consisted in starting with a random population and using PI with It considerably diminishes the payoff to parsimonious rule bases, compared to the PI with , used in the previous experiments. After every 100 generations, the value of in PI was incremented by . One aspect that should be considered is the fact that when the weights are changed, the population is not randomly built, but biased toward a slightly different fitness function.</p><p>Experiments with stepwise changes of the weight were performed 50 times for the PBGA and BEA. Each test was ran for 500 generations, being the final value of The results concerning the errors of the models to the training and test sets and the number of rules are shown in Tables VI-X. Additional experiments were performed with the BEA as in the previous sessions, i.e., with the weight kept constant from the beginning to the end of the process. These experiments were ran for 300 generations with , and for 500 generations with</p><p>This was done to see whether the stepwise change process brings any benefit for the construction of better fuzzy systems in terms of performance and number of rules.</p><p>Tables VI-X show the errors and the number of rules at the 100th, 200th, 300th, 400th, and 500th generations,     w r = 0:02 ! 0:04 (101st GENERATION), w r = 0:04 ! 0:06 (201st GENERATION), w r = 0:06 ! 0:08 (301st GENERATION), AND w r = 0:08 ! 0:1 (401st GENERATION), AND FOR THE ORDINARY BEA WITH CONSTANT WEIGHT w r = 0:1 (MEAN VALUES OVER 50 RUNS) respectively. The weight was changed from 0.02 to 0.04 at the 101st generation, from 0.04 to 0.06 at the 201st generation, from 0.06 to 0.08 at the 301st generation, and from 0.08 to 0.1 at the 401st generation. Tables VIII and X also show the results obtained with constant of 0.06 and 0.1, for 300 and 500 generations, respectively. From the data in Table VI, it is possible to see that, as expected, the BEA achieves better performance in terms of the model errors (compared to the data in Table <ref type="table" target="#tab_0">I</ref>), when a smaller pressure toward parsimonious rule bases is applied. Surprisingly, in the case of the PBGA, as decreases from 0.1 (Table <ref type="table" target="#tab_0">I</ref>) to 0.02 (Table <ref type="table" target="#tab_5">VI</ref>), i.e., decreasing the payoff for smaller rule bases, the performance in terms of errors gets worse. In this optimization framework, apparently, the number of rules and the performance of the system do not seem to be completely antipodean parameters. Moreover, comparing the results of the stepwise BEA in Tables VI-VIII, the errors diminish, as the weight increases from 0.02 to 0.06. This can be considered to be a product of the stepwise change process, as can be seen from the results obtained by the ordinary BEA in Table <ref type="table" target="#tab_7">VIII</ref>. The ordinary BEA ran for 300 generations with but the obtained results do not differ much from the result obtained with for only 100 generations (Table <ref type="table" target="#tab_5">VI</ref>).</p><p>The stepwise change process with the BEA brought the best result of all concerning the train and test data sets after 300 generations (Table <ref type="table" target="#tab_7">VIII</ref>). After that, the increasing pressure toward parsimonious rule bases is harmful, leading to the construction of less accurate models (Tables <ref type="table" target="#tab_9">IX</ref> and<ref type="table" target="#tab_9">X</ref>).</p><p>Both versions of BEA always outperformed the PBGA, which is an effect of the gene transfer operation, and in the two cases where the stepwise BEA was compared to the ordinary BEA, the stepwise version outperformed the other concerning the error of the models, which is an indication of the benefit brought by gradually increasing the pressure toward smaller rule bases, up to a certain degree. However, equally in both cases, the stepwise BEA built systems with greater number of rules. Concerning the number of rules, the stepwise PBGA performed better than the stepwise BEA in all the cases, as in the previous session of experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>This paper presented the BEA, which is an extension of the previously presented PBGA. The BEA adopts a local improvement mechanism, called bacterial mutation, that showed to be efficient in the optimization of local portions of chromosomes. Moreover, the gene transfer operation is introduced in the place of the traditional crossover operation, being responsible for the interchromosomal exchange of information. The idea is that good portions of chromosomes with higher fitnesses are directly transferred to the individuals with lower fitnesses. Eventually, spreading these good portions would increase the velocity of evolution toward better fuzzy rule bases, in terms of performance and parsimony in number of rules.</p><p>The obtained results show that better models can be obtained when using the BEA, especially using the stepwise fashion, gradually modifying the payoff to rule bases with less number of rules. The better convergence power of the BEA allowed it to outperform the PBGA in all the tested instances for different values of , the weight in the performance index for the number of rules. It was noticed that a small pressure toward parsimonious systems concerning the number of rules, if applied gradually, can possibly be beneficial for the construction of more accurate models.</p><p>The parameter , i.e., the number of rules transferred in each generation when the gene transfer operation is executed, is critical to determine the balance between the errors for the train and test data. In the experiments presented in this paper, was kept constant through the entire session. One possible alternative would be to make it adaptively change through the generations, in order to a better balance between training and test data errors be achieved.</p><p>One unresolved point concerns the obtained fuzzy rules. The encoding method used in the experiments gives a high degree of freedom to the BEA to discover the suitable parameters according to the posed performance index. This freedom is twofold: on one hand, it allows the BEA to perform the search and find a model that performs the best; on the other hand, the transparency of the linguistic variables, and thus the easiness of their manipulation by experts, is jeopardized, as the number of membership functions increases considerably. This is clearly a balance problem. When manipulation of linguistic variables is required, even when it can lead to a system performing suboptimally, a simplification processing is necessary in the obtained rule bases. The problem of structural complexity is not exclusive of this encoding method, though. Evolutionary algorithms are fitness-driven optimization methods and blind to any other thing not explicitly stated on the fitness function. Thus when making use of them, there will be always the balance problem of sharing attention between the system's performance and the structural complexity of the system.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Scheme of the BEA.</figDesc><graphic coords="3,50.52,59.58,236.16,376.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Scheme of the gene transfer operation.</figDesc><graphic coords="4,82.38,59.58,172.32,175.44" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Example of a fuzzy model encoded in a chromosome.</figDesc><graphic coords="4,315.42,59.58,232.32,100.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Errors with different values of N inf :</figDesc><graphic coords="6,103.14,55.02,393.84,304.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Average of the performance index of the individuals in the population.</figDesc><graphic coords="7,104.34,55.02,391.44,303.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>PBGA AND BEA WITH STEPWISE CHANGE OF WEIGHTS w r = 0:02 ! 0:04 (101st GENERATION), wr = 0:04 ! 0:06 (201st GENERATION), AND w r = 0:06 ! 0:08 (301st GENERATION) (MEAN VALUES OVER 50 RUNS)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I ERROR</head><label>I</label><figDesc>OF THE BUILT MODELS FOR THE TRAINING AND TEST DATA (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE II FUZZY</head><label>II</label><figDesc>RULES OF THE IDENTIFIED MODELS (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE III STANDARD</head><label>III</label><figDesc>DEVIATIONS OF THE MODELS (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE IV ERROR</head><label>IV</label><figDesc>OF THE MODELS BUILT BY THE BEA WITH SPECIAL CROSSOVER (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE V FUZZY</head><label>V</label><figDesc>RULES OF THE MODELS IDENTIFIED BY THE BEA WITH SPECIAL CROSSOVER (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE VI MODEL</head><label>VI</label><figDesc>ERRORS AND NUMBER OF RULES, AT THE 100th GENERATION, w r = 0:02, FOR THE PBGA AND BEA (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE VII MODEL</head><label>VII</label><figDesc>ERRORS AND NUMBER OF RULES, AT THE 200th GENERATION, FOR THE PBGA AND BEA WITH THE STEPWISE CHANGE OF WEIGHT w r = 0:02 ! 0:04, AT THE 101st GENERATION (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>TABLE VIII MODEL</head><label>VIII</label><figDesc>ERRORS AND NUMBER OF RULES, AT THE 300th GENERATION, FOR THE PBGA AND BEA WITH THE STEPWISE CHANGE OF WEIGHTS wr = 0:02 ! 0:04 (101st GENERATION) AND wr = 0:04 ! 0:06 (201st GENERATION), AND FOR THE ORDINARY BEA WITH CONSTANT WEIGHT wr = 0:06 (MEAN VALUES OVER 50 RUNS)</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>TABLE IX MODEL</head><label>IX</label><figDesc>ERRORS AND NUMBER OF RULES, AT THE 400th GENERATION, FOR THE</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>TABLE X MODEL</head><label>X</label><figDesc>ERRORS AND NUMBER OF RULES, AT THE 500th GENERATION, FOR THE PBGA AND BEA WITH STEPWISE CHANGE OF WEIGHTS</figDesc><table /></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Publisher Item Identifier S 1063-6706(99)08731-7.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Holland</surname></persName>
		</author>
		<title level="m">Adaptation in Natural and Artificial Systems: An Introductory Analysis with Applications to Biology, Control, and Artificial Intelligence</title>
		<meeting><address><addrLine>Cambridge, MA; Ann Arbor, MI</addrLine></address></meeting>
		<imprint>
			<publisher>Univ. Michigan Press</publisher>
			<date type="published" when="1975">1992. 1975</date>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
	<note>st ed.</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Handbook of Genetic Algorithms</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Davis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Van Nostrand Reinhold</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Indexed bibliography of genetic algorithms and fuzzy systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Alander</surname></persName>
		</author>
		<ptr target="ftp://ftp.uwasa.fi/cs/report94-1/gaFUZZYbib.ps.Z" />
	</analytic>
	<monogr>
		<title level="m">Rep. 94-1-FUZZY</title>
		<meeting><address><addrLine>Vaasa, Finland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
		<respStmt>
			<orgName>Dept. Information Technology and Production Economics, Univ. Vaasa</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Genetic Algorithms and Soft Computing</title>
		<author>
			<persName><forename type="first">F</forename><surname>Herrera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Verdegay</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Physica-Verlag</publisher>
			<pubPlace>Heidelberg, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Fuzzy Evolutionary Computation</title>
		<author>
			<persName><forename type="first">W</forename><surname>Pedrycz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>Kluwer</publisher>
			<pubPlace>Norwell, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A new approach to genetic based machine learning for efficient finding of fuzzy rules</title>
		<author>
			<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Miyata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nakaoka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Uchikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">1011</biblScope>
			<biblScope unit="page" from="173" to="189" />
			<date type="published" when="1995">1995</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A study on signature verification using a new approach to genetic based machine learning</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Obata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Uchikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Syst., Man, Cybern. (SMC&apos;95)</title>
		<meeting>IEEE Int. Conf. Syst., Man, Cybern. (SMC&apos;95)<address><addrLine>Vancouver, B.C., Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-10">Oct. 1995</date>
			<biblScope unit="page" from="4383" to="4386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A study on finding fuzzy rules for semi-active suspension controllers with genetic algorithm</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hashiyama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Uchikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1995 IEEE Int. Con. Evolutionary Computation (ICEC&apos;95)</title>
		<meeting>1995 IEEE Int. Con. Evolutionary Computation (ICEC&apos;95)<address><addrLine>Perth, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-11">Nov. 1995</date>
			<biblScope unit="page" from="291" to="296" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A study on fuzzy rules discovery using pseudo-bacterial genetic algorithm with adaptive operator</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">E</forename><surname>Nawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hashiyama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Uchikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1996 IEEE Int. Conf. Evolutionary Computation (ICEC&apos;97)</title>
		<meeting>1996 IEEE Int. Conf. Evolutionary Computation (ICEC&apos;97)<address><addrLine>Indianapolis, IN</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-04">Apr. 1997</date>
			<biblScope unit="page" from="589" to="593" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Fuzzy logic controllers generated by pseudo-bacterial genetic algorithm</title>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE 1997 Int. Conf. Neural Networks (ICNN&apos;97)</title>
		<meeting>IEEE 1997 Int. Conf. Neural Networks (ICNN&apos;97)<address><addrLine>Houston, TX</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-06">June 1997</date>
			<biblScope unit="page" from="2408" to="2413" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On fuzzy modeling using fuzzy neural networks with the back-propagation algorithm</title>
		<author>
			<persName><forename type="first">S.-I</forename><surname>Horikawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Uchikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Neural Networks</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="801" to="806" />
			<date type="published" when="1992-09">Sept. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Improved fuzzy process control of spacecraft autonomous rendezvous using a genetic algorithm</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Karr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Meredith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPIE Intell. Contr. Adaptive Syst</title>
		<imprint>
			<biblScope unit="volume">1196</biblScope>
			<biblScope unit="page" from="274" to="288" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Design of an adaptive fuzzy logic controller using a genetic algorithm</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Karr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 4th Int. Conf. Genetic Algorithms (ICGA&apos;91)</title>
		<meeting>4th Int. Conf. Genetic Algorithms (ICGA&apos;91)<address><addrLine>La Jolla, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-07">July 1991</date>
			<biblScope unit="page" from="450" to="457" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Simultaneous design of membership functions and rule sets for fuzzy controllers using genetic algorithms</title>
		<author>
			<persName><forename type="first">A</forename><surname>Homaifar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Mccormick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Fuzzy Syst</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="129" to="139" />
			<date type="published" when="1995-05">May 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Adjusting membership functions of fuzzy classification rules by genetic algorithms</title>
		<author>
			<persName><forename type="first">T</forename><surname>Murata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ishibuchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1995 IEEE Int. Conf. Fuzzy Systems (FUZZ-IEEE/IFES&apos;95)</title>
		<meeting>1995 IEEE Int. Conf. Fuzzy Systems (FUZZ-IEEE/IFES&apos;95)<address><addrLine>Yokohama, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-03">Mar. 1995</date>
			<biblScope unit="page" from="1819" to="1824" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Selecting fuzzy if-then rules for classification problems using genetic algorithms</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishibuchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nozaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Yamamoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tanaka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Fuzzy Syst</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="260" to="270" />
			<date type="published" when="1995-05">May 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Integrating design stages of fuzzy systems using genetic algorithms</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Takagi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1993 IEEE Int. Conf. Fuzzy Systems (FUZZ-IEEE&apos;93)</title>
		<meeting>1993 IEEE Int. Conf. Fuzzy Systems (FUZZ-IEEE&apos;93)<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-03">Mar. 1993</date>
			<biblScope unit="page" from="612" to="617" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Adaptive membership function fusion and annihilation in fuzzy if-then rules</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Arabshahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Caudell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Choi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1993 IEEE Int. Conf. Fuzzy Systems (FUZZ-IEEE&apos;93)</title>
		<meeting>1993 IEEE Int. Conf. Fuzzy Systems (FUZZ-IEEE&apos;93)<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-03">Mar. 1993</date>
			<biblScope unit="page" from="961" to="967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Similarity measures in fuzzy rule base simplification</title>
		<author>
			<persName><forename type="first">M</forename><surname>Setnes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Babuška</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Kaymak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">R</forename><surname>Van Nauta Lemke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern. B</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="376" to="386" />
			<date type="published" when="1998-06">June 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Evolutionary transition on virus-evolutionary genetic algorithm</title>
		<author>
			<persName><forename type="first">N</forename><surname>Kubota</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fukuda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Arakawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Shimojima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1997 IEEE Int. Conf. Evolutionary Computation (ICEC&apos;97)</title>
		<meeting>1997 IEEE Int. Conf. Evolutionary Computation (ICEC&apos;97)<address><addrLine>Indianapolis, IN</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-04">Apr. 1997</date>
			<biblScope unit="page" from="291" to="296" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">under submission as a letter to Evolutionary Computation</title>
		<author>
			<persName><forename type="first">I</forename><surname>Harvey</surname></persName>
		</author>
		<ptr target="ftp://ftp.cogs.susx.ac.uk/pub/users/inmanh/Microbe.ps.gz" />
	</analytic>
	<monogr>
		<title level="m">School of Cognitive and Computing Sciences</title>
		<meeting><address><addrLine>U.K</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
		<respStmt>
			<orgName>Univ. Sussex</orgName>
		</respStmt>
	</monogr>
	<note>The microbial genetic algorithm</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A new approach to fuzzy classifier systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Parodi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bonelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Int. Conf. Genetic Algorithms (ICGA&apos;93)</title>
		<meeting>5th Int. Conf. Genetic Algorithms (ICGA&apos;93)<address><addrLine>Urbana-Champaign, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-07">July 1993</date>
			<biblScope unit="page" from="273" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A study on nonlinear model identification using pseudo-bacterial genetic algorithm</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">E</forename><surname>Nawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Furuhashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 4th Int. Conf. Neural Inform. Processing (ICONIP 97)</title>
		<meeting>4th Int. Conf. Neural Inform. essing (ICONIP 97)<address><addrLine>Dunedin, New Zealand</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-11">Nov. 1997</date>
			<biblScope unit="page" from="408" to="411" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Evolution in time and space-The parallel genetic algorithm</title>
		<author>
			<persName><forename type="first">H</forename><surname>Muehlenbein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Foundations of Genetic Algorithms</title>
		<editor>
			<persName><forename type="first">G</forename><forename type="middle">J E</forename><surname>Rawlins</surname></persName>
		</editor>
		<meeting><address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="316" to="337" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
