<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A SimPLR Method for Routability-driven Placement</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Myung-Chul</forename><surname>Kim</surname></persName>
							<email>mckima@eecs.umich.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of EECS</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<addrLine>2260 Hayward St</addrLine>
									<postCode>48109-2121</postCode>
									<settlement>Ann Arbor</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jin</forename><surname>Hu</surname></persName>
							<email>jinhu@eecs.umich.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of EECS</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<addrLine>2260 Hayward St</addrLine>
									<postCode>48109-2121</postCode>
									<settlement>Ann Arbor</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dong-Jin</forename><surname>Lee</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of EECS</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<addrLine>2260 Hayward St</addrLine>
									<postCode>48109-2121</postCode>
									<settlement>Ann Arbor</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Igor</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
							<email>imarkov@eecs.umich.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of EECS</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<addrLine>2260 Hayward St</addrLine>
									<postCode>48109-2121</postCode>
									<settlement>Ann Arbor</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A SimPLR Method for Routability-driven Placement</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">795BB43AD12CEB38530661C04CC02F59</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Highly-optimized placements may lead to irreparable routing congestion due to inadequate models of modern interconnect stacks and the impact of partial routing obstacles. Additional challenges in routability-driven placement include scalability to large netlists and limiting the complexity of software integration. Addressing these challenges, we develop lookahead routing to give the placer advance, firsthand knowledge of trouble spots, not distorted by crude congestion models. We also extend global placement to (i) spread cells apart in congested areas, and (ii) move cells together in less-congested areas to ensure short, routable interconnects and moderate runtime. While previous work adds isolated steps to global placement, our SIMultaneous PLace-and-Route tool SimPLR integrates a layer-and via-aware global router into a leading-edge, force-directed placer. The complexity of integration is mitigated by careful design of simple yet effective optimizations. On the ISPD 2011 Contest Benchmark Suite, with the official evaluation protocol, SimPLR outperforms every contestant on every benchmark.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In earlier technology generations, placement and routing algorithms were designed and implemented in separate software tools, even when the user interface exposed a single optimization to chip designers. After logic synthesis, a placer generates row-and sitealigned, non-overlapping locations for cells with small interconnect length (HPWL) <ref type="foot" target="#foot_1">2</ref> . A global router then routes all signal nets, with small total wirelength, subject to track capacity constraints. Yet, common placement metrics no longer capture key aspects of solution quality at new technology nodes <ref type="bibr" target="#b2">[2,</ref><ref type="bibr" target="#b27">27]</ref>. Wirelength-optimized placements often lead to routing failures when the placer is not aware of actual routes <ref type="bibr" target="#b11">[11]</ref>. Prior work incorporates routing congestion analysis into global placement (see Section 2), but lacks in several aspects. First, simplified congestion models do not capture phenomena salient to modern layouts, e.g., the impact of nonuniform interconnect stacks and partial routing obstacles on congestion. Second, the placement techniques that best control whitespace allocation in response to congestion (min-cut and annealingbased) are no longer competitive on the largest layouts. Third, incremental post-placement optimization alone is often insufficient as it cannot change the structure of global placement. Challenges in congestion estimation <ref type="bibr" target="#b2">[2]</ref>. A successful estimator must account for up to twelve metal layers with wire widths and spacings that differ by up to 20×. Blockages and per-layer routing rules must be modeled as well. Other constraints include via spacing rules and limits on intra-gcell routing congestion. After the 2007/2008 ISPD contests, academic routers NTHU-Route 2.0 <ref type="bibr" target="#b8">[8]</ref>, NTUgr <ref type="bibr" target="#b13">[13]</ref>, FastRoute 4.0 <ref type="bibr" target="#b39">[39]</ref>, BFG-R <ref type="bibr" target="#b14">[14]</ref> started to account for these issues. More recent routers -PGRIP <ref type="bibr" target="#b38">[38]</ref>, PGR (SGR) <ref type="bibr" target="#b23">[23]</ref>, GLADE <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b20">20]</ref> -have improved solution quality and runtime, and account for different layer directives.</p><p>Routability-driven placement can pursue several different optimization objectives, such as ensuring 100% routability, even at the cost of significant routing runtime. Alternatively, one can evaluate placements by a layer-aware global router with a short time-out, which nevertheless correlates with the final router (and is potentially based on the same software implementation). This intermediate objective is more amenable to optimizations in global placement because its quick evaluation facilitates a tight feedback loop. In other words, intermediate placements can be evaluated many times, allowing the global placer to make proper adjustments. As we show in Section 5, due to the correlation between the fast and the final router, resulting routability-driven placements may fare better even with respect to the former, more traditional objective. This approach also facilitates early estimation of circuit delay and power in terms of specific route topologies. On the other hand, biasing the global placer away from HPWL to more sophisticated routability metrics may adversely affect the global placer's overall optimization capabilities. In other words, if HPWL increases too much, routability metrics will also increase. In this work, we directly address the challenges of routabilitydriven placement. First, we develop lookahead routing, which invokes a fast high-quality 3-d global router, to quickly estimate routability. Since the produced routes can be used as a routing solution, our method can accurately and quickly report both congestion and routed wirelength. Second, to produce competitive placements in terms of both routed wirelength and HPWL, we integrate our lookahead routing into a flat, quadratic global placer, and enhance placement iterations by gently coercing cell locations and relieve congestion while preserving interconnect length. In detailed placement, we do not change the objective functions as in <ref type="bibr" target="#b42">[42]</ref>, but prohibit moves that aggravate routability. In global placement, we temporarily inflate cells in highly-congested regions to reserve whitespace during global placement. Traditionally, this has been accomplished either by cell bloating <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b12">12,</ref><ref type="bibr" target="#b26">26]</ref> during/after global placement, or by whitespace allocation <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b27">27,</ref><ref type="bibr" target="#b40">40]</ref> after placement. We observe that wirelength-driven global placers typically limit area utilization by a given amount through the entire layout based on target density. Therefore, in addition to cell bloating, we dynamically adjust the target density based on total routed wirelength. <ref type="foot" target="#foot_2">3</ref> This technique preserves overall solution quality and allows the placer to move cells in uncongested regions closer. Third, we develop a simultaneous place-and-route framework for global placement as well as a routability-driven detailed placement algorithm. Our proposed methodology offers several advantages. First, since we use a global router to estimate congestion, the routes for all nets are known. Second, by enabling the global placer to directly redistribute whitespace in response to routing congestion, we establish a more precise feedback loop (compared to add-on techniques proposed previously). Third, by using a variable target density, we are trading off wirelength for routing demand in congested regions.</p><p>Our key contributions include:</p><p>• A method to control routability within the global placer while preserving solution quality by dynamically adjusting the global target density • An effective cell-bloating technique by dynamically adjusting cell width based on design's perceived difficulty • A simultaneous place-and-route framework • A congestion-aware detailed placement algorithm that moves cells only when this does not hurt routability • Empirical results on the ISPD 2011 contest benchmarks that outperform every competitor on every benchmark with an average 2.04× improvement (Table <ref type="table" target="#tab_0">3</ref>) and a greater improvement 8.43× (Table <ref type="table" target="#tab_2">5</ref>) with a stronger global router.</p><p>The remainder of this paper is structured as follows. In Section 2, we survey prior art on congestion-driven placement, and review the baseline algorithms that we use. In Sections 3 and 4, we introduce several new techniques to improve the routability of placements. In Section 5, we empirically validate proposed algorithms. Section 6 concludes our work and discusses its impact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PRIOR WORK</head><p>We briefly review the baseline place-and-route algorithms used in our work, then survey prior art on congestion maps and congestiondriven placement. For further background on placement see <ref type="bibr" target="#b17">[17,</ref><ref type="bibr">Chapter 4]</ref> and for global routing see <ref type="bibr" target="#b17">[17,</ref><ref type="bibr">Chapter 5]</ref>. SimPL <ref type="bibr" target="#b19">[19]</ref> is a flat, force-directed global placer. It maintains a lower-bound and an upper-bound placement; the final solution is generated when the two placements converge. <ref type="foot" target="#foot_3">4</ref> The upper-bound placement is generated by applying lookahead legalization (LAL), which is based on top-down geometric partitioning and non-linear scaling. Using this information, the lower-bound placement is generated by minimizing the quadratic objective</p><formula xml:id="formula_0">Φq( x, y) = X i,j</formula><p>wi,j `(xi -xj) 2 + (yi -yj) 2 ´(1)</p><p>using the Conjugate Gradient method <ref type="bibr" target="#b28">[28]</ref>. Here, x and y are coordinate vectors of the cells' (x,y) locations, and wi,j represents the connectivity between cells i and j. Two of top three teams in the ISPD 2011 contest, including ours, relied on the SimPL algorithm. FastPlace-DP <ref type="bibr" target="#b24">[24]</ref> is a wirelength-driven detailed placer based on greedy algorithms. It uses (i) cell clustering, (ii) global cell swapping, (iii) vertical cell swapping, and (iv) local reordering to improve wirelength. To determine which cells should be swapped, FastPlace-DP estimates the reduction in wirelength from swapping cells i and j by</p><formula xml:id="formula_1">gain(i, j) = X n∈N i (Wn -W n ) - X n∈N j (Wn -W n )<label>(2)</label></formula><p>where Ni and Nj are the nets connected to cells i and j, and W and W are the wirelength measurements before and after the swap. BFG-R <ref type="bibr" target="#b14">[14]</ref> is a global router based on Lagrangian relaxation. It decomposes multi-pin nets into two-pin subnets using MSTs and then iteratively routes all subnets until no violations are present. BFG-R prices each (sub)net by summing up the cost of used edges</p><formula xml:id="formula_2">cost(e) = basee + λ(e) × C(e) × ρ(e)<label>(3)</label></formula><p>where basee is the base edge cost, λ(e) is the history cost, C(e) is current congestion, and ρ(e) is the runtime penalty factor.</p><p>Congestion Maps. To estimate congestion, prior approaches can be divided into three main categories: (i) static congestion estimation, (ii) probabilistic congestion estimation, and (iii) global routing estimation. Traditionally, the first two options have been the most popular, but the last option has recently been gaining acceptance thanks to advanced global routers designed to handle greater layout complexity. Empirical evidence suggests that constructive methods (generating routes) are faster and more accurate than probabilistic methods <ref type="bibr" target="#b37">[37]</ref>. Table <ref type="table">1</ref> summarizes these approaches.</p><p>Congestion-driven Placement. Known placement optimizations can be classified as (i) performed during global placement, (ii) external optimizations applied to intermediate solutions, (iii) performed during detailed placement, and (iv) post-placement processing (see Table <ref type="table">2</ref>). During global placement, the two most popular optimizations are to (i) relocate movable cells, or (ii) relocate them after bloating. These changes requires modifying the placer, potentially including the optimization function. When working with quadratic, mincut and annealing-based placers, the generic ideas above must be adapted case by case. Additional optimizations can be applied to intermediate placement solutions, and then passed on to the next step of the design flow. During detailed placement, the most common approach is to modify the objective function of cell-swapping to account for congestion. After placement, the solution undergoes a series of changes to improve routability.</p><p>GENERAL APPROACH SPECIFIC TECHNIQUES using Rent's Rule <ref type="bibr" target="#b41">[41]</ref> net bounding box w/ weighting <ref type="bibr" target="#b6">[6]</ref> STATIC building Steiner trees <ref type="bibr" target="#b27">[27]</ref> pin density <ref type="bibr" target="#b4">[4]</ref> counting nets in each region <ref type="bibr" target="#b35">[35]</ref> (uniform) wire density <ref type="bibr" target="#b30">[30]</ref> PROBABILISTIC pseudo-constructive wirelength <ref type="bibr" target="#b18">[18]</ref> probabilistic pattern routing <ref type="bibr" target="#b36">[36]</ref> CONSTRUCTIVE generating routes using A*-search on a collapsed (2-d) routing grid <ref type="bibr" target="#b37">[37]</ref> using FastRoute <ref type="bibr" target="#b39">[39]</ref> within an integrated framework <ref type="bibr" target="#b11">[11]</ref> Table <ref type="table">1</ref>: Prior congestion-estimation techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SIMULTANEOUS PLACE-AND-ROUTE</head><p>In this section, we introduce a methodology for simultaneous place-and-route and discuss its components (see Figure <ref type="figure" target="#fig_0">1</ref>). Given a placement instance, the baseline global placer quickly produces a tentative solution. Then, we apply lookahead routing (LAR) by calling our global router to estimate routing congestion and wirelength. We use this information during global placement by means of cell bloating and dynamically adjusting the target density. After several iterations of global placement, where the placer "heals" the placement for wirelength, lookahead routing is invoked again, and such iterations continue until overflow stops improving. Congestionaware detailed placement is performed to recover whitespace and improve routed wirelength while maintaining routability.</p><p>We achieve an initial placement solution once the wirelength gap between the upper-bound and lower-bound solutions is within 25% of the 10 th iteration's total wirelength (see Section 2). After cell bloating, we run four iterations of lookahead legalization. Our disjunctive convergence criterion checks for three conditions: (i) the overflow has improved less than 3% after two consecutive rounds of LAR, (ii) the total overflow is less than 1% of the total edge capacity, or (iii) the global placement timeout of 60 iterations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GENERAL APPROACH</head><p>SPECIFIC TECHNIQUES relocating the movable objects DURING <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b30">30,</ref><ref type="bibr" target="#b31">31]</ref> GLOBAL cell bloating or cell inflation <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b12">12]</ref> PLACEMENT growing or shrinking placement regions <ref type="bibr" target="#b25">[25]</ref> INTERMEDIATE local placement refinement <ref type="bibr" target="#b11">[11]</ref> linear placement based on Steiner DURING length in small windows <ref type="bibr" target="#b16">[16,</ref><ref type="bibr" target="#b27">27]</ref> DETAILED incorporating congestion into PLACEMENT the objective function <ref type="bibr" target="#b42">[42]</ref> cell swapping based on only congestion and overlap <ref type="bibr" target="#b11">[11]</ref> whitespace injection or reallocation <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b27">27,</ref><ref type="bibr" target="#b40">40]</ref> simulated annealing <ref type="bibr" target="#b10">[10,</ref><ref type="bibr" target="#b32">32]</ref> AFTER linear programming <ref type="bibr" target="#b22">[22]</ref> PLACEMENT network flows <ref type="bibr" target="#b33">[33,</ref><ref type="bibr" target="#b34">34]</ref> shifting modules by expanding global routing grid tiles <ref type="bibr" target="#b42">[42]</ref> using pin density and congestion map to spread and bloat cells <ref type="bibr" target="#b26">[26]</ref> Table <ref type="table">2</ref>: Prior congestion-driven placement techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Lookahead Routing (LAR)</head><p>To improve routability while preserving wirelength, global placement invokes lookahead routing. Unlike previous approaches, where only congestion information is reported, LAR estimates both interconnect length and routing congestion. Our router implementation accounts for (i) different wire widths and spacings, (ii) routing blockages, (iii) pins on different metal layers, and (iv) vias. Wire widths and spacings at each metal layer are modeled separately. The resources consumed by a net are then estimated by</p><formula xml:id="formula_3">U sage(net) = X e∈net minSpacing(le) + minW idth(le) (4)</formula><p>where net is the net routed, e is each edge in net, le is the metal layer that e is on, and minSpacing(le) and minW idth(le) are the respective minimum spacing and width required for le. However, congestion estimates produced by this model can be misleading. For example, suppose two edges e1 and e2 on different metal layers are overflown, where e1 is on Metal1, having minSpacing(M etal1)+minW idth(M etal1) = 2, and e2 is on Metal4, having minSpacing(M etal4)+minW idth(M etal4) = 8. Suppose e1 has two violating nets, yielding an overflow of 4, and e2 has one violating net, yielding an overflow of 8. These actual overflows are now misleading, as e1 is considered more congested, but its overflow is lower than that of e2. Therefore, to accurately report congestion, we normalize the capacity for every edge e on metal layer l by nCap(e l ) =</p><p>Cap(e l ) minSpacing(le) + minW idth(le)</p><p>where Cap(e l ) is the original capacity of edge e on layer l. Note that when normalizing capacity, we also normalized, where each segment is defined as one routing segment, regardless of the layer.</p><p>Routing blockages are specified as physical locations in the layout area. Therefore, the routing resources blocked at each edge are proportional to the length of the blockage. However, if two obstacles overlap, the overlap is only counted once. To properly calculate capacity, we first take the union of all routing-obstacle shapes on each edge, and then consider each non-blocked region separately.</p><p>For each non-blocked region r, the amount of usable capacity is </p><formula xml:id="formula_5">υ(re) = dim(re) dim(e)<label>(6)</label></formula><p>where dim(r) is the length of the non-blocked region on edge e, and dim(e) is the length of e (i.e., height if e is a vertical edge, and width if e is a horizontal edge). Then, each edge's normalized capacity is</p><formula xml:id="formula_6">nCap(e l ) = X re∈Re υ(re) × Cap(e l ) minSpacing(le) + minW idth(le)<label>(7)</label></formula><p>The calculation of normalized capacity in the presence of routing obstacles is demonstrated in Fig. <ref type="figure" target="#fig_1">2</ref>. In the example, let the length of every edge be 50, let the lower left coordinate be (0,0). Let the original edge capacity be 40, and let the minimum spacing plus the minimum width of this layer be 4. Since the vertical edge (50,0)-(50,50) has coordinates (50,40)-(50,50) blocked off, it only has 50-10 50 = 80% usable capacity. Since there is only one nonblocked region, the normalized capacity is (80%×40) 4 = 8. Similarly, the horizontal edge (50,50)-(100,50) has no usable capacity, as it is entirely blocked off, so its normalized capacity is 0. Elevated pins. The ISPD 2011 contest benchmarks, derived from industrial ASICs and SoCs designs, include contact pins on multiple metal layers. This poses a challenge for traditional global routing techniques, where routing is first performed on a 2-d grid and then projected onto a 3-d grid. Therefore, we pursue a different strategy. We decompose all multi-pin nets into two-pin subnets, and perform 3-d maze routing. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Congestion-based Cell Bloating</head><p>After lookahead routing, we inflate all cells located in congested regions. The congestion at gcell g, located at (x,y), is C(g(x, y)) = U sage(g(x, y)) Cap(g(x, y))</p><p>where nU sage and nCap are respectively the normalized usage and capacity at g(x, y). The usage at each gcell is defined as U sage(g(x, y)) = (9) max(nU sage(e(x ± 1, y)), nCap(e(x ± 1, y))) + max(nU sage(e(x, y ± 1)), nCap(e(x, y ± 1)))</p><p>and the capacity at each gcell is defined as Cap(g(x, y)) = nCap (e(x ± 1, y))+nCap (e(x, y ± 1)) <ref type="bibr" target="#b10">(10)</ref> where nU sage is the normalized usage for edge e, and nCap is the normalized capacity for e. Therefore, if C(g(x, y)) &gt; 1, then g(x, y) is considered congested. If at least one of the neighboring edges is congested, then the gcell is considered congested.</p><p>Then, for every cell in each congested gcell, we apply cell bloating by setting the cell's new width to</p><formula xml:id="formula_8">max(width(cell)+1, 1+θ•Λ(cell)•C(g(x, y))•deg(cell)) (11)</formula><p>where width is the current width of cell, θ is an adaptive function (described below), Λ is the number of times the cell has been in a congested gcell, and deg denotes the cell degree (the number of cell pins connected to wires).</p><p>Our cell bloating approach is inspired by CRISP <ref type="bibr" target="#b26">[26]</ref>, but differs in three major ways. First, we apply cell bloating during global placement, while CRISP bloats cells after placement. We can therefore perform large-scale changes and, in our experience, our placer better adjusts to bloated cells, resulting in a smaller wirelength penalty. Second, we use gcell-centric congestion estimation, while CRISP uses edge-centric congestion estimation with a pin-density map. Our style of congestion estimation improves integration with a global router. Pin density has been a popular estimation technique for designs with relatively few metal layers. However, with modern 9+ layer interconnect stacks, it primarily affects the success of detailed routing, which is orthogonal to our work.</p><p>Third, while CRISP relies on a constant θ, our θ is a routing-solution-dependent function (described below), and based on the design's estimated difficulty and its routability. The intuition is that if a design is difficult to place or route, cells in congested regions need additional whitespace. Therefore, cells in those regions should be more inflated. We define θ(G) as</p><formula xml:id="formula_9">θ(G) = max (0, α • η(G) • ξ(G) + β) (<label>12</label></formula><formula xml:id="formula_10">)</formula><p>where G is the set of all gcells, α and β are constants determined from linear regressions, η(G) indicates how hard a design is (e.g., how much available routing capacity there is), which is relatively insensitive to the routed solution, and ξ(G) indicates the routability of the design, and is based on lookahead routing. We define η(G) and ξ(G) as</p><formula xml:id="formula_11">η(G) = X g∈G U sage(g) Cap(g) ξ(G) = T OF (G) T Cap(G)<label>(13)</label></formula><p>where OF (G) and Cap(G) are the respective total overflow and total capacity of all gcells in G. In our implementation, we empirically determined the values α = 0.017 and β = -0.01 based on numerical regression (but not benchmark-specific tuning).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Dynamic Adjustment of Target Density</head><p>Target density (utilization) is one of the most critical parameters to trade off routability for wirelength in the final placement. However, finding the best target density for routability-driven placements remains an open problem. Unnecessarily high target density leads to better HPWL, but may also cause routing failures <ref type="bibr" target="#b1">[1]</ref>. Lower target density, on the other hand, may increase the overall routed wirelength, which would lead to longer detours and consume more routing resources. We set the initial target density as</p><formula xml:id="formula_12">γinit = Dut + min(max(γ0 -Dut, 0%), ωD) (<label>14</label></formula><formula xml:id="formula_13">)</formula><p>where Dut is the design utility (given), γ0 is a prediction of a good target density, and ωD is the target density lower bound. If Dut is too low (e.g., less than 35%), then the target density should be higher to encourage cell clustering. Conversely, cells should be spread apart if Dut is too high. Empirically, we observed that setting γ0 = 50% when ωD = 15% provides a reasonable trade-off between routability and routed length.</p><p>After lookahead routing and cell bloating, the target density is updated as</p><formula xml:id="formula_14">γ = min( area(Cm) area(D) -area(C f ) + φ, 95%) (<label>15</label></formula><formula xml:id="formula_15">)</formula><p>where Cm is the set of movable cells, C f is the set of fixed cells, D is the design, area returns the total area of input (bloated cells included), and φ is a constant that increases every time LAR reports an increase in routed wirelength. In our implementation, φ is initially γinit -Dut, and increases by 1% when wirelength increases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">CONGESTION-AWARE DETAILED PLACEMENT</head><p>Traditional wirelength-driven detailed placement may pack cells in regions that are difficult to route. In the context of the FastPlace-DP algorithm, we modify both global cell swapping and vertical cell swapping to be congestion-aware (see Algorithm 1) in two ways: <ref type="bibr" target="#b1">(1)</ref> we only allow cell move that do not harm routability, (2) we encourage cells to move out of congested regions.</p><p>The subroutine perform swap(ci, cj, pred) swaps two cells ci and cj if pred is true. <ref type="foot" target="#foot_4">5</ref> For each movable cell ci, we consider its Algorithm 1 Congestion-aware Detailed Placement 1. Cm = Set of all movable cells 2. Gc = Set of all congested gcells 3. C(i) = Congestion in the position cell i 4. foreach ci ∈ Cm 5. find the optimal region Ri of ci 6. find bswap, the benefit of swap with a cell cj ∈ Ri 7. find bmove, the benefit of move to a space s ∈ Ri</p><formula xml:id="formula_16">8. if (ci / ∈ Gc &amp;&amp; cj / ∈ Gc) 9.</formula><p>if (bswap ≥ bmove) 10.</p><p>perform swap(ci, cj, (bswap &gt; 0)) 11. else 12.</p><p>perform swap(ci, s, (bmove &gt; 0))  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EMPIRICAL VALIDATION</head><p>Our implementation is in C++, compiled with g++ 4.4.3, and validated on a 3.00 GHz Intel Core 2 CPU X9650 Linux workstation. We modified and integrated the (i) SimPL global placer <ref type="bibr" target="#b19">[19]</ref>, (ii) BFG-R global router <ref type="bibr" target="#b14">[14]</ref>, and (iii) FastPlace-DP detailed placer <ref type="bibr" target="#b24">[24]</ref>. Significant changes were made to all three tools, and new algorithms were added, as described in Sections 3 and 4. The evaluation of placement solutions was performed by coa-lesCgrip <ref type="bibr" target="#b5">[5]</ref>, which was mandated by the ISPD 2011 Routabilitydriven Placement Contest. CoalesCgrip was compiled with gcc 4.4.1, as specified by the contest organizers. Its runtime limit was set to 300 seconds for initial routing and 900 seconds for rip-up and reroute (RRR), which makes results machine-dependent. Therefore, we downloaded all placements produced by the top contestants, and reevaluated them on our workstation.</p><p>Our implementation of SimPLR uses BFG-R for LAR instead of coalesCgrip, which was not available in source code. Empirically, our router accurately predicts the regions of congestion reported by coalesCgrip while allowing us to implement our proposed interface that minimizes runtime overhead. Since our strong results are achieved without running coalesCgrip during global placement, SimPLR does not seem to require the knowledge of a specific downstream router. Though using different routers in one flow may not be ideal, this is not uncommon in multivendor industry flows, and our results indicate that such configurations can be successful. Progress of global placement is illustrated in Figure <ref type="figure" target="#fig_3">4</ref> for the SimPL (with target density 50%) and SimPLR algorithms. Before the first invocation of lookahead routing (LAR) in SimPLR, the two progress identically since the initial target density (γinit) of Sim-PLR is computed by Equation 14 to be 50%. The first invocation of LAR with subsequent cell bloating does not significantly impact wirelength, due to Λ = 0 in Equation 11. Lookahead legalization produces higher HPWL after the second LAR, but the impact on quadratic placement is small, and the disruption in roughly legalized placement is quickly healed. SimPLR invokes LAR 3-6 times per benchmark, which takes 27-58% of total runtime, averaging at 47.88%, and currently runs 2× slower than SimPL. Yet, SimPLR was among the two fastest placers at the ISPD 2011 contest. Congestion-aware detailed placement (Ca-DP) is evaluated in Table <ref type="table" target="#tab_1">4</ref>. We report the (i) recovered HPWL, (ii) recovered routed length, and (iii) total overflow improvement using Ca-DP, versus FastPlace-DP <ref type="bibr" target="#b24">[24]</ref>. Ca-DP barely changes HPWL and routed wirelength, but improves overflow by 1.18×. Routability is reported in Table <ref type="table" target="#tab_0">3</ref> and Figure <ref type="figure" target="#fig_2">3</ref>: SimPLR consistently reduces total overflow across all benchmarks and makes SUPERBLUE1 fully routable. On the remaining benchmarks, compared to baseline wirelength-driven placer SimPL, we improve total overflow by 3.81× on average. Compared to the top results from the ISPD 2011 Contest, we produce the smallest overflow on all benchmarks, for an average 2.04× reduction. These results are further improved in Table <ref type="table" target="#tab_2">5</ref> as discussed in conclusions. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSIONS</head><p>Tight integration of major CAD tools is sometimes frowned upon in the industry because it may sharply increase software complexity, introduce subtle discrepancies and complicate software maintenance. However, such integration is highly sought in place-androute, where high-performance global placers often generate hardto-route solutions, creating unnecessary complications for downstream tools. The strategy pursued in our work is to give the placer advance, firsthand access to tentative net routes and resulting actual congestion maps (rather than crude estimates), as well as the ability to respond early and often. We believe that our proposed integration of global routing into global placement, based on lookahead routing of upper-bound placements in the SimPL algorithm, offers a particularly promising and "clean" path to effective simultaneous place-and-route. By communicating through a lightweight interface, the placer and the router quickly exchange multiple updates to cell locations and net routes, while maintaining the software infrastructure separated. Despite this software separation, the evolutions of routes and cell placements are coupled and occur simultaneously. Empirical data show that our techniques improve routability, reducing total overflow compared to top results from the ISPD 2011 contest, which represent prior art and several competing new techniques developed by our colleagues across the world.</p><p>The ISPD 2011 experimental protocol evaluated placements with only very short routing runs of coalesCgrip. To illustrate the full potential of SimPLR, we performed additional experiments, where coalesCgrip was given 12 and 24 hours. The results reported in Table 5 were obtained on a 2.53 GHz Intel Xeon CPU E5540 Linux workstation. While none of the IBM-released benchmarks could be completed without overflows at the ISPD 2011 contest, we have now completed half of them. Our results <ref type="foot" target="#foot_5">6</ref> show that the advantage of SimPLR solutions grows significantly when the evaluating router is used at its full strength. Thus, modern place-and-route leaves room for improvement in both gate locations and wire routes, but such improvements are best achieved in cooperation. Such optimizations use physical resources more efficiently, enable smaller dies, and decrease IC manufacturing cost <ref type="bibr" target="#b26">[26]</ref>.   <ref type="bibr" target="#b5">[5]</ref> with a longer time-out than in Tables <ref type="table" target="#tab_0">3</ref> and<ref type="table" target="#tab_1">4</ref>. Average and geometric means are calculated excluding routable benchmarks, which under-represents the impact of proposed techniques.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Our simultaneous place-and-route (SimPLR) flow. The baseline components are shown in transparent boxes, added routability-driven components have light-blue fill.</figDesc><graphic coords="3,317.61,54.05,240.95,128.18" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Accounting for routing blockages, where dim(e) = 50 for each edge, two of three routing blockages overlap. On the left, the lengths of each routing blockage and non-blocked region are shown. On the right, the normalized capacities are calculated for each edge. With no blockages, an edge has a normalized capacity of 10.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Congestion maps for SUPERBLUE15 for the best-reported placement at the ISPD 2011 contest (left) and SimPLR (right). Isolated red regions indicate peak congestion, dark-blue rectangles show unused routing resources.</figDesc><graphic coords="6,95.35,54.05,198.43,198.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure4: Progress of SimPL and SimPLR algorithms plotted against iteration counts (SUPERBLUE12). Each invocation of lookahead routing is marked with a circle. The second invocation of LAR and subsequent cell bloating visibly disrupt the quality of roughly legalized placements, with a smaller impact on quadratic placement.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 3 :</head><label>3</label><figDesc><ref type="bibr" target="#b13">13</ref>. else if (ci ∈ Gc &amp;&amp; cj / Routed wirelength (RtWL, ×10e6), routing overflow (OF), and runtime (in minutes) on ISPD 2011 benchmarks. The placements were evaluated by coalesCgrip<ref type="bibr" target="#b5">[5]</ref> with a 15-min time-out.</figDesc><table><row><cell>∈ Gc)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 4 :</head><label>4</label><figDesc>The impact of congestion-aware detailed placement on HPWL(×10e6), routed wirelength (×10e6), and overflow (OF) on ISPD 2011 benchmarks. Runtimes are given in minutes. Routing was performed by coalesCgrip<ref type="bibr" target="#b5">[5]</ref> with a 15-min time-out.best swap (with cj) or move (with empty space s). If both actions result in positive gain, and both are in non-congested regions, then we revert to wirelength-driven decisions. If ci is in a congested region and cj is not, then we can improve routability by moving it to s. If ci is not in a congested region, but ci is and has fewer pins than cj, we can potentially improve routability in subsequent moves if we decrease the number of routes that go through the congested region. Similarly, if both cells are in congested regions, then we only swap them if deg(cj) &lt; deg(ci). This ensures that the detailed placer does not harm routability.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 5 :</head><label>5</label><figDesc>). Each invocation of lookahead routing is marked with a circle. The second invocation of LAR and subsequent cell bloating visibly disrupt the quality of roughly legalized placements, with a smaller impact on quadratic placement. Routed wirelength (RtWL, ×10e6) and routing overflow (OF) on ISPD 2011 benchmarks. Routing was performed by coalesCgrip</figDesc><table><row><cell></cell><cell></cell><cell cols="2">Best in Contest</cell><cell></cell><cell></cell><cell cols="2">SimPLR with Ca-DP</cell><cell></cell></row><row><cell>BENCHMARK</cell><cell cols="8">coalesCgrip 12hr coalesCgrip 24hr coalesCgrip 12hr coalesCgrip 24hr</cell></row><row><cell></cell><cell>RtWL</cell><cell>OF</cell><cell>RtWL</cell><cell>OF</cell><cell>RtWL</cell><cell>OF</cell><cell>RtWL</cell><cell>OF</cell></row><row><cell>SUPERBLUE1</cell><cell>15.02</cell><cell>0</cell><cell>15.02</cell><cell>0</cell><cell>15.02</cell><cell>0</cell><cell>15.02</cell><cell>0</cell></row><row><cell>SUPERBLUE2</cell><cell>31.11</cell><cell>41408</cell><cell>31.20</cell><cell>16768</cell><cell>29.39</cell><cell>39132</cell><cell>29.52</cell><cell>9646</cell></row><row><cell>SUPERBLUE4</cell><cell>10.87</cell><cell>2466</cell><cell>10.88</cell><cell>1262</cell><cell>10.67</cell><cell>44</cell><cell>10.67</cell><cell>36</cell></row><row><cell>SUPERBLUE5</cell><cell>17.38</cell><cell>19112</cell><cell>17.49</cell><cell>10582</cell><cell>17.11</cell><cell>9510</cell><cell>17.18</cell><cell>4392</cell></row><row><cell>SUPERBLUE10</cell><cell>25.09</cell><cell>31320</cell><cell>25.16</cell><cell>10652</cell><cell>26.68</cell><cell>22268</cell><cell>26.73</cell><cell>11104</cell></row><row><cell>SUPERBLUE12</cell><cell>22.99</cell><cell>5130</cell><cell>23.02</cell><cell>594</cell><cell>23.00</cell><cell>3302</cell><cell>23.04</cell><cell>0</cell></row><row><cell>SUPERBLUE15</cell><cell>17.97</cell><cell>4448</cell><cell>17.98</cell><cell>2264</cell><cell>17.09</cell><cell>0</cell><cell>17.98</cell><cell>0</cell></row><row><cell>SUPERBLUE18</cell><cell>9.86</cell><cell>0</cell><cell>9.86</cell><cell>0</cell><cell>10.63</cell><cell>0</cell><cell>10.63</cell><cell>0</cell></row><row><cell>Average</cell><cell cols="3">1.00× 19.41× 1.00×</cell><cell>8.43×</cell><cell>1.00×</cell><cell>4.12×</cell><cell>1.00×</cell><cell>1.00×</cell></row><row><cell cols="2">Geometric mean 1.00×</cell><cell>9.00×</cell><cell>1.00×</cell><cell>3.09×</cell><cell>1.00×</cell><cell>2.99×</cell><cell>1.00×</cell><cell>1.00×</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>M.-C. Kim and J. Hu contributed equally to this work.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Half-Perimeter WireLength, defined using the net bounding box</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>Partitioning-based placers can adjust target density on a per region basis<ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b27">27]</ref>. In force-directed placers, this feature is more difficult to implement and seems unnecessary.978-1-4577-1400-9/11/$26.00 ©2011 IEEE</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>The wirelength gap between the upper-bound and lower-bound solutions is useful to formulate convergence criteria.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>A single cell can "swap" with an empty location.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>The placement solutions produced by SimPLR on ISPD 2011 benchmarks, as well as resulting routes, are available on demand.Given that SimPLR internally invokes a full-fledged router with a limited number of iterations (BFG-R) that produces a valid routing solution, better optimized results can be requested at the cost of greater runtime. Runtime can be improved by making LAR more incremental. This SimPLR framework can target specific nets and facilitates several further extensions, especially in timing optimization, where the placer's early and direct access to actual routes can improve the accuracy of delay estimation.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. We are grateful to Chris Chu and Natarajan Viswanathan for giving us access to FastPlace-DP.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">On Whitespace and Stability in Physical Synthesis</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">N</forename><surname>Adya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">G</forename><surname>Villarrubia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Integration</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="340" to="362" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">What Makes a Design Difficult to Route</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Alpert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Moffitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-J</forename><surname>Nam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tellez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ISPD</title>
		<imprint>
			<biblScope unit="page" from="7" to="12" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Handbook of Algorithms for VLSI Physical Design Automation</title>
		<editor>C. J. Alpert, D. P. Mehta, and S. S. Sapatnekar</editor>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An Effective Congestion Driven Placement Framework</title>
		<author>
			<persName><forename type="first">U</forename><surname>Brenner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rohe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ISPD</title>
		<imprint>
			<biblScope unit="page" from="6" to="11" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<ptr target="homepages.cae.wisc.edu/∼adavoodi/gr/cgrip.htm" />
		<title level="m">Tool for Routing Congestion Analysis</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On Wirelength Estimations for Row-based Placement</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Caldwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mantik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zelikovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCAD</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1265" to="1278" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">mPL6: Enhanced Multilevel Mixed-size Placement with Congestion Control</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Romesis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Shinnerl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Xie</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<publisher>Modern Circuit Placement</publisher>
			<biblScope unit="page" from="247" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">NTHU-Route 2.0: A Fast and Stable Global Router</title>
		<author>
			<persName><forename type="first">Y.-J</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-T</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-C</forename><surname>Wang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="338" to="343" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">GLADE: A Modern Global Router Considering Layer Objectives</title>
		<author>
			<persName><forename type="first">Y.-J</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-C</forename><surname>Wang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="319" to="323" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">RISA: Accurate and Efficient Placement Routability Modeling</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Cheng</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="650" to="695" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">IPR: An Integrated Placement and Routing Algorithm</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DAC</title>
		<imprint>
			<biblScope unit="page" from="59" to="62" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A New Congestion-driven Placement Algorithm Based on Cell Inflation</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">H</forename><surname>Kao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASP-DAC</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="723" to="728" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Multi-layer Global Routing Considering Via and Wire Capacities</title>
		<author>
			<persName><forename type="first">C.-H</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="350" to="355" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Completing High-quality Routes</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="35" to="41" />
		</imprint>
		<respStmt>
			<orgName>ISPD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Routability-driven Analytical Placement by Net Overlapping Removal for Large-scale Mixed-size Designs</title>
		<author>
			<persName><forename type="first">Z.-W</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B.-Y</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DAC</title>
		<imprint>
			<biblScope unit="page" from="167" to="172" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">RBI: Simultaneous Placement and Routing Optimization Technique</title>
		<author>
			<persName><forename type="first">D</forename><surname>Jariwala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lillis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCAD</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="127" to="141" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">VLSI Physical Design: From Graph Partitioning to Timing Closure</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lienig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Accurate Pseudo-constructive Wirelength and Congestion Estimation</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SLIP</title>
		<imprint>
			<biblScope unit="page" from="61" to="68" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">M.-C</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D.-J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
		<title level="m">SimPL: An Effective Placement Algorithm</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="649" to="656" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">An Enhanced Global Router with Consideration of General Layer Directives</title>
		<author>
			<persName><forename type="first">T.-H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-J</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-C</forename><surname>Wang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="53" to="60" />
		</imprint>
		<respStmt>
			<orgName>ISPD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Routability-driven Placement and White Space Allocation</title>
		<author>
			<persName><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-K</forename><surname>Koh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Madden</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="394" to="401" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Congestion Driven Incremental Placement Algorithm for Standard Cell Layout</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASP-DAC</title>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="723" to="728" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Multi-threaded Collision-aware Global Routing with Bounded-length Maze Routing</title>
		<author>
			<persName><forename type="first">W.-H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-C</forename><surname>Kao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-Y</forename><surname>Chao</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>DAC</publisher>
			<biblScope unit="page" from="200" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">An Efficient and Effective Detailed Placement Algorithm</title>
		<author>
			<persName><forename type="first">M</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Viswanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="48" to="55" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Congestion Driven Quadratic Placement</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Parakh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">B</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Sakallah</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="275" to="278" />
		</imprint>
		<respStmt>
			<orgName>DAC</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">CRISP: Congestion Reduction by Iterated Spreading during Placement</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Roy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="357" to="362" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Seeing the Forest and the Trees: Steiner Wirelength Optimization in Placement</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCAD</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="632" to="644" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Iterative Methods for Sparse Linear Systems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Saad</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<pubPlace>SIAM</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Perimeter-Degree: A Priori Metric for Directly Measuring and Homogenizing Interconnection Complexity in Multilevel Placement</title>
		<author>
			<persName><forename type="first">N</forename><surname>Selvakkumaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Parakh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SLIP</title>
		<imprint>
			<biblScope unit="page" from="53" to="59" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Fast and Accurate Routing Demand Estimation for Efficient Routability-driven Placement</title>
		<author>
			<persName><forename type="first">P</forename><surname>Spindler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Johannes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DATE</title>
		<imprint>
			<biblScope unit="page" from="1226" to="1231" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">FastPlace 3.0: A Fast Multilevel Quadratic Placement Algorithm with Placement Congestion Control</title>
		<author>
			<persName><forename type="first">N</forename><surname>Viswanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASP-DAC</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="135" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">On the Behaviour of Congestion Minimization during Placement</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="145" to="150" />
		</imprint>
		<respStmt>
			<orgName>ISPD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Model and Minimization of Routing Congestion</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASP-DAC</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="185" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Congestion Minimization during Placement</title>
		<author>
			<persName><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Wang</forename><forename type="middle">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCAD</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1140" to="1148" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Multicenter Congestion Estimation and Minimization During Placement</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Eguro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="147" to="152" />
		</imprint>
		<respStmt>
			<orgName>ISPD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Probabilistic Congestion Prediction</title>
		<author>
			<persName><forename type="first">J</forename><surname>Westra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bartels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Groeneveld</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="204" to="209" />
		</imprint>
		<respStmt>
			<orgName>ISPD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Is Probabilistic Congestion Estimation Worthwhile?</title>
		<author>
			<persName><forename type="first">J</forename><surname>Westra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Groeneveld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SLIP</title>
		<imprint>
			<biblScope unit="page" from="99" to="106" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">A Parallel Integer Programming Approach to Global Routing</title>
		<author>
			<persName><forename type="first">T.-H</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Davoodi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Linderoth</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="194" to="199" />
		</imprint>
		<respStmt>
			<orgName>DAC</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">FastRoute 4.0: Global Router with Efficient Via Minimization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASP-DAC</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="576" to="581" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Routability-driven White Space Allocation for Fixed-die Standard-cell Placement</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B.-K</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCAD</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="410" to="419" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Congestion Estimation During Top-down Placement</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kastner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCAD</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="72" to="80" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">CROP: Fast and Effective Congestion Refinement of Placement</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="344" to="350" />
		</imprint>
		<respStmt>
			<orgName>ICCAD</orgName>
		</respStmt>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
