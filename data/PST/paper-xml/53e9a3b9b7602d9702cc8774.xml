<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Control-Theoretic Dynamic Frequency and Voltage Scaling for Multimedia Workloads</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Zhijian</forename><surname>Lu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jason</forename><surname>Hein</surname></persName>
							<email>hein@virginia.edu</email>
						</author>
						<author>
							<persName><forename type="first">Marty</forename><surname>Humphrey</surname></persName>
							<email>humphrey@cs.virginia.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22904</postCode>
									<region>VA</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mircea</forename><surname>Stan</surname></persName>
							<email>mircea@virginia.edu</email>
						</author>
						<author>
							<persName><forename type="first">John</forename><surname>Lach</surname></persName>
							<email>jlach@virginia.edu</email>
						</author>
						<author>
							<persName><forename type="first">Kevin</forename><surname>Skadron</surname></persName>
							<email>skadron@cs.virginia.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22904</postCode>
									<region>VA</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Electrical and Computer Engineering</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Control-Theoretic Dynamic Frequency and Voltage Scaling for Multimedia Workloads</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">551FB7C207AF89DA29C8E200B4321653</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:13+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>design studies Measurement</term>
					<term>Design</term>
					<term>Performance Feedback control</term>
					<term>frequency/voltage scaling</term>
					<term>low energy</term>
					<term>power aware</term>
					<term>high performance</term>
					<term>control theoretic</term>
					<term>multimedia</term>
					<term>real-time</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper describes a formal feedback-control algorithm for dynamic voltage/frequency scaling (DVS) in a portable multimedia system to save power while maintaining a desired playback rate. Our algorithm is similar in complexity to the previously-proposed change-point detection algorithm <ref type="bibr" target="#b19">[19]</ref> but does a better job of maintaining stable throughput and is not dependent on the assumption of an exponential distribution of the frame decoding rate. For approximately the same energy savings as reported by <ref type="bibr" target="#b19">[19]</ref>, our controller is able to keep the average frame delay within 10% of the target more than 90% of the time, whereas the change-point detection algorithm kept the average frame delay with 10% of the target only 70% or less of the time executing the same workload.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Low power techniques in real-time (RT) embedded systems become more important as the performance expectations of these embedded devices continue to rise. RT embedded systems such as on-board satellite controls contain hard and soft RT deadlines and a strict limit on available battery power. A complicating factor for many applications is that tasks or service requests are often unpredictable, and current solutions for power aware computing cannot provide the guarantees necessary for RT. Over-provisioning is an appropriate solution for some systems but usually not for battery-operated systems where the battery has substantial cost or interferes with the desired form factor.</p><p>Closed-loop feedback control is an attractive way to attain soft-RT guarantees. Feedback control defines target metrics and error terms for the system being controlled, monitors the error, and continuously adapts the system to minimize the error. Feedback control can adapt to a wide range of behaviors and hence responds well to unanticipated workloads or behaviors. We use a simulated multimedia system to demonstrate the benefits of feedback-control. Our technique is motivated by the approach of Stankovic et al. <ref type="bibr" target="#b22">[22]</ref>, where a feedback control RT CPU-scheduling scheme is proposed; the design and performance evaluation is shown in <ref type="bibr" target="#b11">[11]</ref>. In our feedback-based system, the CPU operating frequency and voltage are scaled based on the current frame throughput.</p><p>Contributions. Following <ref type="bibr" target="#b19">[19]</ref>, this paper models an MPEG portable multimedia-playback system with the content received over a wireless network. These multimedia systems require soft RT guarantees on frame delay to maintain the throughput necessary for avoiding choppy playback. We develop a formal feedback-control system to hold the CPU at the minimum possible operating frequency while still continuously adapting to provide the desired throughput. We evaluate the energy savings of our system using an analytic model for a variety of synthetic workloads representing exponential, uniform, and normal distributions of frame-arrival and decoding rates, and also real workloads on a Compaq iPAQ using StrongArm SA-1100 processor. This paper extends our previous work presented at the 2002 Workshop on Self-Healing, Adaptive and Self-Managed systems (SHAMAN) <ref type="bibr" target="#b14">[14]</ref>.</p><p>The rest of the paper is organized as follows. Section 2 describes related work in this field. Section 3 discusses our control-theoretic system, and Section 4 shows our results on both actual and synthetic workloads. Finally, we summarize our work in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Circuit-level techniques have been a mainstay of power reduction for some years, but recently much research attention has focused on system-level techniques. The benefits of approaching power reduction at the system-level are typically synergistic with circuit-level techniques, and higher design abstraction levels have more direct knowledge about the workload and can control large portions of the computer system accordingly. Yet for RT systems, performance should still be guaranteed even when power reduction techniques are in place.</p><p>Since task scheduling in computing systems is a key lever for both performance and power, it is a natural target for research on power-aware computing. There are two well studied power reduction techniques that have impacts on system scheduling <ref type="bibr" target="#b8">[8]</ref>: DVS (dynamic voltage scaling) and DPM (dynamic power management). In DVS, different computational tasks are run at different voltages and clock frequencies while still providing an adequate level of performance. DPM aims to shut off system parts (inside or outside the CPU) that are not in use at any given time. Execution bandwidth throttling has also recently been proposed, in which the number of instructions fetched per cycle is reduced <ref type="bibr" target="#b17">[17]</ref> or the frequency of fetch operations is varied <ref type="bibr" target="#b1">[1,</ref><ref type="bibr" target="#b21">21]</ref>. Structure resizing for power reduction has also been considered.</p><p>In the realm of power savings for multimedia workloads, change point detection algorithm based on DVS is introduced in <ref type="bibr" target="#b19">[19]</ref>. This algorithm uses online statistical maximumlikelihood analysis to detect changes in aggregate behavior for a stream with an exponential distribution. They evaluate the algorithm using a system model that consists of an SA-1100 processor with an MP3 and MPEG workload. This work is similar to that of <ref type="bibr" target="#b16">[16]</ref>, which implements the workload of an H.263 video benchmark with frequency scaling on an SA-1100. The SA-1100 stalls execution when the clock frequency is adjusted; researchers noted a latency of 140 Âµs for each change in frequency setting. We use a similar simulation framework and workload to evaluate our controltheoretic scaling algorithm for both frequency and voltage scaling, the latter of which provides quadratic energy savings. Both frequency and voltage scaling are provided by most power-aware processors today. We explore both continuous and discrete DVS settings. When the number of discrete setting is large (e.g., 32 steps as described in <ref type="bibr" target="#b18">[18]</ref>), we find no discernible difference between the performance of continuous and discrete DVS settings.</p><p>Recently, a new technique for saving energy in multimedia applications using architectural adaptation and frequency scaling was introduced in <ref type="bibr">[7]</ref>. However, that technique uses profiling to predict energy per instruction and instructions per frame statistics. Architectural and frequency adaptations are then set to ensure frames meet their deadlines by adjusting the frequency to reduce slack time between frames. Our work features a real-time online technique using feedback control frequency scaling to provide energy savings.</p><p>The design of control systems is a mature field with a history dating back at least as far as the 1600s. Numerous textbooks exist that describe basic control principles, e.g. <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b5">5]</ref>. Control-theoretic approaches have been applied to a variety of computer system design aspects outside the computer architecture realm, including CPU scheduling <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b23">23]</ref>, web server quality-of-service management <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b13">13]</ref>, inter net congestion control <ref type="bibr" target="#b6">[6]</ref>, and data migration <ref type="bibr" target="#b10">[10]</ref>. At the circuit level, feedback control is used for voltage scaling <ref type="bibr" target="#b3">[3]</ref> and current canceling for leakage control <ref type="bibr" target="#b25">[25]</ref>, but neither technique uses control theory to derive stability or to prove properties of the resulting system. The only use of formal feedback control theory that we are aware of in computer ar-chitecture literature is our own prior work on temperature regulation <ref type="bibr" target="#b21">[21]</ref> and cache decay <ref type="bibr" target="#b24">[24]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">CONTROL SYSTEM DESIGN</head><p>In order to simplify our control system design, we model the multimedia decoding system as an M/M/1 queue, as suggested in <ref type="bibr" target="#b19">[19]</ref>. Thus, the following equation holds:</p><formula xml:id="formula_0">T = 1 Âµ -Î» (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>where T is the average delay for the frames, Âµ is the frame decoding rate and Î» is the frame arrival rate.</p><p>Our goal is to adjust the CPU frequency and voltage such that the user-specified delay (referred to as the controller set-point) will be satisfied with the minimum amount of energy and the controller will stabilize quickly to provide a fast response time to variations in delay.</p><p>The basic architecture of our control system is illustrated in Figure <ref type="figure" target="#fig_0">1</ref>. A generic control system architecture usually consists of an input set-point, a controller, a system or "physical plant" that is being controlled, and a feedback path. Our system includes the following components:</p><p>Input set-point: The desired average frame delay specified by the user.</p><p>Controller: An integral controller and its gain Ki. The output of the integral controller is the current (new) decision for the frequency scaling factor, which will go to the decoder system. At the beginning of the operation, we always let the frequency scaling factor equal unity, i.e, we run the decoder at the maximum speed.</p><p>We force this initial value by adding a constant "1" to the output of the controller. We use a simple integral controller in our system because it can guarantee that the final output of the system will be equal to the set point when the system is stable. The value of Ki will be discussed later.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Controlled system:</head><p>The multimedia frame decoder which accepts as its input the frequency scaling factor from the controller. A non-linear system model specified by Equation 1 is used to model the decoder and it will be linearized for controller analysis.</p><p>The actual frame arrival rate and decoding rate in the run time are unknown to the system and can change vary rapidly. We only assume that these values are less than 100 frames per second.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Feedback path:</head><p>Because what we actually measure from the system is the average frame delay under the previous frequency scaling decisions, we model this feedback signal with a delay unit.</p><p>The controlled system is non-linear, but it can be linearized using first order Taylor expansion about the desired decoding rate Âµ by the following linear equation:</p><formula xml:id="formula_2">T (k + 1) = T (k) -T 2 0 * (Âµ * r(k + 1) -Âµ * r(k)) (<label>2</label></formula><formula xml:id="formula_3">)</formula><p>where T0 is the user specified delay and r(k + 1) is the frequency factor (a value between 0 and 1) adjusted by our controller at time k + 1. For example, the decoder will run at its full speed when r is 1. This linear equation assumes that the controlled system works at operating points very</p><p>This delay unit models that the feedback signal is the measuring of the previous operation close to the set-point. As long as the stability of our control system is guaranteed, this assumption will hold. Note that this assumption is only needed for the control-theoretic analysis.</p><p>Using the system model shown in Figure <ref type="figure" target="#fig_0">1</ref> and substituting our linear model with the non-linear one, we can find the stability criteria for the whole system based on control theory:</p><formula xml:id="formula_4">-1 &lt; 1 -|Ki|T 2 0 Âµ &lt; 1 or |Ki| &lt; 2 T 2 0 Âµ</formula><p>where Ki is the gain of the integral controller. While a large value of Ki would make the system more responsive, the system would tend to be unstable. Given that in our system T0 is about 0.1 second and the frame decoding rate is less than 100 frames/sec, and considering the sign of the gain value, we let Ki = -2. To show that the system avoids unstable oscillation, we use Matlab to simulate the system shown in Figure <ref type="figure" target="#fig_0">1</ref> with a step input signal. The step response of the system is shown in Figure <ref type="figure" target="#fig_2">2</ref>.  As we can see from Figure <ref type="figure" target="#fig_2">2</ref>, the system output converges to the set-point very quickly (after about 5 samples(iterations)) We then make use of this fast-converging property in our system to satisfy the RT constraints.</p><p>Besides the basic control architecture shown in Figure <ref type="figure" target="#fig_0">1</ref>, we observe that the number of frames in the queue waiting to be decoded is a good indicator of future traffic. Thus, we feed the number of frames in the queue to a separate differential controller; the output of this controller will also be used to adjust the frequency scaling factor assigned to the decoder.</p><p>The feedback signal to our controller is the average delay over a certain number of previous frames (specified by our window size). Since Equation 1 holds true only for average values over a long time interval, larger window sizes can provide a higher-quality feedback signal (i.e., provide a better estimate of the actual average frame delay in the system). However, a larger window may increase the controller's reaction time to a changing situation (i.e., a different arrival or decoding rate). By simulation, we empirically determined that an average window size of 70 frames provides a good design trade-off. Our sample period is five frames (i.e., the controller will determine a new frequency factor every 5 frames), and frames in the same period will be decoded with the same frequency.</p><p>In order to make the best determination of the working frequency for the next sample period, we not only use the actual delay statistics from the previous frames in the window size, but we also use them as training samples in our control loop. At each sample, the controller will produce a new frequency factor based on the difference between the setpoint and the actual average delay from the previous frames. We then back-calculate for each frame in the entire window how long that frame would have taken to decode had it been processed using the freshly-calculated frequency/voltage setting. The new average delay (a virtual value) is then fed to the controller again in an iterative relaxation process. Due to the fact that our controller converges quickly, it can arrive at a very good decision after only a few iterations in our implementation. There are two reasons for this approach. First, we believe that the frames in the next sample period will have very similar statistics to the previous frames in the window. Second, the controller can apply better de-cisions directly on the future frames, thus providing very rapid response to changes in the environment. This "virtual training" scheme makes the controller fast; otherwise, it would take many sampling periods for the moving average to reflect the new CPU frequency.</p><p>In order to keep the overall average frame delay as close to the user-specified set-point as possible, we use a counter to accumulate the difference between individual frame delay times and the set-point. This provides a global picture of how well the controller is performing and allows us to make the set-point adaptive. At each sampling point, if the controller finds that the previous average delay is much higher than the set-point, it lowers the actual set-point used for the next period to obtain better performance. On the other hand, if the previous average delay is in fact lower than the set-point, the controller increases the actual set-point to save more energy. This adaptive set-point scheme provides the best way to meet the user-defined requirements. This mechanism is equivalent to adding another control loop outside the whole system shown in Figure <ref type="figure" target="#fig_0">1</ref>.</p><p>Though it seems that our scheme may consume a large amount of computation time and energy, the computation required for our controller is less than that of the changepoint detection approach proposed in <ref type="bibr" target="#b19">[19]</ref>. We compare the amount of computation needed for both algorithms in the average case. In the change-point detection scheme, the algorithm is executed for every new frame to be decoded. This algorithm assumes that there is a set of predefined arrival/decoding rates. For example, there may be 10 possible arrival/decoding rates. For each frame, the algorithm checks the previous 100 frames to identify the possible change point (i.e., the frame among the last 100 from which the arrival/decoding rates appears to have changed) by comparing the statistical maximum likelihood with a certain threshold. The amount of computation that this algorithm requires for each frame is about (including both arrival and decoding rate detection): 2*10*10*<ref type="foot" target="#foot_0">1</ref> 2 *(2 adds + 3 multiplications + 1 logarithms) = 200 adds + 300 multiplications + 100 logarithms</p><p>In our control-theoretic scheme, the bulk of the computation is for the virtual training. Since our algorithm is invoked every 5 frames and (for our initial implementation) we use 5 iterations for virtual training, we have an average of one iteration per frame. The computation needed to calculate the average delay for the previous 70 frames when a new frequency is virtually applied is: 70*(2 multiplications + 5 adds) = 350 adds + 140 multiplications Our later simulations show that the number of iterations can be even further reduced while maintaining performance.</p><p>Once the new frequency scaling factor is obtained, we scale the system voltage to the minimum that is required to maintain the new working frequency. The relation function between the working frequency and the respective minimum system voltage can be measured in advance for any system under study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SIMULATION EXPERIMENTS AND RE-SULTS</head><p>We evaluate the performance of our control-theoretic approach on both actual and synthetic workloads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Evaluation Using Actual Workloads</head><p>We implement our control-theoretic system on a Compaq iPAQ running an SA-1110 StrongARM processor. The iPAQ runs the Windows CE operating system. Running the control based model requires the scaling of core processor frequency, which is discussed in <ref type="bibr" target="#b2">[2]</ref>. With the direct hardware access techniques discussed in <ref type="bibr" target="#b2">[2]</ref>, frequency scaling is accomplished by writing the desired frequency index to the Phase Locked Loop Configuration Register (PPCR). This allows for on the fly frequency scaling during program execution.</p><p>An open-source MPEG codec is provided by the MPEG Software Simulation Group (MSSS). Four MPEG-1 video files were used as input to the MPEG decoder to produce frame decoding rates for an actual workload. The four MPEG-1 videos (three 900 frame video files and one 1800 frame video file) yield frame rates of less than 1 frame/sec. This is much lower than typical MPEG frame rates of between 15 and 20 frames/sec. However, we expect lower frame rates from a device running Windows CE on a slow processor with a maximum speed of 221.2 MHz as well as a slower bus speed. Slow decoding rates are not expected from commercial MPEG players such as Windows Media Player, however commercialized MPEG players are highly optimized and source code is proprietary information not available to the public. Such commercial MPEG players provide a much higher and predictable frame rate. Possible future work is to obtain source code for a commercial multimedia player to obtain additional MPEG decoding rate trace data.</p><p>Using actual MPEG-1 trace files containing actual decoding rates, we tested our control-theoretic algorithm on the iPAQ device. Evaluating the efficiency of our control algorithm showed a total overhead of approximately 0.371 milliseconds per frame. Since this is less than 1 percent of a typical decoding time, which is normally around 40 milliseconds, we find that our control-theoretic approach is very efficient when running on an actual system.</p><p>Implementing our control-theoretic algorithm on such a system shows that our model is robust and capable of running on a handheld device with little overhead. Dynamically scaling frequency on a handheld device allows the portable system to have extended battery life while maintaining performance. A comprehensive evaluation of the real-world battery savings and quality of service characteristics on the iPAQ as a result of these approaches is the subject of future work; however, preliminary results indicate a strong correlation to the simulation results shown in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Evaluation Using Synthetic Workloads</head><p>For experiments on synthetic workloads, we used Matlab to generate traces matching the desired distributions (exponential, Gaussian, etc.) We have 1000 frames in each simulation run, and the statistics of the frames (i.e. arrival rate and decoding rate) may or may not change after every 250 frames.</p><p>Figure <ref type="figure" target="#fig_4">3</ref> shows the frequency adjustment for one simulation run. In this simulation, all frames have the same decoding rate-70 frames/second 1 . The arrival rate is reduced from 45 frames/second to 5 frames/second after the 250th frame. From the 750th frame, the arrival rate changes  sharply to 50 frames/second. The frequency scaling curves in Figure <ref type="figure" target="#fig_4">3</ref> show that both the change-point detection algorithm and our control-theoretic approach can adapt to the workload changes very quickly.</p><p>Mattavelli et al. <ref type="bibr" target="#b15">[15]</ref> have shown that multimedia framedecoding rates cannot be modeled by any simple distribution. In order to further evaluate the performance of the two approaches, we use different random distributions to create our synthetic workloads and divide them into 6 groups:</p><p>1. Both inter-arrival times and decoding times are exponentially distributed with high CPU utilization.</p><p>2. Both inter-arrival times and decoding times are exponentially distributed with low CPU utilization.</p><p>3. Both inter-arrival times and decoding times are exponentially distributed with hybrid (mixture of high and low) CPU utilization.</p><p>4. Inter-arrival times are exponentially distributed, and decoding times conform to Gaussian distribution, with hybrid CPU utilization.</p><p>5. Inter-arrival times are exponentially distributed, and decoding times are uniformly distributed, with hybrid CPU utilization.</p><p>6. Inter-arrival times are uniformly distributed, and decoding times conform to Gaussian distribution, with hybrid CPU utilization.</p><p>High CPU utilization means the CPU will mostly operate at a speed close to its fastest speed. On the other hand, low CPU utilization means the CPU need only operate at a slow speed in order to satisfy the delay requirement. For example, in Figure <ref type="figure" target="#fig_4">3</ref>, the last 250 frames impose a high utilization on the CPU of the decoder, while the frames between 250th and 750th impose only a light workload for the CPU. Each workload group is composed of 100 different simulation runs of 1000 frames. We measure, for each simulation run, the average delay, total energy, and frame-delay variance. We do not make measurements of the energy on the actual system due to the difficulties and inaccuracies of doing so on the iPAQ. Instead, our work adopts the approximate energy calculation proposed in <ref type="bibr" target="#b20">[20]</ref>, and it is used throughout our simulations. This approximate energy calculation provides the power consumption as follows:</p><formula xml:id="formula_5">E(r) = CV 2 0 Tsf ref Vt V0 + r 2 + Ã r Vt V0 + r 2 2 2<label>(3)</label></formula><p>where C is the average switched capacitance per cycle, Ts is the sample period of a DSP system, f ref is the operating frequency at V ref , r is the normalized processing rate (i.e., the frequency scaling factor in this paper 2 ), Vt is the threshold voltage and V0 = (V ref -Vt) 2 . For a DVS system, C, Ts, Vt and V0 are unchanged, and we can obtain the following reduced quadratic power consumption model <ref type="bibr" target="#b20">[20]</ref>:</p><formula xml:id="formula_6">E(r) = r 2<label>(4)</label></formula><p>At the same time, for each workload group, we calculate how many simulation runs will lead to an average frame delay within Â±10% of the user specified delay (delay set-point). Results for each simulation run from 3 workload groups are presented in Figure <ref type="figure" target="#fig_6">4</ref>, and similar results are obtained from the other 3 workload groups. The statistics (average energy consumption and average delay standard deviation) for all 6 workload groups are summarized in Tables <ref type="table" target="#tab_0">1</ref> and<ref type="table" target="#tab_1">2</ref>.</p><p>It is clearly shown in all six cases that our control-theoretic approach outperforms maximum likelihood detection in quality of service while providing comparable energy savings. With a minimal relative variance, our approach is able to provide smooth transitions to yield very consistent frame delays. Consequently, the average frame delay for the controltheoretic approach oscillates around the set-point of 0.1 seconds with minimal deviation.</p><p>Tables <ref type="table" target="#tab_0">1</ref> and<ref type="table" target="#tab_1">2</ref> show that our control-theoretic approach can guarantee the user specified set-point with very high probability. Energy consumption increases only slightly compared to the change-point detection algorithm. In contrast, the change-point algorithm tracks the user-specified frame delay rather poorly. Furthermore, notice that although our control system is designed with an M/M/1 queuing model as the system model, and that assumption is only required for control-theoretic analysis, so it still performs well in the cases where the decoding time is Gaussian or uniformly distributed. This demonstrates the robustness of the formal feedback-control approach.</p><p>Tables <ref type="table" target="#tab_2">3</ref> and<ref type="table" target="#tab_3">4</ref> illustrate examples of varying numbers of iteration cycles for the "virtual training" scheme. In the M/M/1 model and in the exponential/uniform model, 2 We assume a linear relationship between the processing rate and the frequency scaling factor in our simulation, though it is not exactly linear in the real physical system   the average frame delay remains steady with little variation. The number of iterations ranges from 1 to 10. Therefore, the number of iterations in the "virtual training" backcalculation does not affect frame delay, and multiple iterations are used to achieve a responsive controller.</p><p>Frequency scaling is done in a continuous fashion, though we have briefly explored the method of quantized dynamic frequency scaling described in <ref type="bibr" target="#b18">[18]</ref>. Frequency settings are linearly subdivided into 32 discrete levels in order to decrease the number of frequency transitions needed. We found that quantizing frequency scaling factors into discrete levels has a negligible effect on performance since frequency transition time is small compared to frame decoding time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS AND FUTURE WORK</head><p>In this paper, we describe a control-theoretic dynamic frequency/voltage scaling scheme for a simulated multimedia portable device. Our control design uses virtual training and an adaptive set-point to provide fast response and stable multimedia throughput, regardless of workload behavior/distribution. This system provides comparable energy savings to the change-point detection technique <ref type="bibr" target="#b19">[19]</ref> but dra-matically improves stability in average frame delay. It is also not dependent on the assumption of M/M/1 queuing behavior.</p><p>Overall, we have shown that formal feedback control is a robust and responsive way to control DVS settings for realtime response. The next step in this work is to fully integrate our controller into a QoS framework, using variance information to place the set-point so as to minimize jitter. More broadly, future work consists of the exploration of other applications of feedback control in power-aware computing.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Basic architecture of our control system. All of the functional blocks are shown with the Z transforms of their respective transfer functions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2:Step response of the system shown in Figure1.Although we use the example frame arrival and decoding rates shown in Figure1, other rates yield similar results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Frequency scaling curves for both algorithms in one simulation run.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Performance comparison of the two approaches in terms of average delay, energy consumption, and delay variance for all simulation runs in three workload groups (left column: M/M/1 with hybrid CPU utilization; middle column: Exponentially distributed inter-arrival time and Gaussian distributed decoding time with hybrid CPU utilization; right column: Uniformly distributed inter-arrival time and Gaussian distributed decoding time with hybrid CPU utilization). The control-theoretic approach provides better timing guarantees with comparable energy savings. Similar results are obtained for other workloads including uniformly distributed decoding times.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 : Performance summary for the change-point detection approach [15]. The energy column gives the energy consumed relative to no frequency/voltage scaling.</head><label>1</label><figDesc></figDesc><table><row><cell>Workload groups</cell><cell>Ratio of sample runs near set-point (+/-10%)</cell><cell>Average energy over all runs in the same group (ratio)</cell><cell>Average standard deviation over all runs in the same group (sec/frame)</cell></row><row><cell>Group 1</cell><cell>0.40</cell><cell>0.68</cell><cell>0.12</cell></row><row><cell>Group 2</cell><cell>0.71</cell><cell>0.23</cell><cell>0.11</cell></row><row><cell>Group 3</cell><cell>0.41</cell><cell>0.48</cell><cell>0.13</cell></row><row><cell>Group 4</cell><cell>0.38</cell><cell>0.47</cell><cell>0.11</cell></row><row><cell>Group 5</cell><cell>0.35</cell><cell>0.43</cell><cell>0.08</cell></row><row><cell>Group 6</cell><cell>0.04</cell><cell>0.50</cell><cell>0.08</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 : Performance summary for our control-theoretic approach.</head><label>2</label><figDesc></figDesc><table><row><cell>Iteration num-</cell><cell>Average Frame De-</cell><cell>Frame Delay Stan-</cell></row><row><cell>ber</cell><cell>lay</cell><cell>dard Deviation</cell></row><row><cell>1</cell><cell>0.099</cell><cell>0.100</cell></row><row><cell>2</cell><cell>0.102</cell><cell>0.099</cell></row><row><cell>3</cell><cell>0.102</cell><cell>0.093</cell></row><row><cell>5</cell><cell>0.102</cell><cell>0.092</cell></row><row><cell>8</cell><cell>0.102</cell><cell>0.095</cell></row><row><cell>10</cell><cell>0.103</cell><cell>0.097</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 : Impact of number of iterations of "virtual training" for a trace of M/M/1 Model with average delay set point = 0.1 sec.</head><label>3</label><figDesc></figDesc><table><row><cell>Iteration num-</cell><cell>Average Frame De-</cell><cell>Frame Delay Stan-</cell></row><row><cell>ber</cell><cell>lay</cell><cell>dard Deviation</cell></row><row><cell>1</cell><cell>0.105</cell><cell>0.102</cell></row><row><cell>2</cell><cell>0.107</cell><cell>0.110</cell></row><row><cell>3</cell><cell>0.11</cell><cell>0.110</cell></row><row><cell>5</cell><cell>0.107</cell><cell>0.106</cell></row><row><cell>8</cell><cell>0.098</cell><cell>0.094</cell></row><row><cell>10</cell><cell>0.103</cell><cell>0.106</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 : Impact of number of iterations of "virtual training" for a trace of exponentially distributed inter- arrival times and uniformly distributed decoding times with average delay set point = 0.1 sec.</head><label>4</label><figDesc></figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>High decoding rates and arrival rates are used in this experiment to show the adaptive nature of the two approaches.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ACKNOWLEDGMENTS</head><p>This work is supported in part by the National Science Foundation under grant Nos. CCR-0105626, CCR-0133634, and a grant from Intel MRL. We would also like to thank T. Simunic, J. Pouwelse, and the anonymous reviewers for their helpful comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Dynamic thermal management for high-performance microprocessors</title>
		<author>
			<persName><forename type="first">D</forename><surname>Brooks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Martonosi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventh International Symposium on High-Performance Computer Architecture</title>
		<meeting>the Seventh International Symposium on High-Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2001-01">January 2001</date>
			<biblScope unit="page" from="171" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">I</forename><surname>Castillo</surname></persName>
		</author>
		<ptr target="http://www.columns.pocketnow.com" />
		<title level="m">Introduction to Direct Hardware Access on Pocket PC</title>
		<imprint>
			<date type="published" when="2001-09">September 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An adaptive on-chip voltage regulation technique for low-power applications</title>
		<author>
			<persName><forename type="first">N</forename><surname>Dragone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">R</forename><surname>Carley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2000 International Symposium on Low Power Electronics and Design</title>
		<meeting>the 2000 International Symposium on Low Power Electronics and Design</meeting>
		<imprint>
			<date type="published" when="2000-07">July 2000</date>
			<biblScope unit="page" from="20" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Feedback Control of Dynamic Systems</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">F</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Emami-Naeini</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
	<note>third edition</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Digital Control of Dynamic Systems</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">F</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Workman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
	<note>third edition</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A control theoretic analysis of RED</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">V</forename><surname>Hollot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2001-04">April 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Saving energy with architectural and frequency adaptations for multimedia applications</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V</forename><surname>Adve</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 International Symposium on Microarchitecture</title>
		<meeting>the 2001 International Symposium on Microarchitecture</meeting>
		<imprint>
			<date type="published" when="2001-12">December 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Low power system scheduling and synthesis</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Jha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Int. Conf. on Computer-Aided Design</title>
		<imprint>
			<date type="published" when="2001-11">November 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A feedback control approach for guaranteeing relative delays in web servers</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Abdelzaher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Son</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Real-Time Technology and Applications Symposium</title>
		<meeting>the IEEE Real-Time Technology and Applications Symposium</meeting>
		<imprint>
			<date type="published" when="2001-06">June 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Aqueduct: Online data migration with performance guarantees</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Alvarez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wilkes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Conference on File and Storage Technologies</title>
		<meeting>the USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2002-01">January 2002</date>
			<biblScope unit="page" from="219" to="230" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Design and evaluation of a feedback control edf scheduling algorithm</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Son</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th IEEE Real-Time Systems Symposium</title>
		<meeting>the 20th IEEE Real-Time Systems Symposium</meeting>
		<imprint>
			<date type="published" when="1999-12">December 1999</date>
			<biblScope unit="page" from="56" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Feedback control real-time scheduling: Framework, modeling, and algorithms. Real</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Son</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Time Systems Journal</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="85" to="126" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Differentiated caching services: a control-theoretical approach</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Saxena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Abdelzaher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Distributed Computing Systems</title>
		<meeting>the International Conference on Distributed Computing Systems</meeting>
		<imprint>
			<date type="published" when="2001-04">April 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Control-theoretic dynamic frequency and voltage scaling</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Humphrey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Stan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Skadron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 Workshop on Self-Healing, Adaptive and Self-Managed systems (SHAMAN&apos;02)</title>
		<meeting>the 2002 Workshop on Self-Healing, Adaptive and Self-Managed systems (SHAMAN&apos;02)</meeting>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Implementing real-time video decoding on multimedia processors by complexity prediction techniques</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mattavelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Brunetton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Consumer Electronics</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="760" to="767" />
			<date type="published" when="1998-08">August 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Dynamic voltage scaling on a low-power microprocessor</title>
		<author>
			<persName><forename type="first">J</forename><surname>Pouwelse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Langendoen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sips</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Mobile Computing and Networking</title>
		<meeting>the Conference on Mobile Computing and Networking</meeting>
		<imprint>
			<date type="published" when="2001-07">July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Thermal management system for high-performance powerPC microprocessors</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sanchez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of COMPCON&apos;97</title>
		<meeting>COMPCON&apos;97</meeting>
		<imprint>
			<date type="published" when="1997-02">February 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Energy-efficient processor design using multiple clock domains with dynamic voltage and frequency scaling</title>
		<author>
			<persName><forename type="first">G</forename><surname>Semeraro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings in the 2002 International Symposium on High-Performance Computer Architecture</title>
		<meeting>in the 2002 International Symposium on High-Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2002-02">February 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Dynamic voltage scaling for portable systems</title>
		<author>
			<persName><forename type="first">T</forename><surname>Simunic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Benini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Acquaviva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Glynn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Micheli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Design Automation Conference</title>
		<meeting>the Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="2001-06">June 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Energy efficient real-time scheduling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Chandrakasan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Computer Aided Design (ICCAD)</title>
		<meeting>the International Conference on Computer Aided Design (ICCAD)</meeting>
		<imprint>
			<date type="published" when="2001-11">November 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Control-theoretic techniques and thermal-RC modeling for accurate and localized dynamic thermal management</title>
		<author>
			<persName><forename type="first">K</forename><surname>Skadron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Abdelzaher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Stan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighth International Symposium on High-Performance Computer Architecture</title>
		<meeting>the Eighth International Symposium on High-Performance Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2002-02">February 2002</date>
			<biblScope unit="page" from="17" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The case for feedback control real-time scheduling</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Son</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Euromicro Conference on Real-Time</title>
		<meeting>the IEEE Euromicro Conference on Real-Time</meeting>
		<imprint>
			<date type="published" when="1998-06">June 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A feedback-driven proportion allocator for real-rate scheduling</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Steere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gruenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mcnamee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Pu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Walpole</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third Symposium on Operating System Design and Implementation</title>
		<meeting>the Third Symposium on Operating System Design and Implementation</meeting>
		<imprint>
			<date type="published" when="1999-02">February 1999</date>
			<biblScope unit="page" from="145" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Adaptive cache decay using formal feedback control</title>
		<author>
			<persName><forename type="first">S</forename><surname>Velusamy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sankaranarayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Parikh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Abdelzaher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Skadron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 Workshop on Memory Performance Issues</title>
		<meeting>the 2002 Workshop on Memory Performance Issues</meeting>
		<imprint>
			<date type="published" when="2002-05">May 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Leakage current cancellation technique for low power switched-capacitor circuits</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S Y</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hossain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Walker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 International Symposium on Low Power Electronics and Design</title>
		<meeting>the 2001 International Symposium on Low Power Electronics and Design</meeting>
		<imprint>
			<date type="published" when="2001-08">August 2001</date>
			<biblScope unit="page" from="310" to="315" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
