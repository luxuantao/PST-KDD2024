<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jinwei</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zhixiong</forename><surname>Di</surname></persName>
							<email>dizhixiong2@126.com</email>
						</author>
						<author>
							<persName><forename type="first">Jiangyi</forename><surname>Shi</surname></persName>
							<email>jyshi@mail.xidian.edu.cn</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">School of Information Science and Technology</orgName>
								<orgName type="institution">Southwest Jiaotong University</orgName>
								<address>
									<postCode>611756</postCode>
									<settlement>Chengdu</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">National Key Discipline Laboratory of Wide Band-Gap Semiconductor</orgName>
								<orgName type="institution">Xidian University</orgName>
								<address>
									<postCode>710071</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">School of Microelectronics</orgName>
								<orgName type="institution">Xidian University</orgName>
								<address>
									<postCode>710071</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">School of Information Science and Technology</orgName>
								<orgName type="institution">Southwest Jiaotong University</orgName>
								<address>
									<postCode>611756</postCode>
									<settlement>Chengdu, Sichuan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">Tsinghua University</orgName>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TCAD.2021.3137007</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>NBLG: A Robust Legalizer for Mixed-Cell-Height Modern Design</p><p>Jinwei Chen , Zhixiong Di , Member, IEEE, Jiangyi Shi , Quanyuan Feng , Senior Member, IEEE, and Qiang Wu</p><p>Abstract-With the increasing complexity of modern design, mixed-cell-height designs have become more popular, which makes the legalization problem more challenging. In this article, a robust negotiation-based legalizer (NBLG) is proposed to reduce average displacement and maximum displacement for mixed-cell-height circuits with considering the fence region and technology constraints. By dissecting the main components of the negotiation-based method, we divide the placement grid in terms of placement sites and reformulate the legalization problem as a resource allocation task. We then allow all movable cells to gradually remove overlaps in a surrounding window with two individual techniques: 1) isolation point and 2) adaptive penalty function. We also adopt a deterministic multithreading technique to accelerate the convergence of our algorithm. Experimental results show that our legalizer achieved the minimal average displacement and maximum displacement in a reasonable runtime compared with state-of-the-art methods.</p><p>Index Terms-Electronic design automation, legalization, physical design, placement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>A S THE feature sizes of semiconductor process technol- ogy nodes further scale down and design complexity continues to increase, modern circuits often contain millions of standard cells with different row heights. Single-row-height cells have small areas and power costs but lack drive capabilities. Multirow height cells have more pin accessibility and routability with the greater area and power consumption. Hence, complex standard cells are always designed with a mixed-cell height to achieve better performance.</p><p>The mixed-cell-height standard cell legalization problem has become more challenging because of complicated design rules and design utilization at 14-nm and smaller technology nodes. Legalization is a necessary part of the analytical placement, which aims to remove all of the overlaps among cells.</p><p>To preserve the quality of the given placement provided by global placement or timing optimization steps, the legalizer should minimize both the average displacement and maximum displacement <ref type="bibr" target="#b0">[1]</ref>.</p><p>In a mixed-cell-height design, the legalization of a multirow height cell in one row requires the consideration of the effects on other rows. In other words, moving a multirowheight cell may cause extra overlaps in other rows. The cell must be located at the correct power rail and aligned with the placement sites on the rows. Further, to follow the prior design guidelines and reduce detailed routing violations, more complicated design rules and constraints, such as fence region constraints and technology constraints, need to be addressed, which poses a huge challenge to the legalization algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Related Works</head><p>In the traditional single-cell-height standard cell legalization problem, Tetris <ref type="bibr" target="#b1">[2]</ref> and Abacus <ref type="bibr" target="#b2">[3]</ref> are the two most popular methods. Abacus preserves the relative order of the cells and legalizes all cells in a row by adopting dynamic programming to achieve excellent solutions with minimum cell displacements. However, they cannot be modified directly to handle multirow-height cells effectively, as moving a multirow-height cell may cause extra overlaps in other rows.</p><p>For mixed-cell-height standard cell design, Wang et al. <ref type="bibr" target="#b3">[4]</ref> theoretically analyzed the behaviors of Abacus, remedied Abacus's insufficiencies, and extended its advantages to solve mixed-cell-height problems. Chow et al. <ref type="bibr" target="#b4">[5]</ref> proposed a heuristic method to solve mixed-cell-height legalization problems. After all of the cells had been located to the nearest sitealigned and power-rail-matched position, a multirow local legalization (MLL) algorithm was applied to evaluate all of the insertion points and the cells were relocated into the target point. However, the quality of the solution was significantly affected by the insertion order, and the solution was limited in a local window. Inspired by <ref type="bibr" target="#b4">[5]</ref>, Li et al. <ref type="bibr" target="#b5">[6]</ref> proposed a multirow global legalization (MGL) method to deal with fence region constraints and routability optimization. Different from <ref type="bibr" target="#b4">[5]</ref>, the MGL method calculates the displacement curves of both the legalized cells and the target cell, which improved the insertion results of the cells, and two flow-based techniques were adopted to further reduce the displacement.</p><p>Several works <ref type="bibr" target="#b6">[7]</ref>- <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b22">[23]</ref> formulated the legalization problem as a network flow model to remove overlaps among the cells while minimizing the cell displacement, and Darav et al. <ref type="bibr" target="#b8">[9]</ref> set a precomputed maximum movement θ as a hard constraint to prune the candidate path with flow greater than θ .</p><p>Hung et al. <ref type="bibr" target="#b9">[10]</ref> proposed an integer linear programming (ILP)-based method to spread cells among bins to solve the mixed-cell-height legalization problem and achieved highquality solutions. However, the method requires considerable time compared with other state-of-the-art approaches. Four state-of-the-art methods <ref type="bibr" target="#b10">[11]</ref>- <ref type="bibr" target="#b13">[14]</ref> formulate the legalization problem as a quadratic program and reformulate it into a linear complementary problem (LCP), after which the problem is efficiently solved using a modulus-based matrix splitting iteration method (MMSIM). Li et al. <ref type="bibr" target="#b12">[13]</ref> considered both the average and the maximum cell movement, and the objective function and constraints were analyzed and remodeled to allow cells to move in both the horizontal and vertical directions. However, the vertical movement was limited to adjacent rows for each cell. Chen et al. <ref type="bibr" target="#b13">[14]</ref> developed a robust MMSIM (RMMSIM), explored the sparse characteristics of a circuit, accelerated the convergence of the algorithm, and achieved excellent solution quality.</p><p>There is still room for improvement in the related works on mixed-cell-height legalization.</p><p>1) Although heuristic methods (such as <ref type="bibr" target="#b4">[5]</ref>) can quickly solve the legalization problem and easily deal with multiobjective constraints, the solution quality may be limited because the available free space is usually restricted to a local region and is significantly affected by the processing order of the cells or clusters.</p><p>2) The legalization problem can be modeled as networkflow tasks, which can be solved with mature solutions <ref type="bibr" target="#b5">[6]</ref>- <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b22">[23]</ref>. However, the flow-based method always requires a well-set window to reduce the size of the problem, which may lead to a decline in the solution quality. 3) Several studies <ref type="bibr" target="#b10">[11]</ref>- <ref type="bibr" target="#b13">[14]</ref> reformulated the legalization problem as an LCP and adopted the MMSIM to solve the LCP problem, thereby developing a near-optimal solution. However, the method limits the vertical movement, that is, the quality of the solution to some extent depends on the row assignment task of the cells. Furthermore, the site-alignment task in post-processing <ref type="bibr" target="#b13">[14]</ref> will cause some cells to be illegal in the specific benchmarks, which may slightly affect the quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Contributions</head><p>This article proposed a robust negotiation-based legalizer (NBLG) to reduce the average displacement and maximum displacement in mixed-cell-height circuits with considering the fence region and technology constraints, which has strong adaptability to legalization constraints and can achieve high-quality solutions for mixed-cell-height circuits. The contributions are summarized as follows.</p><p>1) By dissecting the main components of the negotiationbased method, we divide the placement grid in terms of placement sites, reformulate the legalization problem as a resource allocation task, and then use the negotiationbased method to efficiently solve large-scale resource allocation tasks. 2) In the negotiation process, the isolation point and adaptive penalty function are adopted to accelerate the algorithm and reduce the displacement. Besides, we limit each cell's searchable space to the current surrounding window rather than a fixed space, such that the movement of cells can be accumulated to walk out of the local window. 3) A multithreading technique is adopted to complete the load balancing and accelerate the convergence of the negotiation-based method. Compared with the state-of-the-art legalizers, experimental results showed that our method achieved the minimal average displacement and maximum displacement. Our method provides a general research direction for obtaining the approximate solutions for large-scale problems that can be represented as resource allocation tasks.</p><p>The remainder of this article is organized as follows. Section II provides the introduction to the legalization problem and the negotiation-based method. Section III dissects the main components of the negotiation-based method and reformulates the legalization problem as a resource allocation task. Section IV gives the overview of the algorithm flow and the details of each component. Section V shows the experimental results, and we provide conclusions in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PRELIMINARIES</head><p>In this section, we introduce the mixed-cell-height legalization problem and provide a short description of the negotiation-based method for routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Mixed-Cell-Height Legalization Problem</head><p>A global placement result is considered with n mixed-cellheight standard cells C = {c 1 , c 2 , . . . , c n }. The cells have initial bottom-left coordinates (x i , y i ), heights h i , and widths w i . Each cell has a boundary power rail type of VSS or VDD. In this article, the mixed-cell-height standard-cell legalization problem aims at placing each cell in its best position (x i , y i ), such that the average and maximum cell displacement are minimized</p><formula xml:id="formula_0">δ i = x i − x i + y i − y i (1) Avg. Disp. = n i=1 δ i n (2) Max. Disp. = n max i=1 x i − x i + y i − y i . (<label>3</label></formula><formula xml:id="formula_1">)</formula><p>Besides, the placement must satisfy Power/Ground (P/G) and site alignment constraints. P/G alignment constraints are due to the popularity of mixed-cell-height design <ref type="bibr" target="#b11">[12]</ref>. For cells whose height is an odd multiple of the row height, the  P/G alignment target can be achieved directly or by vertical cell flipping. For even-row-height cells, the bottom and top boundary must be aligned on one rail type (e.g., power-rail or ground-rail). In other words, if an even-row-height cell has been aligned in a correct row, then it can only move by an even multiple of the row height in the vertical direction. As shown in Fig. <ref type="figure" target="#fig_0">1</ref>, the odd-row-height cells A and C can be placed in any row directly or by flipping the cell vertically, and even-row-height cells B and D can only move by an even multiple of the row height. For site alignment, all standard cells must be placed in site locations.</p><p>Fence region constraints are specified to guide automatic place-and-route tools toward improved performance, power consumption, and/or manufacturability in various ways, and cells assigned to a fence region must be placed inside its boundary, and cells not assigned to it must be placed outside that boundary <ref type="bibr" target="#b14">[15]</ref>. Modern designs sometimes contain multiple fence regions with a variety of shapes, and a fence region is usually composed of multiple spatially joint or disjoint rectangular subregions, thus posing some challenges to the legalization. Fig. <ref type="figure" target="#fig_1">2</ref> shows the fence region constraints on the benchmark "pci_bridge32_a_md1" with four fence regions in different colors <ref type="bibr" target="#b0">[1]</ref>, where the gray regions denote the fixed cells, and only one fence region consists of a rectangular region.</p><p>The technology constraints, including pin short/pin access and edge spacing, need to be considered to achieve better routability, and these constraints are harder to be satisfied in mixed-cell height designs. The pin short and pin access issues occur when the signal pins of the cell overlap with the prerouted power rail or IO pins on the same layer (called pin short) or on the next upper layer (called pin access), and edge spacing constraint requires that a minimum spacing between any two adjacent cells to prevent the occurrence of pin shorts.</p><p>The technology constraints are considered as soft constraints, and if each of these constraints is not satisfied, a penalty will be enforced for the evaluation <ref type="bibr" target="#b0">[1]</ref>. Fig. <ref type="figure" target="#fig_2">3</ref> shows three examples of technology constraints. As shown in Fig. <ref type="figure" target="#fig_2">3</ref>(a), the cell has two signal pins, one on the metal 1 and the other on the metal 2, which cause pin access and pin short issues, respectively. In Fig. <ref type="figure" target="#fig_2">3</ref>(b), if we relocate the cell to a suitable position, these two issues in Fig. <ref type="figure" target="#fig_2">3</ref>(a) can be solved. Fig. <ref type="figure" target="#fig_2">3</ref>(c) shows the edge spacing constraint, where cell C should have a minimum spacing between cell C and cell A, cell C and cell B, and between cell C and cell D.</p><p>To sum up, the legalization solutions should meet the following hard constraints.</p><p>1) Cells must be aligned with the correct power rail.</p><p>2) Cells must be aligned with the placement sites on the rows. 3) Cells must be nonoverlapping. 4) Cells must locate at the corresponding region. The technology constraints are considered as soft constraints, and the fewer the number of violations of the soft constraints, the better the legalization result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Negotiation-Based Method</head><p>In addition to methods, such as the multicommodity flow method, ILP, and multistage partition method, the negotiationbased method <ref type="bibr" target="#b15">[16]</ref> is a popular and effective method to solve routing problems in ASIC/FPGA design automation flow, and it has been adopted in many excellent academic routers <ref type="bibr" target="#b16">[17]</ref>- <ref type="bibr" target="#b18">[19]</ref>. The negotiation-based method combined with a rip-up and rerouting technique (NRR) can effectively reduce the overflow and control wirelength. The global routing problem can be modeled by a graph G(V, E), where a node denotes a G-cell and an edge denotes the connection of the adjacent nodes. Roy and Markov <ref type="bibr" target="#b19">[20]</ref> explained the high performance of the NRR, which is very similar to the discrete Lagrange multiplier (DLM) method. The Lagrange function for the routing problem is defined as follows:</p><formula xml:id="formula_2">F(x, λ) = W(x) + n e=1 λ e C e (x)<label>(4)</label></formula><p>where W(x) represents the total wirelength of the routing solution x, n represents the number of routing edges, λ e represents the Lagrange multiplier of grid edge e, and C e (x) represents the overflow of grid edge e. Equation ( <ref type="formula" target="#formula_2">4</ref>) can be rewritten as follows:</p><formula xml:id="formula_3">F(x, λ) = n e=1 (B e (x) + λ e C e (x)) (5)</formula><p>where B e (x) denotes the number of nets passing through the edge e. The solution x and the Lagrange multiplier λ e can be updated as follows:</p><formula xml:id="formula_4">x k+1 = arg min x F x, λ k e λ k+1 e = λ k e + αC e x k+1 .<label>(6)</label></formula><p>The negotiation-based routing cost function of the grid edge e can be formulated in the following two forms which were adopted by different routers <ref type="bibr" target="#b15">[16]</ref>- <ref type="bibr" target="#b19">[20]</ref>: cost(e) = b e + h e * p e <ref type="bibr" target="#b6">(7)</ref> cost(e) = (b e + h e ) * p e <ref type="bibr" target="#b7">(8)</ref> where b e , h e , and p e denote the base wirelength cost, history cost, and congestion penalty of the routing edge e, respectively. b e is the optimization objective, and usually set to 1. h e could be regarded as the Lagrange multiplier, and it increases when edge e overflows in the iteration progress, and p e directly reflects the current penalty for overused edge e.</p><p>In the initial routing phase, the pattern routing technique <ref type="bibr" target="#b19">[20]</ref> is widely adopted to get an initial solution regardless of the constraints. In the main stage of the NRR, in order to solve <ref type="bibr" target="#b5">(6)</ref> approximately, the router connects all nets with a particular net order by using the shortest path algorithm, such as the Dijkstra and A* search methods, where the search region is usually limited in a dynamic bounding box/window. Based on the idea from the routing problem, we will revisit the negotiation-based method and apply it to the legalization problem in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. PROBLEM REFORMULATIONS</head><p>In this section, we will dissect the main components of the negotiation-based method, analyze the applicability of this method for some problems, and reformulate the legalization problem as a resource allocation task. We then design our negotiation components to solve the resource allocation task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Main Components of Negotiation-Based Method</head><p>The negotiation-based method is first introduced in PathFinder <ref type="bibr" target="#b15">[16]</ref> to solve the FPGA routing problem, after which it is applied for the ASIC routing problem. It has also been adopted in other fields <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>. By allocating resources continuously during the iterations with this method, we can obtain high-quality approximate solutions for large-scale problems. We extract the major components and operation preferences for the negotiation-based method below.</p><p>The main components of the negotiation-based method can be divided into five components as follows.</p><p>1) Negotiation object.</p><p>2) Negotiation cost.</p><p>3) Negotiation action. 4) Negotiation order. 5) Negotiation region.  <ref type="bibr" target="#b18">[19]</ref> AND NVM <ref type="bibr" target="#b20">[21]</ref> The main components of the global router NTHU-Route 2.0 <ref type="bibr" target="#b18">[19]</ref> and layer assignment method NVM <ref type="bibr" target="#b20">[21]</ref> are shown in Table <ref type="table" target="#tab_0">I</ref>. The Negotiation Object is generally designed as a task object. For example, each net in the routing problem is a Negotiation Object, and they compete for routing edge capacity while ensuring the connection of the source and sink. The Negotiation Cost is composed of the target cost and congestion cost. For example, in <ref type="bibr" target="#b18">[19]</ref>, the target cost consisted of the wirelength cost and via cost, and the congestion cost consisted of the history cost and penalty cost. The Negotiation Action is the method to complete the task for each Negotiation Object, and the goal is to find a minimum Negotiation Cost in the current iteration. For Negotiation Order, it will affect the algorithm speed and solution quality, to some extent. Chang et al. <ref type="bibr" target="#b18">[19]</ref> proposed a sorting method based on net and region congestion, and the net assignment order was ignored according to the experimental results in <ref type="bibr" target="#b20">[21]</ref>. The Negotiation Region denotes a local area where the Negotiation Object performs the Negotiation Action. Chang et al. <ref type="bibr" target="#b18">[19]</ref> ripped-up and rerouted nets in an adaptive bounding box, and Liu and Li <ref type="bibr" target="#b20">[21]</ref> found the minimum-cost global tree without changing the two-dimensional (2D)-net topology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Resource Allocation Task</head><p>To illustrate our reformulation of the legalization problem more simply, we will ignore the fence region and technology constraints for the time being and introduce them additionally in the next section. Since all standard cells must be aligned with the placement sites on the rows, the single-row legalization problem is not a pure continuous problem. In order to keep the cells always aligned with the sites, we divided the placement grid in terms of the placement sites. Each grid's width and height are the site width and row height, respectively, and each grid is represented by its bottom-left coordinate, which is scaled by the value of the site width. For example, if the chip region ranges from (0, 0) to (W, H) and the row height and placement site width are R h and S w , respectively, the bottom left corner grid's coordinate is (0, 0), and the top right corner grid's coordinate is (W/S w − 1, (H − R h )/S w ). Naturally, each standard cell should be located at the grid to meet the site alignment constraints. Thus, the goal to remove overlaps can be achieved by the grid resource allocation task, that is, when the usage of all of the grids is less than or equal to the capacity, all of the overlaps are eliminated.</p><p>The set of n multirow-height cells is C = {c 1 , c 2 , . . . , c n }, the integer domain of the grid's coordinate is D, and the grid resource overuse function is g(x, y) = max (usg(x, y) − cap(x, y), 0). The mixed-cellheight legalization problem with average and maximum displacement minimization can be formulated as follows: </p><formula xml:id="formula_5">min 1 n n i=1 x i − x i + y i − y i + ω n max i=1 x i − x i + y i − y i (9) s.t. y i = k i R h /S w ∀i</formula><formula xml:id="formula_6">(x i , y i ) ∈ D ∀i ∈ {1, 2, . . . , n} (9b) g(x i , y i ) = 0 ∀i ∈ {1, 2, . . . , n}. (<label>9c</label></formula><formula xml:id="formula_7">)</formula><p>Constraints 9(a)-9(c) represent the power rail alignment, site alignment, and nonoverlap constraints, respectively. In particular, in constraint 9(a), if a cell's height (h i ) is an odd multiple of the row height, k i can be an odd number or an even number by vertical cell flipping.</p><p>As blockages/macros, fixed cells, and standard cells with different widths and heights can be represented as rectangular blocks consisting of multiple grids, we adopt a negotiationbased method to solve the mixed-cell-height legalization problem and designed five negotiation components to achieve high-quality solutions.</p><p>1) Negotiation Object: The standard cells with different width or height are selected as the Negotiation Object, and all cells compete for grid capacity resources under the condition of minimizing the displacement as much as possible.</p><p>2) Negotiation Cost: We adopt the function defined by (7) as our Negotiation Cost, and for each cell with width w i and height h i , the cost function can be formulated as follows: <ref type="bibr" target="#b9">(10)</ref> where b(x, y), h(x, y), and p(x, y) denote the target cost, history cost, and grid congestion penalty cost, respectively. The target cost is defined as follows:</p><formula xml:id="formula_8">Cost(x i , y i ) = b(x i , y i ) + y i +h i −R h y=y i x i +w i −1 x=x i (h(x, y) • p(x, y))</formula><formula xml:id="formula_9">b(x i , y i ) = δ i + m f • max(δ i − th, 0)<label>(11)</label></formula><p>where δ i is the displacement cost, m f is a user-defined constant, and th is a preset value that is used to control the maximum displacement growth. In this article, m f is set to 1.5, and th is set to 30 (sites). The history cost h increases as the grid resource overflows, and it remains unchanged when the grid resource does not overflow. The iteration process of the history cost is expressed as follows:</p><formula xml:id="formula_10">h i (x, y) = h i−1 (x, y) + h f • g(x, y) (<label>12</label></formula><formula xml:id="formula_11">)</formula><p>where h f is a user-defined parameter that is set to 1, and g(x, y) denotes the grid resource overuse function. When g equals zero, it means that there is no overflow on the grid; otherwise, the overflow occurs on the grid. The penalty cost is defined as follows:</p><formula xml:id="formula_12">p(x, y) = p f • usg(x, y) + 1 cap(x, y)<label>(13)</label></formula><p>where usg(x, y) and cap(x, y) denote the grid resource usage and grid resource capacity, respectively, and p f is an adaptive hyperparameter, defined as follows:</p><formula xml:id="formula_13">p f = 1.0 + α • e −β * e −γ * (i−i th ) (<label>14</label></formula><formula xml:id="formula_14">)</formula><p>where α, β, γ , and i th are user-defined parameters. i is the current iteration count, and i th denotes the iterative threshold.</p><p>In the NBLG, α, β, γ , and i th are set to 0.7, 10, 0.005, and 300, respectively. As shown in Fig. <ref type="figure" target="#fig_3">4</ref>, p f will increase as the iteration proceed, such that the weight of the congestion cost in the whole cost function will increase, encouraging the NBLG to obtain grids with less overflow rather than grids with less movement. In order to control the point where the function p f starts to go up, we set the iterative threshold i th to 300, which is based on the observation of the total number of iterations.</p><p>The test results of the adaptive function p f are described in Section V.</p><p>3) Negotiation Action: As the basic goal of legalization is reducing the average and maximum displacement, there should not be much movement between the global placement and legalization solutions. Thus, an easy way to find a minimum Negotiation Cost can be achieved by enumeration. According to constraint 9(b), all the placement spaces are divided into site grids, so we can enumerate nearby grids for a cell and choose that grid with the minimum Negotiation Cost.</p><p>4) Negotiation Order: In the iteration process, the cell that contains at least an overflowed grid is identified as illegal, and the NBLG will rip-up and immediately redo the Negotiation Action for the illegal cells serially. Based on the experience, we used three factors to control the sorting: 1) the grid resource overuse value; 2) cell height; and 3) cell width. If a cell that occupies several grids has more overuse value, it will be ripped-up first, and the cells that are located in the uncongested region will be ripped-up later. This operation will push congested cells further away from the congested region and gradually release the congestion. A cell with a larger height and width will be processed later to avoid causing more interference to other smaller-sized cells.</p><p>5) Negotiation Region: Negotiation Region denotes a local area where a cell can find an appropriate grid location in this work, and we limited each cell's searchable space to the current surrounding window rather than a fixed space, such that cells can travel to further regions to obtain a better solution when the local region is very congested. As shown in Fig. <ref type="figure">5</ref>, there are 33 grid locations in the window. The site/row height is much greater than the width. Based on the experience, we set the horizontal maximum movement in the current row and two adjacent rows as 9 and 3 (sites), respectively.</p><p>IV. PROPOSED ALGORITHM Fig. <ref type="figure">6</ref> shows the overall flow of our mixed-cell-height standard cell legalization algorithm. The algorithm consists of three parts: 1) preprocessing; 2) solving the resource allocation task; and 3) postoptimization. Given a global placement result ignoring overlaps among cells, we scale the chip size by the width of the site, as described in Section III-B, move the standard cells away from the blockages/macros, and align the standard cells to the correct row and site location. In the main stage of solving the resource allocation problem, all cells compete for grid resources and eventually eliminate overlaps with each other, and two post-optimization methods further decrease the cell displacement. The handling of fence region and technology constraints is described in Section IV-D, and the proposed multithreading scheduling technique is described in Section IV-E.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Preprocessing</head><p>As shown in Fig. <ref type="figure">6</ref>, cell preprocessing is divided into three parts: 1) cell sorting; 2) row and site alignment; and 3) moving out of blockages. We sort the cells in ascending order according to their initial bottom-left y-coordinate and x-coordinate to arrange the cells by row before entering the main stage. We then move cells to the nearest site location and complete the correct power rail alignment. We later perform a two-phase operation to move the standard cells away from the blockages/macros: 1) local region displacement and 2) longdistance displacement. First, we set the usage, history cost, and penalty cost of the grid occupied by blockages to infinity, and we perform a Negotiation Action to place those cells at the boundary of the blockages to the surrounding minimal cost grid position. We then deal with those cells inside the blockages and perform long-distance displacements for these cells in only horizontal and vertical directions while maintaining the row alignment. Finally, we will check if any cell is still out of the region it belongs to, then repeat the two-phase operation.</p><p>Fig. <ref type="figure" target="#fig_5">7</ref> shows the result before adopting the long-distance displacement. Six cells overlap at the bottom of the macro h7, and they cannot be legalized in the local region (they cannot move down because of the power rail alignment constraint). Thus, we move these cells by setting a large step distance to find a minimal cost grid location.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Solving Resource Allocation Task</head><p>In the main stage of solving the resource allocation task, the NBLG eliminates all overlaps among cells by iteratively ripping-up and removing overflowed cells based on five negotiation components, as described in Section III-B.</p><p>Algorithm 1 shows the flow of our legalization algorithm NBLG. The cells was set to store the information of standard cells, and parameters iter_num, cell_num, and I denote the number of iterations, the total number of cells, and the isolation point, respectively. Line 1 represents the iteration process, and under the condition in line 11, the iteration terminates. In lines 2-6, for each cell (Negotiation Object), if the current iteration count is greater than isolation point I and there is no overuse of the grids occupied by the cell, the cell will be treated as a legal cell; otherwise, it will be ripped-up, and the Negotiation Action will be performed again. In lines 7-12, we count the total overflows for all cells. When the number of overflows is greater than zero, the history cost will be updated using <ref type="bibr" target="#b11">(12)</ref>, and cells will be sorted by Negotiation Order; the legalization result will be returned otherwise.</p><p>To further improve the quality of the legalization solution, parameter I is set to allow noncongested (i.e., overuse value is zero) cells to be ripped-up and relocated. In the routing problem, McMurchie and Ebeling <ref type="bibr" target="#b15">[16]</ref> suggested that only nets passing through congested regions need to be rerouted. However, those noncongested cells could find a grid location with a smaller displacement cost than the current position because the movement of processed cells previously could release free space for these noncongested cells in the legalization problem. Hence, the key issue is to balance the solution quality and time consumption, and I is set to zero (iter_num is set to 600, which is twice the i th in parameter p f ) to force all cells to be ripped-up and relocated whether or not they are congested at the iteration zero. Furthermore, the NBLG was executed a second time with I equal to one (iter_num is set to 3000) to adjust the legalization results, and the optimization results are presented in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Postoptimization</head><p>After the resource allocation task is solved, all overlaps have been removed, and the row and site alignment constraints have been satisfied, we adopt two post-optimization methods to further decrease the displacement.</p><p>We performed a greedy search five times to decrease the average and maximum displacement, and each greedy search phase is a Negotiation Action-like operation in which the congestion penalty cost is set to infinity. This allows the cells to find the minimal cost grid location within a search window (see Section III-B) while ensuring that no overlap is generated.</p><p>In the cell swapping phase, we performed bipartite matching in each local region to further reduce the average displacement without increasing the maximum displacement. Cells that have the same height, width, and power-rail type form a subset, and the goal is to find a minimal matching between the current positions of the cells in each subset. We set the Manhattan distances between the initial position and other cells' current positions as the connection weights, and the Manhattan distances that are greater than the maximum displacement are set to infinity to avoid increasing the maximum displacement. After, another greedy search is performed to further reduce the displacement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Fence Region and Technology Constraints Handling</head><p>1) Fence Region Constraint: During the preprocessing phase, we first move cells into the fence region they assigned to, and make a label for the grids and movable cells in each fence region. Then in the main stage of solving the resource allocation task, the Negotiation Action is considered valid only if the label of the grid matches the label of the cell. Through the above process, the fence region constraint is resolved, where the key part is how to locate cells into the corresponding fence region during the preprocessing phase.</p><p>Since a design may contain multiple fence regions with a variety of shapes, and a fence region is usually composed of multiple spatially joint or disjoint rectangular subregions, we deal with each fence region in turn and store each rectangular subregion in R-trees <ref type="bibr" target="#b23">[24]</ref>. The cell assigned to the current fence region is then checked to see if it conflicts with any subregions. If there is a conflict, it means that the cell is near the fence region it belongs to and no other processing is required. If not, the nearest subregion is found for the cell and the cell is moved into that nearest subregion. For those cells that do not belong to any fence region (assigned to default region), all fence regions are considered as blockages. A two-phase operation is performed to move these cells away from the blockages as described in Section IV-A.</p><p>2) Technology Constraint: For the pin short and pin access constraints, the cells that have caused the violation are placed to the safe grids during the preprocessing phase. Then in the main stage, in order not to destroy the convergence of the negotiation-based method, we will add a penalty value to the target cost defined in <ref type="bibr" target="#b10">(11)</ref> for grids that cause pin short, pin access, or edge spacing constraint violations. In the postoptimization phase, we also add a penalty value to the target cost in the greedy search process to further reduce technology constraint violations, and the penalty value is set to three times the row height.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Multithreading Implementation</head><p>We adopted a deterministic multithreading technique to accelerate the negotiation-based method in the main stage, which does not result in much quality degradation. We use the inter-region parallelism strategy to accomplish multithreaded tasks, and the two key problems are to complete load balance and not to destroy the convergence of the algorithm.</p><p>A simple but efficient dynamic region adjustment method is proposed to complete the load balance, and the cumulative area of cells is used as the target for load balance. Algorithm 2 shows the flow of dynamic region adjustment, and the idea is that the center coordinates continue to advance dynamically along the direction that the bin of the smallest cumulative area points to the bin of the largest cumulative area, until the gap between the smallest cumulative area and the largest cumulative area is small enough or cannot be further reduced.</p><p>Given the cells identification cellIds, step, the lower left x-coordinate xLL, the up right x-coordinate xUR, the lower left ycoordinate yLL, and the up right y-coordinate yUR, Algorithm 2 returns the center coordinates within the scope of the current region, and the cell areas in the four bins divided by the center coordinates are balanced. In lines 1 and 2, we initialize the current center coordinate to the geometric center of the current region, and ratio represents the difference between the largest cell cumulative area and the smallest cell cumulative area in the four bins. In lines 3 and 8, when the ratio is less than 0.1 or the area difference is less than 0.001 before and after the count reaches 5, the algorithm ends. Function update_cellIds() updates the cellIds for each subregion based on the current center coordinates. In lines 12 and 13, the horizontal direction and vertical direction from the bin with the smallest cumulative area to the bin with the largest cumulative area are updated by the function get_direction_x() and get_direction_x(), respectively. Line 14 shows that in the horizontal (or vertical) direction, when the direction of the last advance is the opposite of the direction of this advance, the step decreases by half. In lines 16 and 17, the center coordinates are updated in the direction of cell cumulative area expansion.</p><p>We first set step to 20, and take the die area as the initial region range, so that we have four balanced bins. Then we set step to 10, and call Algorithm 2 four times for the four bins, finally, we get sixteen area-balanced bins. A scheduler is used to divide sixteen bins into four groups, each bin in one group is not adjacent to each other, so that we can use four threads to perform multithreaded computations on each group. Noted that the die area is large enough relative to the single-cell area, and the displacement of the cell will not exceed two times the size of the bin, so we think that there will be no conflicts between each thread. We will perform Algorithm 1 twice for each task as described in Section IV-B and process the next group only after the previous group has finished processing, so our multithreaded algorithm is deterministic.</p><p>In order not to destroy the convergence of Algorithm 1, that is reducing repeated movement of cells near the boundaries of each bin, we sorted in ascending order according to the maximum cell area of each group, and allow groups with smaller single cell area to complete the legalization first. And when processing with the current group, the history cost of the grids within other groups is not updated synchronously, so we set the m f in (11) to 6.0 to prevent the cell from moving far away and affect the legalization process in other groups.</p><p>After all the groups have been processed, we continue to handle the remaining cells that still have overlaps in the master thread. We set a bounding box with a distance of 40 (sites) from the center coordinate of each cell, add the cells in the bounding box to the set of cells to be processed, and then run Algorithm 1 twice in the same way as described in Section IV-B, such that all overlaps will be eliminated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENTAL RESULTS</head><p>To evaluate our legalization algorithm, we implemented our algorithm in the C++ programming language and conducted experiments on the ICCAD-2017 CAD Contest on multideck Standard-Cell Legalization benchmark <ref type="bibr" target="#b0">[1]</ref>. All experiments were tested on a 64-bit Linux machine with 32 cores of AMD Ryzen 2.1-GHz CPUs and 64-GB of RAM. Table <ref type="table" target="#tab_2">II</ref> shows the benchmark statistics, where "#S. Cell," "#D. Cell," "#T. Cell," "#Q. Cell," and "#Den. (%)" are the total numbers of single-, double-, triple-, quadruple-row height cells, and the percentage of the design density, respectively. We tested all the benchmarks (including hidden ones) and report the results in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Comparison With State-of-the-Art Methods Ignoring the Fence Region and Technology Constraints</head><p>We compared our legalization algorithm with the state-ofthe-art methods <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>. All three algorithms ignore the fence region constraints and the soft constraints, and the experimental results are shown in Table <ref type="table" target="#tab_3">III</ref>. In Table <ref type="table" target="#tab_4">IV</ref>, "Avg. Disp. (sites)" denotes the average displacement measured in the number of placement site width, "Max. Disp. (sites)" denotes the maximum displacement measured in the number of placement site width, and "CPU (s)" denotes the CPU runtime. It should be noted that the results of <ref type="bibr" target="#b12">[13]</ref> are quoted from the publication directly because the binary had been altered. Compared with <ref type="bibr" target="#b12">[13]</ref>, which simultaneously minimized the average and the maximum cell movements, our algorithm achieved a 15.3% smaller average displacement and 1.9% reduction in the maximum displacement. Furthermore, compared with <ref type="bibr" target="#b13">[14]</ref>, our legalization algorithm NBLG still achieved a 11.4% smaller average displacement and 0.5% smaller maximum displacement (based on the results of the latest binary). Overall, the NBLG achieved the smallest average displacement and maximum displacement in a reasonable runtime, which verified the effectiveness of our method. The Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 14:30:42 UTC from IEEE Xplore. Restrictions apply.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Effectiveness of Individual Techniques</head><p>Ignoring the fence region and technology constraints, we tested the effectiveness of the parameter I (see Section IV-B) and adaptive function p f , and the results are shown in Table <ref type="table" target="#tab_4">IV</ref>. The second, third, and fourth columns show the average displacement, maximum displacement, and CPU runtime of the NBLG without parameter I (or set I to −1). The fifth, sixth, and seventh columns denote the results without the adaptive function p f (or set p f to 1.0). The last three columns show results from our algorithm. As shown in the second and eighth columns, after setting parameter I and executing Algorithm 1 twice, the NBLG achieved average reductions of 2.69% for each benchmark for the average displacement. As shown in the fourth and tenth columns, this method did not result in excessive runtimes. With the adaptive function p f , the NBLG reduced the total runtime by 19.27 s with nearly the same solution quality, and for "edit_dist_a_md3," it achieved a 26% runtime decrease.</p><p>Ignoring the fence region and technology constraints, we tested the effects of the user-defined constant m f in <ref type="bibr" target="#b10">(11)</ref> on the displacement and runtime. When m f was set to zero, the target cost just considered the reduction in the average displacement for the legalization problem. Furthermore, as m f  increased, the weight of the maximum displacement penalty cost increased. In Fig. <ref type="figure" target="#fig_10">9</ref>, five sets of experiments were conducted for all benchmarks with m f = 0, 0.5, 1.0, 1.5, and 2.0, and the results of average displacement, maximum displacement, and CPU runtime with m f = 0 were normalized to 1. As shown in Fig. <ref type="figure" target="#fig_10">9</ref>, when m f increases from 0 to 2.0 by 0.5, the average displacement and maximum displacements were reduced to some extent, and the results with m f = 1.5 achieved a better balance between reducing the displacement and increasing the runtime.</p><p>Table <ref type="table" target="#tab_4">V</ref> shows that the average displacement and maximum displacement in preprocessing phase, main stage, and postoptimization phase without considering the fence region, and technology constraints. We can see that the post-optimization phase results in a 0.9% average reduction in average displacement and no increase in maximum displacement. According to the fifth and sixth columns in Table V and maximum displacement results in Table <ref type="table" target="#tab_3">III</ref>, we can see that if the preprocessing phase does not dominate the maximum displacement, our method can achieve better maximum displacement reduction than other methods, which demonstrates the effectiveness of our method to deal with the maximum displacement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Experimental Results on Multithreading Implementation</head><p>Table VI shows the experimental results of NBLG with the single thread and with four threads without considering the fence region and technology constraints. We can see that the average 4× total CPU runtime speedup was achieved  with only a 0.9% increase in the average displacement. The fourth and fifth columns show a slight reduction in the maximum displacement, benefiting from an increase in the value of parameter m f as described in Section IV-E.</p><p>Figs. 10 and 11 show the runtime breakdown of NBLG with the single thread, and with four threads based on the benchmark edit_dist_a_md3, respectively. The NBLG with the single thread consists of three major parts: 1) preprocessing; 2) solving the resource allocation task, including executing Algorithm 1 with I equals zero and executing Algorithm 1 with I equals one; and 3) post-optimization. The NBLG with the four threads consists of five major parts: 1) preprocessing; 2) scheduling; 3) executing Algorithm 1 with multithread; 4) executing Algorithm 1 with master thread; and 5) postoptimization. It is worthwhile noting that the preprocessing and post-optimization phase of both modes takes the same running time. Excluding these two parts, our multithreading technique achieved nearly 16 times speedup in the main stage on the benchmark edit_dist_a_md3. Using the profiling tool, we found that these two modules, including counting the overflows and updating the history cost (see lines 7 and 9 in Algorithm 1) dominate the runtime in single-thread mode, so that our inter-region parallelism strategy can effectively reduce the time consumption of these two modules. Another important fact is that the number of iterations in each bin with four threads has been significantly reduced on the benchmark edit_dist_a_md3. To sum up the above two reasons, our multithreading technique achieved a good acceleration performance in this case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Comparison With State-of-the-Art Methods Considering the Fence Region and Technology Constraints</head><p>We compared our legalization algorithm considering the fence region and technology constraints with the state-of-theart methods <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b11">[12]</ref>. It should be noted that the results of <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b11">[12]</ref> are quoted from the publication directly, and the binary of <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b11">[12]</ref> was executed with eight threads and single thread, respectively. To have a more comprehensive comparison that follows the score function in the contest <ref type="bibr" target="#b0">[1]</ref> as much as possible, we use the score function in <ref type="bibr" target="#b5">[6]</ref> to evaluate the quality of our legalizer. The score function S is</p><formula xml:id="formula_15">S = 1 + hpwl + N p + N e n 1 + M max 100 S am (<label>15</label></formula><formula xml:id="formula_16">)</formula><p>where hpwl is the increasing ratio in HPWL, and N p and N e are the number of pin short/access violations and the number of edge spacing violations, respectively. n is the number of cells, M max is the maximum cell movement, and the average cell movement S am is defined as</p><formula xml:id="formula_17">S am = 1 H H h=1 ⎛ ⎝ 1 |C h | c i ∈C h δ i ⎞ ⎠<label>(16)</label></formula><p>where cells are grouped into H sets based on their heights, and C h and |C h | are the set and number of cells with the same height, respectively. δ i is defined as <ref type="bibr" target="#b0">(1)</ref>, which represents the displacement of cell c i . M max and S am are measured in terms of single-row height. It is worthwhile noting that a new target cost function which replaced ( <ref type="formula" target="#formula_9">11</ref>) is used to minimize the S am , the function is defined as</p><formula xml:id="formula_18">b(x i , y i ) = n |C h | • δ i + m f • max(δ i − th, 0) ∀c i ∈ C h (17)</formula><p>where [n/|C h |] denotes the weight of the displacement, and the smaller |C h |, the higher the displacement cost of the cell.</p><p>From Table <ref type="table" target="#tab_2">II</ref>, we can see that the number of multirow-height cells is smaller and the displacement of those cells would be subject to greater resistance.</p><p>Table <ref type="table" target="#tab_6">VII</ref> shows the experimental results, and the binary of our legalizer was executed with four threads. Compared with the state-of-the-art work <ref type="bibr" target="#b5">[6]</ref>, our algorithm achieves a 29.4% smaller average displacement, 6% smaller maximum displacement, and 31.8% smaller score. Compared with the state-of-the-art work <ref type="bibr" target="#b11">[12]</ref>, our algorithm achieves a 21.6% smaller average displacement, only 1.2% increase in maximum displacement, and 21.5% smaller score. Compared with previous experiments on average displacement (see Table <ref type="table" target="#tab_3">III</ref>), our algorithm achieves the promising results on average cell movement S am , which mainly benefits from the use of the new target functions <ref type="bibr" target="#b16">(17)</ref>. Our algorithm needs further improvement in soft constraints since we added a penalty value for violations, but the fact is that the algorithm ended when there was no overlap in the main stage, and there was not enough free space for greedy search in the post-optimization phase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Experimental Results on the Modified ISPD 2015 Contest Benchmarks</head><p>In order to test the robustness of our proposed algorithm, we compare the NBLG with two state-of-the-art works <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b11">[12]</ref> based on a new set of benchmarks. The benchmarks were modified from the 2015 ISPD detailed-routing-driven placement contest benchmarks suite <ref type="bibr" target="#b14">[15]</ref> provided by Chow et al. <ref type="bibr" target="#b4">[5]</ref>, which omits fence regions given in the original benchmarks suite. 10% of the cells were randomly selected to double their heights and half their widths to form mixed-cell-height standard cell circuits, and such modification maintains the total cell area and ensures that each chip can accommodate all the cells. We have added another experiment with 16 threads based on the modified 2015 ISPD contest benchmarks. We called Algorithm 2 further for 16 bins to obtain 64 area-balanced bins (see Section IV-E), and used 16 threads to accelerate the negotiation-based method in the main stage. Table <ref type="table" target="#tab_6">VIII</ref> shows the comparison results among our legalizer, <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b11">[12]</ref>. The second, third, and fourth columns show the characteristics of the benchmarks, where "#S. Cell," "#D. Cell," and "Den. (%)" give the total numbers of single-, double-row height cells, and the percentage of the design density, respectively. As can be seen from Table <ref type="table" target="#tab_6">VIII</ref>, compared with the works <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b11">[12]</ref>, the NBLG with four threads achieved 10% and 6% smaller total displacement, respectively, but there was a lack of operational efficiency in the "superblue series." Compared to the NBLG with four threads, the NBLG with 16 threads still achieved a similar improvement in total displacement and achieved a 2× total CPU runtime speedup. Overall, our proposed legalization algorithm achieved the smallest total displacement in a reasonable runtime, which shows the robustness of our algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>In this article, we proposed a robust NBLG to reduce the average displacement and maximum displacement for mixedcell-height circuits. By dissecting the main components of the negotiation-based method, we divided the placement grid in terms of placement sites and reformulated the legalization problem as a resource allocation task. We then adopted a negotiation-based method with an adaptive penalty function and isolation point to efficiently solve the mixed-cell-height legalization problem. A deterministic multithreading technique was adopted to accelerate the convergence of the negotiationbased method. Finally, two post-optimization methods, the greedy method and matching algorithm, were applied to further decrease the cell displacement. Experimental results showed that the NBLG could achieve excellent quality of the legalization solution compared to the state-of-the-art methods. Our reformulation method provides a generic research direction to obtain the approximate solutions for large-scale problems that can be represented as resource allocation tasks.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Example of power rail alignment constraints.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig.2. Fence region constraints on the benchmark pci_bridge32_a_md1 with four fence regions in different colors<ref type="bibr" target="#b0">[1]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Example of technology constraints. (a) Right pin on metal 1 has the pin access issue with the power rail on metal 2, and the right pin on metal 2 has the pin short issue with the power rail on metal 2. (b) Feasible solution to the pin short and pin access issues. (c) Cell C should have a minimum spacing between adjacent cells.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Curve of adaptive function p f .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Searching window.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Partial layout result of the benchmark "pci_bridge32_b_md1" before adopting the long-distance displacement.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 14:30:42 UTC from IEEE Xplore. Restrictions apply.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Algorithm 2 : 4 cellIds_{0, 1 , 2 , 12 dir_x</head><label>241212</label><figDesc>Dynamic Region AdjustmentInput: set : {cellIds}; parameters : step, xLL, xUR, yLL, yUR; Output: {cellIds_0, cellIds_1, cellIds_2, cellIds_3}, center_x, center_y; 1 Initialize center_x = 0.5*(xLL + xUR), center_y = 0.5*(yLL + yUR); 2 ratio = 1.0, last_ratio = 0.0, last_dir_x = 0, last_dir_y = 0, count = 0; 3 while ratio &gt; 0.1 and count &lt; 5 do 3} ← update_cellIds(center_x, center_y); 5 max_area ← find_max_area_4bin(center_x, center_y); 6 min_area ← find_min_area_4bin(center_x, center_y); 7 ratio ← (max_area -min_area) / min_area; 8 if fabs(ratio -last_ratio) &lt; 0← get_direction_x(min_area, max_area); 13 dir_y ← get_direction_y(min_area, max_area); 14 step ← update_step(dir_x, dir_y, last_dir_x, last_dir_y); 15 last_ratio, last_dir_x, last_dir_y ← ratio, dir_x, dir_y; 16 center_x ← update_x(step, ratio, dir_x, center_x, xLL, xUR); 17 center_y ← update_y(step, ratio, dir_y, center_y, yLL, yUR);</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. (a) Legalization result of the benchmark "fft_2_md2." (b) Partial layout marked in (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Effects of m f in target cost function.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 10 .</head><label>10</label><figDesc>Fig.10. Runtime on the "edit_dist_a_md3" with one thread.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Runtime breakdown on the "edit_dist_a_md3" with four threads.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 14:30:42 UTC from IEEE Xplore. Restrictions apply.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I NEGOTIATION</head><label>I</label><figDesc>COMPONENTS OF NTHU-ROUTE 2.0</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II STATISTICS</head><label>II</label><figDesc>OF ICCAD 2017 CAD CONTEST BENCHMARKS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE III COMPARISON</head><label>III</label><figDesc>BETWEEN OUR PROPOSED ALGORITHM AND OTHER ALGORITHMS IGNORING THE FENCE REGION AND TECHNOLOGY CONSTRAINTS</figDesc><table><row><cell>TABLE IV</cell></row><row><cell>EFFECTS OF INDIVIDUAL TECHNIQUES</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE V AVERAGE</head><label>V</label><figDesc>DISPLACEMENT AND MAXIMUM DISPLACEMENT RESULTS OF EACH PHASE</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE VI COMPARISON</head><label>VI</label><figDesc>RESULTS OF NBLG WITHOUT AND WITH MULTITHREADING TECHNIQUE</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE VII EXPERIMENTAL</head><label>VII</label><figDesc>RESULTS CONSIDERING THE FENCE REGION AND TECHNOLOGY CONSTRAINTS TABLE VIII COMPARISON ON MODIFIED ISPD 2015 CONTEST BENCHMARKS IGNORING THE FENCE REGION AND TECHNOLOGY CONSTRAINTS</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0">Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 14:30:42 UTC from IEEE Xplore. Restrictions apply.</note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the National Natural Science Foundation of China under Grant 61504110 and Grant 62090012; in part by the Sichuan Science and Technology Program under Grant 2019YFG0092 and Grant 2020YFG0452; and in part by the State Key Laboratory of ASIC and System Open Research Project Fund under Grant 2021KF013. This article was recommended by Associate Editor I. H.-R. Jiang.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>He is currently an Assistant Professor with the School of Information Science and Technology, Southwest Jiaotong University, Chengdu, China. His current research interests include power management, green-power ac/dc converters, and mixedsignal integrated circuits design.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">ICCAD-2017 CAD contest in multi-deck standard cell legalization and benchmarks</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Darav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Bustany</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mamidi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 36th Int. Conf. Comput. Aided Design</title>
				<meeting>36th Int. Conf. Comput. Aided Design</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="867" to="871" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Method and system for high speed detailed placement of cells within an integrated circuit design</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">U.S. Patent</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">673</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Abacus: Fast legalization of standard cell circuits with minimal movement</title>
		<author>
			<persName><forename type="first">P</forename><surname>Spindler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Schlichtmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Johannes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. Phys. Design</title>
				<meeting>Int. Symp. Phys. Design</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="47" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An effective legalization algorithm for mixed-cellheight standard cells</title>
		<author>
			<persName><forename type="first">C.-H</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Asia South Pac. Design Autom</title>
				<meeting>Asia South Pac. Design Autom</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="450" to="455" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Legalization algorithm for multiple-row height standard cell design</title>
		<author>
			<persName><forename type="first">W.-K</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-W</forename><surname>Pui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">F Y</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM/EDAC/IEEE Design Autom</title>
				<meeting>ACM/EDAC/IEEE Design Autom</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Routabilitydriven and fence-aware legalization for mixed-cell-height circuits</title>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-K</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">F Y</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 55th Annu. Design Autom</title>
				<meeting>55th Annu. Design Autom</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">History-based VLSI legalization using network flow</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Puri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 47th Design Autom. Conf., 2010</title>
				<meeting>47th Design Autom. Conf., 2010</meeting>
		<imprint>
			<biblScope unit="page" from="286" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Bonnplace legalization: Minimizing movement by iterative augmentation</title>
		<author>
			<persName><forename type="first">U</forename><surname>Brenner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput.-Aided Design Integr. Circuits Syst</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1215" to="1227" />
			<date type="published" when="2013-08">Aug. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A fast, robust network flow-based standard-cell legalization method for minimizing maximum movement</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Darav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Bustany</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Behjat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. Phys. Design</title>
				<meeting>Int. Symp. Phys. Design</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="141" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Mixed-cell-height standard cell placement legalization</title>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Hung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-Y</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-K</forename><surname>Mak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Great Lakes Symp</title>
				<meeting>Great Lakes Symp</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="149" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Toward optimal legalization for mixed-cell-height circuit designs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 54th Annu. Design Autom</title>
				<meeting>54th Annu. Design Autom</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Mixed-cell-height legalization considering technology and region constraints</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput.-Aided Design Integr. Circuits Syst</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="5128" to="5141" />
			<date type="published" when="2020-12">Dec. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Analytical mixedcell-height legalization considering average and maximum movement minimization</title>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. Phys. Design</title>
				<meeting>Int. Symp. Phys. Design</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A robust modulus-based matrix splitting iteration method for mixed-cell-height circuit legalization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Yao-Wen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Design Autom. Electron. Syst</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1" to="28" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">ISPD 2015 benchmarks with fence regions and routing blockages for detailedrouting-driven placement</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Bustany</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Chinnery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Shinnerl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Yutsis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. Phys. Design</title>
				<meeting>Int. Symp. Phys. Design</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="157" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">PathFinder: A negotiation-based performance-driven router for FPGAs</title>
		<author>
			<persName><forename type="first">L</forename><surname>Mcmurchie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ebeling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Reconfigurable Comput</title>
				<meeting>Reconfigurable Comput</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="365" to="381" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Fastroute 4.0: Global router with efficient via minimization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Asia South Pac. Design Autom</title>
				<meeting>Asia South Pac. Design Autom</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="576" to="581" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">NCTU-GR 2.0: Multithreaded collision-aware global routing with bounded-length maze routing</title>
		<author>
			<persName><forename type="first">W.-H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-C</forename><surname>Kao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-Y</forename><surname>Chao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput.-Aided Design Integr. Circuits Syst</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="709" to="722" />
			<date type="published" when="2013-05">May 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Nthu-route 2.0: A fast and stable global router</title>
		<author>
			<persName><forename type="first">Y.-J</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-T</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-C</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE/ACM Int. Conf. Comput.-Aided Design</title>
				<meeting>IEEE/ACM Int. Conf. Comput.-Aided Design</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="338" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">High-performance routing at the nanometer scale</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Markov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput.-Aided Design Integr. Circuits Syst</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1066" to="1077" />
			<date type="published" when="2008-06">Jun. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Negotiation-based layer assignment for via count and via overflow minimization</title>
		<author>
			<persName><forename type="first">W.-H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-L</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Asia South Pac. Design Autom</title>
				<meeting>Asia South Pac. Design Autom</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="539" to="544" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Negotiation-based task scheduling to minimize user&apos;s electricity bills under dynamic energy prices</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nazarian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pedram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Online Conf. Green Commun</title>
				<meeting>IEEE Online Conf. Green Commun</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">MrDP: Multiple-row detailed placement of heterogeneoussized cells for advanced nodes</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput.-Aided Design Integr. Circuits Syst</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1237" to="1250" />
			<date type="published" when="2018-06">Jun. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">R-trees: A dynamic index structure for spatial searching</title>
		<author>
			<persName><forename type="first">A</forename><surname>Guttman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Conf. Manag. Data</title>
				<meeting>ACM Conf. Manag. Data</meeting>
		<imprint>
			<date type="published" when="1984">1984</date>
			<biblScope unit="page" from="47" to="57" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
