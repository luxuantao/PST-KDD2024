<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Energy-optimized Partial Computation Offloading in Mobile Edge Computing with Genetic Simulated-annealing-based Particle Swarm Optimization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Jing</forename><surname>Bi</surname></persName>
							<email>bijing@bjut.edu.cn</email>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Haitao</forename><surname>Yuan</surname></persName>
							<email>yuanhaitao@buaa.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Shuaifei</forename><surname>Duanmu</surname></persName>
							<email>duanmusf@emails.bjut.edu.cn</email>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Mengchu</forename><surname>Zhou</surname></persName>
							<email>zhou@njit.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">School of Software Engineering in Faculty of Information Technology</orgName>
								<orgName type="institution">Beijing University of Technology</orgName>
								<address>
									<postCode>100124</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Automation Science and Electrical Engineer-ing</orgName>
								<orgName type="institution">Beihang University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">New Jersey Institute of Technology</orgName>
								<address>
									<postCode>07102</postCode>
									<settlement>Newark</settlement>
									<region>NJ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department" key="dep1">Department of Electrical and Computer Engineering</orgName>
								<orgName type="department" key="dep2">Faculty of Engineering, and Center of Research Excellence in Renewable Energy and Power Systems</orgName>
								<orgName type="institution">King Abdulaziz University</orgName>
								<address>
									<postCode>21481</postCode>
									<settlement>Jeddah</settlement>
									<country key="SA">Saudi Arabia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Energy-optimized Partial Computation Offloading in Mobile Edge Computing with Genetic Simulated-annealing-based Particle Swarm Optimization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">B6474135BA53989A086D4250B11B1495</idno>
					<idno type="DOI">10.1109/JIOT.2020.3024223</idno>
					<note type="submission">This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2020.3024223, IEEE Internet of Things Journal Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 02:19:24 UTC from IEEE Xplore. Restrictions apply.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T02:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Computation offloading</term>
					<term>mobile edge computing</term>
					<term>particle swarm optimization</term>
					<term>genetic algorithm</term>
					<term>energy optimization</term>
					<term>simulated annealing</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Smart mobile devices (SMDs) can meet users' high expectations by executing computational intensive applications but they only have limited resources including CPU, memory, battery power and wireless medium. To tackle this limitation, partial computation offloading can be used as a promising method to schedule some tasks of applications from resource-limited SMDs to high-performance edge servers. However, it brings communication overhead issues caused by limited bandwidth, and inevitably increases latency of tasks offloaded to edge servers. Therefore, it is highly challenging to achieve the balance between high-resource consumption in SMDs and high communication cost for providing energy-efficient and latency-low services to users. This work proposes a partial computation offloading method to minimize the total energy consumed by SMDs and edge servers by jointly optimizing offloading ratio of tasks, CPU speeds of SMDs, allocated bandwidth of available channels and transmission power of each SMD in each time slot. It jointly considers execution time of tasks performed in SMDs and edge servers, and transmission time of data. It also jointly considers latency limits, CPU speeds, transmission power limits, available energy of SMDs, and maximum number of CPU cycles and memories in edge servers. Considering these factors, a nonlinear constrained optimization problem is formulated and solved by a novel hybrid meta-heuristic algorithm named Genetic Simulatedannealing-based Particle swarm optimization (GSP) to produce a close-to-optimal solution. GSP achieves joint optimization of computation offloading between a cloud data center and the edge, and resource allocation in the data center. Real-life databased experimental results prove that it achieves lower energy consumption in less convergence time than its three typical peers.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Smart mobile devices (SMDs) have several features, e.g., high-quality graphics, compact design, and customized applications for users, and therefore, they have become a popular option for mobile users <ref type="bibr" target="#b0">[1]</ref>. As future promising computing devices, SMDs can meet users' high expectations by running computation-intensive applications. Some examples of applications include speech recognition <ref type="bibr" target="#b1">[2]</ref>, natural language processing <ref type="bibr" target="#b2">[3]</ref>, wearable devices and online games <ref type="bibr" target="#b3">[4]</ref>. Such applications need large memory, high computing power and long lifetime of battery. Yet, SMDs only have limited resources including CPU, memory, battery power and wireless medium. Therefore, it is a major challenge for SMDs to provide support for resource-hungry applications because of their constrained resources. To tackle resource limitation in SMDs, partial or entire computation offloading provides a novel approach to schedule some or all of tasks of users' applications from resource-limited SMDs to resource-rich computing servers in edge computing <ref type="bibr" target="#b4">[5]</ref>.</p><p>Mobile edge computing supports computation offloading in edge networks where computation and storage resources are provided by many access points (APs). APs provide SMDs with low-latency, close-proximity and high-bandwidth access to remote cloud resources and services. On the other hand, computation offloading brings additional overhead/cost of communication to SMDs, and it inevitably increases the latency of tasks offloaded to edge servers. Therefore, it is highly challenging to achieve the balance between high-resource consumption in SMDs and high communication cost for providing energy-efficient and latency-low services to users' SMDs. To guarantee tasks' performance, partial or complete computation offloading of SMDs is adopted in many studies <ref type="bibr" target="#b5">[6]</ref> for latencysensitive applications because tasks scheduled to SMDs and edge servers can be executed in parallel. In addition, partial offloading is highly practical by considering that the available bandwidth between SMDs and edge servers is limited.</p><p>To realize partial computation offloading, it is highly needed to intelligently allocate resources of SMDs, communication channels, etc. For each SMD, its CPU speed can be dynamically changed with dynamic voltage and frequency scaling (DVF-S) approaches that adjust task processing capacities according to computation workload for meeting users' expected performance. The energy consumption of SMDs can be reduced by lowering its CPU speeds. Therefore, DVFS technologies provide more flexibility in the computation offloading. In addition, the energy consumption of edge servers is also highly related to partial computation offloading strategies because it becomes larger if more tasks are offloaded to them. Thus, current studies fail to optimize the total energy consumption of SMDs and edge servers.</p><p>Motivated by the need to address this challenge, this work aims to minimize the total energy consumed by SMDs of all users and edge servers. It jointly optimizes offloading ratio of tasks, CPU speeds of SMDs, allocated bandwidth of available channels and transmission power of each SMD on partial computation offloading. It jointly considers the execution time of tasks executed in each SMD, time needed by the transmission of uploaded and downloaded data, and the time needed to execute data offloaded to edge servers. It also jointly considers constraints including latency limits of SMDs, maximum number of CPU cycles and memories in edge servers, maximum amount of available energy in each SMD and edge servers, maximum limit of computational speed of CPUs, and maximum limit of transmission power of each SMD. Then, a nonlinear constrained optimization problem is formulated and solved by a novel hybrid metaheuristic algorithm named Genetic Simulated-annealing-based Particle swarm optimization (GSP). GSP integrates advantages of three algorithms, and incorporates genetic operations of genetic algorithm (GA) and the Metropolis acceptance rule of simulated annealing (SA) <ref type="bibr" target="#b6">[7]</ref> into particle swarm optimization (PSO) <ref type="bibr" target="#b7">[8]</ref>. It is evaluated by using real-life data collected from Google cluster trace and it is compared with other three stateof-the-art optimization algorithms for proving its effectiveness.</p><p>For clarity, we note the major differences between our prior work <ref type="bibr" target="#b8">[9]</ref> and current one as follows:</p><p>1) The study <ref type="bibr" target="#b8">[9]</ref> designs an algorithm by combining GA and PSO. This work combines GA, SA and PSO, and proposes an improved hybrid algorithm named GSP. 2) This work extends the optimization problem in <ref type="bibr" target="#b8">[9]</ref> by considering the maximum number of edge-side CPU and memory resources. 3) Different from <ref type="bibr" target="#b8">[9]</ref>, this work adopts a penalty function method to handle complicated constraints in the nonlinear constrained problem. It converts each constraint into a corresponding penalty, and transforms a constrained problem into an unconstrained one. 4) This work performs more experiments on energy consumption with respect to different numbers of SMDs. More comparisons between GSP and its peers are given to demonstrate its effectiveness by considering distance from each SMD to its serving edge server, application latency limit and maximum number of CPU cycles in edge servers, which are not seen in <ref type="bibr" target="#b8">[9]</ref>.</p><p>The reminder of this work is organized as follows. Section II discusses the related work. Section III presents the proposed system architecture, and application models. Section IV states an energy optimization problem. Section V introduces GSP. Section VI evaluates it with real-life data-driven experiments. Section VIII concludes this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK A. Computation Offloading</head><p>In recent years, growing research focuses on computation offloading in a scenario of mobile edge computing. Particularly, partial computation offloading adopts parallelism between SMDs and edge servers due to limited resources in edge servers and bandwidth-limited uplink/downlink channels, and therefore, it is suitable to delay-sensitive applications <ref type="bibr" target="#b9">[10]</ref>- <ref type="bibr" target="#b12">[13]</ref>. Dai et al. <ref type="bibr" target="#b9">[10]</ref> design a two-tier framework of computation offloading in heterogeneous networks. A problem of joint user association and computation offloading is formulated and solved by an efficient algorithm. Then, the energy consumption of a multi-task edge system is minimized by optimizing transmission power and computation resources. Xu et al. <ref type="bibr" target="#b10">[11]</ref> develop a computation offloading method for cloud and edge computing. NSGA-III is adopted to determine dynamic task offloading for joint optimization of energy consumption and execution time of mobile devices. Bi et al. <ref type="bibr" target="#b11">[12]</ref> aim to maximize the weighted sum of computation rates of wireless devices by optimizing system transmission time and computation offloading. To achieve it, an alternating direction method of multipliers-based decomposition method is proposed to obtain near-optimal performance. Wang et al. <ref type="bibr" target="#b12">[13]</ref> formulate an optimization problem for joint optimization of resource allocation, computation offloading and content caching in wireless cellular networks. It is transformed into a convex problem, which is decomposed and efficiently solved with distributed convex optimization.</p><p>Different from them, this work proposes a novel partial computation offloading method by considering limits of latency, computational speeds of CPU, transmission power limits of uplink/downlink channels, maximum energy of SMDs, and number of CPU and memory resources in edge servers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Dynamic Resource Allocation</head><p>Dynamic allocation of resources, e.g., computational speeds of SMDs, bandwidth of uplink/downlink channels, and transmission power of SMDs, is critically important for edge computing providers <ref type="bibr" target="#b13">[14]</ref>- <ref type="bibr" target="#b16">[17]</ref>. In addition, dynamic scaling of frequency and voltage is a method that enables SMDs to adjust clock frequency and supply voltage according to input data to deliver expected performance <ref type="bibr" target="#b13">[14]</ref>. Then, the energy consumption of SMDs can be reduced or the execution time of data in SMDs can be shortened. Currently, there are a few studies on this problem. Among them, Zhang et al. <ref type="bibr" target="#b14">[15]</ref> present a theoretical framework for energy-aware mobile cloud with stochastic wireless channels. They aim to reduce energy consumption of mobile devices by optimally running applications in mobile devices or executing them in cloud through offloading. Although they discuss the effect of running speed on computation offloading, they ignore partition of computation. Zhang et al. <ref type="bibr" target="#b15">[16]</ref> design an energy-efficient offloading method to optimize allocation of computation and communication resources by considering limits of energy and latency. It well considers the tradeoff between latency and energy consumption in scenarios of single-cell and multicell mobile edge computing networks. However, they fail to consider energy consumption of edge servers, which is also very important to edge providers. The work in <ref type="bibr" target="#b16">[17]</ref> aims to achieve the energy consumption minimization for SMDs by jointly optimizing the selection of offloading and allocation of radio and computation resources. The problem is formulated as a mixed interger nonlinear program, which is solved by a greedy heuristic method. However, it fails to consider limits of CPU and memory resources in edge servers.</p><p>Different from these aforementioned studies, this work considers execution time of tasks performed in SMDs and edge servers, and transmission time of data. Then, a partial computation offloading approach is proposed to minimize the total energy consumption of SMDs and edge servers by jointly optimizing offloading ratio of data, CPU speeds of SMDs, allocated bandwidth of uplink/downlink channels, and transmission power of SMDs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MOTIVATION</head><p>The proposed partial computation offloading architecture for joint optimization of communication and computation is introduced as shown in Fig. <ref type="figure">1</ref>. Currently, there are various application cases that allow data partition provided by edge computing. For example, such an architecture is needed by specific applications, e.g., smart health monitoring systems with wearable sensors <ref type="bibr" target="#b17">[18]</ref>, and vehicle navigation systems <ref type="bibr" target="#b18">[19]</ref>, and 5G wireless systems <ref type="bibr" target="#b19">[20]</ref>. Users' data can be executed locally, i.e., tasks are executed in their own SMDs. However, SMDs often have limited resources and energy, and therefore, they have to offload some data to edge servers. Besides, processing speeds and transmission power of SMDs, and allocated bandwidth for their data have to be carefully specified. Therefore, strategies about partial computation offloading and resource provisioning need to be determined for different types of applications. It is assumed that the tasks executed in SMDs and those scheduled in edge servers are executed in parallel <ref type="bibr" target="#b20">[21]</ref>. As illustrated in Fig. <ref type="figure">1</ref>, an edge computing scheduler divides data of all SMDs into multiple independent parts that can be executed in parallel. In Fig. <ref type="figure">1</ref>, there are M SMDs that send tasks and receive responses through S transmission channels. Each channel supports uplink and downlink functions. The edge computing scheduler collects information about users' SMDs, uplink/downlink channels, quality of service needs of users, and resources in edge servers. Then, it executes the proposed optimization algorithm, i.e., GSP, to make the optimal decision on partial computation offloading and resource provisioning. Then, the decision is transmitted to SMDs and edge servers. Based on the architecture in Fig. <ref type="figure">1</ref>, there are multiple available serving access points (APs) that provide SMDs with proximity and flexible access to services provided by remote cloud data centers. Each AP owns a pool of edge servers. For example, as shown in Fig. <ref type="figure">1</ref>, the serving AP for the edge computing scheduler manages a pool of edge servers. Specifically, when SMDs need to run applications, the edge computing scheduler smartly determines the amount of data offloaded to edge servers. Data offloaded is then sent to edge servers by using uplink channels. Edge servers in the serving AP nearest to SMDs handle the offloaded data. At last, execution results are transmitted back to SMDs by using downlink channels. In this way, the total energy consumed by all SMDs is minimized by the partial computation offloading and resource provisioning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. PROBLEM FORMULATION</head><p>This section gives the formulation of an energy optimization problem for multi-user mobile edge computing. Then, models of latency and energy consumption are given as follows. This work focuses on data partition-enabled applications. Let I m denote the number of bits in the input data of SMD m (1≤m≤M ). Let C m denote the number of CPU cycles needed to execute I m bits for SMD m. According to <ref type="bibr" target="#b21">[22]</ref>, C m =α m I m . Here, α m (α m &gt;0) denotes a constant that is determined by characteristics and computational complexity of SMD m. In addition, let λ m (0≤λ m ≤1) denote the ratio of bits executed in SMD m to its total bits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Energy Consumption</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Energy Consumption of SMDs</head><p>Let P l m denote the power consumed by SMD m. According to <ref type="bibr" target="#b22">[23]</ref>, P l m is obtained as:</p><formula xml:id="formula_0">P l m =k l m f l m 3 (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>where k l m and f l m (f l m ∈N + ) denote a constant dependent on chip architectures, and speed (cycles/sec.) of SMD m, respectively. Let f l m denote a maximum limit of f l m . Thus,</p><formula xml:id="formula_2">0≤f l m ≤ f l m (2)</formula><p>According to (1), the energy consumed by SMD m per cycle is k l m f l m 2 . Let t l m denote the execution time of SMD m. The number of bits processed by SMD m is λ m I m . Then,</p><formula xml:id="formula_3">t l m = α m λ m I m f l m (3)</formula><p>Let E l m denote the amount of energy consumed by SMD m. It is obtained as:</p><formula xml:id="formula_4">E l m =α m I m k l m λ m f l m 2<label>(4)</label></formula><p>In addition, let Êl m denote maximum amount of energy for SMD m. Thus,</p><formula xml:id="formula_5">α m I m k l m λ m f l m 2 ≤ Êl m (5)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Energy Consumption of Data Transmission</head><p>This work adopts a frequency division duplex mode. We assume that uplink/downlink channels are frequency-flat and block-fading Rayleigh ones. According to <ref type="bibr" target="#b22">[23]</ref>, the loss of path between SMD m and its serving edge server is (d m ) -v . Here, d m denotes a distance from SMD m to its serving edge server, and v denotes an exponent of path loss, respectively. Let h 1 and h 2 denote coefficients of uplink and downlink channel fading. This work models h 1 and h 2 as circularly symmetric complex Gaussian random variables. Let N 0 denote power of white Guassian noise. Let R U m and R D m denote uplink and downlink rates of SMD m, respectively. We have:</p><formula xml:id="formula_6">R U m =Sµ m W U log 2 1 + P t m (d m ) -v |h 1 | 2 N 0 2 (6) R D m =Sµ m W D log 2 1 + P t F (d m ) -v |h 2 | 2 N 0 2<label>(7)</label></formula><p>where W U and W D denote bandwidth of uplink and downlink channels, P t m and P t F denote transmission power of SMD m, and P t F denotes transmission power of the serving edge server of each SMD. µ m denotes the proportion of bandwidth in uplink and downlink channels for SMD m, satisfying:</p><formula xml:id="formula_7">M m=1 µ m =1<label>(8)</label></formula><p>Let P t m denote a maximum limit of P t m . We have:</p><formula xml:id="formula_8">0≤P t m ≤ P t m<label>(9)</label></formula><p>For SMD m, I m (1 -λ m ) bits of data are offloaded to its serving edge server. Then, the amount of uploaded data is</p><formula xml:id="formula_9">β 1 I m (1 -λ m ) and β 1 (β 1 &gt;0</formula><p>) denotes the overhead in data transmission in an uplink channel. Besides, the amount of downloaded data is β 2 I m (1 -λ m ) and β 2 (β 2 &gt;0) denotes the ratio of downlink data to uplink data offloaded to edge servers <ref type="bibr" target="#b21">[22]</ref>.</p><p>t 1 m and t 2 m denote the time needed by the transmission of uploaded and downloaded data, respectively, i.e.,</p><formula xml:id="formula_10">t 1 m = β 1 (1 -λ m )I m R U m (<label>10</label></formula><formula xml:id="formula_11">)</formula><formula xml:id="formula_12">t 2 m = β 2 (1 -λ m )I m R D m<label>(11)</label></formula><p>Let η m denote the total energy consumed by transmission of uploaded and downloaded data for SMD m, i.e.,</p><formula xml:id="formula_13">η m =(P 0 m + k t m µ m P t m )t 1 m +P r m t 2 m (<label>12</label></formula><formula xml:id="formula_14">)</formula><p>where P 0 m , k t m and P t m denote idle power consumption, an amplifier coefficient and power consumed by downloaded data, respectively. η m can be rewritten as:</p><formula xml:id="formula_15">η m =(P 0 m + k t m Sµ m P t m ) β 1 (1 -λ m )I m R U m +P r m β 2 (1 -λ m )I m R D m (<label>13</label></formula><formula xml:id="formula_16">)</formula><p>Let φ 1 denote the amount of energy consumed by all SMDs, and the energy consumption of data transmission. Thus,</p><formula xml:id="formula_17">φ 1 = M m=1 E l m +η m = M m=1 α m I m k l m λ m f l m 2 +η m (14) 3) Edge-side Energy Consumption Let E c</formula><p>m denote the amount of energy consumed by SMD m's data processed in edge servers. Let φ 2 denote the amount of energy consumed by edge servers, i.e.,</p><formula xml:id="formula_18">φ 2 = M m=1 E c m = M m=1 α m I m k c (1 -λ m ) (f c ) 2<label>(15)</label></formula><p>where k c and f c denote a constant dependent on chip architectures, and computational speed (cycles/sec.) of CPUs of edge servers, respectively. Let Êc denote a maximum limit of φ 2 in edge servers. Thus,</p><formula xml:id="formula_19">M m=1 α m I m k c (1 -λ m ) (f c ) 2 ≤ Êc<label>(16)</label></formula><p>4) Edge-side CPU and memory modeling Let Â denote a maximum number of CPU cycles in edge servers. Thus, the total number of CPU cycles needed by all SMDs in edge servers cannot exceed Â, i.e.,</p><formula xml:id="formula_20">M m=1 I m (1 -λ m )α m ≤ Â<label>(17)</label></formula><p>Let Ĝ denote the maximum memory storage in edge servers. Thus, the total memory needed by all SMDs in edge servers cannot exceed Ĝ, i.e.,</p><formula xml:id="formula_21">M m=1 I m (1 -λ m )ζ m ≤ Ĝ<label>(18)</label></formula><p>5) Total Cost Let φ denote the total energy consumed by all SMDs and edge servers, i.e., φ=φ 1 +φ 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Latency Model</head><p>Let τ s m denote the latency of SMD m's data offloaded to edge servers. Let t c m denote the time needed to process data offloaded to edge servers. Then, t c m is obtained as:</p><formula xml:id="formula_23">t c m =t 1 m +τ s m +t 2 m (<label>20</label></formula><formula xml:id="formula_24">)</formula><p>In <ref type="bibr" target="#b19">(20)</ref>, τ s m is obtained as:</p><formula xml:id="formula_25">τ s m = α m (1 -λ m )I m f c (<label>21</label></formula><formula xml:id="formula_26">)</formula><p>where f c denotes the computational speed of edge servers, and is fixed in the duration of data being processed <ref type="bibr" target="#b23">[24]</ref>.</p><p>It is worth noting that data in SMDs and edge servers are executed in a parallel manner. Thus, the total latency of data of SMD m is obtained as:</p><formula xml:id="formula_27">max{t l m , t c m }<label>(22)</label></formula><p>L m denotes the application latency limit of SMD m. Thus,</p><formula xml:id="formula_28">max{t l m , t c m }≤L m<label>(23)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Energy Consumption Minimization Problem</head><p>According to above discussion, the energy consumption minimization problem is formulated as: arg Min</p><formula xml:id="formula_29">f l m ,P t m ,λm,µm {φ}<label>(24)</label></formula><p>subject to</p><formula xml:id="formula_30">max{t l m , t c m }≤L m<label>(25)</label></formula><formula xml:id="formula_31">M m=1 I m (1 -λ m )α m ≤ Â<label>(26)</label></formula><formula xml:id="formula_32">M m=1 I m (1 -λ m )ζ m ≤ Ĝ<label>(27)</label></formula><formula xml:id="formula_33">α m I m k l m λ m f l m 2 ≤ Êl m (<label>28</label></formula><formula xml:id="formula_34">) M m=1 α m I m k c (1 -λ m ) (f c ) 2 ≤ Êc (<label>29</label></formula><formula xml:id="formula_35">)</formula><formula xml:id="formula_36">0≤λ m ≤1 (30) 0≤µ m ≤1<label>(31)</label></formula><formula xml:id="formula_37">M m=1 µ m =1<label>(32)</label></formula><formula xml:id="formula_38">0≤P t m ≤ P t m (33) 0≤f l m ≤ f l m (34) f l m ∈N +<label>(35)</label></formula><p>It is worth noting that f l m is the speed (cycles/sec.) of SMD m, and therefore, it is an integer variable and limited to a finite set of integers. In addition, P t m , λ m and µ m are continuous variables. According to ( <ref type="formula" target="#formula_15">13</ref>) and ( <ref type="formula">14</ref>), φ is nonlinear with respect to P t m , λ m , f l m and µ m . In addition, ( <ref type="formula" target="#formula_30">25</ref>) and ( <ref type="formula" target="#formula_33">28</ref>) are also nonlinear with respect to P t m , λ m , f l m and µ m according to (6), ( <ref type="formula" target="#formula_6">7</ref>), <ref type="bibr" target="#b9">(10)</ref>, <ref type="bibr" target="#b10">(11)</ref> and <ref type="bibr" target="#b20">(21)</ref>. Therefore, this minimization problem is a constrained mixed integer non-linear program (MINLP) whose solution complexity is NP-hard <ref type="bibr" target="#b24">[25]</ref>. It is pointed out that MINLP suffers from exponential explosion, and no polynomial-time algorithms are available to solve it <ref type="bibr" target="#b25">[26]</ref>. Consequently, meta-heuristic optimization algorithms are adopted to solve it in this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. GENETIC SIMULATED-ANNEALING-BASED PARTICLE</head><p>SWARM OPTIMIZATION (GSP) φ in ( <ref type="formula" target="#formula_29">24</ref>) is nonlinear with respect to f l m , P t m , λ m and µ m . Consequently, it is a nonlinear constrained program. To handle many comlicated constraints, this section adopts a penalty function method <ref type="bibr" target="#b26">[27]</ref> to convert each constraint into a corresponding penalty. Then, the energy consumption minimization problem is converted into an unconstrained one that is further solved by the proposed algorithm named GSP. Let x denote the vector of decision variables including f l m , P t m , λ m and µ m . Then,</p><formula xml:id="formula_39">Min x φ= ∞ N +φ<label>(36)</label></formula><p>In <ref type="bibr" target="#b35">(36)</ref>, φ denotes a new objective function and ∞ N is a large positive constant. is the total penalty of all constraints if they are not met. It is calculated as:</p><formula xml:id="formula_40">= N = p=1 (max{0, -g p (x)}) 0 γ 1 + N = q=1 h q (x) 0 γ 2 (37)</formula><p>In <ref type="bibr" target="#b36">(37)</ref>, N = and N = denote the number of inequality and equality constraints. 0 γ 1 and 0 γ 2 are two positive constants. Each inequality constraint p (1≤p≤N = ) is converted into g p (x)≥0. If it is violated, its penalty is (max{0, -g p (x)}) 0 γ 1 ; otherwise, its penalty is 0. Similarly, each equality constraint q (1≤q≤N = ) is converted into h q (x)=0. If it is violated, its penalty is h q (x) 0 γ 2 ; otherwise, its penalty is 0. For example, <ref type="bibr" target="#b27">(28)</ref> </p><formula xml:id="formula_41">is first transformed into Êl m -α m I m k l m λ m (f l m ) 2 ≥0</formula><p>, and its penalty is</p><formula xml:id="formula_42">(max{0, -( Êl m -α m I m k l m λ m (f l m ) 2 )}) 0 γ 1 .</formula><p>Then, the obtained unconstrained problem is further solved with the proposed GSP, details of which are given later.</p><p>There are several typical deterministic and exact algorithms, e.g., conjugate gradient descent <ref type="bibr" target="#b27">[28]</ref> and dynamic programming <ref type="bibr" target="#b28">[29]</ref>, to solve the unconstrained problem. However, they often rely on certain structures of objective functions. For example, they require the first-order or second-order derivatives. Besides, the quality of their obtained solutions is unsatisfying when they are used to address these problems. Many studies choose typical meta-heuristic optimization algorithms because of their advantages including high robustness, easy implementation, ability to handle labyrinthine discontinuities and nonlinearities, and fast convergence. They can avoid the disadvantages of above-mentioned deterministic algorithms, and therefore, they have been widely used to solve many complex real-life problems. On the other hand, each metaheuristic algorithm owns its advantages and disadvantages.</p><p>For example, PSO has quick convergence but it is easy to trap into local optima when PSO is used to solve constrained problems with complex solution spaces <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b29">[30]</ref>. In addition, SA has a Metropolis acceptance rule that allows moves worsening the value of an objective function. Therefore, it is able to jump from local optima and finally reaches global one by selecting the best cooling rate of temperature. On the other hand, its convergence is very slow <ref type="bibr" target="#b6">[7]</ref>. Besides, genetic operations in GA provide high diversity of individuals, and further improve both accuracy and efficiency of global search <ref type="bibr" target="#b30">[31]</ref>. Therefore, this work combines advantages of three algorithms, and designs a hybrid algorithm named GSP by integrating GA's genetic operations and SA's Metropolis acceptance rule into PSO.</p><p>Particles in PSO change their positions and velocities by using learning experiences of particles and the whole population. |X| denotes the swarm size. v i and x i denote velocity and position of each particle i (i=1, 2, • • •, |X|). Each position includes N D elements. The first M elements store f l m . The next M elements store P t m . The next M elements store λ m . Then, the next M elements store µ m . The last element stores the value of φ. N D denotes the dimension of each position and velocity of each particle. Therefore, N D =4M +1. xi means a locally optimal position of each particle i. Let x denote a globally optimal position of the whole population. Specifically, v i and x i are changed as follows.</p><formula xml:id="formula_43">v i =θ 1 •v i + θ2 w 1 (x i -x i ) + θ2 w 2 (x -x i )<label>(38)</label></formula><formula xml:id="formula_44">x i =x i +v i<label>(39)</label></formula><p>In <ref type="bibr" target="#b37">(38)</ref>, w 1 and w 2 mean two random constants uniformly generated in (0, 1). θ 1 denotes the inertia weight. Coefficients of individual and social acceleration are denoted by θ2 and θ2 , respectively, and they reflect the influence of xi and x.</p><p>In PSO, premature convergence happens, and the process of optimization oscillates if xi and x differ significantly. GA's genetic operations can produce superior particles that enhance PSO's global search ability. Thus, let xi denote a position of a superior particle designed for each particle i. Each superior particle directs the optimization process of PSO. In this work, xi is designed as a combination of xi and x, i.e.,</p><formula xml:id="formula_45">xi = θ2 w 1 xi + θ2 w 2 x θ2 w 1 + θ2 w 2 (40)</formula><p>Then, v i and x i of each particle i are updated as:</p><formula xml:id="formula_46">v i =θ 1 •v i + θ 3 w 3 (x i -x i ) (<label>41</label></formula><formula xml:id="formula_47">)</formula><formula xml:id="formula_48">x i =x i +v i (<label>42</label></formula><formula xml:id="formula_49">)</formula><p>where θ 3 denotes the acceleration coefficient of each superior particle, and w 3 is a vector of random numbers uniformly generated in (0, 1).</p><p>In addition, xi and x are obtained with binary encoding and their positions or velocities are designed as a string of binary bits <ref type="bibr" target="#b31">[32]</ref>. Let θ 5 denote the mutation possibility. The operation of single-point crossover is performed on xi and x to produce an offspring xi for each particle i. Then, the mutation operation is conducted on each bit of xi with a certain probability θ 5 . The above operations can avoid early trap into local optima. Furthermore, the operation of selection is performed to specify whether xi or xi is chosen to direct the search process of each particle i.</p><p>Specifically, if φ(x i )≤ φ(x i ), xi is chosen as a superior particle for each particle i; otherwise, xi is chosen as the superior particle. In this way, a superior particle is chosen for each particle. Let x g i and x g+1 i denote the positions of particle i in iterations g and g+1. Then, x g+1 i is updated as:</p><formula xml:id="formula_50">v i =θ 1 •v i + θ 3 •w 3 • (x i -x g i )<label>(43)</label></formula><formula xml:id="formula_51">x g+1 i =x g i +v i (44) If φ(x g+1 i )≤ φ(x g i ), x g+1 i is selected; otherwise, it is condi- tionally selected if e φ(x g i )-φ ( x g+1 i ) θ g 4 &gt;w 4 (<label>45</label></formula><formula xml:id="formula_52">)</formula><p>where w 4 is a random number uniformly generated in (0,1) and θ g 4 is the temperature in iteration g. GSP combines advantages of GA, SA and PSO by integrating GA's genetic operations on xi and x to produce superior particles, and updating positions of particles with SA's Metropolis acceptance rule. In this way, the search ability of PSO in GSP is improved. Fig. <ref type="figure" target="#fig_1">2</ref> shows the main steps of GSP.</p><p>Algorithm 1 shows the pseudo codes of GSP. Line 1 randomly initializes positions and velocities of particles in PSO. Line 2 updates fitness values ( φ) of particles with <ref type="bibr" target="#b35">(36)</ref>. Line 3 updates xi and x. Line 4 initializes mutation possibility (θ 5 ) of GA, starting temperature (θ 1  4 ) and cooling rate of temperature (θ 7 ) of SA, PSO's parameters including θ2 , θ2 , θ 3 , θ1 , θ1 , θ6 , ĝ, and |X|. ĝ the total number of iterations. Let θ 6 denote the percentage of particles with the same φ. The specified maximum of φ is denoted by θP 4 . Line 6 illustrates that the while loop stops if ĝ is exceeded or θ 6 &gt; θ6 . Line 7 performs GA's crossover operation on xi and x with the operation of single-point crossover to produce an offspring xi . Line 8 conducts GA's mutation operation on each bit of offspring xi with a certain probability θ 5 . Line 9 conducts GA's selection operation to specify whether xi or xi is chosen for each particle i. Line 10 changes velocities of particles in PSO with (43). Line 11 changes positions of particles with SA's Metropolis acceptance rule in (44) and (45). Line 12 calculates fitness values ( φ) of particles by using <ref type="bibr" target="#b35">(36)</ref>. Line 13 changes the locally optimal position (x i ) of each particle i, and the globally optimal position (x) of the population. Besides, θ 1 4 is the starting temperature and θ 7 is the cooling rate of temperature. Line 14 reduces temperature by θ 7 . Let θ1 and θ1 denote upper and lower limits of inertia weight θ 1 , respectively. Line 15 reduces 1 linearly from θ1 to θ1 . Line 16 updates percentage (θ 6 ) of particles with the same φ. Line 19 returns x and converts it into decision variables  Calculate fitness values ( φ) of particles by using <ref type="bibr" target="#b35">(36)</ref> 13:</p><p>Change the locally optimal position (x i ) of each particle i, and the globally optimal position (x) of the population 14:</p><formula xml:id="formula_53">θ g 4 ← θ g 4 •θ 7</formula><p>15:</p><formula xml:id="formula_54">θ 1 ← ( θ1 -θ1 )• ĝ-g ĝ + θ1</formula><p>16:</p><p>Update percentage (θ 6 ) of particles with the same φ 17:</p><p>g ← g + 1 18: end while 19: return x including f l m , P t m , λ m and µ m . Furthermore, this work gives the complexity analysis of Algorithm 1 as follows. In Algorithm 1, the running overhead is mainly caused by the while loop. The loop in the worst case terminates after ĝ iterations. As shown in Lines 7-17, the time complexity in each iteration of GSP is O(|X|N D ). In addition, it is worth noting that N D =4M +1, and therefore the time complexity in each iteration is O(|X|(4M +1)). Thus, the time complexity of Algorithm 1 is O(ĝ|X|M ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. PERFORMANCE EVALUATION</head><p>This section presents the evaluation results of GSP by using real-life data collected from Google cluster for 24 hours 1 Based on the data, input data (bits) for five SMDs are simulated and produced. Here, the length of each time slot is 5 minutes, and therefore, there are 288 time slots in Fig. <ref type="figure" target="#fig_3">3</ref> that shows input data of five SMDs. GSP is coded in MATLAB 2018 and it is executed in a server with a 12-GB DDR4 memory and an AMD A8-4500M APU with Radeon (tm) HD Graphics processor at 1.90 GHz.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Parameter Setting</head><p>According to <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b22">[23]</ref>, parameters of SMDs and edge servers are given as follows. In addition, the number of SMDs, M , varies from 1 to 13. Besides, W U =W D =10 MHZ, h 1 =h 2 =0.98, N 0 =1.6×10 -11 , f c =8×10 8 cycles/sec., 1 https://github.com/google/cluster-data (accessed on June 18, 2020).  -27 , and Êc =20 J. In addition, parameters of each SMD m are set as follows.</p><formula xml:id="formula_55">P F =0.1 W, v=4, β 1 =1, β 2 =0.2, Â=8×10 9 cycles/sec., Ĝ=2048 GB, k c =10</formula><formula xml:id="formula_56">f l m =4×10 8 cycles/sec., P t m =0.1 W, f l m =4×10 8 cycles/sec., P t m =0.1 W, d m =50, P 0 m =0.4 W, k t m =18, k l m =10 -26 , P r m =0.4 W, α m =40, L m =4, ζ m =0</formula><p>.06, and Êl m =1.8 J (1≤m≤M ). It is worth noting that typical meta-heuristic optimization algorithms are sensitive to the setting of their parameters. Therefore, according to existing studies <ref type="bibr" target="#b32">[33]</ref>, <ref type="bibr" target="#b33">[34]</ref>, a method of Taguchi's design is conducted to investigate the best combination of parameters of GSP. Finally, parameters of GSP are given as follows. θ2 =0.5, θ2 =0.5, θ 3 =1.496, θ1 =0.95, and θ1 =0.4. θ 5 =0.01, θ 1 4 =10 8 and θ 7 =0.95. In addition, θ6 =95%, ĝ=10 3 , |X|=100,</p><formula xml:id="formula_57">∞ N =10 10 , 0 γ 1 =2, and 0 γ 2 =1.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Experimental Results</head><p>Fig. <ref type="figure">4</ref> shows the energy consumption and penalty of the formulated problem in each time slot. It is shown that the penalty is 0 in each time slot, and this demonstrates that constraints in the formulated optimization problem are strictly met. Fig. <ref type="figure">5</ref> illustrates the effect of the maximum number of CPU cycles ( Â) in edge servers on the energy consumption of all SMDs with different number (M ) of SMDs and number (S) of channels. Here, the number of bits in the input data for SMD m (1≤m≤M ) is 5 MB, i.e., I m =5 MB.</p><p>It is shown that given the same M and S, the energy consumption reduces as Â increases at first, and keeps stable. The reason is that when Â is insufficient and a bottleneck resource at first, more tasks need to be executed in SMDs and therefore, the energy consumption is larger. When Â increases to a certain level and is sufficient, the energy consumption is mainly dominated by the communication resource, i.e., S channels. Then, it keeps stable even if Â increases due to the latency limit in <ref type="bibr" target="#b22">(23)</ref>. In addition, given the same Â and M , the energy consumption is lower when S is larger, e.g., S=64. The reason is that when there are more channels, the communication resources suffice and more tasks are executed in edge servers and the energy consumption is lower accordingly. Furthermore, given the same Â and S, the energy consumption is lower when M is smaller, i.e., M =12. The reason is that more energy is consumed when there are more SMDs.</p><p>Fig. <ref type="figure" target="#fig_5">6</ref> shows the energy consumption with respect to different number of SMDs. Here, the maximum number of CPU cycles in edge servers is 8×10 9 cycles/sec., i.e., Â=8×10 9 cycles/sec. It is shown that the energy consumption increases as M increases. In addition, there is an interesting inflection point, e.g., A, B or C, for each curve in Fig. <ref type="figure" target="#fig_5">6</ref>, after which, each curve shows nearly linear increasing trend with the number of SMDs. The reason is that for minimizing the energy consumption, some SMDs with less channel bandwidth have to execute more tasks by themselves while others with more channel bandwidth offload more tasks to edge servers. Therefore, when the number of SMDs reaches the inflection point in each curve, the energy consumption of all SMDs starts to increase nearly linearly as M continues to increase. The reason is that the bandwidth of all channels becomes a bottleneck after the inflection points and tasks of more SMDs have to be executed locally. Fig. <ref type="figure">7</ref> shows the amount of data executed in edge servers with respect to d m . Here, five SMDs are considered, i.e., 1≤m≤5. In addition, I 1 =2 MB, I 2 =4 MB, I 3 =6 MB, I 4 =8 MB and I 5 =10 MB. It is shown that the amount of data handled in edge decreases as d m (1≤m≤5) increases. The reason is that when d m increases, uplink and downlink rates of SMD m become lower, and the time and energy consumed by transmission of uploaded and downloaded data become higher if the ratio of bits executed in SMDs or edge servers keeps the same. Therefore, to reduce the total energy consumption and guarantee the application latency limit of SMDs, more data need to be processed in edge servers.</p><p>Fig. <ref type="figure">8</ref> shows the total energy consumption of 15 SMDs with respect to the application latency limit of SMD m, L m  and the maximum number of CPU cycles in edge servers, Â. It is shown that the total energy consumption reduces as Â increases and L m becomes larger. The reason is that more data are processed in edge servers when L m and Â increase, and therefore, the total energy consumption of 15 SMDs decreases. Especially, when L m is very small, more data are processed in SMDs because long transmission time is caused if more data are done in edge servers and the latency limits are violated. The increase of L m makes SMDs tolerant to long transmission time because latency limits can be still met.</p><p>Figs. 9(a)-9(c) illustrate the total energy consumption, edge servers' and SMDs' energy consumption with respect to d m , respectively. It is shown that the energy consumption of edge servers reduces and that of SMDs increases as d m increases. The reason is that as shown in Fig. <ref type="figure">7</ref>, less data are executed in edge servers, and therefore, less energy consumption is caused to edge servers. In addition, more data is done in SMDs, and therefore, less energy consumption is caused to SMDs. Especially, the SMD with 2 MB has small data that is completely processed by itself. Therefore, the energy consumption of SMDs and edge servers for the SMD with 2 MB keeps stable as d m increases.</p><p>To demonstrate the performance of GSP, this section comit with its two typical meta-heuristic optimization algorithms including SA-based PSO (SAPSO), GA and SA. The reasons for selecting them for comparison are given as follows.</p><p>1) SAPSO <ref type="bibr" target="#b34">[35]</ref>, <ref type="bibr" target="#b35">[36]</ref> combines advantages of SA and PSO, and it owns fast convergence of PSO and high search accuracy of SA. Thus, the comparison between GSP and SAPSO can prove the convergence speed of GSP. 2) GA <ref type="bibr" target="#b36">[37]</ref> has genetic operations including selection, crossover and mutation, and good ability to handle various complex problems. Therefore, it has high diversity of individuals and high convergence accuracy. Thus, the comparison between GSP and GA can prove accuracy of a final solution obtained by GSP. 3) SA <ref type="bibr" target="#b37">[38]</ref> can find a global optimum theoretically by carefully setting the temperature cooling rate. The reason is that SA can conditionally jump out of locally optima. Fig. <ref type="figure" target="#fig_8">10</ref> shows the energy consumption comparison of GSP, SAPSO, GA and SA with different number of SMDs, respectively. It is shown that the energy consumption of GSP is the least among four algorithms when the number of SMDs varies from 1 to 13. In addition, it is shown that the energy consumption of GSP increases nearly linearly, and its reduction of energy consumption is larger compared with SAPSO, GA and SA as the number of SMDs increases.</p><p>Figs. <ref type="figure" target="#fig_9">11</ref> and<ref type="figure" target="#fig_10">12</ref> show convergence curves of energy consumption and penalty of three algorithms with 5 SMDs. As shown in Fig. <ref type="figure" target="#fig_0">11</ref>, GA converges to its final solution in the fewest number <ref type="bibr" target="#b32">(33)</ref> of iterations compared with GSP and SAPSO. Nevertheless, its final solution is the worst because its energy consumption and penalty are the largest. SAPSO is the slowest and requires 880 iterations to converge to its final solution. Its energy consumption is 11.75% smaller than that of GA but still larger than that of GSP. SA needs 661 iterations to converge to its final solution. Its energy consumption is 30.61% larger than that of GSP. Finally, GSP only requires 588 iterations to converge to its final solution with the least energy consumption. Thus, GSP achieves the least energy consumption in much fewer iterations than SAPSO and SA.   Fig. <ref type="figure" target="#fig_3">13</ref> shows the energy consumption comparison of GSP, SAPSO, GA and SA, respectively. It is clearly shown that the energy consumption of SA and GA is larger than that of SAPSO and GSP in each time slot, and therefore, their performance is the worst. The reason is that GA has many key parameters, e.g., population size, mutation and crossover rates, to carefully set. In addition, GA is often time-consuming when it is applied to complicated optimization problems, and therefore, it cannot converge to high-quality results in a preset number of iterations. Similar to GA, SA fails to converge to a high-quality solution. In addition, it is shown that the energy consumption of SAPSO is smaller than that of GA and SA yet larger than that of GSP in most of time slots. The reason is that SAPSO only finds a locally optimal solution compared with GSP. Finally, the energy consumption of GSP is the least among all tested algorithms in each time slot. Specifically, compared with GA, SA and SAPSO, the energy consumption of GSP is decreased by 39.04%, 39.52% and 32.81% on average, respectively. Total energy (φ) consumed by all SMDs and edge servers corresponding to GSP, SAPSO, GA and SA, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. DISCUSSION</head><p>This section discusses our results, and points out potential extensions of the proposed partial computation offloading method. First, the proposed method differs from existing ones in that it reduces the total energy consumption (φ) of SMDs and edge servers by jointly optimizing offloading ratio (λ m ) of data, CPU speeds (f l m ) of SMDs, allocated bandwidth (µ m ) of uplink/downlink channels, and transmission power (P t m ) of SMDs. In addition, the proposed method jointly considers limits of latency (L m ), computational speeds of CPU ( f l m ), transmission power limits ( P t m ) of uplink/downlink channels, maximum energy ( Êl m ) of SMDs, and available number of CPU ( Â) and memory ( Ĝ) resources in edge servers. In the experimental results, Figs. 5-10 demonstrate that the proposed method effectively reduces the total energy consumption (φ) of all SMDs and edge servers under different settings of parameters including Â, M , L m and d m . In addition, Figs. 11-13 prove that the proposed method achieves less energy consumption of all SMDs and edge servers in less convergence time compared with its three state-of-the-art peers. It is also shown in Figs. 11-13 that the proposed method performs better than its peers under a dynamic amount of input data that varies from a time slot to another. The effects of other parameters, e.g., Ĝ, of the proposed method are similar to those shown in Figs. 5-10, and therefore, are omitted due to space limit.</p><p>Second, the optimization objective of the formulated problem is to minimize the total energy consumption of all SMDs and edge servers. It is worth noting that some other important optimization objectives could also be considered. For example, SMDs and edge servers may have different benefits and optimization objectives, which can be in conflict. One major concern of SMDs is latency optimization of their tasks, and they need edge server providers to provide more transmission bandwidth of uplink and downlink channels, and more CPU and memory resources in edge servers. This inevitably increases the energy consumption of edge server providers. On the other hand, edge server providers aim to minimize the energy and resource consumption of edge servers while guaranteeing performance of executing users' tasks. Therefore, a two-stage Stackelberg game could be further designed for both parties including SMDs and edge server providers. By providing theoretical analysis and solutions to such a game, a Nash equilibrium could be obtained and it is a status where the energy and resource consumption of edge server providers is minimized and so is latency of SMDs' tasks.</p><p>Third, the proposed method's complexity mainly depends on the number of SMDs, total number of iterations and swarm size of GSP. Therefore, as shown in Figs. <ref type="figure" target="#fig_5">6</ref> and<ref type="figure" target="#fig_8">10</ref>, the number of SMDs greatly affects the performance of the proposed method. It is worth noting that when the number of SMDs is large, e.g., 1000 or more, the dimension of the vector of decision variables is also increasing. Then, the optimization process of GSP for obtaining the final partial computation offloading of SMDs' tasks is time-consuming, and the application latency limit (L m ) of SMD m may not be met strictly. Thus, in this case, it is essential to perform distributed optimization by designing multiple edge computing schedulers to handle many tasks from a great number of SMDs in parallel. Each edge computing scheduler is located in a separated location, and monitors local information about its SMDs, uplink and downlink channels, statuses of its respective edge servers, etc. It simultaneously makes partial computation offloading and resource provisioning for tasks from SMDs in its close vicinity, and tackles deficiency of its currently available resources. In this way, tasks of multiple SMDs within each edge computing scheduler are scheduled in a distributed manner, and they are completed by their specified deadlines. Furthermore, multiple edge computing schedulers can follow an optimal strategy obtained from a Nash equilibrium of a constrained stochastic game, and then they can also offload their local tasks of nearby SMDs to each other. In this way, latency of tasks can be strictly limited and the total energy consumption of all SMDs and edge servers can be minimized. In addition, a single point of failure/bottleneck of a centralized edge computing scheduler can be mitigated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>Smart mobile devices (SMDs) have been receiving great attention due to their high-quality graphics, compact design and enabling customized applications. These applications require larger memory and battery power, but SMDs only own limited resources and battery power. Thus, they cannot completely support resource-hungry applications. To tackle this problem, partial computation offloading is becoming a promising alternative to offload some tasks of applications to high-performance edge servers, but it also causes high communication cost and large latency. Thus, it is a big challenge to provide energy-efficient and lower-latency services to SMDs. This work proposes a partial computation offloading strategy to minimize the total energy consumed by all SMDs and edge servers. It jointly optimizes task offloading ratio, CPU speeds and transmission power of each SMD, and bandwidth of available channels. It jointly considers many constraints including latency, CPU cycles and memories of edge servers, available energy, and computational speed of CPUs and transmission power of each SMD. This work formulates a nonlinear constrained optimization problem and solves it by a hybrid metaheuristic algorithm named Genetic Simulated-annealing-based Particle swarm optimization. Realistic data-driven simulation results prove that it achieves lower energy consumption than three state-of-the-art optimization algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>1 Fig. 1 .</head><label>11</label><figDesc>Fig. 1. Illustrative computation offloading architecture (The circle, square and star markers represent tasks/responses corresponding to SMDs 1, 2 and M .).</figDesc><graphic coords="3,202.58,602.73,91.71,61.54" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Main steps of GSP</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>7 : 8 : 9 :</head><label>789</label><figDesc>Conduct GA's crossover operation on xi and x with the operation of single-point crossover to produce an offspring xi Conduct GA's mutation operation on each bit of the offspring xi with a certain probability θ 5 Conduct GA's selection operation to specify whether xi or xi is chosen for each particle i 10: Change velocities of particles in PSO with (43) 11: Change positions of particles with SA's Metropolis acceptance rule in (44) and (45) 12:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Number of input bits of five SMDs in 288 time slots.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .Fig. 5 .</head><label>45</label><figDesc>Fig. 4. Total energy (φ) consumed by all SMDs and edge servers, and total penalty ( ) of all constraints in each time slot.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Total energy (φ) consumed by all SMDs and edge servers with respect to different settings of parameter M .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig.7. Amount of data executed in edge servers with respect to different settings of distance (dm) from each SMD m to its serving edge server.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 9 .</head><label>9</label><figDesc>Fig.9. Total energy consumption (φ), edge servers' and SMDs' energy consumption with respect to different settings of distance (dm) from each SMD m to its serving edge server.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Total energy consumption (φ) of GSP, SAPSO, GA and SA with respect to different number of SMDs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Evolutionary curves of total energy consumption (φ) in each iteration corresponding to GSP, SAPSO, GA and SA, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>Fig.<ref type="bibr" target="#b11">12</ref>. Evolutionary curves of total penalty ( ) of all constraints in each iteration corresponding to GSP, SAPSO, GA and SA, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>Fig.<ref type="bibr" target="#b12">13</ref>.Total energy (φ) consumed by all SMDs and edge servers corresponding to GSP, SAPSO, GA and SA, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Algorithm 1 GSP 1: Initialize velocities and positions of particles randomly 2: Update fitness values ( φ) of particles with (36) 3: Update xi and x 4: Initialize θ 5 of GA, θ 1 4 and θ 7 of SA, and PSO's parameters including θ2 , θ2 , θ 3 , θ1 , θ1 , θ6 , ĝ, and |X| 5: g ← 1 6: while θ 6 ≤ θ6 and g≤ĝ do</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 02:19:24 UTC from IEEE Xplore. Restrictions apply.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the Major Science and Technology Program for Water Pollution Control and Treatment of China under Grant 2018ZX07111005, in part by the National Natural Science Foundation of China (NSFC) under Grants 61703011 and 61802015, and in part by the National Defense Pre-Research Foundation of China under Grants 41401020401 and 41401050102.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Real-Time Manufacturing Machine and System Performance Monitoring Using Internet of Things</title>
		<author>
			<persName><forename type="first">M</forename><surname>Saez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Maturana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Barton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Tilbury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1735" to="1748" />
			<date type="published" when="2018-10">Oct. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Privacy-Preserving Outsourced Speech Recognition for Smart IoT Devices</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="8406" to="8420" />
			<date type="published" when="2019-10">Oct. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Voice Controlled Home Automation System Using Natural Language Processing (NLP) and Internet of Things (IoT)</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Rani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bakthakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P</forename><surname>Kumaar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">P</forename><surname>Kumaar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2017 Third International Conference on Science Technology Engineering &amp; Management</title>
		<meeting>2017 Third International Conference on Science Technology Engineering &amp; Management<address><addrLine>Chennai</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="368" to="373" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">What Type of Content are Smartphone Users Addicted to?: SNS vs. games</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Yum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers in Human Behavior</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="10" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A Computation Offloading Method over Big Data for IoT-enabled Cloudedge Computing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Qi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="page" from="522" to="533" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Energy-Optimal Multiple Access Computation Offloading: Signalling Structure and Efficient Communication Resource Allocation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Salmani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Davidson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Signal Processing</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="1646" to="1661" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A Simulated Annealing Heuristic for the Hybrid Vehicle Routing Problem</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">Y</forename><surname>Vincent</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Redi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">A</forename><surname>Hidayat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">J</forename><surname>Wibowo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="119" to="132" />
			<date type="published" when="2017-04">Apr. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Particle Swarm Optimization Algorithm: An Overview</title>
		<author>
			<persName><forename type="first">D</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soft Computing</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="387" to="408" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Genetic Particle Swarm Optimizationbased Energy-optimized Partial Computation Offloading in Mobile Edge Computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Duanmu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. The 3rd IFAC Workshop on Cyber-Physical &amp; Human Systems</title>
		<meeting>The 3rd IFAC Workshop on Cyber-Physical &amp; Human Systems<address><addrLine>Shanghai, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Joint Computation Offloading and User Association in Multi-Task Mobile Edge Computing</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Maharjan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Vehicular Technology</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="12313" to="12325" />
			<date type="published" when="2018-12">Dec. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Computation Offloading Method over Big Data for IoT-enabled Cloudedge Computing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Qi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="page" from="522" to="533" />
			<date type="published" when="2019-06">Jun. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Computation Rate Maximization for Wireless Powered Mobile-Edge Computing With Binary Computation Offloading</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Wireless Communications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="4177" to="4190" />
			<date type="published" when="2018-06">Jun. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Computation Offloading and Resource Allocation in Wireless Cellular Networks With Mobile Edge Computing</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">R</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Wireless Communications</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="4924" to="4938" />
			<date type="published" when="2017-08">Aug. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A Cooperative Partial Computation Offloading Scheme for Mobile Edge Computing Enabled Internet of Things</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ning</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="4804" to="4814" />
			<date type="published" when="2019-06">Jun. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Energy-Optimal Mobile Cloud Computing under Stochastic Wireless Channel</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kilper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">O</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Wireless Communications</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="4569" to="4581" />
			<date type="published" when="2013-09">Sept. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Energy-Latency Tradeoff for Energy-Aware Offloading in Mobile Edge Computing Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="2633" to="2645" />
			<date type="published" when="2018-08">Aug. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Energy-Saving Offloading by Jointly Allocating Radio and Computational Resources for Mobile Edge Computing</title>
		<author>
			<persName><forename type="first">P</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Nie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="11255" to="11268" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">3D Shape Reconstruction of Lumbar Vertebra from Two X-ray Images and a CT Model</title>
		<author>
			<persName><forename type="first">L</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/CAA Journal of Automatica Sinica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1124" to="1133" />
			<date type="published" when="2020-07">Jul. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Securing Parked Vehicle Assisted Fog Computing with Blockchain and Optimal Smart Contract Design</title>
		<author>
			<persName><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Shu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/CAA Journal of Automatica Sinica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="426" to="441" />
			<date type="published" when="2020-03">Mar. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A Comprehensive Survey on Internet of Things (IoT) Toward 5G Wireless Systems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Chettri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="16" to="32" />
			<date type="published" when="2020-01">Jan. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Joint Optimization of Radio and Computational Resources for Multicell Mobile-Edge Computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sardellitti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scutari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Barbarossa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Signal and Information Processing over Networks</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="89" to="103" />
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Optimization of Radio and Computational Resources for Energy Efficiency in Latency-Constrained Application Offloading</title>
		<author>
			<persName><forename type="first">O</forename><surname>Munoz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pascual-Iserte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vidal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Vehicular Technology</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="4738" to="4755" />
			<date type="published" when="2015-10">Oct. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Mobile-Edge Computing: Partial Computation Offloading Using Dynamic Voltage Scaling</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Communications</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="4268" to="4282" />
			<date type="published" when="2016-10">Oct. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Joint Resource Allocation and Offloading Strategies in Cloud Enabled Cellular Networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kamoun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Labidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarkiss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2015 IEEE International Conference on Communications (ICC)</title>
		<meeting>2015 IEEE International Conference on Communications (ICC)<address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="5529" to="5534" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Global Optimization Advances in Mixed-Integer Nonlinear Programming, MINLP, and Constrained Derivative-Free Optimization, CDFO</title>
		<author>
			<persName><forename type="first">F</forename><surname>Boukouvala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Misener</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Floudas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">252</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="701" to="727" />
			<date type="published" when="2016-08">Aug. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Mixed-Integer Nonlinear Optimization</title>
		<author>
			<persName><forename type="first">P</forename><surname>Belotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kirches</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Leyffer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Linderoth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Luedtke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mahajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Numerica</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1" to="131" />
			<date type="published" when="2013-04">Apr. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A Symbiotic Organisms Search Algorithm with Adaptive Penalty Function to Solve Multi-objective Constrained Optimization Problems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Panda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="344" to="360" />
			<date type="published" when="2016-09">Sept. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A Novel Conjugate Gradient Method with Generalized Armijo Search for Efficient Training of Feedforward Neural Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">275</biblScope>
			<biblScope unit="page" from="308" to="316" />
			<date type="published" when="2018-01">Jan. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Adaptive Dynamic Programming for Discrete-Time Zero-Sum Games</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Neural Networks and Learning Systems</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="957" to="969" />
			<date type="published" when="2018-04">Apr. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A Review on Swarm Intelligence and Evolutionary Algorithms for Solving Flexible Job Shop Scheduling Problems</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">Z</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">G</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">Y</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">K</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/CAA Journal of Automatica Sinica</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="875" to="887" />
			<date type="published" when="2019-07">Jul. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Kernel-based Fuzzy c-means Clustering Algorithm Based on Genetic Algorithm</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Fu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">188</biblScope>
			<biblScope unit="page" from="233" to="238" />
			<date type="published" when="2016-05">May 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Optimal Decision Model and Improved Genetic Algorithm for Disposition of Hierarchical Facilities under Hybrid Service Availability</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Teng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Industrial Engineering</title>
		<imprint>
			<biblScope unit="volume">130</biblScope>
			<biblScope unit="page" from="420" to="429" />
			<date type="published" when="2019-04">Apr. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Dendritic Neuron Model With Effective Learning Algorithms for Classification, Approximation, and Prediction</title>
		<author>
			<persName><forename type="first">S</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yachi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Neural Networks and Learning Systems</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="601" to="614" />
			<date type="published" when="2019-02">Feb. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Design of Experiments and Focused Grid Search for Neural Network Parameter Optimization</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Pontes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">F</forename><surname>Amorim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">P</forename><surname>Balestrassi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Paiva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Ferreira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">186</biblScope>
			<biblScope unit="page" from="22" to="34" />
			<date type="published" when="2016-04">Apr. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">TTSA: An Effective Scheduling Approach for Delay Bounded Tasks in Hybrid Clouds</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cybernetics</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="3658" to="3668" />
			<date type="published" when="2017-11">Nov. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Temporal Task Scheduling With Constrained Service Delay for Profit Maximization in Hybrid Clouds</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="337" to="348" />
			<date type="published" when="2017-01">Jan. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Genetic Algorithm Based Model for Optimizing Bank Lending Decisions</title>
		<author>
			<persName><forename type="first">N</forename><surname>Metawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Hassan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Elhoseny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Systems with Applications</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="75" to="82" />
			<date type="published" when="2017-09">Sept. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A Simulated Annealing Global Maximum Power Point Tracking Approach for PV Modules under Partial Shading Conditions</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lyden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Haque</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Power Electronics</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="4171" to="4181" />
			<date type="published" when="2016-06">Jun. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">He has over 70 publications in international journals and conference proceedings, including ACM TOIT, IEEE TCC, IEEE TASE, IEEE TSC, IEEE TII and IEEE TCYB. His research interests include cloud computing, edge computing, data centers, big data, machine learning, deep learning and optimization algorithms</title>
		<author>
			<persName><forename type="first">Jing</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">;</forename><forename type="middle">B S</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Ph</forename><forename type="middle">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Yuan was the recipient of the 2011 Google Excellence Scholarship and the recipient of the Best Paper Award-Finalist in the 16th IEEE International Conference on Networking, Sensing and Control. Shuaifei Duanmu is currently a Master student in the Faculty of Information Technology</title>
		<meeting><address><addrLine>Beijing, China; Beijing, China; Beijing, China; Newark, NJ, USA; Beijing, China; Newark, NJ, USA; Shenyang, China; China; Beijing, China; Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">2020. 2010 and 2012</date>
		</imprint>
		<respStmt>
			<orgName>Computer Science from Northeastern University, Shenyang, China. She was a Post-doc researcher at Department of Automation, Tsinghua University ; Beijing Research Institute of Electronic Engineering Technology ; Electrical and Computer Engineering, New Jersey Institute of Technology ; School of Software Engineering, Beijing University of Technology ; D. degree in Computer Engineering from New Jersey Institute of Technology (NJIT ; Science and Electrical Engineering, Beihang University, Beijing ; Beijing Jiaotong University ; School of Software Engineering, Beijing University of Technology</orgName>
		</respStmt>
	</monogr>
	<note>Before that, he received his Ph.D. degree in Modeling Simulation Theory and Technology from Beihang University, Beijing, China in 2016 and the M.S. and B.S. degrees in Software Engineering from Northeastern University. Before that, he received his B.S. degree in Software Engineering form Henan University of Technology in 2018. His research interests include cloud computing, data center, task scheduling, computation offloading. intelligent optimization algorithms, machine learning, and reinforcement learning</note>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">He joined New Jersey Institute of Technology (NJIT), Newark, NJ in 1990, and is now a Distinguished Professor of Electrical and Computer Engineering. He has over 800 publications including 12 books, 500+ journal papers (400+ in IEEE transactions), 26 patents and 28 book-chapters. His research interests are in Petri nets, intelligent automation, Internet of Things, big data, web services, and intelligent transportation</title>
		<author>
			<persName><forename type="first">Mengchu</forename><surname>Zhou</surname></persName>
		</author>
		<idno>S&apos;88-M&apos;90-SM&apos;93-F&apos;03) re- ceived his B.S</idno>
	</analytic>
	<monogr>
		<title level="m">He is presently Associate Editor of IEEE Transactions on Intelligent Transportation Systems, IEEE Internet of Things Journal, and IEEE Transactions on Systems, Man, and Cybernetics: Systems</title>
		<meeting><address><addrLine>Troy, NY</addrLine></address></meeting>
		<imprint>
			<publisher>AAAS) and Chinese Association of Automation (CAA</publisher>
			<date type="published" when="1983">1983. 1990</date>
		</imprint>
		<respStmt>
			<orgName>Control Engineering from Nanjing University of Science and Technology, Nanjing ; Beijing Institute of Technology, Beijing ; Computer and Systems Engineering from Rensselaer Polytechnic Institute</orgName>
		</respStmt>
	</monogr>
	<note>CAA Journal of Automatica Sinica. Abdullah Abusorrah (SM&apos;14) is a Professor in the Department of Electrical and Computer Engineering at King Abdulaziz University. He is the head of the Center for Renewable Energy and Power Systems at King Abdulaziz University. His field of interest includes energy systems, smart grid and system analyses. He received his PhD degree in Electrical Engineering from the University of Nottingham in United Kingdom in 2007</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
