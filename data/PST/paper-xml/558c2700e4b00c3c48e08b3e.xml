<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Submodularity Beyond Submodular Energies: Coupling Edges in Graph Cuts</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Stefanie</forename><surname>Jegelka</surname></persName>
							<email>jegelka@tuebingen.mpg.de</email>
							<affiliation key="aff0">
								<orgName type="department">Max Planck Institutes Tübingen</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jeff</forename><surname>Bilmes</surname></persName>
							<email>bilmes@ee.washington.edu</email>
							<affiliation key="aff1">
								<orgName type="institution">University of Washington</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Submodularity Beyond Submodular Energies: Coupling Edges in Graph Cuts</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">07D17B1ADF66433D43B5C8BB124A6FAE</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We propose a new family of non-submodular global energy functions that still use submodularity internally to couple edges in a graph cut. We show it is possible to develop an efficient approximation algorithm that, thanks to the internal submodularity, can use standard graph cuts as a subroutine. We demonstrate the advantages of edge coupling in a natural setting, namely image segmentation. In particular, for finestructured objects and objects with shading variation, our structured edge coupling leads to significant improvements over standard approaches.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>For many years, Markov random fields (MRF) have been seen as a natural fit to solve various problems in computer vision <ref type="bibr" target="#b11">[12]</ref>. In such models, finding a maximizing assignment of random variable values corresponds to minimizing a Gibbs energy. This minimization is in general not only NP-hard, but some models do not even admit any nontrivial approximation guarantees <ref type="bibr" target="#b4">[5]</ref>. Consequently, for image processing, some early researchers considered MRFs destined for no more than a theoretical curiosity.</p><p>Recently, subclasses of MRFs were shown to be not only easy to exactly optimize (without a tree-width restriction) but also quite naturally applicable to many computer vision problems <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b22">23]</ref>. Specifically, finding the minimum energy configuration is very efficient for those Gibbs energy functions whose variable assignment costs correspond exactly to cut costs in an appropriate graph <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b22">23]</ref>. Graph cuts are now successfully used in segmentation, stereo matching, and texture synthesis, among others.</p><p>Inspired by these results, a principal goal has become identifying the most general classes of energies that can be exactly optimized either directly or indirectly via graph cuts. For example, while some binary pairwise potential functions can be solved exactly using graph cuts, in many cases higher order (e.g., k-ary) potential functions <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b32">33]</ref> and potentials functions over non-binary variables <ref type="bibr" target="#b3">[4]</ref> can also be solved efficiently. In all cases, a critical property known as "regularity" <ref type="bibr" target="#b22">[23]</ref> (more generally, submodularity <ref type="bibr" target="#b8">[9]</ref>) is used.</p><p>Unfortunately, there are critical deficiencies when graph cuts are used in practice, partly stemming from their inability to represent more than only a limited class of energies <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b32">33]</ref>. The core issue is that graph cuts model an energy that decomposes into pairwise terms with nonnegative weights. The direct use of such energies can cause insurmountable over-smoothing in image segmentation. While some higher order energies are graph-representable, this representation might regrettably require additional variables which also might not remain computationally feasible <ref type="bibr" target="#b32">[33]</ref>. Recent research, therefore, has aimed to identify practically manageable higher order energies <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b23">24]</ref>, and to develop efficient optimization methods for non-submodular potentials <ref type="bibr" target="#b21">[22]</ref>.</p><p>In this work, we define a new powerful class of arbitrarily high order non-submodular energy functions that abandons neither the existence of an underlying graph, nor the use of submodularity, nor practical efficiency. This class is structurally and conceptually very different from the recently considered potentials in <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b23">24]</ref>. To wit, we make the following critical observation: graph cut based energy functions can be significantly enhanced if the cost of the edges that constitute a cut is measured not merely based on the sum of the edge weights. Rather, in our work, any or all the edges in a graph may interplay in complex ways. Formally, let G = (V, E) be a graph where each (s, t)-cut induces an assignment of pixel labels. We replace the usual cut cost (the sum of edge weights) by a submodular cut cost, and we therefore say that the edges themselves may cooperate <ref type="bibr" target="#b29">[30]</ref>. Doing so introduces the following problem: Definition 1 (Minimum Cooperative Cut). Given a graph G = (V, E) and a nondecreasing submodular function f : 2 E → R + defined on subsets of edges E, find an (s, t)-cut Γ ⊆ E having minimum cost f (Γ).</p><p>As shown below, the equivalent energy functions are not in general submodular and cooperative cut is NP-hard, even though submodularity is, in a sense, "internal" to our problem as will be seen. The graph structure is key to obtain an efficient approximation algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>original user labels</head><p>Canny edge detector unary terms Rand. Walker <ref type="bibr" target="#b10">[11]</ref> curvature reg. <ref type="bibr" target="#b6">[7]</ref> Graph Cut <ref type="bibr" target="#b1">[2]</ref> CoopCut Figure <ref type="figure">1</ref>. Segmentation results for an image with shading. The task is difficult despite many labels. All algorithms used the same unary terms, except for the Random Walker, which got enhanced seeds (green). Column 4 is the segmentation obtained from unary terms alone.</p><p>Edge cooperation naturally captures information that is missed by many existing approaches, such as global features of object boundaries in a segmentation. For example, consider the vacuum cleaner in Figure <ref type="figure">1</ref> (left): low contrast makes the tube difficult to identify, so that either background is included in the foreground, or parts of the tube are cut off. Such incorrect boundaries (chosen due to shortcutting) are qualitatively different from the correct boundary between the patterned carpet and the vacuum cleaner. We maintain that the boundary is "congruous": along it lies a repetitive pattern made up from the few adjoining texture types that, if properly represented, can help boundary identification. By globally coupling boundary sub-segments across lighted and shaded regions, such congruity can be exploited, and this is easily expressible by cooperative cuts as we show below.</p><p>More specifically, we show: 1) a new class of powerful energy functions having arbitrarily high order, where the potential functions and maximum order may automatically and efficiently adapt to each image; 2) an optimization method that is remarkably efficient and practical, and that uses standard graph cuts as a subroutine; 3) theoretical approximation guarantees for our optimization method; 4) a specific edge-cooperative potential for segmenting considerably difficult images that, compared to graph cuts, reduces the segmentation error by up to 70%. In particular, we show significant improvements on images having the potential for a severe shrinking bias problem, on images that possess light intensity gradients and shadows, and on images with both these difficulties simultaneously. Finally, we relate edge cooperation to other recent approaches in computer vision.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Background: Graph Cuts &amp; Gibbs Energies</head><p>Before describing cooperative cuts, we recall the relationship between graph cuts and energies and in doing so define our notation. Labeling image pixels is often formulated as inference in an MRF. For each pixel i in an image I, a random variable takes values from a set L of labels. For simplicity, we consider only binary labels (|L| = 2). A Gibbs energy E(x; z) over labelings x = {x 1 , . . . , x |I| } ∈ L |I| defines the probability p(x|z) ∝ exp(-E(x; z)) of a labeling given observed pixel values z. The energy decomposes into a sum of unary potential functions, making a connection to the image z, and a sum of clique potentials {ψ C : C ∈ C}, where C is the set of maximal cliques in the MRF. That is,</p><formula xml:id="formula_0">E(x; z) = i ψ i (x i , zi ) + C∈C ψ C (x C ). (1)</formula><p>As z is constant, using E(x) = E(x; z) simplifies notation.</p><p>A pixel labeling is produced by finding a maximum a posteriori (MAP) (equivalently, energy minimizing) variable assignment, i.e., x * ∈ argmax x p(x|z) = argmin x E(x). For a sub-family of energies, energy minimization is equivalent to a minimum (s, t)-cut in a corresponding graph <ref type="bibr" target="#b11">[12]</ref>. A key graph-cut-enabling ingredient is "regularity," defined as follows in the pairwise case (|C| = 2, ∀C): for all {i, j} = C ∈ C, we have ψ i,j (0, 1) + ψ i,j (1, 0) ≥ ψ i,j (0, 0) + ψ i,j <ref type="bibr" target="#b0">(1,</ref><ref type="bibr" target="#b0">1)</ref>.</p><p>(</p><formula xml:id="formula_1">)<label>2</label></formula><p>Graph cuts arise naturally via the relationship between energy functions and set functions on nodes of a graph G = (V, E). Given a set V = {v 1 , v 2 , . . . , v |I| }, one element per pixel, define the mapping X(x) = {v i ∈ V : x i = 1} from labelings to sets. Then, the energy E(x) = Ψ(X(x)) has a corresponding set function Ψ, and regularity of E is equivalent to submodularity of Ψ(X). A function Ψ :</p><formula xml:id="formula_2">2 V → R is submodular if for all X, Y ⊆ V, we have Ψ(X) + Ψ(Y ) ≥ Ψ(X ∩ Y ) + Ψ(X ∪ Y ) [9]</formula><p>. If this condition holds everywhere with equality, then Ψ is called modular (i.e., Ψ(X) = x∈X a x for some a ∈ R |I| ).</p><p>To represent a pairwise submodular energy E(x) as a graph cut, define a weighted directed graph G = (V ∪ {s, t}, E, w) having a node v i ∈ V for each image pixel, and two terminal nodes s, t. The edges E consist of interpixel edges E n and terminal edges E t . Each potential ψ ij (x i , x j ) corresponds to two edges (v i , v j ), (v j , v i ) ∈ E n , and each unary potential ψ i (x i ) corresponds to the edges (s, v i ), (v i , t) ∈ E t (although this is often done using undirected graphs, directed graphs better suit our needs). A minimal (s, t)-cut Γ ⊆ E defines a labeling by assigning 1 to x i if v i is uncut from s, and 0 otherwise. Equally, an assignment x defines an (s, t)-cut in G. Let X 1 = X(x) ∪ {s} and</p><formula xml:id="formula_3">X 0 = (V \ X(x)) ∪ {t}, then Γ(X(x)) = E ∩ (X 1 × X 0 )</formula><p>is a set of edges defining a cut. Given edge weights w : 2 E → R + , the cost of a cut Γ is usually the sum of weights w(Γ) = e∈Γ w(e), which is a modular function of edge sets. This cut cost, if seen as a function of sets of nodes, is Ψ w (X) w(Γ(X)), a function well known to be submodular on 2 V . Moreover, for the pairwise regular energies E(x) there exists a w such that <ref type="bibr" target="#b22">[23]</ref> </p><formula xml:id="formula_4">E(x) + const = w(Γ(X(x))) = e∈Γ(X(x))</formula><p>w(e). (3)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Cooperative Graph Cuts</head><p>The modularity of the edge weights w in the cut cost ( <ref type="formula">3</ref>) is a critical structural limitation: cutting one edge has no effect on the cost of cutting a different edge. Modular edge weights allow efficient graph cut algorithms but can also have deleterious effects on computer vision results.</p><p>In our approach, by contrast, cutting an edge may influence the cost of cutting other edges. We express this influence by measuring the cost of a cut using a nondecreasing nonnegative submodular function f : 2 E → R + defined on subsets of edges E (in stark contradistinction to Section 2, where submodular functions are defined on subsets of nodes V). Because f is submodular and nonnegative, it is also subadditive:</p><formula xml:id="formula_5">f (A ∪ B) ≤ f (A) + f (B).</formula><p>If the inequality is strict, we will say that edges in A and B cooperate <ref type="bibr" target="#b29">[30]</ref>.</p><p>The weight of a cooperative cut between nodes X and V \ X can be expressed as the node function Ψ f (X) = f (Γ(X)). Thus, cooperative cut leads to a family of energies of the form E f (x) f (Γ(X(x))). This has three consequences. First, MAP inference for E f reduces to Minimum Cooperative Cut. Second, depending on f , there can be cooperation between arbitrarily large edge sets anywhere in the graph. Since this couples all nodes adjacent to the cooperating edges, E f has arbitrarily high order. Third, E f is not necessarily regular (equivalently, Ψ f is not necessarily submodular). Figure <ref type="figure" target="#fig_1">2</ref>(a) shows a cooperative energy E f that violates regularity. A higher order energy E is regular <ref type="bibr" target="#b22">[23]</ref> if all of its projections on any pair of variables i, j are regular. Let J = I \ {i, j}. A projection E J of E : {0, 1} I → R + on i, j is obtained by fixing the values of x J to some xJ , and setting</p><formula xml:id="formula_6">E J (x i , x j ) = E(x i , x j , xJ ).</formula><p>Submodular functions can reward the co-occurrence of certain elements (here, edges of a graph cut). Useful submodular functions include (i) f (A) = g( e∈A w(e)) for nonnegative weights w and any concave, nondecreasing function g : R + → R + <ref type="bibr" target="#b29">[30]</ref>; (ii) cover-type functions</p><formula xml:id="formula_7">f (A) = | e∈A S e |,</formula><p>where each e has an associated set or area S e ; (iii) entropy; and (iv) neighborhood functions in bipartite graphs. Moreover, the sum of submodular functions is submodular. Additional flexibility is gained by the graph structure, as will be seen in Sections 5 and 6.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Optimization</head><p>To minimize E f , we must solve a Minimum Cooperative Cut. While coupling edges allows E f to be non-regular, this also makes the problem NP-hard:</p><formula xml:id="formula_8">Theorem 1. Minimum Cooperative Cut is NP-hard.</formula><p>The proof is a reduction from Graph Bisection <ref type="bibr" target="#b16">[17]</ref>. On the other hand, the graph structure provides a definitive advantage over general higher order potentials -for some global energies, no algorithm can provide quality guarantees on the solutions it finds <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b15">16]</ref>. In contrast, we now derive a practical and efficacious approximation algorithm for cooperative cuts that does have an approximation guarantee. It iteratively minimizes an upper bound on E f (Γ).</p><p>The simplest upper bound on a submodular function f (A) is its modular counterpart f (A) = e∈A f (e), but this ignores all coupling inherent in f . We instead develop an adjusting bound that largely retains cooperation. Define, for B ⊆ E and an edge e ∈ E, the marginal cost of e with respect to B as ρ e (B) = f (B ∪ e)f (B). Submodularity implies diminishing marginal costs: ρ e (B) ≤ ρ e (A) for all A ⊆ B ⊆ E \ {e}.</p><p>Lemma 1. For a submodular f : 2 E → R + , and an arbi-</p><formula xml:id="formula_9">trary B ⊆ E, define h B,f : 2 E → R + as h B,f (A) f (B)+ e∈A\B ρ e (B)- e∈B\A ρ e (E \{e}). (4)</formula><p>The function h B,f is a modular upper bound on f . Proof. For any sets A, B ⊆ E, it holds that <ref type="bibr" target="#b25">[26]</ref>  Importantly, the cut cost h B,f is efficient to minimize using standard minimum cut, thanks to its modularity. For G = (V, E, f ), define G B = (V, E, w B ) with edge weights</p><formula xml:id="formula_10">f (A) ≤ f (B) + e∈A\B ρ e (B) - e∈B\A ρ e ((A ∪ B) \ {e}).</formula><formula xml:id="formula_11">w B (e) = ρ e (E \ {e}) if e ∈ B ρ e (B) otherwise. (<label>6</label></formula><formula xml:id="formula_12">)</formula><p>For a nondecreasing f , the weights w B are nonnegative.</p><p>Lemma 2. The minimum (s, t)-cut in G B is a minimizing cut for the bound h B,f .</p><p>Proof. With weights w B , the cost of a cut</p><formula xml:id="formula_13">Γ ⊆ E is e∈Γ w B (e) = e∈B∩Γ ρ e (E \ {e}) + e∈Γ\B ρ e (B)<label>(7)</label></formula><formula xml:id="formula_14">= h B,f (Γ) -f (B) + e∈B ρ e (E \ {e}). (<label>8</label></formula><formula xml:id="formula_15">)</formula><p>Since f (B) and the sum are constant for a fixed B, w</p><formula xml:id="formula_16">B (Γ) = h B,f (Γ) + const for any edge set Γ ⊆ E.</formula><p>Using h B,f , we derive an iterative minimization procedure (Algorithm 1). Given an initial reference set B, we find the minimum cut Γ with respect to h B,f . Then we adjust the bound to be tight at Γ and repeat. Thus, h B,f is always tight at the currently best solution. The algorithm starts with an initial reference set I j ∈ I, the simplest case of which is I = {∅}. For further improvements, other options include setting I to the elements of a cut basis, e.g., the cuts induced by cutting edges of a spanning tree. For our experiments in Section 8, however, I = {∅} was sufficient, and the algorithm converged in less than 10 iterations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1: Iterative bound minimization</head><formula xml:id="formula_17">Input: G = (V, E); submodular cost f : 2 E → R + 0 ; reference initialization set I = {I 1 , . . . , I k }, I j ⊆ E; source /sink s, t ∈ V Output: cut B ⊆ E for j = 1 to k do find (s, t)-mincut Γ for edge weights w Ij ; repeat B j = Γ; find (s, t)-mincut Γ for edge weights w Bj ; until f (Γ) ≥ f (B j ); return B = argmin B1,...,B k f (B j );</formula><p>As a result of Lemma 2, the algorithm alternates between adjusting weights and computing a minimum cut. Implementation efficiency can be improved by noting that the marginal cost of an edge e depends only on edges that cooperate with e. The weights w B show how h B captures the cost-reducing effect of f : ρ e (B) &lt; f (e) if e cooperates with B. For a modular function f = f m , ρ e (B) = f m (e) and Algorithm 1 becomes the standard minimum cut.</p><p>Lemma 3 gives an approximation bound for the initial solution Γ ∅ for h ∅,f , which improves in subsequent iterations.</p><formula xml:id="formula_18">Lemma 3. Let Γ ∅ ∈ argmin{h ∅,f (Γ) | Γ ⊆ E an (s, t)- cut } be a minimum cut for h ∅,f , and Γ * ∈ argmin{f (Γ) | Γ ⊆ E an (s, t)-cut } an optimal solution. Let ν(Γ * ) = min e∈Γ * ρ e (Γ * \ {e})/ max e∈Γ * f (e). Then f (Γ ∅ ) ≤ |Γ * | 1 + (|Γ * | -1)ν(Γ * ) f (Γ * ) ≤ |Γ * |f (Γ * ).</formula><p>The proof is deferred to <ref type="bibr" target="#b15">[16]</ref>. For the functions we use in Section 5, the term ν(Γ * ) is always nonzero and the second inequality is strict. Lemma 3 is a worst case bound and holds for any nondecreasing submodular f . In practice, the algorithm usually performs much better <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Structured cooperation for segmentation</head><p>We now apply edge cooperation to interactive figureground segmentation, where, given initial user input, the remaining pixels are to be labeled as object or background. In particular, we address the problems shown in Figure <ref type="figure">1</ref>: while graph cuts have been used successfully for this task, they are known to shortcut elongated boundaries, especially in low contrast, shaded regions (see also Figs. <ref type="figure" target="#fig_4">3,</ref><ref type="figure" target="#fig_6">4,</ref><ref type="figure" target="#fig_2">5</ref>). These failures are caused by the commonly used pairwise energy inherent to standard grid-structured MRFs:</p><formula xml:id="formula_19">E(x) = i∈I ψ i (x i ) + λ (i,j)∈En ψ ij (x i , x j ) (9) = w(Γ(X(x)) ∩ E t ) + λw(Γ(X(x)) ∩ E n ) + const.</formula><p>The associated graph G = (V, E) has terminal edges E t , and a grid of inter-pixel edges E n expressing the pairwise potentials. While the former integrate user interaction, the latter enforce smoothness and coherency. The edge weights on E n are a function of the intensity gradient; their sum may be seen as the weighted length of the boundary. This penalty favors short boundaries, and thus results in the aforementioned shortcutting. Lowering the coefficient λ is not a solution since boundaries become noisy and true background is included into the hypothesized foreground (Fig. <ref type="figure" target="#fig_2">5</ref>).</p><p>Instead, we utilize edge cooperation to selectively reward global features of true boundaries. Specifically, we retain G and replace only the over-smoothing inter-pixel cut by a cooperative cut:</p><formula xml:id="formula_20">E f (x) = w(Γ(X(x)) ∩ E t ) + λf (Γ(X(x)) ∩ E n ) (10) = i∈I ψ i (x i ) + λf (Γ(X(x)) ∩ E n ). (11)</formula><p>Since an object boundary consists of cut edges in G, we desire a submodular edge cost f that captures desirable boundary features. We observe that, along true object boundaries, many images possess a certain congruence, and this may be true globally throughout the image. Boundary congruity materializes in a number of contexts. For example, of the many inter-pixel color gradients in Figures <ref type="figure" target="#fig_4">3,</ref><ref type="figure" target="#fig_2">5</ref>, only few occur along the true boundary in difficult regions; and shortcutting introduces new, incongruous, boundary types. Moreover, the repetitiveness of patterned backgrounds retains congruity to a large extent. Similarly, there is congruity between lighted and shaded regions in Figure <ref type="figure">1</ref>, if shade is neutralized. In this latter case, we thus need a shade-invariant congruity criterion.</p><p>Consequently, f should (i) decrease the penalty for globally congruous boundaries, (ii) retain the common smoothing effect of pairwise potentials for incongruous boundaries, and (iii) allow automatic and efficient adaptation of the congruence criterion to each image.</p><p>We define congruity in terms of classes of similar edges, S(z) = {S 1 , S 2 , . . . , S }, S i ⊆ E n and E n = i S i . Congruous boundaries use few classes. Submodularity may selectively reward congruity since it possesses diminishing marginal costs. We make f submodular, however, only within classes, and modular across classes:</p><formula xml:id="formula_21">f (Γ) = S∈S(z) f S (Γ ∩ S). (<label>12</label></formula><formula xml:id="formula_22">)</formula><p>As a result, (i) the marginal cost of an edge decreases only when enough edges from the same class are cut. The discount increases with the number of edges included from that class. On the other hand, (ii) there is no discount for cuts that use edges from many classes, i.e., incongruous cuts. The class costs f S are thresholded discount functions, To adapt f , we infer the classes by clustering edges E n for each image. Furthermore, the discount only sets in after a threshold θ S is reached, and we adapt θ S to the total weight of the class, i.e., θ S = ϑw(S) for ϑ ∈ [0, 1], which improves scale-invariance. For large objects or images, more edges are in a class, requiring more cutting to observe a discount. The factor ϑ trades off between completely modular cuts (ϑ = 1) and completely cooperative cuts (ϑ = 0).</p><formula xml:id="formula_23">f S (Γ) = w(Γ ∩ S) if w(Γ ∩ S) ≤ θ S θ S + g(w(Γ ∩ S) -θ S ) if w(Γ ∩ S) &gt; θ S ,<label>(13)</label></formula><p>The quantitative gauge of "congruence" depends on the distance measure used to cluster the edges. For an edge e = (v i , v j ) with observed pixel values z i , z j , we define two possible feature vectors φ(e): (i) for uniformly lit images, potential cooperating edges f (Γ) Graph Cut E w(Γ) congruence (Sec. 5) groups of En P S g θ (w(Γ ∩ S)) (binary) P n <ref type="bibr" target="#b18">[19]</ref> E in G g(|Γ|) rand. walker <ref type="bibr" target="#b10">[11]</ref> E p w 2 (Γ)</p><p>∞ <ref type="bibr" target="#b30">[31]</ref> En maxe∈Γ∩E n w(e) class labels <ref type="bibr" target="#b24">[25]</ref> Et fL( S e∈Γ l(e)) Table <ref type="table">1</ref>. Examples of cooperative cuts; l(e) is the label of edge e <ref type="bibr" target="#b15">[16]</ref>, and w(Γ) (w 2 (Γ)) the sum of (squared) weights.</p><p>we use linear color gradients, φ l (e) = z jz i , and squared Euclidean distance for clustering; and (ii) for shading, we use log intensity ratios φ r (e) = log(z j /z i ) (channel-wise for color images) which are approximately invariant to shading, and 1 distance for clustering. In each case, we use the features (φ l (e), or φ r (e)) for clustering edges, and use the standard weights w(e) inside of f .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">The expressive power of cooperative cuts</head><p>Cooperative cuts cover (and strictly generalize) a number of recent approaches in computer vision (summarized in Table <ref type="table">1</ref>). Note, however, that cooperative cut is not a special case of any these methods (e.g., some are not NP-hard).</p><p>Kohli et al. <ref type="bibr" target="#b18">[19]</ref> consider P |C| potentials of the form ψ C (x C ) = g( i,j∈C ψC,i,j (x i , x j )) for a concave, nondecreasing function g and clique C. Because of the structure of their ψ C , in the binary case, the sum of pairwise potentials ψC,i,j is representable as cuts in a graph. These potentials are special cases of cooperative cut potentials that remain regular <ref type="bibr" target="#b18">[19]</ref>, unlike the example in Figure <ref type="figure" target="#fig_1">2</ref>. Similarly, the αβ swap for a multi-label ψ C is a cooperative cut, as is the α expansion if ψ is a metric <ref type="bibr" target="#b15">[16]</ref>. The P n Potts model <ref type="bibr" target="#b18">[19]</ref> and robust P n potentials <ref type="bibr" target="#b19">[20]</ref> are regular special cases of cooperative cut as well <ref type="bibr" target="#b15">[16]</ref>.</p><p>In class-based image segmentation, each pixel must be labeled by an object class. Ladický et al. <ref type="bibr" target="#b24">[25]</ref> suggest a global potential f L (L(x)) on the set of class labels L(x) used in x. If f L : 2 L → R + is nondecreasing and submodular, then the α expansion can be formulated as a cooperative cut on E t <ref type="bibr" target="#b15">[16]</ref>. The co-occurrence function f L (L) in <ref type="bibr" target="#b24">[25]</ref> is not submodular with respect to class labels. An alternative, submodular f L could count the number of training images whose labels do not contain the entire set L(x). The labelcost function in <ref type="bibr" target="#b5">[6]</ref> is submodular and thus a cooperative cut on E t , as it corresponds to a neighborhood function in a bipartite graph <ref type="bibr" target="#b15">[16]</ref>.</p><p>Lastly, Sinop and Grady <ref type="bibr" target="#b30">[31]</ref> express an objective for variants of the Random Walker algorithm <ref type="bibr" target="#b10">[11]</ref> as E(x) = ( (i,j)∈E w q ij |x ix j | q ) 1/q . In a discrete version, |x ix j | = 1 if and only if the edge (v i , v j ) is cut. Since the qth root is concave for q ≥ 1, f (Γ) = (w q (Γ)) 1/q is submodular. The same holds for the q → ∞ version E(x) = max (i,j)∈E w ij |x ix j |. Therefore, the discrete case of <ref type="bibr" target="#b30">[31]</ref> is a cooperative cut as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Other related work</head><p>Starting with <ref type="bibr" target="#b11">[12]</ref>, graph cuts have become standard in computer vision, with many applications <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b12">13]</ref>. In the standard case, the cut represents a pairwise, regular energy, but graph cuts can also be used for non-submodular pairwise potentials <ref type="bibr" target="#b21">[22]</ref> and ratio problems <ref type="bibr" target="#b20">[21]</ref>.</p><p>Beyond pairwise energies, efficiently optimizable higher order potentials have been the subject of many recent studies ( <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b23">24]</ref> and references therein), but the structure of those potentials is very different from edge cooperation. Examples of higher order constraints include single global constraints such as connectivity <ref type="bibr" target="#b26">[27]</ref>, statistical constraints <ref type="bibr" target="#b24">[25]</ref>, or clique potentials enforcing homogeneity for groups of nodes <ref type="bibr" target="#b18">[19]</ref>. While user-interactive connectivity has been used to tackle shrinking bias <ref type="bibr" target="#b31">[32]</ref>, it may become tedious for trees (Fig. <ref type="figure" target="#fig_2">5</ref>), and does not address holes (Fig. <ref type="figure" target="#fig_6">4</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Experiments</head><p>For the task of interactive figure-ground segmentation, our experiments address three main questions: (i) What is the effect of coupling edges, and does this strengthen correct boundaries? We compare E f (CoopCut) from Section 5 to the standard graph cut (GC) <ref type="bibr" target="#b1">[2]</ref> for pairwise potentials. (ii) What is the effect of the structure of coupling, i.e., the classes S i ? (iii) Does edge cooperation harm the segmentation of objects requiring standard smoothing?</p><p>We use color and grayscale images of complicated objects, with and without shading. Since, to our knowledge, no public database exists for such images, we created our own hand-labeled collection. Images and code are available at ssli.ee.washington.edu/ ˜jegelka/cc. For (iii), we use the Grabcut data <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b27">28]</ref>.</p><p>Both methods use the same 8-neighbor graph structure, the same unary potentials and inter-pixel edge weights w(e) = 2.5 + 47.5 exp(-0.5 z iz j 2 /σ) for edges e = (v i , v j ) and variance σ of color gradients (parameters as in <ref type="bibr" target="#b31">[32]</ref>). The unary potentials are either based on color histograms <ref type="bibr" target="#b1">[2]</ref> or on Gaussian mixture models (GMMs) with 5 components <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b31">32]</ref>. Edge classes are inferred by k-means clustering, and edges between identically colored pixels form an extra class S with no discount (ϑ S = 1). Errors are the percentage of wrongly assigned unlabeled pixels. To quantify the recovery of fine object parts that only make up a small fraction of the pixels, we compute the "twig error" on these delicate parts only. We chose good parameters for each method. In Tables <ref type="table">2,</ref><ref type="table" target="#tab_2">3</ref>, parameters are the same on all images. All algorithms were implemented in C++, using the graph cut code <ref type="bibr" target="#b2">[3]</ref>, OpenCV, and some Matlab pre-processing. For details and more results, see <ref type="bibr" target="#b15">[16]</ref>.</p><p>The results show that (i) cooperation helps to track boundaries into shaded regions, and preserves fine segments; (ii) what matters is the structure of cooperation; and (iii) the improvements on complicated boundaries do not harm the results for "standard" boundaries.</p><p>Experiment 1: Shading gradient. Table <ref type="table">2</ref> shows segmentation errors on shaded objects in (a) 8 grayscale and (b) 7 color images. On such images, the unary terms are very noisy (Figs. <ref type="figure">1,</ref><ref type="figure" target="#fig_4">3</ref>). Coupling edges using φ r reduces the error, compared to GC, by up to two thirds. Figures <ref type="figure" target="#fig_4">3</ref> and<ref type="figure" target="#fig_6">4</ref> show that CoopCut recovers the object shape much better. To ensure that not the mere ratio information but cooperation makes the difference, we ran GC with ("log") edge weights derived from φ r : the errors improve only slightly. To probe the effect of the classes S i , we compare against a cooperative cut with only one class (plus the class S ). Such uniform, unstructured coupling is much less effective, i.e., the structure implied by the S i is crucial.</p><p>CoopCut does not model shading explicitly, but cancels shading effects via φ r . Thus, it also improves results if the shade varies locally with higher frequency. We artificially shaded images from Expt. 2, by multiplying the pixel at location (x, y) by 0.4(1 + sin(2πy/γ)) (γ ∈ <ref type="bibr" target="#b9">[10,</ref><ref type="bibr">120]</ref>). Unary terms were computed from the modified image. Figure <ref type="figure" target="#fig_6">4</ref> shows an example, and Table <ref type="table">2</ref> lists average errors over 18 such images. Indeed, CoopCut halves the total error of GC, and preserves delicate structures much better than GC.</p><p>Experiment 2: Thin, elongated parts and holes. To examine the effect of coupling in uniformly lit images, we compute the total and twig error for 17 images with delicate objects. Table <ref type="table">2</ref>(d) and Figure <ref type="figure" target="#fig_2">5</ref> show results for two parameter settings: (1) low overall error, and (2) low twig error. Graph cut roughly recovers fine structures if the smoothness term is reduced, but at the price of a high overall segmentation error. CoopCut preserves fine parts without including pieces of background. Total and twig error are minimized simultaneously. In comparison, curvature regularization (as in <ref type="bibr" target="#b6">[7]</ref>, with our unary terms) is more sensitive to noise in the unary terms (which are less noisy in <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b28">29]</ref>).</p><p>Experiment 3: Grabcut data. As a "sanity check", we address the effect of cooperation with objects that are rounder and need regularization. Table <ref type="table" target="#tab_2">3</ref> displays the errors for GC and CoopCut on the 50 images of the Grabcut data set <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b27">28]</ref> with the "Lasso" labeling. Even here, CoopCut slightly improves the results on both color models. Figure <ref type="figure" target="#fig_4">3</ref> shows segmentations for two objects where GC faces the shrinking bias and CoopCut recovers the shape.</p><p>The optimal parameter choice varies slightly with the setting, like with standard graph cuts, but the errors show that one choice is reasonable for a wide range of images.      </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">Discussion</head><p>We introduced a general model, cooperative cuts, that can express a family of global potentials and reward co-occurrences, while still being approximable efficiently. We demonstrated its effectiveness for image segmentation, where we reward the co-occurrence of local boundary features. Key to this is a new class-structured cooperation that drives to globally cut similar edges, instead of merely few edges. Our approach can thus be viewed as a discrete structured sparsity. Furthermore, it can be extended to multiple labels. Swap or expansion moves then become cooperative cuts. Finally, the relations to other recent models imply that segmentation is only one possible application of the rich modeling capabilities of cooperative cuts.   <ref type="table">2</ref>. Average error (percent mispredicted pixels) for Expt. 1 and 2. GC: Graph Cut, Coopcut: Cooperative Cut with 1-20 classes. (a), (b) total error across 8 and 7 images; (c), (d) total and twig error across 18 and 17 images, respectively; (c), (d) results for parameters with (1) minimum total error, and (2) minimum joint error (2errtotal + errtwig). CoopCut achieves low total and twig error, whereas GC can only minimize one of those. Twig error is overall higher since it counts fewer pixels. Results with histogram unary terms are similar <ref type="bibr" target="#b15">[16]</ref>.</p><p>Karp for the name "cooperative cut."</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>∩ S) g(x) = x g(x) = 0 g(x) = √ x g(x) = log(1 + x) (b) examples of g</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. (a) Example of a non-regular energy E f with f (A) = `Pe∈A w(e) ´1/2 . Edge weights are as indicated. An edge is cut if its tail has label 1 and its head label 0. Consider the projection EJ (x2, x3) for J = (1, 4) and xJ = (1, 0). Then EJ (1, 0) + EJ (0, 1) = √ 9.9 + 0.1 + 9.9 + √ 0.1 + 0.1 + 0.1 &lt; 5.01 &lt; 6.32 &lt; √ 0.1 + 9.9+ √ 0.1 + 9.9 = EJ (0, 0)+EJ (1, 1), violating regularity. (b) Effect of different gs in Eqn. (13).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( 5 )</head><label>5</label><figDesc>Bound (4)  follows by diminishing marginal costs: ρ e (E \ {e}) ≤ ρ e ((A ∪ B) \ {e}). Modularity is immediate. This bound adds an upper bound on the cost of A \ B and subtracts a lower bound on the cost of B \ A. The bound, moreover, is tight at A = B, i.e., h B,f (B) = f (B).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>for any nondecreasing, nonnegative concave function g : R → R. For our experiments, we chose g(x) = √ x. Alternatives include g(x) = log(1+x) or roots g(x) = x 1/p (Figure 2(b)). The modular case (9) corresponds to g(x) = x.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Example results and errors for Expt. 1 (left) and the Grabcut data (right). GC has minimum-error parameters λ = 1.2, 1.0; CoopCut (λ, 10 4 ϑ) = (8, 5) on both images. Grabcut data: GC λ = 1.3, 0.05, CoopCut (15 &amp; 10 classes): (λ, 10 4 ϑ) = (12, 3), (0.4, 7).</figDesc><graphic coords="7,157.63,259.37,89.66,59.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Example results for Experiment 2. Cooperation preserves legs and fine twigs without including pieces of background (arrows). Parameters: GC low err λ = 1.5, 0.05, GC low errtwig λ = 1.0, 0.001; curv. λ = 0.03, 0.002, CoopCut: (λ, 10 4 ϑ) = (1.5, 9), (1.8, 10).</figDesc><graphic coords="7,65.47,329.75,89.66,59.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Results on shaded color images for 15, 20 and 25 classes (top to bottom). Parameters chosen for low total and twig error; GC: λ = 0.1, 0.05, 0.1; CoopCut: (λ, 10 4 ϑ) = (4.5, 6), (7.0, 3), (1.5, 50). The zoom-in shows a part of the grid.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>(a) shading graysc. (b) shading color (c) high-frequ. shading (GMM) (d) Expt.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>Errors on the Grabcut data with both feature types.</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. We thank Sebastian Nowozin, Peter Gehler and Christoph Lampert for comments, and Richard</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Interactive image segmentation using an adaptive GMMRF model</title>
		<author>
			<persName><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rother</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Perez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Torr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECCV</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interactive graph cuts for optimal boundary and region segmentation of objects in N-D images</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Boykov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M.-P</forename><surname>Jolly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An experimental comparison of min-cut/max-flow algorithms for energy minimization in vision</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Boykov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TPAMI</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1124" to="1137" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fast approximate energy minimization via graph cuts</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Boykov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Veksler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zabih</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TPAMI</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Approximating probabilistic inference in Bayesian belief networks is NP-hard</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dagum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Luby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="141" to="153" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast approximate energy minimization with label costs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Delong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Osokin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">N</forename><surname>Isack</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Boykov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCV</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fast global optimization of curvature</title>
		<author>
			<persName><forename type="first">N</forename><surname>El-Zehiry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Grady</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Energy minimization via graph cuts: Settling what is possible</title>
		<author>
			<persName><forename type="first">D</forename><surname>Freedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Drineas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Submodular Functions and Optimization</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fujishige</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. of Discr. Math. Elsevier Science</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Realization of set functions as cut functions of graphs and hypergraphs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fujishige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Patkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discr. Math</title>
		<imprint>
			<biblScope unit="volume">226</biblScope>
			<biblScope unit="page" from="199" to="210" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Random walks for image segmentation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Grady</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TPAMI</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Exact maximum a posteriori estimation for binary images</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Greig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">T</forename><surname>Porteous</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Seheult</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. R. Stat. Soc</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An efficient algorithm for cosegmentation</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hochbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Exact optimization for Markov random fields with convex priors</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TPAMI</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1333" to="1336" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Higher-order clique reduction in binary cut</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishikawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Supplementary material. ssli</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jegelka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bilmes</surname></persName>
		</author>
		<ptr target=".ee.washington.edu/˜jegelka/cc/supp.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Cooperative cuts: graph cuts with submodular edge weights</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jegelka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bilmes</surname></persName>
		</author>
		<idno>TR-189</idno>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
		<respStmt>
			<orgName>Max Planck Institute for Biological Cybernetics</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Energy minimization for linear envelope MRFs</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">P3 &amp; beyond: solving energies with higher-order cliques</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Torr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Robust higher order potentials for enforcing label consistency</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ladický</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Torr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Comp. Vision</title>
		<imprint>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="302" to="324" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Applications of parametric maxflow in computer vision</title>
		<author>
			<persName><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Boykov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rother</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Minimizing nonsubmodular functions with graph cuts-a review</title>
		<author>
			<persName><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rother</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TPAMI</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1274" to="1279" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">What energy functions can be minimized via graph cuts?</title>
		<author>
			<persName><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zabih</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TPAMI</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="147" to="159" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Beyond pairwise energies: efficient optimization for higher-order MRFs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Komodakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Paragios</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Graph cut based inference with co-occurrence statistics</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ladický</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Russell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Torr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECCV</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">An analysis of approximations for maximizing submodular functions -I</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Nemhauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Fisher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="265" to="294" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Global connectivity potentials for random field models</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nowozin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Lampert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Grabcut -interactive foreground extraction using iterated graph cuts</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rother</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Curvature regularity for region-based image segmentation and inpainting: A linear programming relaxation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Schoenemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Kahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cremers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Cores of convex games</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Shapley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Game Theory</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="11" to="26" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A seeded image segmentation framework unifying graph cuts and random walker which yields a new algorithm</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sinop</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Grady</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Graph cut based image segmentation with connectivity priors</title>
		<author>
			<persName><forename type="first">S</forename><surname>Vicente</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rother</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Classes of submodular constraints expressible by graph cuts</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zivný</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Jeavons</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Constraints</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="430" to="452" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
