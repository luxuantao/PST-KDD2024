<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">What Works for Whom, Where, When, and Why? On the Role of Context in Empirical Software Engineering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Tore</forename><surname>Dybå</surname></persName>
							<email>tore.dyba@sintef.no</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Informatics</orgName>
								<orgName type="institution">University of Oslo</orgName>
								<address>
									<postCode>SINTEF NO-7465</postCode>
									<settlement>Trondheim</settlement>
									<country key="NO">Norway</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dag</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Informatics</orgName>
								<orgName type="institution">University of Oslo</orgName>
								<address>
									<postCode>NO-0316</postCode>
									<settlement>Oslo</settlement>
									<country key="NO">Norway</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Daniela</forename><forename type="middle">S</forename><surname>Cruzes</surname></persName>
							<email>dcruzes@idi.ntnu.no</email>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">NTNU</orgName>
								<address>
									<postCode>NO-7491</postCode>
									<settlement>Trondheim</settlement>
									<country key="NO">Norway</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">What Works for Whom, Where, When, and Why? On the Role of Context in Empirical Software Engineering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">36D2C460AE853BE802EBB9E06B2A9541</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D.2 [Software Engineering] Management</term>
					<term>Measurement</term>
					<term>Experimentation</term>
					<term>Theory Evidence-Based Software Engineering</term>
					<term>Generalization</term>
					<term>Theory</term>
					<term>Empirical Methods</term>
					<term>Sociotechnical System #&amp; &apos;Organizational structure &apos;Market&apos; &apos;Etc… &apos;7-</term>
					<term>D &apos;Etc… &apos;&apos;</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Context is a central concept in empirical software engineering. It is one of the distinctive features of the discipline and it is an indispensable part of software practice. It is likely responsible for one of the most challenging methodological and theoretical problems: study-to-study variation in research findings. Still, empirical software engineering research is mostly concerned with attempts to identify universal relationships that are independent of how work settings and other contexts interact with the processes important to software practice. The aim of this paper is to provide an overview of how context affects empirical research and how empirical software engineering research can be better 'contextualized' in order to provide a better understanding of what works for whom, where, when, and why. We exemplify the importance of context with examples from recent systematic reviews and offer recommendations on the way forward.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>What is best? Pair programming or solo programming? Test-first or test-last? A multitude of studies have been performed to answer these and other similar questions of the type: "Is &lt;technology x&gt; better than &lt;technology y?" However, asking the general question of whether pairs outperform individuals in programming tasks, or whether test-driven development results in higher productivity, is meaningless. It is meaningless since these questions can be answered with "Yes" or "No" depending on the setting of the study. Still, posing research questions of this type, without considering contextual influences like the subjects of the study, the location, the time period, and the rational of the study, seems to prevail. However, we cannot expect a technology to be universally good or universally bad, only more (or less) appropriate in some circumstances and for some organizations <ref type="bibr" target="#b19">[19]</ref>. The settings in which practice takes place are rarely, if ever, the same. For example, one software organization will have a different environment or be influenced by different environmental factors to that of another software organization. The size of the organization, types of customers, country or geographical location, the age of the organization, all impose different influences in unique ways. Additionally, the human factors, which form the organizational culture and make one setting different from another one, also influence the way software development is performed. We know that these issues are important for the successful uptake of research into practice and that there are interrelationships among organizational systems, structures, processes, technologies, settings, and cultures. However, the nature of these relationships is poorly understood. This dependence of a potentially large number of relevant context variables in any study is an important reason for why empirical software engineering (SE) is so hard. Because of this, we cannot a priori assume that the results of a particular study apply outside the specific context in which it was run <ref type="bibr">[6]</ref>.</p><p>In an effort to bring context information in empirical research in SE more into consideration, Kitchenham et al. <ref type="bibr" target="#b32">[32]</ref> suggested the following general guideline: "Be sure to specify as much of the industrial context as possible. In particular, clearly define the entities, attributes, and measures that are capturing the contextual information." However, as Whetten pointed out, it is not of much help to have a long context description if it is short on explanation <ref type="bibr" target="#b48">[48]</ref>.</p><p>Such explanation relies on understanding and interpretation of research evidence in light of the features and characteristics surrounding it. Contrary to empirical SE's treatment of context as a stable set of attributes of the world, the problem is that these surroundings themselves are selected and interpreted in different ways. There is an implicit parallel with linguistics here; that the meaning of a word is determined by the words and sentences that surround it. This raises the question about what a SE context is, how it is selected, and by whom.</p><p>The aim of this paper is to address this question and to provide an overview of how context affects empirical SE research and how this research can be better 'contextualized.' The remainder of the paper is organized as follows: Section 2 provides an overview of the concept of context and describes important dimensions and implications of context. Section 3 describes relationships between empirical studies and context, with examples from test-driven development and pair programming. Section 4 points to a potential way forward by suggesting how SE research can be better contextualized. Section 5 concludes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">WHAT IS CONTEXT?</head><p>The word contextus is of Latin origin and stands for weaving together or to make a connection <ref type="bibr" target="#b38">[38]</ref>. Approaches to context and contextual dimensions range widely, reflecting different philosophical stances and practical orientations. In linguistics, for example, context refers to how readers can infer the meaning of a passage by referring to its intratextual clues; something that transcends the text itself <ref type="bibr" target="#b11">[11]</ref>. In other words, trying to make sense of a single word in a sentence or of a sentence in a paragraph by looking only at the specific word or sentence and isolating them from the rest of the text in which they are used can be problematic, even if one knows technically their various linguistic meanings. For instance, "I am attached to you" has very different meanings to a person in love and to a hand-cuffed prisoner <ref type="bibr" target="#b33">[33]</ref>. So, to take something 'out of context' leads to misunderstanding; there is no meaning without context. On the other hand, even if one is not familiar with the specific meaning(s) of a word or sentence, one can infer their correct meaning by situating them in the greater text and connecting them with the rest of the text.</p><p>In management research, context refers to the circumstances, conditions, situations, or environments that are external to a specific phenomenon and that enable or constrain it <ref type="bibr" target="#b47">[47]</ref>. Mowday and Sutton see context as stimuli existing in the external environment <ref type="bibr" target="#b36">[36]</ref>, while Johns takes this a step further and understands context as situational opportunities and constraints that affect behavior <ref type="bibr" target="#b30">[30]</ref>. Moreover, Johns distinguishes between substantive and methodological contexts <ref type="bibr" target="#b29">[29]</ref>, where substantive context stands for the context individuals or groups face while methodological context refers to detailed information about the research study.</p><p>In this paper we focus on substantive contexts for empirical SE, taking into account omnibus and discrete context dimensions as suggested by Johns <ref type="bibr" target="#b30">[30]</ref>. Omnibus context refers to a broad perspective, drawing attention to who, what, when, where, and why <ref type="bibr" target="#b30">[30]</ref>, <ref type="bibr" target="#b49">[49]</ref>, while discrete context refers to specific contextual variables <ref type="bibr" target="#b30">[30]</ref>. Thus, context can simultaneously be considered as a "lens" (omnibus context) and as a "variable" (discrete context) <ref type="bibr" target="#b25">[25]</ref>. However, as most empirical SE research to date has studied discrete contexts, focusing on context as a set of variables, this paper emphasizes omnibus contexts, applying a context "lens."</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Omnibus Context</head><p>According to Johns <ref type="bibr" target="#b30">[30]</ref>, research will benefit more from the careful consideration of context by paying more attention to designing and reporting studies along the lines of good journalistic practice in which a story describes the who, what, when, where, and why to the reader (see Fig. <ref type="figure">1</ref>), thus putting recounted events in their proper context. This corresponds to the typical situation in empirical SE, in which we study how an actor applies technologies to perform certain activities on a software system <ref type="bibr" target="#b41">[41]</ref>.</p><p>'What' constitutes the substantive content of the research, the factors (variables, constructs, concepts) or treatments that logically should be considered as part of the explanation of the phenomena of interest. Although it might seem obvious, and maybe not strictly part of the context, it is not always clear what is actually studied. A typical problem is the descriptions of measures of the constructs being studied and the justification for variable coding. For example, if software quality is the phenomenon of interest, then it would require quite a bit of justification if only defects are being measured and how they are coded.</p><p>'Who' refers to the occupational and demographic context, and concerns both the direct research participants and those who surround them. It is important that the study clearly identifies the population about which one intends to make claims, and selects and describes subjects who are representative of that population <ref type="bibr">[6]</ref>. Usually, there is an assumption that the target population is professional software developers. One should, however, be aware that this group may be very diverse <ref type="bibr" target="#b1">[1]</ref>. A typical example of the 'who' in controlled SE experiments, is the student vs. professional <ref type="bibr" target="#b28">[28]</ref> and the personality of the subjects <ref type="bibr" target="#b10">[10]</ref>. However, it might not be enough to just state the occupational context or personality of a subject since individual differences in skill also affect the outcome of empirical studies. Within many different domains of expertise, with increased skill, the number of errors in performance decreases and the speed with which a task is executed increases <ref type="bibr" target="#b8">[8]</ref>. The performance may differ significantly between various categories of professionals. Description of the 'who', and especially the skill, is important, thus, since the similarity of the subjects of a study to the people who will use the technology impacts the ease of the technology transfer.</p><p>'Where' a research study is conducted can have a noticeable impact on its results. It refers to the various locations in which software development happens. An important distinction is whether the phenomenon occurs in an artificial laboratory or in a more realistic industry setting <ref type="bibr" target="#b42">[42]</ref>. For example, a challenge when configuring an experimental environment is to provide an infrastructure of supporting technology (processes, methods, tools, etc.) that resembles an industrial development environment. Because the logistics is simpler, a classroom is often used instead of a usual work place. Conducting an experiment on the usual work site with professional development tools also implies less control of the experiment than one would have in a classroom setting with pen and paper. Nevertheless, there are many challenges when conducting experiments with professionals in industry that might also be due to location effect such as economic conditions and organizational and national culture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1. Important dimensions of SE context (adapted from [30]).</head><p>Time is also often a dependent variable in SE experiments, in which the goal is usually for subjects to solve the tasks with satisfactory quality in as short time as possible, as most software engineering jobs are subject of a relatively high pressure. However, if the time pressure on the participatory subjects is too high, then the task solution quality may be reduced to the point where it becomes meaningless to use the corresponding task times in subsequent analyses. A challenge is therefore to put a realistic time pressure on the subjects. How to best deal with this challenge depends to some extent on the size, duration, and location of the experiment. Methods for combining time and quality as task performance is currently being developed as a promising first step to measuring programming skill in both industry and research settings <ref type="bibr" target="#b8">[8]</ref>.</p><p>'Why' refers to the rationale for the conduct of the research or the collection of research data. Why data is collected can have a compelling contextual impact on organizational behavior and associated research. An experimental setting would, for example, ideally either reflect the subjects' organizational setting or would allow them to see some professional benefit from the experimental tasks, which would motivate them to put more effort and thought into the study. However, motivation can be a problem when subjects are asked to work on toy problems, are given unrealistic processes, or see some other disconnection between the study and their professional experience <ref type="bibr">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Discrete Context</head><p>Discrete context focuses on specific situational variables that directly influence behavior or moderate relationships between variables. Viewing software development from an open sociotechnical systems perspective <ref type="bibr" target="#b45">[45]</ref>, the lower portion of Figure <ref type="figure">1</ref> shows that the prominent dimensions of discrete context in SE research include technical, social, and environmental factors. Each of the variables within these dimensions may be treated as independent variables through selection or manipulation, or as moderator or mediator variables.</p><p>A moderator is a qualitative or quantitative variable that affects the direction and/or strength of the relations between an independent or predictor variable and a dependent or criterion variable <ref type="bibr" target="#b4">[4]</ref>. Some moderator variables are categorical. Suppose, for example, that pair programming yielded high effect sizes on complex tasks but low effect sizes on simple tasks, with the opposite pattern emerging for solo programming. Task complexity is then a categorical moderator. Other moderators are continuous. An example would be if pair programming produced moderate effect sizes no matter how complex the task is, but solo programming produced low effect sizes for developers with few years' experience and high effect sizes for developers with many years.</p><p>Mediators reflect a mechanism through which the independent variable causes the mediator, which then causes the outcome. For example, suppose that self-management (the independent variable) causes higher motivation (the mediator), which then leads to increased software quality (the dependent variable). However, more complex and subtle relationships may exist. For instance, the same variable can be both a moderator and a mediator in the same model, and mediators can be nonlinear or non-recursive, see <ref type="bibr" target="#b4">[4]</ref>.</p><p>The elements of the three discrete context dimensions (Fig. <ref type="figure">1</ref>) can be seen as mediating the omnibus context. For example, knowing someone's occupation often permits reasonable inferences about his or her tasks, social, and physical environment at work, which, in turn, can be used to predict behavior and attitudes <ref type="bibr" target="#b30">[30]</ref>.</p><p>We will not consider the details of all possible discrete context variables, as several lists of a large variety and diversity of such variables have already been identified and proposed elsewhere (e.g., <ref type="bibr" target="#b12">[12]</ref>, <ref type="bibr" target="#b37">[37]</ref>, <ref type="bibr" target="#b50">[50]</ref>). Therefore, the elements of technical, social, and environmental context in Figure <ref type="figure">1</ref> are not meant to be exhaustive, but argued to be important. This importance is inferred from a combination of the fact that they are interrelated, that they operate at multiple levels of analysis, and that they appear as fundamental elements in several empirical SE studies.</p><p>Along the technical dimension, for example, there is often a gap between researcher expectations and empirical results because one fails to acknowledge that potentially more powerful technologies may be more complex to use, or may require new skills in order to use correctly. It is self-evidently true that a technology is better when it is easier and faster to use than when it is not. However, what if a "faster" technology comes at the price of added complexity, which makes the technology harder to use properly. Then the faster technology would require more training to be used successfully. Without training, the faster and more complex technology would be associated with a higher proportion of</p><formula xml:id="formula_0">! ! "#$%&amp; !"#'&amp; !"#()(&amp; !"#(*&amp; !"#+&amp;! ! !"#$%&amp;#$%$ '()*+#,-. '/%,01%$ '23&amp;# '401%$05#' Omnibus context: ! ! '2#,"$3,056 '(%,3056 '7$839%$&amp;#$-056!</formula><p>incorrect uses, thereby making the faster technology appear worse than the existing alternative that is slow but easy to use correctly. More complex technologies frequently require more training than less complex technologies; at the same time, more complex technologies are adopted because they add to productivity <ref type="bibr" target="#b7">[7]</ref>.</p><p>Individual differences in skill are an important element along the social dimension that affects the outcome of empirical studies. When evaluating alternative processes, methods, or tools, skill levels may mediate the effect of using a specific alternative. For example, in an experiment on the effect of a centralized versus delegated control style, the purportedly most-skilled developers performed better using a delegated control style than with a centralized one, while the less-skilled developers performed better with the centralized style <ref type="bibr" target="#b1">[1]</ref>. In another experiment, skill had a moderating effect on the benefits of pair programming <ref type="bibr" target="#b2">[2]</ref>.</p><p>Another important element along the social dimension is the complexity of team performance, which depends not only on the team's autonomy and competence in managing and executing its work but also on the organizational context surrounding it. For example, aspects of the organizational context such as reward systems, supervision, training, resources, and organizational structure can strongly affect team functioning. Likewise, relationships with the market and key stakeholders outside the team can influence task performance <ref type="bibr" target="#b35">[35]</ref>.</p><p>The environmental dimension refers to various characteristics outside the control of the organization that is important to its performance. These characteristics include the nature of the market, political climate, economic conditions, and the kind of technologies on which the organization depends. The environment of a particular software organization may range from stable to dynamic -from predictable to unpredictable. A study on process improvement strategies, for example, showed that there was no difference in the level of exploitation between small and large organizations regardless of the environment, but that there was a marked difference in the level of exploration. The results showed that small software organizations engaged in significantly more exploration in turbulent and uncertain environments than large software organization. Due to the increased complexity, increased convergence, and increased inertia of the large organizations, they are less likely to change in response to environmental changes than small organizations. They tend to generate the same response even when the stimuli had changed <ref type="bibr" target="#b15">[15]</ref>, <ref type="bibr" target="#b16">[16]</ref>.</p><p>The argument behind the usefulness of studying discrete context variables depend on the assumption that research findings are strongly a function of general empirical laws or processes. However, from a constructionist point of view, consistency of research results implies either the stability of the social constructions across the contexts in which the studies were conducted or an interpretive norm that leads to the perception of consistency <ref type="bibr" target="#b17">[17]</ref>, <ref type="bibr" target="#b27">[27]</ref>. Similarly, inconsistency among research results might indicate an inconsistency among the interpretative norms of the research community. One of the most interesting implications of the constructionist perspective is that the perceived cumulativeness of scientific knowledge in SE is a function of the conventions of evidence and methodology in the research community.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">CONTEXT AND EMPIRICAL STUDIES</head><p>It can often be problematic to transfer evidence generated from one context to another. Shull <ref type="bibr" target="#b39">[39]</ref>, for example, points to several recent studies showing that lessons learned from one project are simply not applicable to others. For example, a study of the prediction factors in the COCOMO model across 93 project datasets from one organization showed huge variations in the size of the effects those factors had on overall project effort. In some cases, the direction of the relationships changed from positive to negative depending on which projects were in the dataset being fit. Also, in another study on defect predictors for pairs of projects, only for four percent of the pairs did the factors that worked well for predicting defects in the first project also apply in the second <ref type="bibr" target="#b39">[39]</ref>.</p><p>In this section we will look further into three examples of the relationship between context and empirical studies of agile practices -two secondary studies and one primary study. The first one is a systematic review on test-driven development (TDD), the second is a meta-analysis of pair programming (PP), while the third is a large experiment on PP with professional developers.</p><p>The systematic review and meta-analysis are typical examples of secondary studies which try to synthesize evidence from primary studies of the type: "Is &lt;technology x&gt; better than &lt;technology y?" without considering contextual influences. Our primary study example, however, shows how important contextual elements influence the main effects of the experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Test-Driven Development</head><p>Attempts to aggregate the available evidence on agile practices like test-driven development (TDD) have shown wide disparities in how well these practices work in different contexts. Although advocates claim that TDD enhances both product quality and programmer productivity, skeptics maintain that such an approach to programming would be both counterproductive and hard to learn <ref type="bibr" target="#b46">[46]</ref>.</p><p>However, it is the productivity dimension that engenders the most controversial discussion of TDD. Although many admit that adopting TDD may require a steep learning curve that may decrease the productivity initially, there is no consensus on the long-term effects. One line of argument expects productivity to increase with TDD; reasons include easy context switching from one simple task to another, improved external quality (i.e., there are few errors and errors can be detected quickly), improved internal quality (i.e., fixing errors is easier due to simpler design), and improved test quality (i.e., chances of introducing new errors is low due to automated tests). The opposite line argues that TDD incurs too much overhead and will negatively impact productivity because too much time and focus may be spent on authoring tests as opposed to adding new functionality <ref type="bibr" target="#b46">[46]</ref>.</p><p>A systematic review that aggregated the available evidence about the effectiveness of TDD found that TDD does not have a consistent effect on productivity. The evidence from controlled experiments suggests an improvement in productivity when TDD is used. However, the pilot studies provide mixed evidence, some in favor of and others against TDD. In the industrial studies, the evidence suggests that TDD yields worse productivity. Even when considering only the more rigorous studies, the evidence is equally split for and against a positive effect on productivity. Ten studies resulted in higher productivity for TDD than otherwise, nine studies led to worse productivity for TDD, while six additional studies found no significant effect on productivity at all <ref type="bibr" target="#b46">[46]</ref>.</p><p>Based on a more detailed investigation of the results, the authors could not recommended any specific context that would benefit from the use of TDD. The results do not suggest to which domains TDD is applicable, to which kinds of tasks within a domain, or to which projects sizes and complexities it is applicable. Furthermore, the studies do not make it clear whether TDD is an applicable practice for developing embedded systems or for developing highly decentralized systems where incremental testing may not be feasible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Pair Programming</head><p>Pair programming is one of the best documented and most popular agile practices, and it has been the subject of a relatively large body of empirical research from an industrial perspective <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b26">[26]</ref>. Like the TDD example, common to most of the PP studies is the general question of whether pairs outperform individuals in programming tasks without consideration of context.</p><p>Claims as to both the benefits and the adversities of PP abound.</p><p>Advocates of PP claim that it has many benefits over individual programming when applied to new code development or when used to maintain and enhance existing code. Stated benefits include higher-quality code, shorter development duration, happier programmers, improved teamwork, improved knowledge transfer, and enhanced learning (see <ref type="bibr" target="#b18">[18]</ref>). There are also expectations with respect to the benefits and drawbacks of various kinds of pairing, e.g., expert-expert vs. novice-novice pairing. However, the finding across decades of small group research is that groups usually fall short of reasonable expectations to improved performance (see <ref type="bibr" target="#b26">[26]</ref>).</p><p>Motivated by the diverse claims regarding PP a meta-analysis on the effectiveness of PP, which extended the analysis presented by Dybå et al. <ref type="bibr" target="#b18">[18]</ref>, was undertaken, taking into account betweenstudy variance, subgroup differences, and publication bias <ref type="bibr" target="#b26">[26]</ref>.</p><p>The meta-analysis included 18 studies, which showed a small positive overall effect of PP on quality, a medium positive overall effect on duration, and a medium negative overall effect on effort.</p><p>The meta-analysis suggests that PP is not uniformly beneficial or effective, that inter-study variance is high, and that publication bias might be an issue. It showed large and partly contradictory differences in overall effects, specifically with respect to duration and effort. Also, differences in research design and methodological rigor across the studies, makes it difficult to compare the findings. For example, some studies used student homework assignments as experimental tasks, some used repeated measure designs in which the same subjects worked individually as well as in pairs, while others employed quasi-experimental designs for the assignment of subjects to treatments. The approach to partner selection also differed considerably, ranging from self-selection by pairs to matching pairs on abilities or experience levels. Yet another source of variation is the unit of analysis employed in these studies. For example, certain studies used the programming team as the unit of analysis, whereas others used a dyad <ref type="bibr" target="#b3">[3]</ref>.</p><p>These issues point to a need for untangling the moderating factors of the effect of PP. The meta-analysis also concluded that the question of whether PP is better than solo programming is not precise enough to be meaningful, since the answer depends on other factors, for example, the expertise of the programmers and on the complexity of the system and tasks to be solved.</p><p>Indeed, expertise and task complexity are perhaps the most central situation-independent predictors of SE performance <ref type="bibr" target="#b8">[8]</ref>. Situationdependent factors, on the other hand, include more dynamic factors such as motivation, team climate, organizational issues, etc. Theory predicts that experts perform better on complex tasks than do novices because experts' level of understanding corresponds to the deep structure of a complex task <ref type="bibr" target="#b22">[22]</ref>.</p><p>The collaborative nature of PP also influences what social mechanisms (e.g., social loafing, social laboring, social facilitation, social inhibition, and social compensation) are applicable. However, these social mechanisms also depend on a host of other factors. In a meta-analysis of social loafing (the phenomenon that individuals tend to expend less effort when working collectively than when working individually), Karau and Williams <ref type="bibr" target="#b31">[31]</ref> identified several conditions in which such loafing is eliminated (e.g., by high group cohesion) and some in which the opposite phenomenon, social laboring, could be observed (i.e., greater effort on group tasks). Social laboring seems to occur when complex or highly involving tasks are performed, or when the group is considered important for its members, or if the prevailing values favor collectivism rather than individualism <ref type="bibr" target="#b9">[9]</ref>.</p><p>Group performance also depends on whether a task is additive, compensatory, disjunctive, or conjunctive <ref type="bibr" target="#b9">[9]</ref>. For example, for conjunctive tasks, all group members must contribute to the solution, but for disjunctive tasks it suffices that one group member has the ability to complete the task. However, it is not obvious what sort of task PP is in this respect. Figure <ref type="figure" target="#fig_1">2</ref> is good example of the relationship between context and empirical studies. It shows the results of a large experiment, with 295 professional developers, performed by Arisholm et al. <ref type="bibr" target="#b2">[2]</ref> that found moderating effects of both task complexity and expertise. Overall, the results showed that the pairs had an 8% decrease in duration with a corresponding 84% increase in effort and a 7% increase in correctness. However, the main effects of PP were masked by the moderating effect of system complexity, in that simpler designs had shorter duration, while more complex designs had increased correctness.</p><p>When considering the moderating effect of programmer expertise, junior pairs had a small (5%) increase in duration and thus a large increase in effort (111%), and a 73% increase in correctness. Intermediate pairs had a 28% decrease in duration (43% increase in effort) and a negligible (4%) increase in correctness. Senior pairs had a 9% decrease in duration (83% increase in effort) and an 8% decrease in correctness. Thus, the juniors benefited from PP in terms of increased correctness, the intermediates in terms of decreased duration, while there were no overall benefits of PP for seniors.</p><p>When considering the combined moderating effect of system complexity and programmer expertise on PP, there appears to be an interaction effect: Among the different treatment combinations, junior pairs assigned to the complex design had a remarkable 149% increase on correctness compared with individuals. Furthermore, intermediates and seniors experienced an effect of PP on duration on the simpler design, with a 39% and 23% decrease, respectively. However, the cost of this shorter duration was a corresponding decrease in correct solutions by 29% and 13%, respectively.</p><p>Hence, based on this experiment, the overall answer to the question of whether PP is "better" than solo programming is a clear "No". However, the more detailed examination of the evidence suggests that PP is faster than solo programming when programming task complexity is low and yields code solutions of higher quality when task complexity is high.</p><p>By cooperating, programmers may complete tasks and attain goals that would be difficult or impossible if they worked individually.  Junior pair programmers, for example, seem able to achieve approximately the same level of correctness in about the same amount of time (duration) as senior individuals. However, the higher quality for complex tasks comes at a price of a considerably higher effort (cost), while the reduced completion time for the simpler tasks comes at a price of a noticeably lower quality. These relationships give rise to a few evidence-based guidelines for the use of PP for professional software developers <ref type="bibr" target="#b18">[18]</ref>: If you do not know the seniority or skill levels of your programmers, but do have a feeling for task complexity, then employ pair programming either when task complexity is low and time is of the essence, or when task complexity is high and correctness is important.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">THE WAY FORWARD: CONTEXTUALIZING SE RESEARCH</head><p>The examples in the previous section clearly show that an obvious problem with current empirical SE research is in the stage of asking questions. The initial question posed, "Is &lt;technology x&gt; better than &lt;technology y?", e.g., "Is pair programming better than solo programming?" is meaningless. SE covers a highly diversified set of sociotechnical tasks, procedures, and systems based upon more or less well-defined theoretical formulations. Narrowing the question down to "Does pair programming lead to higher quality than solo programming" is no more meaningful than the general question, since the range of tasks and systems remain as diversified as within SE in general. Furthermore, this question fails to take into account the skill of the developers who may contribute to quality.</p><p>So, what is the appropriate question to be asked of empirical SE research? In all its complexity, the question towards which empirical SE research should ultimately be directed is the following:</p><p>What technology is most effective for whom, performing that specific activity, on that kind of system, under which set of circumstances?</p><p>This question resembles the goal part of the goal-question-metric (GQM) paradigm, which is a systematic approach for setting project goals tailored to the specific needs of an organization and defining them in an operational and tractable way <ref type="bibr" target="#b5">[5]</ref>. Relating it to the omnibus context in Figure <ref type="figure">1</ref>, and the example of PP in Section 3.2, we find:</p><p>What technology (PP vs. solo programming), is most effective (in terms of improvement in correctness), for whom (highly skilled developers), performing that specific activity (change tasks), on that kind of system (complex system designed with a delegated control style), under which set of circumstances (in the subjects' normal work environment for a full-day experiment)?</p><p>Posing the question in this manner, it becomes obvious that in order for knowledge to meaningfully accumulate across separate studies and provide a solid empirical foundation for subsequent research, it will be necessary for every empirical investigation to adequately describe, measure, or control a potentially large number of discrete context variables. However, as we will demonstrate, applying an experimental logic to this problem based on ready-made lists of discrete context factors is not a viable option.</p><p>The experimental logic, which underpins most empirical SE research, is to identify the 'dependent variable' that captures the 'outcome' or 'effect' that needs to be explained, and the 'independent variables' that have impact on, or explain variation in the dependent variable. A change in the independent variable (X) is said to 'bring about' change in the dependent variable (Y). The goal of an experiment is thus to isolate the critical causal condition, or treatment, (X 1 ) by experimental manipulation, with other potential influences (X 2 , X 3 , X 4 , etc.) being held in control.</p><p>The influence of X 1 on Y can thus be observed and measured directly. Another strategy for achieving 'control' is by statistical means; by observing and including variables in post hoc analyses.</p><p>The quasi-experimental and analytical modelling traditions in empirical SE research build on these strategies in which variables do the explanatory work and causal complexity is managed via the progressive addition of subsets of variables (like in the PP example). The prevailing view on context in empirical SE has the same variable oriented logic.</p><p>However, if we were to evaluate only a small selection of discrete context variables that presumably would influence the main effects of a study using this logic, we would quickly find it difficult because of combinatorial complexity. As an example, Petersen and Wohlin <ref type="bibr" target="#b37">[37]</ref> suggested a checklist for context documentation consisting of six facets: product, processes, practices and techniques, people, organization, and market, and a set of context elements describing each facet. However, Menzies et al. <ref type="bibr" target="#b33">[33]</ref> criticize Petersen and Wohlin since "they offer no way to learn new contextualizations or … no experimental confirmation that their contexts are the 'right' contexts" (p. 350), claiming that context is interesting only if it results in different and better treatments.</p><p>In total, Petersen and Wohlin suggested 21 context elements <ref type="bibr" target="#b37">[37]</ref>.</p><p>Even with simplified assumptions and a very conservative estimate for the number of legal values per context element, we get more than 4 billion combinations! Making matters even worse, Clarke and O'Connor <ref type="bibr" target="#b12">[12]</ref> proposed a reference framework of situational factors for software development processes consisting of 44 factors and 170 sub-factors. Assuming only two legal values for each sub-factor this results in a minimum of:</p><p>2 170 = 1.5x10 51 combinations of context factors.</p><p>As a comparison, there are:</p><p>1.33x10 50 atoms in the world <ref type="foot" target="#foot_1">1</ref> , which shows the absurdity of the variable oriented logic. Consequently, we need to shift focus away from a checklist-based approach to context in favor of a more dynamic view of software practice. Instead of viewing context as a set of discrete variables that statically surround parts of practice, we argue that context and practice stand in a mutually reflexive relationship to each other, with software practice, and the interpretive work it generates, shaping context as much as context shapes the practice.</p><p>On the one hand the traditional variables of empirical phenomena have to be supplemented by sociotechnical attributes and patterns that are intrinsic to the activity of software practice. On the other, the characteristics of research evidence as an interactive phenomenon, challenges the traditional notions of empirical SE research, suggesting a view of the relationship between evidence and context as a process that emerges and changes through time and space.</p><p>Given that in any study, there are an infinite number of contextual factors and combinations to consider, the decision as to which parameters along which to contextualize should be no different from the decision regarding which variables to control. Both decisions should be grounded in theory relevant to the phenomenon under study, or as Menzies et al. <ref type="bibr" target="#b33">[33]</ref> formulated it: "Rather than focus on generalities (that may be irrelevant to any particular project), empirical SE should focus more on contextspecific principles."</p><p>Therefore, we do not expect a single, precise, technical definition of context in SE. The term means quite different things within alternative research paradigms, and even within particular traditions seems to be defined more by situated practice, by use of the concept to work with particular analytic problems, than by formal definition <ref type="bibr" target="#b24">[24]</ref>. Like Goodwin and Duranti <ref type="bibr" target="#b24">[24]</ref>, we do not see the lack of a single formal definition, or even general agreement about what is meant by context, as a situation necessarily requires a remedy. We clearly dispute any attempt at providing a general framework or checklists of specific factors intended at describing the context of local, situated practice.</p><p>Instead, we encourage SE researchers to take a broad, omnibus, perspective to context in their studies and to actively take part in explaining how phenomena works, for whom, where, when, and why. Context is shaped by the specific activities being performed. It is crucial, therefore, to acknowledge that any definition of context can only be done in relation to a specific practice situation <ref type="bibr" target="#b17">[17]</ref>.</p><p>However, simply naming an organization, describing a site in detail, or doing a longitudinal study does not constitute a contextual contribution. Rather, these means of fostering context have to be used in a way that adds explanatory value to a study. So, if we are to move beyond simple assertions that the context is important, we need to articulate more clearly how contextual influences operate. Perhaps the best question to ask oneself is this:</p><p>Does the inclusion of this information explain the constraints on, or the opportunities for, the phenomenon I am studying?</p><p>There are several ways to explore and exploit contextual impact in empirical SE research. Menzies et al. <ref type="bibr" target="#b33">[33]</ref>, for example, suggest that, rather than seeking general principles that apply to many projects, empirical SE should focus on ways to find the best local lessons for groups of related projects. Following Johns <ref type="bibr" target="#b30">[30]</ref>, we mention a few ways to explore and exploit contextual impact that are related to research design, measurement, analysis, and reporting. However, to succeed with such contextualization, a prerequisite is theoretical grounding and familiarity with the research site(s).</p><p>• Perform cross-level comparative research that explicitly demonstrate how higher-level situational factors such as environmental uncertainty and market conditions affect lowerlevel factors such as individual behavior and team autonomy.</p><p>• Perform longitudinal research that studies processes and examines how behavior unfolds over time or how software teams and organizations configure themselves to deal with recurrent problems.</p><p>• Study critical events that can punctuate context and make possible research and theory that form part of a larger whole, such as Moe et al.'s <ref type="bibr" target="#b35">[35]</ref> study of the introduction of selfmanaging teams.</p><p>• Collect qualitative data that illuminate context effects and interactions that might affect behavior in a studied setting, or that can aid in making inferences about the situation.</p><p>• Measure multiple dependent variables that can uncover situational context when used in conjunction with one another or explain the gap in meaning, such as Dybå et al.'s <ref type="bibr" target="#b20">[20]</ref> multiple measurement of software methodology usage.</p><p>• Use analytic strategies that are sensitive to the distributional properties of data, rather than simply exploring means, and contextual control variables that can explain interactions with main effects, as shown in the pair programming example.</p><p>• Report contextual information that has theoretical bearing on the study's results or that might be useful to others (e.g., metaanalysts) in the future <ref type="bibr" target="#b13">[13]</ref>, <ref type="bibr" target="#b14">[14]</ref>. A good place to begin is to ensure that the elements of omnibus context are addressed in adequate detail: what was studied, who was studied, where were they studied, when were they studied, and why were they studied?</p><p>The last point is especially important to enable the identification of recurring themes or common contextual factors across studies. Systematic reviews conducted with respect to the determination of why study results differ (as they are likely to do), and the evaluation of the potentially contrasting insights from empirical studies will generally be more helpful than those that focus on identifying average effects <ref type="bibr" target="#b13">[13]</ref>. Seemingly unpatterned and disagreeing findings from quantitative studies may have underlying consistency when omnibus context is taken into account. Qualitative data may also be useful in capturing developers' subjective evaluations of organizational-or projectlevel interventions and outcomes. In addition, qualitative findings can be used to develop theories and to identify relevant variables to be evaluated in future quantitative studies.</p><p>However, the presence of contextual variables does not mean they will shape software practice or be of theoretical interest. The context must act on, be noticed by, and be construed as important by individuals and groups before it can influence practice.</p><p>Discovering that contextual variables are present but do not appear to be influential is often as important from a research perspective as confirming their power <ref type="bibr" target="#b36">[36]</ref>.</p><p>Maybe the most critical issue in contextualizing empirical SE research is our willingness, as researchers, to immerse ourselves in the context. Empirical studies in leading SE conferences and journals are often based on laboratory studies using students as subjects. About 90% of the subjects who take part in these experiments are students <ref type="bibr" target="#b44">[44]</ref>. The applicability of most experimental results to an industrial setting may, therefore, be questioned.</p><p>When researchers move into the field, it is often to administer questionnaires to anonymous respondents who return them by mail, or by performing online surveys of organizational members or various online software communities. Thus, software practice is often studied without going near the organization and without talking to any of its members. Doing research so remote from the industrial context has costs, both in terms of the depth of understanding researchers can achieve and with respect to the inspiration that leads to new, relevant areas of inquiry.</p><p>In general, the more similar the research setting of a study is to the context in which the results will be applied, the more directly relevant the study is perceived. Fenton et al. <ref type="bibr" target="#b23">[23]</ref>, for example stated that "evaluative research must involve realistic projects with realistic subjects, and it must be done with sufficient rigor to ensure that any benefits identified are clearly derived from the concept in question. This type of research is time-consuming and expensive and, admittedly, difficult to employ in all softwareengineering research. It is not surprising that little of it is being done."</p><p>In this situation, the most realistic research setting is found in action research studies, because the context of the study is the same as the context in which the results will be applied for a given organization, apart from the presence of the researcher(s). The context of industry-based case studies is also generally very similar to the setting of application, although researchers may study phenomena that might not be regarded as very relevant by the studied organization. Hence, more (high-quality) action research and case studies should be conducted. The increasing number of qualitative studies appearing in our leading journals may suggest a positive trend in this direction <ref type="bibr" target="#b21">[21]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSION</head><p>The aim of this paper was to provide an overview of how context affects empirical research and how empirical SE research can be better 'contextualized' in order to provide a better understanding of what works for whom, where, when, and why.</p><p>Empirical SE is concerned with different technologies, actors, activities, and systems, and therefore contexts, which demand higher levels of contextualization for accuracy in empirical generalization. Progress in this area is unlikely, however, if research is conducted with students in academic settings, through online surveys, or through short visits to companies during which questionnaires are distributed to convenience samples.</p><p>Contextualization requires immersion and a focus on relevant phenomena, which means that SE researchers need to invest considerable time within the practice they wish to understand. Action research and case studies applying qualitative and ethnographic methods are examples of approaches that will aid this immersion. Immersion will also enable us to move the discipline into a more useful direction that will counter the common criticism that much empirical SE research is irrelevant for software organizations and their members.</p><p>Empirical SE research only becomes comprehensible when one takes into account the larger sociotechnical frameworks within which it is embedded. It is all about context, interpretation, and evaluation. However, what counts as context will depend on the substantive problem under scrutiny; it cannot be captured by generalized lists of discrete variables. So, if we are to move beyond simple assertions that the context is important, we need to articulate more clearly how contextual influences operate.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. The moderating effects of programmer expertise (left column) and system complexity (right column) on the relation of pair programming on duration, effort, and correctness (Arisholm et al., 2007).</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>'When' refers to the time at which the research was conducted or research events occurred. For example, it includes when the data was collected and reflects the role of temporal factors in the research. Time affects the sociotechnical relationships that surround all aspects of software development, and is especially important for researchers who deal with software product lifecycles. Key contextual conditions of time are also related to whether the study is cross-sectional or longitudinal. Repeated calls for longer duration of experimental tasks<ref type="bibr" target="#b43">[43]</ref> and more longitudinal research<ref type="bibr" target="#b40">[40]</ref> in SE underscore the importance of the temporal dimension in contextual influences.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>http://education.jlab.org/qa/mathatom_05.html</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discrete context:</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Evaluating the Effect of a Delegated versus Centralized Control Style on the Maintainability of Object-Oriented Software</title>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="521" to="534" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Evaluating Pair Programming with Respect to System Complexity and Programmer Expertise</title>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">E</forename><surname>Gallis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="65" to="86" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Are Two Heads Better Than One For Software Development? The Productivity Paradox of Pair Programming</title>
		<author>
			<persName><forename type="first">V</forename><surname>Balijepally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mahapatra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nerur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">H</forename><surname>Price</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MIS Quarterly</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="91" to="118" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The moderator-mediator variable distinction in social psychological research: Conceptual, strategic, and statistical considerations</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Baron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Kenny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Personality and Social Psychology</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1173" to="1182" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The TAME Project: Towards Improvement-Oriented Software Environments</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Basili</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rombach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="758" to="773" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Building Knowledge through Families of Experiments</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Basili</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Shull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Lanubile</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="456" to="473" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Evaluating Methods and Technologies in Software Engineering with Respect to Developers&apos; Skill Level, Accepted to EASE</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Bergersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Inferring skill from tests of programming performance: Combining time and quality</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Bergersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Hannay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">!</forename><surname>Karahasanovi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ESEM&apos;2011</title>
		<meeting>ESEM&apos;2011</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="305" to="314" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Brown</surname></persName>
		</author>
		<title level="m">Group Processes: Dynamics within and between Groups</title>
		<imprint>
			<publisher>Blackwell</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Making Sense of Software Development and Personality Types</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">F</forename><surname>Capretz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ahmed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IT Professional</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="6" to="14" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Redefining</title>
		<author>
			<persName><forename type="first">E</forename><surname>Chin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Written Communication</publisher>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="445" to="482" />
		</imprint>
	</monogr>
	<note>context&quot; in research on writing</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The situational factors that affect the software development process: Towards a comprehensive reference framework</title>
		<author>
			<persName><forename type="first">P</forename><surname>Clarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>O'connor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Software Technology</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="433" to="447" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Cruzes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<title level="m">Research Synthesis in Software Engineering: A Tertiary Study, Information and Software Technology</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="440" to="455" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Recommended Steps for Thematic Synthesis in Software Engineering</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Cruzes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ESEM&apos;2011</title>
		<meeting>ESEM&apos;2011</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="275" to="284" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Improvisation in Small Software Organizations</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="82" to="87" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Factors of Software Process Improvement Success in Small and Large Organizations: An Empirical Study in the Scandinavian Context</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ESEC/FSE&apos;2003</title>
		<meeting>ESEC/FSE&apos;2003</meeting>
		<imprint>
			<publisher>ACM press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="148" to="157" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Dynamic Model of Software Engineering Knowledge Creation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Managing Software Engineering Knowledge</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Aurum</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="95" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Are Two Heads Better than One? On the Effectiveness of Pair-Programming</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hannay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Shull</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="12" to="15" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Evidence-based Software Engineering for Practitioners</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Kitchenham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jørgensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="58" to="65" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Measuring Software Methodology Usage: Challenges of Conceptualization and Operationalization</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Moe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ISESE&apos;2005</title>
		<meeting>ISESE&apos;2005</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="447" to="457" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prikladnicki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rönkkö</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Seaman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sillito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Qualitative Research in Software Engineering, Empirical Software Engineering</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="425" to="429" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Expert Performance: Its Structure and Acquisition</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Ericsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Charness</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Psychologist</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="725" to="747" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Science and Substance: A Challenge to Software Engineers</title>
		<author>
			<persName><forename type="first">N</forename><surname>Fenton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Pfleeger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Glass</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="86" to="95" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Rethinking context: Language as an interactive phenomenon</title>
		<author>
			<persName><forename type="first">C</forename><surname>Goodwin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Duranti</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Cambridge Univ. Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Specifying organizational contexts: Systematic links between contexts and processes in organizational behavior</title>
		<author>
			<persName><forename type="first">M</forename><surname>Griffin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Organizational Behavior</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="859" to="863" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Hannay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sjøberg</surname></persName>
		</author>
		<title level="m">The Effectiveness of Pair Programming: A Meta-Analysis, Information and Software Technology</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="1110" to="1122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">How Hard Is Hard Science, How Soft Is Soft Science? The Empirical Cumulativeness of Research</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Hedges</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Psychologist</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="443" to="455" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Using Students as Subjects: A Comparative Study of Students and Professionals in Lead-Time Impact Assessment</title>
		<author>
			<persName><forename type="first">M</forename><surname>Höst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Regnell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wohlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Empirical Software Engineering</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="201" to="214" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Substantive and methodological constraints on behavior and attitudes in organizational research</title>
		<author>
			<persName><forename type="first">G</forename><surname>Johns</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Organizational Behavior and Human Decision Processes</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="80" to="104" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">The Essential Impact of Context on Organizational Behavior</title>
		<author>
			<persName><forename type="first">G</forename><surname>Johns</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Academy of Management Review</publisher>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="386" to="408" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Social loafing: a metaanalytic review and theoretical integration</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Karau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Personality and Social Psychology</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="681" to="706" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Preliminary Guidelines for Empirical Research in Software Engineering</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Kitchenham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Pfleeger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Pickard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Hoaglin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>El Emam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rosenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="721" to="734" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Local vs. Global Models for Effort Estimation and Defect Prediction</title>
		<author>
			<persName><forename type="first">T</forename><surname>Menzies</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Butcher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Marcus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zimmermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cok</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ASE&apos;2011</title>
		<meeting>ASE&apos;2011</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="343" to="351" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Michailova</surname></persName>
		</author>
		<title level="m">Contextualizing in International Business research: Why do we need more of it and how can we be better at it? Scandinavian Journal of Management</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="129" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Overcoming Barriers to Self-management in Software Teams</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Moe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dingsøyr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="20" to="26" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Organizational behavior: Linking individuals and groups to organizational contexts</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mowday</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sutton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annual Review of Psychology</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="195" to="229" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Context in Industrial Software Engineering Research</title>
		<author>
			<persName><forename type="first">K</forename><surname>Petersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wohlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ESEM&apos;2009</title>
		<meeting>ESEM&apos;2009</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="401" to="404" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Location, location, location: contextualizing organizational research</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Rousseau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Fried</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Organizational Behavior</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1" to="13" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">F</forename><surname>Shull</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Believe! IEEE Software</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="4" to="7" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jørgensen</surname></persName>
		</author>
		<title level="m">The Future of Empirical Methods in Software Engineering Research, Proc. FOSE&apos;2007</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="358" to="378" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Building Theories in Software Engineering</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Anda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hannay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advanced Topics in Empirical Software Engineering</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Shull</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Singer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Sjøberg</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="312" to="336" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Anda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jørgensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karahasanovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">F</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vokac</surname></persName>
		</author>
		<title level="m">Conducting Realistic Experiments in Software Engineering, Proc. ISESE&apos;</title>
		<imprint>
			<date type="published" when="2002">2002. 2002</date>
			<biblScope unit="page" from="17" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Challenges and Recommendation when Increasing the Realism of Controlled Software Engineering Experiments</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Anda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Arisholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dybå</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jørgensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karahasanovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vokac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Empirical Methods and Studies in Software Engineering -Experiences from ESERNET</title>
		<title level="s">LNCS 2765</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Conradi</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Wang</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="24" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A Survey of Controlled Experiments in Software Engineering</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I K</forename><surname>Sjøberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Hannay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Kampenes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">!</forename><surname>Karahasanovi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Liborg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N.-K</forename><surname>Rekdal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="733" to="753" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">The Evolution of Socio-Technical Systems: A Conceptual Framework and an Action Research Program</title>
		<author>
			<persName><forename type="first">E</forename><surname>Trist</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981">1981</date>
		</imprint>
		<respStmt>
			<orgName>Ontario Quality of Working Life Center</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">How Effective is Test Driven Development?</title>
		<author>
			<persName><forename type="first">B</forename><surname>Turhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Layman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Diep</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Shull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Erdogmus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Making Software: What Really Works, and Why We Believe It</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Wilson</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Orham</surname></persName>
		</editor>
		<imprint>
			<publisher>O&apos;Reilly Press</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="207" to="219" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Contextualizing Entrepreneurship: Conceptual Challenges and Ways Forward</title>
		<author>
			<persName><forename type="first">F</forename><surname>Welter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Entrepreneurship Theory and Practice</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="165" to="184" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">An Examination of the Interface between Context and Theory Applied to the Study of Chinese Organizations</title>
		<author>
			<persName><surname>Whetten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management and Organization Review</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="55" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">What Constitutes a Theoretical Contribution</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Whetten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Academy of Management Review</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="490" to="495" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Software process tailoring: an empirical investigation</title>
		<author>
			<persName><forename type="first">P</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ramesh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Management Information Systems</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="293" to="328" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
