<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Swarm Intelligence for Permutation Optimization: A Case Study of n-Queens Problem</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Xiaohui</forename><surname>Hu'-'</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical and Computer Engineering Purdue School of Engineering and Technology</orgName>
								<address>
									<settlement>Indianapolis</settlement>
									<region>Indiana</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Russell</forename><forename type="middle">C</forename><surname>Eberhart'</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical and Computer Engineering Purdue School of Engineering and Technology</orgName>
								<address>
									<settlement>Indianapolis</settlement>
									<region>Indiana</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yuhui</forename><surname>Shi'</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical and Computer Engineering Purdue School of Engineering and Technology</orgName>
								<address>
									<settlement>Indianapolis</settlement>
									<region>Indiana</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Biomedical Engineering</orgName>
								<orgName type="institution">Purdue University</orgName>
								<address>
									<settlement>West Lafayette</settlement>
									<region>Indiana</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">EDS Embeded Systems Group Kokomo</orgName>
								<address>
									<region>Indiana</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Swarm Intelligence for Permutation Optimization: A Case Study of n-Queens Problem</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">187F71B06EAC45F5AB6D9E97B83A33BC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:07+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper introduces a modified Particle Swarm . Optimizer which deals with permutation problems. Particles are defined as permutations of a group of unique values. Velocity updates are redefined based on the similarity of two particles. Particles change their permutations with a random rate defined by their velocities. A mutation factor is introduced to prevent the current pBest from becoming stuck at local minima. Preliminary study on the n-queens problem shows that the modified PSO is promising in solving constraint sstisfication problems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">PVRODUCTION</head><p>A permutation problem is a constraint satisfaction problem with the same number of variables as values, in which each variable takes a unique value. Any solution can be thought of as assigning a permutation to the variables. When a permutation satisfies all the constraints, it is considered a feasible solution. For a permutation problem, there might be one or multiple feasible solutions. The n-queens problem is one of the best examples of permutation problems. Permutation optimization problems have been found in many areas. There are many techniques developed to handle permutation problems. In this paper, a new method called particle swarm optimization (PSO) is introduced to handle the permutation problems.</p><p>The n-queens problem consists of placing n queens on an N by N chess board, so that they do not attack each other, i.e. on every row, column or diagonal, there is only one queen exists. It is a classical complex constraint satisfaction problem in the artificial intelligence (AI) area. It has been used as a benchmark for developing new AI search techniques. During the last three decades, the problem has served as an example and benchmark for backtracking algorithms, permutation generation, the divide and conquer paradigm, constraint satisfaction problems, neural networks, and genetic algorithms. Also, the n-queens problem has many practical applications such as VLSl testing, air traffic control, modem communication systems, datdmessage routing, load balancing in multiprocessor computers, data compression, computer task scheduling, and optical parallel processing <ref type="bibr">[I]</ref>.</p><p>The n-queens problem bas three variants: finding one solution, finding a family of solutions, and finding all solutions. This paper deals with finding one solution within a family. The rest of the paper is organized as follows: Section 11 reviews the basic forms of particle swarms. Section 111 describes the new methods for velocity update and particle update to handle the permutation parameter set. Section IV describes the n-queens problem, and Section V summarizes the experimental results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">PARTICLE SWARM OPTIMIZATION</head><p>Similar to Genetic Algorithms (GAS), PSO is a population based optimization tool. The system is initialized with a population of random solutions and searches for optima by updating potential solutions over generations. However, unlike GA, PSO has no evolution operators such as crossover and mutation. In PSO, the potential solutions, called particles, "fly" through the problem space by following the current better-performing particles.</p><p>Each particle keeps track of its coordinates in the problem space which are associated with the best solution (fitness) it has achieved so far. (The fitness value is also stored.) This value is called pbest. Another "best" value that is tracked by the particle swarm optimizer is the best value, obtained so far by any particle in the neighborhood of the particle. This location is called nbest. <ref type="bibr">When</ref>  </p><formula xml:id="formula_0">+ c , x rand() x -X) -X) + Update particle position - - - x"-". = %,d + ""ew I ,</formula><p>Until termination criterion is met e,bes, F i g r e I: Procedure of PSO</p><p>The particle swarm optimization concept consists of, at each time step, changing the velocity of (accelerating) each particle toward its pbes! and nbest locations (local version pf PSO). Acceleration is weighted by a random term, with separate random numbers being generated for acceleration toward pbes! and nbes! locations. Figure <ref type="figure">1</ref> shows the typical procedure of PSO.</p><p>One of the reasons that particle swarm optimization is attractive is that there are few parameters to adjust. One version, with slight variations, works well for a wide variety of applications. Particle swarm optimization has been used for approaches that can be used across a wide range of applications, as well as for specific applications focused on a specific requirement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ill. DEALING WITH PERMUTATION SEI</head><p>In traditional PSO, each particle represents a solution in the parameter space. The particle is encoded as a string of positions, which represent a multidimensional space. All the dimensions typically are independent of each other, thus the updates of the velocity and the particle are performed independently in each dimension. This is one of merits of PSO. However, it is not applicable for permutation problems since the elements are not independent of each other. It is possible that two or more positions can get the same value after the update, which breaks the pennutation rule. Thus the .._ 1 I 1 3 1 1 7 1 6 I... conflicts must be eliminated. Here a new particle update strategy is proposed.</p><p>In traditional PSO, the velocity is added to the particle on each dimension to update the particle, thus it is a distance measure. If the velocity is larger, the particle may explore more distant areas. Similarly, the new velocity in the permutation scenario represents the possibility that the particle changes. If the velocity is larger, the particle is more likely to change to a new permutation sequence. The velocity update formula remains the same. However the velocity is limited to absolute values since it only represents the difference between particles. The particle update process is changed as follows: the velocity is normalized to the range of 0 to I by dividing it by the maximum range of the particle. Then each position randomly determines if there is a swap with a probability determined by the velocity. If a swap is required, the position will set to the value of same position in nBesf by swapping values. This process is shown in Figure <ref type="figure">2</ref>. Mutation is introduced due to the shortcoming of the above modification of PSO. Since the particle tries to follow the same sequence as ndest, it would stay in its current position forever when it was identical to nBes!. So a new kind of mutation factor is introduced. The particle will randomly swap one pair of positions in the permutation as shown in Figure <ref type="figure" target="#fig_2">3</ref> if it is identical to nBest. In the following section, the n-queens problem is used to test the performance and validity of the new velocity and particle update technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. N-QUEENS PROBLEM</head><p>In this study, n-dimension permutations are used to represent the solution of the n-queens problem. Each particle uses a permutation of n numbers from 1 to N as the potential solution. The ith number of the permutation represents the column position in the ith row ofthe chessboard. To illustrate how it appears in the population, the particle for N=6 problems may be the following: 3 6 2 4 I 5. The first number means the first queen is at the third position in the first row, the second number means the second queen is at the sixth position in the second row, and so on. Figure <ref type="figure" target="#fig_3">4</ref> shows a translation 6.om the permutation to the chessboard positions.</p><p>Perm" la ti an : Thus to fmd a solution, the objective is to eliminate the diagonal conflicts. The fitness function is defined as the number of conflicts or collisions along the diagonals of the hoard. The objective is changed to minimize the number of conflicts or collisions. The fitness value of an ideal final solution should be zero.</p><formula xml:id="formula_1">Chess Board</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENTAL RESULTS</head><p>In PSO, the parameters were set as follows: the population size was IO,    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSlONS</head><p>The purpose of the study was to determine how well PSO handles permutation parameter sets. The n-queens problem was used to test the performance and validity of the new technique. The performance of PSO compares well with genetic algorithms. It demonstrated that PSO is effective to handle n-queens problem. However, it still needs to be verified whether this approach can be extended to other combinatorial or constraint satisfaction problems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>PSO is a population based stochastic optimization technique developed by Eberhart and Kennedy in 1995, inspired by social behavior of bird flocking or fish schooling [2, 31. During the past several years, PSO has been successfully applied to multidimensional optimization problems [4], artificial neural network training [5-71, and multiobjective optimization problems [8-IO]. However, there is no research on permutation optimization reported in the literature.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Figure 2: Panicle update</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Particle mutation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Permutation representation of n-queens pmblem By using permutations, the horizontal and vertical conflicts of the queens are eliminated [ 1 I]. Thus to fmd a solution, the objective is to eliminate the diagonal conflicts. The fitness function is defined as the number of conflicts or collisions along the diagonals of the hoard. The objective is changed to</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>the local version of PSO was used and the neighborhood size was 2. The maximum velocity was set to the range of the permutation. The inertia weight was [ O S + ( R n M . O ) ] . The learning rates were 1.49445.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure. 5</head><label>5</label><figDesc>Figure. 5 shows the results for the problems of IO to 200 queens. Each parameter combination was run 100 times and the results represent the mean number of function evaluations to reach a solution.From the results, it can be seen that PSO successfully finds a solution of the n-queens problems in a short time. Furthermore, the numbers of function evaluations increase near linearly as the numbers of queens increase.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>a particle takes all the population as its topological neighbors, the best value is a global best and is called gbest P Choose the particle with the best fitness value of all the topological neighbor particles as the nBest For each particle {</figDesc><table><row><cell>Initialize the population</cell></row><row><cell>Do {</cell></row><row><cell>For each particle {</cell></row><row><cell>Calculate fitness value</cell></row><row><cell>If the fitness value is better than the best fitness</cell></row><row><cell>value @Best) in history</cell></row><row><cell>Set current value as the new pBesr</cell></row><row><cell>Calculate new velocity</cell></row><row><cell>pneM, = w x</cell></row><row><cell>c2 x Rand() x</cell></row></table><note><p>... I50 I 5 I 10 I40 I 2 5 I ... ,</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table I</head><label>I</label><figDesc>shows some comparisons and it can be seen that this method is competitive with GA based algorithms [ I , 1 I].</figDesc><table><row><cell>0</cell><cell>50</cell><cell>100</cell><cell>150</cell><cell>200</cell></row><row><cell></cell><cell cols="3">Number of Queens</cell><cell></cell></row><row><cell></cell><cell cols="2">queens problem</cell><cell></cell><cell></cell></row></table><note><p>Figure 5: Number of fitness evBbationS needed for different number of n-</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table I :</head><label>I</label><figDesc>Comparison ofthe results for different n-queens approaches</figDesc><table><row><cell></cell><cell>5,669.7</cell><cell>2,043</cell><cell>6,024</cell></row><row><cell></cell><cell>14,991.4</cell><cell>59,227</cell><cell>19,879</cell></row><row><cell>IO0</cell><cell>36,199.4</cell><cell>244,208</cell><cell>44.578</cell></row><row><cell>2 w</cell><cell>93.4399</cell><cell>340.991</cell><cell>86.747</cell></row></table><note><p><p><p>* the n u m k used here are digitized from the basic GA results of the Figure iltustrated in</p>[I]</p>. They are not accurate.</p></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A new local search algorilhm based on ~ennic algorithms for the &quot;queen problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kilic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Genetic and Evolutionary Compulalion Conference (GECCO 2M)I) Second Workshop on Memetic Algorithms (2nd WOMA)</title>
		<meeting>the Genetic and Evolutionary Compulalion Conference (GECCO 2M)I) Second Workshop on Memetic Algorithms (2nd WOMA)</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="158" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Eman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<title level="m">A new optimizer using panicle s w a m theory Proceedings ofthe Sixth htemationai SympOsium on Micromachine and Human Science</title>
		<meeting><address><addrLine>Nagoya. Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page">3943</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Panicle s w a m optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Ebrhan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="1942" to="1948" />
			<pubPlace>Piscalaway, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A modified panicle s w a m optimizer Proceedings ofthe IEEE Congress on Evolutionary Compulalion (CEC 1998)</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="middle">R C</forename><surname>Ebrrhon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NJ</title>
		<imprint>
			<biblScope unit="page" from="69" to="73" />
			<date type="published" when="1998">1998</date>
			<publisher>Pirculawuy</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Evolving aniiicial neural nelworks</title>
		<author>
			<persName><forename type="middle">R C</forename><surname>Eberhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings oflnlemotional Conference on Neural Networks and Brain</title>
		<editor>
			<persName><forename type="middle">P R</forename><surname>Beijing</surname></persName>
		</editor>
		<editor>
			<persName><surname>China</surname></persName>
		</editor>
		<meeting>lnlemotional Conference on Neural Networks and Brain</meeting>
		<imprint>
			<date type="published" when="1998">199. 1998</date>
			<biblScope unit="page">L13</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Human I r e &quot; analysis using panicle swam aplimization</title>
		<author>
			<persName><forename type="middle">R C</forename><surname>Eberhan</surname></persName>
		</author>
		<author>
			<persName><forename type="middle">X</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pmceedings d t h e IEEE Congress on evolutionary computalion (CEC 1999)</title>
		<meeting><address><addrLine>Washington D.C</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="1927" to="1930" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Training product &quot;nil networks using ~mpemlive panicle swam optimisers</title>
		<author>
			<persName><forename type="first">F</forename><surname>Van Den Bergh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Engelbrechl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedins oflNNS-IEEE lnlmational Joint Conference on Neural Networks</title>
		<meeting>eedins oflNNS-IEEE lnlmational Joint Conference on Neural Networks</meeting>
		<imprint>
			<publisher>Washington E€. USA</publisher>
			<date type="published" when="2001">2001. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">MOPSO: a proposal for multiple objective panicle swarm optimization</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Coello Coello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Lechuga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE C o n p s an Evolutionary Computation</title>
		<meeting>the IEEE C o n p s an Evolutionary Computation<address><addrLine>Honolulu, Hawaii USA</addrLine></address></meeting>
		<imprint>
			<publisher>CEC</publisher>
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Mulliobjeelive optimization using dynamic neighbohwd particle swam oplimizalion</title>
		<author>
			<persName><forename type="first">X</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Eberhan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName><surname>Ho~oiuiu</surname></persName>
		</author>
		<author>
			<persName><surname>Usa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Panicle swam optimization method in multiobjecliveprobles</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">E</forename><surname>Panopodor</surname></persName>
		</author>
		<author>
			<persName><forename type="middle">M</forename><surname>Vrahatir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Applied Computing 2002 (SAC 2002)</title>
		<meeting>the ACM Symposium on Applied Computing 2002 (SAC 2002)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="603" to="607" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The n-queens problem and gmelic algo&quot;1hmr</title>
		<author>
			<persName><forename type="middle">A A</forename><surname>Homaifar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Tumer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ali</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings ofthe IEEE Southeast Conference</title>
		<meeting>the IEEE Southeast Conference</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="262" to="261" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">I</forename></persName>
		</author>
		<author>
			<persName><forename type="first">]</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
