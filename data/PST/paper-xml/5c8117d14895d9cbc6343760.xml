<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Energy-efficient Adaptive Resource Management for Real-time Vehicular Cloud Services</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Mohammad</forename><surname>Shojafar</surname></persName>
							<email>mohammad.shojafar@uniroma1.it</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Information Engineering, and Telecommunication</orgName>
								<orgName type="institution">Sapienza University of Rome</orgName>
								<address>
									<addrLine>via Eudossiana 18</addrLine>
									<postCode>00184</postCode>
									<settlement>Rome</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nicola</forename><surname>Cordeschi</surname></persName>
							<email>nicola.cordeschi@uniroma1.it</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Information Engineering, and Telecommunication</orgName>
								<orgName type="institution">Sapienza University of Rome</orgName>
								<address>
									<addrLine>via Eudossiana 18</addrLine>
									<postCode>00184</postCode>
									<settlement>Rome</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Enzo</forename><surname>Baccarelli</surname></persName>
							<email>enzo.baccarelli@uniroma1.it</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Information Engineering, and Telecommunication</orgName>
								<orgName type="institution">Sapienza University of Rome</orgName>
								<address>
									<addrLine>via Eudossiana 18</addrLine>
									<postCode>00184</postCode>
									<settlement>Rome</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Energy-efficient Adaptive Resource Management for Real-time Vehicular Cloud Services</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">DA2864203D9F53C0188F2EFB704AA867</idno>
					<idno type="DOI">10.1109/TCC.2016.2551747</idno>
					<note type="submission">This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCC.2016.2551747, IEEE Transactions on Cloud Computing IEEE TRANSACTION ON CLOUD COMPUTING 1 This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCC.2016.2551747, IEEE Transactions on Cloud Computing IEEE TRANSACTION ON CLOUD COMPUTING</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>TCP/IP-based Vehicular Cloud Computing</term>
					<term>Cognitive Computing</term>
					<term>Virtualized Fog Centers</term>
					<term>Adaptive Resource Management</term>
					<term>Energy-efficiency</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Providing real-time cloud services to Vehicular Clients (VCs) must cope with delay and delay-jitter issues. Fog computing is an emerging paradigm that aims at distributing small-size self-powered data centers (e.g., Fog nodes) between remote Clouds and VCs, in order to deliver data-dissemination real-time services to the connected VCs. Motivated by these considerations, in this paper, we propose and test an energy-efficient adaptive resource scheduler for Networked Fog Centers (NetFCs). They operate at the edge of the vehicular network and are connected to the served VCs through Infrastructure-to-Vehicular (I2V) TCP/IP-based single-hop mobile links. The goal is to exploit the locally measured states of the TCP/IP connections, in order to maximize the overall communication-plus-computing energy efficiency, while meeting the application-induced hard QoS requirements on the minimum transmission rates, maximum delays and delay-jitters. The resulting energy-efficient scheduler jointly performs: (i) admission control of the input traffic to be processed by the NetFCs; (ii) minimum-energy dispatching of the admitted traffic; (iii) adaptive reconfiguration and consolidation of the Virtual Machines (VMs) hosted by the NetFCs; and, (iv) adaptive control of the traffic injected into the TCP/IP mobile connections. The salient features of the proposed scheduler are that: (i) it is adaptive and admits distributed and scalable implementation; and, (ii) it is capable to provide hard QoS guarantees, in terms of minimum/maximum instantaneous rates of the traffic delivered to the vehicular clients, instantaneous rate-jitters and total processing delays. Actual performance of the proposed scheduler in the presence of: (i) client mobility; (ii) wireless fading; and, (iii) reconfiguration and consolidation costs of the underlying NetFCs, is numerically tested and compared against the corresponding ones of some state-of-the-art schedulers, under both synthetically generated and measured real-world workload traces.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION AND REFERENCE VEHICULAR SCENARIO</head><p>V EHICULAR Cloud Computing (VCC) is a promising paradigm that aims at merging Mobile Cloud Computing (MCC) and Vehicular Networking (VN), in order to give arise to integrated communication-computing platforms <ref type="bibr" target="#b0">[1]</ref>. While safety applications have been the prime motivation behind VN, the final target of VCC is to shrink the spectrum of the supported services, in order to include the emerging Future Internet Applications <ref type="bibr" target="#b1">[2]</ref>. These are infotainment applications (such as, for example, Netflix and VTube), that exploit Infrastructure-to-Vehicle (I2V) links for providing data dissemination and content delivery services to connected Vehicular Clients (VCs) <ref type="bibr" target="#b2">[3]</ref>. Being of streaming type, these applications are delay and delay-jitter sensitive <ref type="bibr" target="#b3">[4]</ref>, so that the large delay and delay-jitter typically induced by Wide Area Networks (WANs) preclude the direct utilization of remote clouds as servers (see, for example, Chapter 8 of <ref type="bibr" target="#b4">[5]</ref>).</p><p>Hence, a new paradigm is emerging to meet the QoS requirements of vehicular Future Internet Applications, generally referred to as Fog Computing (shortly, Fog) <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>. In vehicular scenarios, Fog nodes are virtualized networked data centers (e.g., NetFCs), which are hosted by Road Side Units (RSUs) at the edge of the vehicular network, so to give arise to a three-tier Cloud-Fog-VC hierarchical architecture (see Fig. <ref type="figure" target="#fig_7">1a</ref>). Similar to Cloud centers, Fog nodes provide Preprint version April 06, 2016.</p><p>bandwidth, compute support, storage and application services to the connected VCs on a per-VC basis. However, the distinguishing features of the Fog paradigm are the following four ones <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>: (i) Edge location and location awareness: being deployed in proximity of the VCs, Fog nodes may efficiently exploit the awareness of the connection states for the support of delay and delay-jitter sensitive applications, such as VTube-like interactive applications <ref type="bibr" target="#b2">[3]</ref>; (ii) Geographical deployment: Fog nodes support services which demand for widely distributed geographical deployments, as, for example, vehicular video streaming services; (iii) Predominance of wireless access and support for the mobility: Fog nodes may exploit Infrastructure-to-Vehicular (I2V) single-hop IEEE 802.11-like wireless links for data dissemination; and, (iv) Low energy consumption: since, in vehicular applications, Fog nodes are hosted by RSUs, they are equipped with capacity-limited batteries, that should be (hopefully) re-charged through solar cells. Hence, attaining energy efficiency is a central target in the Fog paradigm <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Technical contribution overview and main idea of the paper</head><p>Motivated by the aforementioned considerations, we focus on the vehicular scenario of Fig. <ref type="figure" target="#fig_7">1a</ref>. In this scenario, Fog-equipped RSUs broadcast locally processed data to smartphone-equipped VCs through point-to-point TCP/IPbased I2V connections, which rely, in turn, on one-hop IEEE802.11-type wireless links <ref type="bibr" target="#b7">[8]</ref>. Regarding the technical contribution of the work and the novelty of the pursued approach, we point out that the resource management prob-lem afforded in this paper jointly embraces (see Fig. <ref type="figure" target="#fig_7">1b</ref>): (i) the adaptive control of the input and output traffic flows by coping with the random (possibly, unpredictable) fluctuations of the input traffic to be processed and the states of the utilized TCP/IP connections; (ii) the adaptive reconfiguration of the per-VM task sizes and processing rates; (iii) the adaptive reconfiguration of the intra-Fog perlink communication rates; and, (iv) the adaptive consolidation of the virtualized physical servers hosted by the Fog nodes. The pursued objective is the minimization of the average communication-plus-computing energy wasted by the overall TCP/IP-based Fog platform of Fig. <ref type="figure" target="#fig_7">1b</ref> under hard QoS requirements (e.g., hard bounds) on: (i) the average energy wasted by each TCP/IP-mobile connection and its minimum transmission rate; and, (ii) the per-connection maximum computing-plus-communication delay and jitter induced by the NetFC platform of Fig. <ref type="figure" target="#fig_7">1b</ref>. Due to the possible high number of involved VCs, RSUs and hosted VMs, we also require that the resulting adaptive scheduler allows distributed and scalable implementation. Overall, due to its self-sensing and self-configuring capabilities and distributed nature, we anticipate that the proposed resource scheduler is an instance of the emerging paradigm of the (networked) Cognitive Computing <ref type="bibr" target="#b2">[3]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Related work and outline of the paper</head><p>An examination of the (recently published) related work supports the conclusion that the adaptive optimization of the aforementioned scheduling actions has been till now pursued by following three main parallel (e.g., disjoint) research directions, so that the proposed cognitive computinginspired joint approach seems to be somehow new.</p><p>Specifically, a first research direction focuses on taskscheduling algorithms for the minimization of the energy in reconfigurable data centers that serve static clients <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b10">[11]</ref>. For this purpose, in <ref type="bibr" target="#b8">[9]</ref>, an energy-efficient greedytype scheduling algorithm is presented. It maps jobs to VMs and, then, maps VMs to Dynamic Voltage Frequency Scaling (DVFS)-enabled servers under upper bounds on the allowed per-job execution time. Interestingly, the resulting scheduler relies on a suitable version of the First-Fit-Decreasing (FFD) heuristic, in order to perform the most energy efficient VMto-server mapping and assignment of the processing rates to the servers. Its energy performance is, indeed, noticeable. However, we note that: (i) the application scenario of <ref type="bibr" target="#b8">[9]</ref> does not consider, by design, mobile clients; and, (ii) the admission control of the input workload is not performed and the bandwidths of the intra-datacenter links are assumed fixed. Energy-efficient joint reconfiguration of the overall communication-plus-computing resources in virtualized data centers is the topic of <ref type="bibr" target="#b9">[10]</ref>, where an approach based on the stochastic nonlinear optimization is pursued. Although the resulting scheduler is adaptive and guarantees bounded per-job execution times, we point out that: (i) the application scenario of <ref type="bibr" target="#b9">[10]</ref> does not consider mobile clients; and, (ii) resource consolidation and admission control of the input traffic are not performed. Energy-saving dynamic provisioning of the computing resources in virtualized green data centers is the topic of <ref type="bibr" target="#b10">[11]</ref>. Specifically, in order to avoid the prediction of future input traffic, the authors of <ref type="bibr" target="#b10">[11]</ref> resort to a Lyapunov-based technique that dynamically scales up/down the sizes of the VM's tasks and the corresponding processing rates by exploiting the available queue information. Although the pursued approach does not suffer from prediction errors, it relies on an inherent execution delay-vs.-utility tradeoff, that does not allow us to account for hard deadline on the execution times.</p><p>A second research direction deals with the energyefficient traffic offloading from VCs to serving RSUs by exploiting the underlying Vehicular-to-Infrastructure (V2I) wireless connections <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref>. In this framework, the focus of <ref type="bibr" target="#b11">[12]</ref> is on the optimized task and processing rate mapping of an assigned Task Interaction Graph (TIG) to a computing graph composed by networked reconfigurable computing nodes. As in our approach, hard constraints on the overall execution times are considered by <ref type="bibr" target="#b11">[12]</ref>. However, unlike our approach, we point out that: (i) the focus of <ref type="bibr" target="#b11">[12]</ref> is on the traffic offloading from mobile devices to remote clouds, so that the resulting task scheduler does not support, by design, data dissemination and content delivery services; (ii) the joint task and computing rate mapping afforded in <ref type="bibr" target="#b11">[12]</ref> is, by design, static; and, (iii) the scheduler in <ref type="bibr" target="#b11">[12]</ref> does not perform real-time reconfiguration and/or consolidation of the computing resources hosted by the serving cloud. The authors of <ref type="bibr" target="#b12">[13]</ref> develop a distributed scheduler for performing mobile-to-access point traffic offloading. The scheduler enforces cooperation among the mobile devices, in order to minimize the average energy consumption of the mobile devices under per-device hard upper bounds on the volumes of the traffic to be offloaded to the remote cloud. For this purpose, in <ref type="bibr" target="#b12">[13]</ref>, it is assumed that mobile devices can execute tasks locally, offload tasks to other cooperative mobile devices or to the remote cloud, in accordance with the decision taken by the proposed scheduler. Interestingly, it exploits a Lyapunov-based optimization approach, in order to attain a good tradeoff between the average energy wasted by the mobile devices for local/remote traffic offloading and the volume of the Internet traffic generated towards the remote cloud. Thus, similarly to our work, the energy-vs.-traffic tradeoff is the focus of <ref type="bibr" target="#b12">[13]</ref>. However, we point out that: (i) the work in <ref type="bibr" target="#b12">[13]</ref> does not consider a mobile scenario; (ii) the scheduler in <ref type="bibr" target="#b12">[13]</ref> does not enforce per-client QoS guarantees on the maximum execution-pluscommunication delay and/or the minimum processing rate; and, (iii) the energy wasted by the remote cloud for processing the offloaded traffic is not included in the objective function of <ref type="bibr" target="#b12">[13]</ref>.</p><p>A third research direction focuses on the energy consumption of hand-held wireless devices when traffic offloading over 3G/4G/WiFi connections is performed <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref>. Specifically, <ref type="bibr" target="#b13">[14]</ref> focuses on the CPU energy consumption of wireless devices by profiling the volume of computation that can be performed under a given energy budget. Interestingly, this paper supports the conclusion that DVFS does affect the computing energy efficiency of wireless devices, but not radically. Interestingly, it is showed in <ref type="bibr" target="#b13">[14]</ref> that the number of performed CPU cycles mainly depends on the sizes of the tasks and the burst factors of the task streams to be processed. According to this observation, a main result of <ref type="bibr" target="#b13">[14]</ref> is the characterization of the relationship between task sizes, average number of needed CPU cycles and burst factors of the processed task streams. Similar results are presented in <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b15">[16]</ref>, where analytical models for the average energy consumptions of 3G/WiFi and 4G connections are presented and tested through field trials. Overall, the contributions in <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b15">[16]</ref> do not afford, by design, resource management and/or scheduling optimization problems and the carried out energy analysis does not consider the effect of QoS constraints on the allowed computing-plus-communication delay.</p><p>The remainder of this paper is organized as follows. After presenting the architecture of the considered TCP/IPbased vehicular Fog platform in Section 2, the proposed joint scheduler is developed in Sections 3 and 4. Implementation aspects and implementation complexity of the proposed scheduler are the topics of Section 5. Numerical results attained through performance tests are presented in Section 6, while some conclusions are drawn in Section 7. Due to space limitations, detailed proofs of the most analytical results are not reported here. The interested reader may refer to <ref type="bibr" target="#b16">[17]</ref>.</p><p>Regarding the main adopted notation, E{.} indicates expectation, means "equal by definition", [x] b a and [x] + indicate: min{b; max{a; x}}, and: max{0; x}, respectively. Finally, E σ {ϕ{σ, s, q}} denotes the expectation of the multiargument function ϕ{σ, s, q} carried out over the probability density function (pdf) of the random variable (r.v.) σ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE CONSIDERED VCC INFRASTRUCTURE</head><p>Several recent research efforts target I2V networked infrastructures for the support of data dissemination and content delivery services <ref type="bibr" target="#b17">[18]</ref>. The main building blocks of these architectures are a number of static RSUs, which are deployed along the road and are spaced apart by Di (m). Each RSU serves a spatial cluster of radius Ra (m). It acts as a serving point for the VCs currently traveling on the served cluster and it is equipped with computing capability, in order to play the role of a Fog node <ref type="bibr" target="#b17">[18]</ref>. The RSUs may be also inter-connected by a wireless backbone (see the horizontal orange rays in Fig. <ref type="figure" target="#fig_7">1a</ref>), in order to allow inter-Fog data exchange when the served VCs move over adjacent spatial clusters <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>. According to the Dedicated Short-Range Communication (DSRC) standard for the Intelligent Transportation System (ITS) <ref type="bibr" target="#b1">[2]</ref>, an RSU provides (possibly, multiple) I2V point-to-point connections to the served VCs. At this regard, we shortly note that the current radio band of vehicular networks is located at 5.9 GHz and partitioned into seven channels. One control channel is designed to establish I2V transport connections, while the remaining service channels are employed to download data through point-to-point single-hop IEEE 802.11p radio links (see the RSU-to-vehicle green ray at the bottom of Fig. <ref type="figure" target="#fig_7">1a</ref>) <ref type="bibr" target="#b7">[8]</ref>. For this purpose, the transmission time over each service channel is partitioned into slots, T S (s) is the slot duration, t is the discrete-time slot index, and the t-th slot spans the semiopen time interval [tT S , (t + 1)T S ], t ≥ 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Input traffic and queue model in virtualized Fog nodes</head><p>In a virtualized Fog node, each VM processes the currently assigned task by self-managing own local virtualized stor-age/computing resources. When a request for a new job is submitted to the Fog node, the corresponding resource scheduler adaptively performs both admission control and allocation of the available virtual resources. Hence, according to the typical architecture presented, for example, in <ref type="bibr" target="#b6">[7]</ref>, Fig. <ref type="figure" target="#fig_7">1b</ref> reports the main blocks which operate at the Middleware layer of the considered Fog node. Roughly speaking, a Fog node is composed by: (i) an Admission Control Router (ACR); (ii) an input buffer of size N I ; (iii) a reconfigurable computing platform and the related switched Virtual LAN (VLAN); (iv) an output queue of size N O ; and, (v) an adaptive scheduler, that reconfigures and consolidates the available computing-communication resources and also performs the control of the input/output traffic flows.</p><p>Specifically, at the end of slot t, input requests of processing new jobs arrive at the input of the ACR of Fig. <ref type="figure" target="#fig_7">1b</ref>. This happens according to a random real-valued arrival process {a(t) ∈ R + 0 , t ≥ 0}, that is limited up to a max ∈ R + 0 Information Units (IUs) per slot <ref type="foot" target="#foot_0">1</ref> . The arrival process {a(t), t ≥ 0} is assumed to be independent from the current backlogs of the input/output queues of Fig. <ref type="figure" target="#fig_7">1b</ref>. Furthermore, since, in our framework, it may be the aggregation of multiple (possibly, heterogeneous) traffic flows generated by the remote cloud, nearby Fog nodes and VCs <ref type="bibr" target="#b18">[19]</ref>, we do not introduce any a priori assumption about the statistical behavior of {a(t)}. According to this position, let λ(t) ∈ R + 0 (IU/slot) be the number of IUs out of a(t) that are admitted into the input queue of Fig. <ref type="figure" target="#fig_7">1b</ref> at the end of slot t, respectively. We assume that any new arrival that is not admitted by the ACR of Fig. <ref type="figure" target="#fig_7">1b</ref> is declined. Thus, we have: 0 ≤ λ(t) ≤ a(t), so that: 1 -(λ(t)/a(t)), is the fraction of the input traffic that is rejected at slot t. Furthermore, we consider (time-slotted) G/G/1/N I and G/G/1/N O fluid systems for modeling the input and output queues of Fig. <ref type="figure" target="#fig_7">1b</ref>, respectively. Due to the admission control, both queues are loss-free and they implement the FIFO service discipline. Let s(t) ∈ R + 0 and q(t) ∈ R + 0 be the numbers of IUs stored by the input and output queues of Fig. <ref type="figure" target="#fig_7">1b</ref> at the beginning of slot t. Furthermore, let L tot (IU/slot) be the size of the incoming workload that: (i) is drained from the input queue at the beginning of slot t; and, (ii) is injected into the output queue at the end of slot t. Finally, let r(t) (IU/slot) be the workload that is drained from the output queue and transmitted over the vehicular TCP/IP connection of Fig. <ref type="figure" target="#fig_7">1b</ref> during slot t. Hence, the time evolutions of the backlogs {s(t) ∈ R + 0 , t ≥ 0} and {q(t) ∈ R + 0 , t ≥ 0} of the input and output queues are dictated by the following Lindley's equations, respectively:</p><formula xml:id="formula_0">s(t + 1) = [s(t) -Ltot(t)]+ + λ(t), t ≥ 0,<label>(1)</label></formula><formula xml:id="formula_1">q(t + 1) = [q(t) -r(t)]+ + Ltot(t), t ≥ 0.<label>(2)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The considered virtualized Fog architecture</head><p>Let N S be the number of physical servers which equip the Fog node of Fig. <ref type="figure" target="#fig_7">1b</ref>, and let M max (k), k = 1, . . . , N S , be the maximum number of VMs that can be hosted by the k-th physical server, so that:</p><formula xml:id="formula_2">M N S k=1 M max (k)</formula><p>, is resulting maximum number of VMs hosted by the Fog node. In principle, each VM operates as a virtual server, which is capable to process f i IUs per second (e.g., i is the VM index). Depending on the size L(i) (IU ) of the task to be currently processed by V M (i), the corresponding processing rate f i may be adaptively scaled at run-time through DVFS techniques. In our framework, f i may assume values over the interval [0,</p><formula xml:id="formula_3">f max i ], where f max i (IU/slot) is the maximum processing rate of V M (i).</formula><p>Being L tot the overall size of the current workload to be processed, let L(i) ≥ 0, i = 1, . . . , M , be the size of the task that the Adaptive Load Dispatcher of Fig. <ref type="figure" target="#fig_7">1b</ref> assigns to V M (i), so that, the following constraint:</p><formula xml:id="formula_4">M i=1 L(i) = L tot ,</formula><p>guarantees that the overall workload is partitioned into (at the most) M parallel tasks. Hence, the set of attributes which characterize each VM is:</p><formula xml:id="formula_5">{Φ(ηi), ∆, E max c (i), E idle c (i), f max i }, i = 1, 2, . . . , M,<label>(3)</label></formula><p>where ∆ is the maximum per-slot and per-VM allowed processing time (in seconds); E idle c (i)(Joule) is the static energy consumed by V M (i) in the idle state; E max c (i) (Joule) is the maximum energy consumed by V M (i); f max i is the maximum processing rate of V M (i); and Φ(η i ) is the utilization function of V M (i), which is typically evaluated as in <ref type="bibr" target="#b19">[20]</ref>:</p><formula xml:id="formula_6">Φ(η i ) (f i /f max i ) 2 , with η i f i /f max i .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Computing energy and reconfiguration cost in virtualized Fog nodes</head><p>It is shown in <ref type="bibr" target="#b19">[20]</ref> that there is a linear relationship between the CPU utilization Φ(η i ) by V M (i) and the corresponding computing energy consumption E c (i), so that we can write:</p><formula xml:id="formula_7">Ec(i) = E idle c (i) + (fi/f max i ) 2 (E max c (i) -E idle c (i)).<label>(4)</label></formula><p>Furthermore, we note that switching from the processing rate: f i (t-1) (e.g., the processing rate of V M (i) at the (t-1)th slot) to: f i (t) (e.g., the processing rate of V M (i) at the t-th slot) entails an energy overhead of E dyn (i, t) <ref type="bibr" target="#b19">[20]</ref>. Although, the actual behavior of the function: E dyn (i, t) depends on the adopted DVFS technique, a quite common model is the following quadratic one <ref type="bibr" target="#b19">[20]</ref>:</p><formula xml:id="formula_8">E dyn (i, t) = ke (fi(t) -fi(t -1)) 2 . (<label>5</label></formula><formula xml:id="formula_9">)</formula><p>In Eq. ( <ref type="formula" target="#formula_8">5</ref>), k e (Joule/(Hz) 2 ) denotes the reconfiguration cost induced by an unit-size rate switching and it is typically limited up to few hundreds of mJ s per (M Hz) 2 <ref type="bibr" target="#b19">[20]</ref>.</p><p>Remark 1 -Discrete DVFS Before proceeding, a remark on the allowed spectrum of the per-VM processing rates is in order. Specifically, we note that actual VMs are generally instantiated atop physical computing cores which offer, indeed, only a finite set:</p><formula xml:id="formula_10">O { f (0) 0, f (1) , . . . , f (Q-1)</formula><p>f max i } of Q discrete processing rates. Hence, in order to deal with both continuous and discrete reconfigurable physical computing infrastructures, we borrow the approach formerly developed, for example, in <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>. Specifically, after indicating by: B η (0) 0, η (1) , . . . , η (Q-1) 1 the discrete values of η which correspond to the set O, we build up a Virtual Energy Consumption curve Φ(η) by resorting to a piecewise linear interpolation of the allowed Q operating points: η (j) , Φ( η (j) ) , j = 0, . . . , (Q -1) . Obviously, we may use it as the true energy consumption curve for the resource provisioning. Unfortunately, being the virtual curve of continuous type, it is no longer guaranteed that the resulting optimally scheduled processing rates are still discrete valued. However, as also explicitly noted in <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>, any point: (η * , Φ(η * )), with η (j) &lt; η * &lt; η (j+1) , on the virtual curve may be actually attained by time-averaging over ∆ secs the corresponding surrounding vertex points: η (j) , Φ( η (j) ) and η (j+1) , Φ( η (j+1) ) . Due to the piecewise linear behavior of the virtual curve, as in <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>, it is guaranteed that the average energy cost of the discrete DVFS system equates that of the corresponding actual one over each time interval of duration ∆.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Intra-Fog communication</head><p>We assume that the i-th virtual end-to-end connection (e.g., the i-th virtual link) of the Fog platform of Fig. <ref type="figure" target="#fig_7">1b</ref> is bidirectional and symmetric. Furthermore, in order to guarantee reliable (e.g., loss and error-free) transport of data, as in <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>, we assume that the TCP New Reno protocol is implemented for managing the intra-Fog end-to-end transport connections. Hence, under steady-state operating conditions, the power P net i (t) (measured in (W att)) drained by the i-th end-to-end connection may be evaluated as in <ref type="bibr" target="#b24">[25]</ref>:</p><formula xml:id="formula_11">P net i (t) = Ωi RT Ti Ri(t) 2 , i = 1, . . . , M,<label>(6)</label></formula><p>where RT T i is the average round-trip-time of the i-th intra-Fog connection, R i (t) (IU/slot) is the corresponding communication rate at slot t, and Ω i (W att) is the power consumption of the connection when the product: (round-triptime) by (communication-rate) is unit-valued. Hence, after indicating by L i (t) (IU/slot) the size of the task assigned to V M (i) at slot t, the corresponding communication energy E LAN (i, t) (Joule) wasted by the i-th virtual link is:</p><formula xml:id="formula_12">ELAN (i, t) = P net i (t)(Li(t)/Ri(t)) ≡ (2Ωi/(TS-∆))(RT T iLi(t)) 2<label>(7)</label></formula><p>In Eq. ( <ref type="formula" target="#formula_12">7</ref>), the last relationship follows from the fact that, by design, the allowed per-slot transmission time is: (T S -∆), so that the corresponding communication rate equates: R i (t) = (2L i (t)/(T S -∆)). At this regard, we also note that, in practical application scenarios, the maximum perslot aggregate traffic conveyed by the intra-Fog LAN of Fig. <ref type="figure" target="#fig_7">1b</ref> is generally limited up to an assigned value: R max (IU/slot), which depends, in turn, on the employed (typically, Ethernet-type) switch technology <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>. As a consequence, the following constraint must hold:</p><formula xml:id="formula_13">M i=1 Ri(t) = M i=1 (2Li(t)/(TS -∆)) ≤ Rmax. (<label>8</label></formula><formula xml:id="formula_14">)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Rate-vs.-energy tradeoff in TCP/IP vehicular connections</head><p>Goal of the output queue of Fig. <ref type="figure" target="#fig_7">1b</ref> is to effectively cope with the fading and mobility-induced random (possibly, unpredictable) fluctuations of the bandwidth of the corresponding single-hop downlink connection (see the RSU-tovehicle green ray at the bottom of Fig. <ref type="figure" target="#fig_7">1b</ref>). At this regard, we note that, from an application point of view, there are three main reasons for resorting to the TCP/IP protocol, in order to implement this connection. First, it guarantees, by design, reliable (e.g., loss and error-free) transport of data <ref type="bibr" target="#b3">[4]</ref>. Second, it allows the vehicular client to perform flow control, in order to adaptively match the transmission rate of the serving RSU to the actual (typically, time-varying) operating conditions of the used mobile device. Third, being connection-oriented, the TCP protocol allows the exploitation of the (aforementioned) location awareness of the Fog node, in order to measure the instantaneous state of each sustained RSU-to-vehicle connection. Hence, without loss of generality, in the sequel we focus on the case of a single RSUto-vehicle connection (see Fig. <ref type="figure" target="#fig_7">1a</ref>). The goal is to save energy by timely adapting the transmission rate r(t) (IU/slot) of the supported TCP connection. In fact, r(t) depends on both the transmit energy E W (t) and the connection state σ(t) as in <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b24">[25]</ref>:</p><formula xml:id="formula_15">r(t) = σ(t)(EW (t)) 1/2 , (IU/slot)<label>(9)</label></formula><p>where the state of the supported vehicular connection at slot t is defined as in <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b24">[25]</ref>:</p><formula xml:id="formula_16">σ(t) (K0(z(t)) 1/2 )/RT TW (t), t ≥ 1,<label>(10)</label></formula><p>so that:</p><formula xml:id="formula_17">EW (t) ≡ EW r(t), σ(t) = (r(t)/σ(t)) 2 . (<label>11</label></formula><formula xml:id="formula_18">)</formula><p>In Eq. ( <ref type="formula" target="#formula_16">10</ref>), z(t) is the mobility function of the vehicular client served by the considered TCP/IP mobile connection. It may be modeled as a time-correlated log-distributed sequence <ref type="bibr" target="#b25">[26]</ref>: z(t) a 0 10 0.1x (t) , where a 0 ≡ 0.9738, and {x(t), t ≥ 1} is a time-correlated stationary zero-mean unit-variance Markov random sequence, whose probability density function is evenly distributed over the interval</p><formula xml:id="formula_19">[- √ 3, √ 3] [26]</formula><p>. The (positive) constant K 0 in (10) captures the performance of the FEC-based error-recovery system implemented at the Physical layer of Fig.1b <ref type="bibr" target="#b24">[25]</ref>, while RT T W (t) is the round-trip-time of the connection. It is iteratively calculated through the Jacobson's formula:</p><p>RT TW (t) = 0.75 RT TW (t -1) + 0.25 ∆IP (t), <ref type="bibr" target="#b11">(12)</ref> where ∆ IP (t) is the instantaneous packet-delay (in multiple of the slot period) measured at the Transport layer of the considered connection. Furthermore, in micro-cellular landmobile applications, the corresponding correlation coefficient: h E {z(t)z(t -1)} that describes the time-correlation of the fading-induced fluctuations of the state of the connection may be evaluated as in <ref type="bibr" target="#b25">[26]</ref>:</p><formula xml:id="formula_20">h = (0.82) vT S /100 , (<label>13</label></formula><formula xml:id="formula_21">)</formula><p>where v (m/s) is the average speed of the served vehicular client of Fig. <ref type="figure" target="#fig_7">1a</ref>. Hence, after indicating by ∆ max IP the maximum instantaneous delay of the connection, from Eq. ( <ref type="formula">12</ref>), it follows that: RT T W (t) ≤ ∆ max IP , so that the corresponding state in <ref type="bibr" target="#b9">(10)</ref> is lower bounded as in:</p><formula xml:id="formula_22">σ(t) ≥ σmin K0 (a010 -0.15 ) 1/2 /∆ max IP . (<label>14</label></formula><formula xml:id="formula_23">)</formula><p>Overall, from the outset, it follows that the resulting total communication-plus-computing energy: E tot (t) consumed at slot t by the Fog node of Fig. <ref type="figure" target="#fig_7">1b</ref> is given by the following final expression:</p><formula xml:id="formula_24">Etot(t) = M i=1 Ec(i, t) + E dyn (i, t) + ELAN (i, t) + EW (t). (15)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESOURCE RECONFIGURATION</head><p>Let S(t) (resp., S(t)) be the set of turned-ON (resp., turned-OFF) VMs at slot t (see Fig. <ref type="figure" target="#fig_7">1b</ref>). The proposed scheduler interleaves reconfiguration and consolidation slots. Specifically, at each reconfiguration slot, the scheduler does not change the sets S(t) and S(t) of the turned ON/OFF VMs (and, then, it does not change the corresponding sets of turned ON/OFF physical servers). However, it performs the following reconfiguration actions (see Fig. <ref type="figure" target="#fig_7">1b</ref>): (i) control of the input and output flows; and, (ii) assignment of the tasks and processing rates to the turned-ON VMs. In the remaining part of this section, we deal with the resource reconfiguration problem, while resource consolidation is afforded in Section 4.</p><p>Hence, after indicating by:</p><formula xml:id="formula_25">Ltot(t) = i∈S(t) Li(t), (<label>16</label></formula><formula xml:id="formula_26">)</formula><p>the size of the workload which is drained by the input queue of Fig. <ref type="figure" target="#fig_7">1b</ref>, the resource reconfiguration problem to be afforded at slot t is formulated as follows:</p><formula xml:id="formula_27">min A θE σ {E tot (t)} -(1 -θ)E σ {r(t)},<label>(17.1)</label></formula><p>subjected to:</p><formula xml:id="formula_28">E σ E W (σ, r) ≤ E ave ,<label>(17.2</label></formula><p>)</p><formula xml:id="formula_29">0 ≤ λ(t) ≤ a(t), (17.3) 0 ≤ s(t + 1) ≤ N I , (17.4) 0 ≤ q(t + 1) ≤ N O , (17.5) r min ≤ r(t) ≤ min{q(t); r max }, (17.6) 0 ≤ f i (t) ≤ f max i , i ∈ S(t),<label>(17.7</label></formula><p>)</p><formula xml:id="formula_30">0 ≤ L i (t) ≤ L max i ∆f max i , i ∈ S(t), (17.8) (L i (t)/f i (t)) ≤ ∆, i ∈ S(t), (17.9) L tot (t) ≤ min{s(t); (T S -∆)(R max /2)}.</formula><p>(17.10)</p><p>In Eq. (17.1), A {L i (t), f i (t), i ∈ S(t); λ(t), r(t)} is the set of variables to be reconfigured at slot t and θ ∈ [0, 1] is an (assigned) weight factor, that tunes the desired tradeoff between average consumed energy and wireless transmission rate.</p><p>Regarding the constraints in Eqs. (17.2)-(17.10), some remarks are in order. The constraint in (17.2) is typically dictated by spectral compatibility and energy budget issues <ref type="bibr" target="#b1">[2]</ref>. It limits up to: E ave (Joule) the per-slot average energy available for transmitting over the single-hop mobile connection of Fig. <ref type="figure" target="#fig_7">1a</ref> (see the RSU-to-vehicle green ray at the bottom of Fig. <ref type="figure" target="#fig_7">1a</ref>). The constraint in <ref type="bibr">(17.</ref>3) accounts for the (aforementioned) admission control performed by the access router of Fig. <ref type="figure" target="#fig_7">1b</ref>, while Eqs. <ref type="bibr">(17.4</ref>) and (17.5) account for the finite sizes of the input and output buffers, respectively. Eq. <ref type="bibr">(17.6)</ref> guarantees that the size r(t) of the workload drained from the output queue of Fig. <ref type="figure" target="#fig_7">1b</ref> does not exceed the corresponding queue backlog q(t), and also forces r(t) to fall into a desired range: [r min , r max ] of transmission rates. Furthermore, Eq. (17.7) (resp., Eq. (17.8)) bounds the maximum processing rate (resp., workload) of V M (i), while Eq. (17.9) is a hard limit on the corresponding per-slot and per-VM processing time. Finally, Eq. (17.10) guarantees that the size L tot (t) of the workload drained by the input queue does not exceed the corresponding queue backlog s(t), while being also compliant with the constraint in (8) on the maximum aggregate rate of the intra-Fog LAN.</p><p>Before proceeding, we explicitly point out that r max (IU/slot) in <ref type="bibr">(17.6)</ref> is the maximum instantaneous rate conveyed by the mobile connection of Fig. <ref type="figure" target="#fig_7">1b</ref>, and its value is typically dictated by the WiFi technology actually employed for implementing the single-hop wireless link of Fig. <ref type="figure" target="#fig_7">1a [8]</ref>. Furthermore, the corresponding r min (IU/slot) in <ref type="bibr">(17.6)</ref> fixes the minimum instantaneous rate to be guaranteed, and, then, it plays the role of a hard QoS requirement, that is enforced by the supported application. From Eqs. ( <ref type="formula" target="#formula_15">9</ref>), ( <ref type="formula" target="#formula_22">14</ref>) and (17.2), it follows that feasible values of r min are limited up to: σ min √ E ave (IU/slot).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Feasibility and QoS guarantees</head><p>Regarding the feasibility of the resource reconfiguration problem in (17.1)-(17.10), the following formal result holds.</p><p>Proposition 1. Feasibility conditions. Under the reported framework, the following four inequalities:</p><formula xml:id="formula_31">E W (σ min , r min ) ≤ E ave ,<label>(18.1)</label></formula><formula xml:id="formula_32">M i=1 L max i ≡ M i=1 f max i ∆ ≥ r min ,<label>(18.2)</label></formula><formula xml:id="formula_33">(R max /2)(T S -∆) ≥ N I ,<label>(18.</label></formula><p>3) a(t) ≥ r min , ∀t ≥ 0, <ref type="bibr">(18.4)</ref> guarantee that the resource reconfiguration problem in (17.1)-(17.10) is feasible.</p><p>Hence, since the reported conditions assure that the reconfiguration problem admits the solution, we pass to consider the corresponding QoS properties. At this regard, we point out that a combined exploitation of the constraints in (17.4)-(17.6) leads to the following hard bounds on the resulting communication-plus-computing delay and ratejitter of the solution of the afforded resource reconfiguration problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 2. Hard QoS guarantees.</head><p>Let the feasibility conditions of Proposition 1 be met. Let T QI , T SI , T QO , and T SO be the random variables that measure the random queue delay of the input queue, the service time of the input queue, the queue delay of the output queue and the service time of the output queue, respectively. Thus, the following QoS guarantees hold: a) the random total delay: T tot T QI + T SI + T QO + T SO (in multiple of the slot period) induced by the Fog platform of Fig. <ref type="figure" target="#fig_7">1b</ref> is limited (in a hard way) up to: </p><formula xml:id="formula_34">σr ≤ (rmax) 2 -(rmin) 2 . (<label>19</label></formula><formula xml:id="formula_35">.</formula><p>3)</p><p>The reported QoS guarantees lead to the conclusion that the NetFC platform of Fig. <ref type="figure" target="#fig_7">1b</ref> is capable, indeed, to support real-time (i.e., delay and jitter-sensitive) applications, while meeting the bound in (17.2) on the consumed wireless energy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Solution of the resource reconfiguration problem</head><p>In order to present the solution: { f * i (t), L * i (t), i ∈ S(t); L * tot (t), r * (t) }, of the stated resource reconfiguration problem, let us introduce the following dummy position:</p><formula xml:id="formula_36">ψ(t) min{s(t); max{rmin; r * (t -1)}},<label>(20)</label></formula><p>where: r * (t -1) (1/τ )( t-1 τ =0 r * (τ )), is the average wireless transmit rate up to (t-1)-th slot. Hence, the following result holds for the optimal resource reconfiguration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 3. Solution of the resource reconfiguration problem.</head><p>Under the feasibility conditions in (18.1)-(18.4), for the solution of the resource reconfiguration problem in (17.1)-(17.10), we have that: a) the optimal total workload L * tot (t) to be processed is scheduled as in:</p><formula xml:id="formula_37">L * tot (t) = 0,</formula><p>for q(t) &gt; NO + rmin -rmax, ψ(t), for q(t) ≤ NO + rmin -rmax;</p><p>(21.1) b) the optimal admitted input traffic λ * (t) is scheduled as in:</p><formula xml:id="formula_38">λ * (t) = min{a(t); NI -s(t) + L * tot (t)}; (21.2)</formula><p>c) the optimal transmission rate r * (t) over the mobile connection is scheduled as in:</p><formula xml:id="formula_39">r * (t) = (1 -θ)σ(t) 2 2ζ * (t) min{rmax; q(t)} r min ,<label>(21.3)</label></formula><p>where ζ * (t) is the nonnegative Lagrange multiplier of the constraint in (17.2). It may be adaptively updated according to the following gradient-based projection iteration:</p><formula xml:id="formula_40">ζ * (t) = [ζ * (t -1) -α (Eave -EW (σ(t), r * (t -1)))] + ,<label>(21.4)</label></formula><p>where α is a suitable nonnegative step-size; d) for i ∈ S(t), the optimal processing rate f * i (t) and task size L * i (t) of the i-th VM are scheduled as in:</p><formula xml:id="formula_41">f * i (t) =   kef * i (t -1) + (∆ν * i (t)/2θ) ke + E max c (i)-E idle c (i) (f max i ) 2   f max i 0 ,<label>(21.5)</label></formula><p>and</p><formula xml:id="formula_42">L * i (t) = min (TS -∆)µ * (t) 4Ωi(RT T i) 2 θ L max i 0 ; [∆f * i (t)] L max i 0 ,<label>(21.6)</label></formula><p>where the (nonnegative) Lagrange multiplier ν * i (t) of the i-th constraint in (17.9) is given by:</p><formula xml:id="formula_43">ν * i (t) = µ * (t) - 4 θ Ωi (RT T i) 2 L * i (t) (TS -∆) + .</formula><p>(21.7)</p><p>Finally, the Lagrange multiplier µ * (t) of the constraint in (16) is the (unique nonnegative) root of the following algebraic equation:</p><formula xml:id="formula_44">i∈S(t) L * i (µ(t)) = L * tot (t),<label>(21.8)</label></formula><p>where L * i (.) is given by (21.6), with µ * (t) replaced by the dummy variable µ(t).</p><p>Regarding the tuning of the step-size α in (21.4), we anticipate that, for values of the average speed v in <ref type="bibr" target="#b12">(13)</ref> ranging from: 30 (Km/h), to: 150 (Km/h), the following setting: α = 10 -2 , allows the iteration in <ref type="bibr">(21.4)</ref> to converge to its steady-state value within 20-25 slots, with a final accuracy within 1%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESOURCE CONSOLIDATION</head><p>Let TCN { t0 , t1 , . . .} indicate the set of the consolidation slot indexes. By design, at each consolidation slot t ∈ TCN , the scheduler updates the sets S(t) and S(t) of the turned ON/OFF VMs and, then, turns ON/OFF the corresponding physical servers. Afterwards, on the basis of these updated sets, the scheduler performs again the resource reconfiguration actions previously described in Section 3. In our framework, resource consolidation is performed according to the following three considerations.</p><p>First, as in <ref type="bibr" target="#b26">[27]</ref>, the set TCN of the consolidation slots is adaptively built up on the basis of the average utilization of the currently turned-ON VMs. For this purpose, after indicating by |S(τ )| the number of VMs that are turned ON at slot τ , the following average utilization coefficient:</p><formula xml:id="formula_45">U(τ ) 1 |S(τ )|   i∈S(τ ) L * i (τ ) L max i   ,<label>(22)</label></formula><p>is evaluated at every slot τ ≥ 0. Afterwards, as in <ref type="bibr" target="#b26">[27]</ref>, the following -out-m decision rule is applied: the current slot t is flagged as a consolidation slot if at least out of the m most recently measured values of U(.) as the predicted utilization for slot t fall out of a target interval</p><formula xml:id="formula_46">I [T h L , T h U ].</formula><p>The interval I is the set of the desired utilization values and its end-points: T h L and T h U are the lower and upper thresholds on the desired average VM utilization.</p><p>Second, in our framework, a turned-OFF physical server is turned ON if at least one of the hosted VMs is turned ON. Furthermore, a turned-OFF VM is turned ON if its processing rate is no longer vanishing. Hence, at each consolidation slot t ∈ TCN , the energy consumption of the i-th VM may be modeled as in <ref type="bibr" target="#b27">[28]</ref>:</p><formula xml:id="formula_47">Ec(i, t) = E idle c (i) u-1(fi(t)) + (fi(t)/f max i ) 2 (E max c (i) -E idle c (i)),<label>(23)</label></formula><p>where u -1 (x) is the unit-size step-function. The first term in <ref type="bibr" target="#b22">(23)</ref> accounts for the decrement (resp., increment) of the static computing energy that is experienced by turning OFF (resp., ON) the i-th VM.</p><p>Third, turning ON a VM induces a latency of T ON seconds <ref type="bibr" target="#b26">[27]</ref>. Hence, at each consolidation slot t ∈ TCN , the following constraints must be also enforced:</p><formula xml:id="formula_48">T ON f i (t) + L i (t) f i (t) ≤ ∆, ∀i ∈ S(t -1),<label>(24.1)</label></formula><formula xml:id="formula_49">L i (t) f i (t) ≤ ∆, ∀i ∈ S(t -1),<label>(24.2)</label></formula><formula xml:id="formula_50">M i=1 L i (t) ≤ min {s(t); (T S -∆)(R max /2)} . (24.</formula><p>3)</p><p>The constraint in (24.1) accounts for the (aforementioned) latency, while the constraint in (24.2) enforces vanishing workload at vanishing processing rate, and, then, it guarantees that no workload is processed by V M (i) when it is turning OFF. Finally, Eq. ( <ref type="formula" target="#formula_48">24</ref>.3) assures that the overall workload to be processed by all available VMs does not exceed the maximum feasible one. On the basis of the above three remarks, the resource consolidation problem is formulated as follows: minimize the objective function in (17.1) (with E c (i, t) in <ref type="bibr" target="#b14">(15)</ref> given by ( <ref type="formula" target="#formula_47">23</ref>)), under the sets of constraints in Eqs. (17.2)-(17.8) and Eqs. (24.1)-(24.3). The set A of the variables to be optimized is the same one of Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ADAPTIVE IMPLEMENTATION AND COMPLEXITY OF THE PROPOSED SCHEDULER</head><p>In order to effectively cope with the random (possibly, unpredictable) time fluctuations of the input traffic and state of the mobile connection of Fig. <ref type="figure" target="#fig_7">1a</ref>, we proceed to develop an adaptive implementation of the scheduler, which computes on-the-fly the solutions of both the resource reconfiguration and consolidation problems. For this purpose, we resort to the primal-dual algorithm recently revised in <ref type="bibr" target="#b28">[29]</ref>. Generally speaking, it applies gradient-based iterations, in order to adaptively update both the primal variables (i.e., the variables to be optimized) and the dual variables (i.e., the Lagrange multipliers associated to the constraints) of the considered constrained optimization problem. In our framework, the proposed resource scheduler runs primaldual iterations: (i) at the beginning of each reconfiguration slot, in order to compute the solution µ * (t) of the (nonlinear) algebraic equation in <ref type="bibr">(21.8)</ref>; and, (ii) at the beginning of each consolidation slot, in order to numerically compute the set A * of the optimal consolidated resources 2 .</p><p>For this purpose, after indicating by x(t) ∈ A a (scalar) resource variable to be updated at slot t and by L(t) the Lagrangian function of the considered optimization problem, the n-th primal-dual iteration assumes the following general form <ref type="bibr" target="#b28">[29]</ref>: <ref type="bibr" target="#b24">(25)</ref> where n = 1, 2, . . ., is a discrete iteration index which runs at the beginning of the considered slot t. Furthermore, according to <ref type="bibr" target="#b28">[29]</ref>, in Eq. ( <ref type="formula">25</ref>), we have that: (i) ∇ x L (n-1) (t) is the scalar derivative of the considered Lagrangian function L(t), which is done with respect to the variable x and is evaluated at the resource configuration setting attained at the previous iteration (n -1); (ii) g (n-1) x (t) is a suitable nvarying (e.g., adaptive) step-size. According to <ref type="bibr" target="#b28">[29]</ref>, it is set as in: g (n-1) x (t) = 0.5(x (n-1) (t)) 2 ; and, (iii) the projection in <ref type="bibr" target="#b24">(25)</ref> accounts for the nonnegative values of all involved variables. Just as an illustrative example, at the beginning of each reconfiguration slot t, the root µ * (t) of the (nonlinear) algebraic equation in <ref type="bibr">(21.8</ref>) is computed by the scheduler by running the following iterations in the n-index: Apply the -out-m decision rule and flag t as reconfiguration or consolidation slot; Update s(t + 1) and q(t + 1) through Eqs. ( <ref type="formula" target="#formula_0">1</ref>) and ( <ref type="formula" target="#formula_1">2</ref>), respectively; Compute U(t) through Eq. ( <ref type="formula" target="#formula_45">22</ref>), with τ replaced by t; 14: end for Regarding the resulting implementation complexity, two main remarks are in order.</p><formula xml:id="formula_51">x (n) (t) = x (n-1) (t) -g (n-1) x (t) ∇xL (n-1) (t) + , n ≥ 1,</formula><formula xml:id="formula_52">µ (n) (t) = µ (n-1) (t) -0.5 µ (n-1) (t) 2 × ( i∈S(t) L (n-1) i (t)) -L * tot (t) + , n ≥ 1,<label>(26)</label></formula><p>First, since the iterations in <ref type="bibr" target="#b24">(25)</ref> are carried out at the beginning of each slot, the iteration index n must run faster than the slot time T S . Hence, the actual time duration: T I (s) of each n-indexed iteration must be so small to allow the iterations in <ref type="bibr" target="#b24">(25)</ref> to converge within a limited fraction of the slot time. At this regard, the formal results of Theorem 3.3 of <ref type="bibr" target="#b28">[29]</ref> assure the asymptotic convergence of the iterations in <ref type="bibr" target="#b24">(25)</ref>. Furthermore, we have numerically ascertained that, at least in the tests of Section 6, about 10-15 n-indexed steps suffice, in order to attain the convergence of ( <ref type="formula">25</ref>) with a final accuracy within 1%. Hence, in the carried out tests, we pose:</p><formula xml:id="formula_53">T I = T S /250.</formula><p>Second, since each VM updates the size of the task to be processed and the corresponding processing rate, the total number of variables to be updated at each slot scales up linearly with the number M of the available VMs. Therefore, the total per-slot implementation complexity of the scheduler of Algorithm 1 is of the order of O(M ). Furthermore, since the pursued primal-dual approach allows the distributed implementation of the solutions of the afforded reconfiguration and consolidation problems <ref type="bibr" target="#b28">[29]</ref>, each VM may locally update its task size and processing rate through local measurements. As a consequence, the per-VM implementation complexity of the proposed scheduler does not depend on the number M of the available VMs, that is, it is of the order of O(1).</p><p>Overall, the above remarks lead to the conclusion that the implementation of the proposed scheduler is adaptive and distributed, while the resulting per-slot execution time is limited up to about 15 iteration periods, regardless of the (possibly, large) size the considered Fog node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Implementation aspects of the intra-Fog Virtualization layer</head><p>Main tasks of the intra-Fog Virtualization layer of Fig. <ref type="figure" target="#fig_7">1b</ref> are twofold. First, it must guarantee that the demands for the per-VM processing rates {f * i } and per-link communication rates {R * i } done by the Middleware layer are mapped onto adequate CPU cycles and channel bandwidths at the underlying Physical layer. Second, it must profile at runtime the maximum and idle energies actually consumed by the running VMs.</p><p>Regarding the first task, we note that QoS mapping of the demands for processing and communication rates may be actually performed by equipping the Virtualization layer of Fig. <ref type="figure" target="#fig_7">1b</ref> with a per-VM queue system that implements (in software) the so-called mClock and SecondNet schedulers <ref type="bibr" target="#b29">[30]</ref>, <ref type="bibr" target="#b30">[31]</ref>. Interestingly, Table <ref type="table">1</ref> of <ref type="bibr" target="#b29">[30]</ref> points out that the mClock scheduler is capable to guarantee hard (e.g., absolute) reservation of CPU cycles on a per-VM basis by adaptively managing the computing power of the underlying DVFS-enabled physical cores (see Algorithm 1 of <ref type="bibr" target="#b29">[30]</ref> for the code of the mClock scheduler). Likewise, the SecondNet network scheduler in <ref type="bibr" target="#b30">[31]</ref> provides bandwidthguaranteed virtualized Ethernet-type contention-free links atop any set of TCP-based (possibly, multi-hop) end-toend connections. For this purpose, SecondNet implements a suitable Port-Switching based Source Routing algorithm, that may directly work at the Middleware layer of Fig. <ref type="figure" target="#fig_7">1b</ref> (see Section 3 of <ref type="bibr" target="#b30">[31]</ref>).</p><p>Regarding the (aforementioned) second task, the maximum and idle energies consumed by each VM may be profiled at runtime by resorting to the so-called Joulemeter tool <ref type="bibr" target="#b31">[32]</ref>. It is a software tool that operates at the Virtualization layer of Fig. <ref type="figure" target="#fig_7">1b</ref> and is capable to provide the same energy metering functionality for VMs as currently exists in hardware for physical servers. For this purpose, Joulemeter uses hypervisor-observable hardware power states to track the VM energy usage on each hardware component (see Section 5 of <ref type="bibr" target="#b31">[32]</ref> for a detailed description of the Joulemeter tool). Interestingly enough, the field trials reported in <ref type="bibr" target="#b31">[32]</ref> support the general conclusion that the maximum and idle energies wasted by a running VM are proportional to the corresponding maximum and idle energies wasted by the hosting physical server, with the scaling factor being given by the fraction of the physical cores actually used by the VM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">TEST RESULTS AND PERFORMANCE COMPAR-</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ISONS</head><p>This section presents the tested energy performance of the proposed scheduler under a set of synthetic and realworld input arrival traces, and, then, compares it with the corresponding ones of the DVFS-based scheduler in <ref type="bibr" target="#b24">[25]</ref>, Lyapunov-based scheduler in <ref type="bibr" target="#b10">[11]</ref>, static scheduler in <ref type="bibr" target="#b21">[22]</ref> and NetDC scheduler in <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Simulated Fog setup</head><p>The simulations are carried out by exploiting the numerical software of the MATLAB platform. They emulate the energy consumptions of 5 homogeneous quad-core Dell PowerEdge servers, which are equipped with 3.06 GHz Intel Xeon CPU and 4GB of RAM. All the emulated servers are connected through commodity Giga Ethernet Network Interface Cards (NICs) and host up to 4 VMs (see Table <ref type="table">1</ref>).</p><p>In order to measure the actual delay performance of the proposed adaptive scheduler, we resort to a per-IU average total delay performance index (measured in multiple of the slot period), formally defined as in:</p><formula xml:id="formula_54">T * tot lim t→∞ 1 t t τ =1 s * (τ ) lim t→∞ 1 t t τ =1 λ * (τ ) + lim t→∞ 1 t t τ =1 q * (τ ) lim t→∞ 1 t t τ =1 L * tot (τ ) + 2.<label>(27)</label></formula><p>In Eq. ( <ref type="formula" target="#formula_54">27</ref>), the first ratio is the average delay: T * QI = s * /λ * induced by the input buffer of Fig. <ref type="figure" target="#fig_7">1b</ref>, the second ratio is the average delay: T * QO = q * /L * tot of the output buffer, and: T SI + T SO = 2, are the overall corresponding average service times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Simulated vehicular setup</head><p>A three-line highway vehicular environment is simulated, where N vc vehicles proceed without performing abrupt U-turns. They move along the highway of Fig. <ref type="figure" target="#fig_7">1a</ref> with speeds uniformly ranging from: v min to: v max , so that: v = (v max -v min )/2, is the resulting per-vehicle average speed. Uniformly spaced RSUs serve the VCs and the simulated RSU-to-vehicle radio propagation accounts for freespace loss with exponent 4 and log-normal fading with standard deviation 8 <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b18">[19]</ref>.</p><p>Since no any assumption has been introduced about the statistical behavior of the state in <ref type="bibr" target="#b9">(10)</ref> of the considered RSU-to-vehicle mobile connection, the optimality of the proposed scheduler of Algorithm 1 is retained, regardless of the mobility patterns actually followed by the vehicles. However, the performed simulations refer to a highway environment, and, then, it is reasonable to assume that: (i) at each slot time, each vehicle moves to the next spatial cluster or remains in the currently occupied cluster; and, (ii) being the vehicle speeds evenly distributed and subject to random spatial fluctuations, the sojourn times of the vehicles in each cluster are geometrically distributed r.v.'s. These considerations lead, in turn, to adopt the so-called Markovian random walk model with random positioning, in order to simulate the vehicle mobility. According to this model, per-vehicle transitions among adjacent spatial clusters are represented by a Markovian spatial chain, in which each state corresponds to one spatial cluster with radius Ra (see Fig. <ref type="figure" target="#fig_7">1a</ref>). Furthermore, the per-vehicle inter-cluster transition probability β vc and per-cluster average number of served vehicles N vc may be numerically evaluated as in <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b18">[19]</ref>:</p><formula xml:id="formula_55">βvc = v/vmax, and, N vc = Ajam (1 -βvc) (π/2)(Ra) 2 ,<label>(28)</label></formula><p>where A jam (vehicle/m 2 ) is the maximum spatial density of vehicles under traffic congestion phenomena.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Performance results</head><p>In the first test scenario, we run the proposed scheduler and evaluate the resulting average total consumed energy E * tot under a synthetic (e.g., independent and identically distributed) input arrival random sequence. the input traffic that is actually admitted by the proposed scheduler and the corresponding average total delay T * tot in <ref type="bibr" target="#b26">(27)</ref>. These plots refer to the case of k e = 0.05 (J/(M Hz) 2 ), M = 10 and h = 0.95. They allow us to gain insight about the tradeoff between admission capability and induced delay of the proposed scheduler. Specifically, two main conclusions may be drawn from the plots of Figs. <ref type="figure" target="#fig_4">4</ref> and<ref type="figure" target="#fig_5">5</ref>. First, the average fraction F * A of the admitted traffic increases for increasing values of the storage capacity N I = N O of the input/output buffers, and/or increasing values of E ave (see Figs. <ref type="figure" target="#fig_4">4</ref> and<ref type="figure" target="#fig_5">5</ref>). Second, according to the Little' law, the corresponding average total delay suffered by the admitted traffic increases for increasing values of N I = N O (see Fig. <ref type="figure" target="#fig_4">4</ref>), while it (quickly) decreases for increasing values of E ave (see Fig. <ref type="figure" target="#fig_5">5</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Mobility effects</head><p>Goal of this set of numerical tests is to acquire insight about the effects induced by the vehicle mobility on the resulting average total delay T * tot in <ref type="bibr" target="#b26">(27)</ref>, when the target performance is assigned in terms of average wireless transmission rate r * and average total consumed energy E * tot . For this purpose, the application scenario of Table <ref type="table">1</ref> has been still considered at M = 10 and k e = 0.05 (J/(M Hz) 2 ). The corresponding numerically evaluated performance is reported in Table <ref type="table" target="#tab_4">2</ref>.</p><p>An examination of these results leads to two main conclusions. First, the minimum size N I = N O of the input/output buffers required to meet the target values r * and E * tot (quickly) increases for increasing values of h (e.g., for decreasing values of the average vehicle speed v). This is due to the fact that larger values of h increase the coherence time of the sequence {σ(t)} of the connection state (see Eqs. <ref type="bibr" target="#b9">(10)</ref> and ( <ref type="formula" target="#formula_20">13</ref>)), so that {σ(t)} tends to be "less ergodic". Thus, in order to offset this effect without penalizing the energy performance, the scheduler requires more buffering capacity, that, in turn, penalizes the resulting delay performance (see the last column of Table <ref type="table" target="#tab_4">2</ref>). Second, at least in the simulated scenarios, the requested buffer size N I = N O tends to scale as: O (-1/log(h)) for h ≥ 0.87.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Performance tests and comparisons under realworld time-correlated input traffic</head><p>In order to test the consolidation capability of the proposed scheduler when the arrival sequence {a(t)} exhibits timecorrelation, we have considered the arrival trace of Fig. <ref type="figure" target="#fig_6">6</ref>. It reports the real-world trace in Fig. <ref type="figure">2</ref> of <ref type="bibr" target="#b27">[28]</ref> and refers to the I/O workload taken from four RAID volumes of an enterprise storage cluster in Microsoft (see Section IV.A of <ref type="bibr" target="#b27">[28]</ref>). In order to maintain the peak workload fixed at 8 (M bit/slot), each arrival of Fig. <ref type="figure" target="#fig_6">6</ref> carries out a traffic of 0.266 (M bit).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.1">Adaptive consolidation performance</head><p>The numerical trials of this sub-section aim at testing both the actual convergence to the steady-state and corresponding convergence speed of the proposed iterative consolidation algorithm of Section 5. For this purpose, we have evaluated and compared its performance against the optimal one. By design, at each consolidation instant t, the optimal consolidation scheduler computes the optimal sub-set of the consolidated VMs by performing an exhaustive search over    <ref type="bibr" target="#b2">3)</ref>. The corresponding measured energy loss (in percent) suffered by the proposed iterative consolidation algorithm of Section 5 against the optimal one is reported in Table <ref type="table">3</ref> for the cases of k e = 5 (mJ/(M Hz) 2 ) (e.g., case of low scaling cost) and k e = 500 (mJ/(M Hz) 2 ) (e.g., case of high scaling cost). TABLE 3: Average energy loss (in percent) of the proposed consolidation algorithm against the optimal one. The application scenario of Section 6.5.1 is considered at M = 10 and E ave = 0.5 (Joule). 1.2% 0.8% 0.5% ke = 5 (mJ/(M Hz) 2 ) 0.87% 0.7% 0.3%</p><p>An examination of the results of Table <ref type="table">3</ref> leads to three main conclusions. First, the actual rate of occurrence of consolidation events increases by passing from Case 1 to Case 3. This induces, in turn, a reduction in the performance penalty suffered by the consolidation algorithm, whose chances of convergence to the optimal consolidated configurations increase, indeed, for increasing rate of the occurrence of the consolidation events. Second, the energy penalty suffered by the proposed consolidation algorithm is nearly negligible and, at least in the carried out tests, it remains, indeed, limited up to 1.2%, even at high values of k e . Third, since the rate of the occurrence of VM underutilization phenomena increases for increasing values of k e and too frequent occurrence of VM underutilization phenomena tends to increase the resource reconfiguration actions to be carried out at the consolidation instants, the energy penalty suffered by the proposed consolidation algorithm tends to somewhat increases for growing values of k e .</p><p>The plots of Fig. <ref type="figure" target="#fig_8">7</ref> report the corresponding (numerically evaluated) time-behaviors of the average utilization U(.) in <ref type="bibr" target="#b21">(22)</ref> at k e = 5 (mJ/(M Hz) 2 ). A comparison of the plots of  .) under the application scenario of Section 6.5.1 at M = 10 and Eave = 0.5 (Joule). The horizontal dotted lines mark the upper/lower utilization thresholds of Cases 1, 2 and 3. Fig. <ref type="figure" target="#fig_8">7</ref> with the arrival trace of Fig. <ref type="figure" target="#fig_6">6</ref> confirms that the proposed consolidation algorithm is capable to track the abrupt changes of the input arrival sequence by scaling up/down the number of turned ON VMs, while guaranteeing that the average utilization in <ref type="bibr" target="#b21">(22)</ref> falls into the desired target intervals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.2">Energy performance comparisons</head><p>In this sub-section, we compare the energy performance of the proposed adaptive scheduler against the corresponding ones of some state-of-the-art schedulers, e.g., the GRADientbased Iterative Scheduler (GRADIS) in <ref type="bibr" target="#b24">[25]</ref>, the Lyapunovbased scheduler (Lyap) in <ref type="bibr" target="#b10">[11]</ref>, the static scheduler in <ref type="bibr" target="#b21">[22]</ref>, and the NetDC scheduler in <ref type="bibr" target="#b9">[10]</ref>. Goal of this last set of numerical tests is to (numerically) evaluate and compare the reductions in the overall average energy consumption: E c +E dyn +E LAN , induced by the adaptive resource scaling and VM consolidation performed by the proposed scheduler. is motivated by the fact that current data usually rely on static resource provisioning, so that, design, a fixed number of VMs constantly runs at the maximum processing rate f max , in order to provide the computing capacity needed to satisfy the peak input traffic a max <ref type="bibr" target="#b21">[22]</ref>. Although the resulting static scheduler does not suffer by the energy costs arising from the adaptive resource scaling and consolidation, it induces overbooking of the used resources. Hence, the average energy consumption:</p><formula xml:id="formula_56">E (ST S) E (ST S) c + E (ST S)</formula><p>LAN , of the STatic Scheduler (STS) provides a basic performance benchmark <ref type="bibr" target="#b21">[22]</ref>.</p><p>In order to carry out fair energy comparisons, in the tests of this sub-section, we have implemented the proposed scheduler by directly setting: a(t) = λ(t) = r(t), together with θ = 1 and σ(t) = ∞. In so doing, the objective function in (17.1) to be minimized by the proposed scheduler reduces to the summation of the computing and communication energies consumed by the Fog infrastructure of Fig. <ref type="figure" target="#fig_7">1b</ref>. Hence, on the basis of the carried out numerical tests, we have experienced that: (i) the average energy reduction of the proposed scheduler over the ST S is of about 47% at k e = 500 (mJ/(M Hz) 2 ), while it increases up to about 56% at k e = 5 (mJ/(M Hz) 2 ); and, (ii) at least in the carried numerical tests, a fraction of about 35% -40% of these energy savings is provided by the performed consolidation actions. These results confirm that the proposed consolidation algorithm provides an effective means for leveraging the sudden timevariations exhibited by the input traffic.</p><p>Finally, in order to evaluate the energy reduction induced by scaling up/down the intra-Fog processing and communication rates, we have also tested the schedulers proposed in <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b24">[25]</ref>. Table <ref type="table" target="#tab_5">4</ref> reports the obtained energy consumptions averaged over the corresponding average numbers of actually turned-ON VMs. According to Table <ref type="table" target="#tab_5">4</ref>, the average energy savings of the proposed scheduler over the NetDC scheduler in <ref type="bibr" target="#b9">[10]</ref>, the Lyapunov-based scheduler in <ref type="bibr" target="#b10">[11]</ref> and the GRADIS scheduler in <ref type="bibr" target="#b24">[25]</ref> approach about 60%, 20% and 33% at medium/large values of M . This confirms that the proposed scheduler is capable to effectively adapt to the time-varying fluctuations of the input traffic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS AND FUTURE WORK</head><p>In this paper, we developed a cognitive computing-inspired scheduler for the joint adaptive tuning of the: (i) input traffic; (ii) output traffic; and, (iii) resource reconfiguration and consolidation, of virtualized Fog platforms that support vehicular TCP/IP connections. The overall goal is the energy-saving support of QoS-demanding computingintensive delay-sensitive I2V services. Remarkable features of the developed joint scheduler are that: (i) its implementation is distributed and adaptive; (ii) it minimizes the energy consumed by the overall NetFC platform for computing, intra-Fog communication and wireless transmission over the vehicular TCP/IP connection; and, (iii) despite the unpredictable time-varying nature of the states of underlying TCP/IP vehicular connections, it is capable to provide hard QoS guarantees, in terms of minimum per-connection instantaneous wireless transmission rate, maximum instantaneous rate-jitter and maximum queuing-plus-computing delay. Actual performance of the proposed scheduler has been numerically tested under both synthetic and realworld input traffic, various mobility conditions and settings of the networked Fog platform. This work can be extended in some directions of potential interest. Just as an example, closed networked multi-tier computing infrastructures may be considered for the support of delay-tolerant sessionbased services <ref type="bibr" target="#b32">[33]</ref>. Since, in this application scenario, intraslot traffic arrivals could be allowed, live migration of VMs could be also forecast for attaining additional energy savings. Optimizing live migration of VMs without resorting to exhaustive NP-hard numerical approaches could be an interesting topic for future work.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: (a): The considered Cloud-Fog-Vehicular system architecture; (b): A snapshot of the assumed intra-Fog node architecture. It operates at the Middleware layer and Software as a Service (SaaS) is the provided service mode. Black boxes are Virtual Network Interface Cards (VNICs). RSU:= Road Side Unit; WAN:= Wide Area Network; LAN:= Local Area Network.</figDesc><graphic coords="4,164.10,269.78,283.88,230.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>13:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>TABLE 1 :</head><label>1</label><figDesc>Default values of the main simulated parameters. Parameters ∆ = 0.8 (s) TS = 1 (s) NS = 5 NI = NO = 50 (M bit) E max c = 7 (Joule) Mmax = 4 ke ∈ {0.5, 0.05} (J/(M Hz) 2 ) E idle c = 4 (Joule) βvc = 100/130 fmax = 10 (M bit/slot) α = 10 -2 Nvc = 40/3 rmax = amax = 8 (M bit/slot) Ω = 0.5 (W att) h = 0.95 rmin = 1.5 (M bit/slot) TON = 10 -3 (s) σmin = 375 × 10 4 θ = 0.5 v = 100 (Km/h) Eave = 0.75 (Joule) Rmax = 1000 (M bit/slot) vmax = 130 (Km/h) Ra = 250 (m)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 Fig. 2 :Fig. 3 :</head><label>223</label><figDesc>Fig. 2: E * tot -vs.-r * under synthetic input traffic. the total average consumed energies E * tot at M = 10, 15 and 20 for various values of E ave . Fig.3 points out that, by increasing the number of VMs, E * tot still decreases. However, the interesting point is that, even for increasing values of the available E ave , the admission control performed by the proposed scheduler attempts to reduce the resulting E * tot to the minimum (see the quasi-flat behavior of the plots of Fig.3 at medium/large values of E ave ). 6.3.1 Fraction of accepted requests-vs.-induced delay The plots of Figs.4 and 5 report the (numerically evaluated) average fraction: F * A</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: F * A and T * tot versus the capacity NI = NO of the input/output queues of Fig.1b for the application scenario of Section 6.3.1 at M = 10 and Eave = 0.5 (Joule).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: F * A and T * tot versus Eave for the application scenario of Section 6.3.1 at M = 10 and NI = NO = 20 (M bit).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 :</head><label>6</label><figDesc>Fig. 6: Sampled trace of an I/O arrival sequence from an enterprise cluster in Microsoft [28]. The corresponding PMR and time-correlation coefficient are 2.49 and 0.85, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Case 1</head><label>1</label><figDesc>Case 2 Case 3 ke = 500 (mJ/(M Hz) 2 )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 7 :</head><label>7</label><figDesc>Fig.7: Time-behaviors of the numerically evaluated average utilization U(.) under the application scenario of Section 6.5.1 at M = 10 and Eave = 0.5 (Joule). The horizontal dotted lines mark the upper/lower utilization thresholds of Cases 1, 2 and 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Nicola</head><label></label><figDesc>Cordeschi is a Researcher in Information and Communication Engineering at the DIET Dept. of Sapienza University of Rome. He received the five-year Laurea degree (summa cum laude) in Communication Engineering and the Ph.D. degree in Information and Communication Engineering from the Sapienza University of Rome in 2004 and 2008, respectively. His research activity focuses on data communication, distributed computing and design/optimization of QoS transmission systems for wireless/ wired multimedia applications. Enzo Baccarelli Full Professor in Information and Communication Engineering at the DIET Dept. of Sapienza University of Rome. He received the Laurea degree in Electronic Engineering and the Ph.D. degree in Communication Theory and Systems, both from Sapienza University. In 1995, he received the Post-Doctorate degree in Information Theory and Applications from the INFOCOM Dept. of Sapienza University of Rome. His current research focuses on data networks, distributed computing and adaptive optimization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCC.2016.2551747, IEEE Transactions on Cloud Computing where L * tot (t) is given by Eq. (21.1), and L Algorithm 1 reports a pseudo-code for the overall adaptive implementation of the proposed resource scheduler.</figDesc><table><row><cell>(n-1) i i (t) replaced by µ (n-1) (t) and (t) is given by Eq. (21.6), with µ  *  (t) and f  *  f (n-1) i (t), respectively.</cell></row><row><cell>Algorithm 1 A pseudo-code of the proposed adaptive re-</cell></row><row><cell>source scheduler</cell></row><row><cell>1: for t ≥ 1 do</cell></row><row><cell>2:</cell></row></table><note><p><p><p><p>2. Consider that, due to the presence of the step-size function in</p><ref type="bibr" target="#b22">(23)</ref></p>, the (previously stated) resource consolidation problem resists, indeed, closed-form solution.</p>2168-7161 (c) 2015 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>2168-7161 (c) 2015 IEEE. Personal use is permitted, republication/redistribution requires IEEE permission. See more information. This article has been for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCC.2016.2551747, IEEE Transactions on Cloud Computing</figDesc><table><row><cell>IEEE TRANSACTION ON CLOUD COMPUTING</cell><cell>12</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE 2 :</head><label>2</label><figDesc>Buffer size-vs.-delay tradeoff at target r * and E * tot for various values of the mobility-induced correlation coefficient h. PMR:= Peak-to-Mean Ratio of the input traffic.</figDesc><table><row><cell>Workload Types</cell><cell>h</cell><cell cols="2">r  *  (M bit/slot) E</cell><cell cols="2">*  tot (Joule) N I = N O (M bit) T</cell><cell>*  tot</cell></row><row><cell></cell><cell cols="2">0.870 6</cell><cell cols="2">36</cell><cell>4</cell><cell>4.3</cell></row><row><cell>Synthetic workload at a = 7.5 (M bit/s) and P M R = 1.25</cell><cell cols="2">0.967 6</cell><cell cols="2">36</cell><cell>7</cell><cell>6.2</cell></row><row><cell></cell><cell cols="2">0.997 6</cell><cell cols="2">36</cell><cell>24</cell><cell>7.3</cell></row><row><cell></cell><cell cols="2">0.870 7</cell><cell cols="2">42</cell><cell>10</cell><cell>40.2</cell></row><row><cell>Real-world workload of [28]</cell><cell cols="2">0.967 7</cell><cell cols="2">42</cell><cell>11</cell><cell>41.9</cell></row><row><cell></cell><cell cols="2">0.997 7</cell><cell cols="2">42</cell><cell>15</cell><cell>47.6</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE 4 :</head><label>4</label><figDesc>Average computing-plus-communication energy consumptions under the application scenario of Section 6.5.2.MohammadShojafar currently last year Ph.D. student in information and communication engineering at DIET Dept. of the Sapienza University of Rome. He Received his Msc in software engineering in Qazvin Islamic Azad University, Qazvin, Iran in 2010. Also, he received his Bsc. in computer engineering-software major in Iran university science and technology, Tehran, Iran in 2006. His current research focuses on distributed computing, wireless communications, and mathematical/AI optimization. Mohammad was a programmer and analyzer in exploration directorate section at National Iranian Oil Company (NIOC) and Tidewater ltd. Co. in Iran from 2008-2013, respectively.</figDesc><table><row><cell></cell><cell cols="3">Per-VM average energy consumption (Joule)</cell><cell></cell></row><row><cell cols="3">M Proposed Scheduler NetDC [10]</cell><cell>Lyap [11]</cell><cell>GRADIS [25]</cell></row><row><cell>6</cell><cell>11.5</cell><cell>16.7</cell><cell>15.7</cell><cell>12.7</cell></row><row><cell>8</cell><cell>8.2</cell><cell>15.2</cell><cell>14.1</cell><cell>9.8</cell></row><row><cell>10</cell><cell>6.8</cell><cell>13</cell><cell></cell><cell>7.4</cell></row><row><cell>12</cell><cell>5.5</cell><cell>11.5</cell><cell>13.7</cell><cell>6.5</cell></row><row><cell></cell><cell>5.1</cell><cell>9.7</cell><cell>13.5</cell><cell>6.0</cell></row><row><cell>16</cell><cell>4.9</cell><cell>8.2</cell><cell>13.3</cell><cell>5.6</cell></row><row><cell>18</cell><cell>4.2</cell><cell>7.1</cell><cell>13.2</cell><cell>5.4</cell></row><row><cell>20</cell><cell>3.8</cell><cell>6.8</cell><cell>13.0</cell><cell>5.2</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The meaning of an IU is application dependent. It may represent a bit, byte, segment or even an overall large-size application task (for example, a large image). We anticipate that, in the carried out tests of Section 6, IUs are understood as M bit.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A survey on vehicular cloud computing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Whaiduzzaman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sookhak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="325" to="344" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Vehicular networking: A survey and tutorial on requirements, architectures, challenges, standards and solutions</title>
		<author>
			<persName><forename type="first">G</forename><surname>Karagiannis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Altintas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Ekici</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Heijenk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jarupan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="584" to="616" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Internet of cores</title>
		<author>
			<persName><forename type="first">S</forename><surname>Abolfazli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Sanaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Bojanova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IT Professional</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="5" to="9" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Energy-efficient dynamic traffic offloading and reconfiguration of networked data centers for big data stream mobile computing: review, challenges, and a case study</title>
		<author>
			<persName><forename type="first">E</forename><surname>Baccarelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Cordeschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Panella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shojafar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stefa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="54" to="61" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Mouftah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kantarci</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
			<publisher>Communication Infrastructures for Cloud Computing. IGI Global</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A review on modern distributed computing paradigms: Cloud computing, jungle computing and fog computing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hajibaba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gorgin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computing and Information Technology</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="69" to="84" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Focusing on mobile users at the edge of internet of things using fog computing</title>
		<author>
			<persName><forename type="first">R</forename><surname>Suryawanshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Mandlik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Scientific Engineering and Technology Research</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">17</biblScope>
			<biblScope unit="page" from="3225" to="3231" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Stochastic traffic engineering for real-time applications over wireless networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Cordeschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Patriarca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Baccarelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="681" to="694" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A green energy-efficient scheduling algorithm using the dvfs technique for cloud datacenters</title>
		<author>
			<persName><forename type="first">C.-M</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R.-S</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-Y</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="141" to="147" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Energy-saving selfconfiguring networked data centers</title>
		<author>
			<persName><forename type="first">N</forename><surname>Cordeschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shojafar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Baccarelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">17</biblScope>
			<biblScope unit="page" from="3479" to="3491" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Dynamic resource allocation and power management in virtualized data centers</title>
		<author>
			<persName><forename type="first">R</forename><surname>Urgaonkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">C</forename><surname>Kozat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Igarashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE NOMS</title>
		<meeting>of IEEE NOMS</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="479" to="486" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Energy-efficient mapping and scheduling of task interaction graphs for code offloading in mobile cloud computing</title>
		<author>
			<persName><forename type="first">P</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-K</forename><surname>Tham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 6th IEEE/ACM Int. Conf. on Utility and Cloud Computing</title>
		<meeting>of 6th IEEE/ACM Int. Conf. on Utility and Cloud Computing</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="34" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Energy-traffic tradeoff cooperative offloading for mobile cloud computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 22nd IEEE Int. Symp. of Quality of Service</title>
		<meeting>of 22nd IEEE Int. Symp. of Quality of Service</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="284" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Energy efficiency of mobile clients in cloud computing</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Miettinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Nurminen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 2nd USENIX conference on Hot topics in cloud computing</title>
		<meeting>of 2nd USENIX conference on Hot topics in cloud computing</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="4" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Energy consumption in mobile phones: a measurement study and implications for network applications</title>
		<author>
			<persName><forename type="first">N</forename><surname>Balasubramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Balasubramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Venkataramani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM IMC&apos;09</title>
		<meeting>ACM IMC&apos;09</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="280" to="293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A close examination of performance and power characteristics of 4g lte networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gerber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Spatscheck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM MobiSys&apos;12</title>
		<meeting>of ACM MobiSys&apos;12</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="225" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Saving energy in qos networked data centers</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shojafar</surname></persName>
		</author>
		<ptr target="http://mshojafar.com/PhDThesis.pdf" />
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">NoW-Network on Wheels: Project objectives, technology and achievements</title>
		<author>
			<persName><forename type="first">A</forename><surname>Festag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Noecker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Strassberger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Bochow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Torrent-Moreno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schnaufer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Eigner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Catrinescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kunisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of WIT&apos;08</title>
		<meeting>of WIT&apos;08</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="211" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Distributed and adaptive resource management in cloud-assisted cognitive radio vehicular networks with hard reliability guarantees</title>
		<author>
			<persName><forename type="first">N</forename><surname>Cordeschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amendola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shojafar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Baccarelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Vehicular Communications</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="12" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Portnoy</surname></persName>
		</author>
		<title level="m">Virtualization essentials</title>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Power allocation and routing in multibeam satellites with time-varying channels</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Modiano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Rohrs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. on Networking</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="138" to="152" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Performance analysis of power-aware task scheduling algorithms on multiprocessor computers with dynamic voltage and speed</title>
		<author>
			<persName><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1484" to="1497" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Cloud computing: networking and communication challenges</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Durresi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="24" to="25" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Cloud computing networking: challenges and opportunities for innovations</title>
		<author>
			<persName><forename type="first">S</forename><surname>Azodolmolky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wieder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Yahyapour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="54" to="62" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Energy-saving adaptive computing and traffic engineering for real-time-service data centers</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shojafar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Cordeschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amendola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Baccarelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE ICCW&apos;15</title>
		<meeting>of IEEE ICCW&apos;15</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1800" to="1806" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Correlation model for shadow fading in mobile radio systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gudmundson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Electronics Letters</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">23</biblScope>
			<biblScope unit="page" from="2145" to="2146" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Blackbox and gray-box strategies for virtual machine migration</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Venkataramani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Yousif</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of USENIX NSDI&apos;07</title>
		<meeting>of USENIX NSDI&apos;07</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="229" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Carbonaware load balancing for geo-distributed cloud services</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE 21st MASCOTS&apos;13</title>
		<meeting>of IEEE 21st MASCOTS&apos;13</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="232" to="241" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Multipath tcp: Analysis, design, and implementation</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Walid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-S</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. on Networking</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="596" to="609" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">mclock: handling throughput variability for hypervisor io scheduling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gulati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Merchant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Varman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 9th USENIX Conf. on Operating Systems Design and Implementation</title>
		<meeting>of 9th USENIX Conf. on Operating Systems Design and Implementation</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Secondnet: a data center network virtualization architecture with bandwidth guarantees</title>
		<author>
			<persName><forename type="first">C</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Co-Next</title>
		<meeting>of ACM Co-Next</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="15" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Virtual machine power metering and provisioning</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kothari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Bhattacharya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM Symp. on Cloud Computing</title>
		<meeting>of ACM Symp. on Cloud Computing</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="39" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An experimental analysis on cloud-based mobile augmentation in mobile cloud computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Abolfazli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Sanaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Alizadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Consumer Electronics</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="146" to="154" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
