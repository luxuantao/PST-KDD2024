<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Production Rules as a Representation for a Knowledge-Based Consultation Program&apos;</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Randall</forename><surname>Davis</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Bruce</forename><surname>Buchanan</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Edward</forename><surname>Shortliffe</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Stanley</forename><surname>Drs</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Stanton</forename><surname>Cohen</surname></persName>
						</author>
						<author>
							<persName><forename type="first">F~nk</forename><surname>Axline</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Robert</forename><surname>Rhame</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Rudolpho</forename><surname>Llla</surname></persName>
						</author>
						<author>
							<persName><surname>Chavez-Pardo</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Stanford University</orgName>
								<address>
									<postCode>94305</postCode>
									<settlement>Stanford</settlement>
									<region>CA</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Meqicme</orgName>
								<orgName type="department" key="dep2">School of Medicine Recommended by Edward Feigenbaum</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Production Rules as a Representation for a Knowledge-Based Consultation Program&apos;</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">488B7574BD7778D611518BC0DFDF7DFF</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Artificial lntellioence 8 (19T/), 15-45</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The MYClN system has beoan to exhibit a high level of performance as a consultant on the difficult task of selecting antibiotic therapy for bacteremla. This report discusses issues of representation and design for the system. We describe the basle task and docwnent the constraints involved in the use of a prooram as a consultant. The control structure and knowledoe representation of the system are examined In thts light, and special attention is gtt~n to the impact of production rules as a representation. The extent of the domain Independence of the approach is also examined.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. Introduction</head><p>Two recent trends in artificial intelligence research have been applications of AI to "real-world" problems, and the incorporation in programs of large amounts of task-specific knowledge. The former is motivated in part by the belief that artificial problems may prove in the long run to be more a diversion than a base to build on, and in part by the belief that the field has developed sufficiently to provide techniques capable of tackling real problems.</p><p>The move toward what have been called "knowledge-based" systems represents a change from previous attempts at generalized problem solvers (as, for example, GPS). Earlier work. on such systems demonstrated that while there was a large body of useful general purpose techniques (e.g., problem decomposition into subgoals, heuristic search in its many fortas), these did not by themselves offer sufficient power for high performance. Rather than non-specific problem solving power, knowledge-based systems have emphasized both the accumulation of large amounts of knowledge in a single domain, and the development of domainspecific techniques, in order to develop a high level of expertise.</p><p>There are numerous examples of systems embodying both trends, including efforts at symbolic manipulation of algebraic expressions <ref type="bibr" target="#b20">[21]</ref>, speech understanding <ref type="bibr" target="#b18">[19]</ref>, chemical inference <ref type="bibr" target="#b2">[3]</ref>, the creation of computer consultants as interactive advisors for various tasks <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b28">29]</ref>, as well as several others.</p><p>in this paper we discuss issues of representation and design for one such knowledge-based application program~the MYCIN system developed over the past three years as an interdisciplinary project at Stanford University, 1 and discussed elsewhere <ref type="bibr" target="#b26">[27]</ref><ref type="bibr" target="#b27">[28]</ref><ref type="bibr" target="#b28">[29]</ref><ref type="bibr" target="#b29">[30]</ref>. Here we examine in particular how the implementation of various system capabilities is facilitated or inhibited by the use of production r, les as a knowledge representation. In addition, the limits of applicability of this approach are investigated.</p><p>We be~n with a review of features which were seen to be essential to any knowledge-based consultation system, and suggest how these imply specific program design criteria. We note also the additional challenges offered by the use of such a system in a medical domain. This is follow~-d by an explanation of the system structure, and its fundamental assumptions. The bulk of the paper is then devoted to a report of our experience with the benefits and drawbacks of production rules as a knowledge representation for a high performance AI program.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">System Goals</head><p>The MYCIN system was developed originally to provide consultative advice on diagnosis of and therapy for infectious diseases--in particular, bacterial infections in the blood. 2 From the start, the project has been shaped by several important constraints. The decision to construct a high performance AI program in the consultant model brought with it several demands. First, the program had to be useful if we expected to attract the interest and assistance of experts in the field.</p><p>The task area was thus chosen partly because of a demonstrated need: for example, in a recent year one of every four people in the U.S. was given penicillin, and almost 90?/0 of those prescriptions were unnecessary <ref type="bibr" target="#b15">[16]</ref>. Problems such as these indicate the need for more (or more accessible) consultants to physicians selecting antimicrobial drugs. Usefulness also implies competence, consistently h~o,h performance, and eaze of use. If adviÂ¢,e is not reliable, or is difficult to obtain, the utility of the program is severely impaired.</p><p>A second constraint was the need to design the program to accommodate a large and changing body of technical knowledge. It has become clear that large amounts of task-specific knowledge are required for high performance, and that this knowledge base is subject to significant changes over time <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b12">13]</ref>. Our choice of a production rule representation was significantly influenced by such features of the knowledge base.</p><p>A third demand was for a system capable of handling an interactive dialog, and one which was not a "black box." This meant that it had to be capable of supplying coherent explanations of its results, rather than simply printing a collection of orders to the user. This was perhaps the major motivation for the selection of a symbolic reasoning paradigm, rather than one which, for example, relied totally on statistics. It meant also that the "flow" of dialog--the order of questions-should make sense to a physician and not be determined by programming considei'ations. Interactive dialog required, in addition, extensive human engineering features designed to make interaction simple for someone unaccustomed to computers. The chc4ce of a medical domain brought with it additional demands <ref type="bibr" target="#b27">[28]</ref>. Speed, access and ease of use gained additional emphasis, since a physician's time is typically limited. The program also had to fill a need well-recognized by the clinicians who would actually use the system, since the lure of pure technology is usually insufficient. Finally, the program had to be designed with an emphasiq on its supportive role as a tool for the physic!an, rather than as a replacement for his own reasoning process.</p><p>Any implementation selected had to meet all these demands. Predictably, some have been met more successfully than others, but all have been important factors in influencing the system's final design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">System Overview 3.1. The task</head><p>The fundamental task is the selection of therapy for a patient with a bacterial infection. Consultative advice is often required in the hospital because the attendir, g physician may not be an expert in infectious diseases, as for example, when a cardiology patient develops an infection after heart surgery. Time considerations compound the problem. A specimen (of blood, urine, etc.) drawn from a patient may show some evidence of bacterial growth within 12 hours, but 24 to 48 hours (or more) axe required for positive identification, The physician must therefoce Artificial Intelligence <ref type="bibr">8 (1977)</ref>, <ref type="bibr" target="#b14">15</ref> The most recent ~ culture associated with the primary-beor~emia (INFECTION-I) will be refened to as: ........ CULTURE-1 ........ <ref type="bibr" target="#b6">(7)</ref> From what site was the specimen for CULTURE-1 taken ? ,,BLOOD (8) Please give the date end time when this blood culture (CULTURE-1) was obtained. (moldalyr) ** <ref type="bibr">MAY 9, 1976</ref> The first significant organism from this Mood cu~ure (CULTURE-1) will be referred to as: ........ ORGANISM-1 ........ <ref type="bibr" target="#b8">(9)</ref> Enter the identity of ORGANISM-1 : **UNKNOWN (Q,I~, the ~k,,ulty b .or known and must be 6V'erred) (le) is ORGANISM-1 a rod or coccus (etc.) : **ROD <ref type="bibr" target="#b10">(11)</ref> The gram stain of ORGANISM-1 : **GRAMNEG <ref type="bibr" target="#b11">(12)</ref> Have there been POSITIVE cultures from sites which are NOT associated with infections about which you are seeking advice? The task will become clearer by reviewing the initial and final parts of a sample dialog with the MYCIN system, shown in Figs. <ref type="figure">1</ref> and<ref type="figure">2</ref> (italicized comments at the right are for explanatory purposes, and are not part of the actual dialog). A great deal of attention has been paid to ma~king the interaction easy and natural. Questions have been carefully worded, for example, so as to set up expectat-~ons of responses without making them as uninteresting as multiple choice questions.</p><p>My therapy recommendation will be based on the following probable infection(s) and potential c~usative organism(a) : INFECTION-1 is PRIMARY-BACTEREMIA {possible identities} &lt;item 1 &gt; The identity of ORGANISM-1 may be PSEUDOMONAS-AERUGINOSA &lt;Item 2;&gt; The identity of ORGANISM-1 may be KLEBSlELLA-PNEUMONIAE &lt;Item 3&gt; The identity of ORGANISM-1 may be E. COLI &lt;Item 4&gt; The identity of ORGANISM-1 may be BACTEROIDES-FRAGILIS &lt;Item 5&gt; The identity of ORGANISM-1 may be ENTEROBACTER &lt;Item 6&gt; Tile identity of ORGANISM-1 may be PROTEUS-NON-MIRABILIS (46) On a scale of 0 to In order to cover for Itc ns &lt;1 2 3 5 6&gt;:</p><p>Currently the dialog is directed primarily by the system--patient information can be entered only by answering each question in turn.</p><p>There are several options available to make the interaction more informative. The user can, for instance, ask for a repht'asing of the question Â¢. a display of some (or all) of the acceptable responses. Ifa requested item of information is unavailable, he can respond with UNKNOWN (U, or UNK for short). The user can also modify any answer which he is unsure of by attaching a number indicating his degree of certainty (as, for example, in questions J3 and 15).</p><p>The main purpose of the system is to provide advice, and it does so via the consultation program (Fig. <ref type="figure" target="#fig_1">3</ref>). In addition to this performance prog~ata, there are three adjunct programs that increase system utility and flexibility: Artificial lntellioenee S (1977),  interaction. The consultation program (with the required data structures) requires approximately 50K, the explanation program 10K, the question answering program 15K, the rule acquisition program 20K, and the rules themselves approximately 8K (the remainder includes a dictionary, information on drug properties, and various system utility features).</p><p>As described below, 'each of these four interrelated programs meets one or more of the goals outlined above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">The rules</head><p>The primary source of domain specific knowledge is a set of some 200 production rules, each with a premise and an action (Fig. <ref type="figure">4</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PREMISE (SAND(SAME CNTXT INFECT</head><formula xml:id="formula_0">PRIMARY-BACTEREMIA) (MEMBF CNTXT SITE STERILESITES) (SAME CNTXT PORTAL GI)) ACTION (CONCLUDE CNTXT IDENT BACTEROIDES TALLY .7) If</formula><p>(1) the infection is primary-bacteremia, and</p><p>(2) the site of the culture is one of the sterilesites, and</p><p>(3) the suspected portal of entry of the organism is the gastrointestinal tract, then there is suggestive evidence (.7) that the identity of the organism is bacteroides.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FIO. 4.</head><p>A rule from the knowledge base. SAND and $OR are the multivalued analogues of the standard Boolean AND and OR.</p><p>The premise is a Boolean combination of predicate functions on associative triples. Thus each clause of a premise has the following four components:</p><formula xml:id="formula_1">&lt;predicate function &gt; &lt;object &gt; &lt;attribute &gt; &lt;value &gt;</formula><p>There is a standardized set of 24 predicate functions (e.g. SAME, KNOWN, DEFINITE), some 80 attributes (e.g. IDENTITY, SITE, SENSITIVITY), and 11 objects (e.g. ORGANISM, CULTURE, DRUG), currently available for use as primitives in constructing rules. The premise is always a conjunction of clauses, but may contain arbitrarily complex conjunctions or disjunctions nested within each claase. Instead of writing rules whose premise would be a disjtmction of clauses, we write a separate rule for each clause. The action part indicates one or more conclusions which can be drawn if the premises are satisfied; hence the rules are (currently) purely inferential in chancter.</p><p>It is intended that each rule embody a single, modular chunk of knowledge, and state explicitly in the premise all necessary context. Since the rule uses a vocabulary of concepts common to the domain, it forms, by itself, a comprehensible statement of some piece of domain knowledge. As will become clear, this characteristic is useful in many ways.</p><p>Each rule is, as is evident, highly stylized, with the IF/THEN format and the specified set of available primitives. While the usv form of each is executable code Artificial Intelligence <ref type="bibr">8 (1977)</ref>,  (and, in fact, the premise is simply EVALuated by LISP to test its truth, and the action EVALuated to make its conclusions), this tightly structured form makes possible the examination of the rules by other parts of the system. This in turn leads to some important capabilities, to be described below. For example, the internal form can be automatically translated into readable English, as shown in Fig. <ref type="figure">4</ref>. Despite this strong stylization, we have not found the format restrictive. This is evidenced by the fact that of nearly 200 rules on a variety of topics, only 8 employ any significant variations. The limitations that do arise are discussed in Section 6.1.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Jndgmmtxl imowledlge</head><p>Since we want to deal with real-world domains in which reasoning is often judgmental and inexact, we require some mechanism for being able to say that "'A suggests B", or "C and D tend to rule out E." The numbers used to indicate the strength of a rule (e.g., the .7 in Fig. <ref type="figure">4</ref>) have been termed Certainty Factors (CFs). The methods for combining CFs are embodied in a model of approximate implication. Note that while these are derived from and are related to probabilities, they are distinctly different (for a detailed review of the concept, see [30D. For the rule in Fig. <ref type="figure">4</ref>, then, the evidence is strongly indicative (.7 out of 1), but not absolutely certain. Evidence confirming an hypothesis is collected separately from that which disconfirms it, and the truth of the hypothesis at any time is the algebraic sum of the current evidencA: for and against it. This is an important aspect of the truth model, since it makes plausible the simultaneous existence of evidence in favor and against the same hypothesis. We believe this is an important characteristic of any model of inexact reasoning.</p><p>Facts about the world are represented as 4-tuples, with an associative triple and its current CF (Fig. <ref type="figure" target="#fig_2">5</ref>). Positive CF's indicate a predominance of evidence confirming an hypothesis, negative CFs indicate a predominance of dis~nfrming evidence. Note that the truth model permits the coexistence of several plausible values for a single clinical parameter, if they are suggested by the evidence. Thus, for example, after attempting to deduce the identity of an organism, the system may have concluded (correctly) that there is evidence that the identity is E. coil and evidence that it is Klebsiella, despite the fact that they are mutually exclusive possibilities.</p><formula xml:id="formula_2">(SITS ~ULTURE-1 BLOOD 1.Â¢) (IDENT ORGANISM-2 KLEBSIELLA .25) {IDENT ORGANISM-2 E.COLI .73) (SENSITIVS ORGANISM-1 PENICILUN -1.0)</formula><p>As a result of the program's medical origins, we also refer to the attribute part Arti~clal Intellioence <ref type="bibr">8 (1977)</ref>, <ref type="bibr">15--45</ref> of the triple as 'clinical parameter', and use the zwo terms interchangeably here. The object part (e.g., COLTURE-lo ORGANISM-2) is referred to a~,, a context. This term was chosen to emphasize th-.ir dual role as both part of the associative triple and as a mechanism for establishing scope of variable bindings. As explained below, the contexts are organized during a consultation into a tree structure whose function is similar to those found in 'alternate world' mechanisms of languages like QA4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Control structure</head><p>The rules are invoked in a backward unwinding scheme that produces a depth-first search of an AND/OR goal tree (and hence is similar in some respects to PLANNER'S consequent theorems): given a goal to establish, we retrieve the (pre-computed) list of all rules whose conclusions bear on the goal. The premise of each is evaluated, with each predicate function returning a number between -1 and 1. SAND (the multivalued analogue of the Boolean AND) performs a minimization operation, and $OR (similar) does a maximization. 3 For rules whose premise evaluates successfully (i.e. greater than .2, an empirical threshold), the action part is evaluated, and the conclusion made with a certainty which is &lt;premise-value&gt;. (certainty factor&gt; Those which evaluate unsuccessfully are bypassed, while a clause whose truth cannot be determined from current information causes a new subgoal to be set up, and the process recurs. Note that 'evaluating' here means simply invoking the LISP EVAL function--there is no additional rule interpreter necessary, since SAND, $OR, and the predicate functions are all implemented as LiSP functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1.">Variations from the standard depth-~rst search</head><p>Unlike PLANNER, however, the subgoal which is set up is a generalized form of the original goal. If, for example, the unknown clause is '~e identity of the organism is E. coil', the subgoal which is set up is 'determine the identity of the organism.' The new subgoal is therefore always of the form 'determine the value of &lt;attribute)' rather than 'determine whether the &lt;attribute} is equal to &lt;value)'. By setting up the generalized goal of collecting all evidence about a clinical parameter, the program effectively exhausts each subject as it is encountered, and thus tends to group together all questions about a given topic. ]his results in a system whicl~ displays a much more focussed, methodical approach to the task, which is a distinct advantage where human engineering considerations are important. The cost is the effort of deducing or collecting information which is not strictly necessary. However, since this occurs rarely--only when the ~attribute) can be deduced with certainty to be the Â¢~value) named in the original goal--we have not found this to be a problem in practice.</p><p>A second deviation from the standard rule unwinding approach is that every rule relevant to a goal is used. The premise of each rule is evaluated, and if successful, its conclusion is invoked. This continues until all relevant rules have all been used, or one of them has given the result with certainty. This use of all rules is in part an aspect of the model of judgmental reasoning and the approximate implication character of rule~--unless a result is obtained with certainty, we should be careful to collec4 all positive and negative evidence. It is also appropriate to the system's current domain of application, clinical medicine, where a conservative strategy of considering all possibilities and weighing all the evidence is preferred.</p><p>If, after trying all relevant rules (referred to as 'tracing' the subgoal), the total weight of the evidence about a hypothesis falls between -.2 and .2 (again, empirically determined), the answer is regarded as still unknown. This may happen if no rule were applicable, the applicable rules were too weak, the effects of several rules offset each other, or if there were no rules for this subgoal at all. In any of these cases, when the system is unable to deduce the answer, it asks the user for the value (using a phrase which is stored along with the attribute itself). Since the legal values for each attribute are also stored with it, the validity (or spelling) of the user's response is easily checked. (This also makes possible a display of acceptable answers in response to a '?' answer from the user.)</p><p>The strategy of always attempting to deduce the value of a subgoal, and asking only when that fails, would insure the minimum number of questions. It would also mean, however, that work might be expended searching for a subgoal, arriving perhaps at a less than definite answer, when the user already knew the answer with certainty. In response to this, some of the attributes have been labelled as LABDATA, indicating that they represent quantities which are often available a~ quantitative results of laboratory tests. In this case the deduce-then-ask procedure is reversed, and the system will attempt to deduce the answer only if the user cannot supply it. Given a d~ire to minimize both tree search and the number of questions asked, there is no guaranteed optimal solution to the problem of deciding when to ask for information, and when to try to deduce it. But ~he LABDATA--clin[Cal data distinction used here has performed quite well, and seems to embody a very appropriate criterion.</p><p>Three other recent additions to the tree search procedure have helped improve performance. First, before the entire list of rules for a subgoal is retrieved, the system attempts to find a sequence of rules which would establish the goal with certainty, based only on what is currently known. Since this is a search for a. sequence of rules with CF --1, we have termed the result a unity path. Besides. efficiency considerations, this process offers the advantage of allowing the system. Artlf:cial Intell~ence g (1977),  to make "common sense' deductions with a minimum of effort (rules with CF = 1 are largely definitional). Since it also helps minimize the number of questions, this check is performed even before asking about LABDATA type attributes as well. Because there are few such rules in the systersl, the search is typically "very brief.</p><p>Second, a straightforward bookkeeping mechanism notes the rules that have failed pr-,~iously, and avoids ever trying to reevaluate any of them. (Recall that a rule mat have more than one conclusion, may conclude about more than a single attribute, and hence may get retrieved more than once).</p><p>Finally, we have implemented a pa:'tial evaluation of rule premises. Since many attributes are found in several rules, the valae of one clause (perhaps the last) in a premise may already have been established, even while the rest are still unknown. If this clause alone would make the premise false, there is clearly no reason to do all the search necessary to try to establish the others. Each premise is thus 'previewed' by evaluating it on the basis of currently available information. This produces a Boolean combination of TRUEs, FALSEs, and UNKNOWNs, and straightforward simplification (e.g. F A U-F) indicates whether the rule is guaranteed to fail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2.">Templates</head><p>The partial evaluation is implemented in a way which suggests the utility of stylized coding in the rules. It also forms an example of what was alluded to earlier, where it was noted that the rules may be examined by various elements of the system, 'as â¢ well as executed. We require a way to tell if any clause in the premise is knov~ n, be false. We cannot simply EVAL each individually, since a subgoal which had never been traced before would send the system off on its recursive search.</p><p>However, ff we can establish which attribute is referenced by the clause, it is possible to determine (by reference to internv.l flags) whether it has been traced previously. If so, the clause can be EVALed to obtain the value. A template (Fig. <ref type="figure">6</ref>) associated with each predicate function makes this possible. The template indicates the generic type and order of arguments to the predicate function, much like a simplified procedure declaration. It is not itself a piece of code, but is simply a list structure of the sort shown above, and indicates the appearance of an interpreted call to the predicate function. Since rules are kept in interpreted form (as shown in Fig. <ref type="figure">4</ref>), the template can be used as a guide to dissect a rule. This is done by retrieving the template for the predicate function found in each clause, and then using that as a guide to examining the clause. In the ease of the function SAME, for instance, the template indicates that the clinical parameter (PARM) is the third element of the list structure which comprises the Artificial Intellioence 8 (1977), 15-45 function call. The previewing mechanism uses the templates to extract the attribute from the clause in question, and can then determine whether or not it has been traced.</p><p>There are two points of interest here--first, part of the system is 'reading' the code (the tules) being executed by another part; and second, this reading is guided by the information carried in components of the rules themselves. The ability to 'read' the code could have been accomplished by requiring all predicate functions to use the same format, but this is obviously awkward. By allowing each function to describe the format of its own calls, we permit code which is stylized without being constrained to a single form, and hence is flexible and much easier to use. We require only that each form be expressible in a template built from the current set of template primitives (e.g., PARM, VALUE, etc.). This approach also insures that the capability will persist in the face of future additions to the syster The result is one example of the general idea of giving the system access to, and an "understanding" of its own representations. This idea has been used and discussed extensively in <ref type="bibr" target="#b6">[7]</ref>.</p><p>We have also implemented antecedent-style rules. These are rules which are invoked if a conclusion is made which matches their premise condition. They are currently liraited to common-sense deductions (i.e. CF ffi 1), and exist primarily to improve system efficiency. Thus, for example, if the user responds to the question of organism identity with an answer of which he is certain, there is an antecedent rule which will deduce the organism gramstain and morphology. This saves the trouble of deducing these answers later vi~ the subgoal mechanism described above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.$. Meta-r~les</head><p>With the system's curreut collection of 200 rules, exhaustive invocation of rules would be quite feasible, since the maximum number of rules for a single subgoal is about 30. We are aware, however, of the problems that may occur if and when the collection grows substantially larger. It was partly in response to thi~ that we developed an alternative to exhaustive invocation by implementing the concept of meta-rules. These are strategy rules which suggest the best approach to a given subgoal. They have the same format as the clinical rules (Fig. <ref type="figure">7</ref>), but can indicate that certain clinical rules should be tried first, last, before others, or not at all.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PREMISE: (SAND (MEMBF SITE CNTXT NONSTERILESITES) (THEREARE OBJRULES(MENTIONS CNTXT PREMISE SAMEBUG)) ACTION :</head><p>(CONCLIST CNTXT UTILITY YES TALLY -1.0) If</p><p>(1) the site of the culture is one of the nonstedle~tas, and</p><p>(2) there are rules which mention in th,Jir premise a previous organism which may be the seme as the current o~ganilml Then it is definite (1.0) that each of them is not going to be useful. Fro. 7. A recta-rule. A previous infection which has been cured (temporarily) may reoccur. Thus one of the ways to deduce the identity of the current organism is by reference to previous infectiom. However, this method is not valid if the curreng infection was cultured from ot~ of the non~erik culture sites. Thus this recta-rule says, in effect, Or the current culture is from a mn-sto4te site, dolt bother tryiN9 to deduce the current organisms ldetttlty from identities of prtvlogr ~. ArtO~cial <ref type="bibr">Intelligence 8 (1977)</ref>, <ref type="bibr">15--45</ref> Thus befo-e processing the entire list of rules applicable to any subgoai, the metarules for ,hat subgoal are evaluated. They may rearrange or shorten the list, effectively ordering :he search or pruning the tree. By making them specific to a given subgoal, we can specify precise heuristics without imposing any extra overhead in the tracing of other subgoals.</p><p>Note, however, that there is no reason to stop at one level of meta-rules. We can generalize this process so that, before invoking any list of rules, we check for the existence of rules of the next higher order to use in pruning or rearranging the first list. Thus, while meta-rules are strategies for selecting clinical rules, second order meta-rules would contain information about which strategy to try, third order rules would suggest criteria for deciding how to choose a strategy, etc. These higher order rules represent a search by the system through "strategy space", and appear to be powerful constraints on the search process at lower levels. (We have not yet encountered h~;, :r order meta-rules in practir~e, but neither have we actively sought them).</p><p>Note also that since the system's rule unwinding may be viewed as tree search, we have the appearance of a search through a tree with the interesting property that each branch point contains information on the best path to take next. Since the meta-rules can be judgmental, there exists the capability of writing numerous, perhaps conflicting heuristics, and having their combined judgment suggest the best path. Finally, since meta-rules refer to the clinical rules by their content rather t~an by name, the method automatically adjusts to the addition or deletion of clinical rules, as well as modifications to any of them.</p><p>The capability of meta-rules to order or prune the search tree has proved to be useful in dealing with another variety of knowledge as well. For the sake of human engineering, for example, it makes good sense to ask the user first about the positive cultures (those showing bacterial growth), before asking about negative cultures. Formerly this design choice was embedded in the ordering of a list buried in the syste~ c~.~le..Yet it can be stated quite easily and explicitly in a meta-rule, yielding the significant advantages of making it both readily explainable and modifiable. Meta-rules have thus proved capable of expressing a limited subset of the knowledge formerly embedded in the control structure code of the system.</p><p>Meta-rules may also be used to control antecedent rule invocation. Thus we can write strategies which control the deFth and breadth of conclusions drawn by the system in response to a new piece of information.</p><p>A detailed overview of all of these mechanisms is included in the Appendix, and indicates the way they function together to insure an efficient search for each subgoal.</p><p>The final aspect of tlle control structure is the tree of contexts (recall the dual meaning of the term, Section 3.3), constructed dynamically from a fixed hierarchy as the consultation proceeds (Fig. <ref type="figure">8</ref>). This serves several purposes. First, bindings of free variables in a rule are established b) .he context in which the rule is invoked, with the standard access to contexts which are its ancestors. Second, since this Artifwial Intellieence <ref type="bibr">8 (1977)</ref>,  tree is intended to reflect the relationships of objects in the domain, it helps structure the consultation in ways familiar to the user. In the current dom:,irt, a patient has one or more infections, each of which may bare one or more associated cultures, each of which in turn may have one or more organisms growing in it, and so on. Finally, we have found ;.t useful to select one or more of the attributes of each context type and establish these as its MAINPROPS, or primary properties. Each time a new context of that type is sprouted, these MAINPROPS are automatically traced." Since many of them are LABDATA-type attributes, the effect is to begin each new context with a set of standard questions appropriate to that context, which serve to 'set the stage' for subsequent questions. This has proved to be a very useful human engineering feature in a domain which has evolved a heavily stylized format for the presentation of information.</p><formula xml:id="formula_3">PATIENT-1 INFECTION-1 INFECTION .:) / /\ CULTU~tE-1 ~LTURE-2 CULTORE-3 / /\ \ ORGANISM-1 ORGANISM-2 ORGANISM-3 ORGANISM4</formula><p>FJ~. 8. A sample of the contexts which may be sprouted during a consultation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Relaifon to Other Work</head><p>We outline briefly in this section a few programs that relate to various aspects of our work. Some of these have provided the intellectual basis from which the present system evolved, others have employed techniques which are similar, while still others have attempted to solve closely related problems. Space limitations preclude detailed comparisons, but we indicate some of the more important distinctions and similarities.</p><p>There have been a large number of attempts to aid medical decision making (see <ref type="bibr" target="#b26">[27]</ref> for an extensive review). The basis for some programs has been simple algorithmic processes, often implemented as decision trees ~23, 37]), or more complex control structures in system3 tailored to specific disorders <ref type="bibr" target="#b1">[2]</ref>. Many have based their diagnostic capabilities on variations of Bayes' theo:'em <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b35">36]</ref>, or on techniques derived from utility theory of operations research <ref type="bibr" target="#b10">[11]</ref>. Models of the patient or disease process have been used successfully in <ref type="bibr">[32, 25 and 17]</ref>. A few recent efforts have beee baseu on some form of symbolic reasoning. In particular, the glaucoma diagnosis system described in <ref type="bibr" target="#b16">[17]</ref> and the diagnosis system of <ref type="bibr" target="#b25">[26]</ref> can also be viewed as rule-based~ Carbonell's work <ref type="bibr" target="#b4">[5]</ref> represents an early attempt to make uncertain inferences in a domain of concepts that are strongly linked, much as MYCIN's are. Although the purpose of Carbonell's system was computer-aided instruction rather than consultation, much of our initial design was influenced by his semantic net model.</p><p>The basic production ,ale methodology has been applied in many different conte::ts, in attempts to solve a wide range of problems (see, for example, <ref type="bibr" target="#b5">[6]</ref> for an overview). The most directly relevant of these is the DENDRAL system <ref type="bibr" target="#b2">[3]</ref>, which has achieved a high level of performance on the task of mass spectrum analysis. Much of the initial design of MYCIN was influenced by the experience gained in building and using the DENDRAL system, which in turn was based in part on <ref type="bibr" target="#b37">[38]</ref>.</p><p>There have been numerous attempts to create models of inexact reasoning. Among the more recent is <ref type="bibr" target="#b17">[18]</ref>, which reports on the implementation of a language to facilitate fuzzy reasoning. It deals with many of the same issues of reasoning ~:nder uncertainty that are detailed in <ref type="bibr" target="#b29">[30]</ref>.</p><p>The approach to natural language used in our system has been thus far quite elementary, primarily keyword-based. Some of the work reported in <ref type="bibr" target="#b3">[4]</ref> suggested to us initially that this might be a sufficiently powerful approach for our purposes. This has proven generally true because the technical language of this domain contains relatively few ambiguous words.</p><p>The chess playing program of <ref type="bibr" target="#b40">[41]</ref> employs a knowledge representation which is functionally quite close to ours. The knowledge base of that, system consists of small sequences of code which recognize patterns of pieces, and then conclude (with a variable weighting factor) the value of obtaining that configuration. They report quite favorably on the ease of augmenting a knowledge base organized along these lines.</p><p>The natural language understanding system of <ref type="bibr" target="#b38">[39]</ref> had some basic explanation capabilities similar to those described here, and could discuss its actions and plai.s.</p><p>As we have noted above, and will explore further below, part of our work has been involved in talking it possible for the system to understand its own operation. Many of the explanation capabilities were designed and implemented with this in mind, and it has significantly influenced design of the knowledge acquisition system as well. These efforts are related in a general way to the long sequence of attempts to build program-understanding systems. Such efforts have been motivated by, among other things, the desire to prove correctness of programs (as in <ref type="bibr" target="#b34">[35]</ref> or <ref type="bibr" target="#b21">[22]</ref>), and as a basis for automatic programming (as in <ref type="bibr" target="#b12">[13]</ref>). Most of these systems attempt to assign meaning to the code of some standard programming language like LISP, or ^LGOL. Our attempts have been oriented toward supplying meaning for the terms used in MYCIN's production rules (such as SAME). The task of program-understanding is made easier by approaching it at this higher conceptual level, and the result is correspondingly less powerful. We cannot for instance Artificial Intelligence <ref type="bibr">8 (1977)</ref>, <ref type="bibr">15--45</ref> prove that the implementation of SAME is correct. We can, however, employ the representation of meaning in other useful ways. It forms, for example, the basis for much of the knowledge acquisition program (see Section 6.3), and permits the explanation program to be precise in explaining the system's actions (see <ref type="bibr" target="#b6">[7]</ref> for details). A similar sort of high level approach has been explored by Hewitt in his proposed INTENDER system <ref type="bibr" target="#b14">[15]</ref>. Finally, similar efforts at computer-based consultants have recently been developed in different domains. The work detailed in <ref type="bibr" target="#b23">[24]</ref> and <ref type="bibr" target="#b13">[14]</ref> has explored the use of a consultation system similar to the one described here, as part of an integrated vision, manipulation, and problem solving system. Recent work on an intelligent terminal system [I] has been based in part on a formalism which grew out of early experience with the MYCIN system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>s. FuNhu</head><p>We attempt here to examine some of the assumptions which are explicit and implicit in our use of production rules. This will help to suggest the range of application for these techniques, and indicate some of their strengths and limitations. Because such a listing is potentially open-ended, we include here the assumptions essential to the approach used in MYCIN, but which are not necessarily applicable to every interactive program.</p><p>There are several assumptions implicit in both the character of the rules and the ways in which they are used. First, it must be possible to write such judgmental rules. Not every domain will support this. It appears to require a field which has at'ained a certain level of formalization, which includes perhaps a generally recognized set of primitives and a minimal understanding of basic processes. It does not seem to extend to one which has achieved a thorough, highly formalized level, however. Assigning cert~,inty factors to a rule should thus be a reasonable task whose results would be repeatable, but not a trivnal one in which all CFs were 1.</p><p>Second, we require a domain in which there is a limited sort of interaction between conceptual primitives. Our experience has suggested that a rule with more than about six clauses in the premise becomes conceptually unwieldy. The number of factor~ interacting in a premise to trigger an action therefore has a practical (but no theoretical) upper limit. Also, the AND/OR goal tree mechanism requires that the clauses of a rule premise can be set up as non-conflicting subgoals for the purposes of establishing each of them (just as in robot problem solving; see <ref type="bibr" target="#b8">[9]</ref> and the comment on side effects in <ref type="bibr" target="#b30">[31]</ref>). Failure of this criterion causes results which depend on ~.he order in which evidence is collected. We are thus making fundamental assumptions concerning two forms of interaction--we assume (a) that only a small number of factors (about 6) must be considered simultaneously to trigger an action; and Co) that the presence or absence of each of those factors can be es:abiished without adverse effect on the others. Arti[ictal Intelligence 8 (197"0, 15--45 Also, certain characteristics of the domain will influence the continued utility of this approach as the knowledge base of rules grows. Where there are a limited number of attributes for a given object, the growth in the number of rules in the knowledge base will not produce an exponential growth in search time for the consultation system. Thus as newly acquired rules begin to reference only established attributes, use of these rules in a consultation will not produce further branching, since the attributes mentioned in their premises will have aiready been traced. In addition, we assume that l~rge numbers of antecedent rules will not be necessary, thus avoiding very long chains of 'forward' deductions.</p><p>The:e are essential assumptions as well in the use of this formalism as tht: basL for an interactive sys,em. First, our explanation capabilities (reviewed below) rest on the assumption that display of either a rule or some segment of the control flow is a reasonable explanation of system behavior. Second, much of the ap 3roach to rule acquisition is predicated on the assumption that experts can be "debriefed", that is, they can recognize and then formalize chunks of their own knowledge and expzrience, and express them as rules. Third, the IF/THEN format of rules must. be sufficiently simple, expressive, and intuitive that it can provide a useful language for expressing such formalizations. Finally, the system's mode of reasoning (a simple modus ponens chaining) must appear natural enough that a user can readily follow along. We offer below (Section 6) arguments that all these are plausible assumptions.</p><p>There is an important assumption, too, in the development of a system for use by two classes of users. Since the domain experts who educate the system so strongly influence its conceptual primitives, vocabulary, and knowledge base, we must be sure that the naive users who come for advice speak the same language.</p><p>The approach we describe does not, therefore, seem well suited to domains requiring a great deal of complex interaction between goals, or those for which it is difficult to compose sound judgmental rules. As a general indic.ation of potentially useful applications, we have found that cognitive tasks are good candidates. In one such domain, antibiotic therapy selection, we have met with encouraging success.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Production Rules as a Knowledge Representation</head><p>In the introduction to this report we outlined three design goals for the system we are developing: usefulness (including competence), maintenance of an evolutionary knowledge base, and support of an interactive consultation. Our experience has suggested that production rules offer a knowledge representation that greatly facilitates the accomplishment of these goals. Such rules are straightforward enough to make feasible many interesting features beyond performance, yet powerful enough to supply significant problem solving capabilities. Among the features discussed below are the ability for explanation of system performance, and acquisition of new rules, as well as the general 'understanding' b) the system Artificial Intelligence 8 (1977), 15-45 of its own knowledge base. In each case we indicate the current performance levels of the system, and evaluate the role of production rules in helping to achieve this performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Coml~ence</head><p>The competence of the system has been evaluated in two studies in the past few years. In mid-1974, a semi-formal study was undertaken, employing five infectious disease experts not associated with the project. They were asked to evaluate the system's performance on fifteen cases of bacteremia selected from current inpatients. We evaluated such parameters as the presence of extraneous questions, the absence of important ones, the system's ability to infer the identity of organisms, and its ability to select appropriate therapy. The principal problem discovered was an insufficient number of rules concerned with evaluating the severity of a patient's illness. Nevertheless, the experts approved of MYCIN's therapy recommendation in 72 % of the evaluations. (There were also considerable differences of opinion regarding the best therapy as selected by the experts themselves.) A more formal study ts currently under way. Building oo our experience gained in 1974, ~, designed a more extensive questionnaire and prepared detailed background i:,,ormation on a new set of fifteen patients. These were sent to five experts associated with a local hospital, and to five others across the country. This will allow us to evaluate performance, and in addition measure the extent to which the system's knowledge base reflects regional trends in patient care.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">!. Advantages of production rules</head><p>Recent problem solving efforts in AI have made it clear that high performance of a system is often strongly correlated with the depth and bre,slth of the knowledge base. Hence, the task of accumulation ana management of a large and evolving knowledge base soon poses problems which dominate those encountered in the initial phases of knowledge base construction. Our experience suggests that giving the system itself the ability to examine and manipulate its knowledge base provides some capabilities for confronting these problems. These are disc~sed in subsequent sections.</p><p>The selection of production rules as a knowledge representation is in part a response to this fact. One view of a production rule is as a modular segncnt of code <ref type="bibr" target="#b39">[40]</ref>, which is heavily stylized <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b2">3]</ref>. Each of MYCIN's rules is, as noted, a simple conditional statement: the premise is constrained to be a Boolean expression, the action contains one or more conclusions, and each is completely modular and independent of the others. Such modular, stylized coding is an important factor in building a system that is to achieve a high level of competence.</p><p>For example, any stylized code is easier to examine. This is used in several ways in the system. Initial integration of new rules into the knowledge base can be automated, since theh premise and action parts can be systematically scanned, Artificial Intelligence 8 (1977), 1~.45 and the rules can then be added to the appropriate internal lists. In *~he question answering system, inquiries of the form 'Do you recommend clindamycin for bacteroides ?' can be answered by retrieving rules whose premise and action contain the relevant items. Similarly, the detection of straightforward cases of contradiction and subsLmption is made possible by the ability to examine rule contents. Stylized code also makes feasible the direct manipulation of individual rules, facilitating a~omatic correction of such undesirable interactions.</p><p>Toe benefits of modularized code are well understood. Expecially significant in this case are the ease of adding new rules and the relatively uncomplicated control structure which the modular rules permit. Since rules are retrieved because they are relevant to a specific goal (i.e., they mention that goal in their action part), the addition of a new rule requires only that it be added to the appropriate internal list according to the clinical parameters found in its action. A straightforward depth first search (the result of the backward chaining of rules) is made possibl: by the lack of interactions among rules.</p><p>These benefits are common to stylized code c,f any form. Stylization in the form of production rules in particular has proved to be a useful formalism for several reasons. In the domain of deductive problems, especially, it has proven to be a natural way of expressing knowledge. It also supplies a clear and convenient way of expressing modular chunks of knowledge, eince all necessary, context is stated explicitly in the premise. This in turn makes it easier to insure proper retrieval and use of each rule. Finally, in common with similar formalisms, one rule never directly calls another. This is a significant advantage in integrating a new rule into the system--it can simply be 'added to the pot' and no other rule need be changed to insure that it is called (compare this with the addition of a new procedure to a typical ALC, OL-type program).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2.">Shortcomings of production rules</head><p>Stylization and modularity also result in certain shortcomings, however. It is, of course, somewhat harder to e~i~ress a given piece of knowledge if it must be put into a predetermined format. The intent of a few of the rules in our system are thus less than obvious to the naive user even when translated into English. The requirement of modularity (along with the uniformity of the knowledge base), means all necessary contextual information must be stated explicitly in the premise, and this at times leads to rules which have awkwardly long and complicated premises.</p><p>Another shortcoming in the formalism arises in part from the backward chaining control structure. It is not always easy to map a sequence of desired actions or tests into a set of production rules whose goal-directed invocation will provide that sequence. Thus, while the system's performance is reassuringly similar to some human reasoning behavior, the creation of appropriate rules which result in such behavior is at times non-trivial. This may in fact be due more to programming experience oriented primarily toward ALGOL-like languages, rather than any Artificial Intellioence 8 (1977), 15--45 essential characteristic of production rules. After some experience, with the system we have improved our skill at 'thinking backward'. A final shortcoming arises from constraining rule premises to contain "pure" predicates, s This forces a pure problem reduction mode in the use of rules: each clause of a premise is set up as an independent goal, and execution of the action should be dependent solely on the success or failure of premise evaluation, without referencing its precise value. It is at times, however, extremely convenient to write what amounts to a 'for each' rule, as in "for each organism such that.., conclude</p><p>â¢..'. A few rules of this form are present in the system (including, for example, the meta-rule in Fig. <ref type="figure">7</ref>), and they are made to appear formally like the rest by allowing th ~ premise to compute a value (the set of items that satisfy the premise), which is passed to the action clause via a global variable. While this has been relativcly successful, the violation of the basic formalism results in othe; difficulties --in particular, in the explanation system, which produces somewhat murky explanations of such rules. We are working toward a cleaner solution of this problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Explanation</head><p>Augmentation or modification of any knowledge base is facilitated by the ability to discover what knowledge is currently in the system and how it is used. The system's acceptance (especially to a medical audience) will be strongly dependent upon the extent to which its performance is natural (i.e., human-like) and transparent. Lack of acceptance of some applications programs can be traced to their obscure reasoning mechanisms which leave the user forced to accept or reject advice without a chance to discover its basis. One of our original design criteria, then, was to give the system the ability to provide explanations of its behavior and knowledge. it soon became evident that an approach relying on s,~me form of symbolic reasoning (rather than, for example, statistics) would make this feasible. This was one of the primary reasons behind the choice of the production rule representation, and has continued to influence the program's development.</p><p>Our initial efforts at explanation and question-answering were based on three capabilities: (i) display on demand during the consultation the rule currentl) ~ being invoked, (ii) record rules which were invoked, and after the consultation, be able to associate specific rules with specific events (questions and conclusions) to explain why each of them happened, and (iii) search the knowledge base tot a specific type of rule in answer to inquiries of the user. The first of these could be easily implemented via the single-word command format described below.</p><p>The latter two were intended for use after the consultation, and hence were provided with a simple natural language front end. Examples are shown in Fig. <ref type="figure">9</ref> s That is, a plx'dic~te tlmt returns a value indicating only suocess or failure. Since we use a multi-valued logic, the predicate function in rule premises return a number between 0 and 1. The alternative approach is to allow any non-NIL value to indicate success (e.g., the MEMBER function in i~sP). <ref type="bibr">8 (1977)</ref>, 15--45 (additiol,al examples can be found in <ref type="bibr" target="#b28">[29]</ref>). Note that the capability for answering questions of type (ii) has been extended to include inquiries about actions the program failed to take (example [d], Fig. <ref type="figure">9</ref>). This is based on the ability of the explanation system to simulate the control structure of the consultation system, and can be extremely useful in deciphering the program's behavior. For questions of type (iii), ([el in Fig. <ref type="figure">9</ref>) the search through the knowledge base is directed by a simple parsing of the question into a request for a set of ruk s, with constraints on premise and/or action contents. The retrieval of relevant rules is guided primarily by pre-established (but automatically generated) lists which indicate premise and action contents. I used RULE021 to conclude that the identity of ORGANISM-1 is e.coli. This gave a cumulative CF of (.47).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Artificial lntelli#ence</head><p>Then I u~ed RULE084 to conclude that :he identity of ORGANISM-1 is e.coli. This gave a cumulative CF of (.55).</p><p>Finally, I used RULE~3 to conclude that ~;,e identity of ORGANISM-1 is e.coli. This gave a cumulative CF of (.74).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(b) ** DID YOU USE RULE 163 TO FIND OUT ANYTHING ABOUT ORGANISM-1 ?</head><p>RULE163 was t,;ed in the context of ORGANISM-I, but it failed because it is not uue that the patient has had a genito-urinary tract manipulative procedure (clause 3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(c) ** DID RULE 116 TELL YOU ANYTHING ABOUT INFECTION-1 ?</head><p>No. RULE116 would be relevant to the primary-bacteremia when applied to ORGANISM-1.</p><p>But clause 2 ("the gram stain of the organism is not known") was already known to be false for ORGANISM-I, so the rule was never tried.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(d) ** WHY DIDN'T YOU CONSIDER STREPTOCOCCUS AS A POSSIBILITY</head><p>FOR ORGANISM-1 ? The following rule could have been used to determine that the identity of ORGANISM-1 was streptococcus: RULE033 But clause 2 ("the morphology of the organism is coccus") was already known to be false for ORGANISM-I, so the rule was never tried.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(e) ,, DO YOU RECOMMEND CLINDAMYCIN FOR BACTEROIDES ?</head><p>Yes. RULE~6~)</p><p>If the identity' of the organism is bacteroides Then I recommend therapy be chosen from among the following : CHLORAMPHENICOI., CLINDAMYCIN, RIFAMPIN, ERYTHROMYCIN, CARBENICILLIN, TETRAC't CLINE, LINCOMYCIN (f) ** IS BLOOD A STERILE SITE?</p><p>Yes, blood is one of those sites that are normally sterile. Artificial Intelligence 8 (I 977), 15-45 Some generalization of and extensions to the methodology of (i) and (ii) have been motivated by two shortcomings. Displaying the current rule is not particularly informative if the rule is essentially definitional and hence conceptually trivial. The problem here is the lack of a good gauge for the amount of information in a rule.</p><p>R~ording individual rule invocations, questions and conclusions is useful, but as a record ofindMdual events, it fails to capture the context and ongoing sequence. It is difficult therefore to explain any event with reference to anything but the specific information recorded with that event.</p><p>Two related techniques were developed to solve these problems. First, to provide a metric for the amount of information in a rule, we use (in a very rough analogy with information theory) (-leg CF). Rules which are definitional (CF = 1) have by this measure no information, while those which express less obvious implications have progressively more information. The measure is clearly imperfect, since first, CFs are not probabilities, and there is thus no formal justification that -(leg ElF) is a meaningful measure. Second, any sophisticated information content measure should factor in the state of the observer's knowledge, since the best explanations are those which are based on an understanding of what the observer fails to comprehend. Despite these shortcomings, however, this heuristic has proven to be quite useful.</p><p>To solve the second problem (explaining events in context) the process of recording individual rule invocations has been generalized: all the basic control functions of the system have been augmented to leave behind a history of each of their executions. This internal trace is then read by various parts of the explanation system to provide a complete, in-context explanation of any part of the system's behavior.</p><p>Because the consultation process is essentially one of search through an AND/OR goal tree, inquiries during the course of a consultation fall quite naturally into two types: WHY a question was asked, and HOW a conclusion was (or will be) reached. The first of these looks "'up" the goal tree, in examining higher goals, while the second looks "down" in examining rules which may help achieve a goal. This part of the system's explanation cap~',bility can thus be viewed in general as a process of tree traversal. By combining this concept with the information content metric, we make possible explanations in varying levels of detail: the tree may be traversed in steps whose information content size is specified by the user, rather than simply stepping from goal to goal. At the start of the traversal process, "information distance" from the current goal to the top of the tree is normalized to 10. The argument to the WHY command (an integer b?tween one and ten, assumed to be one if :tbsent) is then taken to indicate some part of that distance. Thus, WHY 3 indicates an explanation which encompasses approximately onethird of the total "conceptual" distance. Repeated WHY questions have the effect of stepping up the goal tree. Examples are shown below; additional examples are found in <ref type="bibr" target="#b6">[7]</ref> and <ref type="bibr" target="#b28">[29]</ref>.</p><p>Ar, i~cial Intelll~nce 8 (1977), 1~45 Similarly, HOW commands step "down" the tree. This can result in examining either branches which have already been traversed (as in the example below) or those which have yet to be tried (in which case the question becomes 'HOW will you determine...').</p><p>In this series, how-many of the cultures were positive for the e.coli (ORGANISM-I) ?</p><p>{typical system prompt }</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>*WHY</head><p>{request from user to determine motivation for question } [i.e. WHY is it important to determine the number of cultures which were positive for the organism ?] {system's rephrasing of the WHY question, and answer } [1.0] This will help to determine whether there is significant disease associated with this occurrence of the organism.</p><p>It has already be~n established that [1.1] the culture was taken from a sterile source [1.2] the number of cultures in the series is greater than 2 Therefore, if <ref type="bibr">[1.3]</ref> the number of cultures which were positive for ORGAN:SM-1 is greater than 2 Then there is suggestive evidence (.5) that there is significant disease associated with this occurrence of the e.coli (ORGANISM-1).</p><p>[RULE 049] **WHY {repeated WH Y to determine relevwtce of previozts explanation } [i.e. WHY is it important to determine if there is significant disease a~sociated with this occurrence of the organism ?] [2,0] This will help to determine a diagnosis for which the infectior should be treated.</p><p>It hag already been established that [2.1] the infection is not one of: primary-bacteremi;z, meningitis <ref type="bibr">[2.2]</ref> for some current culture of the patient it is true that the site of the culture is blood Therefore, if <ref type="bibr">[2.3]</ref> there is significant disease associated with this occurrence of the organism Then it is definite (1 .~) that the diagnosis for which the infection should be treated is secondary-bacteremia [RULE li}3] Fig. <ref type="figure">10</ref>. Examples of explanation capabilities. User input is in boMfaee and follows the double asterisk. Expansion of each WHY or HOW question (enclosed in brackets) is produced by the system, to be sure the user is aware of the system's interpretation of them.</p><p>The system's fundamental approach to explanation is thus to display some recap of its internal actions, a trace of its reasoning. The success of this technique is predicated on the claim that the system's basic approach to the problem is sufficiently intuitive that a summary of those actions is at least a reasonable basis from which to start. While it would be difficult to prove the claim in any formal sense, there are several factors which suggest its plausibility.</p><p>First, we are dealing with a domain in which deduction, and deduction in the Artificial Intelligence 8 (1977), 15-45 face of uncertainty, is a primary task. The use of production rules in an IF/THEN format seems therefore to be a natural way of expressing things about the domain, and the display of such rules should be comprehensible. Second, the use of such rules in a backward chaining mode is, we claim, a rcasonably intuitive scheme.  Modus ponens is a well-understood and widely (if not explicitly) used mode of inference. Thus, the general form of the representation and the way it is employed should not be unfamiliar to the average user. More specifically, however, consider the source of the rules. They have been given to us by human experts who were attempting to formalize their own knowledge of the domain. As such, they embody accepted patterns of human reasoning, implying that they should be relatively easy to understand, especially for those familiar with the domain. As such, they will also attack the problem at what has been judged an appropriate level of detail. That is, they Will embody the right size of "chunks" of the problem to be comprehensible.</p><p>We are not, therefore, recapping the binary bit level operations of the machine instructions for an obscure piece of code. We claim instead to be working with primitives and a methodology whose (a) substance, (b) level of detail, and (c) mechanism are all well suited to the domain, and to human comprehension, precisely because they were provided by human experts. This approach seems to provide what may plausibly be an understandable explanation of system behavior. This use of symbolic reasoning is one factor which makes the generation of explanations an easier task. For example, it makes the display of a backtrace of performance comprehensible (as, for example, in Fig. <ref type="figure">9</ref>). The basic control Artificial Intelligence 8 (1977), 15--45 structure of the consultation system is a second factor. The simple depth-firstsearch of the AND/OR goal tree makes HOW, WHY, and the tree traversal approach natural (as in Fig. <ref type="figure">10</ref> and<ref type="figure">11</ref>). We believe ~everal concepts in the current system are, however, i'airly general purpose, and would be useful even in systems which did not share these advantages. Whatever control structure is employed, the maintenance of an internal trace will clearly be useful in subsequent explanations of system behavio:. The use of some information metric will help to insure that those explanations are at an appropriate level of detail. Finally, the explanation generating routines require some ability to decipher the actions of the main system.</p><p>By way of contrast, we might try to imagine how a program based on a statistical approach might attempt to explain itself. Such systems can, for instance, display a disease which has been deduced and a list of relevant symptoms, with prior and posterior probabilities. No more informative detail is available, however. When the symptom list is long, it may not be clear how each of them (or some combination of them) contributed to the conclusion. It is more difficult to imagine what sort of explanation could be provided if the program were interrupted with interim queries while in the process of computing probabilities. Tbe problem, of course, is that statistical methods are not good models of the actual reasoning process (as shown in psychological experiments of <ref type="bibr" target="#b7">[8]</ref> and <ref type="bibr" target="#b32">[33]</ref>), nor were they designed to be. While they are op*,a'ationally effective when extensive data concerning disease incidence are available, they are also for the most part, "shallow", one-step techniques which capture little of the ongoing process actually used by expert problem solvers in the domain, e</p><p>We have found the presence of even the current basic explanation capabilities to be extremely useful, as they have begun to pass the most fundamental test: it has become easier to ask the system what it did than to trace through the code by hand. The continued development and generalization of these capabilities is one focus of our present research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Acquisition</head><p>Since the field of infectious disease therapy is both iargc, and constantly changing, it was apparent from the outset that the program would have to deal with an evolving knowledge base. The domain size made writing a complete set of rules an impossible task, so the system was designed to facilitate an incremental approach to competence. New research in the domain produces new results and modifications of old principles, so that a broad scope of knowledge-base management capabilities was clearly necessary.</p><p>However, the reasoning process of human experts may not be the ideal model for all knowledgebased problem solving systems. In the presence of reliable statistical data, programs using a decision theoretic approach are capable of performance surpassing thgse of their human counterparts.</p><p>In domains like infectious disease therapy selection, however, which arc characterized by "judgmental knowledge", statistical approaches may not be viable. This appears to be the case for many medical decis;.on making areas. See <ref type="bibr" target="#b11">[12]</ref> and [3~] for further discussion of this point.</p><p>Artificial Inteiligonce <ref type="bibr">8 (1977)</ref>,  As suggested above, a fundamental assumption is that the expert teaching the system can be "debriefed", thus transferring his knowledge to the program. That is, presented with any conclusion he makes during a consultation, the expert must be able to state a rule indicating all relevant premises for that conclusion. The rule must, in and of itself, represent a valid chunk of clinical knowledge.</p><p>There are two reasons why this seems a plausible approach to knowledge acquisition. First, clinical medicine appears to be at the correct level of formalization. That is, while relatively little of the knowledge can be specified in precise algorithms (at a level comparable to, say, elementary physics) the judgmental knowledge that exists is often specifiable in reasonably firm heuristics. Second, on the model o," a medical student's clinical training, we have emphasized the acquisition of new knowledge in the context of debugging (although the system is prepared to accept a new rule from the user at any time). We expect that some error on the system's part will become apparent during the consultation, perhaps through an incorrect organism identification or therapy selection. Tracking down this error by tracing back through the program's actions is a reasonably straightforward process which presents the expert with a methodical and complete review of the system '~ . reasoning. He is obligated to either approve of each step or to correct it. This means that the expert is faced with a sharply focussed task of adding a chunk of knowledge to remedy a specific bug. This makes it far easier for him to formalize his knowledge than woulcl be the case if he were asked, for example, "tell me about ba~teremia."</p><p>This methodology has the interesting advantage that the context of the error (i.e., which conclusion was in error, what rules were used, what the facts of this case were, etc.) is of great help to the acquisition system in interpreting the expert's subsequent instructions for fixing the bug. The error type and context supply the system with a set of expectations about the form and content of the anticipated correction, and this greatly facilitates the acquisition process (details of this and much of the operation of the acquisition system are found in <ref type="bibr" target="#b6">[7]</ref>).</p><p>The problem of educating the system can be usefully broken down into three phases: uncovering the bug, transferring to the system the knowledge necessary to correct the bug, and integrating the new (or revised) knowledge into the knowledge base. As suggested above, the explanation system is designed to facilitate the first task by making it easy to review all of the program's actions. Corrections are then specified by adding new rules (and perhaps new values, at.'-ibutes, or contexts), or by modifying old ones. This process is carried out in a mixed initiative dialogue using a subset of standard English.</p><p>The system's understanding of the dialog is based on what may be viewed as a primitive form of 'model-directed' automatic programmi~lg. Given some natu:al language text describing one clause of a new rule's premise, the system scans the text to find keywords suggesting which predicate function(s) are the most appropriate translations of the predicate(s) used in the clause. The appropriate template for each such function is retrieved, and the 'parsing' of the remainder of the text is guided by the attempt to fill this in. Arti/icial Intelligence 8 (1977), <ref type="bibr">15--45</ref> If one of the functions were SAME, the template would be as shown in Fig. <ref type="figure">6</ref>. CNTXT is known to be a literal which should be left as is, PARM signifies a clinical parameter (attribute), and VALUE denotes a corresponding value. Thus the phrase "'the stain of the organism is negative" would be analyzed as follows: the word "stain" in the system dictionary has as part of its semantic indicators the information that it may be used in talking about the attribute gramstain of an organism. The word "negative" is known to be a valid value of gramstain (although it has other associations as well). Thus one possible (and in fact the correct) parse is</p><formula xml:id="formula_4">(SAME CNTXT GRAM GRAMNEG)</formula><p>or "the gramstain of the organism is gramnegative."</p><p>Note that this is another example of the use of higher level primitives to do a form of program undergtanding. It is the semantics of PARM and VALUE which guide the parse after the template is retrieved, and the semantics of the gramstain concept which allow us to insure the consistency of each parse. Thus by treating such concepts as conceptual primitives, and providing semantics at this level, we make possible the capabilities shown, using relatively modest e mounts of machinery.</p><p>Other, incorrect parses are of course possible, and are: generz ted too. There are three 2hctors, however, which keep the total number of parses within reasonable bounds. First, and perhaps most important, we are dealing with a very small amount of text. The user is prompted for each clause of the premise individually, and while he may type an arbitrary amount at each prompt, the typical response is less than a dozen words. Second, there is a relatively small degree of ambiguity in the semi-formal language of medicine. Therefore a keyword-based approach produces only a small number of possible interpretations for each word. Finally, insuring the consistency of any given parse (e.g. that VALUE is indeed a valid value for PARM) further restricts the total number generated. Typically, between 1 and 15 candidate parses result.</p><p>Ranking of possible interpretations of a clause depends ,:n expectation and internal consistency. As noted above, the context of the original error supplies expectations about the form of the new rule, and this is used to help sort the resulting parses to choose the most likely.</p><p>As the last step in educating the system, we have to integrate the new knowledge into the rest of the knowledge base. We have ovly recently begun work on this problem, but we recognize two important, general problems. First, the rule set should be free of internal contradictions, subsumptions, or redundancies. The issue is complicated significantly by the judgmental nature of the rules. While some inconsistencies are immediately obvious (two rules identical except for differing certainty factors), indirect contradictions (resulting from chaining rules, for example) are more difficult to detect. Inexactness in the rules means that we can specify only an interval of consistent values for a certainty factor.</p><p>The second problem is coping with the secondary effects that the addition of new Artificial Intelligence <ref type="bibr">8 (1977)</ref>,  knowledge typically introduces. This arises primarily from the acqut~ition of a new value, clinical parameter 3r context. After requesting the information required to specify the new structure, it is often necessary to update several other information structures in the system, and these in turn may cause yet other updating to occur. For example, the creation of a new value for the site of a culture involves a long sequence of actions: the new site must be added to the internal list ALLSff[S, it must then be classified as either sterile or non-sterile, and then added to the appropriate list; if non-sterile, the user has to supply the names of the organisms that are typically found there, and so forth. Wh;.le some of this updating is apparent from the structures themselves, much of it is not. We are currently investigatin/; methods for specifying such interactions, and a methodology of representation design that minimizes or simplifies the interactions to begin with. The choice of a production rule representation does impose some limitations in the knowledge transfer task. Since rules are simple conditional statements, they can at times provide power insufficient to express some more complex concepts. In addition, while expressing a single fact is often convenient, expressing a larger concept via several rules is at times somewhat more difficult. As suggested above, mapping from a sequence of actions to a set of rules is not always easy. Goaldirected chaining is apparently not currently a common human approach to structuring larger chunks of knowledge.</p><p>Despite these drawbacks, we have found the production rule formalism a powerful one. It has helped to organize and build, in a relatively short period, a knowledge "ase which performs at an encouraging le,,el of competence. The rules are, as noted, a reasonably intuitive way of expressing simple chunks of inferential knowledge, and one which requires no acquaintance with any programming language. While it may not be immediately obvious how to restate domain knowledge in production rule format, we have found that infectious disease experts soon acquired some proficiency in doing this with relatively little training. We have had experience working with five different experts over the past few years, and in all cases had little difficulty in introducing them to the use of rules. While this is a limited sample, it does suggest that the formalism is a convenient one for structuring knowledge for someone unfamiliar with programming.</p><p>The rules also appear capable of embodying appropriate-sized chunks of knowledge, and of expressing concepts that are significant statements. They remain, however, straightforward enough to be built of relatively simple compositions of conceptual primitives (the attributes, values, etc.). While any heavily stylized form of coding of course makes it easier to produce code, stylizing in the form of production rules in particular also provides a framework which is structurally simple enough to be translatable to simple English. This means that the experts can easily comprehend the program's explanation of what it knows, and equally easily specify knowledge to be added.</p><p>Artificial lntell, gence 8 (i 977), ! 5-45</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusions</head><p>The MYCIN system has begun to approach its design goals of competence and high performance, flexibility in accommodating a large and changing knowledge base, and ability to explain its owrt reasoning. Successful applications of our control structure with rules applicable to other problem areas have been (a) fault diagnosis and repair recommendations for bugs in an automobile horn system <ref type="bibr" target="#b33">[34]</ref>, (b) a consultation system for industrial assembly problems <ref type="bibr" target="#b13">[14]</ref>, and (c) part of the basis for an intelligent terminal system [1].</p><p>A large factor in this work has been the production rule methodology. It has proved to be a powerful, yet flexible representation for encoding knowledge, and has contributed significantly to the capabilities of the system.</p><p>The control structure as it might be expressed in an ALGOL-like language. All predicates and functions refer to processes discussed in Sections 3.2-3. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>- 45 L( 4 )( 5 )</head><label>4545</label><figDesc>DAVIS ET AL. often decide, in absence of complete information, whether or t~ot to start treatment and what drugs to use if treatment is required. Both of these may be difficult questions. ........ PATIENT-1 ........ (1) Patient's name: (firat-last) **FRED SMITH (b,,~tcro~ data) Have you been able to obtain posi~e cultures from a site at which Fred Smith has an infection ? **YES ........ INFECTION-1 ........ Wire is the inf~ ? **PRIMARY-BACTEREMIA (6) Please give the date end approximate time when signs or WmPtor~ of the I~ima~y-bacl~ernia (INFECTION-1) first appeared. (nm/da/yr) **MAY 6, 1976</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>3 .</head><label>3</label><figDesc>(a) a question answering program which handles simple natural language inquiries about either the specific consultation, or about the general knowledge base of the program; (b) an explanation program for giving reasons why the performance program has requested an item of information or has drawn a particular conclusion; and (c) a knowledge acquisition program for extending the knowledge base through a dialog with an expert.The system is written ip INIEaLlSe, runs on a DEC KI-10 with approximately 130K of nonshared code, and is fast enough to permit convenient real-time The six components of the system: four programs, the imowledg base, and the patient data base. All of the system's knowledile of infectious disease is contained within the Imowl~lp base. Data about a specific oatient collected during a consultation is stored in the patient data base. Arrows indicate the direction of infornmtion flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIo. 5 .</head><label>5</label><figDesc>Samples of infom~fiou in the patient data base during a comultation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>(</head><label></label><figDesc>a) ** HOW DID YOU DECIDE THAT ORGANISM-1 MIGHT BE AN E.COL! ?</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>FIG. 9. Examples of natural language question answering capabilities. Questions [a]-[d] reference a specific consultation, while [e]-[g] are general inquiries answered from the system knowledge base.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIG</head><label></label><figDesc>FIG. I I. Examples of explanation c~pabilities--a HOW question.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>] the site of the culture is one of: those sites from which the sterility of cultures depend upon the method of collection[4.2]  the method of collection ol the culture is one of: the recognized methods of collection associated with the site of the culture, and[4.3]  it is not known whether care was taken in collecting the culture</figDesc><table><row><cell>**HOW 1.1</cell></row><row><cell>{the 1.1 refers to the information in the line/abel/ed [!.1]/n F/O. 10}</cell></row><row><cell>[i.e. HOW was it determined that the culture was taken from a sterile source ?]</cell></row><row><cell>[3.1] RULE ~1 was used to conclude that there is suggestive evidence</cell></row><row><cell>(.7) that the culture was tÂ£ken from a sterile source.</cell></row><row><cell>[3.3] RULE 022 was used to conclude that there is strongly suggestive</cell></row><row><cell>evidence (.7) that the cuIt,Jre was taken from a sterile source</cell></row><row><cell>**HOW 3.1</cell></row><row><cell>{another request from the user ~</cell></row><row><cell>[i.e. HOW was RULE001 uc~:l ?]</cell></row><row><cell>It has already been established that</cell></row><row><cell>[4.1 Therefore</cell></row><row><cell>there is strongly suggestive evidence (.8) that the culture was taken</cell></row><row><cell>from a sterile source</cell></row><row><cell>[RULE022]</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>5. Examples of nonstandard "data types" are shown below.</figDesc><table><row><cell>'data type'</cell><cell></cell></row><row><cell>item</cell><cell>IDENTITY</cell></row><row><cell>rule</cell><cell>RULEO~</cell></row><row><cell>Wemi~ dame</cell><cell>(SAME CNTXT PORTAL GI)</cell></row><row><cell>m:tioo dame</cell><cell>(CONCLUDE CNTXT IDENTITY BACTEROIDEÂ£ TALLY.8)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0"><p>Note that, unlike standard probability theory, SAND does not involve any multiplication over its arguments. Since CFs are not probabilities, there is no a priori reason why a product should be a reasonable number. There is, moreover, a long-standing convention in work with multi-valued logics which interprets AND as m/n and OR as max<ref type="bibr" target="#b19">[20]</ref>. It is based primarily on intuitive grounds: if a conclusion requires all of its antecedents to be true, then it is a relatively conservative strategy tc use the smallest of the antecedent values as the value of the premise. Similarly, if any one of the an!___*~' ,_$ent clauses justifies the conclusion, we are safe in taking the maximum value.Arttficial Intelligence8 (1977), </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>As a result of this, the control flow h actually sfightly more complicated than a pure AND/OR goal tree, and the flowchart in the appendix is correspondingly more complex.ArtO~cial IntelliO~nce8 (1977), </p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>t The work reported here was funded in part by grants from the Bureau of Health Sciences Research and Evaluatior, Grant HSO1544 and NIH Grant GM 29662, by a grant from the Advanced Research Projects Agency under ARPA Contract DAHCI5-73-C-8435, and the Medical Scientist Training Program under NIH Grant GM-81922. Artificial Intelligence 8 (1977), 15-45</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix</head><p>Procedure FIND VALUEOF (item GOAL) begin item X; list L; rule R; premise_clause P; if (X ~-UNITYPATH(GOAL)) then return (X); if LABDATA(GOAL) and DEFINITE_ANSWER( X ~--ASKUSER(GO AL)) then return(X); </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">RAND intelligent terminals agent: design philosophy, RAND R-1809-ARPA</title>
		<author>
			<persName><forename type="first">J</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Gillogly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1977-01">January, 1977</date>
			<publisher>The RAND Corporation</publisher>
			<pubPlace>Santa Monica, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The computer as a consultant</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bleich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">N. EngL J. Met</title>
		<imprint>
			<biblScope unit="volume">284</biblScope>
			<biblScope unit="page" from="141" to="147" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The heuristic DENDRAL program for explaining empirical data</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Buchanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lederherg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IFIP</title>
		<imprint>
			<biblScope unit="page" from="179" to="188" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Pattern matching rules for the recognition of natural language dialog expressions, A I Memo ~:2M</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Colby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Parkinson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Faught</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974-06">June 1974</date>
			<pubPlace>Stanford, CA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Mixed initiative man-computer instngtional dialogues</title>
		<author>
			<persName><forename type="first">S</forename><surname>Carbonell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BBN Report</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<date type="published" when="1970">1971. May 1970</date>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Bolt, Beranek and Newman</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An overview of production systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>King</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Intelligence 8: Machine ,2epresentations of Knowledqe</title>
		<editor>
			<persName><forename type="first">Michie</forename><surname>Elcock</surname></persName>
		</editor>
		<meeting><address><addrLine>NY</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Use of Meta-level knowledge in the construction and maintenance of large knowledge bases, A I Memo ~283</title>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976-07">July 1976</date>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Conservatism in human information processing</title>
		<author>
			<persName><forename type="first">R</forename><surname>Edwards</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Formal Representation of Human Judgment</title>
		<editor>
			<persName><surname>Kleinmuntz</surname></persName>
		</editor>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1968">1968</date>
			<biblScope unit="page" from="17" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A planning system for robot construction tasks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Fahlman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence $</title>
		<imprint>
			<biblScope unit="page" from="1" to="50" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Experience with a model of sequential diagnosis</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Gorry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">O</forename><surname>Barnett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Biomed. Res</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="490" to="507" />
			<date type="published" when="1968">1968</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Decision analysis as the basis for computer-aided management of acute renal failure</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Gorry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Kassirer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Essig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">B</forename><surname>Schwartz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Am. J. Med..f~</title>
		<imprint>
			<biblScope unit="page" from="473" to="484" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Computer-assisted clinical decision making, Method</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Gorry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Med</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="42" to="51" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Waldinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Barsgow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Elschlager</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Lenat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P</forename><surname>Mccune</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Shaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">I</forename><surname>Steinberg</surname></persName>
		</author>
		<title level="m">Progress report on program-understanding systems, A I Memo #240</title>
		<meeting><address><addrLine>Stanford, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1974-08">August 1974</date>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Progress on a computer-based consultant</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">E</forename><surname>Hart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975-01">January 1975</date>
			<pubPlace>Stanford Research Institv; Menlo t&apos;ark, CA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>AI Group Technical Note 99</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Procedure semantics--models of procedures and the teaching of procedures</title>
		<author>
			<persName><forename type="first">C</forename><surname>Hewitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nat. Lang. Process., Courant Computer Science Symposium</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Rustin</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="331" to="350" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Spotlight on antimicrobial agent.v--1973</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">M</forename><surname>Kagan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Fannin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bardie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Am. Med. Assoc</title>
		<imprint>
			<biblScope unit="volume">226</biblScope>
			<biblScope unit="page" from="306" to="310" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Glacon~ Diagnosis and Therapy by Computer</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Kulikowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sniff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Annu. Meet. Ass. Res. Vision Ophthamol</title>
		<imprint>
			<date type="published" when="1973-05">May 1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Fuzzy problem solving</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Le Faivre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="15" to="45" />
			<date type="published" when="1974-09">September 1974. 1977</date>
			<publisher>Madison</publisher>
		</imprint>
		<respStmt>
			<orgName>University of Wisconsin</orgName>
		</respStmt>
	</monogr>
	<note>Tech. Rept.</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Organization of the HEARSAY-II speech understanding system</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Lesser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Fennell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Erman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Reddy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Acoust. Speech Signal Process. ASSP</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="11" to="23" />
			<date type="published" when="1975-02">February 1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Numerical interpretation of the theory of propositions</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Lukasiewicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Jan Lukasiewicz: Selected Works</title>
		<editor>
			<persName><surname>Bo~'kowski</surname></persName>
		</editor>
		<meeting><address><addrLine>North-Holland, Amsterdam</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">The MACSYMA reference manual, The MATHLAB Group</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1974-09">September 1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Correctness of programs</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Manna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Computer analysis of the clinical neurological exam</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">K</forename><surname>Weissman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Biomed. Res</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="111" to="117" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J</forename><surname>Nilsson</surname></persName>
		</author>
		<title level="m">Artificia! Intelligence--Research and Applications, A 1 Group P</title>
		<meeting><address><addrLine>Menlo Park, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Stanford Research Institute</publisher>
			<date type="published" when="1975-05">May 1975</date>
		</imprint>
	</monogr>
	<note type="report_type">ogress Report</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Towards the simulation of clinical cognition: taking the present illness by computec</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Paaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Gorry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Kassirer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">B</forename><surname>Schwartz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Am. J. Med</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="981" to="996" />
		</imprint>
	</monogr>
	<note>I 976</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">DIALOG, a model of diagnostic logic for internal medicine</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pople</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Meyers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Fourth Internl. Joint Conf. Artificial Intelligence</title>
		<editor>
			<persName><forename type="first">U</forename><forename type="middle">S S R</forename><surname>Tiblisi</surname></persName>
		</editor>
		<meeting>Fourth Internl. Joint Conf. Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1975-09">September 1975</date>
			<biblScope unit="page" from="848" to="855" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">MYCIN: A rule-based computer program for advising physicians regarding antimicrobial therapy selection, A I Memo #251</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Shortliffe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974-10">October 1974. 1976</date>
			<publisher>Elsevier</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, Stanford University</orgName>
		</respStmt>
	</monogr>
	<note>Also to appear as Computer-Based Medical Consultations: M YCIN, American</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Design considerations for a program to provide consultations in clinical therapeutics</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Shortliffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Axline</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Buchanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">N</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">San Diego Biomedical Symposium</title>
		<imprint>
			<date type="published" when="1974">February 6-8, 1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Computer-based consultations in clinical therapeutics--explanation and rule acquisition capabilities of the MYCIN system</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Shortliffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Buchanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Axline</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">N</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Biomed. Res</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="303" to="320" />
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A model of inexact reasoning in medicine</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Shortliffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Buchanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Biosci</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="351" to="379" />
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Proving the impossible is impossible is possible</title>
		<author>
			<persName><forename type="first">L</forename><surname>Siklossy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Roach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Third Interni. Joint Conf. Artifzcial Intelligence</title>
		<meeting>Third Interni. Joint Conf. Artifzcial Intelligence</meeting>
		<imprint>
			<biblScope unit="page" from="383" to="387" />
		</imprint>
		<respStmt>
			<orgName>Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A digitalis therapy advisor</title>
		<author>
			<persName><forename type="first">H</forename><surname>Silverman</surname></persName>
			<affiliation>
				<orgName type="collaboration">MAC TR-143</orgName>
			</affiliation>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mass. Inst. Tech.. C</title>
		<imprint>
			<date type="published" when="1975">1975</date>
			<pubPlace>ambridge, MA</pubPlace>
		</imprint>
	</monogr>
	<note>Project MAC</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Judgment under uncertainty: heuristics and bias~s</title>
		<author>
			<persName><forename type="first">"</forename><surname>I~'ersky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kahneman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">185</biblScope>
			<biblScope unit="page" from="1129" to="1131" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Would you like advice on another horn, MYCIN project internal working paper</title>
		<author>
			<persName><forename type="first">W</forename><surname>Van Melle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974-12">December 1974</date>
			<pubPlace>Stanford, California</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Reasoning about programs</title>
		<author>
			<persName><forename type="first">R</forename><surname>Waldinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">N</forename><surname>Levitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="235" to="316" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Experience with Bayes&apos; theorem for computer diagnosis of congenital heart disease</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">R</forename><surname>Warner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">F</forename><surname>Toronto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G</forename><surname>Veasy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. N.Y. Acad. Sci</title>
		<imprint>
			<biblScope unit="volume">115</biblScope>
			<biblScope unit="page" from="558" to="567" />
			<date type="published" when="1964">1964</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">HELP--a program for medical decision-making</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">R</forename><surname>Warner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Oimstead</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Rutherford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Biomed. ICes. $</title>
		<imprint>
			<biblScope unit="page" from="65" to="74" />
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Generalization learning techniques for automating the learning of heuristics</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Waterman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence I</title>
		<imprint>
			<biblScope unit="page" from="121" to="170" />
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Understanding natural language</title>
		<author>
			<persName><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cognitive Psychology</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Frame representations and the procedural/declarative controversy</title>
		<author>
			<persName><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Representation and Underatandlng</title>
		<editor>
			<persName><forename type="first">Collins</forename><surname>Bobrow</surname></persName>
		</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Received December 1975; revised version received March</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Zobrist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">R</forename><surname>Carlson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">228</biblScope>
			<biblScope unit="page" from="15" to="45" />
			<date type="published" when="1973">1973. 1976. 1977</date>
		</imprint>
	</monogr>
	<note>An advice-taking chess computer, ScL Am</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
