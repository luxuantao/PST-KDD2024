<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Downlink Scheduling in CDMA Data Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Niranjan</forename><surname>Joshi</surname></persName>
							<email>nsjoshi@bell-labs.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">wireless Technology Laboratory</orgName>
								<orgName type="institution">Lucent Technologies</orgName>
								<address>
									<settlement>Whippany</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Srinivas</forename><forename type="middle">R</forename><surname>Kadaba</surname></persName>
							<email>skadaba@bell-labs.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">wireless Technology Laboratory</orgName>
								<orgName type="institution">Lucent Technologies</orgName>
								<address>
									<settlement>Whippany</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sarvar</forename><surname>Patel</surname></persName>
							<email>sarvar@bell-labs.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">wireless Technology Laboratory</orgName>
								<orgName type="institution">Lucent Technologies</orgName>
								<address>
									<settlement>Whippany</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ganapathy</forename><forename type="middle">S</forename><surname>Sundaram</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">wireless Technology Laboratory</orgName>
								<orgName type="institution">Lucent Technologies</orgName>
								<address>
									<settlement>Whippany</settlement>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Downlink Scheduling in CDMA Data Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D3ED7F6C4C9478DBC124AD96A23B0E3E</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Packet data is expected to dominate third generation wireless networks, unlike current generation voice networks. This opens up new and interesting problems. Physical and link layer issues have been studied extensively, while resource allocation and scheduling issues have not been addressed satisfactorily.</p><p>In this work, we address resource management on the downlink of CDMA packet data networks. Network performance (for example, capacity) has been addressed, but user centric performance has not received much attention. Recently, various non-traditional scheduling schemes based on new metrics have been proposed, and target user performance (mostly without reference to wireless). We adapt these metrics to the CDMA context, and establish some new results for the ofitine scheduling problem. In addition, we modify a large class of online algorithms to work in our setup and conduct a wide range of experiments. Based on detailed simulations, we infer that:</p><p>• Algorithms which exploit "request sizes" seem to outperform those that do not. Among these, algorithms that also exploit channel conditions provide significantly higher network throughput.</p><p>• Depending on continuous or discretized bandwidth conditions, either pure time multiplexing or a combination of time and code multiplexing strikes an excellent balance between user satisfaction and network performance.</p><p>• Discrete bandwidth conditions can lead to degraded user level performance without much impact on network performance. We argue that the discretization needs to be fine tuned to address this shortcoming.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Packet data services over wireless communication links are a reality, and have been standardized in third generation (3G) wireless communication systems. Sprint PCS offers access to the web over wireless phones, Metricom offers wireless data service, and Palm Computing now markets a wireless internet access capable device, the Palm VII-W. Importantly, the major and most widely deployed 3G systems are expected to be based on code division multiple access (CDMA) <ref type="bibr" target="#b26">[27]</ref>, with the time division multiple access (TDMA) based European GSM system evolving towards UMTS <ref type="bibr">[1]</ref>. The transmission of packet data over 3G cellular systems requires new algorithms and protocols. In particular, the issues of resource allocation and quality of service (QoS) management for wireless packet data on CDMA are both interesting and important.</p><p>Packet data traffic is highly bursty in nature and error rate requirements are far more stringent compared to voice, which dominates 2G systems. Unlike voice, which exhibits fairly regular flow characteristics, tolerance to errors, and strict delay requirements, packet data is more tolerant to delay, enabling the use of retransmission to recover erroneous frames. Further, the volume of information to be transported in a packet data system (for example, internet access) can be much larger than on voice networks. Protocols related to the physical and link layers have been standardized, but issues of resource management have not been worked out. All this calls for a fresh approach to resource allocation.</p><p>In this paper we address the problem of power and rate scheduling in the context of data transmission over CDMA downlinks. Succinctly put, we examine algorithms that decide which user(s)'s packets go out on the air, when, for how long, and at what rate. Such a study is not entirely new to wireless, but our point of departure is the exploitation of "request size" information as well as rate information to perform scheduling in CDMA downlinks. We experiment with appropriate algorithms and study a broad range of performance measures which reflect both network performance and user level satisfaction. R e l a t e d w o r k o n s c h e d u l i n g . The focus of research in resource allocation for CDMA has been on the uplink. This is due to the perception that the uplink, due to the potentially large number of users competing for simultaneous channel use, is the bottleneck. This usually involves some sort of demand assignment at the base station, with information from the multiple mobiles competing for uplink bandwidth. Some recent work includes <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b21">22]</ref> and references therein. On the other hand, there has been relatively little activity in resource allocation and scheduling on the downlink. This is due to the predominance of voice traffic in current generation networks. In 3G systems, data traffic for internet applications is expected to dominate, which would make the downlink intensive compared to the uplink. Simple algorithms for interference management at the intercell level have been proposed in <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b28">29]</ref>. A fair scheduling approach, which treats the resource allocation problem on general wireless networks (with no reference to CDMA) as one of fair packet scheduling, was considered in <ref type="bibr" target="#b23">[24]</ref>. However, no distinction is made between uplink and downlink data flows. Rate processor sharing was proposed in <ref type="bibr" target="#b10">[11]</ref> for scheduling downlink transmissions, followed by further work <ref type="bibr" target="#b13">[14]</ref>. In a different regime, job-based scheduling has been considered in <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b15">16]</ref> without reference to specific wireless systems.</p><p>O u t l i n e o f t h e p a p e r a n d c o n t r i b u t i o n s . We describe the CDMA downlink system model in Section 2. This is done to identify the key characteristics of CDMA which are useful in resource allocation. We discuss issues related to physical and upper layer protocols to establish that request size information can be extracted in wireless downlinks. Most of the information related to upper layers can be found in <ref type="bibr" target="#b22">[23]</ref>, but the details axe included here to make the exposition self contained. Our contributions include the following.</p><p>In Section 3, we identify metrics pertaining to user level performance; one metric called flow (or delay or response time) is traditional, while another, called the stretch (or normalized delay or slowdown), is relatively new. The latter explicitly uses the size of the request along with the response time. We present some old and new results related to the optimality of these metrics. The new results pertain to scheduling to optimize stretch in a CDMA context. One provides an algorithm to optimize stretch when user baadwidths are continuous, and another is an intractability result under discretized user bandwidth conditions. We then detail algorithms based on both metrics, which address rate allocation and scheduling in CDMA.</p><p>In Section 4, we experiment with several online algorithms. We conduct extensive simulations using real data from a proxy server. Based on our results, we identify a set of algorithms which are good candidates for the CDMA scheduling problem. Specifically, we infer that:</p><p>-Algorithms which exploit request sizes along with channel conditions, and give priorities to requests that can be processed faster, demonstrate significant performance advantages. With such algorithms, ignoring rate information results in a degradation in network throughput. -If bandwidth is not discretized, then time multiplexing data users in the downlink of a CD-MA system results in markedly better "across the board" performance compared to conventional code multiplexing.</p><p>-If bandwidth is discretized, then a combination of time and code multiplexing, with a dominant time multiplexing component, provides better performance overall.</p><p>-The granularity of the discretization may have an impact on user centric measures, without much decrease in network performance. We argue that this can be tuned to largely offset any negative impact.</p><p>We conclude the paper in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">C D M A D O W N L I N K M O D E L</head><p>In this section, we discuss the CDMA downlink model including physical layer and transport layer issues. This is done to elaborate the salient features of the CDMA scheduling problem. These include: (i) for a given resource (power in the case of CDMA), users in different locations in the cell experience different bandwidths, and (ii) every user's data flows through and from a common anchor point (e.g., a base station or switch), as opposed to the traditional router scenario which is distributed. We use the terms "user", "job", and "mobile" interchangeably.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Physical layer resources: power and rate</head><p>In the physical layer, the primary resources of interest are power and rate. The relation between them provides some insight into the CDMA downlink resource management problem. A simplified, but broadly applicable, relationship can be derived from physical layer considerations. At any location with a given signal to interference plus noise ratio (SINR), the fraction ¢ of base station (BS) power required to support a data rate R is given by <ref type="bibr" target="#b2">[3]</ref>,</p><p>, 0&lt;_6&lt;1</p><p>where Eb is the received energy per data bit, and PI is the total received interference power. The SINI:t (also referred to as geometry in CDMA parlance) depends on the channel conditions, which include location-dependent quasi-static effects such as path loss, shadowing, and interference, and time varying effects such as fading.</p><p>For a given rate, the quantity Eb/P1 depends on the desired physical layer frame error rate (FER). In wireless systems, it is desirable to maintain the F E R below a certain threshold. For a given FER, in order to maintain the rate R over a short period, ¢ is varied in correspondence with SINR -this is power control. On the other hand, for a fixed ¢, varying R in accordance with SINR is rate control. For example, the rate (or throughput) that can be supported with all power assigned to the user (¢ = 1) is denoted by R ~ a~, and is the maximum achievable. A combination of power control and rate control can also be performed by first assigning a rate and then maintaining it over the period via power control. We seek to exploit the tradeoff between power control and rate control in our formulation of the resource allocation problem.</p><p>R e m a r k . We assume that channel conditions, and hence R ~ ax, remain constant over the entire transmission to a user. This is consistent with a quasi-static mobile environment where power control counteracts the time varying effect of slow fading. Also, users closer to the BS are likely to have higher SINR than the farther users. In the wireless domain, a BS provides a passage to all requests from and to the mobile. We use the term BS to mean an anchor point for all mobiles in a cell; this may be a base station or a switching center, or some sort of wireless hub. Therefore, on the downlink, we model the BS as a proxy server as opposed to a general purpose router.</p><p>Quite recently it has been shown that with knowledge of the "request size", some nontraditional service ordering policies show significant performance improvements <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b15">16]</ref>.</p><p>Whether the BS can exploit any "size" information to perform efficient scheduling depends on the availability of such information. In the following, we argue that such job size information can be extracted on wireless downlinks. This is made possible by some recently proposed solutions that alleviate TCP's performance problems over error prone wireless links. Almost all the popular solutions are based on providing some isolation between the wired and wireless links. One way to achieve this is by splitting the end-to-end connection <ref type="bibr" target="#b1">[2]</ref> at the BS, resulting in separate physical connections.</p><p>Another way is to intercept the connection at the BS and provide logically separate connections, as in SNOOP <ref type="bibr" target="#b8">[9]</ref> and W T C P <ref type="bibr" target="#b11">[12]</ref>. Alternatively, <ref type="bibr" target="#b17">[18]</ref> deploy performance enhancing proxies and/or custom protocols over the wireless link.</p><p>In general, a proxy uses a split connection implementation <ref type="bibr" target="#b7">[8,</ref><ref type="bibr">6]</ref> in order to address a mismatch in TCP performance over the wired and wireless links. Due to the isolation, all these solutions involve store and forward mechanisms, and provide varying levels of information on request sizes. For example, consider an integrated proxy and split connection between a web server and a mobile. Transmissions from the web server can be received completely and stored at the split point before being forwarded over the wireless link. This provides significant information about job sizes. Now consider a typical protocol stack in today's wireless systems (Fig. <ref type="figure">1</ref>). In such systems, the MAC layer which is responsible for the resource assignment and scheduling, can estimate a user's "job" size based on data queued up in the RLP layer.</p><p>To summarize, in recent times, protocol solutions to wireless packet data can provide access to job level information. In this paper we consider the job scheduling paradigm with a view towards evaluating the attendant benefits in the CD-MA scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">METRICS AND ALGORITHMS</head><p>In this section we discuss various metrics that are of interest in our scheduling problem. This is followed by some old and new theoretical results related to these metrics. We also outline a variety of online algorithms that are of relevance in this context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Notation.</head><p>A stream of jobs {Jx, J2,--" , JN } arrive at the BS, which can transmit at a maximum power level PBs.</p><p>For job Ji (i) the job size is [Ji[ bits, (ii) the arrival time ai is the instant at which the first bit arrives at the BS, (iii) the completion time c~ is the instant at which the last bit of the job is transmitted by the BS (different schedules result in different completion times), and (iv) the maximum data rate is R~ ''''~=, which depends on the channel conditions (recall from Section 2.1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Metrics and theoretical results</head><p>For each job, the delay (also known as response time or flow time) is fi = c/ -ai. The delay includes both the actual processing time and the queuing delay. A variant of the delay is the stretch, which measures the factor by which the job is slowed down relative to its delay on an unloaded system. If Ji were the only job in the system, all power would be assigned to it, and would be served at rate //~a= upon arrival and completed without interruption. Then, the corresponding delay tl = ]Ji [//{~a= is the minimum achievable -we call this the job time. Following ideas in <ref type="bibr" target="#b14">[15]</ref>, we define the stretch as</p><formula xml:id="formula_1">s, = ~ = = E ' (<label>2</label></formula><formula xml:id="formula_2">)</formula><p>where R~ is the achieved throughput. From (2), we see that the stretch of a job can be interpreted as normalized delay or normalized throughput. Four useful cost functions can be defined: max-flow = maxi fi, avg-flow = ~-~i fi, max-stretch = maxl si, and avg-streteh = ~-~ si. We now discuss various results related to these metrics.</p><p>THEOREM 1. <ref type="bibr" target="#b14">[15]</ref> Non-preemptive max-flow is minimized by the first in first out (FIFO) algorithm.</p><p>This algorithm is non-preemptive, meaning jobs are not interrupted. This results in small jobs suffering large delays if large jobs arrive earlier, and typically this also leads to a large average flow. On the other hand, minimizing avg-flow results in the converse. It is well known that: THEOREM 2. <ref type="bibr" target="#b6">[7]</ref> The shortest remaining processing time first (SRPT) strategy minimizes avg-flow.</p><p>The main drawback is that $RPT favors the smallest job and may starve larger jobs. It tends to disregard the arrival time of a job. The stretch metric explicitly captures both the arrival time and the job size. This may be a useful characteristic, particularly in situations where job sizes or demands are heterogeneous. We expect that wireless networks have such properties inherent due to the varied radio conditions. In addition, this metric as defined above also seems natural since it explicitly combines information from both the network layer (job sizes and arrival times) and the physical layer (air interface data rates). This motivates us to consider cost functions based on the stretch. The next theorem states that minimizing average stretch is a hard problem. THEOREM 3. <ref type="bibr" target="#b9">[10]</ref> There exists no on-line polynomial time algorithm that minimizes avg-stretch for every instance. But SRPT is O(1) competitive.</p><p>Next, we focus on minimizing offline max-stretch, in an attempt to bound the worst stretch of all jobs in the system. In the rest of the section we discuss some new results in two different situations. First, we discuss the continuum rate case -where the rates that can be alloted to any job belong to a continuous interval based on just power requirements. The proof of this result follows ideas in <ref type="bibr" target="#b22">[23]</ref>. In particular, an offiine algorithm to minimize max-stretch for a fixed number of multiple channels when the rate (across jobs) is equal, was presented in <ref type="bibr" target="#b22">[23]</ref>. We extend this result to hold for the case of differential maximum (and assigned) rates across jobs and allow varying number of jobs to be served at any instantboth of these are germane to any wireless system. We state our results in the context of CDMA. In addition, we allow the maximum power p~a= that can be allocated to Ji at any instant to be different from that of other jobs, and bounded only by Pns. This allows for priorities between jobs and the creation of different classes. For instance, Ji may have a higher priority compared to Jk leading to Pi max &gt; p~na=.</p><p>THEOREM 4. There exists a near optimal, o~ine, polynomial time algorithm which minimizes max-stretch under the assumption of continuum rates.</p><p>PROOF. The proof is constructive and provides an algorithm to minimize the max-stretch ot~ine. The number of jobs, their arrival times, sizes, and SINR's (or geometries) are known in advance. So also the maximum power allocated to any job, and consequently the corresponding max. rate. The algorithm proceeds in three steps. First we determine if a certain value of stretch is a feasible upper bound for all jobs. Next, using an iterative search, we converge on the rain-max-stretch of all jobs in the system to within any specified tolerance. Finally, we use the rain-max-stretch to determine a schedule.</p><p>Feasibility. Let S be any real number. In order to determine if there exists a schedule such that the stretch of any job is less than or equal to S, it is enough to check if every job completes before its deadline Di = S • ti + a~.</p><p>We proceed by making use of the MAXFLOW problem on directed graphs <ref type="bibr" target="#b3">[4]</ref> as follows. We create a graph which is an instance of the MAXFLOW problem, and solve it using the Goldberg-Tarjan algorithm <ref type="bibr" target="#b3">[4]</ref>. This algorithm runs in time polynomial in the number of vertices and edges in the graph. The feasibility is tested by checking if the maximum flow on the graph is equal to the total energy required to serve all the jobs.</p><p>Graph: Consider the set {az,a2,... ,aN,DI,D2,... ,Dlv} of arrival times and deadlines. Sort these instants of time in ascending order. Let I~ = (uj,vj) denote the jth interval between the jth and (j + 1) th instants in this set. Next, we construct a bi-partite graph of vertices and edges, as follows. Create a vertex for every job Ji in the system along the left column. Create a vertex for every interval Ij in the right column. If the arrival time ai &lt;_ uj and the deadline Di &gt; vj, then we create an edge between the i tu vertex in the left column and the jth vertex in the right column with capacity P["~= <ref type="bibr">(vj -uj)</ref>. This is the amount of energy that can be allocated to Ji in the interval Ij. Sozd and Sfeasibl~ until their difference is within the desired tolerance. This algorithm runs in polynomial time. We denote this stretch as Sopt.</p><p>Schedule. In order to compute the offline schedule, we repeat the graph creation process once again with stretch Sopt. This time, we pay attention to the solution of the MAXFLOW problem in detail by noting the flows along the various edges. Clearly, the flows from the source to the left hand vertices should correspond to P~a=.ti. Let the flow along the edge from Ji to Ij be Cij. Then we allot Cij/(vj -uj) units of power to Ji during the interval Ij. This determines the entire schedule. [] Remark. When Pi m~* = PBS Vi, then this theorem follows from results in <ref type="bibr" target="#b14">[15]</ref>. The feasibility test and schedule are both obtained using an EDF strategy.</p><p>Next we consider the discrete rate case. In this setup, we do not translate power into rate directly. Instead we are constrained to transmitting data using a rate that belongs to a predefined "discrete rate set." Now, given P~, the translation to R~ ~ proceeds as follows. First we translate the power directly into rate r~a=; this rate may not correspond to any rate in the rate set. So we choose the largest rate in the rate set not exceeding r~; let this rate be R~i. Now calculate the power corresponding to Rli, say Pti. Compute the difference between pm~ and Pli. Repeat the above procedure, using the left over power in each step, until there is not enough power left to assign. Let the corresponding rates be R2i .... , Rmi. Ten Ri = ~-]j Rji. Now each rate Rji corresponds to a specific code. So, under this model, any job can be served simultaneously using multiple codes. In addition, the scheduling instants are dictated by the frame boundaries. Let us denote the size of a frame by A. We call this setup as the discrete rate set case. Under this model, we prove the following hardness result which indicates the improbability of the existence of a polynomial time algorithm for minimizing max-stretch. THEOREM 5. Minimizing max-stretch for the discrete rate set case is an NP hard problem.</p><p>PROOF. The proof proceeds by making successive reductions and relating it to the Bin Packing Problem <ref type="bibr" target="#b18">[19]</ref>. Recall that, the Bin Packing Problem seeks an algorithm to partition a set of L numbers into k sets where the sum of all elements in each partition is less than or equal to a specified quantity b. It has been shown that this problem is NP hard. In this proof, we show that if there was an algorithm to minimize max-stretch for the discrete rate set case (for any set of rates, and any frame size) then that algorithm can be used to solve any instance of the bin packing problem.</p><p>Observe that it is enough to show that there is no polynomial time algorithm to test feasibility of a certain stretch value. Suppose there was a polynomial time algorithm (poly in number of jobs) to test feasibility for any discrete rate set and N jobs and any test stretch value S. Then this algorithm will also solve the instance when the rate set consists of exactly one rate R. In particular it will solve the instance when all jobs have the same arrival time and job time. Without loss of generality, we may assume ai ---0 and t~ = t for all jobs. Recall that the deadline for job Ji is Di = S.ti + al. Hence the deadlines of all jobs are S.t. Note that even though the rate set consists of only one element, R~ a~ need not be equal across jobs. Let p~ be the amount of power needed to support a rate of R for Ji. Hence the corresponding quantum of energy that is used to send one frame along one code, is piA. Let Mi be the number of such quanta needed to service Ji. Then overall, meeting every deadline amounts to packing the set of numbers consisting of the union of all these quanta (over all i) with the constraint that in any frame the total energy does not exceed PBs • A. Note that any instance of the Bin Packing Problem can be converted into such a set for suitable values of R, [J~[, and S. The result now follows from the intractability of this problem. []</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Online algorithms</head><p>In the online scenario, available information is limited to jobs that have arrived so fax. Hence, we suggest an online heuristic RMAX which applies to both continuum and discrete rate cases. Here onwards, we assume that Pi ma~ = PBS, and allow only one code per job in the discrete rate case. We consider two classes of algorithms: deadline-based (EDF) and processor sharing (PS), which are listed in Table 1. Not all algorithms are simulated in both continuum and discrete rate cases. Among the algorithms listed in the table, we only describe RMAX. The others are either self explanatory or the appropriate reference is indicated.</p><p>Motivated by results in <ref type="bibr" target="#b14">[15]</ref>, we use an earliest deadline first (EDF) strategy to design an online heuristic that attempts to minimize max-stretch. Since the optimal value of the max-stretch for all jobs so far is not available, we maintain an estimate, the max-stretch-so-far S, and adjust it dynamically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm RMAX</head><p>1. Assign deadlines Di = ,9 • ti + ai for queued jobs.</p><p>2. For continuum rates, execute job with the earliest deadline.</p><p>3. For discrete rates, sort the deadlines and allocate power in order of earliest deadline first using a greedy algorithm.</p><p>4. At a job completion, update the max-stretch-so-far to the maximum of the current value and the stretch of the completed job.</p><p>Variants of RMAX are possible wherein different estimates of the rain-max-stretch of all jobs so far are used. Some simple ones are discussed in <ref type="bibr" target="#b14">[15]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXPERIMENTAL RESULTS</head><p>Here, we present results of extensive simulations performed with real data from a proxy server.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Simulation environment</head><p>The simulation consists of three major components: (i) data traffic provided by the proxy server trace, (ii) the cellular system including gross propagation effects, which we simulate, and (iii) link level data which considers detailed air interface conditions, which we obtain from <ref type="bibr" target="#b24">[25]</ref>. Detailed descriptions of these components follow.</p><p>Data traffic. A recent report <ref type="bibr" target="#b12">[13]</ref> indicates that internet data traffic is largely a mix of web based traffic (HTTP and FTP), dominated by HTTP in particular. Such traffic is highly bursty in nature. Various analytic characterizations and models of internet data traffic exist in the literature. Mah <ref type="bibr" target="#b4">[5]</ref>, and Barford and Crovella <ref type="bibr" target="#b20">[21]</ref>, proposed HTTP simulators. But the drawback with this simulated approach is, one does risk the possibility of over dependence on certain parameters. In fact, Willinger and Paxson <ref type="bibr" target="#b27">[28]</ref> show that internet traffic patterns in general, and web traffic in particular, are very sensitive to modeling parameters. Also, in a wireless scenario, it seems natural to model the BS as a proxy server, as opposed to an isolated web server (recall arguments from Section 2.2). Therefore, we choose a proxy server log (trace) <ref type="bibr" target="#b19">[20]</ref> as the traffic source to our system.</p><p>The chosen trace is a 24 hour record of job sizes, timestamps, and destinations (IP addresses) of responses to HTTP re- record the instants at which the jobs arrived at the proxy. Table <ref type="table" target="#tab_2">2</ref> summarizes some of the key characteristics of the trace. Also, for a given file size, different user geometries would result in different job times. This requires that multiple SINR configurations be simulated in order to gain more insight into the performance of the scheduling algorithms. We present results for upto 50 different configurations of job SINR's.</p><p>Cellular system. A cluster of 19 hexagonal cells, with a BS at the center of each cell, forms our cellular system setup. The center cell is the one of interest, with the other 18 cells forming two tiers of interferers around it. Typically, two tiers are necessary and sufficient to generate significant interference to the users in the center cell. Since CDMA allows universal frequency reuse, it is reasonable to assume that all surrounding cells transmit at full power. Consequently, we only perform intracell scheduling in the center cell. User locations are uniformly distributed over the cluster area. A path loss exponent (q, = 4) and standard deviation (as = 8 dB) for the log-normal shadowing model gross propagation effects. Once a user is placed, the BS from which the strongest signal is received acts as the home BS to the user. The home BS can be different from the one to which the user is geographically closest. A job from the trace is assigned only if the user is connected to the center cell. This results in concentrating the traffic source in the center cell, while assuming that all interfering cells transmit at full power. This is equivalent to assuming that the interfering cells are always loaded with traffic. Such high loading presents a conservative interference scenario, due to which our results may be interpreted as lower bounds in a CDMA network. A user is assumed to be connected to the home BS throughout its sojourn. Switching between BS's (handoff) is not simulated.</p><p>Link level data. We assume that the SINR is instantaneously conveyed to the BS by the mobile. The BS translates the SINR to the corresponding maximum rate R7 'a= using a lookup table created from link level data in <ref type="bibr" target="#b24">[25]</ref>. The data provides the required power fraction ¢, as a function of SINR, to support a rate of 76.8 kbps at a frame error probability of 5% regardless of position in the cell. This was obtained by performing detailed CDMA air interface simulations in a slow Rayleigh fading environment (3 kmph vehicle speed) and included a power control algorithm. Since slow fading was already considered in the link level simulations, we do not simulate it at the system level. Further, the presence of power control in the link level simulations ensures that the user's SINR is more or less maintained throughout the sojourn. Therefore, in our simulations, the user location and channel conditions axe assumed to remain constant throughout the trial. For a given SINR, to obtain the corresponding ¢ for a rate other than 76.8 kbps, the numbers are scaled in proportion to the desired rate. This is an approximation and assumes that channel models, mobile speeds, frame error rates etc. are same for all rates. However, the approximation applies to all the algorithms. Though the physical channels are not error free, we do not simulate error recovery protocols. Consequently the throughputs that we obtain should be interpreted as upper bounds in the given conditions.</p><p>Performance measures and algorithms. We consider a wide range of performance measures (see Table <ref type="table" target="#tab_3">3</ref>) to evaluate the performance of various scheduling algorithms. They are intended to capture important attributes of both network and user centric performance. The choice of performance measures may not be exhaustive, but is representative of the wireless scenario. Given our choice of performance measures, we simulate algorithms which are optimal, or near-optimal, with respect to these measures. Table <ref type="table" target="#tab_1">1</ref> summarizes the algorithms we simulate. Our choice of ED-  <ref type="bibr" target="#b13">[14]</ref>. Another popular algorithm, RouRob (Round Robin), is equivalent to processor sharing in time. An important result to note (Lemma 3, <ref type="bibr" target="#b14">[15]</ref>) is that processor sharing turns out be very unfair: it can have f~(n) competitive ratio for max-stretch. In other words, the observed max-stretch for processor sharing algorithms can be far from optimal.</p><p>Experiments are performed with both continuum and discrete rate sets. Not all algorithms are simulated in both settings. The results are presented in detail in the following two sections. In addition to distributions of some of the key measures, we also provide statistics gathered over different configurations of job SINR's.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Scheduling with continuum rates</head><p>In this section we discuss the results of our simulation when the rate assigned to a job is taken from an interval determined purely by power and SINR. Further, time is a continuous variable without any restrictions on scheduling instants.</p><p>In essence, we do not impose constraints on bandwidth allocation and frame size granularity. This allows us to judge the relative performance of algorithms purely with respect to the chosen performance measures. In the EDF algorithms, the BS simply calculates a rate using the entire power PBs and grants it to the job with the earliest deadline. On the other hand, in processor sharing all jobs in queue are assigned some share of the base station transmit power, thus serving them simultaneously.</p><p>The simulation is event driven, where events are job arrivals or departures. A simulation realization stops at the end of a 200 minute time window.   Let us now compare algorithms with respect to the applicable performance measures chosen earlier. Referring to the distributions of individual job throughputs in Fig. <ref type="figure" target="#fig_2">2</ref>, we see that they are comparable for all the EDF algorithms except FIFO. However, this does not provide enough information regarding individual job satisfaction. Table <ref type="table" target="#tab_4">4</ref> separates the algorithms in this regard: RMAX, SRPT, and their rateindependent variants MAX and SRJF, are far superior to HRUF with respect to minimum job throughputs and re- sponse times. Further, close to 90% of the jobs achieve atleast 75% of their maximum throughput. On the other hand, for FIFO and HRUF, almost every job has a throughput less than 75% and 65% of their maximum throughput, respectively. Interestingly, using just job size information but no rate information, MAX and SRJF show very good overall job level performance. This is indicative of the advantages of using job size information.  jobs in the queue, on average, indicates superior queue control; the queue is efficiently managed and large buildups do not occur. This can potentially benefit buffer management at the BS. On the other hand, in the FIFO (HRUF) schemes, small jobs (farther jobs) tend to queue up behind large jobs (closer jobs), which results in starvation. This is evidenced by the total number of jobs completed in the 200 minute window: HRUF completes almost 6000 fewer jobs than R-MAX, SRPT, and variants. Many of these jobs do not even belong to the first 50,000 jobs in the trace (in order of their arrival), in keeping with the tendency of HRUF to unduely delay jobs with unfavorable SINR (likely the jobs farther from the BS). This is exemplified by the last column in Table 4: among the first 50,000 jobs, HRUF completes about 6000 fewer jobs compared to the other EDF algorithms. In effect, these jobs are blocked, while jobs which arrive much later (but have better SINR) get served. This serves to reinforce the observation that HRUF provides high network throughput and good average job throughput at the cost of significantly higher blocking.</p><p>With respect to max-stretch and avg-stretch, RMAX, MAX, $RPT, and SRJF show far superior performance than the other algorithms. This is expected since they are intended to work well with respect to these metrics. Comparison between RMAX and MAX, as well as between SRPT and SRJF demonstrates that, rate information can significantly improve the network performance. Although, our average job-centric numbers do not show any significant advantages for RMAX and SRPT (over MAX and SRJF respectively) they consistently performed better as evidenced in Figs. <ref type="figure">4</ref> and<ref type="figure" target="#fig_4">5</ref>. In addition, the maximum value of max-stretch for RMAX and SRPT is orders of magnitude lower than that for MAX and SRJF. This proves that rate information enhances scheduling performance when job size information is used. cept FIFO. In parallel, the avg-stretch and max-stretch are also significantly higher. Note that WorkProp and BitProp perform the worst with respect to the quantities measured, since they give higher preference to larger jobs. This indicates, that prioritizing jobs with smaller "sizes" (explicitly in the case of SRPT and SRJF, and implicitly in the case of RMAX and MAX) leads to distinct performance advantages. This inference is further emphasized by the observation that UPS and WorkProc do not perform as badly as WorkProp and</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>BitProp.</head><p>In general, assigning discrete rates would further aggravate the problem related to processor sharing algorithms. Hence, jobs may not get any rates (which in turn may lead to inefficiencies in power utilization). Moreover it may not be possible to accomodate all jobs simultaneously. One method of applying a processor sharing scheme, in a discrete rate setup, is to provide an equal predetermined rate from the rate set to all jobs (when they receive data). But the problem is, this EqRate algorithm (for example, in an attempt to guarantee 153.6 kbps to the jobs), ends up wasting power. The reason is that some times the available power at the base station is insufficient to provide this predetermined rate (of 153.6 kbps in our example) to any other job and hence will remain unutilized. As a result, all the performance measures suffer drastically (as evidenced in Table <ref type="table" target="#tab_4">4</ref>). The processor sharing algorithms are therefore not considered in the later sections.</p><p>I n f e r e n c e s . Based on the results presented and the intuition behind processor sharing algorithms as well as EDF algorithms, we note the following.</p><p>• Time multiplexing jobs in the downlink has distinct advantages from the perspective of the scheduling metrics that we have observed. Processor sharing algorithms which attempt to "fair share" the BS transmit power only end up choking the jobs uniformly and al-most all the performance metrics observed suffer greatly. In other words, multiplexing jobs in time space is better than multiplexing jobs in code space in CD-MA downlinks. This is not unexpected considering the sub-optimality of processor sharing with respect to max-stretch (Lemma 3, <ref type="bibr" target="#b14">[15]</ref>).</p><p>EDF algorithms which exploit job size information, and which give preference to smaller jobs (either explicitly or implicitly) outperform all other algorithms. Figs. 2 and 3 further corroborate this observation.</p><p>Capturing job size information is very desirable for improving job level performance, but the absence of rate information results in lower network throughput.</p><p>Algorithms which capture rate information in addition to job size information, via the stretch metric, seem to strike an excellent balance between network throughput and individual job performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Scheduling with discrete rates</head><p>A continuum rate set is difficult to achieve in practice. However, it allows us to judge the performance of various algorithms in a relatively unconstrained setting, emphasizing their principal characteristics rather than their reaction to practical constraints. Based on the results in the previous section, we identified EDF algorithms as the best performers. To reiterate, processor sharing algorithms are more likely to suffer drastically when the practicalities of a discrete rate set and scheduling instants are imposed. In this section, we seek to examine the performance of the chosen EDF algorithms under such constraints, and compare them with HRUF and RouRob. We choose RouRob since it is equivalent to processor sharing in the time domain. We only simulate uniform round robin and do not consider any weighted round robin schemes.</p><p>Unlike the unquantized (in time and rate), and event-driven, simulation in the continuum rate case, the following simulation uses 20 ms frames (as in cdma2000) for transmitting data, with the frame boundaries also forming scheduling instants. We assign only one code per user, and hence the maximum rate is an element of the discrete rate set. The discrete rate set that we employ is (9. Assigning rates to users from a discrete rate set can lead to residual transmit power, which can be utilized by greedily filling the power bin. We therefore schedule jobs using an EDF algorithm for computing schedule priorities, followed by greedy power allocation. It is important to note that this combination is only an online heuristic, which may be </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>629.82</head><p>Statistics for v a r i o u s s c h e d u l i n g a l g o r i t h m s : d i s c r e t e r a  decidedly sub-optimal for R M A X and SRPT. Greedy allocation reduces power wastage, which results in the network throughput being comparable to that in the continuum rate case. Indeed, the network throughputs for all the EDF algorithms in Table <ref type="table">5</ref> are commensurate with those in Table <ref type="table" target="#tab_4">4</ref>.</p><p>Regarding the user related performance measures, two important observations may be made.</p><p>1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>The EDF algorithms which use job size information outperform the other two algorithms. This observation is consistent with earlier results. In addition, the relative performance between the EDF algorithms remains unchanged when compared to the simulations of the previous section.</p><p>As expected, the individual numbers for all the user level performance measures, suffer when compared to the continuum rate case. Specifically, the average user throughput numbers axe lower. This is due to the fact that the maximum rate of any user is constrained by the discrete rate set, while the actual rate that can be supported by the available power can be much higher. However, if multiple codes can be assigned to each job, then the maximum rates can be much higher, leading to improved job level performance.</p><p>In addition, as expected from the results in the previous section, RouRob performs very poorly when compared to the other algorithms. More results on the performance of all the algorithms (for a chosen realization) with r e s p e c t t o throughput and stretch are presented in Figs. <ref type="figure">6</ref> and<ref type="figure">7</ref>. Fig. <ref type="figure" target="#fig_6">8</ref> outlines the differences between RMAX, SRPT and their rate free variants MAX, SRJF, as a function of the realization. In some realizations, the max-stretch for RMAX is noticed to be higher than that of SRPT. This is due to the likely suboptimality of the combination of RMAX and greedy power allocation. Moreover, the updates to the working value of stretch are restricted to the 20 ms frame boundaries, and axe not done at shorter intervals. Over the course of our experiments, we have observed that updating the working value of stretch more frequently tends to improve the performance of both R M A X and M A X .</p><p>I n f e r e n c e s . Based on the results presented we note the following:</p><p>* The use of a greedy power utilization scheme in every frame ensures that the power wastage is reduced. This is reflected in the fact that the average aggregate throughputs for the various algorithms are comparable to their corresponding numbers in the continuum case. • EDF algorithms based on job sizes continue to perform well across the board. On the other hand, RouRob performs poorly with regard to user level metrics, even though its network throughput is commensurate with that of the EDF algorithms. This reinforces our earlier observation that EDF algorithms based on job size information are superior to processor sharing schemes.</p><p>• Discretizing user rates will lead to reduced individual job throughputs compared to the continuum rate case. The loss in throughput is due to the granularity of the rate set and the range of rates allowed. Further losses may ensue if greedy power allocation is not used even though the granularity of the rate set allows it.</p><p>• Individual response times axe higher compared to the continuum rate case. In addition to the restrictions in the rate set, this is also due to the fact pre-emptions do not take place as often as they need to since the frame boundaries are fixed and time is no longer a continuum.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS</head><p>This work studies the problem of downlink scheduling in the context of CDMA packet data networks. We initiate the use of request size and rate information to balance the (often conflicting) needs of network efficiency and user satisfaction. We show that for minimizing max-stretch ofliine, near optimal algorithms exist for the continuum rate case and may not exist for the discrete rate case. The online heuristics are simple in structure and demonstrate excellent performance in comparison to traditional resource allocation schemes such as processor sharing. Specifically, our experimental results indicate that (i) using a combination of request sizes and air interface data rates is desirable, (ii) time multiplexing users in continuous bandwidth conditions is superior to code multiplexing, and (iii) when user rates are discretized, a combination of time and code multiplexing with a dominant time muliplexing component, results in broadly satisfactory performance with various measures.</p><p>Particularly, EDF schemes based on the stretch and flow metrics, such as RMAX and SRPT, strike an excellent balance between network and user throughputs. We observe that the user level performance of these rate-dependent algorithms and their rate-independent variants is comparable, but network performance is superior with the rate-dependent algorithms. On the other hand, based on the broadly applicable performance measures we study, we are unable to make a clear distinction between RMAX and SRPT.</p><p>The EDF algorithms that are the best performers show expected degradation in user-centric measures, under discrete rate conditions. This is due to two broad reasons: (i) the rate set we chose was small and quite coarse, thereby restricting the maximum rates assignable to mobiles, and (ii) the frame sizes, which dictate the scheduling instants, were "large". Note that the greedy power allocation algorithm we discuss prevents wastage of power, and hence does not degrade network throughput (in all algorithms).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>2. 2 Figure 1 :</head><label>21</label><figDesc>Figure 1: A general protocol stack: the dotted boxes in the BS indicate additions required if the end-toend T C P connection is split.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>O b s e</head><label></label><figDesc>r v a t i o n s . The numbers in bold indicate the best performance along the columns in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>F i g u r e 2 :</head><label>2</label><figDesc>C D F of job t h r o u g h p u t for c o n t i n u u m r a t e s ( s i n g l e r e a l i z a t i o n ) .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>Figure 3: CDF of job stretch for continuum rates (single realization).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: C o m p a r i s o n of m a x stretch for c o n t i n u u m rates (across realizations).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Figure 6: CDF of job throughput (discrete rates)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>,F i g u r e 8 :</head><label>8</label><figDesc>I , "~ i .'.'x , ,' "_,"-. .~. " A v g . a n d m a x . s t r e t c h vs r e a l i z a t i o n s for d i s c r e t e rates</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>In addition to this bipartite graph we create a source vertex and sink vertex. From the source vertex, create edges to every vertex in the left column with capacities P[a==.ti. This is the amount of energy needed to serve job J~. From the jth vertex in the right column, create an edge with capacity Pss(vjuj). This is the amount of energy available in the system in interval Ij. Compute the maximum flow in this graph. It is easily observed that S is feasible (or equivalently all deadlines are met) if and only if the maximum flow in the graph is equal 1~. ma= .~. to ~i -= ~. Since the maximum flow algorithm runs in polynomial time, the feasibiliy of S can be determined in polynomial time. The algorithm to compute the rain-max-stretch, to arbitrary precision, works as follows. Let St~8~ denote the test value of stretch. Begin with St~t = 1. If the feasibility test on St~t is negative, keep doubling St~st until a feasible value is reached. Denote this value by Syeasibte; the recently tested (infeasible) value is now Sozd = Syeaslble/2. Now, perform a binary search between</figDesc><table /><note><p><p>Test:</p>Computing rain-max-stretch.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>EDF and Processor Sharing Algorithms</figDesc><table><row><cell>RMAX</cell><cell></cell></row><row><cell>MAX</cell><cell></cell></row><row><cell></cell><cell>Shortest Remaining Processing time First</cell></row><row><cell>SRJF</cell><cell>Shortest Remaining Job (in Bytes) First; an equal unit rate is used to compute processing times</cell></row><row><cell>FIFO</cell><cell>First In First Out</cell></row><row><cell>HRUF</cell><cell>Highest Rate User First -job with highest R ma= (or highest SINR) is served first</cell></row><row><cell>BitProp</cell><cell>Bit Proportional -the power assigned to a job is proportional to the job size in bits (or bytes)</cell></row><row><cell>WorkProp</cell><cell>Work Proportional -the power assigned to a job is proportional to the energy (P.~a= × -Jn~)</cell></row><row><cell>WorkProc</cell><cell>Work Processor Sharing -the power assigned to each job is proportional to the energy per bit (~ ~a-~)</cell></row><row><cell>UPS'</cell><cell>Uniform Processor Sharing -power is equally shared among all jobs</cell></row><row><cell>RouRob</cell><cell>Round Robin -serve jobs in cyclical order a frame at a time</cell></row><row><cell>EqRate</cell><cell>E(iual Rate -allocate power to support 153.6 kbps regardless of position in cell</cell></row><row><cell></cell><cell>Inter-arrival time (ms)</cell></row></table><note><p><p><p>Based on Max Stretch so far (see below) Algorithm from</p><ref type="bibr" target="#b14">[15]</ref></p>; an equal unit rate is used in computing deadlines SRPT</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Trace Statistics</figDesc><table><row><cell></cell><cell></cell><cell>Job arrivais/sec</cell><cell cols="2">Data arrivai rate (bytes/sec) Job size (bytes)</cell></row><row><cell>Mean</cell><cell>233</cell><cell>4.3</cell><cell>93631</cell><cell>14197</cell></row><row><cell>Median</cell><cell>128</cell><cell></cell><cell>14760</cell><cell>1945</cell></row><row><cell>Max</cell><cell>4612</cell><cell>25</cell><cell>50899675</cell><cell>54319947</cell></row></table><note><p>quests. The job sizes (in bytes) indicate the sizes of HTM-L/FTP files requested. The timestamps (in milliseconds)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3</head><label>3</label><figDesc>explained as follows. RMAX and MAX are online heuristics for minimizing max-stretch when rate information is and is not available, respectively. SRPT minimizes avg-flow. SRJF is its rate-independent variant. FIFO is optimal for minimizing non-preemptive max-flow, while HRUF maximizes the instantaneous system throughput. Processor sharing is natural to CDMA, and is therefore worthy of consideration. Voice transmission in CDMA at 9.6 kbps is a classic example of EqRate. The other flavors of processor sharing were chosen from</figDesc><table><row><cell></cell><cell>: Various p e r f o r m a n c e m e a s u r e s</cell></row><row><cell>Avg. Agg. Thru</cell><cell>Average Aggregate Throughput of the system (kbps)</cell></row><row><cell>Avg. Str</cell><cell>Average of job stretches</cell></row><row><cell>Max. Str</cell><cell>Maximum of job stretches</cell></row><row><cell>Min. Job. Thru</cell><cell>Minimum of job throughputs (kbps)</cell></row><row><cell>Avg. Job. Thru</cell><cell>Average of job throughputs (kbps)</cell></row><row><cell>Avg. Jobs in queue</cell><cell>Average jobs present in the system at any instant (averaged over time)</cell></row><row><cell>Avg. Resp. Time</cell><cell>Average response time of job (seconds)</cell></row><row><cell>Avg. Unsat (x %)</cell><cell>Average number of jobs which achieve less than x% of their maximum rate Rma=; equivalent</cell></row><row><cell></cell><cell>to average number of jobs whose stretch is greater than 1/x</cell></row><row><cell>Jobs Complete</cell><cell>Number of completed jobs in a given time window</cell></row><row><cell>Jobs Complete &lt; N</cell><cell>Number of completed jobs among the first N jobs</cell></row><row><cell>F algorithms is</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4</head><label>4</label><figDesc>Expectedly, the larger number corresponds to HRUF, which gives preference to closer jobs and boosts the network throughput. But this amounts to restricting the coverage, since jobs with unfavorable SINR would tend to experience large delays and may eventually drop the connection.</figDesc><table><row><cell>0.9</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>........</cell><cell>= .........</cell><cell>-</cell></row><row><cell>0</cell><cell>.</cell><cell>.</cell><cell>.</cell><cell>.</cell><cell>.</cell><cell>.</cell><cell>8</cell><cell>~-</cell><cell>--RMAX</cell></row></table><note><p>. The average aggregate throughput, presented in the first column of the table, varies between 420 kbps and 630 kbps.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 :</head><label>4</label><figDesc>The low number of Statistics for various scheduling</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">algorithms : continuum rates</cell></row><row><cell cols="3">Algorithm</cell><cell>Avg.</cell><cell>Avg.</cell><cell>Max.</cell><cell>Min.</cell><cell>Avg.</cell><cell>Avg.</cell><cell>Avg.</cell><cell>Avg.</cell><cell>Total.</cell><cell>Jobs.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Agg.</cell><cell>Str</cell><cell>Str</cell><cell>Job.</cell><cell>Job.</cell><cell cols="2">Jobs in Resp.</cell><cell>Unsat</cell><cell>Jobs.</cell><cell>Comp.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Thru</cell><cell></cell><cell></cell><cell>Thru</cell><cell>Thru</cell><cell>queue</cell><cell>Time</cell><cell>(75%)</cell><cell>Comp.</cell><cell>&lt; 50000</cell></row><row><cell cols="2">RMAX</cell><cell></cell><cell>554.38</cell><cell>1.35</cell><cell>58.1</cell><cell>0.81</cell><cell>1.67e3</cell><cell>25.8</cell><cell>2.51</cell><cell>11.91</cell><cell>51468</cell><cell>49954</cell></row><row><cell>MAX</cell><cell></cell><cell></cell><cell>427.58</cell><cell>1.73</cell><cell>4.8e3</cell><cell>3.86</cell><cell>1.5e3</cell><cell>36.93</cell><cell>1.47</cell><cell>13.99</cell><cell>51444</cell><cell>49925</cell></row><row><cell>SRPT</cell><cell></cell><cell></cell><cell>573.1</cell><cell>1.13</cell><cell>71.77</cell><cell>2.15</cell><cell>1.63e3</cell><cell>20.85</cell><cell>1.04</cell><cell>12.44</cell><cell>51481</cell><cell>49961</cell></row><row><cell>SRJF</cell><cell></cell><cell></cell><cell>425.07</cell><cell>2.18</cell><cell>4.9e3</cell><cell>3.79</cell><cell>1.4e3</cell><cell>36.85</cell><cell>1.59</cell><cell>17.84</cell><cell>51445</cell><cell>49926</cell></row><row><cell>FIFO</cell><cell></cell><cell></cell><cell>420.66</cell><cell>6.9e5</cell><cell>9.7e7</cell><cell>9e-5</cell><cell>2.37</cell><cell>1.08e4</cell><cell>2.6e3</cell><cell>99.87</cell><cell>29624</cell><cell>29624</cell></row><row><cell>HRUF</cell><cell></cell><cell></cell><cell>634,1</cell><cell>3.8e3</cell><cell>1.2e6</cell><cell>le-4</cell><cell>1.7e3</cell><cell>2.88e3</cell><cell>9.6e2</cell><cell>34.3</cell><cell>45125</cell><cell>43888</cell></row><row><cell cols="2">WorkProp</cell><cell></cell><cell>434.65</cell><cell>3.5e5</cell><cell>4.4e7</cell><cell>8e-5</cell><cell>650.1</cell><cell>2.49e4</cell><cell>5.2e2</cell><cell>66.3</cell><cell>907</cell><cell>907</cell></row><row><cell cols="2">BitProp</cell><cell></cell><cell>557</cell><cell>1.9e6</cell><cell>4.3e7</cell><cell>6e-5</cell><cell>10.25</cell><cell>2.08e4</cell><cell>3.2e3</cell><cell>99.5</cell><cell>8327</cell><cell>8327</cell></row><row><cell>UPS</cell><cell></cell><cell></cell><cell>534.90</cell><cell>92.84</cell><cell>384.5</cell><cell>0.12</cell><cell>45.04</cell><cell>92.41</cell><cell>12.4</cell><cell>99.9</cell><cell>51305</cell><cell>49790</cell></row><row><cell cols="2">WorkProc</cell><cell></cell><cell>424.3</cell><cell>550.7</cell><cell>3.4e4</cell><cell>0.65</cell><cell>9.74</cell><cell>136.5</cell><cell>16.7</cell><cell>99.9</cell><cell>51183</cell><cell>49671</cell></row><row><cell cols="2">EqRate</cell><cell></cell><cell>515.5</cell><cell>1.7e5</cell><cell>3.6e7</cell><cell>le-4</cell><cell>16.55</cell><cell>6.39e4</cell><cell>1.2e3</cell><cell>99.9</cell><cell>35970</cell><cell>35970</cell></row><row><cell>0.+ J(-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">., ....... :</cell><cell>12 114 10 8 6 4</cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell># O0°O0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0</cell><cell>.</cell><cell></cell><cell>3</cell><cell>~</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell cols="2">ooo ogl°°°°°</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.1</cell><cell>oo '°</cell><cell cols="2">ooo °°</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="7">0 0 5 10 1,5 20 25 30 35 40 45 50 Job stre~h</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Processor sharing algorithms provide thinner data pipes (smaller rates) to all the jobs, due to which the stretch or individual job throughput takes a hit. For example, the average job throughput ranges between 9.74 kbps and 650.1 kbps which is orders of magnitude less than all EDF schemes, ex-</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Indirect TCP for Mobile Hosts</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bakre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Badrinath</surname></persName>
		</author>
		<author>
			<persName><surname>I-Tcp</surname></persName>
		</author>
		<idno>TR-314</idno>
	</analytic>
	<monogr>
		<title level="j">Dept. Comp. Sci., Rutgers Univ</title>
		<imprint>
			<biblScope unit="page">94</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">CDMA: Principles of @read Spectrum Communication</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Viterbi</surname></persName>
		</author>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<biblScope unit="page">95</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A New Approach to the Maximum Flow Problem</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Tarjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="page">88</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An Empirical Model of H T T P Network Traffic</title>
		<author>
			<persName><forename type="first">B</forename><surname>Mah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM<address><addrLine>Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-04">Apr. &apos;97</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A General Purpose Proxy Filtering Mechanism Applied to the Mobile Environment</title>
		<author>
			<persName><forename type="first">B</forename><surname>Zenel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Duchamp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MobiCom</title>
		<meeting>MobiCom<address><addrLine>Hungary</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">Sept. &apos;97</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Handbook of Algorithms and Theory of Computation, chapter Scheduling Algorithms</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wein</surname></persName>
		</author>
		<imprint>
			<publisher>CRC Press</publisher>
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">G</forename><surname>Montenegro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dawkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kojo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Magret</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vaidya</surname></persName>
		</author>
		<imprint>
			<date>May &apos;99</date>
		</imprint>
	</monogr>
	<note>Long Thin Networks. IETF Draft at h t t p : / / ~w . i e t f . org/</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Improving Reliable Transport and Handoff Performance in Cellular Wireless Networks</title>
		<author>
			<persName><forename type="first">Hari</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Srinivasan</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Randy</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
		<imprint>
			<date>Dec</date>
			<publisher>ACM Wireless Networks</publisher>
			<biblScope unit="page">95</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Scheduling to Minimize Average Stretch</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Gehrke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muthukrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rajaxaman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shaheen</surname></persName>
		</author>
		<idno>99-2</idno>
		<imprint>
			<biblScope unit="page">99</biblScope>
		</imprint>
		<respStmt>
			<orgName>DIMACS, Rutgers Univ</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Rate Processor Sharing: A Robust Technique for Scheduling Downlink Data Transmissions in CDMA Wireless</title>
		<author>
			<persName><forename type="first">K</forename><surname>Kumaxan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Whiting</surname></persName>
		</author>
		<idno>BL0112120-990809-17TM</idno>
		<imprint>
			<publisher>Bell Labs</publisher>
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">WTCP: An Efficient Transmission Control Protocol for Networks with Wireless Links</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ratnam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Matta</surname></persName>
		</author>
		<idno>NU-CCS-97-11</idno>
		<imprint>
			<date>July &apos;97</date>
		</imprint>
		<respStmt>
			<orgName>Northeastern Univ.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Wide-Area Internet Traffic Patterns and Characteristics</title>
		<author>
			<persName><forename type="first">K</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wilder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<date type="published" when="1997-11">Nov./Dec. &apos;97</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Data Rate Scheduling Algorithms and Capacity Estimates for CDMA Forward Link</title>
		<author>
			<persName><forename type="first">M</forename><surname>Andrews</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kumaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ramanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Stolyar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Whiting</surname></persName>
		</author>
		<idno>BL0112120-990922-32TM</idno>
		<imprint>
			<publisher>Bell Labs</publisher>
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Flow and Stretch Metrics for Scheduling Continuous Job Streams</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bender</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chakraborti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muthukrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IX Ann. ACM-SIAM Syrup. Discrete Algorithms</title>
		<meeting>IX Ann. ACM-SIAM Syrup. Discrete Algorithms<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-01">Jan. &apos;98</date>
			<biblScope unit="page" from="270" to="279" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Connection Scheduling in Web Servers</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E R</forename><surname>Crovella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Frangioso</surname></persName>
		</author>
		<author>
			<persName><surname>Harchol-Balter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. USENIX Syrup. lnternet Technologies and Systems</title>
		<meeting>USENIX Syrup. lnternet Technologies and Systems<address><addrLine>Boulder, CO</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-10">Oct. &apos;99</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">The Case for SRPT Scheduling in Web Servers</title>
		<author>
			<persName><forename type="first">M</forename><surname>Harchol-Balter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Murta</surname></persName>
		</author>
		<idno>MIT-LCS-TR-767</idno>
		<imprint>
			<date type="published" when="1998-10">Oct. &apos;98</date>
			<publisher>LCS, MIT</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Enhanced Services for World-Wide Web in Mobile WAN Environment</title>
		<author>
			<persName><forename type="first">M</forename><surname>Liljberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Helin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kojo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Raatikainen</surname></persName>
		</author>
		<idno>C-1996-28</idno>
	</analytic>
	<monogr>
		<title level="j">Dept. Comp. Sci., Univ. Helsinki</title>
		<imprint>
			<biblScope unit="page">96</biblScope>
			<pubPlace>Finland</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A guide to the Theory of NP-Completeness</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<publisher>W. H. Freeman and Co</publisher>
			<biblScope unit="page">79</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<ptr target="http://m~,ircache,nlanr" />
		<title level="m">NLANR</title>
		<imprint/>
	</monogr>
	<note>net</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Generating Representative Web Workloads for Network and Server Performance Evaluation</title>
		<author>
			<persName><forename type="first">P</forename><surname>Barford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMETRICS</title>
		<meeting>ACM SIGMETRICS</meeting>
		<imprint>
			<date>July &apos;98</date>
			<biblScope unit="page" from="151" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">High Data Rate Packet Communications for Cellular Networks using CDMA: Algorithms and Performance</title>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Sarath</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjiv</forename><surname>Nanda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE JSAC</title>
		<imprint>
			<biblScope unit="page">99</biblScope>
			<date>Mar</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Scheduling Data Delivery Over Multiple Channels</title>
		<author>
			<persName><forename type="first">S</forename><surname>Acharya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muthukrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sundaram</surname></persName>
		</author>
		<imprint>
			<publisher>Bell Labs</publisher>
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Fair Scheduling in Wireless Packet Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/A CM Trans. Networking</title>
		<imprint>
			<date>Aug</date>
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Forward Multi-Carrier Link Level Results: IMT-2000 A and B Models, Supplemental Channel</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lundby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TIA, TR~5.5.~ Standards</title>
		<imprint>
			<date>Mar</date>
			<biblScope unit="page">98</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Optimal Scheduling of CDMA Systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ramakrishna</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page">98</biblScope>
		</imprint>
		<respStmt>
			<orgName>WINLAB, Rutgers Univ</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Physical Layer Standard for cdma~O00 Spread Spectrum Systems, Sept</title>
		<idno>TIA/IS-2O00.2. TR45.5</idno>
		<imprint>
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Paxson</surname></persName>
		</author>
		<title level="m">Where Mathematics Meets the Internet. Notices of the AMS</title>
		<imprint>
			<date type="published" when="1998">Sept. &apos;98</date>
			<biblScope unit="page" from="961" to="970" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Integrating Power Control, Error Correction Coding, and Scheduling for a CDMA Downlink System</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Brodersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE JSAC</title>
		<imprint>
			<biblScope unit="page" from="978" to="989" />
			<date>June &apos;99</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
