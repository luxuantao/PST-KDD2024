<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Automatically Labeling Hierarchical Clusters</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Pucktada</forename><surname>Treeratpituk</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Language Technologies Institute School of Computer Science</orgName>
								<orgName type="institution">Carnegie Mellon University Pittsburgh</orgName>
								<address>
									<postCode>15213</postCode>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Jamie</forename><surname>Callan</surname></persName>
							<email>callan@cs.cmu.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Language Technologies Institute School of Computer Science</orgName>
								<orgName type="institution">Carnegie Mellon University Pittsburgh</orgName>
								<address>
									<postCode>15213</postCode>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Automatically Labeling Hierarchical Clusters</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">061BF1A191B0399981D7A633652845F8</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:11+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.3.1 [Information Storage and Retrieval]: Content Analysis and Indexing⎯Linguistic processing Algorithms</term>
					<term>Performance</term>
					<term>Experimentation Document hierarchy</term>
					<term>cluster labeling</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Government agencies must often quickly organize and analyze large amounts of textual information, for example comments received as part of notice and comment rulemaking. Hierarchical organization is popular because it represents information at different levels of detail and is convenient for interactive browsing. Good hierarchical clustering algorithms are available, but there are few good solutions for automatically labeling the nodes in a cluster hierarchy. This paper presents a simple algorithm that automatically assigns labels to hierarchical clusters. The algorithm evaluates candidate labels using information from the cluster, the parent cluster, and corpus statistics. A trainable threshold enables the algorithm to assign just a few high-quality labels to each cluster. Experiments with Open Directory Project (ODP) hierarchies indicate that the algorithm creates cluster labels that are similar to labels created by ODP editors.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Government agencies, like most modern organizations, must often quickly organize and analyze large amounts of textual information. Our research is motivated by notice and comment rulemaking, in which U.S. regulatory agencies are required to consider comments submitted by the general public <ref type="bibr" target="#b11">[11]</ref>; when an agency receives hundreds of thousands of unique comments and edited form letters during a short period of time, quickly organizing them and identifying the issues raised is a significant challenge. However, the problem of organizing large amounts of text for rapid analysis subsumes notice and comment rulemaking.</p><p>The U.S. National Archives and Records Administration (NARA) and other government agencies face similar problems. Search engines such as FirstGov 1 have the problem on a smaller scale -given a set of texts, how to quickly organize them and describe their contents.</p><p>Hierarchical organization is popular because it represents information at different levels of detail and is convenient for interactive browsing (e.g., Yahoo! [17], the Open Directory Project <ref type="bibr" target="#b13">[13]</ref>). At the top of the hierarchy, the collection is organized into a few general categories; as a person descends the hierarchy, she gets greater detail about increasingly specific categories. Typically each document cluster is assigned a descriptor that describes the documents it contains. One goal of hierarchical clustering is to improve the users' ability to browse the collection, so it is very important that the hierarchy has good cluster descriptors. These descriptors can be either category labels, as in Yahoo! Directories, or lists of topical terms.</p><p>There is considerable prior research on hierarchical clustering algorithms and their applications in information retrieval and data mining research. However, less attention has been paid to creating good cluster descriptors. Cluster descriptors created automatically often either fail to provide a comprehensive description of the cluster, or consist of lists of terms from which a person must infer a general description. This paper proposes a simple algorithm that automatically assigns concise labels to hierarchical clusters. The algorithm combines statistical features of the cluster, the parent cluster, and the corpus into a descriptive score. The algorithm is based on the hypothesis that by comparing the word distribution from different parts of the hierarchy, it should be possible to assign appropriate labels to each cluster in the hierarchy.</p><p>The rest of this paper is organized as follows. Section 2, describes the hierarchical clustering and hierarchical clustering labeling task. It also discusses the characteristic of a good label for hierarchical clusters. Section 3 presents previous research on cluster labeling and related tasks. Section 4, describes the proposed labeling algorithm. Section 5 presents experimental results. Section 6 summarizes our finding and offers suggestions about possible future improvements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">LABELING HIERARCHICAL CLUSTERS</head><p>Hierarchical clustering partitions a document collection into a small number of clusters, and each cluster is further partitioned into subclusters in a recursive manner. Hierarchical clusters can be constructed by agglomerative methods that start with each document in its own cluster and then repeatedly group similar clusters into broader clusters; or by divisive methods that start with all documents in one cluster and then repeatedly divide each cluster into more detailed subclusters.</p><p>In labeling hierarchical clusters, one assumes the existence of a hierarchy of document clusters. The task is to assign a good descriptor to each cluster node in the hierarchy. The most common cluster descriptors are either concise labels, or lists of terms and phrases. For example, a cluster of documents about natural language processing might be described by the label "natural language processing" or the list of terms "tag, text, linguist, lexicon, corpus, tagger, word, syntax, grammar." A list of terms is often less useful than a single category label, because it requires the user to infer the concept implied by the terms. However, a list of terms is the most common choice for labeling clusters automatically because it fails gracefully; a person can often infer the general description even when a few of the selected terms are poor choices.</p><p>Our goal is an algorithm that selects concise cluster labels that are similar to what a person might create manually. A good descriptor for a cluster should not only indicate the main concept of the cluster, but also differentiate the cluster from its siblings and its parent cluster. Consider a cluster of "neural network" documents under a broader "AI" cluster. The parent cluster "AI" may also have "machine learning" and "fuzzy logic" child clusters. In another context, a label "computer science" might be an acceptable descriptor for the "neural network" cluster. However, in the context of this hierarchy, "computer science" does not distinguish the "neural network" cluster from its siblings. The descriptors appropriate for a given set of documents will differ under different hierarchies.</p><p>We define the labeling task as follows: Given a cluster of documents in a cluster hierarchy, the goal is to produce appropriate category labels for the cluster. The algorithm is allowed to return a list of plausible labels, ranked by its confidence about how descriptive each label is; the list should be as short as possible. A ranked list of labels is a compromise between a single category label and a list of topical terms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">RELATED WORK</head><p>Although there has been much research in hierarchical clustering of documents, little focused on labeling the resulting clusters of documents <ref type="bibr" target="#b2">[2]</ref>[3][4][5] <ref type="bibr" target="#b10">[10]</ref>. Clustering algorithms can naively label their clusters with the most frequent words in the clusters <ref type="bibr" target="#b2">[2]</ref>. Those resulting labels tend to be general, and usually are not good discriminative descriptors. The algorithm may choose to represent its clusters of documents with the documents near each cluster's centroid. One example of algorithms that use this representation is Scatter/Gather <ref type="bibr" target="#b3">[3]</ref>, which represents a cluster with a list of documents near the cluster's centroid and a list of topical terms. The topical terms are the terms with the highest weights in the cluster centroid. In one report the algorithm showed approximately the top 10 topical terms to the users. In addition to the shortcomings, mentioned above, of using lists of terms as descriptors, this approach does not take into account the hierarchical structure of the cluster hierarchy. The resulting descriptor might be descriptive, but might not discriminate the cluster from its parent or sibling clusters.</p><p>There have been attempts to identify cluster labels from word distribution in the hierarchy. Popescul et al. <ref type="bibr" target="#b10">[10]</ref>, and Glover et al. <ref type="bibr" target="#b4">[4]</ref> proposed statistical methods in selecting cluster descriptors, based on the context of the surrounding clusters (parent cluster and sibling clusters). Popescul proposed to use the statistical test χ 2 to detect difference in word distribution across the hierarchy. At each cluster node in the hierarchy, starting from the root, the χ 2 test is used to detect a set of words that is equally likely to occur in any of the subclusters of the current node. Those words are considered to be non-descriptive terms for every subcluster of the current node, and thus are removed from every subcluster. After the χ 2 test is used to removed non-descriptive words from every cluster node, the algorithm labels each cluster with the list of the remaining words at that cluster node ranked by the word frequency. Glover et al. <ref type="bibr" target="#b4">[4]</ref> showed how a simple model based only on terms' document frequency statistic can be used to select parent, child and self descriptors for document clusters, especially for web pages. The label candidates were extracted from the web page's content, anchor texts and extended anchor texts. Anchor texts of a web page are the hyperlinked words that link to the web page. Extended anchor texts refer to the words that occur before and after the anchor texts including the anchor texts themselves. Labels were selected and ranked using document frequency and some preset cutoff values. In their experiment, they found that labels extracted from anchor texts and extended anchor texts provide better description than ones extracted from the page's content. This is because web pages often do not contain words that describe their categories. However, obtaining anchor texts and extended anchor texts is an expensive operation, and requires one to know the hyperlink structure of the World Wide Web. Furthermore, the hyperlink structure is generally not available in non-webpage document collection.</p><p>Another research area closely related to cluster labeling is automatic ontology construction. It should be noted that while a ontology hierarchy has well-defined parent-child relationship, such as hypernyms-hyponym and meronymy (part-whole), a document hierarchy of the same collection does not necessary have to reflect the same parent-child relationship. The higher flexibility in hierarchal structure of a document hierarchy might better serve for task such as browsing.</p><p>There have been some works on creating ontology hierarchies using clustering based techniques. These approaches require that the resulting hierarchy be automatically labeled. Caraballo <ref type="bibr" target="#b1">[1]</ref> constructed a noun hierarchy of hypernyms automatically from text. The noun hierarchy is constructed using bottom-up clustering approach, grouping nouns based on conjunction and apposition. In order to label each internal cluster, a set of possible hypernyms of every noun in the cluster is extracted from the text using a linguistic pattern. The noun that has the largest number of hyponym relations with the noun in the clusters is assigned as the cluster label.</p><p>Pantel et al. <ref type="bibr" target="#b9">[9]</ref> automatically assigned label to semantic classes, generated from their clustering algorithm. For each semantic class, a subset of concepts in the class that is most likely to represent the semantic class is selected as class representatives. These representative concepts are then used to extract label candidates using some lexical patterns. The label candidate with the highest mutual information with the class representatives is assigned as class label.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">ALGORITHMS</head><p>Glover et al. <ref type="bibr" target="#b4">[4]</ref> showed that a simple term frequency analysis could predict the labels of document clusters. Their algorithm is based on the hypothesis that a word that is very common in the cluster, but relatively rare in the collection, is likely to be a good cluster descriptor. They selected cluster descriptor candidates based on the following criteria:</p><formula xml:id="formula_0">Candidates = {phrase p | DF C / |C| &lt; maxColPos and DF S / |S| &gt; minSelfPos}</formula><p>where DF C is the number of documents in the collection that contains the phrase p ("document frequency"), and DF S is the number of documents in the cluster (the "self cluster" S) that contain the phrase p. |C| and |S| denote the number of documents in the collection and in the self cluster. maxColPos and minSelfPos are thresholds. Phrases that appear more than minSelfPos times per document, on average, in "self cluster" documents, and less than maxColPos times per document, on average, in the collection are considered to be the in the label candidate set. Phrases in the candidate set are ranked according to their DF S values. Every phrase in the collection is considered, without stemming or stopwords removal <ref type="bibr" target="#b4">[4]</ref>.</p><p>There are several limitations to Glover's threshold-based method. First, the performance of the algorithm is sensitive to preset threshold values (maxColPos, minSelfPos), and the optimal thresholds vary between clusters. Second, multiword phrases normally have lower DF S / |S| values than single words, thus are rarely selected as a descriptors. Third, documents often do not contain words that describe their categories, so basing the decision mainly on DF S / |S| generally does not work well.</p><p>Due to these limitations, we propose a more general labeling algorithm that allows us to incorporate more features in selecting the cluster descriptors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Labeling Algorithm:</head><p>First, we assume that the algorithm has access to a general collection of documents E, representing the word distribution in general English. This English corpus is used primarily in selecting label candidates, as explained below.</p><p>Given a cluster S and its parent cluster P, which includes all of the documents in S and in the sibling clusters of S, the algorithm selects labels for the cluster S with the following steps:</p><p>1) Collect phrase statistics: For every unigram, bigram, and tri-gram phrase p occurring in the cluster S, calculate the document frequency and term frequency statistics for the cluster, the parent cluster and the general English corpus.</p><p>2) Select label candidates: Select the label candidates from unigram, bi-gram, and tri-gram phrases based on document frequency in the cluster and in general English language.</p><p>3) Calculate the descriptive score: Calculate the descriptive score (DScore) for each label candidate, then sort the label candidates by these scores.</p><p>4) Calculate the cutoff point: Decide how many label candidate to display based on the descriptive scores.</p><p>Each step is described in more detail, below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Collecting Phrase Statistics</head><p>For each phrase appearing in the cluster, collect the following statistics: document frequency (DF), and term frequency (TF) with respect to the cluster S, the parent cluster P and the general English corpus E. Document frequency of a phrase p with respect to a cluster C, denoted by DF C , is the number of documents in the cluster that contain p. Term frequency of a phrase p in a cluster C, denoted by TF C , is total number of occurrences of p in the cluster.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Select Label Candidates</head><p>Instead of considering every phrase occurring in the cluster, we hypothesize that, although a good descriptor need not occur in the majority of the documents in the cluster, it should occur in at least 20% of the documents in the cluster. Since phrases in general occur less frequent than single words, the selection criteria are slightly different in the case of bigrams and trigrams:</p><p>The algorithm only considers bigram and trigram phrases that occur in at least 5% of the documents in the cluster. These cutoffs improve the efficiency of the algorithm. Low frequency phrases usually have low weights, thus these thresholds generally don't prune phrases that would be ranked highly otherwise.</p><p>Common words (stopwords) are also removed from consideration. The algorithm considers any words that occur in more than 20% of the general English corpus to be stopwords.</p><p>In the case of the non-unigram phrases, the algorithm considers any phrases that contain only words that occur in more than 30% of the documents in the general English corpus E to be stopwords. This cutoff was chosen conservatively by analyzing the word distribution in general English corpora, trying not to exclude descriptive words.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Descriptive Score (DScore)</head><p>The descriptiveness of a label with respect to a cluster is measured by the descriptive score (DScore). For a phrase p, the descriptive score is based on the features described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Normalized Document Frequency (DFc / |C|)</head><p>Normalized document frequency is the fraction of the cluster that contains the phrase p.</p><formula xml:id="formula_1">C DF DF normalized C C =</formula><p>In general a label candidate that occurs in more documents in the cluster is expected to be a better descriptor than one that rarely occurs. The algorithm computes normalized DF for both the self cluster S and the parent cluster P (DF S / |S|, DF P / |P|). A good descriptor should occur relatively frequent in the parent cluster, but occur very frequent in the self cluster.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TFIDF</head><p>This is similar to a traditional TFIDF value used in information retrieval.</p><formula xml:id="formula_2">) | | log( * C C C DF C TF TFIDF =</formula><p>As in traditional IR, a phrase with high TFIDF value is expected to be important to the cluster, thus possibly is also a good cluster descriptor. The TFIDF score favors phrases that appear multiple times per document. The algorithm computes TFIDF for both the self cluster and the parent cluster (TFIDF S , TFIDF P ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rank of TFIDF, and nDF (r(TFIDF), r(normalized DF))</head><p>Four rankings are computed for every label candidate based on the features DF S / |S|, DF P / |P|, TFIDF S, and TFIDF P . For example, for DF S / |S|, the algorithm sorts every label candidate according to its DF S / |S| score; the label with the highest value is assigned rank 1, denoted by r(DF S / |S|) = 1. The label with the second highest score is assigned rank 2, and so on. Tied scores produce tied rankings. A good descriptor is expected to have a relatively high rank of DF P / |P| and even higher rank of DF S / |S|.</p><p>Rank features, e.g. r(DF S / |S|), convey similar information as their quantitative counterparts, e.g. DF S . However, rank features may be less sensitive than normalized DF and TFIDF values, and thus may be more comparable across categories.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Boost in Ranking</head><p>Since we hypothesize that a good descriptor probably has a relatively high rank of normalized DF P (relatively frequent in the parent cluster), and even higher rank of normalized DF S (very frequent in the self cluster), we measure this boost in ranking of nDF with the following measure:</p><formula xml:id="formula_3">⎥ ⎦ ⎤ ⎢ ⎣ ⎡ ⎟ ⎟ ⎠ ⎞ ⎜ ⎜ ⎝ ⎛ - ⎥ ⎦ ⎤ ⎢ ⎣ ⎡ ⎟ ⎟ ⎠ ⎞ ⎜ ⎜ ⎝ ⎛ | | log | | log S DF r P DF r S P</formula><p>The algorithm computes the boost in ranking in log-scale because the change in ranking is more significant at the top of the ranking (those which have high document frequency). For example, a label that moves from being the 200 th most frequent phrase in the parent cluster to the 100 th most frequent phrase in the self cluster, is probably less descriptive than another label that moves from the 100 th most frequent phrase in the parent cluster to the 5 th most frequent phrase in the self cluster.</p><p>In addition to the boost in ranking of normalized document frequency, the algorithm also computes the boost in ranking of TFIDF, with the following formula:</p><formula xml:id="formula_4">log[r(TFIDF P )] -log[r(TFIDF S )]</formula><p>If TFIDF is related to the topicality of the phrase, then a good descriptor is expected to have a higher TFIDF rank in the self cluster, compared to its TFIDF rank in the parent cluster. The algorithm also computes the boost in ranking of TFIDF in logscale for the same reason as in the case of normalized DF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Phrase Length (LEN)</head><p>The phrase length is the number of terms in the phrase. While the document frequency feature prefers a shorter phrase to a longer phrase, LEN prefers the longer phrases to shorter ones.</p><p>The algorithm combines every feature into one descriptive score with a linear model. Thus the algorithm computes how descriptive a phrase p is as a label for the cluster S, with parent cluster P with the following formula: The weights of each feature are estimated using linear regression and training data. Linear regression attempts to estimate the expected value of a variable Y given the values of a set of features Xi, by assuming a linear relationship between Y and X i . Thus, Y can be expressed as linear combination of features Xi:</p><formula xml:id="formula_5">))] ( log( )) ( [log( * ))] / ( log<label>(</label></formula><formula xml:id="formula_6">Y = b 0 + ∑ b i X i + e</formula><p>where e is a random variable residue (error term), with mean zero. The coefficients b i for all i are optimized so that the sum of the residue square in the training data is minimized.</p><p>In order to train the linear regression model, since the correct descriptive score is not known for each label candidate, we have to estimate the descriptive score of a label candidate. We estimate each label candidate's descriptive score based on how much the label overlaps with the correct category label in a set of training data. We define the DScore estimate of a label L, with respect to the correct label CL as:</p><formula xml:id="formula_7">DScore L * = max SL ∈Synonym(L ) { overlap(SL,CL) max{len(SL),len(CL)} }</formula><p>where overlap(SL,CL) is the number of terms that are shared between SL and CL, and len(X) denotes the length of X. If the label candidate or a synonym of the label candidate is the same as the correct category label, then the DScore estimate is 1. The estimation of DScore that we use to train the linear regression model is only a heuristic value, because many good descriptors would have the DScore estimates of zero, since they do not overlap with the correct label.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Cutoff Model</head><p>By default, the algorithm displays the 5 labels with the highest descriptive scores as the cluster descriptor. However, we observe that even in a short list of five labels there is generally a big drop-off in the descriptive scores at some point. The big drop-off in the descriptive scores often separates good labels from bad labels. The algorithm can use this information to decide how many labels to display. If the top-ranked label has a very high descriptive score compared to the rest of the label candidates then the algorithm can be very confident that the topranked label is the correct descriptor, and thus display only the top-ranked label. On the other hand, if all label candidates have similarly low DScores (only small gaps between each consecutive label), there is less certainty about which labels are best, so more labels are displayed.</p><p>The following linear model is used to decide how many labels to display.</p><formula xml:id="formula_8"># Displayed = c 0 -c 1 * (DScore L1 -DScore L 2 ) -c 2 * (DScore L 2 -DScore L 3 ) -c 3 * (DScore L 3 -DScore L 4 ) -c 4 * (DScore L 4 -DScore L 5 )</formula><p>The weights in the model are optimized using linear regression and training data. We expect the optimized C 0 to be around 5, while expecting the weights C 1 , C 2 , C 3 , C 4 to be in increasing order.</p><p>The same training data used to train the descriptive score model in Section 4.3 can be used to generate training instances for the cutoff model. The cutoff model is trained based on the topranked labels produced by the trained descriptive model. For each category in the training data, the 5 labels with the highest predicted descriptive score are determined. The optimal number of labels to display is defined as the rank of the label (from 1 to 5) that has the maximum overlap with the correct category label.</p><p>If there is a tie, then the label furthest down the list is picked. Thus the cutoff model is trained based on the top-5 predicted descriptive scores from each training category.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EXPERIMENTAL RESULTS</head><p>A set of experiments was conducted to evaluate the effectiveness of the algorithm at selecting labels. We describe the data and evaluation measures first, followed by descriptions of the experiments and their results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Data Collections</head><p>The Open Directory Project 2 was used as a source of documents (web pages), hierarchical organization, and "ground truth" labels assigned by human editors. We randomly sampled 20,462 web pages from the ODP hierarchy to use as background model representing general English (collection statistics). We separately sampled another subset of ODP hierarchy to use as our training and testing ground truth data.</p><p>We selected total of 165 subcategories from ODP under 9 categories.</p><p>• Computers / artificial intelligence. Every subcategory from the 9 parent categories was included, with the exception of alias subcategories (because those subcategories mainly belong somewhere else in the hierarchy), even ones with common words as labels such as Surgery / General. In total, the constructed hierarchy contains 25,143 web pages. The selected subcategories vary both in depth (between level two and level three with respect to the Open Directory root) and in number of web pages in each cluster. Figure <ref type="figure">1</ref> shows a partial snapshot the document hierarchy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Evaluation Measure</head><p>We define the cluster-labeling task as a descriptor-ranking problem. In the evaluation we need to specify our criteria in assessing the quality of the ranking produced. In comparing our labels to the correct ODP label, we use the following two definitions of a correct label: Exact match and partial match.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Definitions of a correct label</head><p>For a given category with self-label S, and parent-label P:</p><p>Exact Match: A label L is an exact match of the correct label S if there exists a synonym SL of L such that SL is equal to "S", "S P" or "P S." For example, for the category "medical /  research," labels such as "research," "medical research," and "research medical" would be classified as exact match labels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Partial Match:</head><p>A label L is a partial match of the correct label S if there exists a synonym SL of L such that SL shares a term with "S", "S P" or "P S." For example, for the category "management / business process analysis," labels such as "business," "process," "business management," "management analysis" would be classified as partial matches.</p><p>The synonym list for each word was obtained automatically from WordNet <ref type="bibr" target="#b16">[16]</ref>. For both of these definitions of a correct label, we compute the following evaluation measures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Match at top N results (Match@N)</head><p>Match@N indicates whether the top N results contain any correct labels. It is a binary indicator, and monotonically increases as N increases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Precision at top N results (P@N)</head><p>Precision is computed as the number of labels in the top N results that match the correct categories label divided by N.</p><p>P@N measures the percentage of correct answers that are displayed in ranks 1-N. In general, low precision is undesirable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4">Mean Reciprocal Rank (MRR)</head><p>Mean reciprocal rank is the mean of the reciprocal of the rank of the first correct label. If the first correct label is ranked as the 3 rd label, then the reciprocal rank (RR) is 1/3. If none of the first N responses contains a correct label, RR is 0. RR is 1 if the highest ranked label matches the correct label.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.5">Mean Total Reciprocal Rank (MTRR)</head><p>Sometimes there is more than one aspect to a category; for example, the category "acupuncture and Chinese medicine" has two correct aspects, "acupuncture" and "Chinese medicine." MTRR is similar to MRR, however, instead of considering only the rank of the first correct label as in MRR, MTRR takes into account all correct labels. Of the algorithm ranks "acupuncture" and "Chinese medicine" as the 2 nd and the 4 th labels, then the TRR (total reciprocal rank) is ½ + ¼ = ¾ while RR = ½.</p><p>Our evaluation methodology is extremely strict because it measures agreement with the single ODP category label selected by the human editor, whereas in fact there might be several equally good category labels. For example, in the category "cardiovascular disorder," our algorithm might select "heart" and "heart disease" as labels for the cluster, which would be acceptable labels to most human assessors. Our automatic evaluation would judge "heart" and "heart disease" as unacceptable answers. We alleviate some of this problem by accepting synonymous labels, as defined by WordNet synonym lists <ref type="bibr" target="#b16">[16]</ref> in our evaluation. However, there are still cases such as "cardiovascular" and "heart", which are not actually synonyms, but which most people would consider acceptable substitution labels in the context of "heart disease."</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Experimental Setup &amp; Results</head><p>We evaluated our model on the ground truth ODP data of 165 categories, with a total of 25,143 web pages. Each web page was parsed and all HTML tags, images, and JavaScript were removed in the preprocessing step. Each term was stemmed using Krovetz's stemmer <ref type="bibr" target="#b6">[6]</ref>. No stopwords list was used, because we expected the algorithm to be able to distinguish the collection-specific stopwords from the content words. The goals of our experiments were three-fold. First, we wanted to evaluate the quality of the cluster labels produced by the algorithm, in comparison with the previous technique. Second, we wanted to investigate the performance of the model that uses only rank features. Third, we wanted to investigate how the model performs if the hierarchical cluster is noisy, as would be the case when using a hierarchical clustering algorithm to organize documents.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Performance Comparison</head><p>Glover's threshold-based algorithm was used as the baseline system. The experiment used five-fold cross-validation; in each fold, the training data was used to estimate the optimal parameters for each algorithm. In the case of the thresholdbased model, the training data was used to find the optimal threshold values. In our algorithm, the training data was used to learn the weights in the linear model of the descriptive score. This training data was also used to train the cutoff model to predict how many labels to show.</p><p>In the training phase we first generated training instance-value pairs for the descriptive score and the feature set training. For each category in the training data, we estimated the DScore for each of its label candidates as described in Section 4.3. We also trained the cutoff model as described in Section 4.4.</p><p>The experiment was run on the baseline system and two versions of our algorithm: One with just the descriptive score, and another with both the descriptive score and the cutoff model. Tables 1, 2 and 3 show results for the three algorithms.</p><p>Table <ref type="table">1</ref>. Match@N with exact, and partial match criteria. Both descriptive score models outperform the threshold-based approach. The Match@1 values are around 0.36 in exact match and 0.53 in partial match for both descriptive score models, compared to 0.27 and 0.39 for baseline model. This means that in almost half the categories, the descriptive score predicts the correct label with the top rank label. The precision of both descriptive score models is higher than the baseline model. This suggests that the lists of labels produced by our descriptive score contain more good labels than the ones produced by the baseline. This is also supported by the higher MTRR measure for the descriptive score model.</p><formula xml:id="formula_9">Match@N (exact) N = 1 N = 2 N = 3 N = 4 N=5</formula><p>The average number of labels displayed with the cutoff model is 2.6. By choosing to display fewer labels, the algorithm with the cutoff model has a lower number of correct matches (M@N) and also lower MRR, and MTRR. However, the precision of the list of labels produced is higher, because the model tries not to show low-quality labels. We believe that the tradeoff in lower MRR with higher precision is worthwhile because a shorter list of labels makes it easier for users to understand the content of the cluster. However, a user study would be needed to verify our conjecture.</p><p>Figure <ref type="figure" target="#fig_1">2</ref>. shows the labels produced by the DScore+Cutoff model along with the corresponding ("correct") ODP labels. In most categories, the labels produced by the model match the category labels in the ODP. Even when model did not produce exactly the same labels as the ODP, the labels assigned by the model provide a similar description. For example, in the category, security / news and media, the list of labels, "attack, vulnerable, and hack" describes what most of the documents discuss.</p><p>The algorithm works well in spite of a very heuristic method used to generate scores for ODP labels during training. We believe that this effectiveness is because the trained regression model does not need to predict an exact DScore; it needs only to produce a relative score for each label that is suitable for ranking them. One thing to note is that while the algorithm ranks labels using the relative importance of terms between the parent cluster and the self cluster, it does not use information about sibling clusters. The algorithm could potentially rank the same labels highly for multiple sibling clusters. However, in our evaluation with the ODP data, this was rarely the case. All sibling clusters are pooled together to form the parent cluster, so if the hierarchy is well-formed such that every sibling cluster is of roughly the same granularity, the highly ranked terms in the parent cluster are similar to the highly ranked terms of its children, yielding small relative differences. Comparing a child to its parent cluster has an indirect effect similar to comparing against its siblings. We suspect that in a less well-formed hierarchy the algorithm would need to consider information about each individual sibling in order to assign discriminative labels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Using Only Rank Features</head><p>To test the hypothesis that one can identify a good label for a cluster based only on rank features, the descriptive score formula in Section 4.1 was modified to use only the rank features and the boost in ranking. Tables <ref type="table">4,</ref><ref type="table" target="#tab_4">5</ref>, and 6 show the results.</p><p>Table <ref type="table">4</ref>. Match@N with exact, and partial match criteria for rank-features model. The model performs surprisingly well considering that it uses only ranking features. Its MRR is 0.47 for exact match and 0.62 for partial match definition, which are at the same level comparing to the models that use all features.</p><formula xml:id="formula_10">Match@N (exact) N = 1 N = 2 N = 3 N = 4 N=5</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.3">Noise Resistance</head><p>So far we have assumed that the document hierarchy given to the algorithm correctly clusters every document with the same concept together. However, this is rarely the case, because the hierarchical clusters that need automatic labeling are usually produced by imperfect hierarchical clustering algorithms. To evaluate how the algorithm performs in a more realistic setting, another experiment was conducted with noise introduced into our ground truth data.</p><p>Consider a cluster P that has the set of subclusters, denoted as children(P). For each document in any subcluster of P, the document is reassigned to another subcluster of P with a probability N (Noise %); with the probability 1-N, the document remains in the correct subcluster. The probability that a document is reassigned to a subcluster C of P is proportional to the size of the cluster C. So the probability that a document d in a the cluster P is assigned to a subcluster C of P, denoted by Pr(assigned(d, C)), is:</p><formula xml:id="formula_11">⎪ ⎪ ⎩ ⎪ ⎪ ⎨ ⎧ ∉ ∈ - = ∑ ∉ ∈ C d R C N C d N C d assigned P hildren R if , * if ,<label>1</label></formula><p>)) , ( Pr( Noise %</p><p>Glover's all-features all-features with cutoff rank-features</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 3. shows MRR for different noise probability levels</head><p>Figure <ref type="figure">3</ref> shows the performance comparison on exact match definition between different algorithms at noise levels from 0% to 50% on 94 categories of the OPD ground truth data. At 0% noise level, every document is correctly assigned. At 50% noise level, each cluster has approximately 50% of its documents correctly assigned, and the rest are documents that should be in its sibling clusters. We didn't investigate noise levels higher than 50% because the cluster identity is no longer coherent when most of the cluster is assigned incorrectly. In Figure <ref type="figure">3</ref>, Glover's refers the baseline algorithm described in Section 5.3.1; all-features and all-features with cutoff refer to the models that calculate DScore based on every feature described in Section 4.3, with and without the cutoff model respectively; and rank-features refers to the model described in Section 5.3.2, which only used rank-related features to calculate DScore.</p><p>As expected the performance of every algorithm decreases as more noise is introduced. At 10% to 30% noise level, there is almost no change in the performance of any model. The MRR of every model drops around 0.1 with 50% noise. However, even with 40% noise level, our algorithms still perform at around 0.5 MRR, which means that on average there is a good descriptor in the top two labels. The decreases in performance mostly came from the small categories, which are more easily disrupted by the introduction of a few documents. In general, our algorithm was not sensitive to random noise.</p><p>One might argue that this result is not surprising, because randomly assigning documents to sibling clusters does not change the underlying distribution of words in each cluster. A more realistic simulation would assign a document to sibling clusters based on the similarities between the document and clusters' centroids. Such a simulation would better reflect the errors normally produced by a clustering algorithm. Although a further study is needed to assess the noise tolerance of the model under this scenario, we believe that our experiment shows promising initial result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION AND FUTURE WORK</head><p>Tools that automatically organize and assist in the analysis of large amounts of text documents are becoming a requirement in many organizations. There has been considerable research on automatically organizing text documents into hierarchical clusters suitable for interactive browsing, but much less research on how best to automatically describe or label hierarchies to support interactive browsing.</p><p>This paper presents a simple trainable algorithm that selects a few 1-3 word labels to describe each cluster in a document hierarchy. The algorithm dynamically decides how many labels to select for each cluster; in our experiments, it average about 2.6 labels per cluster. Experiments using Open Directory Project data demonstrated that the labels produced by the algorithm often match the labels chosen by human editors. Preliminary experiments suggest that the algorithm is also robust with respect to clustering errors, although additional research is required to settle this question.</p><p>Our research and most prior research focused on the use of statistical features to select and rank features; a distinguishing feature of our research is the use of statistics from a corpus of general English, the parent cluster, and the cluster to be labeled. However, perhaps more interesting is the discovery that the algorithm can select good descriptors using only rank-based features, and that rank-based features provide more robust results than more detailed numeric features.</p><p>Error analysis showed that most of errors come from clusters containing small numbers of documents. The small number of observations in small clusters can make good and bad labels indistinguishable; minor variations in vocabulary can also produce statistical features with spuriously high variance. To improve the performance of the algorithm on small clusters it may be necessary to incorporate lexical features, for example the number of word senses for a candidate label, or positional features sensitive to where terms occur in a document, for example in a title or in a lead sentence. The work described here demonstrates that it is realistic to aim higher than the lists of characteristic terms that have been the norm in prior research on automatic labeling, but it is nonetheless just the first step.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Each label candidate is sorted by its descriptive score.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. clusters' labels predicted by the descriptive score with cut-off model for 31 categories.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>the number of documents that originally belonged to the cluster C.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>shows subset of the ODP hierarchy used as ground truth data, number of documents in each cluster is showed in the parentheses</head><label></label><figDesc></figDesc><table><row><cell></cell><cell cols="2">Business (3,318)</cell></row><row><cell></cell><cell>-</cell><cell cols="2">Management (3,318)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>Benchmarking and Best Practices (35)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>Business Process Analysis (41)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>…</cell></row><row><cell></cell><cell cols="2">Computers (4,982)</cell></row><row><cell></cell><cell>-</cell><cell cols="2">Artificial Intelligence (1,616)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>Academic Departments (60)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>Agents (98)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>…</cell></row><row><cell></cell><cell>-</cell><cell cols="2">Security (3,366)</cell></row><row><cell></cell><cell></cell><cell>o</cell><cell>Advisories and Patches (71)</cell></row><row><cell cols="4">o o Alternative (5,387) FAQs, Help, and Tutorials (11) … Health (16,843) -o Acupuncture and Chinese Medicine (502) o Alexander Technique (129) o … -Conditions and Diseases (8,204) o Allergies (169) o Blood Disorders (176) o … -Medicine (3,252) o Imaging (173) Computer Tomography Scanning (11) Magnetic Resonance Imaging (22) o Research (107) o … o Surgery (506) Cardiothoracic (112) Cosmetic and Plastics (73) General (86) Head and Neck (4) #Docs Labels 84 agent, software agent 72 conference, artificial intelligence, international conference 65 genetic, genetic algorithm 46 philosophy, mind, science 61 vision, compute vision 14 secure conference, conference attend 62 honeypot, attack 73 attack, vulnerable, hack 18 bee, honey 10 ear candle, ear 258 herb, plant 18 iridology, iris 53 toxic, environmental, safe 95 reflexology, reflexologist 6 urine 53 ill, chronic ill, chronic Figure 1. ODP category labels [parent-label/self-label] artificial intelligence/agents artificial intelligence/conferences and events artificial intelligence/genetic programming artificial intelligence/philosophy artificial intelligence/vision security/conferences security/honeypots and honeynets security/news and media alternative/apitherapy alternative/ear candling alternative/herbs alternative/iridology alternative/non-toxic living alternative/reflexology alternative/urine therapy conditions and diseases/chronic illness digestive disorders/esophagus 35 reflux, heartburn</cell></row><row><cell>digestive disorders/pancreas</cell><cell cols="3">10 pancreas, pancreatiti</cell></row><row><cell>conditions and diseases/food and water borne</cell><cell cols="3">75 food, diarrhea</cell></row><row><cell>conditions and diseases/musculoskeletal disorders</cell><cell cols="3">473 pain, arthritis, joint</cell></row><row><cell>conditions and diseases/skin disorders</cell><cell cols="2">383 skin, treat</cell></row><row><cell></cell><cell></cell><cell cols="2">continue medical educate, medical educate,</cell></row><row><cell>medicine/education</cell><cell>437</cell><cell cols="2">medical school</cell></row><row><cell>imaging/computer tomography scanning</cell><cell cols="3">11 tomography, compute tomography, compute</cell></row><row><cell>imaging/x-ray</cell><cell cols="3">15 breast cancer, cancer</cell></row><row><cell>medicine/reference</cell><cell cols="3">119 database, medical subject head, library</cell></row><row><cell>surgery/cryosurgery</cell><cell cols="3">7 cryosurgery, treat, cryotherapy</cell></row><row><cell>surgery/orthopedics</cell><cell cols="3">19 orthopaedic, hip</cell></row><row><cell>surgery/transplant</cell><cell cols="3">36 transplant, transplantation</cell></row><row><cell>management/business process analysis</cell><cell cols="3">31 business process, business process model</cell></row><row><cell>management/management science</cell><cell cols="3">430 university, research, paper</cell></row><row><cell>management/value based management</cell><cell cols="3">8 shareholder value, consult firm, firm</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 . Precision@N with exact, and partial match criteria.</head><label>2</label><figDesc></figDesc><table><row><cell>Glover's</cell><cell>0.27</cell><cell>0.35</cell><cell>0.42</cell><cell>0.46</cell><cell>0.50</cell></row><row><cell>DScore</cell><cell>0.36</cell><cell>0.50</cell><cell>0.58</cell><cell>0.62</cell><cell>0.64</cell></row><row><cell>DScore + Cutoff</cell><cell>0.37</cell><cell>0.49</cell><cell>0.55</cell><cell>0.55</cell><cell>0.55</cell></row><row><cell>Match@N (partial)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 . MRR, MTRR, and Average Length statistics.</head><label>3</label><figDesc></figDesc><table><row><cell>Exact</cell><cell>MRR</cell><cell>MTRR</cell><cell>Avg. Length</cell></row><row><cell>Glover's</cell><cell>0.35</cell><cell>0.38</cell><cell>5</cell></row><row><cell>DScore</cell><cell>0.47</cell><cell>0.53</cell><cell>5</cell></row><row><cell>DScore + Cutoff</cell><cell>0.45</cell><cell>0.47</cell><cell>2.6</cell></row><row><cell>Partial</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Glover's</cell><cell>0.50</cell><cell>0.68</cell><cell>5</cell></row><row><cell>DScore</cell><cell>0.61</cell><cell>0.94</cell><cell>5</cell></row><row><cell>DScore + Cutoff</cell><cell>0.59</cell><cell>0.74</cell><cell>2.6</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 . Precision@N with exact, and partial match criteria for rank-features model.</head><label>5</label><figDesc></figDesc><table><row><cell>Glover's</cell><cell>0.27</cell><cell>0.35</cell><cell>0.42</cell><cell>0.46</cell><cell>0.50</cell></row><row><cell>DScore</cell><cell>0.35</cell><cell>0.52</cell><cell>0.57</cell><cell>0.59</cell><cell>0.64</cell></row><row><cell>DScore + Cutoff</cell><cell>0.35</cell><cell>0.52</cell><cell>0.55</cell><cell>0.55</cell><cell>0.55</cell></row><row><cell>Match@N (partial)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Glover's</cell><cell>0.39</cell><cell>0.52</cell><cell>0.60</cell><cell>0.64</cell><cell>0.68</cell></row><row><cell>DScore</cell><cell>0.53</cell><cell>0.64</cell><cell>0.72</cell><cell>0.73</cell><cell>0.76</cell></row><row><cell>DScore + Cutoff</cell><cell>0.53</cell><cell>0.63</cell><cell>0.68</cell><cell>0.69</cell><cell>0.69</cell></row><row><cell>P@N (exact)</cell><cell cols="5">N = 1 N = 2 N = 3 N = 4 N=5</cell></row><row><cell>Glover's</cell><cell>0.27</cell><cell>0.18</cell><cell>0.16</cell><cell>0.13</cell><cell>0.12</cell></row><row><cell>DScore</cell><cell>0.35</cell><cell>0.28</cell><cell>0.22</cell><cell>0.19</cell><cell>0.16</cell></row><row><cell>DScore + Cutoff</cell><cell>0.35</cell><cell>0.29</cell><cell>0.27</cell><cell>0.27</cell><cell>0.27</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6 . MRR, MTRR, and Average Length statistics for rank-features model.</head><label>6</label><figDesc></figDesc><table><row><cell>Exact</cell><cell>MRR</cell><cell>MTRR</cell><cell>Avg. Length</cell></row><row><cell>Glover's</cell><cell>0.35</cell><cell>0.38</cell><cell>5</cell></row><row><cell>DScore</cell><cell>0.47</cell><cell>0.53</cell><cell>5</cell></row><row><cell>DScore + Cutoff</cell><cell>0.44</cell><cell>0.48</cell><cell>2.5</cell></row><row><cell>Partial</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Glover's</cell><cell>0.50</cell><cell>0.68</cell><cell>5</cell></row><row><cell>DScore</cell><cell>0.62</cell><cell>0.94</cell><cell>5</cell></row><row><cell>DScore + Cutoff</cell><cell>0.60</cell><cell>0.77</cell><cell>2.5</cell></row><row><cell cols="4">The learned descriptive model based only on rank features is as</cell></row><row><cell>followed:</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">DScore( p) = 0.122</cell><cell></cell><cell></cell></row><row><cell></cell><cell>+0.0000 * r(DF S /# S)</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">-0.0001* r(DF P /# P)</cell><cell></cell></row><row><cell></cell><cell>+0.0000 * r(TFIDF S )</cell><cell></cell><cell></cell></row><row><cell></cell><cell>-0.0001* r(TFIDF P )</cell><cell></cell><cell></cell></row><row><cell></cell><cell>+0.0509 *[log(r(DF</cell><cell></cell><cell></cell></row></table><note><p>P /# P))log(r(DF S /# S))] +0.1874 *[log(r(TFIDF P ))log(r(TFIDF S ))]</p></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">ACKNOWLEDGEMENTS</head><p>This research was supported by a Thai Ministry of Science, Technology and Environment Scholarship, and by NSF grants EIA-0327979 and IIS-0429102. Any opinions, findings, conclusions, or recommendation expressed in this paper are the authors', and do not necessarily reflect those of the sponsors.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic Acquisition of a hypernym-labeled noun hierarchy from text</title>
		<author>
			<persName><forename type="first">S</forename><surname>Caraballo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Association for Computational Linguistics Conference</title>
		<meeting>the Association for Computational Linguistics Conference</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A practical web-based approach to generating topic hierarchy for text segments</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20 th International Conference on Information and Knowledge Management</title>
		<meeting>the 20 th International Conference on Information and Knowledge Management</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Constant interaction-time Scatter/Gather browsing of very large document collections</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Cutting</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">O</forename><surname>Pederson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International ACM Conference on Research and Development in Information Retrieval</title>
		<meeting>International ACM Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Inferring hierarchical descriptions</title>
		<author>
			<persName><forename type="first">E</forename><surname>Glover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pennock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lawrence</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Krovetz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20 th International Conference on Information and Knowledge Management</title>
		<meeting>the 20 th International Conference on Information and Knowledge Management</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Using web structure for classifying and describing web pages</title>
		<author>
			<persName><forename type="first">E</forename><surname>Glover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tsioutsiouliklis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lawrence</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pennock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Flake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on World Wide Web</title>
		<meeting>International Conference on World Wide Web</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Viewing morphology as an inference process</title>
		<author>
			<persName><forename type="first">R</forename><surname>Krovetz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International ACM Conference on Research and Development in Information Retrieval</title>
		<meeting>International ACM Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Finding topic words for hierarchical summarization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Lawrie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">B</forename><surname>Croft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Rosenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of international ACM conference on research and development in information retrieval</title>
		<meeting>international ACM conference on research and development in information retrieval</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The TaxGen framework: automating the generation of a taxonomy for a large document collection</title>
		<author>
			<persName><forename type="first">A</forename><surname>Muller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dorre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Gerstl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Seiffert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32 nd Hawaii International Conference on System Science</title>
		<meeting>the 32 nd Hawaii International Conference on System Science</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Automatically labeling semantic classes</title>
		<author>
			<persName><forename type="first">P</forename><surname>Pantel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ravichandran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Human Language Technology and North American Chapter</title>
		<meeting>the Human Language Technology and North American Chapter</meeting>
		<imprint>
			<publisher>the Association for Computational Linguistics Conference</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Automatic labeling of document clusters</title>
		<author>
			<persName><forename type="first">A</forename><surname>Popescul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ungar</surname></persName>
		</author>
		<ptr target="http://citeseer.nj.nec.com/popescul00automatic.html" />
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
	<note>Unpublished manuscript, available at</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Near-duplicate detection for eRulemaking</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Callan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the National Conference on Digital Government Research (DG.02005)</title>
		<meeting>the National Conference on Digital Government Research (DG.02005)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Learning to cluster web search results</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ma</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International ACM Conference on Research and Development in Information Retrieval</title>
		<meeting>International ACM Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Open Directory Project (ODP)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Testbed</forename><surname>Erulemaking</surname></persName>
		</author>
		<ptr target="http://hartford.lti.cs.cmu.edu/eRulemaking/Data.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Data Mining Software</title>
		<author>
			<persName><surname>Weka</surname></persName>
		</author>
		<imprint/>
		<respStmt>
			<orgName>University of Waikato</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">WordNet, a lexical database for the English language</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
