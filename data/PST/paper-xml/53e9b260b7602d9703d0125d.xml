<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Modeling and mining of dynamic trust in complex service-oriented systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Florian</forename><surname>Skopik</surname></persName>
							<email>florian.skopik@gmx.at</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Distributed Systems Group</orgName>
								<orgName type="institution">Vienna University of Technology</orgName>
								<address>
									<addrLine>Argentinierstr 8/184-1</addrLine>
									<postCode>1040</postCode>
									<settlement>Vienna</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Daniel</forename><surname>Schall</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Distributed Systems Group</orgName>
								<orgName type="institution">Vienna University of Technology</orgName>
								<address>
									<addrLine>Argentinierstr 8/184-1</addrLine>
									<postCode>1040</postCode>
									<settlement>Vienna</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Schahram</forename><surname>Dustdar</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Distributed Systems Group</orgName>
								<orgName type="institution">Vienna University of Technology</orgName>
								<address>
									<addrLine>Argentinierstr 8/184-1</addrLine>
									<postCode>1040</postCode>
									<settlement>Vienna</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Modeling and mining of dynamic trust in complex service-oriented systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">DD0D3B4B6C1D65979B70398DEC78250B</idno>
					<idno type="DOI">10.1016/j.is.2010.03.001</idno>
					<note type="submission">Received 11 March 2010 Accepted 12 March 2010 Recommended by: D. Shasha</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:57+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Collaborative environment Service-orientation Social trust Interaction patterns Flexible composition Crowdsourcing</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The global scale and distribution of companies have changed the economy and dynamics of businesses. Web-based collaborations and cross-organizational processes typically require dynamic and context-based interactions between people and services. However, finding the right partner to work on joint tasks or to solve emerging problems in such scenarios is challenging due to scale and temporary nature of collaborations. Furthermore, actor competencies evolve over time, thus requiring dynamic approaches for their management. Web services and SOA are the ideal technical framework to automate interactions spanning people and services. To support such complex interaction scenarios, we discuss mixed service-oriented systems that are composed of both humans and software services, interacting to perform certain activities. As an example, consider a professional online support community consisting of interactions between human participants and software-based services. We argue that trust between members is essential for successful collaborations. Unlike a security perspective, we focus on the notion of social trust in collaborative networks. We show an interpretative rule-based approach to enable humans and services to establish trust based on interactions and experiences, considering their context and subjective perceptions.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The way people interact in collaborative environments and social networks on the Web has evolved in a rapid pace over the last few years. Services have become a key-enabling technology to support collaboration and interactions. Pervasiveness, context-awareness, and adaptiveness are some of the concepts that emerged recently in service-oriented systems. A system is not only designed, deployed, and executed; but rather evolves and adapts over time. This paradigm shift from closed systems to open, loosely coupled Web services-based systems requires new approaches to support interactions <ref type="bibr" target="#b0">[1]</ref>.</p><p>We present a novel approach addressing the need for flexible discovery and involvement of experts and knowledge workers in distributed, cross-organizational collaboration scenarios. Experts register their skills and capabilities as Human-Provided Services (HPS) <ref type="bibr" target="#b1">[2]</ref> using the very same technology as traditional Web services to join a professional online help and support community. This approach is inspired by crowdsourcing techniques following the Web 2.0 paradigm. People can contribute HPSs to offer their skills to a broad number of Web users, service compositions, and enterprises that need to have on-demand access to experts. In such communities, not only humans participate and provide services to others, but also autonomous software agents and semantic Web services with sophisticated reasoning capabilities. A mixed service-oriented system comprises human-and software services that can be flexibly and dynamically composed to perform various kinds of activities. Therefore, interactions in such a system do not only span humans, but also software services. Recently, trust has been identified as a beneficial concept in large-scale networks <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>. Considering trust relations when selecting people for communication or collaboration, services to be utilized, and resources to be applied leads to more efficient cooperation and compositions of human-and software services <ref type="bibr" target="#b4">[5]</ref>. In contrast to many others, we do not discuss trust from a security perspective. In this work we share the view of <ref type="bibr" target="#b5">[6]</ref> that is related to how much humans or other systems can rely on services to accomplish their tasks.</p><p>Unlike several other systems in the agent domain, e.g., see <ref type="bibr" target="#b6">[7]</ref>, we follow a centralized trust management approach <ref type="bibr" target="#b4">[5]</ref>. In SOA, central registries and logging facilities are common mechanisms. Applying them avoids various issues, such as the malicious manipulation of interaction data and dishonesty regarding recommendations. Moreover, some trust inference mechanisms are only applicable if the participants of the network have a global view on the system. However, on the other side, a centralized approach may raise privacy issues that have to be considered in the system design. In this paper, we present the following key contributions:</p><p>Social and behavioral trust model. We define a trust model that relies on interaction dynamics, supporting wide personalization by accounting for user preferences, and discuss its realization in the introduced use case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VieTE framework. We outline VieTE (Vienna Trust</head><p>Emergence), a modular framework that supports the management of trust in SOA-based environments. In particular, we introduce key implementation aspects, such as interaction mining, and Web of Trust provisioning.</p><p>Evaluation and discussion. Since our work is not only theoretical, but closely coupled to SOA technology, we evaluate various functional and non-functional aspects of VieTE and its trust model.</p><p>The paper is organized as follows. In Section 2, we introduce the Expert Web case showing the need for flexible expert discovery and involvement. Our novel approach is based on social trust. We introduce trust concepts in collaborative environments in Section 3. Section 4 details the concept of interaction-based behavioral trust which will be the basis for our trust inference model. Trust can be based on different metrics whose meaning is highly subjective. In Section 5, we show our trust model established on fuzzy set theory. The trust model manages context-dependent trust between actors, i.e., humans and services, emerging from interactions. The subsequent Section 6 formalizes the fundamental trust model relying on captured and interpreted interactions. Successful, thus highly trusted network members, are valuable collaborators. However, overload due to large amounts of work represent bottlenecks. In Section 7, we present a balancing approach to prevent inefficient interactions. Our architecture is implemented on-top of SOA and Web services. We show the implementation details of the system in Section 8. Section 9 deals with evaluations to test the performance of the presented system as well as effectiveness of balancing algorithms. Finally, we discuss related work in the area of SOA, social trust, and flexible interactions models in Section 10 and conclude the paper in Section 11.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Service-oriented collaborations</head><p>In virtual communities, where people dynamically interact to perform activities, reliable and dependable behavior promotes the emergence of trust. As collaborations are increasingly performed online, supported by service-oriented technologies, such as communication-, coordination-, and resource management services, interactions have become observable. By monitoring and analyzing interactions, trust can be automatically inferred <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref><ref type="bibr" target="#b8">[9]</ref>. In contrast to manual rating approaches for mainly static communities, automatic inference is wellsuited for complex networks with short-running interactions between potentially thousands of rapidly changing network members.</p><p>We motivate our work with a scenario showing discovery of experts and flexible interaction support as depicted in Fig. <ref type="figure" target="#fig_1">1</ref>. In this use case, a higher level process model may be composed of single tasks assigned to responsible persons, describing the steps needed to produce a software module. After finishing a common requirements analysis, and in parallel a reusability check of existing software artifacts produced in related projects, a software architect designs the actual software framework. The implementation task is carried out by a software developer, and additionally software test cases are generated with respect to functional properties (e.g., coverage of requirements) and non-functional properties (e.g., performance and memory consumption). We assume that this task is deployed in a global enterprise spanning multiple departments and locations. Thus, the single task owners in this process exchange only electronic files and interact by using communication tools. While various languages and techniques for modeling such processes already exist, for example BPEL, we focus on another aspect in this scenario: interactions with trusted experts. A language such as BPEL demands for the precise definition of flows and input/ output data. However, even in carefully planned processes with human participation, for example modeled as BPEL4People activities <ref type="bibr" target="#b9">[10]</ref>, ad hoc interactions and adaptation are required due to the complexity of human tasks, people's individual understanding, and unpredictable events. In Fig. <ref type="figure" target="#fig_1">1</ref>, the software architect receives the requirement analysis document from a preceding step. But if people have not yet worked jointly on similar tasks, it is likely that they need to set up a meeting for discussing relevant information and process artifacts. Personal meetings may be time and cost intensive, especially in cases where people belong to different geographically distributed organizational units. Various Web 2.0 technologies, including forums, Wiki pages and text chats, provide well-proven support for online-work in collaborative environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>Several challenges remain unsolved: (i) If people, participating in the whole process, are not able to solve problems by discussion, who should be asked for support? (ii) How can experts be flexibly involved in ongoing collaborations? (iii) What are influencing factors for favoring one expert over others. (iv) How can we support trusted interactions in such dynamically changing environments and how can this situation be supported by service-oriented systems?</p><p>Traditionally, discovering support is simply done by asking third persons in the working environment, the discussion participants are convinced they are able to help, namely trusted experts. In an environment with a limited number of people, persons usually tend to know who can be trusted and what data have to be shared in order to proceed with solving problems of particular nature. Furthermore, they easily find ways to contact trusted experts, e.g., via phone or e-mail. In case requesters do not know skilled persons, they may ask friends or colleagues, who faced similar problems before, to recommend experts. The drawbacks of this approach are that people need extensive knowledge about the skills of colleagues and internal structures of the organization (e.g., the expertises of people in other departments). Discovering support in such a manner is inefficient in large-scale enterprises with thousands of employees and not satisfying if an inquiry for an expert becomes a major undertaking. Today's communication and collaboration technologies cannot fully address the mentioned challenges because many existing tools lack the capability of managing and utilizing dynamic trust.</p><p>The Expert Web: We propose the Expert Web, consisting of connected experts that provide help and support in a service-oriented manner. The members of this Expert Web are either humans, such as company employees offering help as online support services, or software services encapsulating knowledge bases. Such an enterprise service network, spanning various organizational units, can be consulted for efficient discovery of available support. Users, such as the engineer or drawer in our use case, send requests for support (RFSs). The users establish trust in experts' capabilities based on their response behavior (e.g., availability, response time, quality of support). This trust, reflecting personal positive or negative experiences, fundamentally influences future selections of experts. As in the previous case, experts may delegate RFSs to other experts in the network, for example, when they are overloaded or not able to provide satisfying responses. Following this way, not only users of the enterprise service network establish trust in experts, but also trust relations between experts emerge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Communication, coordination, and composition</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Social trust in collaborations</head><p>In contrast to a common security perspective, social trust refers to the interpretation of previous collaboration behavior <ref type="bibr" target="#b0">[1]</ref> and may additionally consider the similarity of dynamically adapting interests <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>. Especially in collaborative environments, where users are exposed to higher risks than in common social network scenarios <ref type="bibr" target="#b12">[13]</ref>, and where business is at stake, considering social trust is essential to effectively guide interactions <ref type="bibr" target="#b13">[14]</ref>. Hence, we define trust as follows (see also <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9]</ref>):</p><p>Trust reflects the expectation one actor has about another's future behavior to perform given activities dependably, securely, and reliably based on experiences collected from previous interactions. This definition includes several key characteristics that need to be supported by a foundational trust model:</p><p>Trust reflects an expectation and, therefore, cannot be expressed objectively. It is influenced by subjective perceptions of the involved actors.</p><p>Trust is context dependent and is basically valid within a particular scope only, such as the type of an activity or the membership in a certain team.</p><p>Trust relies on previous interactions, i.e., from well-proven previous behavior a prediction of the future is inferred.</p><p>We strongly believe that trust and reputation mechanisms are key to the success of open dynamic serviceoriented environments. However, trust between human and software services is emerging based on interactions. Interactions, for example, may be categorized in terms of success (e.g., failed or finished) and importance.</p><p>Therefore, a key aspect of our approach is the monitoring and analysis of interactions to automatically determine trust in mixed service-oriented systems. We argue that in large-scale SOA-based systems, only automatic trust determination is feasible. In particular, manually assigned ratings are time-intensive and suffer from several drawbacks, such as unfairness, discrimination or low incentives for humans to provide trust ratings. Moreover, in the mentioned mixed system, software services demand for mechanisms to determine trust relations to other services. Much research effort has been spent on defining and formalizing trust models (for instance <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16]</ref>). Although most of these models are closely related, e.g. in terms of concepts for recommendation and reputation, we add the following novel contributions.</p><p>Personalized trust inference: A fundamental characteristic of trust is its subjective perception. Humans have different requirements to establish trust to others. Therefore, we use a rule-based system, relying on fuzzy set theory that allows each participant of the network to define his/her own rules and influencing factors to establish trust. Instead of a 'hard-wired' logic to determine trust, we enable participants to model their individual trust perception, e.g., their optimistic and pessimistic views.</p><p>Multi-faceted trust: We support the diversity of trust by enabling the flexible aggregation of various interaction metrics that are determined by observing ongoing collaborations. Furthermore, data from other sources, such as human profiles and skills, as well as service features and capabilities may influence the trust inference process.</p><p>Compositional trust: The majority of today's trust models in the agent domain, such as typical buyer-seller scenarios, deal with the establishment of trust between exactly two entities. In contrast to that, we focus a compositional perspective, and study trust in group formation processes and compositions of services. In our environment, we understand compositions not from a structural perspective with pre-defined interaction paths (e.g., as in BPEL), but from a dynamic point of view, where members of the network select interaction partners flexibly <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">The cycle of trust</head><p>Previously, we introduced a conceptual approach for determining trust based on interactions: the cycle of trust <ref type="bibr" target="#b4">[5]</ref>. This cycle, adopting the MAPE concept <ref type="bibr" target="#b17">[18]</ref>, consists of four phases, which are M onitor, A nalyze, P lan and E xecute. Periodically running through these four phases establishes a kind of environmental feedback control, and therefore allows to adapt to varying circumstances. Applied in our environment, we are able to infer trust dynamically during ongoing collaborations. In the monitoring phase the trust management system observes interactions between humans and services, including their types, context and success. In the analyzing phase interactions are used to infer trust relationships. For this purpose, interaction metrics are calculated and interpreted using personal trust rule sets that depend on the purpose of and situation for trust determination. The following planning phase covers the set up of collaboration scenarios, including user activities and human-, and service compositions, taking the inferred trust relations into account. The execution phase provides support to enhance the execution of planned collaboration, including observing activity deadlines, checking the availability of actors, and compensation of resource limitations. The interactions of actors are observed in the execution phase; and the loop is closed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">From interactions to social trust</head><p>In this paper, we demonstrate the inference of trust depending on captured collaboration data considering individual trust perceptions. Conceptually we follow a three layer approach (Fig. <ref type="figure" target="#fig_9">2</ref>), realizing trust emergence concepts that support our motivating scenario.</p><p>Interaction layer: On the bottom layer logging and analyzing of interactions take place. From atomic interactions, more meaningful and aggregated interaction metrics are extracted in subsequent time intervals by the means of message correlation and pattern detection. Domain-specific interaction metrics are determined in pre-configured scopes.</p><p>Personal trust layer: On the middle layer interaction metrics are combined and weighted individually ('interpreted') by applying configured rules, and a fundamental trust network is established. These personal trust relations reflect the individual trust perception of the actors.</p><p>Trust projection layer: On the top-layer potential future trust relations are predicted where no personal trust has been established yet.</p><p>While the interaction-and trust metrics on the first two layers are calculated offline in fixed subsequent time intervals (due to potentially high computational effort for personalized trust relations in large networks), trust projection on the top layer is performed dynamically when needed. In the following we discuss the three layers in detail focusing on personal trust.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Interaction layer</head><p>The identified key concepts on that layer are (i) harnessing diverse available collaboration data, (ii) enabling and capturing various types of interactions in SOAbased mixed systems environments, (iii) accounting for context models associated with these interactions, and (iv) defining trust scopes to allow a rule-based inference of trust from observed interactions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1.">Collaboration data</head><p>Recently, various trust models have been published relying on various mathematical concepts, e.g. probability <ref type="bibr" target="#b18">[19]</ref><ref type="bibr" target="#b19">[20]</ref><ref type="bibr" target="#b20">[21]</ref> or reasoning rules <ref type="bibr" target="#b21">[22]</ref>. Most works make no assumption about the data used to determine trust, so trust models are completely decoupled from the data underneath. In particular, many approaches account only for one-dimensional manual user feedback (rating) and categorize interactions only in cooperative and defective ones. However, the support of automatic inference demands for observable evidence of trust. Therefore, the large part of used data comes from observing interactions (see the research area of complex event processing<ref type="foot" target="#foot_1">1</ref> ). Besides interactions, there are more data sources in collaborative and social networks that can be used to express the diversity of trust, and are utilized for some higher level trust projection concepts.</p><p>Finally, we identified the following sources, common in most large-scale SOA-based networks, such as described in the motivating use case:</p><p>Interactions: Interactions provide evidence about the success of previous collaboration encounters. We categorize in fundamental interactions, such as e-mail traffic, instant messaging, VoIP communication and SOAP/REST-based service invocations; and in higherlevel interactions, mostly relying on fundamental interactions, but annotated with their semantic meaning, e.g., file exchange, report submission, and task delegation.</p><p>Profiles: Profiles contain valuable information about actors. Human profiles are about professional background, job position, skills, and expertises; service profiles can contain vendor information, features, and capabilities. Similarities of profiles are utilized by higher-level trust concepts, including trust mirroring and teleportation (detailed in the following sections). Profiles may be entered completely manually, or are (partly) determined dynamically based on interactions. An example for inferring expertise from activity involvements can be found in <ref type="bibr" target="#b22">[23]</ref>.</p><p>Structural relations and hierarchies: Knowledge about memberships in groups, roles of humans or services, joint activities and projects can be used to extend the notion and perception of trust. For instance, in a business environment someone may require that potentially trusted partners are members in the same team or are employed by a certain organization.</p><p>Manually declared relations: Nowadays, standardized technologies for specifying friend (buddy) networks (FOAF,<ref type="foot" target="#foot_2">2</ref> XFN<ref type="foot" target="#foot_3">3</ref> ) are used. This enables, people on the one side to define trust relationships explicitly, but on the other side also distrust ('foes'). Using such explicit commitments may override and fine-tune automatically inferred relations. Capturing all these information may raise privacy concerns. However, neither content of interaction messages is stored nor semantic analysis is performed. We follow a pure structural approach, which makes extensive use of metadata instead of the actual message content. Furthermore, after analyzing interactions, logs can be deleted, and there remain only higher level metrics. Data are stored and managed by a centralized architecture, so there is no need to propagate sensitive data through the network (as in peer-to-peer networks).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2.">Context-aware interaction observation</head><p>Our approach considers two different levels of interactions. On the bottom level we capture basic interactions, including fundamental exchanges of e-mail messages, VoIP calls, instant messages, and basic Web services invocations via SOAP or REST. In most cases there is no possibility to determine the semantic meaning of these interactions, i.e., the reason for initiating a Skype call. It can be only observed if a call is accepted and its duration. However, on the top level, Web service enabled interactions, using dedicated tools for delegating activities, performing periodic reports, and requesting help and support, provide more information on the reason of interactions and nature of collaboration.</p><p>Furthermore, in mixed service-oriented systems, consisting of humans and software services, we distinguish interactions according to the type of interacting entities. Our framework-VieTE-accounts for the following types of interactions: (i) human-human, including instant messaging and e-mail via dedicated services with integrated interaction sensors; (ii) human-service typically service invocations via SOAP or REST interfaces, using an external access layer that intercepts and captures messages; (iii) service-human, e.g., reminder service or meeting scheduling service, notifying humans about events; (iv) service-service, in typical service compositions, e.g., modeled with BPEL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3.">Interaction metrics and scopes</head><p>Interaction metrics are calculated by observing (monitoring) interactions and further analysis. Therefore, metrics describe the interaction behavior of actors, either humans or services, in a mixed service-oriented system. Such metrics are, for instance, their responsiveness (e.g., measured by an average response time), the reliability in responding to requests, the ratio of performed to delegated tasks, or the variance in delivering periodic status reports.</p><p>However, these interaction metrics are of course valid only in particular situations. For example, interaction behavior varies depending on the risk actors are facing, or the benefit they are receiving. Depending on the environment, several external factors may influence the interaction behavior of actors, such as their motivation, interest or expertise. For example, in the outlined help and support environment in Section 2, people might be more responsive in their dedicated expertise areas than in topics outside their interests.</p><p>Therefore, we introduce the notion of scopes. In general, scopes describe what activities are relevant for determining certain interaction metrics. All interactions within relevant activities are taken into account for metrics determination. Scopes are defined specifically for a domain and depending on business areas. In the previous Expert Web use case, for instance, one scope can define that all software implementation and software testing activities should be considered, to describe someone's collaboration behavior in the area of software engineering. Other scopes could define to account for interactions regarding management activities of team leaders (e.g., delivering status reports, delegating tasks to team members etc.), or aggregate interactions from risky activities only.</p><p>The definition of scopes is supported in two different forms:</p><p>Tag-based scopes: Scopes are represented as lists of key-words (tags). All interactions within activities whose descriptions incorporate these keywords, are taken into account for metrics calculation.</p><p>Activity-based scopes: Scopes are determined by matching constraints on explicitly defined activities, e.g., matching activity type, a minimum team size to indicate mass collaboration, or a maximum risk.</p><p>All interactions that take place in the context of matching activities are considered for interaction metrics calculation. In case more than one tag is set and constraints defined, respectively, there will be interaction contexts (i.e., activities) that match only partly (e.g., only two of three tags). Then the impact of interactions on a metric is weighted based on the degree of match. More information on observing, logging, aggregating, and analyzing interactions in mixed systems, as well as calculating metrics have been studied in <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b23">24]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Personalized trust inference</head><p>We model the network of humans and services with their trust relations as a directed graph G=(V,E), where the vertices V denote the members of the network, and edges E reflect their trust relations in between. General profiles of network members are attached to the vertices. Furthermore, both vertices and edges are annotated with various metrics that describe collaboration behaviors of network members and their relationships. A community comprises a subset of vertices (and references to their connecting edges). Fig. <ref type="figure" target="#fig_2">3</ref> visualizes this model.</p><p>We distinguish the following classes of metrics:</p><p>Interaction metrics (subsets of MEdge) describe the interaction behavior as explained before, such as an actor's responsiveness and reliability in distinct scopes.</p><p>Similarity metrics (subsets of MEdge) provide information about skill-, feature-, or expertise similarities, depending on the type of actors.</p><p>Trust metrics (subsets of MEdge) are interpreted from interaction-and similarity metrics, e.g., personal trust, symmetry of trust relations (bidirectional trust) and trust trends in certain time intervals.</p><p>Collaboration metrics (MCollaboration) are bound to a user, and describe independent from collaboration partners someone's previous experiences, such as collected expertise by performing activities, and behavior, e.g., reciprocity <ref type="bibr" target="#b8">[9]</ref>. Furthermore, edge metrics can be aggregated to calculate collaboration metrics; for instance, an average value of someone's responsiveness or availability.</p><p>Group metrics (MGroup) provide information about average values and distribution of vertex-and edge metrics in a community, therefore, they are a valuable mean to determine a metric value relative to others in the same group. Users of the system, i.e., the network members, specify rules for evaluating calculated interaction metrics to trust. For this purpose, we utilize an approach based on fuzzy set theory (see more details in the next section) that (i) enables users to express their rules in almost natural language (similar to a domain specific language), and (ii) offers elegant and efficient mechanisms to aggregate fuzzy expressions of trust.</p><p>We decided to build a rule-based system, instead of a certain analytical model, because of the flexibility of the environment. Humans and services (i.e., service vendors) should be able to define their personal rules that have to be satisfied to establish trust in others. For instance, let us assume the members of the network want to describe influencing factors for establishing trust in a software engineer. There are various factors on that trust may rely: (i) based on formal skills provided by profiles including certificates such as university degrees, (ii) based on collected experience and previous success (e.g., performed activities of different types in the scope of software engineering), (iii) based on particular interaction behavior, such as support reliability and quality in the previously introduced Expert Web use case), or (iv) accounting for capabilities and behavior in related scopes of software engineering. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Trust projection layer</head><p>In large-scale networks with thousands of humans and services, each member interacts only with a small amount of potential partners leading only to a small portion of personal trust relations from each member's point of view. Therefore, several concepts have been introduced to predict not existing relations, e.g., recommendation by the means of trust propagation, and reputation by the means of trust aggregation. We extend this list by three novel concepts, based on the similarities of actors, their trust perceptions, and the situations described by context data.</p><p>Trust mapping deals with using trust relations established in other, but to some extent similar scopes (e.g., related expertise areas).</p><p>Trust mirroring <ref type="bibr" target="#b11">[12]</ref>, implies that actors with similar profiles (interests, skills, community membership), tend to trust each other more than completely unknown actors.</p><p>Trust teleportation <ref type="bibr" target="#b11">[12]</ref> rests on the similarity of human or service capabilities, and describes that trust in a member of a certain community can be teleported to other members. For instance, if an actor, belonging to a certain expert group, is trusted because of his distinguished knowledge, other members of the same group may benefit from this trust relation as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Fuzzy set theory for trust inference</head><p>Fuzzy set theory, developed by Zadeh et al. <ref type="bibr" target="#b24">[25]</ref>, and fuzzy logic emerged in the domain of control engineering, but are nowadays more and more used in computer science to enable lightweight reasoning on a set of imperfect data or knowledge. The concept of fuzziness has been used earlier in trust models <ref type="bibr" target="#b25">[26]</ref><ref type="bibr" target="#b26">[27]</ref><ref type="bibr" target="#b27">[28]</ref>, however, to our best knowledge not to enable a personalized interpretation of trust from larger and diverse sets of metrics, calculated upon observable interactions. As fuzzy inference is a key mechanisms of our trust model, we introduce the fundamental definitions in this section. There exists various further literature on fuzzy set theory, for instance <ref type="bibr" target="#b28">[29]</ref>.</p><p>Zadeh et al. <ref type="bibr" target="#b24">[25]</ref> defined a fuzzy set A in X (A DX) to be characterized by a membership function m A ðxÞ : X/½0; 1 which associates with each point in X a real number in the interval [0,1], with the value of m A ðxÞ at x representing the 'grade of membership' of x in A. Thus, the nearer the value of m A ðxÞ to 1, the higher the grade of membership of x in A.</p><p>When A is a set in the ordinary sense of the term, its membership function can take only two values (m A ðxÞ : X/f0; 1g, Eq. ( <ref type="formula" target="#formula_0">1</ref>), according as x does or does not belong to A. Thus, in this case m A ðxÞ reduces to the familiar characteristic function of a set A.</p><formula xml:id="formula_0">m A ðxÞ ¼ 1 if x 2 A 0 if x= 2A (<label>ð1Þ</label></formula><p>Eq. ( <ref type="formula" target="#formula_1">2</ref>) depicts an example definition of a membership function m A ðxÞ describing a fuzzy set. This membership function is part of the linguistic variable 'responsiveness' highlighted in Fig. <ref type="figure" target="#fig_3">4</ref>(a), left side.</p><formula xml:id="formula_1">m A ðxÞ ¼ 0 i f0 rx o12 x 12 À1 if 12rx o 24 1 i f2 4 rx o 48 À x 12 À5 if 48rx o 60 0 else 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; :<label>ð2Þ</label></formula><p>ARTICLE IN PRESS  Two or more fuzzy sets, describing the same characteristic (i.e., metric), can be merged to a linguistic variable.For instance in Fig. <ref type="figure" target="#fig_3">4</ref>(a), the linguistic variable 'responsiveness' is described by three fuzzy sets: high, medium, and low.</p><p>The definition of linguistic variables (and the their single membership functions, respectively), has to be performed carefully as they determine the operation of the reasoning process. Linguistic variables are defined either for the whole community, or for groups, and even single network members, by: A domain expert, using his experience and expertise. However, depending on the complexity of the rules and aggregated metrics continuous manual adjustments are needed (especially when bootstrapping the trust system).</p><p>The system itself based on knowledge about the whole community. For instance, the definition of a 'high' skill level is determined by the best 10% of all network members in certain areas.</p><p>The users based on individual constraints. For example, a 'high' skill level from user u's point of view starts with having more than the double score of himself.</p><p>Let X A and X B be two feature spaces, and sets that are describes by their membership function m A and m B , respectively. A fuzzy relation m R ðx A ; x B Þ : X A Â X B /½0; 1 describes the set X, whereas m R ðx A ; x B Þ associates each element (x A ,x B ) from the cartesian product X A Â X B a membership degree in [0,1]. Fuzzy relations are defined by a rule base (see example in Listing 1), where each rule, as shown in Eq. ( <ref type="formula" target="#formula_2">3</ref>), comprises a premise p (condition to be met) and a conclusion c:</p><formula xml:id="formula_2">IF p THEN c<label>ð3Þ</label></formula><p>Listing 1. Given the linguistic variables response time t r , success rate sr, and trust t, with the membership functions as defined in Fig. <ref type="figure" target="#fig_3">4</ref>, we provide this rule base to the fuzzy engine.</p><p>Approximate reasoning by evaluating the aforementioned rule base, needs some fuzzy operators to be defined <ref type="bibr" target="#b24">[25]</ref>: OR, AND, and NOT.</p><formula xml:id="formula_3">A OR B A [ B mðxÞ ¼ maxðm A ðxÞ; m B ðxÞÞ for x 2 X<label>ð4Þ</label></formula><formula xml:id="formula_4">A AND B A \ B mðxÞ ¼ minðm A ðxÞ; m B ðxÞÞ for x 2 X ð5Þ NOT A mðxÞ ¼ 1Àm A ðxÞ for x 2 X<label>ð6Þ</label></formula><p>The defuzzification operation <ref type="bibr" target="#b29">[30]</ref> determines a discrete (sharp) value x s from the inferred fuzzy set X. For that purpose all single results obtained by evaluating rules (see Fig. <ref type="figure" target="#fig_11">4(b)</ref>) are combined, forming a geometric shape. One of the most common defuzzification methods is to determine the center of gravity of this shape, as depicted in the example in Fig. <ref type="figure" target="#fig_11">4(c</ref>). In general, center of gravity defuzzification determines the component x of x s of the area below the membership function m x ðxÞ (see Eq. ( <ref type="formula" target="#formula_5">7</ref>)).</p><formula xml:id="formula_5">x s ¼ R x x Á m x ðxÞ Á dx R x m x ðxÞ Á dx<label>ð7Þ</label></formula><p>Fig. <ref type="figure">5</ref> depicts possible trust values after defuzzification for metrics t r and sr when applying membership functions defined in Fig. <ref type="figure" target="#fig_3">4</ref> and the rule base in Listing 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Trust model definitions</head><p>The trust model manages context-dependent trust between actors, i.e., humans and services, emerging from interactions (see Fig. <ref type="figure" target="#fig_7">7(a)</ref>) that are captured and interpreted. A trust relation is always asymmetric, i.e., a directed edge from one vertex to another one in G. We call the trusting actor the trustor u (the source of an edge), and the trusted entity the trustee v (the sink of an edge). Analyzed interactions are any kind of communication, coordination or execution actions initiated by u regarding v. The context of interactions reflects the situation and reason for their occurrences, and is modeled as activities. Activities, as presented in <ref type="bibr" target="#b4">[5]</ref> and shortly discussed before, describe work-relevant context elements. When interactions are interpreted, only a minor subset of all describing context elements is relevant within a trust scope. In the motivating use case of this paper, such a trust scope may describe the expertise area. define conditions to be met by metrics M for interpreting trustworthy behavior, e.g., 'the responsiveness of the trustee must be high' or 'a trustworthy software programmer must have collected at least average experiences in software integration activities'. Rules reflect a user's trust perception, e.g., pessimists may demand for stricter trustworthy behavior, than optimists.</p><p>On top of metrics, the confidence c s ðu; vÞ 2 ½0; 1 of u in v in scope s is determined. This confidence upon available interaction-, collaboration-, and similarity metrics M(u,v) that describe the relationship from u to v, represents recent evidence that an actor behaves dependably, securely and reliably. Besides highly dynamic interaction metrics, actor profiles P may be considered during calculation, e.g., a human actor's education or a service's vendor. The function C s c (Eq. ( <ref type="formula">8</ref>)) evaluates u's fuzzy rule set R c (u) to determine confidence c in scope s in his collaboration partners (e.g., v). This confidence value is normalized to [0,1] according to the evaluation results of the rule base: The reliability of confidence rðc s ðu; vÞÞ 2 ½0; 1, ranging from totally uncertain to fully confirmed, depends mainly on the amount of data used to calculate confidence (more data provide higher evidence), and the variance of metric values collected over time (e.g., stable interaction behavior is more trustworthy; see later about temporal evolvement). The function C s r (Eq. ( <ref type="formula">9</ref>)) determines the reliability r of confidence c s (u,v) relying on utilized metrics in R c (u). As the determination of reliability can be quite complex (considering temporal trends and variances of metrics), and the additional personal setup of this measure could be very demanding for the end-users, we let a domain expert configure a global reliability measure that accounts for metrics in R c (u) of respective network members: rðc s ðu; vÞÞ ¼ C s r ðu; Mðu; vÞ; PðvÞ; R c ðuÞ; sÞ ð 9Þ</p><p>Our engine infers personal trust t s ðu; vÞ 2 ½0; 1 by combining confidence with its reliability (see operator in Eq. ( <ref type="formula" target="#formula_6">10</ref>)). This can be performed either rule-based by attenuating confidence respecting reliability, or arithmetically, for instance by multiplying confidence with reliability (as both are scaled to the interval [0,1]). Since trust relies directly on confidence that is inferred by evaluating personal rules, an actor's personal trust relation in this model indeed reflects its subjective criteria for trusting another actor:</p><p>t s ðu; vÞ ¼ /c s ðu; vÞ; rðc s ðu; vÞÞ; S</p><p>We introduce the trust vector T s ðuÞ to enable efficient trust management in the Web of Trust. This vector is combined of single personal trust relations (outgoing edges of a vertex in G) from an actor u to others in scope s (Eq. ( <ref type="formula" target="#formula_7">11</ref>)):</p><p>T s ðuÞ ¼ /t s ðu; vÞ; t s ðu; wÞ; t s ðu; xÞ; . . . S</p><p>The trust matrix T s comprises trust vectors of all actors in the environment, and is therefore the adjacency matrix of the mentioned trust graph G. In this matrix, as shown in Eq. <ref type="bibr" target="#b11">(12)</ref>  </p><formula xml:id="formula_8">0 B B B B @ 1 C C C C A<label>ð12Þ</label></formula><p>In cases where actors define their personalized trust inference rules, the trust perception p s t ðuÞ represents the 'trusting behavior' of u, i.e., its attitude to trust others in scope s. The absolute value of p s t ðuÞ is not of major importance, but it is meaningful to compare the trust perceptions of various actors. Basically, this is performed by comparing their rule bases for trust inference (Eq. ( <ref type="formula">13</ref>)), e.g., if actors account for the same metrics, or if they are shaped by optimism or pessimism. Therefore, more similar rules means more similar requirements for trust establishment. The application of trust perception becomes clear when discussing the trust projection concepts, such as weighting received recommendations based on the similarity of the recommender's trust perception: sim percep ðp s t ðuÞ; p s t ðvÞÞ ¼ simðR s c ðuÞ; R s c ðvÞÞ ð13Þ</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Temporal evaluation</head><p>Personal trust t s ðu; vÞ from u in v is updated periodically in successive time intervals t i , numbered with consecutive integers starting with zero. We denote the personal trust value calculated at time step i as t s i . As trust is evolving over time, we do not simply replace old values, i.e., t s iÀ1 , with newer ones, but merge them according to pre-defined rules. For this purpose we apply the concept of exponential moving average, <ref type="foot" target="#foot_4">4</ref> to smoothen the sequence of calculated trust values as shown in Eq. <ref type="bibr" target="#b13">(14)</ref>.</p><formula xml:id="formula_9">t s i ¼ a Á Dt s i þð1ÀaÞ Á t s iÀ1<label>ð14Þ</label></formula><p>With this method, we are able to adjust the importance of the most recent trust behavior Dt s compared to history trust values t s (smoothing factor a 2 ½0; 1). In case, there are no interactions between two entities, but an existing trust relation, the reliability of this trust relation is lowered by a small amount each evaluation interval. Therefore, equal to reality, trust between entities is reduced stepwise, if they do not interact frequently: Fig. <ref type="figure" target="#fig_6">6</ref>(a) shows an example of applied EMA. The dashed line represents the trustworthiness of an actor's behavior, i.e., Dt s i , for the i th time interval, calculated independently from previous time intervals. In this extreme situation an actor behaves fully trustworthy, drops to zero, and behaves trustworthy again. Similar to reality, EMA enables us to memorize drops in recent behavior. If an actor once behaved untrustworthy, it will likely take some time to regain full trust again. Therefore, depending on the selected tuning parameter a, different strategies for merging current trust values with the history can be realized. According to Eq. ( <ref type="formula" target="#formula_9">14</ref>), for a40:5 the actual behavior is counted more, otherwise the history gains more importance. Fig. <ref type="figure" target="#fig_6">6</ref>(a) shows three smoothened time lines, calculated with different smoothing factors. There exist several other approaches to trust evolution which work with deep histories, e.g., <ref type="bibr" target="#b30">[31]</ref>, however, EMA requires less memory and lower computational effort.</p><p>As shown in Fig. <ref type="figure" target="#fig_6">6</ref>(a), by applying EMA previous or current behavior is given more importance. However, personal traits, such as being optimistic or pessimistic, demands for more sophisticated rules of temporal evaluation. In our case, we define an optimist as somebody who predominantly remembers positive and contributing behavior and tends to quickly forgive short-term unreliability. In contrast to that, a pessimist loses trust also for short-term unreliability and needs more time to regain trust than the optimist. Examples of this behavior are depicted by Fig. <ref type="figure" target="#fig_6">6(b</ref>). Optimistic and pessimistic perceptions are realized by adapting the smoothing factor a according to Eq. <ref type="bibr" target="#b14">(15)</ref>. Whenever the curve depicted in Fig. <ref type="figure" target="#fig_6">6</ref>(b) changes its sign, t s i is re-calculated with adapted a. A small deviation e denotes that the smoothing factor is either near 0 or near 1, depending on falling or rising trustworthiness. An enhanced version of this approach may adapt parameters in more fine-grained intervals, for instance, by considering lower and higher drops/rises of trustworthiness.</p><formula xml:id="formula_10">a ¼ 0 þ e if optimistic and t s i ot s iÀ1 1Àe if optimistic and t s i Zt s iÀ1 0 þ e if pessimistic and t s i Z t s iÀ1 1Àe if pessimistic and t s i o t s iÀ1 8 &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; :<label>ð15Þ</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Trust projection</head><p>The concepts of trust projection combine existing personal trust relations or compare the similarity of profiles to predict potentially emerging trust relations.</p><p>Projected relations, predicted by the means of recommendation or reputation, are fundamentally different from personal trust relations, because they do not rely on personal experience, therefore, not personally proven.</p><p>Trust mapping: t map describes a mechanism to predict a trust relation in a particular scope s, when trust relations between the same actors in different, but to some extent similar scopes S ¼ fs x jt sx ðu; vÞa ?g, already have been established. For instance, if a trust relation in an engineer regarding software implementation activities has already been established, this relation can be mapped to software modeling as well. However, a good programmer may not be a good software architect, the software programmer may be trusted because of his knowledge, experience, and expertise, that are similar for both types of activities. Therefore, we define trust mapping to rely on the similarity of scopes. Trust t sx ðu; vÞ can be mapped to scope s. For that purpose each t sx is weighted and attenuated by the scope similarity, as shown in Eq. ( <ref type="formula" target="#formula_12">16</ref>). We assume that the function sim scope (s 1 ,s 2 ) returns the similarity of two scopes between 0 (totally different) and 1 (totally equal). An example of sim scope for tag-based scope definitions, is measuring the amount of matching tags: </p><formula xml:id="formula_11">t</formula><p>Recommendation: t s rec ðu; vÞ is built by aggregating u's trustees' trust relations to v. Recommendation represents therefore second-hand experiences. Potential recommenders of u for v are all Rec Dfn 2 Vjt s ðu; nÞa ? 4t s ðn; vÞ a ?g. According to Fig. <ref type="figure" target="#fig_7">7(c</ref>), the recommenders' Rec={w,x} perception of trust will likely be different from the actor's u perception (that is receiving the recommendation), because all of them define trust upon different rule sets. For instance, optimists generally tend to provide better recommendations of third parties than pessimists. Considering p s t allows to account for differences in trust perceptions between the set of recommenders Rec and a user u of recommendations. Thus, u could define to utilize only recommendations of trustees having similar perceptions of trust, i.e., p s t ðuÞ % p s t ðwÞ % p s t ðxÞ. As common in other models, e.g., <ref type="bibr" target="#b6">[7]</ref>, we weight the recommendation of each w 2 Rec with the trustworthiness of u in w (Eq. ( <ref type="formula">17</ref>)): </p><formula xml:id="formula_13">t</formula><p>Trust teleportation: t tel is applied as depicted in Fig. <ref type="figure" target="#fig_7">7</ref>(f).</p><p>We assume that u has established a trust relationship to w in the past, for example, based on w's capabilities to assist u in work activities. Therefore, others having interests and capabilities similar to w may become similarly trusted by u in the future. In contrast to mirroring, trust teleportation is applied in environments comprising actors with different roles. For example, a manager might trust a software developer belonging to a certain group. Other members in the same group may benefit from the existing trust relationship by being recommended as trustworthy as well. We attempt to predict the amount of future trust from u to v by comparing w's and v's profiles P s , especially the parts relevant in scope s. Eq. ( <ref type="formula" target="#formula_15">20</ref>) deals with a generalized case where several trust relations from u to members of a group Tele(&amp; T s ðuÞ) are teleported to a still untrusted actor v. Similar to trust mapping, teleportation is weighted and attenuated by the similarity measurement results for actor profiles (see <ref type="bibr" target="#b11">[12]</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Towards flexible compositions</head><p>Established trust relations advise network members to keep interacting with successful (and thus trusted) collaboration partners, and to avoid-or even refuseinteractions with partners from unsuccessful collaborations. However, recommending actors to collaborate only with their most trusted partners might have negative side effects for the whole community. For instance in our Expert Web scenario, some actors will provide support highly above average (similar to common Internet forums). Therefore, as a small amount of network members become very popular, they will also become more and more overloaded with help and support requests. Furthermore, once somebody lost his trustors, it will be hard-if not impossible-for him/her to regain trust. An actor might lose his/her trustors not only if s/he behaves untrustworthy, but also if another one behaves more trustworthy (with respect to the configured trust inference rules). We introduce two concepts for compensating this load balancing problem that is mostly neglected, but of paramount importance in collaborative environments:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>Community balancing models enforce network members to select interaction partners not only based on trust, but considering at least one further impact, such as costs (trade-off).</p><p>Request delegation patterns enable network members to delegate incoming request to third-parties, in case they are overloaded. On the one side, this method balances the work load within a community, on the other side, it enables actors to establish trust relations to still unknown members.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.">Community balancing models</head><p>Balancing communities is essential to distribute workload in professional environments, and to facilitate the participation of erratically involved actors and newcomers in social communities. For instance, in the Expert Web use case of this paper, the load should be balanced between all members of the network. This means on the one side highly reputed actors should not become flooded with requests (e.g., for each help request, independent from how important or challenging it is, only actors with highest reputation would be chosen). On the other side, newcomers and lower reputed actors should get a chance to increase their standing and visibility within the community. Therefore, mechanisms are needed to let actors not only select experts based on trust but also further influencing factors. That is realized with trust trade-off models.</p><p>The applicability of trade-off models is highly dependent from the domain and environment. For example, for a non-profit social Web platform, where people request suggestions for planning their holidays, a trade-off model will be fundamentally different from a business oriented help and support network. Therefore, we categorize balancing models in the following two classes:</p><p>Business-oriented models rely on mechanisms of the free economy, including supply and demand. For instance, highly demanded services (usually from top reputed actors) cause higher costs on the consumer side than services offered by ordinary actors. Concepts to realize rewarding of services and payment for contributions are needed. In the Expert Web use case of this paper, actors could earn rewards for providing reliable and successful support, and would have to pay for involving and interacting with other experts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Social-oriented models, as typically applied in free and</head><p>open social platforms, have other concepts for balancing communities. For instance, reciprocity <ref type="bibr" target="#b8">[9]</ref> reflects the amount of obtained benefit from the network compared to provided contribution. Actors may be allowed to interact with high reputed community members, if they do not only exploit the network, but also contribute to a certain extent.</p><p>For both types of balancing models, reliable interaction behavior and expedient support of community members is rewarded. In a large-scale SOA environment, where potentially thousands of actors may interact and are flexibly composed for short-term collaborations, enabling automatic rewarding is highly beneficial. Instead of rating someone's contribution manually (typical human feedback), we attempt to apply automatic rewarding as far as suitable. For instance, tracking, if sent requests trigger responses, and average time spans for processing requests are common quality of service (QoS) measures in serviceoriented systems. However, simple structural interaction analysis does not account for the value of interactions. Therefore, on a more abstract level, contributions can be, at least to some extent, automatically tracked. For instance, achieving a predefined activity goal (milestone), such as creating a project artifact, or starting a follow-up activity in a process-centric environment, are strong indicators that preceding collaborations have been successful.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.1.">Business-oriented models</head><p>These models comprise concepts from the free economy, such as supply and demand, and costs and risks. In business-oriented models as applied for instance in the motivating scenario of this paper, each actor, offering support and services to others, can demand a dynamically adjustable amount of credits from service consumers. The amount of this compensation is usually directly proportional to the demand of the service, equally to the free economy. Usually high quality services with higher reputation are demanded more by network members. On the one side, this mechanism motivates actors to behave trustworthy (because than they will earn higher rewards), on the other side paying for services will urge consumers to distribute their requests between expensive (e.g., highly reputed) and cheaper (e.g., newcomer) services in the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.2.">Social-oriented models</head><p>In contrast to business-oriented system, socially inspired environments do not (primarily) account for payment. Normally, the participation in such networks is for free, however, members expect others to participate in a beneficial way. For instance, in a sharing portal, actors share files for free, however, they expect the same from others. This concept is described by reciprocity. This definition of reciprocity, motivated by studies in which repeated games are played between individuals <ref type="bibr" target="#b34">[35]</ref>, describes the expectation that actors will respond to each other in similar ways, i.e., with similar benevolence of their own. More general, reciprocity describes an actor's contributing behavior with respect to the whole community (social reciprocity). This concept can be applied in a wide range of social networks, to enable a kind of 'soft access control system'.</p><p>In a non-commercial version of the Expert Web, such an access control system can evaluate for each actor which network members (providing support services) can be contacted and interacted with. For that purpose, we define reciprocity as the ratio of obtained help from the network (i.e., delegated tasks to others), and provided help (i.e., accepted and processed tasks from others).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">Request delegation patterns</head><p>A common problem of trust and reputation mechanisms in online communities is that there emerge only a minority of highly trusted actors, while the majority remains in the background. Therefore, network members tend to consult and interact with the same (already trusted) partners again and again, leading to work overloads of these actors, and hindering the emergence of new trust relations. We utilize the means of delegations to compensate this load and interaction balancing problem that is often neglected, but of paramount importance in collaborative environments. In the motivating Expert Web scenario of this paper, actors send and process requests for support (RFS). Once an actor gets overloaded s/he should be able to delegate requests to other actors (with potentially free resources). If the receivers of such delegations behave trustworthy, i.e., respond fast and reliably, the original requesters will establish trust to them. Fig. <ref type="figure" target="#fig_8">8</ref> visualizes this model. In case of a successful delegation, u sends an RFS to v who delegates to w, and w responds directly to u. This interaction will positively impact the metrics that describe the relation from u to w, and finally tðu; wÞ increases. The relation tðu; vÞ is neither rewarded nor punished, because on the one side v did not serve u's RFS, but on the other side, v was able to successfully delegate, and thus did not harm u. The relation tðv; wÞ is also not influenced, since v is not the original requester. If a delegation fails (Fig. <ref type="figure" target="#fig_8">8(b</ref>)), i.e., an RFS is not responded, metrics that describe both tðu; vÞ and tðv; wÞ are negatively influenced (for instance the success rate is decreased), because of v's and w's unreliable behavior. But in that case, we assume that tðu; wÞ remains unchanged. Although w has not served u's request, we do not know the reasons for that behavior. For instance, a denial of service attack could maliciously harm w's reputation (the sum of trust relations), if s/he is flooded with delegated RFSs.</p><p>The described delegation mechanisms and their influence on trust are configured by a domain expert in VieTE, and are feasible for our Expert Web scenario, where all participants in the network have similar collaboration roles (in particular to provide help and support). Other delegation and trust mechanisms, accounting for different roles of network members and restrictions of delegations due to confidentiality reasons, may be desirable in other domains.</p><p>One of the major challenges to enable sophisticated balancing is to determine the receivers of delegations in the whole network. Usually, the selection will rely on trust, because, as shown in Fig. <ref type="figure" target="#fig_8">8</ref>(b), it is in v's interest to delegate successfully and not to get punished. A fundamental selection strategy randomly picks an actor from a pool of service providers that are personally trusted above a pre-defined limit. Based on each individual's interaction history, every network member has his/her own pool of trusted actors. More advanced selection models are out of scope of this paper, and are subject to further research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Architecture and implementation</head><p>We discuss the VieTE-Vienna Trust Emergence Framework <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b35">36]</ref> to research and evaluate novel concepts of trust and reputation in mixed systems environments. An overview of the framework is provided in Fig. <ref type="figure">9</ref>. Briefly, the system captures various kinds of interactions, calculates metrics, such as responsiveness, skill-Level, availability, performs a personalized rule-based interpretation of these metrics, and finally infers trust between each pair of interacting members. The main components, developed as SOAP-based Web services in Java, hosted by Axis2, <ref type="foot" target="#foot_5">5</ref> are as follows:</p><p>Interaction monitoring: Interactions are either captured by interaction sensors, included in infrastructure services, or external access layers. An example for the first case is the activity management service that notifies a logging service about activity delegations and assignments. In the second case, service invocations via SOAP are routed over an access layer that captures the SOAP messages. Later on, VieTE periodically analyzes captured interactions offline and calculates higher level interaction metrics. While the depicted architecture follows a centralized approach, the logging facilities are replicated for scalability reasons, and monitoring takes place in a distributed form. Interactions are purged in predefined time intervals, depending on the required depth of history needed by metric calculation plugins.</p><p>Activity management: Actors use activities to manage their work as introduced before. Activities are structures to describe work and its goals, as well as participating actors, used resources, and produced project artifacts. A detailed description of this model, used to capture the context of interactions, is by <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>Trust model administration: A domain expert configures certain properties of the trust inference process that are applied for all participants of the network. For instance, s/ he defines meaningful trust scopes in the given domain and business area, configures available metric calculation plugins that provide the metrics for personal trust rules, and sets up the general trust model behavior, such as temporal constraints for interaction analysis and endpoints of logging facilities.</p><p>Personal trust rules management: Personal trust rules, configured by each member of the network, enable the inference of a subjective and personalized view on trust. On the one side a fuzzy inference engine utilizes sets of trust rules to interpret available interaction metrics and establish personal trust in predefined scopes. On the other side rules configure the mode of operation of some higher level trust projection concepts to establish relations between non-interacting network members.</p><p>Social network management and provisioning: This component enables the registration of humans and services, including their individual profiles. All registered actors build the set of vertices of a trust graph G=(V, E) (see the Web of Trust in <ref type="bibr" target="#b2">[3]</ref>). We support the discovery of actors during ongoing collaborations (similar to a Web service registry), relying on actor capabilities (profiles), and periodically inferred metrics (interaction-, similarity-, collaboration-, and trust metrics). Furthermore, for evaluating the trustworthiness of small sets of actors, flexibly applied concepts of trust projection can be used. An example use case is the composition of actors to a human-service ensemble, where a group of potential participants is pre-selected based on their capabilities or professional affiliations, and finally a subset of them flexibly composed with respect to their trust relations. This mechanism enables late binding, as common in a (Web) services world.</p><p>VieTECore: The VieTE core is the heart of the VieTE framework and connects all the aforementioned components. As depicted in Fig. <ref type="figure">9</ref> it retrieves interactions from the replicated interaction management services, performs an analysis and calculates interaction metrics using metric plugins. Finally, updated metrics are interpreted and personal trust is inferred utilizing a fuzzy rule engine. These actions are periodically scheduled, e.g. on a daily or weekly basis.   The GenericResource defines common attributes and metadata associated with resources such as documents or policies. A GenericResource can encapsulate remote resources that are hosted by a collaboration infrastructure (e.g., document management). Request defines the structure of an RFS (here we show a simplified example). A Reply is the corresponding RFS response (we omitted the actual XML definition). The protocol (at the technical HPS middleware level) is asynchronous allowing RFSs to be stored, retrieved, and processed. For that purpose we implemented a middleware service (HPS Access Layer-HAL) which dispatches and routes RFSs. GetSupport depicts a WSDL message corresponding to the RFS SupportRequest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>Upon receiving such a request, HAL generates a session identifier contained in the output message AckSuppor-tRequest. A notification is sent to the requester (assuming a callback destination or notification endpoint has been provided) to deliver RFS status updates for example; processed RFSs can be retrieved via GetSupportReply. The detailed notification mechanism can be found in <ref type="bibr" target="#b22">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">Interaction monitoring and logging</head><p>The HPS Access Layer logs each service interaction (request and response message) through a logging service. RFSs and their responses, exchanged between community members, are modeled as traditional SOAP calls, but with various header extensions, as shown in Listing 4. The most important extensions are: Timestamp capture the actual creation of the message and is used to calculate temporal interaction metrics, such as average response times.</p><p>Delegation holds parameters that influence delegation behavior, such as the number of subsequent delegations numHops (to avoid circulating RFSs) and hard deadlines.</p><p>Activity uri describes the context of interactions (see <ref type="bibr" target="#b36">[37]</ref> for activity model).</p><p>MessageID enables message correlation, i.e., to properly match requests and responses.</p><p>WS-Addressing tags, besides MessageID, are used to route RFSs through the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3.">Metric calculation</head><p>Metrics describe the interaction behavior and dynamically changing properties of actors. Currently, we account for the metrics described in Table <ref type="table" target="#tab_7">1</ref> for trust interpretation upon logged SOAP calls in the Expert Web scenario. Note, as described before, these metrics are determined for particular scopes; i.e., based on a subset of interactions that meet certain constraints. The availability of a service, either provided by humans or implemented in Software, can be high in one scope, but much lower in another one. Furthermore, these metrics are calculated for each directed relation between pairs of network members. An actor u might serve v reliably, but not a third party w.</p><p>Our approach relies on mining of metrics, thus, values are not manually entered but are frequently updated by the system. This enables collaboration partners to keep track of the dynamics highly flexible largescale networks. Besides interaction behavior in terms of reliability or responsiveness, also context-aware experience mining can be conducted. This approach is explained in detail in <ref type="bibr" target="#b22">[23]</ref>.</p><p>In trust inference examples in previous sections, we accounted for the average response time t r (Eq. ( <ref type="formula" target="#formula_16">21</ref>)) of a service and its success rate sr (Eq. ( <ref type="formula" target="#formula_17">22</ref>)). These are typical metrics for an emergency help and support environment, where fast and reliable support is absolutely required, but costs can be neglected. We assume, similar complexity of requests for support (RFS) in a scope s, thus different RFSs require comparable efforts from services (similar to a traditional Internet forum).</p><p>The response time is calculated as the duration between sending (or delegating) a request (t send ) to a service and receiving the corresponding response (t receive ), averaged over all served RFSs. Unique IDs of calls (see SOAP header in Listing 4) enable sophisticated message correlation to identify corresponding messages:</p><formula xml:id="formula_16">t s r ¼ P rfs2RFS ðt receive ðrfsÞÀt send ðrfsÞÞ jRFSj<label>ð21Þ</label></formula><p>An RFS is considered successfully served (sRFS) if leading to a result before a predefined deadline, otherwise it fails (fRFS):</p><formula xml:id="formula_17">sr s ¼ numðsRFSÞ numðsRFSÞþnumðfRFSÞ<label>ð22Þ</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.4.">Trust provisioning</head><p>The Social Network Provisioning WS (see Fig. <ref type="figure">9</ref>) is a WSDL-based Web Service that provides the dynamically changing Web of Trust as standardized directed graph model. It is a major part of the VieTE framework and used by other services, such as partner discovery tools, to retrieve social relations for service personalization and customization in virtual communities. The Web service interface deals with the following fundamental types of entities:</p><p>Vertex: A vertex describes either a human, software service, or HPS.</p><p>Edge: An Edge reflects the directed relation between two vertices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Metric: Metrics describe properties of either vertices</head><p>(such as the number of interactions with all partners, or the number of involved activities) or edges (such as the number of invocations from a particular service by a particular human). Metrics are calculated from interactions and provided profiles with respect to pre-configured rule sets (e.g., only interactions of a particular type are considered in the trust determination process).</p><p>Scope: Rules determine which interactions and collaboration metrics are used for trust calculation. These rules describe the constraints for the validity of calculated metrics, i.e., the scope of their application. Common scopes are pre-configured and can be selected via the Web Service interface.</p><p>The Social Network Provisioning WS enables the successive retrieval of the Web of Trust starting with a predefined vertex, e.g., reflecting the current service user. We specify its interface as shown in Table <ref type="table" target="#tab_8">2</ref>. Note, for data retrieval, metrics are merged in the entities vertex and edge. All entities are identified by an URI, which is a combination of a basepath (e.g., http://www.infosys.tuwien.ac.at/coin), the entity type (e.g., vertex) and an integer id.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">Evaluation and discussion</head><p>In this section, we show the results of performance evaluations that discuss major design decisions and VieTE's applicability in large-scale and a functional evaluation that deals with the actual application of our trust inference approach for balancing communities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.">Computational complexity of trust management</head><p>A fundamental aspect of our trust management approach is the context-awareness of data and social relations. Due to the high complexity of large-scale networks comprising various kinds of interactions and distinct scopes of trust, we evaluate the feasibility of our framework by well-directed performance studies. We focus on the most critical parts, i.e., potential bottlenecks, in our system, in particular, on (i) trust inference upon interaction logs, (ii) profile similarity measurement for trust mirroring and teleportation, (iii) the calculation of recommendations based on mined graph structures and (iv) provisioning of graph segments to users. The conducted experiments address general technical and research problems in complex networks, such as emerging relations in evolving structures, graph operations on largescale networks, and information processing with respect to contextual constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.1.">Experiments setup and data generation</head><p>For conducting our performance studies, we generate an artificial interaction and trust network that we would expect to emerge under realistic conditions. For that purpose we utilize the preferential attachment model of Barabasi and Albert to create<ref type="foot" target="#foot_6">6</ref> network structures that are characteristic for science collaborations <ref type="bibr" target="#b37">[38]</ref>. As shown in Fig. <ref type="figure" target="#fig_12">10</ref> for a graph with 500 vertices, the output is a scale-free network with vertex degrees <ref type="foot" target="#foot_7">7</ref> following a power-law distribution. These structures are the basis for creating realistic interaction logs that are used to conduct trust inference experiments. For a graph G, we generate in total 100 Á jEj interactions between pairs of vertices (u,v). In our experiments, we assume that 80% of interactions take place between 20% of the most active users (reflected by hub vertices with high degree). Generated interactions have a particular type (support request/response, activity success/failure notification) and timestamp, and occur in one of two abstract scopes. While we payed attention on creating a realistic amount and distribution of interactions that are closely bound to vertex degrees, the interaction properties themselves, i.e., type, timestamp, do not influence the actual performance study (because they do not influence the number of required operations to process the interaction logs).</p><p>For the following experiments, VieTE's trust provisioning service is hosted on a server with Intel Xeon 3.2 GHz (quad), 10 GB RAM, running Tomcat 6 with Axis2 1.4.1 on Ubuntu Linux, and MySQL 5.0 databases. The client simulation that retrieves elements from the managed trust graph runs on a Pentium 4 with 2 GB on Windows XP, and is connected with the server through a local 100 MBit Ethernet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.2.">Trust inference performance</head><p>Through utilizing available interaction properties, we calculate the previously discussed metrics (i) average response time t r , and (ii) success rate sr (ratio of success to the sum of success and failure notifications). Individual response times are normalized to [0,1] with respect to the highest and lowest values in the whole network. The rule base to infer confidence between each pair of connected vertices has been shown in Listing 1. If the amount of interactions jIðu; vÞj between a pair (u,v) is below 10, we set the reliability of confidence to jIðu; vÞj=10, else we assume a reliability of 1. Trust is calculated by multiplying confidence with its reliability.</p><p>Interactions take place in context of activities. Instead creating artificial activity structures, we randomly assign context elements to synthetic interactions. These elements are represented by tags that are randomly selected from a predefined list. This list holds 5 different tags, and each interaction gets 2-4 of them assigned. Such tags may describe the activity type where an interaction takes place, e.g., 'software development'; but also certain constraints, e.g., 'high risk'. We define 5 scopes, each described by exactly one possible tag. Thus, each interaction belongs to 2-4 scopes; and scopes may overlap. Interactions are uniformly distributed among scopes.</p><p>We measure the required time to completely process the synthetic interaction logs, including reading logs from the interaction database (SQL), aggregating logs and calculating metrics, normalizing metrics (here only the response time, because the values of the success rate are already in [0,1]), inferring trust upon a predefined rule base, and updating the trust graph (EMA with a ¼ 0:25).</p><p>Experiments are performed for three networks of different sizes: small-scale with 100 vertices and 200 trust edges; medium-scale with 1000 vertices and 2000 edges; and large-scale with 10 000 vertices and 20 000 edges. Furthermore, trust is inferred (i) neglecting scopes (i.e., tags), (ii) for the defined scopes as above. The results in Table <ref type="table" target="#tab_10">3</ref> show that especially for medium and large networks only a periodic offline calculation is feasible. Note, the difference of computational efforts accounting for no context (no scopes) and all scopes is not as high as one might expect. The reason is that a significant amount of time is required for SOAP communication in both cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.3.">Profile similarity measurement</head><p>Trust mirroring and trust teleportation, as explained in Section 6, rely on mechanisms that the similarities of actors in terms of skills, capabilities, expertise and interests. In contrast to common top-down approaches that apply taxonomies and ontologies to define certain skills and expertise areas, we follow a mining approach that addresses inherent dynamics of flexible collaboration environments. In particular, skills and expertise as well as interests change over time, but are rarely updated if they are managed manually in a registry. Hence, we determine and update them automatically through mining. However, since trust mirroring and teleportation are mainly used in the absence of interaction data, we need to acquire other data sources.</p><p>The creation of interest profiles without explicit user input has been discussed in <ref type="bibr" target="#b11">[12]</ref>. That work assumes that users tag resources, such as bookmarks, pictures, videos, articles; and thus express their distinct interests. In particular, a dataset from citeulike<ref type="foot" target="#foot_8">8</ref> expresses people's use and understanding of scientific articles through individually assigned tags.</p><p>We use these data to create dynamically adapting interest profiles based on tags (ATPs-actor tagging profiles) and manage them in a vector space model <ref type="bibr" target="#b11">[12]</ref>. However, since arbitrary tags may be freely assignedthere is no agreed taxonomy-no strict comparison can be performed. Therefore, we cluster tags according to their similarities and compare the actors' usage of tags on higher cluster levels. For instance, actors using tags belonging to the same cluster have similar interests, even if they do not use exactly the same tags. Hierarchical clustering enables us to regulate the fuzziness of similarity measurements, i.e., the size of tag clusters. The concrete mechanisms and algorithms are described in <ref type="bibr" target="#b11">[12]</ref> and therefore out of scope of this work. But we outline the evaluation results of <ref type="bibr" target="#b11">[12]</ref> to demonstrate the applicability of automatic actor profile creation and cluster similarity measurement, supporting the realization of trust mirroring and teleportation.</p><p>We determine for 10 representative citeulike users their tagging profiles (ATPs) in the domain of social networks. Then we compare these ATPs to find out to which degree actors use similar/same tags. The fundamental question is, if we are able to effectively distinguish similarities of different degrees among ATPs. In other words, in order to apply trust mirroring and teleportation we need distinguishable similarity results; and not e.g., all ATPs somehow similar. Fig. <ref type="figure" target="#fig_13">11</ref> shows the results of various profile similarity measurements. As explained, we compare profiles with varying fuzziness, i.e., on 5 different tag cluster levels. While on L5 each tag is in its own cluster, these clusters are consecutively merged until all tags are in the same cluster (L0). Hence, on L5 the most fine-grained comparison is performed, while on L0 all profiles are virtually identical. As shown, on L2 and L3 a small set of highly similar ATPs are identified, while the majority is still recognized as different. This is the desired effect required to mirror/teleport trust only to a small subset of available actors.</p><p>From a performance perspective, retrieving tags, aggregating and clustering them, and creating profiles takes some time. Especially mining these data on the Web is time-intensive. The overall performance highly depends on external systems that provide required data, such as citeulike in our case. Therefore, further performance studies have been omitted here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.4.">Network management</head><p>This set of experiments, deal with managing trust in a graph model and the calculation of recommendation and reputation on top of a large-scale trust network with 10 000 vertices.   Several ways to implement recommendations exist. First, a client may request all recommender vertices and their relations and calculate recommendations on the client-side. However this method is simple to implement on the provider side, it is obviously the slowest one due to large amounts of transferred data. Still retrieving all recommender and relations directly from the backend database, but performing the calculation server-side, dramatically improves the performance. However, this method produces heavy load at the provider and its database and deems to be scalable. Therefore, we map the network data, i.e., a directed graph model with annotated vertices and edges, in memory and perform operations without the backend database. Since all data are held in memory, the performance of calculating recommendations online is comparable to provisioning of pre-calculated data only. Hence, we design our system with an in-memory graph model, and further measure some aspects of this design decision. Fig. <ref type="figure" target="#fig_9">12</ref>(a) illustrates required time for mapping the whole graph from the backend database to its in-memory representation. The effort increases linear with the number of vertices in the graph. Fig. <ref type="figure" target="#fig_9">12</ref>(b) shows the memory consumption for graph instances of different sizes, first for the whole Social Network Provisioning Service, and second only for the graph object itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.5.">Trust graph provisioning</head><p>Retrieving trust values of certain relations, and even recommendations as shown before, causes minor computational effort. However, imagine someone frequently wants to calculate reputation based on network structures (see TrustRank <ref type="bibr" target="#b31">[32]</ref>), would like to get notified if his neighborhood in the Web of Trust has grown to a certain size or if his collaboration partners have reached a particular experience level. Then, periodically retrieving larger segments of the trust graph G from the Social Network Provisioning Service is required. Therefore, we run some experiments to estimate the produced load in such situations.</p><p>The first experiment investigates the average size of potential collaboration partners who are either personally trusted or can be recommended (i.e., are connected through exactly one intermediate vertex). Experiment are conducted for various network sizes n and different average connection degrees of vertices. We pick random vertices from this set and run experiments for each of them until we calculate stable average results. Fig. <ref type="figure" target="#fig_10">13</ref> shows that in higher cross-linked networks (i.e., #trustees 4 2), personal relations and recommendations (so called 'second hand experiences') deem to be sufficient to discover new collaboration partners. However, in case of sparsely connected graphs, other mechanisms, such as trust mirroring or teleportation may be of high benefit.</p><p>Propagating trust over more than one intermediate vertex is of course possible (and widely applied), but leads  to significantly higher computational effort. Fig. <ref type="figure" target="#fig_15">14</ref> depicts the number of required graph operations depending on the average number of trustees (average outdegree of vertices). These graph operations mainly consist of retrieving vertices and edges, including their assigned metrics and trust values. For higher propagation path lengths pp, costs increase exponentially.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.">Interaction balancing in large-scale networks</head><p>We evaluate the functional application of the VieTE framework, by simulating typical scenarios in large-scale communities. In this experiment, we utilize the popular Repast Simphony 9 toolkit, a software bundle that enables round-based agent simulation. In contrast to researchers in the agent domain, we do not simulate our concepts by implementing different actor types and their behavior only, but we use a network of actors to provide stimuli for the actual VieTE framework. Therefore, we are not only able to evaluate the effectiveness of our new approach of fuzzy trust inference, but also the efficiency of the technical grounding based on Web service standards.</p><p>We focus on the motivational Expert Web use case from Section 2. In this scenario, a small set of simulated network members interact (sending, responding, and delegating RFSs), and these interactions are provided to the logging facilities of VieTE. The framework infers trust by calculating the described metrics t r and sr, and using the rule set of Listing 1 for behavioral interpretation. Finally, emerging trust relations between the simulated actors influence the selection of receivers of RFSs. Hence, VieTE and the simulated actor network relies on each other, and are used in a cyclic approach; exactly the same way VieTE would be used by a real Expert Web. For this demonstration, all interactions take place in the same scope.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.1.">Simulation setup</head><p>Simulated agent network: Repast Simphony offers convenient support to model different actor behavior. As an inherent part of our environment, we make no distinction between human users and software services. Each actor owns a unique id (a number), creates SOAP requests, and follows one of the following behavior models: (i) malicious actors accept all RFSs but never delegate or respond, (ii) erratic actors accept all RFSs but only process (respond directly or delegate) RFSs originally coming from requesters with odd-numbered IDs, (iii) fair players process all requests if they are not overloaded, and delegate to trustworthy network neighbors otherwise.</p><p>We set up a network comprising 15 actors, where only one is highly reputed and fully trusted by all others as depicted in Fig. <ref type="figure" target="#fig_16">15(a)</ref>. This is the typical starting point of a newly created community, where one actor invites others to join.</p><p>VieTE setup: After each simulation step (round) seven randomly picked actors send one RFS to its most trusted actor (in the beginning this will only be the highly reputed one who starts to delegate). Each actor's input queue has exactly 5 slots to buffer incoming RFSs. A request is always accepted and takes exactly one round to be served. An actor processes an RFS itself if it has a free slot in its input queue, otherwise incoming RFSs are delegated to randomly picked trusted (t 4 0:8) neighbors in the network. Note, one actor does not delegate more than one RFS per round to the same neighbor, however, an actor may receive more than one RFS from different neighbors in the same round. Delegations require one additional simulation round. There is an upper limit of 15 rounds for an RFS to be served (deadline); otherwise it is considered failed. A request can be delegated only three times (but not back to the original requester) (hops) to avoid circulating RFSs. Because the simulation utilizes only  two fully automatically determined metrics (t r and sr), and no manual rewarding of responses, we assume an RFS is successfully served if a response arrives within 15 rounds (no fake or low quality responses). After each fifth round, VieTE determines t r based on interactions in the most recent 25 rounds, and sr upon interactions in the last 50 rounds, and purges older logs. New values are merged with current ones using EMA with a fixed a ¼ 0:25.</p><note type="other">ARTICLE IN PRESS</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.2.">Simulation results</head><p>We perform 250 simulation rounds of the described scenario with the aforementioned properties, and study the network structure in certain points of the simulation. The depicted networks in Fig. <ref type="figure" target="#fig_4">15</ref> show actors with different behavior and the temporal evolvement of trust relations between them. The size of the graph's vertices depend on the amount of trust established by network neighbors. Beginning with a star structure (Fig. <ref type="figure" target="#fig_16">15(a)</ref>), the network structure in Fig. <ref type="figure" target="#fig_4">15</ref>(b) emerges after 100 rounds, and Fig. <ref type="figure" target="#fig_16">15(c</ref>) after 250 rounds, respectively. Note, since the behavior of actors is not deterministic (i.e., RFSs are sent to random neighbors that are trusted with t40:8 (lower bound of full trust; see Fig. <ref type="figure" target="#fig_3">4</ref>)), the simulation output looks differently for each simulation run, however, the overall properties of the network are similar (number and strength of emerged trust relations).</p><p>In the beginning, all RFSs are sent to actor 0, who delegates to randomly picked trusted actors. If they respond reliably, requesters establish trust in that third parties. Otherwise they lose trust in actor 0 (because of unsuccessful delegations). Therefore, actors with evennumbered IDs lose trust in actor 0 faster than oddnumbered actors, because if actor 0 delegates requests to erratic actors, they are not replied. As an additional feature in round 100, actors that are not trusted with t40:2 by at least on other network member, are removed from the network, similar to Web communities where leechers (actors that do not contribute to the network) are banned. Therefore, actors with malicious behavior disappear, while actors with erratic behavior still remain in the network. Fig. <ref type="bibr">15(d)</ref> shows a reduced view of the balanced network after 250 rounds. Only trust relations with t40:8 are visualized. As expected, most vertices have strong trust relations in at least one fair player (actors who reliably respond and delegate RFSs). However, remember that erratic actors reliably serve only requests coming from actors with odd-numbered IDs. Therefore, actor 3 and actor 9 also establish full trust in actors from this class. Note, if actor 3 and actor 9 would have re-delegated many RFSs coming from even-numbered actors to erratic actors, than those RFSs would have failed and only low trust would have emerged. However, due to the comparatively low load of the network (less than half of the actors receive RFSs per round (until n =100)), only a low amount of re-delegations occur (approx. 8% of RFSs).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">Background and related work</head><p>Flexible and context-aware collaborations: In collaborations, activities are the means to the context in which human interactions take place. Activities describe the goal of a task, the participants, utilized resources, and temporal constraints. Studies regarding activities in various work settings are described in <ref type="bibr" target="#b38">[39]</ref>. They identify patterns of complex business activities, which are then used to derive relationships and activity patterns <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b40">41]</ref>. The potential impact of activity-centric collaboration is highlighted <ref type="bibr" target="#b36">[37]</ref> with special focus on the value to individuals, teams, and enterprises. Studies on distributed teams focus on human performance and interactions <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b42">43]</ref>, even in Enterprise 2.0 environments <ref type="bibr" target="#b43">[44]</ref>. Caramba <ref type="bibr" target="#b44">[45]</ref> organizes work items of individuals as activities that can be used to manage collaborations. For example, one can see the status of an activity, who contributed to an activity, documents created within a particular activity, etc. Based on log analysis, human interaction patterns can be extracted <ref type="bibr" target="#b16">[17]</ref>.</p><p>Interactions in mixed systems: Major software vendors have been working on standards addressing the lack of human interaction support in service-oriented systems. WS-HumanTask <ref type="bibr" target="#b45">[46]</ref> and Bpel4People <ref type="bibr" target="#b9">[10]</ref> were released to address the emergent need for human interactions in business processes. These standards specify languages to model human interactions, the lifecycle of human tasks, and generic role models. Role-based access models <ref type="bibr" target="#b45">[46]</ref> are used to model responsibilities and potential task assignees in processes. While Bpel4People based applications focus on top-down modeling of business processes, mixed systems target flexible interactions and compositions of Human-Provided and software-based services. This approach is aligned with the vision of the Web 2.0, where people can actively provide services. An example for a mixed system is a virtual organization (VO) using Web 2.0 technologies. A VO is a temporary alliance of organizations that come together to share skills or core competencies and resources in order to better respond to business opportunities, and whose cooperation is supported by computer networks <ref type="bibr" target="#b46">[47]</ref>. Nowadays, virtual organizations are more and more realized with SOA concepts, regarding service discovery, service descriptions (WSDL), dynamic binding, and SOAP-based interactions. In such networks, humans may participate and provide services in a uniform way by using the HPS framework <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b22">23]</ref>.</p><p>Behavioral and social trust models for SOA: Marsh <ref type="bibr" target="#b47">[48]</ref> introduced trust as a computational concept, including a fundamental definition, a model and several related concepts impacting trust. Based on his work, various extended definitions and models have been developed. Some surveys on trust related to computer science have been performed <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b7">8]</ref>, which outline common concepts of trust, clarify the terminology and describe the most popular models. From the many existing definitions of trust, those from <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> describe that trust relies on previous interactions and collaboration encounters, which fits best to our highly flexible environment. Context dependent trust was investigated by <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b47">48]</ref>. Contextaware computing focusing modeling and sensing of context can be found in <ref type="bibr" target="#b48">[49,</ref><ref type="bibr" target="#b49">50]</ref>.</p><p>Recently, trust in social environments and serviceoriented systems has become a very important research area. SOA-based infrastructures are typically distributed comprising a large number of available services and huge amounts of interaction logs. Therefore, trust in SOA has to be managed in an automatic manner. A trust management framework for service-oriented environments has been presented in <ref type="bibr" target="#b50">[51]</ref><ref type="bibr" target="#b51">[52]</ref><ref type="bibr" target="#b52">[53]</ref>, however, without considering particular application scenarios with human actors in SOA. Although several models define trust on interactions and behavior, and account for reputation and recommendation, there is hardly any case study about the application of these models in service-oriented networks. While various theoretically sound models have been developed in the last years, fundamental research questions, such as the technical grounding in SOA and complexity of trust-aware context-sensitive data management in largescale networks are still widely unaddressed.</p><p>Depending on the environment, trust may rely on the outcome of previous interactions <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b8">9]</ref>, and the similarity of interests and skills <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b33">34]</ref>. Note, trust is not simply a synonym for quality of service (QoS). Instead, metrics expressing social behavior and influences are used in certain contexts. For instance, reciprocity <ref type="bibr" target="#b8">[9]</ref> is a concept describing that humans tend to establish a balance between provided support and obtained benefit from collaboration partners. The application of trust relations in team formations and virtual organizations has been studied before, e.g., in <ref type="bibr" target="#b53">[54,</ref><ref type="bibr" target="#b54">55]</ref>. Trust propagation models <ref type="bibr" target="#b55">[56]</ref><ref type="bibr" target="#b56">[57]</ref><ref type="bibr" target="#b57">[58]</ref><ref type="bibr" target="#b58">[59]</ref> are intuitive methods to predict relations where no personal trust emerged; e.g., transitive recommendations.</p><p>In this paper, we described an approach to trust inference that is based on fuzzy set theories. This technique has been applied in trust models before <ref type="bibr" target="#b25">[26]</ref><ref type="bibr" target="#b26">[27]</ref><ref type="bibr" target="#b27">[28]</ref>, however, to our best knowledge, not to interpret diverse sets of interaction metrics. Utilizing interaction metrics, in particular calculated between pairs of network members, enables us to incorporate a personalized and social perspective. For instance, an actor's behavior may vary toward different network members. This aspect is usually out of scope in Web Services trust models, that are often closely connected to traditional QoS approaches <ref type="bibr" target="#b59">[60]</ref>.</p><p>Bootstrapping addresses the cold start problem and refers to putting a system into operation. Trust-from our perspective-cannot be negotiated or defined in advance. It rather emerges upon interactions and behavior of actors and thus, needs a certain time span to be built. However, until enough data has been collected, interests and skills can be used to predict potentially emerging trust relations. Mining, processing, and comparing user profiles is a key concept <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b32">33]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">Conclusion and further work</head><p>Emerging service-oriented platforms no longer operate in closed enterprises. An increasing trend can be observed towards temporary alliances between companies requiring composition models to control and automate interactions between services. The resulting service-oriented application needs to be flexible supporting adaptive interactions. In this paper, we have motivated the need for adaptive interactions discussing an Expert Web scenario where people can register their skills and capabilities as services. Mixed service-oriented systems are open ecosystems comprising human-and softwarebased services. Trust mechanisms become essential in these systems because of changing actor interests and the dynamic discovery capabilities of SOA. Our trust model is based on fuzzy logic and rule-based interpretation of observed (logged) interactions. This makes the inference of trust in real systems possible as interaction data are monitored and interpreted based on pre-specified rules. We have demonstrated the application of our trust model by supporting dynamic, trust-based partner discovery and selection mechanisms. This scenario is based on advanced interaction patterns in flexible compositions such as trusted delegations to achieve load-balancing and scalability in the Expert Web. Our future work will include the deployment and evaluation of the implemented framework in cross-organizational collaboration scenarios. This will be done within the EU FP7 COIN project focusing on collaboration in VOs. The emphasis of COIN is to study new concepts and develop tools for supporting the collaboration and interoperability of networked enterprises. The end-user evaluation in COIN will discover the usability of trusted expert discovery and balancing mechanisms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Contents lists available at ScienceDirect journal homepage: www.elsevier.com/locate/infosys Information Systems ARTICLE IN PRESS 0306-4379/$ -see front matter &amp; 2010 Elsevier B.V. All rights reserved. doi:10.1016/j.is.2010.03.001</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Service-oriented large-scale collaboration in the Expert Web.</figDesc><graphic coords="2,59.21,526.07,429.84,149.47" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Social and collaborative network model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. An example showing fuzzy trust inference. Applied interaction metrics are response time t r = 18 h and success rate sr = 75%: (a) definition of membership functions and fuzzified interaction metrics; (b) four applied fuzzy rules following the max-min inference and (c) defuzzification by determining the center of gravity.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>6. 1 .Fig. 5 .</head><label>15</label><figDesc>Fig. 5. Trust values after defuzzification for all possible input values of t r and sr.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>c s ðu; vÞ ¼ C s c ðu; Mðu; vÞ; PðvÞ; R c ðuÞ; sÞ ð 8Þ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Smoothing of trust values over time: (a) evolution of trust applying EMA and (b) optimistic and pessimistic perception of trust modeled with adaptive EMA.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Trust inference concepts: (a) direct trust inference; (b) trust mapping; (c) recommendation; (d) reputation; (e) trust mirroring and (f) trust teleportation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Delegations and their impact on trust: (a) successful delegation and (b) failed delegation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>2 .</head><label>2</label><figDesc>RFS schema definition.Listing 3 shows the binding of the HPS WSDL to the (HPS) infrastructure services.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Listing 3 .</head><label>3</label><figDesc>HPS WSDL binding.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Listing 4 .</head><label>4</label><figDesc>Simplified RFS via SOAP example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Generated network applying preferential attachment: (a) scale-free graph structure and (b) power-law distribution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Similarity results among 10 realistic actor tagging profiles (ATPs).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 12 .Fig. 13 .</head><label>1213</label><figDesc>Fig. 12. Performance tests for mapping the graph model: (a) graph mapping time and (b) memory consumption.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 14 .</head><label>14</label><figDesc>Fig.<ref type="bibr" target="#b13">14</ref>. Average number of required graph operations (for different average number of trustees) to determine all neighbors of a given vertex that are reachable on a path not longer than pp.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Network structure after simulation round n= {0,100,250}. Elliptic vertices are fair players, rectangular shapes represent erratic actors, diamond shaped vertices reflect malicious actors: (a) initial n=0; (b) intermediate n= 100; (c) balanced n= 250 and (d) balanced (reduced). 9 http://repast.sourceforge.net</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>If t r is low and sr is high then trust is full If t r is low and sr is medium then trust is high If t r is medium and sr is high then trust is high If t r is medium and sr is medium then trust is medium</figDesc><table><row><cell></cell><cell>1.0</cell><cell>LOW</cell><cell></cell><cell></cell><cell>MEDIUM</cell><cell></cell><cell></cell><cell>HIGH</cell><cell>1.0</cell><cell>LOW</cell><cell>MEDIUM</cell><cell>HIGH</cell></row><row><cell>μ (t r )</cell><cell>0.75 0.5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>μ (sr)</cell><cell>0.75 0.5</cell><cell></cell></row><row><cell></cell><cell>0.25</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.25</cell><cell></cell></row><row><cell></cell><cell></cell><cell>12</cell><cell>18</cell><cell>24</cell><cell>36</cell><cell>48</cell><cell>60</cell><cell>72</cell><cell></cell><cell>10</cell><cell>50</cell><cell>75</cell><cell>100</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">response time t r [h]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>success rate sr [%]</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.0</cell><cell>LOW</cell><cell>MEDIUM</cell><cell>HIGH</cell><cell>FULL</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>μ (trust)</cell><cell>0.75 0.25 0.5</cell><cell></cell><cell>0.61</cell><cell>trust</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1.0</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>for four vertices V={u,v,w,x}, each row vector describes the trusting behavior of a particular actor ( T s ), while the column vectors describe how much an actor is trusted by others. If no relation exists, such as selfconnections, this is denoted by the symbol ?: vÞ t s ðu; wÞ t s ðu; xÞ t s ðv; uÞ ? t s ðv; wÞ t s ðv; xÞ t s ðw; uÞ t s ðw; vÞ ? t s ðw; xÞ t s ðx; uÞ t s ðx; vÞ t s ðx; wÞ ?</figDesc><table><row><cell>?</cell><cell>t s ðu;</cell></row><row><cell>T s ¼</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>vÞ Á ðsim scope ðs x ; sÞÞ 2 P sx2S sim scope ðs x ; sÞ</figDesc><table><row><cell>s map ðu; vÞ ¼</cell><cell>P sx2S t s x ðw;</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>wÞ Á ðsim profile ðP s ðwÞ; P s ðvÞÞÞ 2 P w2Tele sim profile ðP s ðwÞ; P s ðvÞÞ</figDesc><table><row><cell></cell><cell></cell><cell>for details on</cell></row><row><cell cols="3">profile similarity measurement):</cell></row><row><cell>t s tele ðu; vÞ ¼</cell><cell>P</cell><cell>w2Tele t s x ðu;</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>An excerpt of the RFS schema definitions is shown in Listing 2 defining complex data structures.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">F. Skopik et al. / Information Systems 35 (2010) 735-757</cell></row><row><cell></cell><cell></cell><cell cols="3">Social Network Provisioning WS</cell><cell cols="3">Trust Rules WS</cell><cell>Trust Administration WS</cell></row><row><cell>Provision and</cell><cell>Configuration</cell><cell>-Collaboration Metrics Members -Profiles</cell><cell cols="2">-Interaction-, Trust-, and Similarity Metrics Trust Projection Relations</cell><cell>&lt;rules&gt;</cell><cell cols="2">Trust Rules -Personal Rules -Projection Rules</cell><cell>Scope Definitions -Activity Constraints -Tag Lists</cell><cell>Metric Calculation Plugins</cell></row><row><cell></cell><cell></cell><cell cols="3">SN and Metrics Update WS</cell><cell cols="3">Trust Rules Mgmt. WS</cell><cell>Configuration Mgmt. WS</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Trust Interpretation</cell><cell></cell><cell>&lt;rules@scope&gt;</cell></row><row><cell></cell><cell></cell><cell cols="2">&lt;trust@scope&gt;</cell><cell cols="2">and Fuzzy Reasoning</cell><cell></cell><cell></cell></row><row><cell>Centralized</cell><cell>VieTECore</cell><cell cols="2">&lt;metrics@scope&gt;</cell><cell cols="2">Scope-dependent Metrics Calculation Interaction Correlation and Abstraction</cell><cell></cell><cell cols="2">&lt;context elements&gt; &lt;metric definitions&gt; &lt;scope&gt;</cell><cell>Activity Admin. WS</cell><cell>Activities -Activity Structures -Tags</cell><cell>Activity Mgmt. WS</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Interaction Retrieval</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">and Pre-Processing</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">&lt;interactions@context&gt;</cell></row><row><cell></cell><cell></cell><cell cols="2">Interaction Mgmt. WS</cell><cell cols="3">Interaction Mgmt. WS</cell><cell cols="2">Interaction Mgmt. WS</cell><cell>Interaction Mgmt. WS</cell></row><row><cell>Distributed</cell><cell>Interaction Logging</cell><cell>Interaction DB Raw Interactions -Optional Subscribers Logging WS</cell><cell></cell><cell cols="2">Interaction DB -Raw Interactions -Optional Subscribers Logging WS</cell><cell></cell><cell cols="2">Interaction DB -Raw Interactions -Optional Subscribers Logging WS</cell><cell>Interaction DB -Raw Interactions -Optional Subscribers Logging WS</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">Fig. 9. VieTE framework overview.</cell></row></table><note><p>8.1. Human provided services in the expert web</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 1</head><label>1</label><figDesc>Metrics utilized for trust inference.</figDesc><table><row><cell>Metric name</cell><cell>Range</cell><cell>Description</cell></row><row><cell>Availability</cell><cell>[0,100]</cell><cell>Ratio of accepted to received RFSs</cell></row><row><cell>Response time</cell><cell>[0,96]</cell><cell>Average response time in hours</cell></row><row><cell>Success rate</cell><cell>[0,100]</cell><cell>Amount of successfully served RFSs</cell></row><row><cell>Experience</cell><cell>½0,1</cell><cell>Number of RFSs served</cell></row><row><cell>RFS reciprocity</cell><cell>[ À 1,1]</cell><cell>Ratio of processed to sent RFSs</cell></row><row><cell>Manual reward</cell><cell>[0,5]</cell><cell>Optional manually assigned scores</cell></row><row><cell>Costs</cell><cell>[0,5]</cell><cell>Price for serving RFSs</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 2</head><label>2</label><figDesc>Social network provisioning WS interface specification.</figDesc><table><row><cell>Method name</cell><cell>Parameter</cell><cell>Description</cell></row><row><cell>getVertex</cell><cell>vertexURI</cell><cell>Get the vertex object</cell></row><row><cell></cell><cell></cell><cell>with the given uri</cell></row><row><cell cols="2">getVerticesByName vertexName</cell><cell>Get a list of vertices with</cell></row><row><cell></cell><cell>(regex)</cell><cell>matching names</cell></row><row><cell>getAllVertices</cell><cell>-</cell><cell>Get all vertices (can be</cell></row><row><cell></cell><cell></cell><cell>restricted to a maximum</cell></row><row><cell></cell><cell></cell><cell>number due to</cell></row><row><cell></cell><cell></cell><cell>performance reasons)</cell></row><row><cell>getEdge</cell><cell>edgeURI</cell><cell>Get the specified edge</cell></row><row><cell>getEdges</cell><cell>sourceVertexURI,</cell><cell>Get all directed edges</cell></row><row><cell></cell><cell>sinkVertexURI</cell><cell>from sourceVertex to</cell></row><row><cell></cell><cell></cell><cell>sinkVertex</cell></row><row><cell>getOutEdges</cell><cell cols="2">sourceVertexURI Get all out edges of the</cell></row><row><cell></cell><cell></cell><cell>specified vertex</cell></row><row><cell>getInEdges</cell><cell>sinkVertexURI</cell><cell>Get all in edges of the</cell></row><row><cell></cell><cell></cell><cell>specified vertex</cell></row><row><cell>getScope</cell><cell>scopeURI</cell><cell>Get one particular scope</cell></row><row><cell></cell><cell></cell><cell>in the network</cell></row><row><cell>getAllScopes</cell><cell></cell><cell>Get all available scopes</cell></row><row><cell></cell><cell></cell><cell>in the network</cell></row><row><cell>getSourceVertex</cell><cell>edgeURI</cell><cell>Get the vertex object</cell></row><row><cell></cell><cell></cell><cell>which is the source of</cell></row><row><cell></cell><cell></cell><cell>the given edge</cell></row><row><cell>getSinkVertex</cell><cell>edgeURI</cell><cell>Get the vertex object</cell></row><row><cell></cell><cell></cell><cell>which is the sink of the</cell></row><row><cell></cell><cell></cell><cell>given edge</cell></row><row><cell>getNeighbours</cell><cell>vertexURI,</cell><cell>Get neighbors</cell></row><row><cell></cell><cell>numHops</cell><cell>(independent of edge</cell></row><row><cell></cell><cell></cell><cell>orientation); the</cell></row><row><cell></cell><cell></cell><cell>optional parameter</cell></row><row><cell></cell><cell></cell><cell>numHops may set the</cell></row><row><cell></cell><cell></cell><cell>maximum path length</cell></row><row><cell></cell><cell></cell><cell>from the specified vertex</cell></row><row><cell></cell><cell></cell><cell>to resulting neighbours</cell></row><row><cell>getSuccessors</cell><cell cols="2">sourceVertexURI Get successors of</cell></row><row><cell></cell><cell></cell><cell>specified vertex</cell></row><row><cell>getPredecessors</cell><cell>sinkVertexURI</cell><cell>Get direct predecessors</cell></row><row><cell></cell><cell></cell><cell>of specified vertex</cell></row><row><cell>getVersion</cell><cell>-</cell><cell>Get version string</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 4</head><label>4</label><figDesc></figDesc><table><row><cell>depicts the required time in</cell></row><row><cell>seconds to calculate the recommendation t s rec ðu; vÞ, having</cell></row><row><cell>10 and 100 recommender in the same scope (i.e.,</cell></row><row><cell>intermediate vertices on connecting parallel paths (u,v)</cell></row><row><cell>of length 2).</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 3</head><label>3</label><figDesc>Trust inference performance results.</figDesc><table><row><cell>Network characteristics</cell><cell>Mode</cell><cell>Computation time</cell></row><row><cell>Small-scale</cell><cell>No scopes</cell><cell>1 m 11 s</cell></row><row><cell></cell><cell>5 scopes</cell><cell>1 m 56 s</cell></row><row><cell>Medium-scale</cell><cell>No scopes</cell><cell>11 m 41 s</cell></row><row><cell></cell><cell>5 scopes</cell><cell>19 m 48 s</cell></row><row><cell>Large-scale</cell><cell>No scopes</cell><cell>109 m 03 s</cell></row><row><cell></cell><cell>5 scopes</cell><cell>182 m 37 s</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 4</head><label>4</label><figDesc>Calculation times for t s rec with 10 and 100 recommender.</figDesc><table><row><cell>Recommendation calculation method</cell><cell>10 rec. (s)</cell><cell>100 rec. (s)</cell></row><row><cell>Client-side</cell><cell>1.1</cell><cell>6.3</cell></row><row><cell>Servicer-side (SQL)</cell><cell>0.46</cell><cell>2.2</cell></row><row><cell>Server-side (in memory model)</cell><cell>0.28</cell><cell>0.34</cell></row><row><cell>Server-side (pre-calculation)</cell><cell>0.18</cell><cell>0.18</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>F. Skopik et al. / Information Systems 35 (2010) 735-757</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>http://complexevents.com/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>Friend-Of-A-Friend http://xmlns.com/foaf/0.1/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>XHTML Friends Network http://www.gmpg.org/xfn/11.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>http://www.itl.nist.gov/div898/handbook/ F. Skopik et al. / Information Systems 35 (2010) 735-757</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_5"><p>http://ws.apache.org/axis2/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_6"><p>See JUNG graph library: http://jung.sourceforge.net.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_7"><p>The vertex size is proportional to the degree; white vertices represent 'hubs'. F. Skopik et al. / Information Systems 35 (2010) 735-757</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_8"><p>http://www.citeulike.org/</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>This work is supported by the European Union through the FP7-216256 Project COIN.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Trustworthy interaction balancing in mixed service-oriented systems</title>
		<author>
			<persName><forename type="first">F</forename><surname>Skopik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Symposium on Applied Computing (SAC)</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="801" to="808" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Unifying human and software services in web-scale collaborations</title>
		<author>
			<persName><forename type="first">D</forename><surname>Schall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-L</forename><surname>Truong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="62" to="68" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A survey of trust in computer science and the semantic web</title>
		<author>
			<persName><forename type="first">D</forename><surname>Artz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Gil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Web Semantics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="58" to="71" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A survey of trust and reputation systems for online service provision</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jøsang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ismail</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Boyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Decision Support Systems</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="618" to="644" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The cycle of trust in mixed serviceoriented systems</title>
		<author>
			<persName><forename type="first">F</forename><surname>Skopik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Euromicro Conference on Software Engineering and Advanced Applications (SEAA)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="72" to="79" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Self-adaptive software: landscape and research challenges</title>
		<author>
			<persName><forename type="first">M</forename><surname>Salehie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tahvildari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Autonomous and Adaptive Systems</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1" to="42" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An integrated trust and reputation model for open multi-agent systems</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Huynh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Shadbolt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Autonomous Agents and Multiagent Systems (AAMAS)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="119" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A survey of trust in internet applications</title>
		<author>
			<persName><forename type="first">T</forename><surname>Grandison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sloman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Surveys and Tutorials</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A computational model of trust and reputation for e-businesses</title>
		<author>
			<persName><forename type="first">L</forename><surname>Mui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mohtashemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Halberstadt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hawaii International Conferences on System Sciences (HICSS)</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page">188</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">WS-BPEL Extension for People (BPEL4People), Version 1.0</title>
		<author>
			<persName><forename type="first">A</forename><surname>Agrawal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
	<note>specification available online</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Trust and nuanced profile similarity in online social networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Golbeck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on the Web (TWEB)</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="33" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Start trusting strangers? bootstrapping and prediction of trust</title>
		<author>
			<persName><forename type="first">F</forename><surname>Skopik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Web Information Systems Engineering (WISE)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="275" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Trust and privacy concern within social networking sites: a comparison of facebook and myspace</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Hiltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Passerini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Americas Conference on Information Systems (AMCIS)</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Privacy, trust, and disclosure: exploring barriers to electronic commerce</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Metzger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Mediated Communication</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Supporting trust in virtual communities</title>
		<author>
			<persName><forename type="first">A</forename><surname>Abdul-Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hailes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hawaii International Conferences on System Sciences (HICSS)</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Social regret, a reputation model based on social relations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sabater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sierra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGecom Exchanges</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="44" to="56" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Interaction pattern detection in process oriented information systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hoffmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data and Knowledge Engineering (DKE)</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="138" to="155" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">An architectural blueprint for autonomic computing</title>
		<author>
			<persName><surname>Ibm</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Jøsang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ismail</surname></persName>
		</author>
		<title level="m">The beta reputation system, in: Bled Electronic Commerce Conference</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A probabilistic trust model for handling inaccurate reputation sources</title>
		<author>
			<persName><forename type="first">J</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T L</forename><surname>Teacy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Luck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Trust Management (iTrust)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3477</biblScope>
			<biblScope unit="page" from="193" to="209" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Formal trust model for multiagent systems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Joint Conferences on Artificial Intelligence (IJCAI)</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="1551" to="1556" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Reasoning about dynamics of trust and agent beliefs</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Orgun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Information Reuse and Integration (IRI)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="105" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Human interactions in mixed systems-architecture, protocols, and algorithms</title>
		<author>
			<persName><forename type="first">D</forename><surname>Schall</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
		<respStmt>
			<orgName>Vienna University of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Mining social networks: Uncovering interaction patterns in business processes</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Business Process Management (BPM)</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3080</biblScope>
			<biblScope unit="page" from="244" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fuzzy sets</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Zadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Control</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="338" to="353" />
			<date type="published" when="1965">1965</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A fuzzy approach to reasoning with trust, distrust and insufficient trust</title>
		<author>
			<persName><forename type="first">N</forename><surname>Griffiths</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CIA</title>
		<imprint>
			<biblScope unit="volume">4149</biblScope>
			<biblScope unit="page" from="360" to="374" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Reputation and social network analysis in multi-agent systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sabater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sierra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Autonomous Agents and Multiagent Systems (AAMAS)</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="475" to="482" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A fuzzy model for reasoning about reputation in web services</title>
		<author>
			<persName><forename type="first">W</forename><surname>Sherchan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Loke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Krishnaswamy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Symposium on Applied Computing (SAC)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="1886" to="1892" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">H.-J</forename><surname>Zimmermann</surname></persName>
		</author>
		<title level="m">Fuzzy set theory and its applications</title>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
	<note>third ed.</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Defuzzification: criteria and classification</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">V</forename><surname>Leekwijck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Kerre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="159" to="178" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Trustguard: countering vulnerabilities in reputation management for decentralized overlay networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Srivatsa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conference (WWW)</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="422" to="431" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Combating web spam with trustrank</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Gyngyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Garcia-Molina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pedersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Very Large Data Bases (VLDB)</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="576" to="587" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Investigating interactions of trust and interest similarity</title>
		<author>
			<persName><forename type="first">C.-N</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Golbeck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Decision Support Systems</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="460" to="475" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Community gravity: Measuring bidirectional effects by trust and rating on online social networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Matsuo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yamamoto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conference</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="751" to="760" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Evolution of indirect reciprocity by image scoring</title>
		<author>
			<persName><forename type="first">M</forename><surname>Nowak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sigmund</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">393</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="573" to="577" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">VieTE-enabling trust emergence in service-oriented collaborative environments</title>
		<author>
			<persName><forename type="first">F</forename><surname>Skopik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-L</forename><surname>Truong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Web Information Systems and Technologies</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="471" to="478" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Viecar-enabling selfadaptive collaboration services</title>
		<author>
			<persName><forename type="first">D</forename><surname>Schall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Dadduzio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Euromicro Conference on Software Engineering and Advanced Applications (SEAA)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="285" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Baraba ´si, statistical mechanics of complex networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Reka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reviews in Modern Physics</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="47" to="97" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Roles and relationships for unified activity management</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Harrison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Moran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Supporting Group Work (GROUP)</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="236" to="245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<author>
			<persName><forename type="first">P</forename><surname>Moody</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gruen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Muller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Moran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Business activity patterns: a new model for collaborative business applications</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="683" to="694" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Moran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Farrell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Unified activity management: supporting people in e-business</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="67" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Expertise, extraversion and group interaction styles as performance indicators in virtual teams: how do perceptions of it&apos;s performance get formed?</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Balthazard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Potter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DATA BASE</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="41" to="64" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">The role of subgroups in the communication patterns of global virtual teams</title>
		<author>
			<persName><forename type="first">N</forename><surname>Panteli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Davison</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Professional Communication</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="191" to="200" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Social web applications in enterprise</title>
		<author>
			<persName><forename type="first">J</forename><surname>Breslin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Passant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Decker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Social Semantic Web</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="251" to="267" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Caramba-a process-aware collaboration system supporting ad hoc and collaborative processes in virtual teams</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Distributed and Parallel Databases</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="45" to="66" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Web Services Human Task (ws-humantask), Version 1.0</title>
		<author>
			<persName><forename type="first">M</forename><surname>Amend</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
	<note>specification available online</note>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Collaborative networksvalue creation in a knowledge society</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Camarinha-Matos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Afsarmanesh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>PROLAMAT</publisher>
			<biblScope unit="page" from="26" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">Formalising trust as a computational concept</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Marsh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-04">April 1994</date>
		</imprint>
		<respStmt>
			<orgName>University of Stirling</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A survey on context aware systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Baldauf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Rosenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Ad Hoc Ubiquitous Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="263" to="277" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Context-aware artifacts: two development approaches</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Loke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pervasive Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="48" to="53" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Qualitative trust modeling in soa</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kovac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Trcek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems Architecture</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="255" to="263" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">A trust management framework for service-oriented environments</title>
		<author>
			<persName><forename type="first">W</forename><surname>Conner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iyengar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mikalsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Rouvellou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nahrstedt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conference</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Reputation bootstrapping for trust establishment among web services</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Malik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bouguettaya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="40" to="47" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Pathtrust: A trust-based reputation service for virtual organization formation</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kerschbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Haller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Karabulut</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Robinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Trust Management (iTrust)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="193" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Component based trust management in the context of a virtual organization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zuo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Panda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Symposium on Applied Computing</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="1582" to="1588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Propagation of trust and distrust</title>
		<author>
			<persName><forename type="first">R</forename><surname>Guha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Tomkins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International World Wide Web Conference</title>
		<imprint>
			<publisher>WWW</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="403" to="412" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title level="m" type="main">Trust-aware collaborative filtering for recommender systems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Massa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Avesani</surname></persName>
		</author>
		<editor>CoopIS, DOA, ODBASE</editor>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="492" to="508" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">On trust models and trust evaluation metrics for ad hoc networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Theodorakopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Baras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="318" to="328" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Propagation models for trust and distrust in social networks</title>
		<author>
			<persName><forename type="first">C.-N</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lausen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems Frontiers</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4-5</biblScope>
			<biblScope unit="page" from="337" to="358" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Toward autonomic web services trust and selection</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Maximilien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Service Oriented Computing</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="212" to="221" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
