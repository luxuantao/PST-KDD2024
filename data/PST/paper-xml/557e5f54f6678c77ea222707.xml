<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fractal Image Coding: A Review</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>MEMBER, IEEE</roleName><forename type="first">Arnaud</forename><forename type="middle">E</forename><surname>Jacquin</surname></persName>
						</author>
						<title level="a" type="main">Fractal Image Coding: A Review</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">964A6E0430B5B44E05A267488F7860F8</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:09+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Specifrc classes of Fractals can be used for Di-1 Image Compression or Coding. For such an application, the general problem statement is the following.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>image specified by an array of pixels, how can a computer construct a fractal imagMhe coded image-which is both visually close to the original one, and has a digital representation which requires fewer bits than the original image.</p><p>In this paper, we describe an approach to image coding based on a fractal theory of iterated contractive transformations defined piecewise. The main characteristics of this approach are that: i) it relies on the assumption that image redundancy can be eftciently captured and exploited through piecewise serf-transformability on a block-wise basis, and ii) it approximates an original image by a jhctal image, obtained from a finite number of iterations of an image transformation called a fractal code. We refer to this approach as Fractal B k k Coding.</p><p>The general coding-decoding system is based on the construction, for an original image to encode, of a fractal C O &amp; contractive image transformation for which the original image is an approximate jixed poin.-which, when applied iteratively on any initial image at the decoder, produces a sequence of images which converges to a fractal approximation of the original. The fractal code consists of a description of both an image partition and a contractive image tran$ormation defined as a list of parent and child block transformations, each specified by a small set of quantized parameters. We describe the design of such a system for the encoding of monochrome digital images at rates below 1 blpixel, without any entropy coding of the parameters of the fractal code. We also present novel ideas and extensions from the work of a number of researchers which has appeared since the publication of the fractal block coding work of the author.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Deterministic Fractals have the intrinsic property of having extremely high visual complexity while being very low in information content, as they can be described and generated by simple recursive deterministic algorithms [38]. They are mathematical objects with a high degree of redundancy in the sense that they are recursively made of transformed copies of either themselves or parts of themselves. These objects, which arise from the mathematical theory of Iterated Sequences, were first labeled mathematical "curiosities" or "monsters" by mathematicians in the beginning of the twetieth century who lacked the tools to properly analyze and understand them  <ref type="bibr">(IFS)</ref> and Recurrent Iterated Function Systems [5], [6], along with the important Collage Theorem, constitute the broad foundations of fractal image compression. However, these theories alone do not provide any constructive procedure for the "encoding" of a gray-tone image-as understood by the image coding community-i.e., in an automated way. This particular task can be performed by defining piecewise affine contractive transformations which make use of only the partial sevtransformability of images.</p><p>In this paper, we are only concemed with fully automated, robust, block-based fractal image coding schemes which can compress or encode any digital monochrome image, and can therefore truly be called image compression schemes [20], <ref type="bibr" target="#b23">[28]</ref> . The purpose of this paper is twofold. Sections II-V contain the mathematical principles as well as the description of a specific fractal image coding scheme; they are meant to acquaint readers with block-based fractal image coding. Section VI is a compilation of novel ideas and extensions which have been introduced by researchers following the publication of the initial work of the author.</p><p>The basic mathematical theory is succinctly presented in Section 11. Section I11 addresses practical issues in the design of a digital image coder based on iterated transformation theory. This covers the construction of a partition of an image support, the selection of a distortion measure, and the specification of a class of discrete contractive image transformations defined blockwise from which fractal codes are selected. In Section IV, we describe the procedure for the encoding of any monochrome digital image, given a specific fractal block coder. The procedure consists of the organized search of a "virtual codebook" obtained from a pool of domain blocks and a pool of block transformations. The result of this search is a discrete image transformation defined blockwise, which is built so as to leave the original image approximately invariant and which we call a Fractal Code. In Section V, we address the decoding or reconstruction of an image from a fractal code, present and analyze coding simulations </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">THEO~TICAL FOUNDATIONS</head><p>In this section, we briefly present the underlying mathematical principles of fractal image coding based on a theory of contractive iterated image transformations. For a broader introduction to data compression using fractal techniques, including the one-dimensional case of contour encoding, we refer the reader to a paper by Beaumont [SI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A . The Inverse Problem of Iterated Transformation Theory</head><p>Let (M, d) denote a metric space of digital images, where d is a given metricdistortion measure, and let porig be an original image that we want to encode. The inverse problem of iterated transformation theory is the construction of a contractive image trakformation T, defined from the space (M, d) to itself, for which porig is an approximate jixed point. We denote by F the set of allowed transformations: a specific subset defined a priori of the space of all contractive transformations in (M, d). The requirements on the transfonnation T are formulated as follows: and d(Plorig7 T(Porig)) is as ''close to zero" as possible. (2)</p><p>The scalar s is called the contractivity of T. Under these conditions, and provided that T has a lower complexity than the original image, T can be seen as a ~ossy' image code for porig. By repeated application of the triangular inequality [ 131 in <ref type="bibr">(M, d)</ref> and use of the contractivity of T, it is easy to show that, for any image po and any positive integer n:</p><p>From (2) and (3), and since s &lt; 1, we see that after a number of initial iterations the terms of any iterated sequence of the form:</p><p>where po is some arbitrary initial image, cluster around the original image. In a space of quantized discrete images, the sequence converges exactly to a stable image, which as a result of its iterative construction, is said to befractal [4], 1381.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Notes:</head><p>1) The closeness of P ( p 0 ) to porig is conditioned by the 2) From (3), it is clear that the convergence of the sequence depends fundamentally on s being strictly smaller than one.</p><p>3) The constant transfonnation T = porig. which has a contractivity zero and which clearly satisfies (1) and</p><p>(2), will never be in F as we are only interested in transformations which can be unambiguously described with fewer bits than the original image-a requirement for compression.</p><p>We call such a transformation T in F which satisfies (1) and (2) afractal code for porig, and say that porig is approximately self-transformable under T . This terminology is used because images produced by the above procedure are the result of the iterated application of a deterministic image transformation to an initial image, a procedure which is typical of the construction of deterministic fractal objects [4], <ref type="bibr">[38]</ref>. A block diagram of a very general fractal coding4ecoding system based on these principles is given in Fig. <ref type="figure">1</ref>. We now describe the structure of the image transformations that can be used as fractal codes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>distortion d(porig, T(Porig)).</head><p>'As opposed to "lossless"; from 7, only a visually close approximation to porig can be recovered. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Structure and Construction of Fractal Codes for Images</head><p>The realization that the redundancy in digital images can be captured through blockwise self-transformability leads us to focus our attention on a class of image transformations of the general form where Si and T; are the so-called geometric and massic parts of T;, respectively. These will be specified in Section 111-C. The application of such an image transformation T to an image p is illustrated in the diagram in Fig. <ref type="figure" target="#fig_3">2</ref>. The construction of a fractal code T for p0,ig-a contractive image transformation of the form described above under which porig is approximately blockwise selftransformable-will be done by defining the elemental 7;'s separately, and independently from one another. Thus the fractal block encoding of porig amounts to finding, for every partition index i, a transformation T; from a domain cell Di to the range cell R, such that the transformed domain block T;(pOrig1D,) is a close approximation of the original range block porig] k . We refer to the ith step as the encoding of the ith block of porig on the partition P.</p><formula xml:id="formula_0">vp E M , = (Tp)]R, O&lt;i&lt;N = Ti(P1D,)<label>(5)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="111.">DESIGN OF A FRACTAL BLOCK CODING SYSTEM</head><p>The three main issues involved in the design of a fractal block coding system are: i) the (image-dependent) partitioning of an image, ii) the choice of a measure of distortion between two images, and iii) the specification of a finite class of contractive image transformations defined consistently with a partition, and of a scheme for the quantization of their parameters. Throughout this section the design choices are those of the author. Other designs and their effects on compression rates and coded image quality will be discussed in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Image Partitions</head><p>The low-are i) easy to analyze and to classify geometrically, ii) they allow a fast evaluation of interblock distances, iii) they are easy to encode accurately, and iv) they lead to a robust encoding system-one whose performance is steady, even when source images are diverse. On the other hand, large b l o c k s 4 x 5 and above-i) allow a better exploitation of the redundancy in smooth image areas, and ii) lead to higher compression ratios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Distortion Measure</head><p>We construct a distortion measure between digital images from an interblock distortion measure. Let S(i0, j o , B) denote the square block of size B x B, with the bottom left comer at the intersection of image row io and image column j o . Let p be an T-x T-image, and fi be an approximation of p. Let p l s and fils denote their restrictions to the cell S(io,jo, B), and p i , j the gray level of pixel ( i , j ) . The L2</p><p>or root-mean-square distortion between the image blocks p1s and /lis is defined as the square root of the sum over the cell S, of the squared differences of pixel values, i.e.:</p><formula xml:id="formula_1">d ~z (~11 s 7 fi1 SI = ( p i o + i , j o + j +i,jo +j l2 . O&lt;aJ&lt;B ) 1'2 ( (9)</formula><p>We define the distance d between two images as the sum over the partition of all block distortions, and the peak signal-to-noise ratio (SNR) by</p><formula xml:id="formula_2">S N R = 1Ol0g1o ( d:$yT2) (lo)</formula><p>where d r ( p ) denotes the dynamic range of p.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. A Class of Discrete Image Transformations</head><p>In this section, we describe the class 3 of discrete contractive affine image transformations defined blockwise that the coder uses. </p><formula xml:id="formula_3">+ ~z ( i ) , ~( j ) + l + ~r ( i ) + 1 , ~( j ) + 1 ) / 4 , for all i , j E (0, -.. , B -1) (11)</formula><p>where the index functions I and J are defined by:</p><formula xml:id="formula_4">I ( i ) = i d + 22 and J ( j ) = j d + 23. (12)</formula><p>In [25], we show that this operator has contractivity one.</p><p>2) Massic Part Z: Massic transformations are those which process image blocks supported on a range cell R;. This terminology is used in order to stress the fact that these transformations affect the pixel values of the block. A few simple transformations defined in the space of discrete image blocks supported on a B x B range cell are listed below:</p><p>i</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>) Absorption at gray level go E ( ' U ~) O S ~&lt; G :</head><p>( 6 P ) i j = go.</p><p>(</p><formula xml:id="formula_5">) (14) ( W ) i , j = W a , j . (15) ii) Luminance shift by constant Ag E { &amp; w ~) o &lt; ~&lt; G : (Tp)i,j = Pi,j + Ag- iii) Contrast scaling by (Y E [0,1]:<label>13</label></formula><p>The following transformations simply shufie pixels within a range block, in a deterministic way-we call them isometries. We list in the following a list of the eight canonical isometries of a square block.</p><p>1) Identity:</p><formula xml:id="formula_6">LOP)^,^ = pi,j-<label>(16)</label></formula><p>2) Orthogonal reflection about mid-vertical axis ( j = (B -1)/2) of block:</p><p>(Llp)i,j = &amp;E-1-j.</p><p>(17)</p><p>3) Orthogonal reflection about mid-horizontal axis Color reversal s = 1 (</p><formula xml:id="formula_7">(i = (B -l ) / 2 ) of block (L2p)i,j = pE-l-i,j. (<label>18</label></formula><formula xml:id="formula_8">)</formula><formula xml:id="formula_9">Isometries s = l _ _ 4) Orthogonal reflection about first diagonal (i = j ) of block 5) Orthogonal reflection about second diagonal (i + j = B -1 ) Of block: (~4p)i,j = p ~-i -j , ~--i -i . (<label>20</label></formula><p>Some other, more complex, shuffling transformations can be constructed. In effect, massic transformations allow to generate from a single block a whole family of geometrically related transformed blocks, which provides a pool in which matching blocks will be looked for during the encoding.</p><p>The L2 contractivities of the discrete block transformations described in this section can be easily computed; the results are given in Table <ref type="table" target="#tab_3">1</ref>. As an example, we derive below the contractivity of a contrast scaling by a. As in Section III-B, S denotes the cell S(io,jo, B): so the contractivity of this particular block transformation is a.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Iv. CONSTRUCTION OF FRACTAL CODES FOR DIGITAL IMAGES</head><p>This section addresses the implementation of a specific fractal block coder based on the theoretical coding procedure described in Section 11, and on the design choices made in Section III. Here, we describe the step-by-step construction of a fractal block code for any given original image. We call the product pool 2) x 7 a global pool or virtual codebook3. The encoding of a range block is illustrated symbolically in Fig. <ref type="figure" target="#fig_9">3</ref>.</p><p>The following two sections address a way to conduct a directed search for a best pair (Di, Ti) by a priori discarding large subsets of the global pool, and by analyzing the range block to encode along with a set of candidate domain blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Pools of Domain Blocks</head><p>The maximal domain pool corresponding to a range block of size B x B can be thought of as all image blocks of size D x D ( D &gt; B ) located anywhere in the image to encode. It is typically very large, but it can be trimmed and organized in order to make the search for an optimal domain block tractable.  blocks, and midrange blocks, respectively. A shade block is "smooth" with no significant gradient. An edge block presents a strong change of intensity across a curve-often a piece of object boundary, which runs through the block. A midrange block has moderate gradient but no definite edge. It is assumed to be approximately isotropic, i.e., not to have any privileged orientation-"texture blocks" belong to this category. The total domain pool D is the union</p><formula xml:id="formula_11">D = D, U De U Dm (<label>26</label></formula><formula xml:id="formula_12">)</formula><p>where De is further split into two subclasses of simple edge blocks D,,, and mixed edge blocks Dme:</p><formula xml:id="formula_13">De = D,, U Dme. (<label>27</label></formula><formula xml:id="formula_14">)</formula><p>Details about the classification algorithm can be found in P51, [531. Shade blocks are not used as domain blocks, since i) a shade block remains a shade block under any of the block transformations that we consider, and ii) absorptions generate uniform shade blocks. We can therefore remove them from the pool. Moreover, it is easy to check that the nature of a domain block is preserved under application of any element of the transformation pool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C . Pools of Transformation</head><p>We now propose a procedure for the construction of a transformation pool 7, and for the directed search of the resulting global pool D x 7. The quantization of the parameters of the transformations is dictated by storage requirements. The description of a block transformation should be kept as simple as possible in order to obtain low JACQUIN: FRACTAL IMAGE CODING bit rates. Note that the contractivities of the transformations can be obtained by multiplying together the contractivities of the elemental transformations which compose them. For every range block p 1 ~. in the original image, our encoding procedure consists, according to the nature of the block, of one of the following.</p><p>Case I : p1 R, is a shade block.</p><p>We simply approximate p1 R, by a uniformly gray block, with gray level equal to the average gray level of p l ~, , which is denoted Jil R, . The transformation T, which generates this uniform block is simply the absorption at g, = quant (pl R, ), where the function quant represents uniform quantization with 6 b in the range <ref type="bibr">[0,</ref><ref type="bibr">255]</ref>.</p><p>Case 2: p l ~, is a midrange or an edge block. Every element p l ~, of the domain pool of the same type as the block p 1 ~~ is scanned. The analysis of a pair For midrange blocks, we restrict our attention to massic transformations that are compositions of a contrast scaling and a luminance shift, of the form</p><formula xml:id="formula_15">(p1 R, ,<label>p1</label></formula><formula xml:id="formula_16">T % ( s ~p l D , ) = a % ( s ~p l D , ) + (28)</formula><p>where a, is a contrast scaling factor whidh is allowed to take values in a set of four values smaller than one, and Ag, is computed so that the average gray levels of the range block and the scaled domain block are approximately the same, i.e., consists of a crude segmentation of the blocks p 1 ~, and S , p 1 ~, , based on the computation of histograms of gray levels [20], <ref type="bibr" target="#b20">[25]</ref>. We assume that image blocks of sufficiently small dimension can be segmented into two uniform regions, one dark, one bright, separated by a transition region. The segmented blocks are denoted pTi,, and S,p$,, respectively. After this segmentation is performed, we compute the dynamic range of the segmented blocks as the gray level difference between the bright and dark regions.</p><p>We use massic transformations that are compositions of a contrast scaling, a luminance shift, and an isometry, of the form:</p><formula xml:id="formula_17">(30)</formula><p>First, a, is computed so that p z , and S,pT;, have the same dynamic range T@,P1DJ) = Ln, ( a % P , P I D J + Agd.</p><p>It is then quantized to the nearest value in a set of four values smaller than one. Secondly, Ag; is computed and quantized so that the gray levels of either the dark </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Image Reconstruction from a Fractal Code</head><p>We use the original 512 x 512, 8-bpp image "Lena" (Fig. <ref type="figure">S</ref>), and a fractal code obtained through the encoding procedure. described in Section IV. The natural decoding scheme simply consists in iterating the fractal code T on any initial image PO. until convergence to a stable decoded image is observed.</p><p>The sequence of images {pn = P ( p ~) } r = ~ is called the reconstruction sequence for the code T , with initial image po. The mapping of an image under the fractal code is done sequentially. For each cell index i, the transformation ri is applied to the current image block over the domain cell Di, and mapped onto the range cell l&amp;. In Fig. <ref type="figure" target="#fig_12">4</ref> we show the first eight iterations of a decoding sequence corresponding to a fractal block code for the 512 x 512 "Lena" image, with the initial image "peppers."</p><p>It is interesting to consider another decoding scheme which illustrates the convergence of the iterative reconstruction procedure differently. By looking at the form of the transformations in 3, we can see that they are affine <ref type="bibr">[13]</ref> in the normed vector space (N, 11 . 11) associated with the metric space ( M , d ) ; i.e., a code T has the form:</p><formula xml:id="formula_18">(32)</formula><p>where L is a contractive linear image transformation, and vo is an image which is blockwise uniform. The Nth iterate of the reconstruction sequence can be written as</p><formula xml:id="formula_19">VP E N , T ( P ) = L ( P ) -t-vo N-1 P N = Li(uO) -k LN(PO)* (33) i=O</formula><p>The above expression for ,UN is a series expansion of order N -1. The term <ref type="bibr">Li(v0)</ref> is the ith order term of the expansion. The finite sum</p><formula xml:id="formula_20">N-1 Li(.o) i=O (34)</formula><p>is the partial sum of order N -1, and the residual term</p><formula xml:id="formula_21">LN(PO) (35)</formula><p>is the remainder of the expansion.</p><p>shown that By a result of Banach space theory [13], it can be easily</p><formula xml:id="formula_22">IILN(Po)ll I sNlboIl<label>(36)</label></formula><p>which, since s &lt; 1, is negligible for sufficiently large values of N . Note that the remainder is the only term in the expression of p~ which depends on the initial image PO. Because of the La-contractivity of 7, the L2-energy of these terms decreases to zero; i.e., the images fade to black. When the running sums of increasing order Values of the SNR between the original "Lena" image and successive terms of this last reconstruction sequence are listed in Table <ref type="table" target="#tab_4">2</ref>. Convergence is obtained within 0.1 dB of accuracy at the twelfth iteration. It turns out that this required number of iterations remains approximately the same for different initial images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Test Results</head><p>Information about the specific fractal block coding system used for the encoding of "Lena"4esign specifications, encoding procedure, and system performance-is given in Table <ref type="table" target="#tab_5">3</ref>. Under the heading "Encoding specifications," we define: i) the partition of the image support, ii)  S N R 10.7 14.1 17.4 20.8 24.0 26.8 28.9 30.2 30.8 31.1 the pool of domain blocks, and iii) the pool of transformations. Under the heading "System performance" we list: i) the bit rate4, and ii) the SNR's between the original and the decoded image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>First eight iterations of the "black-to-Lena" decoding</head><p>A coding simulation was carried out with an empirically chosen, fixed set of coding specifications. The original image is the standard 512 x 512, 8-bpp "Lena" image shown in Fig. <ref type="figure">8</ref>. It was initially split into four 256 x 256 subimages, which were encoded independently from one another. We denote by the optimal fractal block code obtained for "Lena." The image T L ~~~( ~~, ; ~) , present at the encoder, and which indicates the image quality that can expected at the decoder (see (3)), is shown in Fig. <ref type="figure">9</ref>.</p><p>The decoded image, a fractal approximation of the original, is displayed in Fig. <ref type="figure">10</ref>.</p><p>The enhanced error image, equal to five times the pixelto-pixel difference between the original and the decoded image, is displayed in Fig. <ref type="figure" target="#fig_17">11</ref>.</p><p>The performance of the encoding system, in terms of bit rates and fidelity of the decoded image to the original, is 4Section V-C addresses the way bit rates are computed, as the ratio of the number of bits necessary to describe the fractal code divided by the number of pixels in the image. given in Table <ref type="table" target="#tab_5">3</ref>. Histograms of the parameters of the parent and child transformations for T L ~~~ are plotted in Figs. <ref type="figure" target="#fig_6">6</ref> and<ref type="figure">7</ref>.</p><p>The following features of these histograms are of interest? i) the histograms of domain-to-range distances peak at zero, indicating that optimal domain blocks are often found in the immediate vichity of the range blocks, ii) the histograms of luminance shifts are approximately Laplacian, centered near zero, iii) the seven isometries of a square block listed in Section 111-C as ~1 through ~7-i.e., the nontrivial rotations and reflections-are rather seldom used.</p><p>The decoded image has an overall very good fidelity to the original. Image "textures" are well preserved although some finely textured areas, such as the turban around the hat, are slightly "smoothed out" by the encoding process. Sharp, contrasted contours, whether they are smooth, or rugged, are very accurately preserved. Some artifactual "blockiness" is visible, as is expected for the type of 5Some of these features have also been observed and exploited by other researchers in their own implementations of fractal block coders (see Section VI) memoryless block coding method used here. It is due to the use of square range blocks. However, the reconstruction is free of edge degradation in the form of a "staircase effect."</p><p>It also appears that the quality of fractal codes relies very heavily on block classification, and analysis. Most of the artifacts visible in reconstructed images are rooted either in wrong block classification or in inaccurate block analysis, both of which are most likely to occur either with very large blocks or with blocks with either weak edges or strongly contrasted textures which are difficult to classify.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Computation of Bit Rates</head><p>The complete description of an image transformation T, with respect to its storage or transmission requirements, is essential to the evaluation of compression ratios or bit rates. The important factors are: i) the description of the image partition, ii) the nature of the block transformations used, and iii) the quantization of the numerical parameters of these block transformations. No entropy coding of the transformation parameters was performed to obtain further compression.</p><p>Three distinct types of block transformations are used, depending on the nature of the range block being coded (shade, midrange, or edge). In order to compute a bit rate given complete specifications of a fractal block coding system, we first compute the information in bits needed to represent a block transformation of each type. These quantities, denoted respectively as I,, I,, and Ie, were computed from the specifications of Table <ref type="table" target="#tab_5">3</ref>, and are shown in Table <ref type="table">4</ref>. Secondly, we consider the case of a two-level square partition, with parent cells of size B x B , and child cells of size B / 2 x B / 2 . Let N,,N,, and Ne denote the total numbers-parents and children-of (range) shade, midrange, and edge blocks in the image.</p><p>The coding of a range parent block is performed in the following way. First, a pool of parent transformations6 is searched for a best transformation, according to the procedure presented in Section IV-C. The image of the parent domain block under the best transformation found-the parent matching block-is then split into four children, and distortion measures are computed between these and the child blocks in the original image. Depending on these distortions, the coding of the parent block is or is not pursued to the next level. For every child block such that the distortion is too high, a child transformation is constructed and is "appended" to the parent transformation. If either three or four child transformations are needed, the initial parent transformation is discarded altogether, and the block is coded as four child blocks. There are, therefore, twelve possible coding configurations of a parent block, which are represented symbolically in Fig. <ref type="figure" target="#fig_3">12</ref>  Each of these block transformations are from the pools of tranformations defined in Section IV-C, and are specified by a set of quantized parameters. The structure of a fractal code is illustrated in Fig. <ref type="figure" target="#fig_19">13</ref>. which the arrows indicate block transformations from domain block to range block.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Analogies with Vector Quantization</head><p>Fractal block coding is in some sense related to the image block coding technique known as vector quantization (VQ)  <ref type="table">5</ref>, we give a comparative list of features shared by both methods. We use VQ terminology, and relate it to the specific terminology introduced in this paper.</p><p>The bit rates that we obtain depend partly on the system specifications, and also partly on the complexity of the image to encode. Our coding system is therefore variable- rate. However, we found that for given specifications of a coding system, images with comparable block statistics (in terms of percentages of blocks of different types) are encoded with comparable bit rates. Also, the selection of image partitions and allowed classes of block transformations could be made in compliance with a maximum bit rate which would be computed for a "worst encoding case."</p><p>The particular system described in Sections IV and V is also plagued by high encoding complexity, something which can be remedied by improving the searching strategy for matching blocks (see Section VI).</p><p>It is important to stress the following points: Domain image blocks are not present, and not needed, at the decoder; hence the term "virtual codebook." This "codebook" is used only during the encoding phase, for the construction of the fractal code.</p><p>The encoding does not rely on the existence of any "extemal codebook" but on the redundancy present in the original image itself. The "virtual codebook" is in other words "image-adaptive'' in the sense that it is provided by the original image itself. These features are what make fractal block coding very different from vector quantization. As for the iterative reconstruction of an image, it is characteristic of fractalbased image generation techniques.</p><p>Image degradation is of roughly the same type for both types of block-coding methods, although sharp edges are very well preserved by our system. It is interesting to note that the largest block size about which strong image degradation begins to occur is the same in both systems. For (child) range blocks of size 5 x 5, the crudeness of the block classification, analysis, and segmentation algorithms used in this paper becomes apparent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. EXTENSIONS</head><p>In this Section, we present a number of extensions which </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Codebook</head><p>Training set of images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Codebook design.</head><p>Off-line transmission of codebook.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Global pool (virtual codebook)</head><p>Contracted, processed domain blocks extracted from original image.</p><p>Trimming of domain pool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>No transmission of domain blocks.</head><p>Block matching</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I Encoding of range blocks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Decoding</head><p>Image code: list of addresses of blocks in codebook.</p><p>the Fractal code: list of block transformations.</p><p>by the author in 1989-1990 <ref type="bibr" target="#b20">[25]</ref>, <ref type="bibr" target="#b21">[26]</ref>. These extensions broadly address the following issues: i) the influence of the type of image partition, pool of block transformations, and optimization of the parameters defining these transformations, ii) the reduction of the complexity of the encoding process-the search for best matching blocks in the image to encode, iii) the comparison and possible merging of fractal block coding with more traditional blockbased image coding techniques, and iv) the extension of the theory to the three-dimensional case for fractal block coding of sequences of images. We now present some very recent novel ideas and conclusions from these studies below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A . Optimaliiy of Transformation Parameters</head><p>From Section IV-C, we recall that the block transformations we used for each block type are affine and of the general form:</p><p>where the indices corresponding to the particular range and domain block considered have been dropped for simplicity.</p><p>The operator (a0J o S) is the linear part of the transformation, which corresponds to the image-adaptive part of the matching process, whereas the term Ag is the translation term. In <ref type="bibr" target="#b20">[25]</ref>, <ref type="bibr" target="#b21">[26]</ref>, this latter term was a priori restricted to be a flat luminance shift over the range block R.</p><p>In <ref type="bibr" target="#b19">[24]</ref>, Jacobs and Fisher conducted a thorough study to determine the optimal number of bits for the uniform quantization of a0 and Ag, as well as the best choice for a,,, the upper bound on a0 for all the block transformations which constitute the fractal code. In [16], Fisher et al. show that it is not necessary to impose that every block transformation be strictly contractive, i.e., amax can be chosen to be greater than one, and convergence to a stable decoded image will still hold. The study in <ref type="bibr" target="#b19">[24]</ref> leads to the optimal choice of uniform quantization of a0 and Ag with 5 and 7 b, respectively, along with a value of amax equal to 1.5. The constant term Ag can be geometrically visualized as a tilted plane in the three-dimensional space formed by the plane of the image with a third dimension for gray levels. Equivalently, this constant term can be viewed as a firstorder, two-dimensional polynomial in the row and column indexes, entirely defined by the three coefficients Q I , Q Z , and a 3 . The authors use an innerproduct space formulation of the problem of optimally deriving the three parameters, which we summarize here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Other Block Transformations and Search Complexiry Reduction</head><p>Candidate matching blocks are written as a linear combination of the processed domain block J ( Spl D)-the image-dependent part of the matching, and the three fixed basis <ref type="figure">vectors { A I ,</ref><ref type="figure">A z ,</ref><ref type="figure" target="#fig_9">A3</ref>). If the basis vectors happened to form an orthogonal set, the optimal coefficients could be easily computed without having to invert matrices. In [44], Oien et al. therefore propose to first GramSchmidt orthogonalize the fixed-basis vectors { A I , A z , A3}, then Gram-Schmidt orthogonalize each candidate domain block J ( S p l ~) to the fixed basis. This results in having to recompute only the optimal coefficient a0 for each new domain block considered, in effect decoupling the optimization of the scalar coefficients for the constant and linear parts in (40) and (41). Furthermore, the authors define smooth blocks to be those image blocks which are approximated sufficiently well by an optimal quadratic polynomial in i and j , the row and column indices of pixels in a range block, of the form</p><formula xml:id="formula_23">~( i , j ) = a$ + ali + bzj2 + blj + coij + t o , for 0 5 i , j &lt; B (43)</formula><p>for which no search is necessary. By allowing optimal quadratic polynomial approximation of smooth blocks, the percentage of image blocks which can be encoded by only a constant part increases dramatically, and the overall search complexity is greatly reduced. In [44], the authors report a reduction in encoding complexity by an order of magnitude.</p><p>A subsequent technique proposed by MONO and Dudbridge, and presented in [39]-[41], is motivated by the desire to reduce even more drastically the search for domain blocks-the main factor for long encoding times with block-based fractal image coding. Since these authors allow very few domain blocks to be searched, they, on the other hand, rely on an even "richer" pool of affine block transformations as in (a), but with translation terms of the form</p><formula xml:id="formula_24">3 3 Ag = akak + bkjk + to (<label>44</label></formula><formula xml:id="formula_25">)</formula><p>k=l k=l which are third-order polynomials in i and j , with no cross products. These constant terms, now defined by seven parameters instead of one, are optimally derived by using a least squares criterion. The authors report a significant increase in image quality by allowing these higher order shifts, as compared with the zero-order approximation case.</p><p>It was also reported by a number of authors [lo], [41] that one could do away with the seven isometries of a square block listed in Section In-C, as ~1 through LT-i-e., all nontrivial rotations and reflections, with no perceivable degradation of image quality but with a great reduction in search complexity. In [24], Jacobs et al. arrive at the same complexity reduction-without throwing away the isometries altogether-through the use of a block orientation scheme. This scheme finds, for a pair of domawrange blocks, the isometries which will give a specific block orientation; say the orientation which puts the brightest block quadrant in the upper left comer and second brightest in the upper right one. When combined, these two isometries specify an isometry which maps domain block to a range block with the same orientation. This scheme is reported to be only very slightly suboptimal, compared with the full search of eight isometries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C . Other Partitions, Other Block Shapes</head><p>We described in Sections 111-A and V-C an encoding procedure for a two-level square partion of an image into 8 x 8 and 4 x 4 blocks, referred to, respectively, as parent and child blocks. It was observed by several researchers [lo], ' I</p><p>[24], <ref type="bibr" target="#b53">[57]</ref> that by allowing more than one level of recursion in the partition, local "flatness" in images could be better exploited7. In [24], Jacobs et al. use a quadtree partirioning method to generate a partition which divides the image into nonoverlapping range blocks of sizes 32 x 32,16 x 16,8 x 8, and 4 x 4, with domain blocks always twice the respective size of the range blocks they attempt to match. Domain blocks with sides tilted at a 45' angle with respect to the sides of a square (or rectangular) image were used by Jacobs et al. in <ref type="bibr" target="#b19">[24]</ref>. These authors report that including such domain blocks results in higher encoding times, little change in compression, but increased coded image quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Fractal Block Coding and Other Block-Based Image Coding Techniques</head><p>Fractal coding is compatible with other, more traditional block coding techniques such as transform coding or vector quantization. This can be seen from ( <ref type="formula">40</ref>) where these techniques can all be modeled as complex constant tranformations with no linear part, i.e., (YO = 0. For example, Ag could be either a DCT approximation of the block, or a best codeword picked in some image-independent codebook. Attempts to determine which coding techniques are preferable for which classes of blocks are reported in [30], [45]. In [45], the authors report that it might be advantageous to encode the "complex" regions* of an image with fractal block coding and the "smooth" regions with a block-DCT encoder. Somewhat different results are reported in [30], where we compared coding results obtained by using either fractal coding for texture and edge blocks or a simple memoryless VQ scheme, where codebooks of different sizes, designed with the Linde-Buze-Gray (LBG) algorithm [34] were trained on image blocks of the same type as the blocks to encode. It appeared that for sharp-edge blocks, fractal coding performs better than VQ, but the results are very similar for texture blocks, with perhaps a slight advantage for VQ coding of texture block with an LBG codebook trained on texture blocks. Fractal block coding has also been compared to other more traditional block coding techniques such as adaptive DCT coding <ref type="bibr" target="#b19">[24]</ref>. In [24] Jacobs et al. report that their best implementation of a fractal block coding system performs comparably, but not as well, as adaptive DCT.</p><p>Although the results are very preliminary, it is interesting to mention an extention of block-based fractal image coding to the encoding of digital video sequences by extending the theory to the three-dimensional case @I, <ref type="bibr">[33]</ref>. In [8],</p><p>Beaumont encodes slabs of four frames at a time, searching for matching domain blocks of size 12 x 12 x 12. He uses a combination of three-dimensional fractal coding with a DPCM [29] prediction technique for the average luminance of range blocks. However, these authors report that perceptually annoying block effects occur. It is unclear whether the same coded image quality as in the still image case could be obtained at reasonably low bit rates, as affine block transformations may not efficiently exploit temporal correlation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION</head><p>We have described the design of digital image coding systems referred to as Fractal Block Coders which are based on a theory of iterated contractive image transformations. The preliminary design issues are to select an adaptive image partition made of nonoverlapping range cells, to select an interblock distortion measure, and to specify a class of contractive block transformations with quantized parameters. The encoding of an original image then consists of capturing the self-transformability of the original image by searching a global transformation pool for a transformation defined blockwise-a fractal code-under which the image is approximately invariant. A specific block-base fractal image coding system was presented as well as encodingldecoding results. The relationship between vector quantization and fractal block coding was analyzed.</p><p>The work of other researchers who either extended the theory, or optimized the original system design to improve the initial results of the author was then presented. The choices in the design a block-based fractal coding system affect all of the following: visual quality of coded images, compression, encoding complexity and speed, in a complex manner. Decoding complexity remains fairly low and stable for various system designs. Of course, the degree to which some of these issues are more important than others will have influence on what is considered an "optimal" fractal coding system. Specifically, the following has been observed. Quadtree-based image partitions should be used; they efficiently exploit the flat areas present in typical images. Different formulations of the block-matching problem of finding the best combination of domain and block transformation for a given range block can lead to efficient least squares optimizations of the parameters of an optimal block transformation, thereby considerably reducing the complexity of the initial full-search scheme. While keeping the requirement that the block transformations are affine, it is useful to both eliminate the initial strict contractivity requirement, as well as enlarge the pool of block transformations by allowing polynomial translation terms. The possible use of block shapes other than square was also evaluated, as well as that of combining fractal block coding with other more traditional block coding techniques.</p><p>Fractal block coding, as described in this paper, remains a fairly novel image coding technique. The interest that the publication of the initial work has generated, along with the number of publications which describe other implementations of fractal block coders for the encoding of images are exciting. Even though a complete reconciliation of the approaches taken by different authors may seem insight to the design of a fractal block coder for images, given constraints of maximum complexity or bit rates. For all its esoteric origins, fractal image coding performs quite comparably with more traditional image coding techniques; this despite the existence of a restricted class of complexlooking fractal objects which can be fully described by a very small set of parameters </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Manuscript received July 8,1993. Parts of this paper are directly excerpted from a paper previously published by the author in the IEEE TRANSACTIONS ON IMAGE PROCESSING (vol. 1, no. 1, Jan. 1992), entitled "Image coding based on a fractal theory of iterated contractive image transformations." The work described in this paper was performed while the author was in the Mathematics Department, Georgia Institute of Technology,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>, [42], [52]. The principles of Fractal Block Coding described here were originally published in They are rooted in a general theory of iterated contractive transformations in metric spaces of images based on the work of Bamsley et al. [2]-[6]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>, and show how to evaluate bit rates. Results are given for the coding of 512 x 512 8-b/pixel digital images such as "Lena." We also point to the analogies which exist with an image coding technique known as Vector Quantization (VQ), and indicate the specificity of fractal block coding. In Section VI, we present novel ideas and extensions from the work of a number of researchers [8which have appeared since the publication of the original fractal image coding work by the author.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 1. A general fractal encodingdecoding system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>partition of the image support into N range cells-usually square blocks of possibly different sizes. The symbol p1 R, denotes the restriction of the image p to the cell &amp;; we call it the image block over R, that an image is the union of its restrictions to the partition cells. The symbol T; denotes an elemental block transformation from the domain cell Di to the range cell I&amp;. For clarity, ~i is written as the composition of two transformations S; and T i ~i = Ti o s i (8)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>I)</head><label></label><figDesc>Geometric Part Si: It consists in the discrete form of the D : B spatial contraction operator S, which maps image blocks from a domain cell D; = S ( z d , j d , D ) , to a range cell R; = S(ir,jr, B). In the simple case where D = 2B, the pixel values of the contracted image on the range block S(i,.,jT,B) are the average values of four pixels in the domain block</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>) 6 )</head><label>6</label><figDesc>Rotation around center of block, through +goo: (L5p)i,j = pj,E-l-i. (21) 7) Rotation around center of block, through +BO0: 8) Rotation around center of block, through -90": ( ~7 ~l ) i , j = P E -I -; , ~.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>1454 1</head><label>1454</label><figDesc>PROCEEDIh'GS OF THE IEEE, VOL. 81, NO. 10, OCTOBER 1993 I I A . Overview of the Procedure An original r x r digital image p, quantized to 256 gray levels, is given as input to the coder. Let { &amp; ) o ~; &lt; N denote the image partition made of range cells of two different sizes? Recall that an image transformation T has the form: T = ~i , withTi=TioS;. Given a range cell R, (of size B x B), the construction of a transformation ~i which maps onto this cell is broken into two distinct steps corresponding to the transformations Si and Ti, respectively. 0 The construction of the spatial contraction S; amounts to selecting an image domain block plloi of size D x D, which will be contracted to a block S i ( p 1 ~~) of size B x B . It is important to note that the specification of the domain cell Di (location and size) is equivalent to the description of the spatial contraction S; (translation vector and contraction factor). 0 The second part of the construction of 7-i consists of selecting the proper processing of the contracted domain block S;(ploi), i.e., of finding the block transformation Ti which minimizes the distortion between Ti o Si(p10,) and We can thus formally define a pool of domain blocks D, made up of all image blocks which can be extracted from the original image, and which are larger than the range block R;. We can also formally define a pool of massic transformations 7, made of all discrete block transformations T;. The encoding of the range block p l ~" consists in finding a "best pair" (D;, Ti) E D x 7, which is such that the distortion , T; o s;(plDi)) is minimum.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>An</head><label></label><figDesc>initial domain pool D can be obtained by sliding a window of size D x D ( D = 2B is used) across the original image. The window is first located with its bottom ''The actual construction of this two-level partition is addressed in Section V-C.3The analogy with the notion of codebook used in vector quantization for image coding is discussed in Section V-D.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Encoding of the range block R;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>D, ) determines the selection of the transformation T~ used to encode p ] ~, .Case 2a): p 1 ~, is a midrange.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>where this time, the function quant represents uniform quantization with 6 b in the range[-128,1271.    = quant (pL] R, -azpl D, ) Case 2b): pi^, is an edge.The analysis of the pair ( p l ~, , p l ~, )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. First seven iterations of the "peppers-to-Lena" decoding sequence.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>are computed, the reconstruction sequence corresponding to a uniformly black initial image is obtained. The first eight terms of this running sum-for the fractal code as in Fig. &amp;are displayed in Fig. 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig</head><label></label><figDesc>Fig. 5. sequence (initial all-black image not shown).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 6. Statictics of a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 9 .Fig. 10 .</head><label>910</label><figDesc>Fig. 9. Encoded "Lena" image mena(porig)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>[ 11 ,</head><label>11</label><figDesc>[ 181, [21], [53]. In Table</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Enhanced error image for "Lena."</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 12. Coding configurations for a parent range block.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head></head><label></label><figDesc>In [43], [ a ] , (dien, Lepsby, and Ramstad suggested that the translation term Ag be chosen in a three-dimensional subspace of R B x B , i.e., be of the form k=l where { a l , ap, a3) are real coefficients, and { A I , A z , As} are the fixed basis vectors consisting of the three matrices A l ( i , j ) = 1 A 2 ( i , j ) = i A 3 ( i , j ) = j , for 0 5 i , j &lt; B. (42)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head></head><label></label><figDesc>7This has also been observed by other researchers in different image difficult at this point, the body Of provides coding contexts [ll], [59], [a].*Sharp edges and textures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>51], [58], image synthesis and computer graphics 141, 171, [171, [221, 1231, [481, [541, and texture coding [37], {55].</head><label></label><figDesc>After falling into nearly complete oblivion for a while, they were "rediscovered" by the mathematical research community in the 1970's, thanks to the pioneering work of Mandelbrot who also coined their name [38]. It is indisputable that this rediscovery was also triggered by the availability of computers and automatic graphic tools which made it possible for the first time to render and visualize them as complex, beautiful, often realistic-looking objects Barnsley was the first to propose the notion of Fractal Image Compression, by which real-life objects or images would be modeled by deterministic fractal objects-attractors of sets of two-dimensional affine transformations [</figDesc><table><row><cell>[12],</cell></row><row><cell>[14], [15].</cell></row></table><note><p>or scenes [38], [47]. For the past ten years, fractals have also been part of a set of tools in a variety of fields in Physics, where they are closely related to Chaos Theory [19], [49]. They have recently emerged in various fields of Electrical Engineering, as attested by the contents of this Special Section. Fractal-based techniques have been applied in several areas of digital image processing, such as image segmentation [50], image analysis [</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>2]-[4]. The mathematical theories of Iterated Function Systems</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>two-level square partition. This type of partition is closely related to quad-trees [561, [591, [60]. The</head><label></label><figDesc></figDesc><table><row><cell>square support S of the original digital image porig is</cell></row><row><cell>partitioned into nonoverlapping square range cells of two</cell></row><row><cell>different sizes, thus forming a larger cells-of size B x B-are</cell></row><row><cell>referred to as (range) parents, the smaller ones-of size</cell></row><row><cell>B/2 x B/2-as (range) children. A parent can be split into</cell></row><row><cell>up to four nonoverlapping children. Decisions about the</cell></row><row><cell>splitting of a parent cell are made during the encoding of</cell></row><row><cell>the image block over this cell (see Section V-C). A partition</cell></row><row><cell>constructed in this way is image-dependent; it allows the</cell></row><row><cell>coder: i) to use larger blocks to take advantage of smoothly</cell></row><row><cell>varying image areas, and ii) to use smaller blocks to capture</cell></row><row><cell>detail in complex areas such as rugged boundaries and fine</cell></row><row><cell>textures.</cell></row><row><cell>The selection of sizes and shapes for image cells depends</cell></row><row><cell>on several factors. Small image b l o c k s 4 x 4 and be-</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 LzContractivities of the Massic Transformations of Section IU-C Massic Transformation L2 Contractivity Absorption at go</head><label>1</label><figDesc></figDesc><table><row><cell>s = o</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2 Peak SNR Values Between the Original "Lena" and Successive Terms of a Reconstruction Sequence with an Initial Black Image.</head><label>2</label><figDesc></figDesc><table><row><cell>It.</cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>6</cell><cell>7</cell><cell>8</cell><cell>9</cell><cell>10</cell></row><row><cell>No.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 Design Specifications and Performance of a Fractal Block C d i g System Encadi-Specifications Partition Subimage size: 256 Type of partition:</head><label>3</label><figDesc></figDesc><table><row><cell></cell><cell>two-level hierarchical square</cell></row><row><cell>Range blocks:</cell><cell>8 x 8 @arent),4 x 4 (child)</cell></row><row><cell>Domain Pool</cell><cell></cell></row><row><cell>Domain blocks:</cell><cell>16 x 16 (parent) 8 x 8 (child)</cell></row><row><cell>Domain block shifts:</cell><cell>bh = 4, 6, = 4</cell></row><row><cell>Classification:</cell><cell>shade (s), midrange (m), simple</cell></row><row><cell></cell><cell>edge (se),</cell></row><row><cell></cell><cell>mixed edge (me)</cell></row><row><cell>Transformation Pool</cell><cell></cell></row><row><cell>Shade block:</cell><cell>Absorptions</cell></row><row><cell>Midrange block:</cell><cell>Contrast scalings</cell></row><row><cell></cell><cell>Luminance shifts</cell></row><row><cell>Edge block</cell><cell>Contrast scalings</cell></row><row><cell></cell><cell>Luminance shifts</cell></row><row><cell></cell><cell>Isometries</cell></row><row><cell cols="2">System Performance</cell></row><row><cell>Test image</cell><cell>"Lena", 512 x 512, 8 bpp</cell></row><row><cell>Bit rate</cell><cell>0.06 bpp</cell></row><row><cell>SNR (peak)</cell><cell>31.4 dB</cell></row><row><cell>SNR (signal energy to noise)</cell><cell>24.2 dB</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>[4],[38]. Some might find this disappointing. We think that one main point of this work is that fractal block coding shows that there are ways to capture and exploit image redundancy in images, which are not used by more traditional image coding techniques. The property of piecewise self-similarity and its capture through the construction of contractive image transformations which leave original images approximately invariant provides a new scheme for the exploitation of image redundancy for image compression-this property is what makes fractal image coding work.</figDesc><table /></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Vector Quantization</title>
		<author>
			<persName><forename type="first">H</forename><surname>Abut</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>New York IEEE Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Iterated function systems and the global construction of fractals</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Bamsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Demko</surname></persName>
		</author>
		<author>
			<persName><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><surname>Soc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>London</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bamsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ervin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hardin</surname></persName>
		</author>
		<author>
			<persName><surname>Lancaster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null</meeting>
		<imprint>
			<date type="published" when="1986">1986</date>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="1975" to="1977" />
		</imprint>
	</monogr>
	<note>Solution of an inverse problem for fractals and other sets</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Bamsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fractals</forename><surname>Everywhere</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>New York Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Recurrent iterated function systems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Bamsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Elton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Hardin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="3" to="3" />
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
	<note>Constructive Approximation</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Application of recurrent iterated function systems to images</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Bamsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jacquin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Bamsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jacquin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Malassenet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Reuter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Beaumont</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1991-10">Oct. 1991</date>
			<biblScope unit="volume">1001</biblScope>
			<biblScope unit="page" from="93" to="109" />
		</imprint>
	</monogr>
	<note>Image data compression using fractal techniques</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fractal image coding techniques and contraction operators</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Bedford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Dekking</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Keane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Delft Univ. Technol., Intemal Rep</title>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fractal coding of monochrome images</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Bedford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Dekking</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Breeuwer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Keane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Van Schooneveld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Delft Univ. Technol., Intemal Rep</title>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Adaptive transform coding via quadtree-based variable blocksize DCT</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-89</title>
		<meeting>ICASSP-89</meeting>
		<imprint>
			<date type="published" when="1989-05">May 1989</date>
			<biblScope unit="page" from="1854" to="1857" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Cherbit</surname></persName>
		</author>
		<title level="m">Fractals, Dimensions non EntiLres et Applications</title>
		<meeting><address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<publisher>Masson</publisher>
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">N</forename><surname>Dunford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Schwartz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Linear</forename><surname>Operators</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1966">1966</date>
			<pubPlace>New York Wiley</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">The Geometry of Fractal Sets</title>
		<author>
			<persName><forename type="first">K</forename><surname>Falconer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
			<publisher>Cambridge Univ. Press</publisher>
			<pubPlace>London, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Fractal Geometry, Mathematical Foundations and Applications</title>
		<imprint>
			<date type="published" when="1990">1990</date>
			<pubPlace>New York Wiley</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Iterated transform image compression</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">W</forename><surname>Jacobs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Boss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Naval Oceans Systems Center</title>
		<meeting><address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
	<note type="report_type">NOSC Tech. Rep. TR-1408</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Computer rendering of stochastic models</title>
		<author>
			<persName><forename type="first">A</forename><surname>Foumier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fussell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="371" to="384" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Vector Quantization and Signal Compression</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gersho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Gray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Gleick, Chaos, Making of a New Science</title>
		<imprint>
			<date type="published" when="1987">1992. 1987</date>
			<publisher>Vicking</publisher>
			<pubPlace>Dordrecht, The Netherlands; New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wintz</surname></persName>
		</author>
		<title level="m">Digital Image Processing</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1977">1977</date>
		</imprint>
		<respStmt>
			<orgName>MA</orgName>
		</respStmt>
	</monogr>
	<note>Reading</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Vector quantization</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Gray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE ASSP Mag</title>
		<imprint>
			<date type="published" when="1984-04">Apr. 1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Ray tracing deterministic 3-D fractals</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Sandin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">H</forename><surname>Kauffman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="131" to="140" />
			<date type="published" when="1985">1985. 1988. 1988. 1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fractal modeling in 3D computer graphics and imaging</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;91, course notes</title>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
	<note>Musgrave (Co-chairs)</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Image compression: A study of the iterated transform method</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">W</forename><surname>Jacobs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Boss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Process</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="251" to="263" />
			<date type="published" when="1992-12">Dec. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A fractal theory of iterated Markov operators with applications to digital image coding</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Jacquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Georgia Tech</title>
		<imprint>
			<date type="published" when="1989">1989</date>
			<pubPlace>Atlanta</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A novel fractal block-coding technique for digital images</title>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-90</title>
		<meeting>ICASSP-90</meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="2225" to="2228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Image coding based on a fractal theory of iterated contractive image transformations</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Image Process</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="18" to="30" />
			<date type="published" when="1992-01">Jan. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Image data comuression: A review</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>IEEE</meeting>
		<imprint>
			<date>Mar. 19g1</date>
			<biblScope unit="volume">69</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Digital Coding of Waveforms: Principles and Applications to Speech and video</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">S</forename><surname>Jayant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Noll</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hybrid image block coders incorporating fractal coding and vector quantization, with a robust classification scheme</title>
		<author>
			<persName><forename type="first">T</forename><surname>Laurengot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jacquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AT&amp;T Tech. Memo</title>
		<imprint>
			<date type="published" when="1992-02">Feb. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Attractor image compression-fast algorithms and comparisons to related techniques</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lepsay</surname></persName>
		</author>
		<imprint>
			<publisher>The Norwegian Institute of Technology</publisher>
			<pubPlace>Trondheim, Norway</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D dissertation</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Attractor image compression with a fast non-iterative decoding algorithm</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lepsay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Ramstad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-93</title>
		<meeting>ICASSP-93</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="337" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">A fractal-based image sequence compression scheme</title>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Novak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Forchheimer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note type="report_type">Preprint</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">An algorithm for vector quantizer design</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Linde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Buzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Gray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="84" to="95" />
			<date type="published" when="1980-01">Jan. 1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">An approach to fractal coding of onedimensional signals</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lundheim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. KOMPRESJON-89</title>
		<meeting>KOMPRESJON-89<address><addrLine>Oslo, Norway</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Fractal signal modelling for source coding</title>
		<imprint>
			<date type="published" when="1992-09">Sept. 1992</date>
			<publisher>The Norwegian Institute of Technology</publisher>
			<pubPlace>Trondheim, Norway</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D dissertation</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Texture coding using a pyramid decomposition</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Malassenet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-93</title>
		<meeting>ICASSP-93</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="353" to="356" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">The Fractal Geometry of Nature</title>
		<author>
			<persName><forename type="first">B</forename><surname>Mandelbrot</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982">1982</date>
			<pubPlace>San Francisco, CA: Freeman</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Fractal approximation of image blocks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Monro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dudbridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-92</title>
		<meeting>ICASSP-92</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="volume">III</biblScope>
			<biblScope unit="page" from="485" to="488" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Generalized fractal transforms: Complexity issues</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Monro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dudbridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Data Compression Conf</title>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Monro</surname></persName>
		</editor>
		<meeting>Data Compression Conf</meeting>
		<imprint>
			<publisher>IEEE Computer Soc. Press</publisher>
			<date type="published" when="1992-05">May 1992. Mar.-Apr. 1993</date>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="254" to="261" />
		</imprint>
	</monogr>
	<note>Fractal block coding of images</note>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Netravali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">G</forename><surname>Haskell</surname></persName>
		</author>
		<title level="m">Digital Pictures: Representation and Compression</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An imer product space approach to image coding by contractive transformations</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lepsay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Ramstad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-91</title>
		<meeting>ICASSP-91</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="2773" to="2776" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Reducing the complexity of a fractal-based image coder</title>
		<imprint/>
	</monogr>
	<note>presented at EUSIPCO-92</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Hybrid image compression combining transform coding and attractor coding</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sollid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Ramstad</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>presented at NOBIM-92</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">L,-optimal attractor image coding with fast decoder convergence</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Aien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Norwegian Institute of Technology</title>
		<meeting><address><addrLine>Trondheim, Norway</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Peitgen</surname></persName>
		</author>
		<author>
			<persName><surname>Richter</surname></persName>
		</author>
		<title level="m">The Beauty ofFractals</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">The Science of Fractal Images</title>
		<author>
			<persName><forename type="first">H-0</forename><surname>Peitgen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Saupe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>New York Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">H-0</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><surname>Peitgen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Jiirgens</surname></persName>
		</author>
		<author>
			<persName><surname>Saupe</surname></persName>
		</author>
		<title level="m">Chaos and Fractals</title>
		<imprint>
			<publisher>New York Springer-Verlag</publisher>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Fractal-based descriptions of natural scenes</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Pentland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Machine Intell</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Fractal surface models for communications about terrain</title>
	</analytic>
	<monogr>
		<title level="m">SPIE Visual Comun. Image Process</title>
		<imprint>
			<date type="published" when="1987">1987</date>
			<biblScope unit="volume">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">M</forename><surname>Rabbani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Digital Image Compression Techniques</title>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>SPIE Optical Eng. Press</publisher>
			<pubPlace>Bellingham, WA</pubPlace>
		</imprint>
	</monogr>
	<note>TIT</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Classified vector quantization of images</title>
		<author>
			<persName><forename type="first">B</forename><surname>Ramamurthi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gersho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<date type="published" when="1986-11">Nov. 1986. 1989</date>
			<publisher>Plenum</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">PROCEEDINGS OF THE IEEE</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="issue">10</biblScope>
			<date type="published" when="1993">OCTOBER 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Rendering and magnification of fractals using iterated function systems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Hodges-Reuter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Georgia Inst. Technol</title>
		<imprint>
			<date type="published" when="1987">1987</date>
			<pubPlace>Atlanta</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Fractal approximation of images</title>
		<author>
			<persName><forename type="first">R</forename><surname>Rinaldo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zakhor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Data Compression Conf</title>
		<meeting>Data Compression Conf</meeting>
		<imprint>
			<date type="published" when="1993-04">Mar.-Apr. 1993</date>
			<biblScope unit="page">451</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">The quad-tree and related hierarchical data structures</title>
		<author>
			<persName><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Sum</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="188" to="260" />
			<date type="published" when="1984-06">June 1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Fractal coding of monochrome images</title>
		<author>
			<persName><forename type="first">D</forename><surname>Van Schooneveld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Delft Univ. Technol., Intemal Rep</title>
		<imprint>
			<date type="published" when="1991-12">Dec. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Fractal image models and object detection</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Stein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPIE Visual Commun. Image Process. II</title>
		<imprint>
			<biblScope unit="volume">845</biblScope>
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Variable block-size image coding</title>
		<author>
			<persName><forename type="first">J</forename><surname>Vaisey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gersho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICASSP-87</title>
		<meeting>ICASSP-87</meeting>
		<imprint>
			<date type="published" when="1987">1987</date>
			<biblScope unit="page" from="1051" to="1054" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">He received the Diplijme d&apos;Ing6nieur degree in electrical engineering from Eole Sup6rieure d&apos;Electricit6</title>
	</analytic>
	<monogr>
		<title level="m">He received the M.S. degree in electrical engineering in 1987, and the Ph.D. degree in mathematics in 1989</title>
		<meeting><address><addrLine>Gif-sur-Yvette, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1964">Aug. 1992. 1964. 1986. 1990</date>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="2040" to="2060" />
		</imprint>
		<respStmt>
			<orgName>Georgia Institute of Technology, Atlanta. Since</orgName>
		</respStmt>
	</monogr>
	<note>Image compression with variable block size segmentation. he has been a Member of the</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
