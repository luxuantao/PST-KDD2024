<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">IF-Map: An Ontology-Mapping Method Based on Information-Flow Theory</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yannis</forename><surname>Kalfoglou</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electronics and Computer Science</orgName>
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Marco</forename><surname>Schorlemmer</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Centre for Intelligent Systems and their Applications School of Informatics</orgName>
								<orgName type="institution">The University of Edinburgh</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">Escola Universitària de Tecnologies d&apos;Informació i Comunicació Universitat Internacional de Catalunya</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">IF-Map: An Ontology-Mapping Method Based on Information-Flow Theory</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A315F823DF3244F81B8BFFA8437295EF</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:09+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In order to tackle the need of sharing knowledge within and across organisational boundaries, the last decade has seen researchers both in academia and industry advocating for the use of ontologies as a means for providing a shared understanding of common domains. But with the generalised use of large distributed environments such as the World Wide Web came the proliferation of many different ontologies, even for the same or similar domain, hence setting forth a new need of sharing-that of sharing ontologies. In addition, if visions such as the Semantic Web are ever going to become a reality, it will be necessary to provide as much automated support as possible to the task of mapping different ontologies. Although many efforts in ontology mapping have already been carried out, we have noticed that few of them are based on strong theoretical grounds and on principled methodologies. Furthermore, many of them are based only on syntactical criteria. In this paper we present a theory and method for automated ontology mapping based on channel theory, a mathematical theory of semantic information flow. We successfully applied our method to a large-scale scenario involving the mapping of several different ontologies of computer-science departments from various UK universities.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The wide-spread use of ontologies by diverse communities and in a variety of applications is a commonality in today's knowledge-sharing efforts. They are the backbone for semantically-rich information sharing, a prerequisite for knowledge sharing. As systems become more distributed and disparate within and across organisational boundaries, there is a need to preserve the meaning of concepts used in everyday transactions of information sharing. The emergence of the Semantic Web <ref type="bibr" target="#b4">[5]</ref> has made these transactions, arguably, easier to implement and deploy on a large scale in a distributed environment like the Internet. However, at the same time poses some interesting challenges. For instance, we observe that the demand for knowledge sharing has outstripped the current supply. And even when knowledge sharing is feasible, this is only within the boundaries of a specific system, when certain assumptions hold, and within a specific domain. The reason for this shortcoming is, probably, the very environment and technologies that generated a high demand for sharing: The more ontologies are being deployed on the Semantic Web, the more the demand to share them for the benefits of knowledge sharing and semantic interoperability. The sharing of ontology though, is not a solved problem. It has been acknowledged and researched by the knowledge engineering community for years.</p><p>In fact, this problem is related to that of integration of heterogeneous databases conducted in the 1980s and early 1990s <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b38">39]</ref>, as far as database schemas can be considered a particular kind of lightweight ontologies. These early efforts in information sharing run into the problem of semantic heterogeneity, which required the identification and representation of all semantics useful in performing schema translation and schema integration. Current efforts on ontology sharing build upon the previous experience, but in the light of more broader a concept of ontology, and of more expressive logical formalisms and theories that better capture the semantics and information flow.</p><p>One of the aspects in ontology sharing is to perform some sort of mapping between ontology constructs. That is, given two ontologies, one should be able to map concepts found in one ontology onto the ones found in the other. Further, some research suggest that we should also be able to combine ontologies where the product of this combination will be, at the very least, the intersection of the two given ontologies. These are the dominant approaches that have been studied and applied in a variety of systems (see, for example, <ref type="bibr" target="#b34">[35]</ref>).</p><p>There are, however, some drawbacks that prevent engineers from benefitting from such systems. Firstly, the assumptions made in devising ontology mappings and in combining ontologies are not always exposed to the community and no technical details are disclosed. Secondly, the systems that perform ontology mapping are often either embedded in an integrated environment for ontology editing or are attached to a specific formalism. Thirdly, in most cases mapping and merging are based on heuristics that mostly use syntactic clues to determine correspondence or equivalence between ontology concepts, but rarely use the meaning of those concepts, i.e., their semantics. Fourthly, most, if not all approaches, do not treat ontological axioms or rules often found in formal ontologies. Finally, ontology mapping as a term has a different meaning in different works merely due to the lack of a formal account of what ontology mapping is. There is an observed lack of theory behind most of the works in this area.</p><p>Motivated by these drawbacks we started to work on a method and a theory for ontology mapping and merging. We were determined to tackle these drawbacks so our approach is based on the observation reported in <ref type="bibr" target="#b37">[38]</ref> of an essential duality in knowledge sharing, namely that sharing occurs both at the token and at the type level. We draw on sound theoretical ground, but at the same time we are providing a systematic approach for ontology mapping in mechanised and methodological steps.</p><p>In particular, we propose an Information-Flow-based method for ontology mapping (hereafter, IF-Map). We are mostly interested in mapping ontologies, but we could extend the approach to merge them, too. IF-Map draws from the works of Schorlemmer on aligning ontologies <ref type="bibr" target="#b37">[38]</ref> and on the heuristics defined by Kalfoglou (in <ref type="bibr" target="#b19">[20]</ref>, pp.95-97), to analyse prospective mappings between ontologies. On the theoretical side, our method is based on the mathematical theory of information flow proposed by Barwise and Seligman <ref type="bibr" target="#b2">[3]</ref> and on Kent's Information Flow Framework for the IEEE standardisation activity of an upper-level ontology <ref type="bibr" target="#b22">[23]</ref>, and also on his proposed methodology for merging ontologies <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b23">24]</ref>. The methodological part of IF-Map has also been influenced by the work of Stumme and Maedche on the FCA-Merge method <ref type="bibr" target="#b40">[41]</ref>.</p><p>We outline a scenario and describe the architecture we have built to perform ontology mapping in Section 2. We briefly provide mathematical preliminaries on information flow and channel theory in Section 3, before we proceed to describe our ontology-mapping method in Section 4, together with an example case of its use. In Section 5 we report on an application of our method and elaborate on scalability issues. We discuss related work in Section 6 and summarise the paper in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">A Scenario and Architecture for Ontology Mapping</head><p>We should clarify some terminological issues before we continue with our architecture for ontology mapping. Some researchers view the mapping process as an integral part of alignment or merging. For example Noy and Musen view merging as the creation of "a single coherent ontology that includes the information from all the sources" and alignment as a process in which "the sources must be made consistent and coherent with one another but kept separately" <ref type="bibr" target="#b33">[34]</ref>. Clearly, mapping is an essential aspect of alignment and could also be used to initiate merging. In this paper, we adopt a working view of ontology mapping. We do not intend to alter the original ontologies but rather look for possible mappings between them. To that extent we are compatible with Noy and Musen's definition of alignment, however, we view alignment as a process that involves merging but without altering the original ontologies. This would be done by constructing a virtual ontology consisting of the mapped constructs of the two input ontologies. This view is more akin to those researchers working on the IEEE SUO initiative-the standardisation of an upper level ontology-where a meta-level framework for relating ontologies based on the Barwise-Seligman theory of information flow is currently being developed. <ref type="foot" target="#foot_0">1</ref> Although on our scenario we have not yet implemented this aspect, we could extend the existing IF-Map method to perform merging. In the remaining of the paper though, we will focus on ontology mapping only.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Ontology Mapping Scenario</head><p>In Figure <ref type="figure" target="#fig_0">1</ref> we illustrate our approach to ontology mapping. In particular, the focus is on the use of information-flow theory as the underpinning mathematical foundation for establishing mappings between two ontologies. We shall formalise these mappings in terms of local logics and logic infomorphisms, which we introduce in Section 3. We assume that, when two communities desire to share knowledge but each one has encoded knowledge according to its own local ontology-O 1 and O 2 respectively-they have previously agreed upon a common understanding, a reference ontology O 0 , in order to favour the sharing of knowledge. Typically each community will have its local ontology populated with its own instances, while the reference ontology will not have instances.</p><p>But, although having agreed upon a reference ontology, each community might prefer to communicate via its own local ontology, provided these ontologies O 1 and O 2 (or at least a significant fragment of them) conform to the reference ontology O 0 . In this paper we provide a methodology to establish this conformance by looking for, and further generating, ontology mappings O 0 → O 1 and O 0 → O 2 from the reference ontology to local ontologies, denoted as solid arrows in Figure <ref type="figure" target="#fig_0">1</ref>. The methodology is based upon formalising ontologies as local logics and ontology mappings as logic infomorphisms, as we shall see in Section 3.5.</p><p>The link O 1 ← O 0 → O 2 between local ontologies via the reference ontology, together with the generated ontology mappings from the latter to the former two, provides an alignment structure of ontologies that determine uniquely a global ontology O-an ontology that could be either constructed from the alignment structure or else generated 'on-the-fly' for the purpose of knowledge sharing. The dashed arrows denote the inclusion of local ontologies O 1 and O 2 into the global ontology O. This inclusions are also ontology mappings as formalised by logic infomorphisms, and hence our methodology IF-Map could be extended in future to include the merging of ontologies according to an alignment structure.</p><p>Figure <ref type="figure" target="#fig_0">1</ref> clearly resembles Kent's proposed two-step process for conceptual knowledge organisation <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b23">24]</ref>. In fact, the existence of a unique global ontology O given an alignment O 1 ← O 0 → O 2 consisting of local ontologies and a reference ontology is the consequence of formalising ontologies and ontology mappings as local logics and logic infomorphisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Ontology Mapping Architecture</head><p>In Figure <ref type="figure" target="#fig_1">2</ref> we illustrate the process of IF-Map. We have built a step-wise process that consists of four major steps: (a) Ontology harvesting, (b) translation, (c) infomorphism generation, and (d) display of results. In the ontology harvesting step we perform our acquisition. We acquire ontologies by applying a variety of methods: Downloading existing ontologies from ontology libraries (for example, from the Ontolingua <ref type="bibr" target="#b11">[12]</ref> or WebOnto <ref type="bibr" target="#b9">[10]</ref> servers); editing them in ontology editors (for example, in Protégé <ref type="bibr" target="#b15">[16]</ref>); or extracting them from the Web. The latter is ongoing research in the AKT project (http://www.aktors.org), where we are writing scripting programs to crawl the Web and harvest RDF-encoded resources to semi-automatically construct and populate ontologies. We will not expand on this topic here as it is peripheral to our theme of ontology mapping. As a result of our versatile ontology acquisition step, we have to deal with a variety of ontology representation languages ranging from KIF <ref type="bibr" target="#b14">[15]</ref> and Ontolingua to OCML <ref type="bibr" target="#b30">[31]</ref>, RDF <ref type="bibr" target="#b26">[27]</ref>, Prolog, and native Protégé knowledge bases. This introduces the second step in our process, that of translation. Since we have declaratively specified the IF-Map method in Horn logic and execute it with a Prolog interpreter, we partially translate the above formats to Prolog clauses.</p><p>Our translator programs are either written in-house, or whenever available, we use public translators. For example, there are public RDF-to-Prolog translators<ref type="foot" target="#foot_1">2</ref> as well as Ontolingua-to-Prolog translators. In most of these cases though, we found it practical to write our own ones. We did that to have a partial translation, customised for the purposes of ontology mapping. Furthermore, as it has been reported in a large-scale experiment with publicly available translators <ref type="bibr" target="#b6">[7]</ref>, the Prolog code produced is not elegant or even executable. Our own translators are customised to translate-from KIF, Ontolingua, and Protégé knowledge bases into Prolog clauses-those constructs that are needed for IF-Map: Class taxonomy, relations and representative instances for classes. Thus, we deliberately neglect constructs such as documentation slots, separation of own-slots and template-slots and other object-oriented modelling primitives used in Ontology languages (such as KIF or Ontolingua<ref type="foot" target="#foot_2">3</ref> ) as they are not useful for IF-Map and their absence from the translated Prolog code does not invalidate their meaning. For Protégé knowledge bases we used the built-in Java API to obtain the constructs we wanted, and for RDF we used publicly available RDF to Prolog translators. The issue of a full-blown translation from one formalism to another is a difficult problem, and Corrêa da Silva et al. <ref type="bibr" target="#b6">[7]</ref> offer an account on the effort involved.</p><p>The next step in our process is the main mapping mechanism: The IF-Map method, which we describe in Section 4. We have written a Java front-end to the Prolog-written IF-Map program so that we can access it from the Web, and we are currently in the process of writing a Java API to enable external calls to it from other systems. This step will find logic infomorphisms, if any, between the two ontologies under examination, and in the last step of our process we display them in RDF format. This step involves translating back from Prolog clauses to RDF triples by means of an intermediary Java layer, where RDF is being produced using the Jena RDF API <ref type="bibr" target="#b27">[28]</ref>. Finally, we store the results in a knowledge base for future reference and maintenance. Before proceeding to an example case of the deployment this architecture we shall introduce the theoretical background of IF-Map. Therefore, in the next section we expand on logic infomorphisms and other channel-theoretic notions, and give a formal account of ontology mapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Preliminaries</head><p>In order to give a formal characterisation of ontology mapping we start from the following basic assumption: If two communities desire to share information but their ontologies differ, we need to align and map their ontologies for the information to flow between them. Consequently, it would be desirable to base a theory of ontology mapping upon a mathematical theory that is capable of describing under which circumstances information flow occurs.</p><p>Although there is no such a theory yet, the most promising effort towards such a theory was initiated by Barwise and Perry with situation semantics <ref type="bibr" target="#b1">[2]</ref>, which was then been further developed by Devlin into a theory of information <ref type="bibr" target="#b7">[8]</ref>. Barwise and Seligman's channel theory is currently the latest stage of this endeavour <ref type="bibr" target="#b2">[3]</ref>, and is probably the best place to start establishing a foundation for a theory of ontology mapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Information Flow</head><p>Barwise and Seligman propose a mathematical model that aims at establishing the laws that govern the flow of information. It is a general model that attempts to describe the information flow in any kind of distributed system, ranging form actual physical systems like a flashlight connecting a bulb to a switch and a battery, to abstract systems such as a mathematical proof connecting premises and hypothesis with inference steps and conclusions.</p><p>It is based on the understanding that information flow results from regularities in a distributed system, and that it is by virtue of regularities among the connections that information of some components of a system carries information of other components. The more regularities the system has, the more information flows; the more random the system is constituted the less information will be able to flow among its components.</p><p>As a notion of a component carrying information about another component, Barwise and Seligman follow Dretske's characterisation <ref type="bibr" target="#b10">[11]</ref>, in which assertions of the sort</p><p>The rifle shot carried the information that the king was dead to the whole city.</p><p>or The greyness of the sky carries the information that a storm is approaching.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>are abstractly characterised as following a common pattern a's being F carries/bears/conveys the information that b is G.</head><p>In fact, it is a particular rifle shot that will inform us of the king's death, and hence it is a particular event token e of the type 'rifle shot' that will carry this information. A rifle shot 50 years later will definitely not carry the information that the present king is dead as will the present rifle shot not indicate that the king of the neighbouring city is dead. It is the fact that the event token of the rifle shot is connected spatio-temporarily with the event of the king's death that we know that the information flows. Channel theory formalises this crucial aspect of information flow, namely that it is the tokens and its connections that carry information, so that information flow involves both types and tokens.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Aligning and Merging Ontologies</head><p>With respect to the problem that concerns us here-that of mapping ontologiesthe same abstract pattern arises. Two communities with different ontologies will be able to share information when they are capable of establishing connections among their tokens in order to infer the relationship among their types. Let us develop an example taken from <ref type="bibr" target="#b39">[40]</ref>, which shows the issues one has to take into account when attempting to align the English concepts river and stream with the French concepts fleuve and rivière. According to Sowa, In English, size is the feature that distinguishes river from stream; in French, a fleuve is a river that flows into the sea, and a rivière is either a river or a stream that runs into another river. <ref type="bibr" target="#b39">[40]</ref> This explains how the concepts need to be merged. Notice that the above quote requires an agreed understanding on how to distinguish between big and small rivers, and between rivers that run into a sea or into other rivers, yielding four types of instances of 'water-flowing entities': big-into-sea, big-into-river, smallinto-sea, and small-into-river.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 3. Alignment by means of a pair of maps</head><p>Figure <ref type="figure" target="#fig_3">3</ref> shows how both, English and French speakers, base their concepts upon this agreed understanding, although English and French speakers don't distinguish between some types of instances. For example, English speakers call both, big-into-sea and big-into-river, a river, while French speakers don't distinguish between big-into-river and small-into-river, and call both types a rivière. The agreed understanding is materialised by two maps that form the alignment. It requires the classification of particular instances of river, stream, fleuve, and rivière according with the agreed understanding, since it is this agreed way of classification which will determine how the concepts river, stream, fleuve, and rivière are going to be related to each other.</p><p>The ultimate goal is to determine the connections that link particular instances of type river or stream with particular instances of type fleuve or rivière, in a way that they respect the agreed understanding. This is done by connecting only those instances that conform to the same type according to the agreed understanding, as illustrated in Figure <ref type="figure">4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 4. Aligning ontologies through a pair of maps</head><p>The resulting classification of connections Mississippi, Rhône , Ohio, Saône , and Captina, Roubion into the four concepts river, stream, fleuve, and rivière, determines a theory of how these concepts are related (e.g., that a fleuve is also a river, or that a stream is also a rivière, but not vice versa). Figure <ref type="figure">4</ref> shows what in channel theory is known as a an information channel <ref type="bibr" target="#b2">[3]</ref>. It captures, by means of two pairs of contra-variant functions, an existing duality between concepts and instances: Each pair consists of a map of concepts on the so called type level and map of instances on the so called token level, and pointing in the opposite direction. From a channel-theoretic perspective, Figure <ref type="figure">4</ref> actually illustrates us that sharing knowledge involves a flow of information that crucially depends on how the instances of different agents are connected together. The following table shows the classification relation, i.e., the connections as classified according to the concept types involved in the example:</p><formula xml:id="formula_0">river stream fleuve rivière Mississippi, Rhône 1 0 1 0 Ohio, Saône 1 0 0 1 Captina, Roubion 0 1 0 1</formula><p>The merged set of concepts {river, stream, fleuve, rivière} has an additional structure that we can deduce from the way the connections of instances are classified with respect to these concepts. Through techniques from formal concepts analysis <ref type="bibr" target="#b13">[14]</ref>, for instance, we can make such structure explicit in the form of a concept lattice, as shown in Figure <ref type="figure" target="#fig_2">5</ref>. The concept hierarchy represented in this lattice depends on the choice of instances and its classification with respect to the agreed understanding. The fact that no instances were classified as of type small-into-sea was crucial in this example. Notice, also, that the resulting lattice has a node labelled with the concept river ∧ rivière, which is a formal concept that did not exist in the original vocabularies. It corresponds to the instances of 'water-flowing entities' that, although big, flow into other rivers, like Ohio and Saône. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Channel Theory</head><p>Channel theory provides the required mathematical machinery to describe the information flow between communities in terms of their connection by means of tokens and types. In order to specify the regularities of each component in a distributed systems channel theory uses the notion of a local logic. Separate interacting components will typically use different vocabularies, i.e., they will use different systems of types, and also tokens and of how these classified according to the types.</p><p>In addition, each community will have its own particular constraints that describe the local behaviour of their instances with respect to their system of types. A local logic brings all these ideas together: Definition 1. A local logic is a quadruple L = (I, T, |=, ), where 1. I is a set of instances (also called tokens); 2. T is a set of types;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">|= is a classification relation, a binary relation between elements of I and T ; 4. is a consequence relation, a binary relation between subsets of T ;</head><p>There are two parts of a local logic that are of particular importance in the channel-theory framework. The first one is the triple (I, T, |=), and is called the classification of the local logic, because the binary relation |= determines a classification of instances in I with respect to types in T . Thus, x |= a means that instance x ∈ I is classified as of type a ∈ T .</p><p>The second important part is the pair (T, ), which is called the theory of the local logic. This theory is specified by a set of sequents Γ, ∆ , i.e., pairs where Γ, ∆ ⊆ T . The set of types Γ is to be interpreted conjunctively, the set ∆ disjunctively, so that an instance x ∈ I satisfies a sequent Γ, ∆ provided that, if x is of every type in Γ , then x is of some type in ∆. Sequents that belong to the theory of a logic are called constraints and denoted Γ ∆. Theories of local logics must satisfy the following conditions of regularity: <ref type="foot" target="#foot_3">4</ref>1. Identity: a a, for all a ∈ T ; 2. Weakening:</p><formula xml:id="formula_1">If Γ ∆ then Γ, Γ ∆, ∆ , for all Γ, Γ , ∆, ∆ ⊆ T ; 3. Global Cut: If Γ, T 0 ∆, T 1 for each partition 5 T 0 , T 1 of any T ⊆ T , then Γ ∆, for all Γ, ∆ ⊆ T .</formula><p>There is an additional element in local logics that we have deliberately left out in Definition 1. Ideally, instances of a local logic adhere to its constraints, although, we cannot presuppose this in general, and exceptions may occur. Local logics also distinguish a subset N ⊆ I of normal instances that must satisfy all constraints of the local logic. The idea of a normal instance is needed if we want to model reasonable but unsound flow of information. For the purposes of IF-Map, though, we shall assume that all instances are normal. Such logics are said to be sound.</p><p>For information to flow between separate components of a distributed system, we need to link local logics that characterise components in a sensible way. This will essentially affect the system of classifications and its associated theory, but in a way that allows the information to flow. This latter is captured with the idea of a logic infomorphism:</p><formula xml:id="formula_2">Definition 2. A logic infomorphism f : L L from local logic L = (I, T, |= , ) to local logic L = (I , T , |= , ) is a contra-variant pair of functions f = f , f , where f : T → T and f : I → I, such that, 1. for all x ∈ I and a ∈ T , f (x) |= a if and only if x |= f (a); 2. for all Γ, ∆ ⊆ T , if Γ ∆, then f [Γ ] f [∆]. 6</formula><p>The restriction of a logic infomorphism to the classification part of local logics is called only an infomorphism.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Ontologies and Ontology Morphisms</head><p>For the purposes of IF-Map described in this paper, we adopt a definition of ontology that includes some of the core components that are usually part of an ontology: Concepts, organised in an is-a hierarchy, which we capture with a partial-order relation ' '; relations defined over these concepts; and notions of disjointness of two concepts-when no instance can be considered of both concepts-and coverage of two concept-when all instances are covered by two concepts. <ref type="foot" target="#foot_6">7</ref>Disjointness and coverage are typically specified by means of ontological axioms. IF-Map takes these kind of axioms into account including disjointness and coverage into the hierarchy of concepts by means of two binary relations '⊥' and '|', respectively. When discarding binary relations ⊥ and |, this definition is equivalent to that of a core ontology in <ref type="bibr" target="#b40">[41]</ref>.</p><p>When an ontology O = (C, R, , ⊥, |, σ) is used in some particular application domain, we need to populate it with instances. First, we will have to classify objects of a set X according to the concept symbols in C by defining a binary classification relation |= C . This will determine a classification C = (X, C, |= C ). Next, we will have to specify over which instances the relations represented by the symbols in R are to hold, thus classifying finite tuples of objects of X to the relation symbols in R by defining a binary classification relation |= R . This will determine a classification R = (X + , R, |= R ). Both classifications will have to be defined in such a way that the partial order , the disjointness ⊥, the coverage |, and the arity function σ are respected: <ref type="figure">R,</ref><ref type="figure">,</ref><ref type="figure">⊥,</ref><ref type="figure">|,</ref><ref type="figure">σ</ref>) is an ontology; we say the ontology is correct when, for all x, x 1 , . . . ,</p><formula xml:id="formula_3">Definition 4. A populated ontology is a tuple O = (C, R, , ⊥, |, σ) such that C = (X, C, |= C ) and R = (X + , R, |= R ) are classifications and O = (C,</formula><formula xml:id="formula_4">x n ∈ X, c, d ∈ C, r ∈ R, and σ(r) = c 1 , . . . , c n , 1. if x |= C c and c d, then x |= C d; 2. if x |= C c and c ⊥ d, then x |= C d; 3. if c | d, then x |= C c or x |= C d; 4. if x 1 , . . . , x n |= R r then x i |= R c i , for all i = 1, . . . , n.</formula><p>Notice that we write O for a populated ontology and O for the respective unpopulated one.</p><p>Transformations of mathematical structures that preserve the structure that characterises them are usually described with homomorphism (or morphisms, for short). Thus, we study the mapping of ontologies through the morphisms of those mathematical structures we have defined for ontologies in Definition 3. The concept of 'populated ontology' is central to our approach to ontology mapping, and we shall use it later in Proposition 1 in order to justify the following definition of an ontology morphism:</p><formula xml:id="formula_5">Definition 5. Given two ontologies O = (C, R, , ⊥, |, σ) and O = (C , R , , ⊥ , | , σ ), an ontology morphism f , g : O → O is a pair of functions f : C → C and g : R → R , such that, for all c, d ∈ C, r ∈ R, and σ(r) = c 1 , . . . , c n , 1. if c d, then f (c) f (d); 2. if c ⊥ d, then f (c) ⊥ f (d); 3. if c | d, then f (c) | f (d); 4. if σ (g (r)) = c 1 , . . . , c n , then c i f (c i )</formula><p>, for all i = 1, . . . , n.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Information Flow between Ontologies</head><p>Our approach to ontology mapping is built upon the assumption that, in the context of channel theory, local logics characterise ontologies. </p><formula xml:id="formula_6">(r) = c 1 , . . . , c n , 1. f (x) |= C c and c d imply f (x) |= C d; 2. f (x) |= C c and c ⊥ d imply f (x) |= C d ; 3. c | d implies f (x) |= C c or f (x) |= C d; 4. g ( x 1 , . . . , x n ) |= r implies f (x i ) |= c i , for all i = 1, . . . , n. Proof. 1. Suppose f (x) |= C c and c d. Since f is an infomorphism, x |= C f (c). Furthermore, c d implies f (c) f (d) because f , g is an ontology morphism; consequently, x |= C f (d). Finally, since f is a infomorphism, f (x) |= C d. 2. Analogous to 1. 3. Analogous to 1. 4. Suppose g ( x 1 , . . . , x n ) |= r. Because g is an infomorphism, x 1 , . . . , x n |= g (r)</formula><p>. Let σ(g (r)) = c 1 , . . . , c n . By the correctness of O , x i |= c i , for all i = 1, . . . , n, and since f , g is an ontology morphism, x i |= f (c i ), for all i = 1, . . . , n. Consequently, and because f is a infomorphism, f (x i ) |= c i , for all i = 1, . . . , n.</p><p>In the next section we describe the ontology mapping method based on the above characterisation of ontologies as local logics, and ontology morphisms as logic infomorphisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The IF-Map Method</head><p>We propose a method for mapping ontologies that draws on the mathematical foundations of information-flow, and we shall use a small easy-to-follow example to illustrate the core parts of IF-Map.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Reference and Local Ontology</head><p>Let us assume that we want to map two ontologies, a reference ontology with a local ontology. We follow the scenario given in Section 2 and assume that the reference ontology has no instances defined, just concept types and constraints over those types. The local ontology, however, has instances classified under its concept types according to a classification relation. where is the top and is the bottom of the lattice, i.e., house | automobile and house ⊥ automobile.</p><p>The local ontology, unlike reference ontology, is populated with instances X = {cabrio, my-home, 4wd , new -inn, old -inn, coupe}, which are classified as follows,</p><formula xml:id="formula_7">|= C house cottage automobile cabrio 0 0 1 my-home 1 0 0 4wd 0 0 1 new-inn 1 1 0 old-inn 1 1 0 coupe 0 0 1</formula><p>This table contains the following information: cabrio, 4wd and coupe are automobiles, my-home is a house, new-inn and old-inn are specific kinds of houses, namely cottages. It specifies the classification C = (X, C , |= C ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Characterisation as Local Logics</head><p>In order to automatically find mappings between the reference and the local ontologies that conform to the definition of ontology morphism given in Definition 5, we will need to look for logic infomorphisms between the local logics that characterise these ontologies. First we shall concentrate on the concepts symbols and leave the relation symbols for Section 4.4. The reference ontology, which is not populated, is characterised by the following local logic. Its regular theory (C, ) has concept symbols as types, and is the smallest consequence relation closed by Identity, Weakening, and Global Cut that includes the following constraints:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>building,vehicle car vehicle building,vehicle</head><p>Recall that the comma on the left-hand side of these constraints has conjunctive force whereas on the right-hand side it has disjunctive force. Following this, we can give a declarative reading of the above constraints: Nothing is both a building and a vehicle; all cars are vehicles; and everything is either a building or a vehicle. Since the reference ontology does not have instances of its own, we will need to provide the theory with a set of instances and a classification of these instances with respect to the types. This can be achieved due to a Fundamental Representation Theorem (see <ref type="bibr" target="#b2">[3]</ref>), which states that a local logic that is generated from the structure given in a classification is equivalent to the local logic constructed from its theory by generating formally created instances as follows:</p><p>1. We take as instances Y all those sequents Γ, ∆ that form a partition of the set of concepts (Γ ∪ ∆ = C and Γ ∩ ∆ = ∅); and are not constraints of the theory (Γ ∆)</p><p>For the theory given above, these sequents are {vehicle,car}, {building} {building}, {vehicle,car} {vehicle}, {building,car} 2. We then classify these instances according to the concepts that occur in the left-hand side component of the sequent:</p><formula xml:id="formula_8">|= C building vehicle car {vehicle,car}, {building} 0 1 1 {building}, {vehicle,car} 1 0 0 {vehicle}, {building,car} 0 1 0</formula><p>The generation of instances by means of sequents and their classification to types may not seem obvious, but it is based on the fact that these sequents 'code' the content of the classification table (the left-hand sides of the these sequents indicate which columns of the table bear a '1', while the right-hand sides indicate which columns bear a '0'). The local logic that characterises the reference ontology, i.e., the ontology given by O,</p><formula xml:id="formula_9">is L = (Y, C, |= C , ).</formula><p>The local ontology is populated, and hence has already instances and a classification relation. We only need to derive the theory of the local logic that characterises its concept hierarchy as specified in the lattice above. Therefore, its regular theory (C , ) has concept symbols as types, and is the smallest consequence relation closed by Identity, Weakening, and Global Cut that includes the following constraints:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>house,automobile cottage house house,automobile</head><p>The local logic that characterises the local ontology is, thus, L = (X, C , |= C , ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Generation of Ontology Morphisms via Infomorphisms</head><p>To map the ontologies, we must find an ontology morphism from O to O , which means that there must exist a logic infomorphism f = f , f from local logic L to local logic L . This amounts to first look for an infomorphism between their respective classifications:</p><p>-A map of concepts f : C → C (concept-level); -a map f from instances cabrio, . . . , coupe to the formally created instances of the reference ontology (instance-level);</p><p>Note that an ontology morphism, as defined in Definition 5, only captures the concept-level of the infomorphism, i.e. f . But f has to map the concepts in a way that it respects the hierarchy. One possible way would be:</p><formula xml:id="formula_10">f (building) = house f (vehicle) = automobile f (car) =automobile</formula><p>However, we should point out that the automatic generation of these maps is growing exponentially. But we can use the constraint that the map has to respect the concept hierarchy and limit the number of possible maps. Once the map is fixed, there is at most one acceptable way to map the instances in order for f to be an infomorphism. We do that by building the following table that represents an infomorphism:<ref type="foot" target="#foot_7">8</ref> We label rows by the instances in X = {cabrio, . . . , coupe} of the local ontology, and columns by the reference ontology's concepts C = {building,vehicle,car}. We put under each of these concepts the values of the column of the local ontology's classification table that corresponds to the image along the map of ontologies f (i.e., under building we put the column of house):</p><formula xml:id="formula_11">building vehicle car cabrio 0 1 1 my-home 1 0 0 4wd 0 1 1 new -inn 1 0 0 old -inn 1 0 0 coupe 0 1 1</formula><p>Each row should identify (taking into account the classification table of the reference ontology) the formal instances to which each local instance should be mapped onto. Hence, we have the following instance-component of our infomorphism:</p><formula xml:id="formula_12">f (cabrio) = {vehicle,car}, {building} f (my-home) = {building}, {vehicle,car} f (4wd ) = {vehicle,car}, {building} f (new -inn) = {building}, {vehicle,car} f (old -inn) = {building}, {vehicle,car} f (coupe) = {vehicle,car}, {building}</formula><p>We can also interpret the above table (and its resulting mapping of instances) as follows: cabrio is classified as both a vehicle and a car, according to the reference ontology. No other classification is possible without violating the definition of infomorphism. If cabrio was a vehicle but not a car, the local ontology would have been classifying its instances in a way that does not conform to the reference ontology and the fixed map of concepts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Relations and Their Arities</head><p>In order to constrain the search space when infomorphisms are generated in an automated way, we use ontological relations to guide the classification process that will result in the ontology mapping, namely by looking for infomorphisms g : R → R in a similar fashion as before. So, in our example case, we have the following relation defined in the reference ontology:</p><p>hasParkingSpaceFor : building × vehicle that is, the binary relation hasParkingSpaceFor holds over building and vehicle.</p><p>Similarly, in the local ontology we have the following two binary relations:</p><p>hasGarageFor : house × automobile hasShelterFor : cottage × automobile</p><p>These Local relations could be used to classify pairs of local instances:</p><formula xml:id="formula_13">hasShelterFor hasGarageFor my-home, cabrio 0 0 my-home, 4wd 0 0 my-home, coupe 1 1 new -inn, cabrio 1 0 new -inn, 4wd 0 0 new -inn, coupe 1 0 old -inn, cabrio 0 0 old -inn, 4wd 1 0 old -inn, coupe 0 0</formula><p>That is, my home has a garage (also considered a shelter) only for a coupe, the new inn has a shelter for a cabrio and a coupe, and the old inn has shelter for a 4wd. We then take these pairs and classify them according to the concepts of the reference ontology to determine the mapping of these ontologies:</p><p>1. Generate a classification of the above pairs with respect to the reference ontology's relation, by taking any of the two columns of the table above; this gives us two possibilities to explore, suppose we choose:</p><formula xml:id="formula_14">hasParkingSpaceFor my-home, cabrio 0 my-home, 4wd 0 my-home, coupe 1 new -inn, cabrio 1 new -inn, 4wd 0 new -inn, coupe 1 old -inn, cabrio 0 old -inn, 4wd 1 old -inn, coupe 0</formula><p>This is the column corresponding to hasShelterFor, and consequently g (hasParkingSpaceFor) = hasShelterFor.</p><p>2. The arity of relation hasParkingSpaceFor forces to classify the instances as follows:</p><p>building vehicle car cabrio 1 my-home</p><formula xml:id="formula_15">1 4wd 1 new -inn 1 old -inn 1 coupe 1</formula><p>3. Then we need to complete the table according to the definition of infomorphism. This is done as follows: Columns have to correspond to columns of the local ontology's classification table. The only possible completion is:</p><formula xml:id="formula_16">building vehicle car cabrio 0 1 my-home 1 0 4wd 0 1 new -inn 1 0 old -inn 1 0 coupe 0 1 Hence, f (building) = house f (vehicle) = automobile</formula><p>Rows have to correspond to rows of the reference ontology's classification table. The only possible completion is:</p><formula xml:id="formula_17">building vehicle car cabrio 0 1 1 my-home 1 0 0 4wd 0 1 1 new -inn 1 0 0 old -inn 1 0 0 coupe 0 1 1</formula><p>Hence, f (car) = automobile , which completes one possible valid ontology mapping.</p><p>The steps described above constitute the core part of the IF-Map method. We complement it with heuristic-based techniques to help us initiate the infomorphism generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Initiating the IF-Map Method</head><p>Our definition of ontology morphism (Definition 5) enforces an arity-compatibility check to ensure that the local instances are mapped onto appropriate reference types. When automating this step though, we have to be careful for undesired assignments. These arise when the prospective relations to be mapped share the same types but do not have the same semantics. For instance, assume that the reference ontology has relation hasJobTitle defined over concepts employee and string and the local ontology has relation authoredBy defined over string and employee. <ref type="foot" target="#foot_8">9</ref> The infomorphism generation will map the reference concept employee to the local concept string and the reference concept string to the local concept employee, which will inevitably map the hasJobTitle relation to authoredBy by virtue of sharing the same types.</p><p>To tackle this problem we are thinking of two possible ways: (a) We provide a partial map of concepts from one ontology to concepts of the other or (b) classify some instances from the local ontology to their counterparts in the reference ontology. This way we can say that the reference concept employee maps onto the local concept employee and the reference concept string maps onto the local concept string and only this mapping between these types is possible. This will constrain the infomorphism generation and the undesired infomorphisms will not appear. To do this partial mapping automatically we employ a set of heuristics (originally described in <ref type="bibr" target="#b19">[20]</ref>, pp.95-97, and enhanced for IF-Map). In particular, these heuristics are working on a purely syntactic match fashion but they use the is-a hierarchy and type checking to find types that are shared by relations in both ontologies. The algorithm goes like that:</p><p>1. Find relation names from both ontologies that are syntactically equivalent (i.e., publishedBy from the reference ontology matches publishedBy from the local ontology); 2. check if their argument types match (since we are dealing with binary relations, both argument types have to match, for instance employee for the reference and ontologies; paper for the reference and local ontologies); 3. use these types to fix a partial map to start the infomorphism generation; 4. if step 2 fails, then traverse the is-a hierarchy of types and find syntactically common types that subsume or are subsumed by the common relations' argument types (we traverse the is-a hierarchy in both directions: We check for parent and child nodes of the starting node); 5. those that are found syntactically equivalent will be used as in step 3 for partially fixing the initial map of the two ontologies; 6. if step 2 yields only one argument type match, use it and do step 4 for the other argument type.</p><p>Note that this algorithm relies on the existence of common relation names in both ontologies. These are syntactically invariant type names. We assume that since the role of reference ontologies within a community is to favour the sharing of knowledge expressed by means of different local ontologies, many of the names of concepts and relations used to express the reference ontology are syntactically equivalent to the ones used in the local ontologies to express the same (or similar) concepts and relations. If they are not, in which case we have syntactically variant type names, we use another algorithm which makes use of similar heuristics but the main difference is that step 2 above is now the first step and we don't employ step 1 at all. This will allow us to find syntactically variant type names that hold over the same argument types (or their dependants after the taxonomy of types has been traversed). However, this algorithm can yield irrelevant results as the types might be semantically different and not be a simple syntactic variation of the same concept.</p><p>In this case, the algorithms described cannot initiate IF-Map and then we turn to the second solution proposed above, which is to let the knowledge engineer classify instances manually. This solution though, requires familiarisation of the engineer with both the reference and local ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Application of IF-Map</head><p>We applied the algorithmic steps described in the illustrative example of Section 4 in a large-scale experiment that we conducted in the context of the AKT project (http://www.aktors.org). We have not finished our experiments yet, but we have done enough to assess IF-Map. The setting of the experiment is as follows: In the AKT project, five participating universities are contributing their own ontologies representing their own important concepts in the domain of computer science departments in the UK. There is also a reference ontology, AKT Reference, which was built collaboratively by interested participants from all five sites. So, we had to deal with five local ontologies and one reference ontology. The local ontologies were populated whereas the reference ontology was not. That is in-line with the IF-Map scenario we described in Section 4. Furthermore, since local ontologies are maintained locally by each participating site, it is anticipated to face a variety of formalisms and use different tools for ontology design, development, and deployment. IF-Map's architecture (see Section 2) however, allows for different formalisms to be used as input.</p><p>One of our case studies was to apply IF-Map to map AKT Reference to Southampton's and Edinburgh's local ontologies, Soton and Edin. These local ontologies are populated with a few thousand instances (ranging from 5k to 18k) and a few hundreds of concepts. There are a few axioms defined, and both have relations. AKT Reference is more compact, it has no instances and approximately 65 concepts with 45 relations. There are a few axioms defined as well. In Figure <ref type="figure" target="#fig_6">6</ref> we include two screenshots, one from Ontolingua-encoded AKT Reference-in particular, the organisations sub-ontology-and the translated version of this fragment in Prolog clauses. <ref type="foot" target="#foot_9">10</ref> As we mentioned earlier (Section 2), our translation is a partial and customised for the IF-Map application. Therefore, from the Ontolingua fragment shown in Figure <ref type="figure" target="#fig_6">6</ref> we only extract and transform to Prolog clauses the class hierarchy (by regarding frames as classes) and the relations along with their arities (which is used for type checking to bind appropriate tokens to types when using Prolog's backward chaining inference engine). In Figure <ref type="figure" target="#fig_7">7</ref> we include two screenshots, one from the Protégé-edited Soton-in particular, highlighting the class person and its template slots-and the translated version of this fragment in Prolog clauses. As with the reference ontology translation, we partially translate predefined fragments of the local ontology like class hierarchy and relations along with arities.</p><p>In Figure <ref type="figure" target="#fig_8">8</ref> we include a screenshot of our Web accessible RDF results page for some relations and concepts. In this page, we show a small fraction of the results from mapping concepts and relations from AKT Reference to to their counterparts in Soton. The concepts shown can be traced back to the previous figures where the original format is shown. As we can see, apart from mapping concepts, like AKT Reference's document to Soton's publication we also map relations: AKT Reference's hasappellation to Soton's title. The arities of these relations allow this sort of mapping, whereas in other ontologies this would have been inappropriate, when for example title refers to title of a paper. These mappings were generated automatically, and IF-Map initiated these with the semantically-rich heuristics we described in 4.5.</p><p>The algorithms we have implemented so far are of exponential complexity in the number of concepts, because they are based on a declarative Prolog specification of the mapping principle explained in in Section 4. Consequently, we currently base the IF-Map method on an incremental construction of ontology morphisms, in order to tackle large-scale ontologies: First, only certain manageable fragments of the ontologies are mapped, and next, these fixed maps are used to guide the generation of larger fragments, in the manner explained in Section 4. We are currently investigating heuristics for the automatic identification of such fragments. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>IF-Map, amid its well-defined purpose of ontology mapping and, extensionally, merging, taps on a number of areas and uses techniques discussed in diverse communities. Therefore, it is impossible to compile an exhaustive list of references to related work, but we have deliberately expanded the scope of references to cover as many representative works as possible; for a more in-depth survey on ontology mapping, see <ref type="bibr" target="#b20">[21]</ref>. At the same time though, we were careful to identify works that are related somehow with IF-Map's core characteristics: Use of formal definitions of ontology mapping, use of information-flow theory, expressed in a declarative and executable language in a domain and tool independent manner, applied as a method and as a theory for ontology mapping, and being-under circumstances-fully automatic. Not all of the references we cite here meet these criteria; some provide features that IF-Map does not support and others focus on a single criterion of the list given above. Nevertheless, the diversity of works reported in this section demonstrates the importance of the topic in a number of communities. This paper's scope, though, prevents us from getting into great detail when describing related work hereinafter, but we give a flavour of the current landscape in ontology mapping research across different communities. Among the few formal approaches in ontology mapping and merging is that of FCA-Merge <ref type="bibr" target="#b40">[41]</ref>. It is based on Formal Concept Analysis <ref type="bibr" target="#b13">[14]</ref> and it is aimed, mainly, at merging ontologies. Its developers, Stumme and Maedche, incorporate natural language techniques in their FCA-based method to derive a lattice of concepts. The lattice is then explored manually by a knowledge engineer who will build the merged ontology with semi-automatic guidance from FCA-Merge. In particular, FCA-Merge works as follows: The input to the method are a set of documents-from which concepts will be extracted-together with the ontologies that will be merged. These documents should be representative of the domain at question and be related to the ontologies. They also have to cover all concepts from both ontologies as well as separating them well enough. These strong assumptions have to be met in order to obtain good results from the FCA-Merge. As this method relies heavily on the availability of classified instances in ontologies to be merged, the authors argue that this will not be the case in most ontologies so they opt to extract instances from documents. In this respect, the first step of FCA-Merge could be viewed as an ontology population mechanism. This initial step in FCA-Merge could be skipped though, when there is a shared set of instances classified to the concepts in both ontologies. Once the instances will be extracted, <ref type="foot" target="#foot_10">11</ref> Stumme and Maedche construct the concept lattice and from there provide semi-automatic support for the knowledge engineer to derive the final merged ontology.</p><p>Formal Concept Analysis has also been used by the database community in their federated databases domain. In particular, Schmitt and Saake employ Formal Concept Analysis techniques to assist database schema integration <ref type="bibr" target="#b36">[37]</ref>. The focus of their work is to merge different inheritance hierarchies by decomposing overlapping class extensions into base extensions and use Formal Concept Analysis techniques to inform algorithms for integrating the databases schemata. In the Scalable Knowledge Composition (SKC) project, Jannink et al. <ref type="bibr" target="#b18">[19]</ref> presented the use of a rule-based algebra for encapsulating and composing ontologies. On-tologies are clustered in contexts, and the authors use a rule-based algebra to define interfaces to link the extracted contexts with the original ontologies.</p><p>Noy and Musen have developed two systems for performing ontology merging and alignment in the Protégé-2000 ontology development environment <ref type="bibr" target="#b15">[16]</ref>: SMART <ref type="bibr" target="#b32">[33]</ref> and its successor PROMPT <ref type="bibr" target="#b33">[34]</ref>. These tools use linguistic similarity matches between concepts for initiating the merging or alignment process and then use the underlying ontological structures provided by the Protégé-2000 environment (classes, slots, facets) to inform a set of heuristics for identifying further matches between the ontologies. A similar tool has been developed by McGuinness et al. for the Ontolingua ontology editor: Chimaera <ref type="bibr" target="#b28">[29]</ref>. As in PROMPT, this tool is interactive and the engineer is in charge of making decisions that will affect the merging.</p><p>From the machine learning perspective we report the works of Lacher and Groh <ref type="bibr" target="#b25">[26]</ref> and Doan et al. <ref type="bibr" target="#b8">[9]</ref> where their systems employ machine learning algorithms in conjunction with similarity measures to yield prospective mappings between ontology concepts. Other works worth citing here are Chalupsky's OntoMorph <ref type="bibr" target="#b5">[6]</ref> translation system for symbolic knowledge, Kiryakov et al.'s OntoMap portal <ref type="bibr" target="#b24">[25]</ref> for mapping linguistic ontologies, the OBSERVER system <ref type="bibr" target="#b29">[30]</ref> by Mena et al. for information integration, Gangemi et al.'s <ref type="bibr" target="#b12">[13]</ref> ONIONS methodology for medical ontologies, Visser and Tamma's heterogeneity categorisation <ref type="bibr" target="#b41">[42]</ref>, and the reports from Pinto et al. <ref type="bibr" target="#b34">[35]</ref> and Noy and Hafner in <ref type="bibr" target="#b31">[32]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this paper we have presented a novel method and a theory for ontology mapping. We formalised the notion of ontology, ontology morphism and ontology mapping and linked them to the formal notions of local logic and logic infomorphism stemming from IF theory. We then applied them in a mechanised manner-IF-Map-to map diverse ontologies. The first results are promising for the application of IF-Map to large-scale ontology mapping efforts and we continue researching fruitful extensions of it, such as ontology merging, reasoning about ontology evolution, and inclusion of ontological axioms.</p><p>The automation of ontology mapping as provided by IF-Map provides automated support in the alignment of ontologies by automatically generating mappings between a reference and various local ontologies. For instance, for the special case of data integration, this would correspond to automatic generation of source descriptions, e.g. formalised as views over a mediated schema <ref type="bibr" target="#b17">[18]</ref>. The correspondence, though, is not exact, as views over a mediated schema could be more expressive than IF-Maps current concept-to-concept and relation-torelation mapping.</p><p>In this sense it would be interesting to work on the integration of previous approaches to semantic integration by the database community with recent efforts carried out by the ontology community (see, e.g., <ref type="bibr" target="#b20">[21]</ref>) in the context of our approach to ontology mapping based on the Barwise-Seligman theory of information flow, as it might further illuminate the long road lying ahead.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The scenario for ontology mapping.</figDesc><graphic coords="4,93.18,144.17,247.05,112.41" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. The IF-Map architecture.</figDesc><graphic coords="5,43.76,334.63,346.00,174.31" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Concept lattice</figDesc><graphic coords="10,86.18,154.77,261.45,118.53" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Definition 3 .</head><label>3</label><figDesc>An ontology is a tuple O = (C, R, , ⊥, |, σ) where 1. C is a finite set of concept symbols; 2. R is a finite set of relation symbols; 3. is a reflexive, transitive and anti-symmetric relation on C (a partial order); 4. ⊥ is a symmetric and irreflexive relation on C (disjointness); 5. | is a symmetric relation on C (coverage); and 6. σ : R → C + is the function assigning to each relation symbol its arity; the functor (-) + sends a set C to the set of finite tuples whose elements are in C.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Proposition 1 .</head><label>1</label><figDesc>Hence, a populated ontology O = (C, R, , ⊥, |, σ)-with C = (X, C, |= C )determines a local logic L = (X, C, |= C , ) whose theory (C, ) is given by the smallest regular consequence relation (i.e., the smallest relation closed under Identity, Weakening, and Global Cut) such that, for all c, d ∈ C c d iff c d c, d iff c ⊥ d c, d iff c | d The characterisation of an ontology as a local logic justifies the IF-Map method presented in next section, which stems from our intention-explained in Section 2-to map an unpopulated ontology O = (C, R, , ⊥, |, σ) to a populated one O = (C , R , , ⊥ , | , σ ), by looking at the information flow. For this reason we "artificially" populate the concept types given in C and the relation types given in R to obtain classifications C = (Y, C, |= C ) and R = (Z, R, |= R ) (unlike a populated ontology, the instances of R need not to be finite tuples of instances of C), and further establish infomorphisms f : C C and g : R R , such that their type-level components f and g constitute an ontology morphism; because in that case we know that the populated ontology O will be a correct extension of O, in the sense that the images of O 's instances conform to O, as stated in the following proposition: Let O = (C, R, , ⊥, |, σ) be an (unpopulated) ontology, and let O = (C , R , , ⊥ , | , σ ) be a populated ontology with classifications C = (X , C , |= C ), R = (X + , R , |= R ). Let C = (Y, C, |= C ) and R = (Z, R, |= R ) be two classifications whose types are the concept and relation types of O. If O is correct and f : C C and g : R R are infomorphisms, such that (f , g ) : O → O is an ontology morphism, then, for all x, x 1 , . . . , x n ∈ X, c, d ∈ C, r ∈ R, and σ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Let the reference ontology be O = (C, R, , ⊥, |, σ), with concepts C = {building,vehicle,car}; -relations R = {hasParkingSpaceFor}; -arities σ(hasParkingSpaceFor) = building, vehicle ; and partial order , disjointness ⊥, and coverage | as defined by the following lattice: where is the top and is the bottom of the lattice, i.e., building | vehicle and building ⊥ vehicle. Let the local ontology be O = (C , R , , ⊥ , | , σ ), with concepts C = {house,cottage,automobile}; -relations R = {hasGarageFor,hasShelterFor}; -arities σ (hasGarageFor) = house, automobile , σ (hasShelterFor) = cottage, automobile ; and partial order , disjointness ⊥ , and coverage | as defined by the following lattice:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. A window with an Ontolingua fragment of AKT Reference overlapped by a smaller window showing a partial translation of this in Prolog clauses.</figDesc><graphic coords="23,43.76,135.83,345.45,261.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. A window with a Protégé fragment of Soton overlapped by a smaller window showing a partial translation of this in Prolog clauses.</figDesc><graphic coords="24,43.76,50.21,345.96,287.15" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Results of ontology mapping in Web accessible RDF format.</figDesc><graphic coords="25,45.49,49.90,342.12,405.52" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>We point the interested reader to http://suo.ieee.org for more information on this initiative.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Like the one from Wielemaker downloadable from http://www.swi-prolog.org/ packages/rdf2pl.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>We briefly describe the principles we used to partially translate from Ontolingua to Prolog in<ref type="bibr" target="#b19">[20]</ref>, pp.105-107.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>Regularity arises from the observation that, given a classification of instances to types, the set of all sequents that are satisfied by all instances do fulfil these properties.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p><ref type="bibr" target="#b4">5</ref> A partition of T is a pair T 0 , T 1 of subsets of T , such that T 0 ∪ T 1 = T and T 0 ∩ T 1 = ∅; T 0 and T 1 may themselves be empty (hence they form actually a quasi-partition</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>).<ref type="bibr" target="#b5">6</ref> f [Γ ] and f [∆] denote the set images of sets Γ and ∆ along function f , respectively.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_6"><p>Both disjointness and coverage can easily be extended to more than two concepts, although we stay with binary relations, for the ease of presentation.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_7"><p>Infomorphisms can themselves be represented by means of classification tables; this draws on theoretical work based on Chu spaces<ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b35">36]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_8"><p>Note that here the reference and local ontologies are not the same ontologies used in the mapping example.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_9"><p>The reader should bear in mind that clauses in the Prolog version denote the typing of the relations and not logical implications.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_10"><p>We do not refer to natural language techniques and methods used in this process by FCA-Merge developers, since they are peripheral to our interests in ontology mapping.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. An earlier version of this paper was presented under the title "Information-Flow based Ontology Mapping" at the First International Conference on Ontologies, Databases and Applications of Semantics (ODBASE'02), Irvine CA, USA, October 2002. We are grateful to Karl Aberer for selecting an extended version of that paper for this special volume, and we would like to thank the audience of ODBASE'02 and the reviewers for their valuable comments.</p><p>This work is supported under the Advanced Knowledge Technologies (AKT) Interdisciplinary Research Collaboration (IRC), which is sponsored by the UK Engineering and Physical Sciences Research Council under grant number GR/N15764/01. The AKT IRC comprises the Universities of Aberdeen, Edinburgh, Sheffield, Southampton and the Open University.</p><p>Marco Schorlemmer is also supported by a 'Ramón y Cajal' Fellowship from the Spanish Ministry of Science and Technology.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Chu construction</title>
		<author>
			<persName><forename type="first">M</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory and Applications of Categories</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="17" to="35" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Barwise</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Perry</surname></persName>
		</author>
		<title level="m">Situations and Attitudes</title>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Information Flow: The Logic of Distributed Systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Barwise</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Seligman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A comparative analysis of methodologies for database schema integration</title>
		<author>
			<persName><forename type="first">C</forename><surname>Batini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lenxerini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Navathe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="323" to="364" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The semantic web</title>
		<author>
			<persName><forename type="first">T</forename><surname>Berners-Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hendler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Lassila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Scientific American</title>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">OntoMorph: A translation system for symbolic knowledge</title>
		<author>
			<persName><forename type="first">H</forename><surname>Chalupsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">7th International Conference on Principles of Knowledge Representation and Reasoning</title>
		<meeting><address><addrLine>Breckenridge, Colorado, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-04">Apr. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On the insufficiency of ontologies: Problems in knowledge sharing and alternative solutions</title>
		<author>
			<persName><forename type="first">F</forename><surname>Corrêa Da Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Vasconcelos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Brilhante</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>De Melo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Finger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Agustí</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge-Based Systems</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="147" to="167" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Logic and Information</title>
		<author>
			<persName><forename type="first">K</forename><surname>Devlin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Learning to map between ontologies on the Semantic Web</title>
		<author>
			<persName><forename type="first">A</forename><surname>Doan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Madhavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Halevy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">11th International World Wide Web Conference</title>
		<meeting><address><addrLine>Honolulu, Hawaii, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-05">May 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Tadzebao and WebOnto: Discussing, browsing, and editing ontologies on the web</title>
		<author>
			<persName><forename type="first">J</forename><surname>Domingue</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">11th Workshop on Knowledge Acquisition, Modeling and Management</title>
		<meeting><address><addrLine>Banff, Alberta, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-04">Apr. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Knowledge and the Flow of Information</title>
		<author>
			<persName><forename type="first">F</forename><surname>Dretske</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981">1981</date>
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The Ontolingua Server: a tool for collaborative ontology construction</title>
		<author>
			<persName><forename type="first">A</forename><surname>Farquhar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fikes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rice</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Human-Computer Studies</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="707" to="727" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Ontology integration: Experiences with medical terminologies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Formal Ontology in Information Systems</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Guarino</surname></persName>
		</editor>
		<imprint>
			<publisher>IOS Press</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">46</biblScope>
		</imprint>
	</monogr>
	<note>of Frontiers in Artificial Intelligence and Applications</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Formal Concept Analysis</title>
		<author>
			<persName><forename type="first">B</forename><surname>Ganter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Draft proposed American National Standard</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Genesereth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Fikes</surname></persName>
		</author>
		<idno>NCITS.T2/98-004</idno>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
	<note>Knowledge Interchange Format (KIF)</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Knowledge modeling at the millennium (the design and evolution of Protégé-2000)</title>
		<author>
			<persName><forename type="first">W</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Eriksson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fergerson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gennari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Musen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th Workshop on Knowledge Acquisition, Modeling and Management</title>
		<meeting><address><addrLine>Banff, Alberta, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-10">Oct. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName><forename type="first">V</forename><surname>Gupta</surname></persName>
		</author>
		<title level="m">Chu Spaces: A Model of Concurrency</title>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
		<respStmt>
			<orgName>Stanford University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Answering queries using views</title>
		<author>
			<persName><forename type="first">A</forename><surname>Halevy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The VLDB Journal</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="270" to="294" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Encapsulation and composition of ontologies</title>
		<author>
			<persName><forename type="first">J</forename><surname>Jannink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pichai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Verheijen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Wiederhold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI&apos;98 Workshop on Information Integration</title>
		<meeting><address><addrLine>Madison, Wisconsin, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-07">July 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Deploying Ontologies in Software Design</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kalfoglou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-06">June 2000</date>
		</imprint>
		<respStmt>
			<orgName>Division of Informatics, The University of Edinburgh</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Ontology mapping: The sate of the art</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kalfoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schorlemmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge Engineering Review</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The information flow foundation for conceptual knowledge organization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">6th International Conference of the International Society for Knowledge Organization</title>
		<meeting><address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-07">July 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A KIF formalization of the IFF category theory ontology</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IJCAI 2001 Workshop of the IEEE Standard Upper Ontology</title>
		<meeting><address><addrLine>Seattle, Washington, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The IFF foundation for ontological knowledge organization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Knowledge Organization and Classification in International Information Retrieval, Cataloging and Classification Quarterly</title>
		<imprint>
			<publisher>The Haworth Press Inc</publisher>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">OntoMap: Portal for upper-level ontologies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kiryakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Simov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dimitrov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second International Conference on Formal Ontology in Information Systems</title>
		<meeting><address><addrLine>Ogunquit, Maine, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10">Oct. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Facilitating the exchange of explicit knowledge through ontology mappings</title>
		<author>
			<persName><forename type="first">M</forename><surname>Lacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Groh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th International FLAIRS Conference</title>
		<meeting><address><addrLine>Key West, Florida, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Resource description framework (RDF) model and syntax specification</title>
		<author>
			<persName><forename type="first">O</forename><surname>Lassila</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Swick</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/1999/REC-rdf-syntax-19990222/" />
		<imprint>
			<date type="published" when="1999-02">Feb. 1999</date>
			<publisher>W3C Recommendation</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Implementing the RDF model and syntax specification</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">Mcbride</forename><surname>Jena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CEUR Workshop Proceedings</title>
		<meeting><address><addrLine>Hong Kong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
	<note>nd International Workshop on the Semantic Web (SemWeb&apos;2001</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">An environment for merging and testing large ontologies</title>
		<author>
			<persName><forename type="first">D</forename><surname>Mcguinness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fikes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rice</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wilder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">7th International Conference on Principles of Knowledge Representation and Reasoning</title>
		<meeting><address><addrLine>Breckenridge, Colorado, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-04">Apr. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Domain specific ontologies for semantic information brokering on the global information infrastructure</title>
		<author>
			<persName><forename type="first">E</forename><surname>Mena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kashyap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Illarramendi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sheth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Formal Ontology in Information Systems</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Guarino</surname></persName>
		</editor>
		<imprint>
			<publisher>IOS Press</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="269" to="283" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Reusable Components for Knowledge Modelling: Case Studies in Parametric Design Problem Solving</title>
		<author>
			<persName><forename type="first">E</forename><surname>Motta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Frontiers in Artificial Intelligence and Applications</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<date type="published" when="1999">1999</date>
			<publisher>IOS Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The state of the art in ontology design: A survey and comparative review</title>
		<author>
			<persName><forename type="first">N</forename><surname>Noy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hafner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AI Magazine</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="53" to="74" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">SMART: Automated support for ontology merging and alignment</title>
		<author>
			<persName><forename type="first">N</forename><surname>Noy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Musen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th Workshop on Knowledge Acquisition, Modeling and Management</title>
		<meeting><address><addrLine>Banff, Alberta, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-10">Oct. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">PROMPT: Algorithm and tool for automated ontology merging and alignment</title>
		<author>
			<persName><forename type="first">N</forename><surname>Noy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Musen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">17th National Conference on Artificial Intelligence (AAAI&apos;00)</title>
		<meeting><address><addrLine>Austin, Texas, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-07">July 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Some issues on ontology integration</title>
		<author>
			<persName><forename type="first">S</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Martins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IJCAI&apos;99 Workshop on Ontologies and Problem-Solving Methods</title>
		<meeting><address><addrLine>Stockholm, Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08">Aug. 1999</date>
			<biblScope unit="volume">18</biblScope>
		</imprint>
	</monogr>
	<note>CEUR Workshop Proceedings</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">The Stone gamut: A coordination of mathematics</title>
		<author>
			<persName><forename type="first">V</forename><surname>Pratt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th Annual Symposium on Logic in Computer Science</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="444" to="454" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Merging inheritance hierarchies for database integration</title>
		<author>
			<persName><forename type="first">I</forename><surname>Schmitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Saake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3rd IFCIS International Conference on Cooperative Information Systems (CoopIS&apos;98)</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Duality in knowledge sharing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Schorlemmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th International Symposium on Artificial Intelligence and Mathematics</title>
		<meeting><address><addrLine>Ft. Lauderdale, Florida, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Federated database systems for managing distributed, heterogeneous, and autonomous databases</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sheth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Larson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="183" to="236" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Knowledge Representation and Reasoning: Logical, Philosophical, and Computational Foundations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sowa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<pubPlace>Brooks/Cole</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">FCA-Merge: Bottom-up merging of ontologies</title>
		<author>
			<persName><forename type="first">G</forename><surname>Stumme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Maedche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">17th International Joint Conference on Artificial Intelligence (IJCAI&apos;01)</title>
		<meeting><address><addrLine>Seattle, Washington, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-08">Aug. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">An exeprience with ontology-based agent clustering</title>
		<author>
			<persName><forename type="first">P</forename><surname>Visser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Tamma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IJCAI&apos;99 Workshop on Ontologies and Problem-Solving Methods</title>
		<meeting><address><addrLine>Stockholm, Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08">Aug. 1999</date>
			<biblScope unit="volume">18</biblScope>
		</imprint>
	</monogr>
	<note>CEUR Workshop Proceedings</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
