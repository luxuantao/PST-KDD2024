<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Efficient Methodology for Mapping Quantum Circuits to the IBM QX Architectures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Student Member, IEEE</roleName><forename type="first">Alwin</forename><surname>Zulehner</surname></persName>
							<email>alwin.zulehner@jku.at</email>
						</author>
						<author>
							<persName><forename type="first">Alexandru</forename><surname>Paler</surname></persName>
							<email>alexandru.paler@jku.at</email>
						</author>
						<author>
							<persName><forename type="first">Robert</forename><surname>Wille</surname></persName>
							<email>robert.wille@jku.at</email>
						</author>
						<title level="a" type="main">An Efficient Methodology for Mapping Quantum Circuits to the IBM QX Architectures</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">B6FADAB0F3902854A05C7BC66D191CF5</idno>
					<idno type="DOI">10.1109/TCAD.2018.2846658</idno>
					<note type="submission">This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCAD.2018.2846658, IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 1</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In the past years, quantum computers more and more have evolved from an academic idea to an upcoming reality. IBM's project IBM Q can be seen as evidence of this progress. Launched in March 2017 with the goal to provide access to quantum computers for a broad audience, this allowed users to conduct quantum experiments on a 5-qubit and, since June 2017, also on a 16-qubit quantum computer (called IBM QX2 and IBM QX3, respectively). Revised versions of these 5-qubit and 16-qubit quantum computers (named IBM QX4 and IBM QX5, respectively) are available since September 2017. In order to use these, the desired quantum functionality (e.g. provided in terms of a quantum circuit) has to be properly mapped so that the underlying physical constraints are satisfied -a complex task. This demands solutions to automatically and efficiently conduct this mapping process.</p><p>In this paper, we propose a methodology which addresses this problem, i.e. maps the given quantum functionality to a realization which satisfies all constraints given by the architecture and, at the same time, keeps the overhead in terms of additionally required quantum gates minimal. The proposed methodology is generic, can easily be configured for similar future architectures, and is fully integrated into IBM's SDK. Experimental evaluations show that the proposed approach clearly outperforms IBM's own mapping solution. In fact, for many quantum circuits, the proposed approach determines a mapping to the IBM architecture within minutes, while IBM's solution suffers from long runtimes and runs into a timeout of 1 hour in several cases. As an additional benefit, the proposed approach yields mapped circuits with smaller costs (i.e. fewer additional gates are required). All implementations of the proposed methodology is publicly available at http://iic.jku.at/eda/research/ibm_qx_mapping.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Quantum computers and quantum algorithms have received lots of interests in the past -of course, mainly motivated by their ability to solve certain tasks significantly faster than classical algorithms <ref type="bibr" target="#b0">[1]</ref>- <ref type="bibr" target="#b3">[4]</ref>. These quantum algorithms are described by so-called quantum circuits, a sequence of gates that are applied to the qubits of a quantum computer. While theoretical algorithms have already been developed in the last century (e.g. <ref type="bibr" target="#b1">[2]</ref>- <ref type="bibr" target="#b3">[4]</ref>), physical realizations have been considered "dreams of the future" for a long time. This changed in recent years in which quantum computers more and more evolved from an academic idea to an upcoming reality.</p><p>IBM's project IBM Q <ref type="bibr" target="#b4">[5]</ref>, which launched in March 2017 with the goal to provide access to a quantum computer to the broad audience, can be seen as evidence of this progress. Initially, they started with the 5 qubit quantum processor IBM QX2, on which anyone could run experiments through cloud access. In June 2017, IBM added a 16 qubit quantum processor named IBM QX3 to their cloud <ref type="bibr" target="#b5">[6]</ref> and, thus, more than tripled the number of available qubits within a few months. Since then, IBM has been working intensely on improving their quantum computers -leading to 5-qubit and 16-qubit quantum computers (named IBM QX4 and IBM QX5, respectively) which were added to the cloud in September 2017.</p><p>The rapid progress in the number of available qubits is still going on. While IBM has already manufactured a 20-qubit quantum computer which is available for their partners and members of the IBM Q network, as well as a prototype of a 50-qubit processor, other well-known companies like Google have also announced the intent to manufacture quantum chips with 49 qubits (using architectures as described in <ref type="bibr" target="#b6">[7]</ref>) in the near future to show quantum supremacy <ref type="bibr" target="#b9">[8]</ref>, <ref type="bibr" target="#b10">[9]</ref>.</p><p>However, in order to use these physical realizations, the desired quantum functionality to be executed has to properly be mapped so that the underlying physical constraints are satisfied. This constitutes a complex task. One issue is that the desired functionality (usually described by higher level components) has to be decomposed into elementary operations supported by the IBM QX architectures. Furthermore, there exist physical limitations, namely that certain quantum operations can only be applied to selected physical qubits of the IBM QX architectures. Consequently, the logical qubits of a quantum circuit have to be mapped to the physical qubits of the quantum computer such that all operations can be conducted. Since it is usually not possible to determine a mapping such that all constraints are satisfied throughout the whole circuit, this mapping may change over time. To this end, additional gates, e.g. realizing SWAP operations, are inserted in order to "move" the logical qubits to other physical ones. They affect the reliability of the circuit (each further gate increases the potential for errors during the quantum computation) as well as the execution time of the quantum algorithm. Hence, their number should be kept as small as possible.</p><p>While there exist several methods to address the first issue, i.e. how to efficiently map higher level components to elementary operations (see <ref type="bibr" target="#b11">[10]</ref>- <ref type="bibr" target="#b14">[13]</ref>), there is hardly any work on how to efficiently satisfy the additional constraints for these new and real architectures. Although there are similarities with recent work on nearest neighbor optimization of quantum circuits as proposed in <ref type="bibr" target="#b15">[14]</ref>- <ref type="bibr" target="#b21">[20]</ref>, they are not applicable since simplistic architectures with 1-dimensional or 2-dimensional layouts are assumed in that work which have significantly less restrictions. Even IBM's own solution, which is provided by means of the Python SDK QISKit <ref type="bibr" target="#b22">[21]</ref> fails in many cases since the random search employed there does not cope with the underlying complexity and cannot generate a result in acceptable time.</p><p>The above motivates a solution that is as efficient as circuit designers e.g. in the classical domain, take for granted today. In this work 1 , we propose a corresponding methodology. To this end, a multi-step approach is introduced which utilizes a depth-based partitioning and A * as underlying search algorithm as well as further optimizations such as a look-ahead scheme and the ability to determine the initial mapping of the qubits throughout the mapping process (instead of fixing the initial mapping at the beginning of the algorithm). The resulting methodology is generic, i.e. it can directly be applied to all existing QX architectures as well as similar upcoming architectures which may come in the future (and architectures whose constraints can be formulated in a similar way). Finally, we integrated the methodology into IBM's Python SDK QISKit -allowing for a more realistic performance evaluation since post-mapping optimizations provided by IBM are additionally considered.</p><p>Experimental evaluations confirmed the benefits and allowed for an explicit analysis of the effects of the respective optimizations incorporated into the proposed methodology. The results clearly show that the methodology is able to cope with the complexity of satisfying the constraints discussed above. Using this solution, QX-compatible mappings for many quantum circuits can be determined within minutes, while IBM's own solution suffers from long runtimes and runs into a timeout of 1 hour in these cases. Moreover, as an additional benefit, realizations with smaller costs (i.e. fewer additional gates) are obtained. All implementations are publicly available at http://iic.jku.at/eda/research/ibm_qx_mapping and, as mentioned above, have been integrated into IBM's own SDK -resulting in an advanced and integrated mapping scheme for the QX architectures provided by IBM.</p><p>This paper is structured as follows. In Section II, we review quantum circuits as well as the IBM QX architectures. In Section III, we discuss the process to map a given quantum circuit to the IBM QX architectures. How to particularly cope with the problem of satisfying the additional constraints is covered in Section IV. In Section V, the performance of the proposed mapping scheme is analyzed and compared to the performance of the solution provided by IBM. Section VI concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BACKGROUND</head><p>In this section, we briefly review the basics of quantum circuits and the IBM QX architectures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Quantum Circuits</head><p>Classical computations and circuits use bits as information units. In contrast, quantum circuits perform their computations on qubits <ref type="bibr" target="#b0">[1]</ref>. These qubits can not only be in one of the two basis states |0 or |1 , but also in a superposition of bothallowing for the representation of all possible 2 n basis states of n qubits concurrently. This so-called quantum parallelism 1 A preliminary version of this work is available at <ref type="bibr" target="#b23">[22]</ref>.</p><formula xml:id="formula_0">q 0 q 0 q 1 q 1 q 2 q 2 H T Fig. 1: Circuit diagram of a quantum circuit</formula><p>serves as basis for algorithms that are significantly faster on quantum computers than on classical machines. To this end, the qubits of a quantum circuit are manipulated by quantum operations represented by so-called quantum gates. These operations can either operate on a single qubit, or on multiple ones. For multi-qubit gates, we distinguish target qubits and control qubits. The value of the target qubits is modified in the case that the control qubits are set to basis state |1 . The Clifford+T library <ref type="bibr" target="#b11">[10]</ref>, which is composed of the single-qubit gates H (Hadamard gate) and T (Phase shift by π/4), as well as the two-qubit gate CNOT (controlled NOT), represents a universal set of quantum operations (i.e. all quantum computations can be implemented by a circuit composed of gates from this library).</p><p>To describe quantum circuits, high level quantum languages (e.g. Scaffold <ref type="bibr" target="#b24">[23]</ref> or Quipper <ref type="bibr" target="#b25">[24]</ref>), quantum assembly languages (e.g. OpenQASM 2.0 developed by IBM <ref type="bibr" target="#b26">[25]</ref>), or circuit diagrams are employed. In the following, we use the latter to describe quantum circuits (but the proposed approach has also been applied using the other descriptions as well). In a circuit diagram, qubits are represented by horizontal lines, which are passed through quantum gates. In contrast to classical circuits, this however does not describe a connection of wires with a physical gate, but defines (from left to right) in which order the quantum gates are applied to the qubits.</p><p>Example 1. Fig. <ref type="figure">1</ref> shows the circuit diagram of a quantum circuit. The quantum circuit is composed of three qubits and five gates. The single-qubit gates H and T are represented by boxes labeled with H and T, respectively, while the control and target qubit of the CNOT gate are represented by • and ⊕, respectively. First, a Hadamard operation is applied to qubit q 0 . Then, a CNOT operation with target q 1 and control qubit q 0 is conducted -followed by a T-gate that is applied to q 2 . Finally, two more CNOTs are applied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. IBM's QX Architectures</head><p>In this work, we consider how to efficiently map a quantum circuit to the IBM QX architectures provided by the project IBM Q <ref type="bibr" target="#b4">[5]</ref>. IBM provides a Python SDK named QISKit <ref type="bibr" target="#b22">[21]</ref> that allows a designer to describe quantum circuits, to simulate them, and to execute them on the real device (a so-called backend) in their cloud. The first backend composed of 5 qubits and called IBM QX2 was launched in March 2017. In June 2017, IBM launched a second one called IBM QX3 which is composed of 16 physical qubits that are connected with coplanar waveguide bus resonators <ref type="bibr" target="#b5">[6]</ref>. Quantum operations are conducted by applying microwave pulses to the qubits. In September 2017, IBM launched revised versions of their 5-qubit and 16-qubit backends named IBM QX4 and IBM QX5, respectively.</p><formula xml:id="formula_1">Q0 Q1 Q2 Q4 Q3 (a) IBM QX2 Q0 Q1 Q2 Q4 Q3 (b) IBM QX4 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q0 Q15 Q14 Q13 Q12 Q11 Q10 Q9 (c) IBM QX3 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q0 Q15 Q14 Q13 Q12 Q11 Q10 Q9 (d) IBM QX5</formula><p>Fig. <ref type="figure">2</ref>: Coupling map of the IBM QX architectures <ref type="bibr" target="#b5">[6]</ref> The IBM QX architectures support the elementary single qubit operation U (θ, φ, λ) = R z (φ)R y (θ)R z (λ) (i.e. an Euler decomposition) that is composed by two rotations around the z-axis and one rotations around the y-axis, as well as the CNOT operation. By adjusting the parameters θ, φ, and λ, single-qubit operations of other gate libraries like the H or the T gate (cf. Section II-A) can be realized (among others like rotations).</p><p>However, there are significant restrictions which have to be satisfied when running quantum algorithms on these architectures. In fact, the user first has to decompose all non-elementary quantum operations (e.g. Toffoli gate, SWAP gate, or Fredkin gate) to the elementary operations U (θ, φ, λ) and CN OT . Moreover, two-qubit gates, i.e. CNOT gates, cannot arbitrarily be placed in the architecture but are restricted to dedicated pairs of qubits only. Even within these pairs, it is firmly defined which qubit is supposed to work as target and which qubit is supposed to work as control. These restrictions are given by the so-called coupling-map illustrated in Fig. <ref type="figure">2</ref>, which sketches the layout of the currently available IBM QX architectures. The circles indicate physical qubits (denoted by Q i ) and arrows indicate the possible CNOT applications, i.e. an arrow pointing from physical qubit Q i to qubit Q j defines that a CNOT with control qubit Q i and target qubit Q j can be applied. In the following, these restrictions are called CNOT-constraints and need to be satisfied in order to execute a quantum circuit on an QX architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MAPPING OF QUANTUM CIRCUITS</head><p>TO THE IBM QX ARCHITECTURES Mapping quantum circuits to the IBM QX architectures requires the consideration of two major issues. On the one hand, all gates of the given quantum circuit to be mapped have to be decomposed to elementary operations supported by the hardware, i.e. CNOTs and parameterized U gates. On the other hand, the n logical qubits q 0 , q 1 , . . . q n-1 of that quantum circuit have to be mapped to the m physical qubits Q 0 , Q 1 , . . . Q m-1 (m = 5 for QX2 and QX4, whereas m = 16 for QX3 and QX5) of the IBM QX architecture. Each logical qubit has to be represented by a physical one, such that all CNOT-constraints are satisfied. In this section, we describe how these two issues can be handled in an automatic fashion, what problems occur during this process, and how they can be addressed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Decomposing Quantum Circuits to Elementary Operations</head><p>Considering the first issue, IBM has developed the quantum assembly language OpenQASM <ref type="bibr" target="#b26">[25]</ref> that supports specification of quantum circuits. Besides elementary gates, the language allows the definition of complex gates that are composed from the elementary operations CNOT and U . These gates can then be nested to define even more complex gates. Consequently, as long as a decomposition of the gates used in a description of the desired quantum functionality are provided by the circuit designer, the nested structures are just flattened during the mapping process.</p><p>In case the desired quantum functionality is not provided in OpenQASM, decomposition or synthesis approaches such as those proposed in <ref type="bibr" target="#b11">[10]</ref>- <ref type="bibr" target="#b14">[13]</ref> and <ref type="bibr" target="#b27">[26]</ref>- <ref type="bibr" target="#b29">[28]</ref>, respectively can be applied which determine (e.g. depth optimal) realizations of quantum functionality for specific libraries like Clif-ford+T <ref type="bibr" target="#b11">[10]</ref> or NCV <ref type="bibr" target="#b30">[29]</ref>. They typically use search algorithms or a matrix representation of the quantum functionality. For the Clifford+T library, Matsumoto and Amano developed a normal form for single qubit operations <ref type="bibr" target="#b13">[12]</ref>, which allows for a unique and T-depth optimal decomposition (approximation) of arbitrary single qubit gates (e.g. rotations) into a sequence of Clifford+T gates (up to a certain error ). Several such automated methods are available in Quipper (a functional programming language for quantum computing <ref type="bibr" target="#b25">[24]</ref>), the ScaffCC compiler for the Scaffold language <ref type="bibr" target="#b24">[23]</ref>, <ref type="bibr" target="#b31">[30]</ref>, and RevKit <ref type="bibr" target="#b32">[31]</ref>. Since IBM provides the decomposition for commonly used gates like the Clifford+T gates, (controlled) rotations, or Toffoli gates to their gate library, these approaches can be utilized.</p><p>Example 2. One commonly used operation is the SWAP operation, which exchanges the states of two qubits. Since the SWAP operation is not part of the gate library of IBM's QX architectures, it has to be decomposed into single-qubit gates and CNOTs as shown in Fig. <ref type="figure">3</ref>. Assume that logical qubits q 0 and q 1 are initially mapped to the physical qubits Q 0 and Q 1 of QX2, and that their values are to be swapped. As a first decomposition step, we realize the SWAP operation with three CNOTs. If we additionally consider the CNOT-constraints, we have to flip the direction of the CNOT in the middle. To this end, we apply Hadamard operations before and after this CNOT. These Hadamard operations then have to be realized by the gate U (π/2, 0, π) = H.</p><p>Hence, decomposing the desired quantum functionality to the elementary gate library is already well covered by corresponding related work. Unfortunately, this is not the case for the second issue, which is discussed next.</p><formula xml:id="formula_2">Q 0 ← q 0 q 1 Q 1 ← q 1 q 0 Q 0 ← q 0 q 1 Q 1 ← q 1 q 0 Q 0 ← q 0 q 1 Q 1 ← q 1 q 0 H H H H Fig. 3: Decomposition of SWAP gates B. Satisfying CNOT-constraints</formula><p>Recall that, in order to satisfy the CNOT-constraints as defined in Section II-B, the n logical qubits q 0 , q 1 , . . . q n-1 of the quantum circuit to be realized have to be mapped to the m physical qubits Q 0 , Q 1 , . . . Q m-1 (m = 5 for QX2 and QX4, whereas m = 16 for QX3 and QX5) of the IBM QX architecture. Usually, there exists no mapping solution that satisfies all CNOT-constrains throughout the whole circuit (this is already impossible if CNOT gates are applied to qubit pairs (q h , q i ), (q h , q j ), (q h , q k ), and (q h , q l ) with</p><formula xml:id="formula_3">h = i = j = k = l).</formula><p>That is, whatever initial mapping might be imposed at the beginning, it may have to be changed during the execution of a quantum circuit (namely exactly when a gate is to be executed which violates a CNOT-constraint). To this end, H and SWAP gates can be applied to change the direction of a CNOT gate and to change the mapping of the logical qubits, respectively. In other words, these gates can be used to "move" around the logical qubits on the actual hardware until the CNOT-constraints are satisfied. An example illustrates the idea.</p><p>Example 3. Consider the quantum circuit composed of 5 CNOT gates shown in Fig. <ref type="figure" target="#fig_1">4a</ref> and assume that the logical qubits q 0 , q 1 , q 2 , q 3 , q 4 , and q 5 are respectively mapped to the physical qubits</p><formula xml:id="formula_4">Q 0 , Q 1 , Q 2 , Q 3 , Q 14 ,</formula><p>and Q 15 of the IBM QX3 architecture shown in Fig. <ref type="figure">2c</ref>. The first gate can directly be applied, because the CNOT-constraint is satisfied. For the second gate, the direction has to be changed because a CNOT with control qubit Q 0 and target Q 1 is valid, but not vice versa. This can be accomplished by inserting Hadamard gates as shown in Fig. <ref type="figure" target="#fig_1">4b</ref>. For the third gate, we have to change the mapping. To this end, we insert SWAP operations SW AP (Q 1 , Q 2 ) and SW AP (Q 2 , Q 3 ) to move logical qubit q 1 towards logical qubit q 4 (see Fig. <ref type="figure" target="#fig_1">4b</ref>). Afterwards, q 1 and q 4 are mapped to the physical qubits Q 3 and Q 14 , respectively, which allows us to apply the desired CNOT gate. Following this procedure for the remaining qubits eventually results in the circuit shown in Fig. <ref type="figure" target="#fig_1">4b</ref>.</p><p>However, inserting the additional gates in order to satisfy the CNOT-constraints drastically increases the number of operations -a significant drawback which affects the reliability of the quantum circuit since each gate has a certain error rate. Since each SWAP operation is composed of 7 elementary gates (cf. Fig. <ref type="figure">3</ref>), particularly their number shall be kept as small as possible. Besides that, the circuit depth shall be kept as small as it is related to the time required to execute the quantum circuit. Since a SWAP operation has a depth of 5, this also motivates the search for alternative solutions which realize a CNOT-constraint-compliant mapping with as few SWAP operations as possible.</p><p>Example 4. Consider again the given quantum circuit from Fig. <ref type="figure" target="#fig_1">4a</ref> as well as its mapping derived in Example 3 and shown in Fig. <ref type="figure" target="#fig_1">4b</ref>. This circuit is composed of 51 elementary operations and has a depth of 36. In contrast, the same quantum circuit can be realized with only 23 elementary operations and depth of 10 as shown in Fig. <ref type="figure" target="#fig_1">4c</ref> (g 2 and g 3 can be applied concurrently) -a significant reduction.</p><p>Determining proper mappings has similarities with recent work on nearest neighbor optimization of quantum circuits proposed in <ref type="bibr" target="#b15">[14]</ref>- <ref type="bibr" target="#b21">[20]</ref>. <ref type="foot" target="#foot_0">2</ref> In that work, SWAP gates have also been applied to move qubits together in order to satisfy a physical constraint. However, these works consider simpler and artificial architectures with 1-dimensional or 2-dimensional layouts where any two-qubit gate can be applied to adjacent qubits. The CNOT-constraints to be satisfied for the IBM QX architectures are much stricter with respect to what physical qubits may interact with each other and also what physical qubit may act as control and as target qubit. Furthermore, the parallel execution of gates (which is possible in the QX architectures) is not considered by these approaches. Besides that, there exists a recent approach that utilizes temporal planning to compile quantum circuits to real architectures <ref type="bibr" target="#b33">[32]</ref>. However, this approach is rather specialized to Quantum Alternating Operator Ansatz (QAOA <ref type="bibr" target="#b34">[33]</ref>) circuits for solving the MaxCut problem and target the architectures proposed by Rigetti (cf. <ref type="bibr" target="#b35">[34]</ref>). As a consequence, none of the approaches discussed above is directly applicable for the problem considered here.</p><p>As a further alternative, IBM provides a solution within its SDK <ref type="bibr" target="#b22">[21]</ref>. This algorithm randomly searches (guided by heuristics) for mappings of the qubits at a certain point of time. These mappings are then realized by adding SWAP gates to the circuit. But this random search is hardly feasible for many quantum circuits and, hence, is not as efficient as circuit designers, e.g. in the conventional domain, take for granted today. In fact, in many cases the provided method is not capable of determining a CNOT-constraint-compliant mapping within 1 hour (cf. Section V) -an issue which will become more serious when further architectures with more qubits are introduced.</p><p>Overall, automatically and efficiently mapping quantum circuits to the IBM QX architectures particularily boils down to the question how to efficiently determine a mapping of logical qubits to physical qubits which satisfy the CNOT-constraints. How this problem can be addressed is covered in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EFFICIENTLY SATISFYING CNOT-CONSTRAINTS</head><p>In this section, we propose an efficient method for mapping a given quantum circuit (which has already been decomposed into a sequence of elementary gates as described in Section III-A) to the IBM QX architectures. (a) Original circuit The main objective is to minimize the number of elementary gates which are added in order to make the mapping CNOT-constraint-compliant. Two main steps are employed: First, the given circuit is partitioned into layers which can be realized in a CNOT-constraint-compliant fashion. Afterwards, for each of these layers, a particular compliant mapping is determined which requires as few additional gates as possible.</p><formula xml:id="formula_5">Q0 ← q0 q0 Q1 ← q1 q2 Q2 ← q2 q3 Q3 ← q3 q1 Q14 ← q4 q4 Q15 ← q5 q5 H H H H q 2 q 1 q 3 q 1 q 1 q 3 q 4 q 3 q 3 q 4 q 3 q 1 g0 g1 g2 g3 g4 (b) Naive strategy Q0 ← q2 q3 Q1 ← q3 q2 Q2 ← q1 q1 Q3 ← q0 q4 Q4 ← q4 q0 Q15 ← q5 q5 q 3 q 2 q 4 q 0 H H H H g0,g1<label>g2</label></formula><p>In the following subsections, both steps are described in detail. Afterwards, further optimizations are proposed to reduce the costs of the resulting circuit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Partitioning the Circuit Into Layers</head><p>As mentioned above, the mapping from logical qubits to physical ones may change over time in order to satisfy all CNOT-constraints, i.e. the mapping may have to change before a CNOT can be applied. Since each change of the mapping requires additional SWAP operations, we aim for conducting these changes as rarely as possible. To this end, we combine gates that can be applied concurrently into so-called layers (i.e. sets of gates). A layer l i contains only gates that act on distinct sets of qubits. Furthermore, this allows us to determine a mapping such that the CNOT-constraints for all gates g j ∈ l i are satisfied at the same time. We form the layers in a greedy fashion, i.e. we add a gate to the layer l i where i is as small as possible. In the circuit diagram representation, this means to move all gates to the left as far as possible without changing the order of gates that share a common qubit. Note that the depth of a circuit is equal to the number of layers of a circuit.</p><p>Example 5. Consider again the quantum circuit shown in Fig. <ref type="figure" target="#fig_1">4a</ref>. The gates of the circuit can be partitioned into three layers l 0 = {g 0 , g 1 }, l 1 = {g 2 , g 3 }, and l 2 = {g 4 } (indicated by the dashed lines in Fig. <ref type="figure" target="#fig_1">4a</ref>).</p><p>To satisfy all CNOT constraints, we have to map the logical qubits of each layer l i to physical ones. Since the resulting mapping for layer l i not necessarily have to be equal to the mapping determined for the previous layer l i-1 , we additionally need to insert SWAP operations that permute the logical qubits from the mapping for layer l i-1 to the desired mapping for layer l i . In the following, we call this sequence of SWAP operations permutation layer π i . The mapped circuit is then an interleaved sequence of the layers l i of the original circuit, and the according permutation layers π i , i.e. l 0 π 1 l 1 π 2 l 2 . . ..</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Determining Compliant Mappings for the Layers</head><p>For each layer l i , we now determine all mappings σ i j : {q 0 , q 1 , . . . q n-1 } → {Q 0 , Q 1 , . . . Q m-1 } describing to which physical qubit a logical qubit is mapped. The starting point is an initial mapping which is denoted by σ i 0 and obtained from the previous layer l i-1 , i.e. σ i 0 = σi-1 (for l 0 , a randomly generated initial mapping that satisfies all CNOT constraints for the gates g ∈ l 0 is used). Now, this initial mapping σ i 0 should be changed to the desired mapping which is denoted by σi , is CNOT-constraint-compliant for all gates g ∈ l i , and can be established from σ i 0 with minimum costs, i.e. the minimum number of additionally required elementary operations. In the worst case, determining σi requires the consideration of m!/(m -n)! possibilities (where m and n are the number of physical qubits and logical qubits, respectively) -an exponential complexity. We cope with this complexity by applying an A * search algorithm.</p><p>The A * algorithm <ref type="bibr" target="#b36">[35]</ref> is a state-space search algorithm. To this end, (sub-)solutions of the considered problem are represented by state nodes. Nodes that represent a solution are called goal nodes (multiple goal nodes may exist). The main idea is to determine the cheapest path (i.e. the path with the lowest cost) from the root node to a goal node. Since the search space is typically exponential, sophisticated mechanisms are employed in order to keep considering as few paths as possible.</p><p>All state-space search algorithms are similar in the way they start with a root node (representing an initial partial solution) which is iteratively expanded towards the goal node (i.e. the desired complete solution). How to choose the node to be expanded next depends on the actual search algorithm. For A * search, we determine the cost of each leaf-node of the search space. Then, the node with the lowest cost is chosen to be expanded next. To this end, we determine the cost f (x) = g(x) + h(x) of a node x. The first part (g(x)) describes the cost of the current sub-solution (i.e. the cost of the path from the root to x). The second part describes the remaining cost (i.e. the cost from x to a goal node), which is estimated by a heuristic function h(x). Since the node with the lowest cost is expanded, some parts of the search space (those that lead to expensive solutions) are never expanded. Example 6. Consider the tree shown in Fig. <ref type="figure" target="#fig_2">5</ref>. This tree represents the part of the search space that has already been explored for a certain search problem. The nodes that are candidates to be expanded in the next iteration of the A * 0278-0070 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. Obviously, the heuristic cost should be as accurate as possible, to expand as few nodes as possible. If h(x) always provides the correct minimal remaining cost, only the nodes along the cheapest path from the root node to a goal node would be expanded. But since the minimal costs are usually not known (otherwise, the search problem would be trivial to solve), estimations are employed. However, to ensure an optimal solution, h(x) has to be admissible, i.e. h(x) must not overestimate the cost of the cheapest path from x to a goal node. This ensures that no goal node is expanded (which terminates the search algorithm) until all nodes that have the potential to lead to a cheaper solution are expanded.</p><p>Example 6 (continued). Consider again the node labeled E. If h(x) is admissible, the true cost of each path from this node to a goal node is greater than or equal to 200.</p><p>To use the A * algorithm for our search problem, an expansion strategy for a state (i.e. a mapping σ i j ) as well as an admissible heuristic function h(x) to estimate the distance of a state to a goal state (i.e. the mapping σi ) are required. Given a mapping σ i j , we can determine all possible successor mappings σ i h by employing all possible combinations of SWAP gates that can be applied concurrently. <ref type="foot" target="#foot_1">3</ref> The fixed costs of all these successor states σ i h is then f (σ i h ) = f (σ i j ) + 7 • #SW AP S since each SWAP gate is composed of 7 elementary operations (3 CNOTs and 4 Hadamard operations). Note that we can restrict the expansion strategy to SWAP operations that affect at least one qubit that occurs in a CNOT gate g ∈ l i on layer l i . This is justified by the fact that only these qubits influence whether or not the resulting successor mapping is CNOT-constraint-compliant.</p><p>Example 7. Consider again the quantum circuit shown in Fig. <ref type="figure" target="#fig_1">4a</ref> and assume we are searching for a mapping for layer l 1 = {g 2 , g 3 }. In the previous layer l 0 , the logical qubits q 1 , q 3 , q 4 , and q 5 have been mapped to the physical qubits Q 0 , Q 3 , Q 14 , and Q 15 , respectively (i.e. σ0 ). This initial mapping σ 1 0 = σ0 does not satisfy the CNOT-constraints for the gates in l 1 . Since we only consider four qubits in the CNOTs of l 1 , σ i 0 has only 51 successors σ i j .</p><p>As mentioned above, to obtain an optimal mapping (i.e. the mapping with the fewest additionally required elementary operations that satisfies all CNOT-constraints), we need a heuristic function that does not overestimate the real cost (i.e. the minimum number of additionally inserted elementary operations) for reaching σi from σ i j . The real minimum costs for an individual CNOT gate g ∈ l i can easily be determined given σ i j . First, we determine the physical qubits Q s and Q t to which the control and target qubit of g are mapped (which is given by σ i j ). Using the coupling map of the architecture (cf. Fig. <ref type="figure">2</ref>), we then determine the shortest path (following the arrows in the coupling map <ref type="foot" target="#foot_2">4</ref> ) p from Q s to Q t . The costs of the CNOT gate h(g, σ i j ) = (|p| -1) • 7 are then determined by the length of this shortest path |p|. In fact, (|p| -1) SWAP operations are required to move the control and target qubits of g towards each other. If none of the arrows of the path p on the coupling map (representing that a CNOT can be applied) points into the desired direction, we have to increase the true minimum costs further by 4, since 2 Hadamard operations are required before and after the CNOT to change its direction.</p><p>The heuristic costs of a mapping σ i j can be determined from the real costs of each CNOT gate g ∈ l i in layer l i . Simply summing them up might overestimate the true cost, because one SWAP operation might reduce the distance of the control and target qubits for more than one CNOT of layer l i . Since this would prevent us from determining the optimal solution σi , we instead determine the heuristic costs of a state σ i j as h(σ i j ) = max g∈li h(g, σ i j ), i.e. the maximum of the true costs of the CNOTs in layer l i .</p><p>Example 7 (continued). The logical qubits q 1 and q 4 are mapped to the physical qubits σ 1 0 (q 1 ) = Q 1 and σ 1 0 (q 4 ) = Q 14 , respectively. Since the shortest path on the cou-</p><formula xml:id="formula_6">pling map is p = Q 1 → Q 2 → Q 3 → Q 14 (cf. Fig. 2), the true minimum costs for g 2 is h(g 2 , σ 1 0 ) = 2 • 7 = 14.</formula><p>Analogously, the costs of g 3 can be determined to be h(g 3 , σ 1 0 ) = 7 -resulting in overall heuristic costs of h(σ 1 0 ) = max(14, 7) = 14 for the initial mapping. Following the A* algorithm outlined above, we eventually determine a mapping σ1 that maps the logical qubits q 0 , q 1 , q 2 , q 3 , q 4 , and q 5 to the physical qubits</p><formula xml:id="formula_7">Q 0 , Q 2 , Q 1 , Q 4 , Q 3 ,</formula><p>and Q 5 by inserting two SWAP operations (as depicted in Fig. <ref type="figure">6</ref>). Applying the algorithm also for mapping layer l 2 , the circuit shown in Fig. <ref type="figure">6</ref> results. This circuit is composed of 37 elementary operations and has depth 15.</p><formula xml:id="formula_8">Q0 ← q0 q0 Q1 ← q1 q1 Q2 ← q2 q2 Q3 ← q3 q3 Q14 ← q4 q4 Q15 ← q5 q5 H H H H q 2 q 1 q 4 q 3 q 1 q 2 q 3 q 4 l0 l1 l2 g0 g1 g2,g3<label>g4</label></formula><p>Fig. <ref type="figure">6</ref>: Circuit resulting from locally optimal mappings</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Optimizations</head><p>A * allows us to efficiently determine an optimal mapping (by means of additionally required operations) for each layer. However, the algorithm proposed in Section IV-B considers only a single layer when determining σi for layer l i .</p><p>One way to optimize the proposed solution is to employ a look-ahead scheme which incorporates information from the following layers to the cost function. To this end, we only have to change the heuristics to estimate the costs for reaching a mapping that satisfies all CNOT-constraints from the current one. In Section IV-B, we used the maximum of the costs for each CNOT gate in layer l i to estimate the true remaining cost. For the look-ahead scheme, we additionally determine an estimate for layer l i+1 . The overall heuristic that guides the search algorithm towards a solution is then the sum of both estimates.</p><p>To incorporate the look-ahead scheme, we change the heuristics discussed in Section IV-B. Instead of taking the maximum of the CNOTs in the current layer, we sum up the costs of all CNOTs in two layers (the current and the lookahead layer), i.e. h(σ i j ) = g∈li∪li+1 h(g, σ i j ). As discussed above, this might lead to an over-estimation of the true remaining costs for reaching a goal state and, thus, the solution is not guaranteed to be locally optimal. However, this is not desired anyways, since we want to allow locally sub-optimal solutions in order to find cheaper mappings for the following layers -resulting in smaller overall circuits.</p><p>Example 8. Consider again the quantum circuit shown in Fig. <ref type="figure" target="#fig_1">4a</ref> and assume that the logical qubits q 0 , q 1 , q 2 , q 3 , q 4 , and q 5 are mapped to the physical qubits</p><formula xml:id="formula_9">Q 0 , Q 1 , Q 2 , Q 3 , Q 14 ,</formula><p>and Q 15 , respectively. Using the look-ahead scheme discussed above will not determine the locally optimal solution with costs of 14 for layer l 1 (as discussed in Example 7), but a mapping σ1 that satisfies all CNOT-constraints with costs of 22 (as show in Fig. <ref type="figure">7</ref>). The additional costs of 8 result since, after applying two SWAP gates (cf. Fig. <ref type="figure">7</ref>), the directions of both CNOTs of layer l 1 have to change. However, this mapping also satisfies all CNOT-constraints for layer l 2 , which means that the remaining CNOT g 4 can be applied without adding further SWAPs. The resulting circuit is composed of a total of 31 elementary operations and has depth of 12 (as shown in Fig. <ref type="figure">7</ref>; gates g 2 and g 3 can be applied concurrently). Consequently, the look-ahead scheme results in a cheaper mapping than the</p><formula xml:id="formula_10">Q0 ← q0 q1 Q1 ← q1 q0 Q2 ← q2 q2 Q3 ← q3 q3 Q14 ← q4 q5 Q15 ← q5 q4 H H H H q 1 q 0 q 5 q 4 H H H H H H H H l0 l1 l2 g0 g1 g2 g3 g4</formula><p>Fig. <ref type="figure">7</ref>: Circuit generated when using the look-ahead scheme "pure" methodology proposed in Section IV-B and yielding the circuit shown in Fig. <ref type="figure">6</ref>. <ref type="foot" target="#foot_3">5</ref>Besides the look-ahead scheme, we can further improve the methodology by not starting with a random mapping for layer l 0 . Instead, we propose to use partial mappings σ i j and to start with an empty mapping σ 0 0 (i.e. none of the logical qubits is mapped to a physical one). Then, before we start to search a mapping for layer l 1 , we check whether the qubits that occur in the CNOTs g ∈ l i have already been mapped for one of the former layers. If not, we can freely chose one of the "free" physical qubits (i.e. a physical qubit no logical qubit is mapped to). Obviously, we choose the physical qubit so that the cost for finding σi is as small as possible.</p><p>This scheme gives us the freedom to evolve the initial mapping throughout the mapping process, rather than starting with an initial mapping that might be non-beneficial with respect to the overall number of elementary operations.</p><p>Example 9. Optimizing the methodology with a partial mapping that is initially empty results in the circuit already shown before in Fig. <ref type="figure" target="#fig_1">4c</ref>. This circuit is composed of 23 elementary operations and has depth 10 (gates g 2 and g 3 can be applied concurrently).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENTAL EVALUATION</head><p>Taking all considerations and methods discussed above into account led to the development of a mapping methodology which decomposes arbitrary quantum functionality into elementary quantum gates supported by the QX architectures and, afterwards, maps them so that all CNOT-constraints are satisfied. As mentioned above, IBM's Python SDK QISKit already implements most of these steps, but lacks an efficient methodology for mapping the circuits such that all CNOT-constraints are satisfied. To overcome this issue, we have implemented the mapping methodology presented in this paper in C++ and integrated it into QISKit. The adapted version of QISKit as well as a standalone version of the methodology are publicly available at http://iic.jku.at/eda/research/ibm_qx_mapping.</p><p>In this section, we compare the efficiency of the resulting scheme to the original design flow implemented in QISKit <ref type="bibr" target="#b22">[21]</ref>. To this end, several functions taken from RevLib <ref type="bibr" target="#b37">[36]</ref> as well as quantum algorithms written in Quipper <ref type="bibr" target="#b25">[24]</ref> or the Scaffold language <ref type="bibr" target="#b24">[23]</ref> (and pre-compiled by the ScaffoldCC compiler <ref type="bibr" target="#b31">[30]</ref>) have been considered as benchmarks and mapped to the most recent 16-qubit architecture available (i.e. QX5). <ref type="foot" target="#foot_4">6</ref> Besides that, benchmarks that are relevant for existing quantum algorithms such as quantum ripple-carry adders (based on the realization proposed in <ref type="bibr" target="#b38">[37]</ref> and denoted adder) and small versions of Shor's algorithm (based on the realization proposed in <ref type="bibr" target="#b39">[38]</ref> and denoted shor) have been considered. All evaluations have been conducted on a 4.2 GHz machine with 4 cores (2 hardware threads each) and 32 GB RAM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Effect of the Optimizations</head><p>In a first series of evaluations, we evaluate the improvements gained by the optimizations discussed in Section IV-C. The corresponding numbers are listed in Table <ref type="table" target="#tab_0">I</ref>. For each benchmark, we provide the name, the number of logical qubits n, the number of gates g, as well as the depth of the circuit d, before mapping the circuit to the IBM QX5 architecture. In the remainder of the table, we list the results provided by the proposed methodology, i.e. the number of gates g and the depth of the circuit d after mapping it to the IBM QX5 architecture as well as the time required to determine that mapping (in CPU seconds).</p><p>Three different settings of the methodology are thereby considered. As baseline serves the approach proposed in Section IV that uses an A * algorithm to determine locally optimal mappings for each layer of the circuit (denoted Baseline in the following). Furthermore, we list the numbers when enriching the baseline with a look-ahead scheme as discussed in Section IV-C (denoted Look-Ahead in the following). Finally, we also list the resulting numbers for the fully optimized methodology that uses a look-ahead scheme and additionally allows for evolving the mapping throughout the mapping process as discussed in Section IV-C (denoted Fully-Optimized in the following). The timeout was set to one hour.</p><p>Table <ref type="table" target="#tab_0">I</ref> clearly shows the improvements that can be gained by applying the optimizations discussed in Section IV-C. On average, the number of gates of the mapped circuit decreases by 16.1% when applying a look-ahead scheme as discussed in Section IV-C. For the depth of the circuit, we obtain similar improvements. Here, the number of layers reduces on average by 13.4%. However, using the look-ahead scheme causes the mapping algorithm to time out in nine cases (instead of five cases for baseline) -leading to a less scalable solution. If we additionally allow to evolve the initial mapping of logical qubits to physical qubits throughout the mapping process instead of starting with a random mapping, we can overcome this scalability issue while obtaining mappings of similar quality. In fact, the average improvement regarding the number of gates and the depth of the circuits slightly increase to 19.7% and 14.1%, respectively (compared to Baseline).</p><p>Overall, the optimizations discussed in Section IV-C not only increase the scalability of the mapping algorithm outlined in Section IV-B, but -as a positive side effect -also reduce the size of the resulting circuit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Comparison to the State of the Art</head><p>In a second series of evaluation, we compare the proposed mapping methodology to the solution provided by IBM via QISKit. A fair comparison of both mapping solution is guaranteed since we incorporated the mapping algorithm discussed in this paper into QISKit. Hence, the same decomposition schemes as well as the same post-mapping optimizations are applied in both cases.</p><p>Table <ref type="table" target="#tab_1">II</ref> lists the respectively obtained results. For each benchmark, we again list the name, the number of logical qubits n, the number of gates g, and the depth d of the quantum circuit before mapping it to the IBM QX5 architecture. In the remaining columns, we list the number of gates, the depth, and the runtime t (in CPU seconds) for IBM's solution as well as for the solution proposed in this work. Since IBM's mapping algorithm searches for mappings that satisfy all CNOT-constraints randomly (guided by certain heuristics), we conducted the mapping procedure 5 times for each benchmark and list the obtained minimum, the average (denoted by subscripts min and avg , respectively), as well as the standard deviation σ for each of the listed metrics. The timeout for searching a single mapping was again set to one hour.</p><p>The results clearly show that the proposed solution can efficiently tackle the considered mapping problem -in particular compared to the method available thus far. While IBM's solution runs into the timeout of one hour in 10 out of 60 cases, the proposed algorithm determines a mapping for each circuit within the given time limit. Besides that, the approach is frequently magnitudes faster compared to IBM's solution.</p><p>Besides efficiency, the proposed methodology for mapping a quantum circuit to the IBM QX architectures also yields circuits with significantly fewer gates than the results determined by IBM's solution. In fact, the solution proposed in Section IV results on average in circuits with 24.0% fewer gates and 18.3% fewer depth on average compared to the minimum observed when runnings IBM's algorithm several times. Compared to the average results yield by IBM's solution, we obtain improvements of 27.5% and 22.0% for gate count and circuit depth, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>In this paper, we proposed an advanced and integrated methodology that efficiently maps a given quantum circuit to IBM's QX architectures. To this end, the desired quantum functionality is first decomposed into the supported elementary quantum gates. Afterwards, CNOT-constraints imposed by the architecture are satisfied. Particular the later step caused a non-trivial task for which an efficient solution based on a depth-based partitioning, an A * search algorithm, a lookahead scheme, as well as a dedicated initialization of the mapping has been proposed. The resulting approach eventually allows us to efficiently map quantum circuits to real quantum hardware and has been integrated into IBM's SDK QISKit. The efficiency has been confirmed by experimental evaluations. The proposed approach was able to determine a mapping for quantum circuits within seconds in most cases whereas IBM's solution requires more than one hour to determine a g: the number of quantum gates (elementary operations) d: depth of the quantum circuits t: runtime of the algorithm Baseline: the approach described in Sec. IV-B Look-Ahead: the approach described in Sec. IV-B enriched with the look-ahead scheme discussed in Sec. IV-C Fully-Optimized: the approach described in Sec. IV-B enriched with all optimizations discussed in Sec. IV-C for several cases. As a further positive side effect, the mapped circuits have significantly fewer gates and smaller circuit depth, which positively influences the reliability and the runtime of the circuit. The resulting methodology is generic, i.e. it can be directly applied to all existing QX architectures as well as similar architectures which may come in the future. All implementations are publicly available at http://iic.jku.at/ eda/research/ibm_qx_mapping. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: Mapping of a quantum circuit to the IBM QX3 architecture</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: A * search algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I</head><label>I</label><figDesc>Effect of the Optimizations</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Baseline</cell><cell></cell><cell cols="2">Look-Ahead</cell><cell></cell><cell cols="2">Fully-Optimized</cell><cell></cell></row><row><cell>Name</cell><cell>n</cell><cell>g</cell><cell>d</cell><cell>g</cell><cell>d</cell><cell>t</cell><cell>g</cell><cell>d</cell><cell>t</cell><cell>g</cell><cell>d</cell><cell>t</cell></row><row><cell>adder_10</cell><cell>10</cell><cell>142</cell><cell>99</cell><cell>444</cell><cell>251</cell><cell>1.22</cell><cell>355</cell><cell>209</cell><cell>1.08</cell><cell>292</cell><cell>172</cell><cell>1.20</cell></row><row><cell>hwb9</cell><cell cols="3">10 207 775 116 199</cell><cell cols="3">743 973 403 199 1 662.82</cell><cell cols="3">653 249 374 954 1 437.33</cell><cell cols="3">655 220 375 105 1 422.33</cell></row><row><cell cols="2">ising_model_10 10</cell><cell>480</cell><cell>70</cell><cell>235</cell><cell>41</cell><cell>4.63</cell><cell>235</cell><cell>41</cell><cell>4.58</cell><cell>251</cell><cell>47</cell><cell>4.14</cell></row><row><cell>max46</cell><cell cols="3">10 27 126 14 257</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="2">86 049 46 692</cell><cell>185.19</cell><cell cols="2">84 914 46 270</cell><cell>185.82</cell></row><row><cell>mini_alu</cell><cell>10</cell><cell>173</cell><cell>69</cell><cell>710</cell><cell>301</cell><cell>2.38</cell><cell>587</cell><cell>261</cell><cell>1.32</cell><cell>474</cell><cell>225</cell><cell>1.25</cell></row><row><cell>qft_10</cell><cell>10</cell><cell>200</cell><cell>63</cell><cell>685</cell><cell>227</cell><cell>1.23</cell><cell>445</cell><cell>135</cell><cell>1.54</cell><cell>447</cell><cell>170</cell><cell>1.25</cell></row><row><cell>rd73</cell><cell>10</cell><cell>230</cell><cell>92</cell><cell>952</cell><cell>405</cell><cell>1.83</cell><cell>916</cell><cell>374</cell><cell>1.57</cell><cell>656</cell><cell>301</cell><cell>1.52</cell></row><row><cell>sqn</cell><cell cols="2">10 10 223</cell><cell>5 458</cell><cell cols="2">37 781 19 461</cell><cell>80.15</cell><cell cols="2">32 099 17 785</cell><cell>72.25</cell><cell cols="2">32 095 17 801</cell><cell>68.97</cell></row><row><cell>sym9</cell><cell cols="3">10 21 504 12 087</cell><cell cols="2">78 388 43 269</cell><cell>172.95</cell><cell cols="2">67 290 38 982</cell><cell>147.99</cell><cell cols="2">66 637 38 849</cell><cell>145.37</cell></row><row><cell>sys6-v0</cell><cell>10</cell><cell>215</cell><cell>75</cell><cell>962</cell><cell>383</cell><cell>1.96</cell><cell>794</cell><cell>301</cell><cell>1.50</cell><cell>613</cell><cell>250</cell><cell>1.36</cell></row><row><cell>urf3</cell><cell cols="3">10 125 362 70 702</cell><cell cols="3">517 104 271 754 1 045.85</cell><cell cols="2">439 268 239 099</cell><cell>888.77</cell><cell cols="2">440 509 239 702</cell><cell>873.84</cell></row><row><cell>9symml</cell><cell cols="3">11 34 881 19 235</cell><cell cols="2">133 813 70 088</cell><cell>296.80</cell><cell cols="2">114 179 63 659</cell><cell>255.02</cell><cell cols="2">116 508 64 279</cell><cell>254.25</cell></row><row><cell>dc1</cell><cell>11</cell><cell>1 914</cell><cell>1 038</cell><cell>8 310</cell><cell>4 277</cell><cell>16.22</cell><cell>6 024</cell><cell>3 359</cell><cell>13.07</cell><cell>5 946</cell><cell>3 378</cell><cell>12.38</cell></row><row><cell>life</cell><cell cols="3">11 22 445 12 511</cell><cell cols="2">86 075 45 499</cell><cell>358.56</cell><cell cols="2">73 020 41 137</cell><cell>161.90</cell><cell cols="2">74 632 41 767</cell><cell>166.95</cell></row><row><cell>shor_11</cell><cell cols="3">11 49 295 30 520</cell><cell cols="2">125 825 70 115</cell><cell>325.13</cell><cell cols="2">109 574 60 721</cell><cell>317.81</cell><cell cols="2">106 322 58 943</cell><cell>322.78</cell></row><row><cell>sym9</cell><cell cols="3">11 34 881 19 235</cell><cell cols="2">133 813 70 088</cell><cell>292.40</cell><cell cols="2">114 179 63 659</cell><cell>249.49</cell><cell cols="2">116 508 64 279</cell><cell>251.42</cell></row><row><cell>urf4</cell><cell cols="12">11 512 064 264 330 1 926 128 980 191 4 257.19 1 653 689 888 594 3 481.55 1 650 845 878 249 3 534.79</cell></row><row><cell>wim</cell><cell>11</cell><cell>986</cell><cell>514</cell><cell>3 632</cell><cell>1 914</cell><cell>7.60</cell><cell>3 176</cell><cell>1 712</cell><cell>6.54</cell><cell>2 985</cell><cell>1 711</cell><cell>6.30</cell></row><row><cell>z4</cell><cell>11</cell><cell>3 073</cell><cell>1 644</cell><cell>12 041</cell><cell>6 332</cell><cell>24.91</cell><cell>10 002</cell><cell>5 486</cell><cell>20.71</cell><cell>9 717</cell><cell>5 335</cell><cell>20.92</cell></row><row><cell>adder_12</cell><cell>12</cell><cell>177</cell><cell>123</cell><cell>631</cell><cell>336</cell><cell>1.76</cell><cell>483</cell><cell>249</cell><cell>1.64</cell><cell>372</cell><cell>226</cell><cell>1.32</cell></row><row><cell>cm152a</cell><cell>12</cell><cell>1 221</cell><cell>684</cell><cell>4 254</cell><cell>2 226</cell><cell>9.13</cell><cell>4 039</cell><cell>2 271</cell><cell>8.23</cell><cell>3 738</cell><cell>2 155</cell><cell>8.02</cell></row><row><cell>cycle10_2</cell><cell>12</cell><cell>6 050</cell><cell>3 386</cell><cell cols="2">23 991 12 405</cell><cell>49.62</cell><cell cols="2">19 513 10 950</cell><cell>45.82</cell><cell cols="2">19 857 11 141</cell><cell>42.26</cell></row><row><cell>rd84</cell><cell cols="2">12 13 658</cell><cell>7 261</cell><cell cols="2">52 508 26 668</cell><cell>157.72</cell><cell cols="2">45 509 24 421</cell><cell>107.69</cell><cell cols="2">45 497 24 473</cell><cell>99.89</cell></row><row><cell>sqrt8</cell><cell>12</cell><cell>3 009</cell><cell>1 659</cell><cell>11 921</cell><cell>6 224</cell><cell>26.64</cell><cell>10 166</cell><cell>5 642</cell><cell>21.35</cell><cell>9 744</cell><cell>5 501</cell><cell>19.66</cell></row><row><cell>sym10</cell><cell cols="3">12 64 283 35 572</cell><cell cols="2">251 731 130 657</cell><cell>535.84</cell><cell cols="2">214 881 118 780</cell><cell>500.05</cell><cell cols="2">215 569 118 753</cell><cell>501.02</cell></row><row><cell>sym9</cell><cell>12</cell><cell>328</cell><cell>127</cell><cell>1 436</cell><cell>608</cell><cell>2.54</cell><cell>1 240</cell><cell>532</cell><cell>2.27</cell><cell>955</cell><cell>425</cell><cell>2.08</cell></row><row><cell>adr4</cell><cell>13</cell><cell>3 439</cell><cell>1 839</cell><cell>13 475</cell><cell>6 829</cell><cell>29.53</cell><cell>11 245</cell><cell>6 120</cell><cell>23.84</cell><cell>11 301</cell><cell>6 205</cell><cell>23.17</cell></row><row><cell>dist</cell><cell cols="3">13 38 046 19 694</cell><cell cols="2">147 115 72 929</cell><cell>323.20</cell><cell cols="2">125 342 66 590</cell><cell>334.67</cell><cell cols="2">125 867 66 318</cell><cell>291.90</cell></row><row><cell>gse_10</cell><cell cols="3">13 390 180 245 614</cell><cell cols="3">863 511 533 279 2 441.38</cell><cell cols="3">576 399 401 121 2 263.71</cell><cell cols="3">520 010 376 695 2 237.10</cell></row><row><cell cols="2">ising_model_13 13</cell><cell>633</cell><cell>71</cell><cell>313</cell><cell>41</cell><cell>6.08</cell><cell>313</cell><cell>41</cell><cell>6.09</cell><cell>329</cell><cell>47</cell><cell>5.11</cell></row><row><cell cols="4">plus63mod4096 13 128 744 72 246</cell><cell cols="3">529 896 270 734 1 203.45</cell><cell cols="3">434 900 242 815 1 006.16</cell><cell cols="3">439 981 243 861 1 086.48</cell></row><row><cell>radd</cell><cell>13</cell><cell>3 213</cell><cell>1 781</cell><cell>11 790</cell><cell>6 387</cell><cell>25.35</cell><cell>10 868</cell><cell>6 088</cell><cell>23.67</cell><cell>10 441</cell><cell>5 872</cell><cell>22.00</cell></row><row><cell>rd53</cell><cell>13</cell><cell>275</cell><cell>124</cell><cell>1 367</cell><cell>619</cell><cell>2.53</cell><cell>1 044</cell><cell>457</cell><cell>1.97</cell><cell>942</cell><cell>469</cell><cell>1.93</cell></row><row><cell>root</cell><cell cols="2">13 17 159</cell><cell>8 835</cell><cell cols="2">67 941 32 854</cell><cell>327.20</cell><cell cols="2">56 654 29 846</cell><cell>120.01</cell><cell cols="2">57 874 30 068</cell><cell>120.82</cell></row><row><cell>shor_13</cell><cell cols="3">13 98 109 59 350</cell><cell cols="2">259 511 140 923</cell><cell>656.43</cell><cell cols="2">229 752 121 093</cell><cell>783.74</cell><cell cols="2">224 556 118 536</cell><cell>640.55</cell></row><row><cell>squar5</cell><cell>13</cell><cell>1 993</cell><cell>1 049</cell><cell>7 948</cell><cell>4 069</cell><cell>16.35</cell><cell>6 453</cell><cell>3 470</cell><cell>13.29</cell><cell>6 267</cell><cell>3 448</cell><cell>12.96</cell></row><row><cell>410184</cell><cell>14</cell><cell>211</cell><cell>104</cell><cell>914</cell><cell>441</cell><cell>1.82</cell><cell>708</cell><cell>337</cell><cell>1.42</cell><cell>758</cell><cell>366</cell><cell>1.48</cell></row><row><cell>adder_14</cell><cell>14</cell><cell>212</cell><cell>147</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>437</cell><cell>268</cell><cell>1.47</cell></row><row><cell>clip</cell><cell cols="3">14 33 827 17 879</cell><cell cols="2">135 455 67 312</cell><cell>322.36</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="2">114 336 60 882</cell><cell>327.55</cell></row><row><cell>cm42a</cell><cell>14</cell><cell>1 776</cell><cell>940</cell><cell>6 473</cell><cell>3 394</cell><cell>13.93</cell><cell>5 572</cell><cell>3 076</cell><cell>11.16</cell><cell>5 431</cell><cell>3 013</cell><cell>11.95</cell></row><row><cell>cm85a</cell><cell cols="2">14 11 414</cell><cell>6 374</cell><cell cols="2">46 300 23 662</cell><cell>185.98</cell><cell cols="2">37 927 21 215</cell><cell>464.90</cell><cell cols="2">37 746 21 189</cell><cell>242.80</cell></row><row><cell cols="4">plus127mod8192 14 330 777 185 853</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>-</cell><cell>-</cell><cell cols="4">TO 1 132 251 626 451 2 481.95</cell></row><row><cell cols="4">plus63mod8192 14 187 112 105 142</cell><cell cols="3">773 514 395 379 1 628.19</cell><cell cols="3">637 137 355 040 1 364.63</cell><cell cols="3">640 204 354 076 1 443.33</cell></row><row><cell>pm1</cell><cell>14</cell><cell>1 776</cell><cell>940</cell><cell>6 473</cell><cell>3 394</cell><cell>13.62</cell><cell>5 572</cell><cell>3 076</cell><cell>11.14</cell><cell>5 431</cell><cell>3 013</cell><cell>11.10</cell></row><row><cell>sao2</cell><cell cols="3">14 38 577 19 563</cell><cell cols="2">155 351 74 524</cell><cell>330.62</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="2">131 002 66 975</cell><cell>283.90</cell></row><row><cell>sym6</cell><cell>14</cell><cell>270</cell><cell>135</cell><cell>1 101</cell><cell>547</cell><cell>2.33</cell><cell>1 136</cell><cell>526</cell><cell>2.05</cell><cell>852</cell><cell>456</cell><cell>1.84</cell></row><row><cell>co14</cell><cell cols="2">15 17 936</cell><cell>8 570</cell><cell cols="2">80 399 34 658</cell><cell>331.89</cell><cell cols="2">62 348 29 831</cell><cell>176.55</cell><cell cols="2">63 826 30 366</cell><cell>133.71</cell></row><row><cell>dc2</cell><cell>15</cell><cell>9 462</cell><cell>5 242</cell><cell cols="2">36 968 19 306</cell><cell>83.96</cell><cell cols="2">31 722 17 559</cell><cell>95.81</cell><cell cols="2">30 680 17 269</cell><cell>72.53</cell></row><row><cell>ham15</cell><cell>15</cell><cell>8 763</cell><cell>4 819</cell><cell cols="2">32 175 17 379</cell><cell>79.80</cell><cell cols="2">27 861 15 668</cell><cell>61.70</cell><cell cols="2">28 310 15 891</cell><cell>68.75</cell></row><row><cell>misex1</cell><cell>15</cell><cell>4 813</cell><cell>2 676</cell><cell>17 833</cell><cell>9 621</cell><cell>38.63</cell><cell>15 260</cell><cell>8 810</cell><cell>33.18</cell><cell>15 185</cell><cell>8 729</cell><cell>33.11</cell></row><row><cell>rd84</cell><cell>15</cell><cell>343</cell><cell>110</cell><cell>1 593</cell><cell>553</cell><cell>3.30</cell><cell>1 337</cell><cell>441</cell><cell>2.81</cell><cell>971</cell><cell>353</cell><cell>2.23</cell></row><row><cell>square_root</cell><cell>15</cell><cell>7 630</cell><cell>3 847</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="2">25 212 13 205</cell><cell>55.35</cell></row><row><cell>urf6</cell><cell cols="3">15 171 840 93 645</cell><cell cols="3">684 701 353 581 1 456.37</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="3">580 295 313 011 1 436.16</cell></row><row><cell>adder_16</cell><cell>16</cell><cell>247</cell><cell>171</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>515</cell><cell>319</cell><cell>1.72</cell></row><row><cell>alu2</cell><cell cols="3">16 28 492 15 176</cell><cell cols="2">118 919 58 105</cell><cell>244.83</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="2">98 166 51 817</cell><cell>454.93</cell></row><row><cell>cnt3-5</cell><cell>16</cell><cell>485</cell><cell>209</cell><cell>1 957</cell><cell>887</cell><cell>3.89</cell><cell>1 488</cell><cell>725</cell><cell>2.98</cell><cell>1 376</cell><cell>669</cell><cell>3.00</cell></row><row><cell>example2</cell><cell cols="3">16 28 492 15 176</cell><cell cols="2">118 919 58 105</cell><cell>246.00</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell cols="2">98 166 51 817</cell><cell>449.08</cell></row><row><cell>inc</cell><cell cols="2">16 10 619</cell><cell>5 863</cell><cell cols="2">41 042 21 614</cell><cell>86.91</cell><cell cols="2">34 742 19 431</cell><cell>74.13</cell><cell cols="2">34 375 19 176</cell><cell>72.85</cell></row><row><cell cols="2">ising_model_16 16</cell><cell>786</cell><cell>71</cell><cell>391</cell><cell>41</cell><cell>6.88</cell><cell>391</cell><cell>41</cell><cell>6.86</cell><cell>426</cell><cell>48</cell><cell>6.47</cell></row><row><cell>qft_16</cell><cell>16</cell><cell>512</cell><cell>105</cell><cell>2 193</cell><cell>589</cell><cell>69.04</cell><cell>1 299</cell><cell>281</cell><cell>8.62</cell><cell>1 341</cell><cell>404</cell><cell>16.43</cell></row><row><cell>n: the number of qubits</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE II</head><label>II</label><figDesc>Mapping to the IBM QX5 architecture</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">IBM's solution</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Proposed approach</cell></row><row><cell>Name</cell><cell>n</cell><cell>g</cell><cell>d</cell><cell>gmin</cell><cell>gavg</cell><cell cols="2">σg dmin</cell><cell>davg</cell><cell>σ d</cell><cell>tmin</cell><cell>tavg</cell><cell>σt</cell><cell>g</cell><cell>d</cell><cell>t</cell></row><row><cell>adder_10</cell><cell>10</cell><cell>142</cell><cell>99</cell><cell>382</cell><cell>421.00</cell><cell>29.37</cell><cell>203</cell><cell cols="2">223.80 16.85</cell><cell>5.75</cell><cell cols="2">6.71 0.72</cell><cell>292</cell><cell>172</cell><cell>1.20</cell></row><row><cell>hwb9</cell><cell cols="3">10 207 775 116 199</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>TO</cell><cell>-</cell><cell>-</cell><cell cols="3">655 220 375 105 1 422.33</cell></row><row><cell cols="2">ising_model_10 10</cell><cell>480</cell><cell>70</cell><cell>347</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>These approaches utilize satisfiability solvers, search algorithms, or dedicated data structures to tackle the underlying complexity.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1"><p>Note that we apply multiple SWAP gates concurrently in order to minimize the circuit depth as second criterion (if two solutions require the same number of additional operations).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_2"><p>The direction of the arrow does not matter since a SWAP can be applied beween two physical qubits iff a CNOT can be applied.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_3"><p>Note that the graphical representation seems to be larger in Fig.7. However, this is caused by the fact that the SWAP operations are not decomposed (cf.Fig 3)  in order to maintain readability.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_4"><p>We used all benchmarks that required at most 16 qubits since only these can be mapped to QX5.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work has partially been supported by the European Union through the COST Action IC1405 and the Linz Institute of Technology (CHARON). 0278-0070 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCAD.2018.2846658, IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Nielsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Chuang</surname></persName>
		</author>
		<title level="m">Quantum Computation and Quantum Information</title>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Shor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1484" to="1509" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A fast quantum mechanical algorithm for database search</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">K</forename><surname>Grover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on the Theory of Computing</title>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="212" to="219" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Rapid solution of problems by quantum computation</title>
		<author>
			<persName><forename type="first">D</forename><surname>Deutsch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Jozsa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>The Royal Society</publisher>
			<biblScope unit="volume">439</biblScope>
			<biblScope unit="page" from="553" to="558" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">IBM Q</title>
		<ptr target="https://www.research.ibm.com/ibm-q/" />
		<imprint>
			<biblScope unit="page" from="2017" to="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">IBM QX backend information</title>
		<ptr target="https://github.com/QISKit/ibmqx-backend-information" />
		<imprint>
			<biblScope unit="page" from="2017" to="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">A blueprint for</title>
		<author>
			<persName><forename type="first">C</forename><surname>Neill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Roushan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kechedzhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Boixo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Isakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Smelyanskiy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Barends</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Burkett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">43 n: the number of qubits g: the number of quantum gates</title>
		<imprint/>
	</monogr>
	<note>elementary operations. d: depth of the quantum circuits t: runtime of the algorithm</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">For IBM&apos;s solution, we list the obtained minimum, the average, and the standard deviation of 5 runs (denoted by min , avg , and σ, respectively). demonstrating quantum supremacy with superconducting qubits</title>
		<idno type="arXiv">arXiv:1709.06678</idno>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Characterizing quantum supremacy in near-term devices</title>
		<author>
			<persName><forename type="first">S</forename><surname>Boixo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V</forename><surname>Isakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">N</forename><surname>Smelyanskiy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Babbush</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Martinis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Neven</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1608.00263</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Google aims for quantum computing supremacy [news]</title>
		<author>
			<persName><forename type="first">R</forename><surname>Courtland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Spectrum</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="9" to="10" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A meet-in-themiddle algorithm for fast synthesis of depth-optimal quantum circuits</title>
		<author>
			<persName><forename type="first">M</forename><surname>Amy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maslov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mosca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Roetteler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on CAD of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="818" to="830" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Elementary quantum gate realizations for multiple-control Toffolli gates</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Sasanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Int&apos;l Symp. on Multi-Valued Logic</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="288" to="293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Representation of quantum circuits with clifford and π/8 gates</title>
		<author>
			<persName><forename type="first">K</forename><surname>Matsumoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Amano</surname></persName>
		</author>
		<idno type="arXiv">arXiv:0806.3834</idno>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Improving the mapping of reversible circuits to quantum circuits using multiple target lines</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Soeken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Otterstedt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Asia and South Pacific Design Automation Conf</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="85" to="92" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Exact reordering of circuit lines for nearest neighbor quantum architectures</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on CAD of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1818" to="1831" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Synthesis of quantum circuits for linear nearest neighbor architectures</title>
		<author>
			<persName><forename type="first">M</forename><surname>Saeedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Quantum Information Processing</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="355" to="377" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Look-ahead schemes for nearest neighbor optimization of 1d and 2d quantum circuits</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Keszocze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Walter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rohrs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chattopadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Asia and South Pacific Design Automation Conf</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="292" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Optimization of quantum circuits for interaction distance in linear nearest neighbor architectures</title>
		<author>
			<persName><forename type="first">A</forename><surname>Shafaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Saeedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pedram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design Automation Conf</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="41" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Qubit placement to minimize communication overhead in 2d quantum architectures</title>
		<author>
			<persName><forename type="first">A</forename><surname>Shafaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Saeedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pedram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Asia and South Pacific Design Automation Conf</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="495" to="500" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Using \pi dds for nearest neighbor optimization of quantum circuits</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Quetschlich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Inoue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Yasuda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Minato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Int&apos;l Conf. of Reversible Computation</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="181" to="196" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Exact global reordering for nearest neighbor quantum circuits using A *</title>
		<author>
			<persName><forename type="first">A</forename><surname>Zulehner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Reversible Computation</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="185" to="201" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">QISKIT Python SDK</title>
		<ptr target="https://github.com/QISKit/qiskit-sdk-py.Ac-cessed" />
		<imprint>
			<biblScope unit="page" from="2017" to="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient mapping of quantum circuits to the IBM QX architectures</title>
		<author>
			<persName><forename type="first">A</forename><surname>Zulehner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Paler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design, Automation and Test in Europe</title>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1135" to="1138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Scaffold: Quantum programming language</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Abhari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Faruque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Dousti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Svec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Catu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chakrabati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-F</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vanderwilt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Black</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Chong</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
			<publisher>Princeton univ nj dept of computer science</publisher>
		</imprint>
	</monogr>
	<note>tech. rep.</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Quipper: a scalable quantum programming language</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">L</forename><surname>Lumsdaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Selinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Valiron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference on Programming Language Design and Implementation</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="333" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Cross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Bishop</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Smolin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Gambetta</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1707.03429</idno>
		<title level="m">Open quantum assembly language</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A transformation based algorithm for reversible logic synthesis</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maslov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">W</forename><surname>Dueck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design Automation Conf</title>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="318" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">One-pass design of reversible circuits: Combining embedding and synthesis for reversible logic</title>
		<author>
			<persName><forename type="first">A</forename><surname>Zulehner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on CAD of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="996" to="1008" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Improved synthesis of clifford+t quantum functionality</title>
		<author>
			<persName><forename type="first">P</forename><surname>Niemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design, Automation and Test in Europe</title>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="597" to="600" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Elementary gates for quantum computation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Barenco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cleve</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Divinchenzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Margolus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Sleator</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Smolin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Weinfurter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The American Physical Society</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="3457" to="3467" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Scaffcc: a framework for compilation and analysis of quantum computing programs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Javadiabhari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Patil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kudrow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heckey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lvov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">T</forename><surname>Chong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Martonosi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computing Frontiers Conference, CF&apos;14</title>
		<meeting><address><addrLine>Cagliari, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014">May 20 -22, 2014. 2014</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">RevKit: A toolkit for reversible circuit design</title>
		<author>
			<persName><forename type="first">M</forename><surname>Soeken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Frehse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
		<ptr target="http://www.revkit.org" />
	</analytic>
	<monogr>
		<title level="m">Workshop on Reversible Computation</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="69" to="72" />
		</imprint>
	</monogr>
	<note>RevKit is available</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Compiling quantum circuits to realistic hardware architectures using temporal planners</title>
		<author>
			<persName><forename type="first">D</forename><surname>Venturelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Do</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Rieffel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Frank</surname></persName>
		</author>
		<idno>abs/1705.08927</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">A quantum approximate optimization algorithm</title>
		<author>
			<persName><forename type="first">E</forename><surname>Farhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Goldstone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gutmann</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1411.4028</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A functional architecture for scalable quantum computing</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Sete</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Rigetti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Rebooting Computing, ICRC 2016</title>
		<meeting><address><addrLine>San Diego, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016">October 17-19, 2016. 2016</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A formal basis for the heuristic determination of minimum cost paths</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J</forename><surname>Nilsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Raphael</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Systems Science and Cybernetics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="100" to="107" />
			<date type="published" when="1968">1968</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">RevLib: an online resource for reversible functions and reversible circuits</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Große</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Teuber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">W</forename><surname>Dueck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Drechsler</surname></persName>
		</author>
		<ptr target="http://www.revlib.org" />
	</analytic>
	<monogr>
		<title level="m">Int&apos;l Symp. on Multi-Valued Logic</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="220" to="225" />
		</imprint>
	</monogr>
	<note>RevLib is available</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A new quantum ripple-carry addition circuit</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Cuccaro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Draper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Kutin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Moulton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Quantum Information Processing</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Alwin Zulehner Alwin Zulehner (S&apos;17) received his BSc and MSc degree in computer science from the</title>
		<author>
			<persName><forename type="first">S</forename><surname>Beauregard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Quantum Information &amp; Computation</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="175" to="185" />
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Johannes Kepler University Linz</orgName>
		</respStmt>
	</monogr>
	<note>Circuit for Shor&apos;s algorithm using 2n+3 qubits. Austria in 2012 and 2015, respectively. He is currently a</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
