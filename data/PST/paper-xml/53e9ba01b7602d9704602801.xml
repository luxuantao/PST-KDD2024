<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Hummingbird: Ultra-Lightweight Cryptography for Resource-Constrained Devices</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Daniel</forename><surname>Engels</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Revere Security Corporation</orgName>
								<address>
									<addrLine>4500 Westgrove Drive, Suite 335</addrLine>
									<postCode>75001</postCode>
									<settlement>Addison</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Xinxin</forename><surname>Fan</surname></persName>
							<email>x5fan@uwaterloo.ca</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Guang</forename><surname>Gong</surname></persName>
							<email>ggong@uwaterloo.ca</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Honggang</forename><surname>Hu</surname></persName>
							<email>h7hu@uwaterloo.ca</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Eric</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
							<email>eric.smith@reveresecurity.com</email>
							<affiliation key="aff1">
								<orgName type="department">Revere Security Corporation</orgName>
								<address>
									<addrLine>4500 Westgrove Drive, Suite 335</addrLine>
									<postCode>75001</postCode>
									<settlement>Addison</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Hummingbird: Ultra-Lightweight Cryptography for Resource-Constrained Devices</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">377D1697B06B6C9B4A9D30E4725627E4</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:17+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Constrained devices</term>
					<term>lightweight cryptographic primitive</term>
					<term>security analysis</term>
					<term>efficient implementation</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Due to the tight cost and constrained resources of highvolume consumer devices such as RFID tags, smart cards and wireless sensor nodes, it is desirable to employ lightweight and specialized cryptographic primitives for many security applications. Motivated by the design of the well-known Enigma machine, we present a novel ultralightweight cryptographic algorithm, referred to as Hummingbird, for resource-constrained devices in this paper. Hummingbird can provide the designed security with small block size and is resistant to the most common attacks such as linear and differential cryptanalysis. Furthermore, we also present efficient software implementation of Hummingbird on the 8-bit microcontroller ATmega128L from Atmel and the 16-bit microcontroller MSP430 from Texas Instruments, respectively. Our experimental results show that after a system initialization phase Hummingbird can achieve up to 147 and 4.7 times faster throughput for a size-optimized and a speed-optimized implementations, respectively, when compared to the state-of-the-art ultra-lightweight block cipher PRESENT [10] on the similar platforms.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>With the advent of pervasive computing, various smart devices such as RFID tags, smart cards, and wireless sensor nodes are penetrating into and impacting people's life at a staggering rate and in significant ways. Their applications range from access control and supply-chain management to home automation and healthcare. Since a multitude of applications involve processing of sensitive personal information like health or biomedical data, the increasing demand for integrating cryptographic functions into embedded applications has risen. However, these pervasive smart devices usually have extremely constrained resources in terms of computational capabilities, memory, and power supply. Hence, classical cryptographic primitives designed for full-fledged computers might not be suited for resource-constrained smart devices. For instance, the popular 1024-bit RSA algorithm cannot be implemented on RFID tags due to their harsh constrains with respect to gate count and power consumption. Moreover, the tight cost constrains inherent in mass deployments of smart devices also bring forward impending requirements for designing new cryptographic primitives that can perform strong authentication and encryption, and provide other security functionalities for ultralow-power applications in the era of pervasive computing. This emerging research area is usually referred to as lightweight cryptography.</p><p>The key issue of designing lightweight cryptographic algorithms is to deal with the trade-off among security, cost, and performance <ref type="bibr" target="#b29">[29]</ref>. A host of lightweight cryptographic primitives that particularly target resource-constrained smart devices have been published in the past few years and we will focus on lightweight symmetric ciphers in this paper. All the previous proposals can be roughly divided into the following three categories. The first category consists of highly optimized and compact hardware implementations for standardized block ciphers such as AES <ref type="bibr" target="#b17">[17,</ref><ref type="bibr" target="#b18">18,</ref><ref type="bibr" target="#b19">19]</ref> and IDEA <ref type="bibr" target="#b23">[23]</ref>, whereas the proposals in the second category involve slight modifications of a classical block cipher like DES <ref type="bibr" target="#b26">[26]</ref> for lightweight applications. Finally, the third category features new low-cost designs, including lightweight block ciphers HIGHT <ref type="bibr" target="#b21">[21]</ref>, mCrypton <ref type="bibr" target="#b22">[22]</ref>, SEA <ref type="bibr" target="#b32">[32]</ref>, PRESENT <ref type="bibr" target="#b9">[10]</ref> and KATAN and KTANTAN <ref type="bibr" target="#b11">[11]</ref>, as well as lightweight stream ciphers Grain <ref type="bibr" target="#b20">[20]</ref> and Trivium <ref type="bibr" target="#b12">[12]</ref>. Moreover, the design and implementation of lightweight asymmetric ciphers is also an ongoing research direction and a good survey about lightweight cryptography implementations can be found in <ref type="bibr" target="#b14">[14]</ref>.</p><p>Motivated by the design of the well-known Enigma machine, we present a novel ultra-lightweight cryptographic algorithm in this paper, referred to as Hummingbird 1 , which is originally designed by Engels, Schweitzer and Smith, for resource-constrained devices like RFID tags and wireless sensor nodes. Hummingbird has a hybrid structure of block cipher and stream cipher and was developed with both lightweight software and lightweight hardware implementations for constrained devices in mind. The hybrid model can provide the designed security with small block size and is therefore expected to meet the stringent response time and power consumption requirements for a large variety of embedded applications. Moreover, we also implement Hummingbird on the 8-bit microcontroller ATmega128L from Atmel and the 16-bit microcontroller MSP430 from Texas Instrument (TI), which are the most popular processors used in wireless sensor network platforms because of their low power design, multiple sensor interfaces, and widely available development tools 2 . Our experimental results show that after a system initialization phase Hummingbird can achieve up to 147 and 4.7 times faster throughput than that of the ultra-lightweight block cipher PRESENT <ref type="bibr" target="#b9">[10]</ref> for a size-optimized and a speed-optimized implementations, 1 Hummingbird algorithm is first reported in <ref type="bibr" target="#b15">[15]</ref> as a technical report of Center for Applied Cryptographic Research (CACR), University of Waterloo. 2 The implementation of Hummingbird on a 4-bit microcontroller can be found in <ref type="bibr" target="#b16">[16]</ref>.</p><p>respectively. Due to space limitations, the compact hardware implementation of Hummingbird will be discussed in a separate work.</p><p>This paper is organized as follows. Section 2 presents the specification and the design rationale of Hummingbird. In Section 3, we give the security analysis of Hummingbird against common attacks such as differential and linear cryptanalysis. Section 4 treats efficient software implementation of Hummingbird across a range of wireless sensor network processors. Finally, Section 5 concludes this contribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Hummingbird Cryptographic Algorithm</head><p>Different from existing (ultra-)lightweight cryptographic primitives which are either block ciphers or stream ciphers, Hummingbird is an elegant combination of the above two cipher structures with 16-bit block size, 256-bit key size, and 80-bit internal state. The size of the key and the internal state of Hummingbird provide a security level which is adequate for many embedded applications. For clarity, we use the notation listed in Table <ref type="table" target="#tab_0">1</ref> in the algorithm description. A toplevel structure of the Hummingbird cryptographic algorithm is shown in Figure <ref type="figure">1</ref>. the j-th 16-bit key used in the i-th block cipher, j = 1, 2, 3, 4, such that </p><formula xml:id="formula_0">k i = K (i) 1 K (i) 2 K (i) 3 K (i) 4 S i the i-th 4-</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Encryption/Decryption and Initialization</head><p>The overall structure of the Hummingbird encryption algorithm (see Figure <ref type="figure">1(a)</ref>) consists of four 16-bit block ciphers E k1 , E k2 , E k3 and E k4 , four 16-bit internal . This procedure is repeated in a similar manner for another three times and the output of E k4 is the corresponding ciphertext CT i . Furthermore, the states of the four internal state registers will also be updated in an unpredictable way based on their current states, the outputs of the first three block ciphers, and the state of the LFSR. The decryption process (see Figure <ref type="figure">1</ref>(b)) follows the similar pattern as the encryption. When using Hummingbird in practice, four 16-bit random nonce NONCE i are first chosen to initialize the four internal state registers RSi (i = 1, 2, 3, 4), respectively, followed by four consecutive encryptions on the message RS1 RS3 by Hummingbird running in the initialization mode (see Figure <ref type="figure">1(c)</ref>). The final 16-bit ciphertext T V is used to initialize the LFSR. Moreover, the 13 th bit of the LFSR is always set to prevent a zero register. The LFSR is also stepped once before it is used to update the internal state register RS3. The exact encryption/decryption and initialization procedure as well as the internal state updating of Hummingbird are illustrated in Table <ref type="table" target="#tab_3">2</ref>.</p><formula xml:id="formula_1">+ E k 1 + E k 2 + E k 3 + E k 4 RS1 RS2 RS3 RS4 + + + LFSR P T i CT i P T i D k 4 - D k 3 - D k 2 - D k 1 RS4 RS3 RS2 + LFSR CT i - RS1 + + + (a) Encryption Process (b) Decryption Process + E k 1 + E k 2 + E k 3 + E k 4 RS1 RS2 RS3 RS4 + RS1 RS3 T V NONCE 1 NONCE 2 NONCE 3 NONCE 4 (c)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">16-Bit Block Cipher</head><p>Four identical 16-bit block ciphers are employed in a consecutive manner in the Hummingbird encryption scheme. The 16-bit block cipher is a typical substitutionpermutation (SP) network with 16-bit block size and 64-bit key as shown in  </p><formula xml:id="formula_2">V 12 t = E k1 (P T i RS1 t ) V 23 t = E k2 (V 12 t RS2 t ) V 34 t = E k3 (V 23 t RS3 t ) CT i = E k4 (V 34 t RS4 t ) V 34 t = D k4 (CT i ) RS4 t V 23 t = D k3 (V 34 t ) RS3 t V 12 t = D k2 (V 23 t ) RS2 t P T i = D k1 (V 12 t ) RS1 t V 12 t = E k1 ((RS1 t RS3 t ) RS1 t ) V 23 t = E k2 (V 12 t RS2 t ) V 34 t = E k3 (V 23 t RS3 t ) T V = E k4 (V 34 t RS4 t ) Internal State Updating LFSR t+1 ← LFSR t RS1 t+1 = RS1 t V 34 t RS3 t+1 = RS3 t V 23 t LFSR t+1 RS4 t+1 = RS4 t V 12 t RS1 t+1 RS2 t+1 = RS2 t V 12 t RS4 t+1 RS1 t+1 = RS1 t T V t RS2 t+1 = RS2 t V 12 t RS3 t+1 = RS3 t V 23 t RS4 t+1 = RS4 t V 34 t</formula><formula xml:id="formula_3">K (i) 1 , K (i) 2 , K (i) 3 and K (i)</formula><p>4 which are used in the four regular rounds, respectively. Moreover, the final round utilizes two keys K (i) <ref type="bibr" target="#b4">5</ref> and</p><formula xml:id="formula_4">K (i) 6</formula><p>directly derived from the four round keys (see Figure <ref type="figure" target="#fig_0">2</ref>). Like any other SP network, one regular round comprises of three stages: a key mixing step, a substitution layer, and a permutation layer. For the key mixing, a simple exclusive-OR operation is used in this 16-bit block cipher for efficient implementation in both software and hardware. The substitution layer is composed of 4 Serpent-type Sboxes <ref type="bibr" target="#b0">[1]</ref> with 4-bit inputs and 4-bit outputs, having additional properties whose selecting criteria is described in the appendix of <ref type="bibr" target="#b15">[15]</ref>. According to the nine criteria presented in <ref type="bibr" target="#b15">[15]</ref>, we select four S-boxes, the action of which in hexadecimal notation is described in Figure <ref type="figure" target="#fig_0">2</ref>. The permutation layer in this 16-bit block cipher is given by the linear transform L : {0, 1} 16 → {0, 1} 16 defined as follows:</p><formula xml:id="formula_5">L(m) = m ⊕ (m 6) ⊕ (m 10), where m = (m 0 , m 1 , • • • , m 15 ) is a 16-bit data block.</formula><p>Remark 1. To further reduce the consumption of the memory, area and power of Hummingbird in both software and hardware implementations, four S-boxes used in Hummingbird can be replaced by a single S-box, which is repeated four times in the 16-bit block cipher. The compact version of Hummingbird can achieve the same security level as the original Hummingbird and will be implemented on wireless sensor nodes in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Design Rationale of Hummingbird</head><p>The design of the Hummingbird cryptographic algorithm is motivated by the well-known Enigma machine<ref type="foot" target="#foot_0">3</ref> and takes into account both security and effi- ciency simultaneously. The encryption/decryption process of Hummingbird can be viewed as the continuous running of a rotor machine, where four small block ciphers act as four virtual rotors which perform permutations on 16-bit words.</p><formula xml:id="formula_6">A B C D K (i) 1 , K (i) 2 , K (i) 3 , K (i) 4 S 1 S 2 S 3 S 4 Linear Transform S 1 S 2 S 3 S 4 K (i) 5 = K (i) 1 ⊕ K (i) 3 K (i) 6 = K (i) 2 ⊕ K (i) 4</formula><p>The salient characteristics of Hummingbird lies in implementing extraordinarily large virtual rotors with custom block ciphers and using successively changing internal states to step each virtual rotor in various and unpredictable ways. Besides a novel cipher structure, Hummingbird is also designed to protect against the most common attacks such as linear and differential cryptanalysis, which will be discussed in detail in Section 3. Moreover, extremely simple arithmetic and logic operations are extensively employed in Hummingbird, which make it well-suited for resource-constrained environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Security Analysis of the Hummingbird Cryptographic Algorithm</head><p>In this section, we analyze the security of the Hummingbird cryptographic algorithm by showing that it is resistant to the most common attacks to block ciphers and stream ciphers including birthday attack, differential and linear cryptanalysis, etc. Note that Hummingbird has a hybrid mode of block cipher and stream cipher (This is the reason that the analysis in <ref type="bibr" target="#b9">[10]</ref> can not be employed directly here.), which can be considered as a finite state machine with the internal state (RS1, RS2, RS3, RS4, LFSR). However, the value of LFSR does not depend on those of RS1, RS2, RS3, and RS4. The purpose of using the LFSR is to guarantee the period of the internal state is at least 2 16 .</p><p>A. Birthday Attack on the Initialization. For a fixed key, one may want to find two identical internal states (RS1, RS2, RS3, RS4, LFSR) initialized by two different IV s using the birthday attack. However, if we fix the key in the initialization procedure of the Hummingbird encryption scheme, the mapping (RS1 t , RS2 t , RS3 t , RS4 t ) → (RS1 t+1 , RS2 t+1 , RS3 t+1 , RS4 t+1 ) is one-to-one. Hence the birthday attack does not work in this case.</p><p>B. Differential Cryptanalysis. Let E K (x) denote the encryption function of Hummingbird with 256-bit key K. Recall that E k (x), defined in Section 2, denotes the 16-bit block cipher encryption used in Hummingbird with 64-bit key k. Then E K (x) is the composition of four E k (x). For a function F (x) from F m 2 to F m 2 , the differential between F (x) and F (x + a), where + is the bit-wise addition, is denoted by D F (a, b) and defined as follows.</p><formula xml:id="formula_7">D F (a, b) = |{x | F (x) + F (x + a) = b, x ∈ F m</formula><p>2 }|. For many keys, we have computed the differentials of both E K (x) and E k (x). Note that from Section 2, we know that there are five rounds in E k (x). We list the differential D E k (a, b) for each round in the following Table <ref type="table" target="#tab_4">3</ref> (a). For substantially large amount of initial vectors IV and keys K, the differentials for both E k (x) and E K (x) satisfy the following inequalities. max a,b∈F 16  2 ,a =0</p><formula xml:id="formula_8">{D E k (a, b)} ≤ 20,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>and max</head><p>a,b∈F 16  2 ,a =0</p><formula xml:id="formula_9">{D EK (a, b)} ≤ 20.</formula><p>In other words, the differential of E K (x) has the same upper bound as E k (x), the block cipher component in E K . We also tested the reduced version of Hummingbird for more instances of different pairs of (IV, K). From those experimental results, in general, the standard differential cryptanalysis method is not applicable to Hummingbird with practical time complexity. C. Linear Cryptanalysis. For the linear cryptanalysis of E K (x), we need to consider | ÊK (a, b)|, the absolute value of the Walsh transform of E K (x), where ÊK (a, b) = x∈F 16   2   (-1) a,EK(x) + b,x , a, b ∈ F 16  2 , a = 0 where x, y is the inner product of two binary vectors x and y (see Appendix for the detail). Unlike the case for the differential of E K (x) or E k (x), we cannot perform an exhaustive computation for | ÊK (a, b)| for all a, b ∈ F 16  2 , a = 0, since there are around 2 48 instances for (a, b, x) that need to be verified for a pair of fixed IV and key K. For some fixed pairs of (IV, K), we have computed random subsets of (a, b) with size around 2 20 . Those experimental results show that | ÊK (a, b)| ≤ c • √ 2 16 , where c ≤ 4.96875. We list some data in Table 3 (b). We also conducted the experiments for an 8-bit version of the Hummingbird encryption scheme which means that all the rotors RS i , i = 1, 2, 3, 4 and LFSR contain only 8 bits. The Walsh transform of this reduced version of Hummingbird is bounded by 5• √ 2 8 for many pairs of IV and key. This is the supporting evidence (albeit weak) that the absolute value of the Walsh transform of Hummingbird encryption function could be bounded by the square root of 2 16 multiplying by a constant. Hence, Hummingbird seems to be resistant to linear cryptanalysis attack with practical time complexity.</p><p>D. Structural Attack. The Hummingbird encryption scheme may be viewed as a certain operation mode of a block cipher. For example, the ciphertext can be viewed as the internal state of a block cipher in CBC mode. In <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5]</ref>, Biham investigated some operation modes of block ciphers. He found that many triple modes are not as secure as one expected. In <ref type="bibr" target="#b5">[6]</ref>, Biham and Knudsen broke the ANSI X9.52 CBCM Mode. However, the internal state transition in Hummingbird encryption scheme is much more complicated than those studied by <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6]</ref>. Hence, those attacks cannot be simply applied to the Hummingbird encryption scheme. In <ref type="bibr" target="#b34">[33]</ref>, by choosing IV, Wagner presented some new attacks on some modes proposed by Biham. Because IV initialization is used in the Hummingbird encryption scheme, Wagner's attacks are not applicable.</p><p>E. Algebraic Attack. For the Hummingbird encryption scheme, the degree of each S-box in the block cipher E k (x) is maximized. Moreover, each block cipher E k (x) consists of five rounds. Thus, there are totally 20 rounds for the Hummingbird encryption scheme, i.e., E K (x). Furthermore, the internal state transition involves modulo 2 16 operation. Hence it is hard to apply efficient linearization techniques for algebraic attacks to Hummingbird.</p><p>F. Cube Attack. The success probability of cube attack is high if the degree of the internal state transition function in a stream cipher is low. For example, the degree of internal state transition function of Trivium grows slowly <ref type="bibr" target="#b13">[13]</ref>. However, for the Hummingbird encryption scheme, the degree of the internal state transition function is very high. In addition, Hummingbird encryption scheme has a hybrid mode of block cipher and stream cipher. We have tested both the 16-bit block cipher E k (x) used in the Hummingbird encryption scheme and the Hummingbird encryption function E K (x). We note that no linear equations of key bits can be used in the way as suggested in <ref type="bibr" target="#b13">[13]</ref>.</p><p>G. Slide and Related-Key Attack. Both slide attacks <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> and related-key attacks <ref type="bibr" target="#b2">[3]</ref> need to exploit the weakness of key scheduling. However, there is no key scheduling in Hummingbird. In particular, the subkeys used in four small block ciphers are independent. In addition, the four rotors affect the output of each small block cipher in a nonlinear way. Hence, both slide attacks <ref type="bibr" target="#b7">[8]</ref> and related-key attacks cannot be applied to the Hummingbird.</p><p>H. Interpolation and Higher Order Differential Attack. Interpolation and higher order differential attacks <ref type="bibr" target="#b24">[24,</ref><ref type="bibr" target="#b25">25]</ref> can be applied to block ciphers with the low algebraic degree. As we discussed before for algebraic attack, the algebraic degree of the Hummingbird encryption is high. Hence it is difficult to apply interpolation and higher order differential attacks to the Hummingbird.</p><p>I. Complementation Properties. The DES has the following well-known complementation property, namely that if C is the ciphertext of the plaintext P under key K, then C is the ciphertext of P under key K, where x is the bitwise complement of x. However, Hummingbird does not have this weakness due to the presence of the carry propagation resulting from four rotors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Efficient Implementation of Hummingbird on Low-Power Microcontrollers</head><p>In this section, we present software implementation results of the compact version of Hummingbird (i.e., a single 4 × 4 S-box S 1 is used four times in the 16-bit block cipher) on two microcontrollers ATmega128L and MSP430, which are the processors used for the wireless sensor nodes MICAz and TELOSB/TMote Sky, respectively. We also provide two implementation variants for each platform, one of which is optimized for code size and the other for speed. Moreover, two variants can perform both encryption and decryption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">8-Bit Microcontroller ATmega128L and Development Tools</head><p>The ATmega128L from Atmel is a low-power 8-bit microcontroller based on the AVR enhanced RISC architecture. The processor is equipped with 133 powerful and highly-optimized instructions and most of them can be executed with one clock cycle. Moreover, ATmega128L comes with 128 KBytes of In-System Self-Programmable Flash, 4 KBytes EEPROM and 8 KBytes Internal SRAM.</p><p>Optionally it can handle up to 64 KBytes of external memory space. Its clock frequency can run from 0 to 8 MHz and the power supplies can go from 2.7 to 5.5 V. In addition, at a frequency of 4 MHz with a power supply of 5 V the ATmega128L microcontroller draws 5.5 mA current when active, 2.5 mA in Idle Mode and less than 15 µA in Power-down Mode.</p><p>In order to implement and test the performance of Hummingbird on the target platform, we use a combination of the integrated development environment AVR Studio 4.17 <ref type="bibr" target="#b1">[2]</ref> from Atmel and the open-source WinAVR-20090313 tool kit <ref type="bibr" target="#b35">[34]</ref> for our purpose. While AVR Studio is used as an editor and a simulator, the WinAVR provides a GNU GCC compiler with the according libraries and a linker.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">16-Bit Microcontroller MSP430 and Development Tools</head><p>Our second target microcontroller is a 16-bit MSP430F1611 from Texas Instrument, which is different in many ways from the Atmel chip. The MSP430F1611 microcontroller has a traditional von-Neumann architecture and all special function registers (SFRs), peripherals, RAM, and Flash/ROM share the same address space. Moreover, it comes with 48 KBytes Flash memory and 10 KBytes RAM. The clock frequency of the MSP430F1611 ranges from 0 to 8 MHz and the power supplies can go from 1.8 to 3.6 V. In particular, the MSP430F1611 microcontroller features the ultralow power consumption. At a frequency of 1 MHz and a voltage supply of 2.2 V the chip draws 200 µA current in Active Mode, 0.7 µA in Real-time Clock Mode, and 0.1 µA in Off Mode (RAM Retention). Although the instruction set of the MSP430F1611 only contains 27 instructions, 7 different addressing modes provide great flexibility in data manipulation.</p><p>We use CrossWorks for MSP430 Version 2 from Rowley Associates <ref type="bibr" target="#b31">[31]</ref> to implement and simulate Hummingbird on the target platform. The CrossWorks for MSP430 bundles an ANSI C compiler, macro assembler, linker/locator, libraries, core simulator, flash downloader, JTAG debugger, and an integrated development environment CrossStudio. Different optimization levels can be set to generate codes with either smallest size or fastest speed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Size Optimized Implementation</head><p>Note that the final round of the 16-bit block cipher in Hummingbird requires two derived round keys K</p><formula xml:id="formula_10">(i) 5 = K (i) 1 ⊕ K (i) 3 and K (i) 6 = K (i) 2 ⊕ K (i)</formula><p>4 (see Figure <ref type="figure" target="#fig_0">2</ref>). For a size optimized implementation it is wise to calculate the above two keys K (i) <ref type="bibr" target="#b4">5</ref> and K (i) 6 on-the-fly, which can save the storage requirements by 16 bytes. Moreover, the single S-box is implemented as a byte array with 16 elements, in which the lower half of a byte is used to store the value of the Hummingbird S-box and the higher half of a byte is padded with zeros. The S-box look-up of 16-bit block is conducted sequentially and 4 bits are processed each time. To generate the code with minimal size, we set the optimization level to be "OPT = s" for GCC compiler in WinAVR-20090313 and choose "Minimize Size" as the optimization strategy in CrossStudio, respectively. Performance Results. Table <ref type="table" target="#tab_5">4</ref> summarizes the memory consumption and cycle count of two lightweight ciphers Hummingbird and PRESENT on 8-bit and 16-bit microcontrollers for the size optimized implementation.</p><p>From Table <ref type="table" target="#tab_5">4</ref> we note that the code size of Hummingbird is about 13% and 69% smaller than that of PRESENT on the 8-bit and 16-bit microcontrollers, respectively. In addition, Hummingbird needs a relatively long initialization process when compared to the block cipher PRESENT because of the hybrid structure of block cipher and stream cipher adopted in Hummingbird. However, after an initialization procedure, Hummingbird encryption algorithm can achieve the throughput of 17.5 Kbps and 26.5 Kbps at a frequency of 4 MHz on the 8-bit and 16-bit microcontrollers, respectively. Under the same settings, the throughput of Hummingbird decryption algorithm can amount to 16.5 Kbps and 24.2 Kbps, respectively. Therefore, for the size optimized implementation, the throughput of Hummingbird is about 40 and 148 times faster than that of PRESENT on the target 8-bit and 16-bit platforms, respectively. Considering the cost of the initialization phase in Hummingbird, we compare the overall performance of Hummingbird and PRESENT for encrypting and decrypting messages with different length in the following Table <ref type="table" target="#tab_6">5</ref>. For the size optimized implementation, Table <ref type="table" target="#tab_6">5</ref> shows that one can achieve around 95% ∼ 99% performance improvements when using Hummingbird instead of PRESENT to encrypt or decrypt message blocks with length 64-bit, 128-bit, and 192-bit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Speed Optimized Implementation</head><p>For a speed optimized implementation, we precompute and store all required round keys K (i) <ref type="bibr" target="#b4">5</ref> and K (i) 6 (see Figure <ref type="figure" target="#fig_0">2</ref>) in an array and this precomputation procedure requires additional 16 bytes of data memory and has to done once when a new key is used. Furthermore, in order to accelerate the implementation of S-box layer in Hummingbird, we use a more efficient technique that combines two identical 4 × 4 S-boxes S(x)'s to form a larger 8 × 8 S-box S 8×8 (x) such that S 8×8 (x 1 x 2 ) = S(x 1 ) S(x 2 ), where x 1 and x 2 are 4-bit inputs to the two 4 × 4 S-boxes S(x)'s, respectively. Using the S-box S 8×8 (x) significantly reduces the time for the S-box loop-up at the cost of 512 bytes of data memory (Note that both S 8×8 (x) and S -1 8×8 (x) have 256 entries of each 1 byte). To generate the code with maximal speed, we set the optimization level to be "OPT = 3" for GCC compiler in WinAVR-20090313 and choose "Maximize Speed" as the optimization strategy in CrossStudio, respectively.</p><p>Performance Results. Table <ref type="table" target="#tab_7">6</ref> summarizes the memory consumption and cycle count of two lightweight ciphers Hummingbird and PRESENT on 8-bit and 16-bit microcontrollers for the speed optimized implementation. From Table <ref type="table" target="#tab_7">6</ref> we note that the code size of Hummingbird is about 78% larger and 96% smaller than that of PRESENT on the 8-bit and 16-bit microcontrollers, respectively. The main reason is that the -O3 option of the GCC compiler aggressively optimizes for speed by unrolling all loops in the code, which drastically increase the size of the code. Assuming that the microcontrollers operate at the frequency of 4 MHz, Hummingbird encryption algorithm can achieve the throughput of 45.7 Kbps and 52.5 Kbps on the 8-bit and 16-bit microcontrollers, respectively, which is about 0.7 and 2.5 times faster than that of PRESENT on the similar platforms. Base on the same assumption, the throughput of Hummingbird decryption algorithm can amount to 39.1 Kbps and 43.8 Kbps on the 8-bit and 16-bit microcontrollers, respectively, which is around 0.5 and 4.7 times faster than that of PRESENT on the similar platforms. Combining the overhead of the initialization phase in Hummingbird, we compare the overall performance of Hummingbird and PRESENT for encrypting and decrypting messages with different length in the following Table <ref type="table" target="#tab_8">7</ref> for the speed optimized implementation.</p><p>For the speed optimized implementation, Table <ref type="table" target="#tab_8">7</ref> shows that on 8-bit microcontrollers Hummingbird encryption is about 28.9% slower than PRESENT encryption when the message length is 64 bits. Furthermore, Hummingbird decryption is about 33.2% and 7.5% slower than PRESENT decryption for messages with length 64-bit and 128-bit, respectively. The main reason is that Hummingbird has a hybrid structure which involves a relatively long initialization process when compared to the block cipher PRESENT. However, on 16-bit microcontrollers Hummingbird is consistently faster (around 50% ∼ 78% performance improvements are achieved) than PRESENT for different message blocks in our experiment because the size (i.e., 16 bits) of the block and the internal state registers is perfectly suited to the architecture of 16-bit microcontrollers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Encryption Mode and Concluding Remarks</head><p>In this paper we present a novel ultra-lightweight cryptographic algorithm, Hummingbird, which is a combination of block cipher and stream cipher. The output is a keystream that is XOR'ed with plaintext. The hybrid structure adopted in Hummingbird can provide the designed security with small block size which is expected to meet the stringent response time and power consumption requirements in a large variety of embedded applications. We show that Hummingbird seems to be resistant to the most common attacks to block ciphers and stream ciphers including birthday attacks, differential and linear cryptanalysis, structure attacks, algebraic attacks, cube attacks, etc. Moreover, efficient software implementations of Hummingbird on 8-bit and 16-bit microcontrollers are also presented. When compared to the ultra-lightweight block cipher PRESENT implemented on similar platforms, our experimental results show that after a system initialization procedure Hummingbird can achieve up to 147 and 4.7 times faster throughput for a size-optimized and a speed-optimized implementations, respectively.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. It consists of four regular rounds and a final round that only includes the key mixing and the S-box substitution steps. The 64-bit subkey k i is split into four 16-bit round keys K</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>S 4 Fig. 2 .</head><label>42</label><figDesc>Fig. 2. The Structure of the Block Cipher in the Hummingbird Cryptographic Algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>There are two modes related to Hummingbird as follows: (a) Enigma Mode: this is the mode where Hummingbird is used as a word-based cipher (16-bit word) where the plaintext is transitioned through a series of rotors. The ciphertext is dependent on the plaintext; (b) Stream Mode: this is the mode of Hummingbird where two values in the internal state (RS1 RS3) are fed into the input of Hummingbird.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Notation</figDesc><table><row><cell>2 k 3 k 4</cell></row></table><note><p><p>P T i the i-th plaintext block, i = 1, 2, . . . , n CT i the i-th ciphertext block, i = 1, 2, . . . , n K the 256-bit secret key E K (•)</p>the encryption function of Hummingbird with 256-bit secret key K D K (•) the decryption function of Hummingbird with 256-bit secret key K k i the 64-bit subkey used in the i-th block cipher, i = 1, 2, 3, 4, such that K = k 1 k</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 .</head><label>2</label><figDesc>Encryption/Decryption and Initialization of Hummingbird</figDesc><table><row><cell>Encryption Process</cell><cell>Decryption Process</cell><cell>Initialization Process</cell></row><row><cell></cell><cell></cell><cell>(Four Rounds Encryption)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3 .</head><label>3</label><figDesc>Differential and Linear Properties of the 16-bit Block Cipher</figDesc><table><row><cell cols="2">(a) Differential Properties</cell><cell cols="3">(b) Linear Properties</cell></row><row><cell cols="2"># of Rounds max a =0,b DE k (a, b)</cell><cell cols="3">wt(a) wt(b) Constant c</cell></row><row><cell>0</cell><cell>16384</cell><cell>1</cell><cell>1</cell><cell>4.703125</cell></row><row><cell>1</cell><cell>1024</cell><cell>1</cell><cell>2</cell><cell>4.359375</cell></row><row><cell>2</cell><cell>98</cell><cell>1</cell><cell>3</cell><cell>4.500000</cell></row><row><cell>3</cell><cell>20</cell><cell>2</cell><cell>1</cell><cell>4.390625</cell></row><row><cell>4</cell><cell>20</cell><cell>2</cell><cell>2</cell><cell>4.281250</cell></row><row><cell></cell><cell></cell><cell>2</cell><cell>3</cell><cell>4.828125</cell></row><row><cell></cell><cell></cell><cell>3</cell><cell>1</cell><cell>4.968750</cell></row><row><cell></cell><cell></cell><cell>3</cell><cell>2</cell><cell>4.718750</cell></row><row><cell></cell><cell></cell><cell>3</cell><cell>3</cell><cell>4.781250</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 .</head><label>4</label><figDesc>Memory Consumption and Cycle Count Comparison (Size Optimized Implementation)</figDesc><table><row><cell>Cipher</cell><cell cols="6">Key Block 8-bit/16-bit Flash Hex Code SRAM Init.</cell><cell>Enc.</cell><cell>Dec.</cell></row><row><cell></cell><cell cols="3">Size Size Microcontroller Size</cell><cell>Size</cell><cell cols="2">Size [cycles] [cycles/ [cycles/</cell></row><row><cell></cell><cell>[bit] [bit]</cell><cell></cell><cell cols="3">[bytes] [Kbytes] [bytes]</cell><cell>block]</cell><cell>block]</cell></row><row><cell cols="2">Hummingbird 256 16</cell><cell cols="2">ATmega128L 1, 308</cell><cell>3.68</cell><cell>0</cell><cell>14, 735 3, 664</cell><cell>3, 868</cell></row><row><cell></cell><cell></cell><cell cols="2">MSP430F1611 1, 064</cell><cell>2.95</cell><cell>0</cell><cell>9, 667</cell><cell>2, 414</cell><cell>2, 650</cell></row><row><cell cols="2">PRESENT [29] 80 64</cell><cell cols="2">ATmega163 1, 474</cell><cell>-</cell><cell>32</cell><cell>-</cell><cell>646, 166 634, 614</cell></row><row><cell></cell><cell></cell><cell>C167CR</cell><cell>-</cell><cell>9.67</cell><cell>-</cell><cell>-</cell><cell>1, 442, 556 1, 332, 062</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 5 .</head><label>5</label><figDesc>Overall Performance Comparison at 4 MHz (Size Optimized Implementation)</figDesc><table><row><cell></cell><cell cols="3">(a) Encryption Performance Comparison</cell><cell></cell></row><row><cell cols="5">Message Microcontroller PRESENT [29] Hummingbird Performance</cell></row><row><cell cols="2">Length Word Length</cell><cell cols="3">Encryption Encryption Improvement</cell></row><row><cell></cell><cell>[bit]</cell><cell>[ms]</cell><cell>[ms]</cell><cell></cell></row><row><cell>64-bit</cell><cell>8</cell><cell>161.54</cell><cell>7.35</cell><cell>95.5%</cell></row><row><cell></cell><cell>16</cell><cell>360.64</cell><cell>4.83</cell><cell>98.7%</cell></row><row><cell>128-bit</cell><cell>8</cell><cell>323.08</cell><cell>11.01</cell><cell>96.6%</cell></row><row><cell></cell><cell>16</cell><cell>721.28</cell><cell>7.24</cell><cell>98.9%</cell></row><row><cell>192-bit</cell><cell>8</cell><cell>484.62</cell><cell>14.68</cell><cell>96.9%</cell></row><row><cell></cell><cell>16</cell><cell>1, 081.92</cell><cell>9.66</cell><cell>99.1%</cell></row><row><cell></cell><cell cols="3">(b) Decryption Performance Comparison</cell><cell></cell></row><row><cell cols="5">Message Microcontroller PRESENT [29] Hummingbird Performance</cell></row><row><cell cols="2">Length Word Length</cell><cell cols="3">Decryption Decryption Improvement</cell></row><row><cell></cell><cell>[bit]</cell><cell>[ms]</cell><cell>[ms]</cell><cell></cell></row><row><cell>64-bit</cell><cell>8</cell><cell>158.65</cell><cell>7.55</cell><cell>95.2%</cell></row><row><cell></cell><cell>16</cell><cell>333.02</cell><cell>5.07</cell><cell>98.5%</cell></row><row><cell>128-bit</cell><cell>8</cell><cell>317.31</cell><cell>11.42</cell><cell>96.4%</cell></row><row><cell></cell><cell>16</cell><cell>666.03</cell><cell>7.72</cell><cell>98.8%</cell></row><row><cell>192-bit</cell><cell>8</cell><cell>475.96</cell><cell>15.29</cell><cell>96.8%</cell></row><row><cell></cell><cell>16</cell><cell>999.05</cell><cell>10.37</cell><cell>98.9%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 6 .</head><label>6</label><figDesc>Memory Consumption and Cycle Count Comparison (Speed Optimized Implementation)</figDesc><table><row><cell>Cipher</cell><cell cols="6">Key Block 8-bit/16-bit Flash Hex Code SRAM Init.</cell><cell>Enc.</cell><cell>Dec.</cell></row><row><cell></cell><cell cols="3">Size Size Microcontroller Size</cell><cell>Size</cell><cell cols="2">Size [cycles] [cycles/ [cycles/</cell></row><row><cell></cell><cell>[bit] [bit]</cell><cell></cell><cell cols="3">[bytes] [Kbytes] [bytes]</cell><cell>block] block]</cell></row><row><cell cols="2">Hummingbird 256 16</cell><cell cols="2">ATmega128L 10, 918</cell><cell>30.5</cell><cell>0</cell><cell>8, 182 1, 399 1, 635</cell></row><row><cell></cell><cell></cell><cell cols="2">MSP430F1611 1, 360</cell><cell>3.76</cell><cell>0</cell><cell>4, 824 1, 220 1, 461</cell></row><row><cell cols="2">PRESENT [29] 80 64</cell><cell cols="2">ATmega163 2, 398</cell><cell>-</cell><cell>528</cell><cell>-</cell><cell>9, 595 9, 820</cell></row><row><cell></cell><cell></cell><cell>C167CR</cell><cell>-</cell><cell>92.2</cell><cell>-</cell><cell>-</cell><cell>19, 464 33, 354</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 7 .</head><label>7</label><figDesc>Overall Performance Comparison at 4 MHz (Speed Optimized Implementation) (a) Encryption Performance Comparison</figDesc><table><row><cell cols="5">Message Microcontroller PRESENT [29] Hummingbird Performance</cell></row><row><cell cols="2">Length Word Length</cell><cell cols="3">Encryption Encryption Improvement</cell></row><row><cell></cell><cell>[bit]</cell><cell>[ms]</cell><cell>[ms]</cell><cell></cell></row><row><cell>64-bit</cell><cell>8</cell><cell>2.40</cell><cell>3.38</cell><cell>-28.9%</cell></row><row><cell></cell><cell>16</cell><cell>4.87</cell><cell>2.43</cell><cell>50.1%</cell></row><row><cell>128-bit</cell><cell>8</cell><cell>4.80</cell><cell>4.72</cell><cell>1.7%</cell></row><row><cell></cell><cell>16</cell><cell>9.68</cell><cell>3.65</cell><cell>62.3%</cell></row><row><cell>192-bit</cell><cell>8</cell><cell>7.20</cell><cell>6.06</cell><cell>15.8%</cell></row><row><cell></cell><cell>16</cell><cell>14.61</cell><cell>4.87</cell><cell>66.7%</cell></row><row><cell></cell><cell cols="3">(b) Decryption Performance Comparison</cell><cell></cell></row><row><cell cols="5">Message Microcontroller PRESENT [29] Hummingbird Performance</cell></row><row><cell cols="2">Length Word Length</cell><cell cols="3">Decryption Decryption Improvement</cell></row><row><cell></cell><cell>[bit]</cell><cell>[ms]</cell><cell>[ms]</cell><cell></cell></row><row><cell>64-bit</cell><cell>8</cell><cell>2.46</cell><cell>3.68</cell><cell>-33.2%</cell></row><row><cell></cell><cell>16</cell><cell>8.34</cell><cell>2.67</cell><cell>67.9%</cell></row><row><cell>128-bit</cell><cell>8</cell><cell>4.92</cell><cell>5.32</cell><cell>-7.5%</cell></row><row><cell></cell><cell>16</cell><cell>16.68</cell><cell>4.13</cell><cell>75.2%</cell></row><row><cell>192-bit</cell><cell>8</cell><cell>7.38</cell><cell>6.95</cell><cell>5.8%</cell></row><row><cell></cell><cell>16</cell><cell>25.02</cell><cell>5.59</cell><cell>77.6%</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0"><p>In Enigma machine each rotor has 26 contacts, whereas in Hummingbird each virtual rotor (i.e., a 16-bit block cipher) has 2<ref type="bibr" target="#b16">16</ref> = 65536 contacts.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>This work is supported by NSERC Strategic Grant. The authors would like to thank the two anonymous reviewers for their insightful comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Serpent: A Proposal for the Advanced Encryption Standard</title>
		<author>
			<persName><forename type="first">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Knudsen</surname></persName>
		</author>
		<ptr target="http://www.cl.cam.ac.uk/~rja14/Papers/serpent.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">AVR Studio 4</title>
		<author>
			<persName><surname>Atmel</surname></persName>
		</author>
		<ptr target="http://www.atmel.com/dyn/Products/tools_card.asp?tool_id=2725" />
		<imprint>
			<biblScope unit="volume">17</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">New Types of Cryptanalytic Attacks Using Related Keys</title>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of Cryptology</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="229" to="246" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Cryptanalysis of Multiple Modes of Operation</title>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Cryptology</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="45" to="58" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Cryptanalysis of Triple Modes of Operation</title>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Cryptology</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="161" to="184" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">R</forename><surname>Knudsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Cryptanalysis of the ANSI X9.52 CBCM Mode</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="47" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<title level="m">Differential Cryptanalysis of the Data Encryption Standard</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Slide Attacks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Biryukov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FSE 1999</title>
		<editor>
			<persName><forename type="first">L</forename><forename type="middle">R</forename><surname>Knudsen</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">1636</biblScope>
			<biblScope unit="page" from="245" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Advanced Slide Attacks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Biryukov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EURO-CRYPT 2000</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Preneel</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1807</biblScope>
			<biblScope unit="page" from="589" to="606" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">PRESENT: An Ultra-Lightweight Block Cipher</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bogdanov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">R</forename><surname>Knudsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Leander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J B</forename><surname>Robshaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Seurin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Vikkelsoe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES 2007</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Paillier</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">4727</biblScope>
			<biblScope unit="page" from="450" to="466" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">KATAN and KTANTAN A Family of Small and Efficient Hardware-Oriented Block Ciphers</title>
		<author>
			<persName><forename type="first">C</forename><surname>De Cannière</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Dunkelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Knežević</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES 2009</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Clavier</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Gaj</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">5747</biblScope>
			<biblScope unit="page" from="272" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Trivium -A Stream Cipher Construction Inspired by Block Cipher Design Principles</title>
		<author>
			<persName><forename type="first">C</forename><surname>De Cannière</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Preneel</surname></persName>
		</author>
		<ptr target="http://www.ecrypt.eu.org/stream/papersdir/2006/021.pdf" />
	</analytic>
	<monogr>
		<title level="j">ECRYPT Stream Cipher</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Cube Attacks on Tweakable Black Box Polynomials</title>
		<author>
			<persName><forename type="first">I</forename><surname>Dinur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2009</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Joux</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">5479</biblScope>
			<biblScope unit="page" from="278" to="299" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A Survey of Lightweight-Cryptography Implementations</title>
		<author>
			<persName><forename type="first">T</forename><surname>Eisenbarth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Uhsadel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Design &amp; Test of Computers</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="522" to="533" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Ultra-Lightweight Cryptography for Low-Cost RFID Tags: Hummingbird Algorithm and Protocol, Centre for Applied Cryptographic Research (CACR) Technical Reports</title>
		<author>
			<persName><forename type="first">D</forename><surname>Engels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
		</author>
		<idno>CACR 2009-29</idno>
		<ptr target="http://www.cacr.math.uwaterloo.ca/techreports/2009/cacr2009-29.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Lightweight Implementation of Hummingbird Cryptographic Algorithm on 4-Bit Microcontroller</title>
		<author>
			<persName><forename type="first">X</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Engels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 1st International Workshop on RFID Security and Cryptography</title>
		<imprint>
			<date type="published" when="2009">2009. 2009. 2009</date>
			<biblScope unit="page" from="838" to="844" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Strong Authentication for RFID Systems Using the AES Algorithm</title>
		<author>
			<persName><forename type="first">M</forename><surname>Feldhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dominikus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wolkerstorfer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES 2004</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Joye</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J.-J</forename><surname>Quisquater</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3156</biblScope>
			<biblScope unit="page" from="357" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">AES Implementation on a Grain of Sand</title>
		<author>
			<persName><forename type="first">M</forename><surname>Feldhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wolkerstorfer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Rijmen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEE Proceedings Information Security</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="13" to="20" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Design and Implementation of Low-Area and Low-Power AES Encryption Hardware Core</title>
		<author>
			<persName><forename type="first">P</forename><surname>Hämäläinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Alho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hännikäinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Hämäläinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 9th EUROMICRO Conference on Digital System Design: Architectures, Methods and Tools -DSD 2006</title>
		<meeting><address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="577" to="583" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Grain: A Stream Cipher for Constrained Environments</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Meier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Wireless and Mobile Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="86" to="93" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">HIGHT: A New Block Cipher Suitable for Low-Resource Device</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">S</forename><surname>Koo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES 2006</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Goubin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Matsui</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4249</biblScope>
			<biblScope unit="page" from="46" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">mCrypton -A Lightweight Block Cipher for Security of Low-cost RFID Tags and Sensors</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Korkishko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WISA 2005</title>
		<editor>
			<persName><forename type="first">J.-S</forename><surname>Song</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Kwon</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Yung</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">3786</biblScope>
			<biblScope unit="page" from="243" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">A Mutual Authentication Protocol for RFID Using IDEA, Auto-ID Labs White Paper</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Min</surname></persName>
		</author>
		<idno>WP-HARDWARE-048</idno>
		<ptr target="http://www.autoidlabs.org/uploads/media/AUTOIDLABS-WP-HARDWARE-048.pdf" />
		<imprint>
			<date type="published" when="2009-03">March 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The Interpolation Attack on Block Ciphers</title>
		<author>
			<persName><forename type="first">T</forename><surname>Jakobsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Knudsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FSE 1997</title>
		<editor>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1267</biblScope>
			<biblScope unit="page" from="28" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Higher Order Derivatives and Differential Cryptanalysis</title>
		<author>
			<persName><forename type="first">X</forename><surname>Lai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Symposium on Communication, Coding and Cryptography, in honor of James L. Massey on the occasion of his 60&apos;th birthday</title>
		<meeting>Symposium on Communication, Coding and Cryptography, in honor of James L. Massey on the occasion of his 60&apos;th birthday</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">New Lightweight DES Variants</title>
		<author>
			<persName><forename type="first">G</forename><surname>Leander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Schramm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FSE 2007</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Biryukov</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4593</biblScope>
			<biblScope unit="page" from="196" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">On the Classification of 4 Bit S-Boxes</title>
		<author>
			<persName><forename type="first">G</forename><surname>Leander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poschmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WAIFI 2007</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Carlet</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Sunar</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4547</biblScope>
			<biblScope unit="page" from="159" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Linear Cryptanalysis Method for DES Cipher</title>
		<author>
			<persName><forename type="first">M</forename><surname>Matsui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 1993</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Helleseth</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="volume">765</biblScope>
			<biblScope unit="page" from="386" to="397" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Lightweight Cryptography -Cryptographic Engineering for a Pervasive World</title>
		<author>
			<persName><forename type="first">A</forename><surname>Poschmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<pubPlace>Bochum; Germany</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Department of Electrical Engineering and Information Sciences, Ruhr-Universitäet Bochum</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Ultra-Lightweight Implementations for Smart Devices-Security for 1000 Gate Equivalents</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rolfes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Leander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CARDIS 2008</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Grimaud</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">F.-X</forename><surname>Standaert</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer, Heidelberg</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5189</biblScope>
			<biblScope unit="page" from="89" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">Rowley</forename><surname>Associates</surname></persName>
		</author>
		<ptr target="http://www.rowley.co.uk/msp430/index.htm" />
		<title level="m">CrossWorks for MSP430</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">SEA: A Scalable Encryption Algorithm for Small Embedded Applications</title>
		<author>
			<persName><forename type="first">F.-X</forename><surname>Standaert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Piret</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Gershenfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Quisquater</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CARDIS 2006</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Domingo-Ferrer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Posegga</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Schreckling</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">3928</biblScope>
			<biblScope unit="page" from="222" to="236" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Cryptanalysis of Some Recently-Proposed Multiple Modes of Operation</title>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FSE 1998</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Vaudenay</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1372</biblScope>
			<biblScope unit="page" from="254" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Suite of Executable</title>
		<author>
			<persName><surname>Winavr</surname></persName>
		</author>
		<ptr target="http://winavr.sourceforge.net/" />
	</analytic>
	<monogr>
		<title level="m">Open Source Software Development Tools for the Atmel AVR Series of RISC Microprocessors Hosted on the Windows Platform</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">On the Interpolation Attacks on Block Ciphers</title>
		<author>
			<persName><forename type="first">A</forename><surname>Youssef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FSE 2000</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Schneier</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">1978</biblScope>
			<biblScope unit="page" from="109" to="120" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
