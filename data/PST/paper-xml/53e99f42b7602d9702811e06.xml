<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Trade-offs Between Mobility and Density for Coverage in Wireless Sensor Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Wei</forename><surname>Wang</surname></persName>
							<email>wang.wei@nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Vikram</forename><surname>Srinivasan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Kee-Chaing</forename><surname>Chua</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Trade-offs Between Mobility and Density for Coverage in Wireless Sensor Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">02A46F9D90DC68F5F119CD76C2D046F7</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.1 [Network Architecture and Design]: Wireless communication Theory</term>
					<term>Design</term>
					<term>Algorithm Sensor networks</term>
					<term>Mobility</term>
					<term>Coverage</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we study the coverage problem for hybrid networks which comprise both static and mobile sensors. We consider mobile sensors with limited mobility, i.e., they can move only once over a short distance. Such mobiles are simple and cheap compared to sophisticated mobile robots. In conventional static sensor networks, for a random deployment, the sensor density should increase as O(log L + k log log L) to provide k-coverage in a network with a size of L. As an alternative, an all mobile sensor network can provide k-coverage over the field with a constant density of O(k), independent of network size L. We show that the maximum distance that any mobile sensor will have to move is O( 1 √ k log 3/4 (kL)). We then propose a hybrid network structure, comprising static sensors and a small fraction of O( 1 √ k ) of mobile sensors. For this network structure, we prove that k-coverage is achievable with a constant sensor density of O(k), independent of network size L. Furthermore, for this hybrid structure, we prove that the maximum distance which any mobile sensor has to move is bounded as O(log 3/4 L). We then propose a distributed relocation algorithm, where each mobile sensor only requires local information in order to optimally relocate itself and characterize the algorithm's computational complexity and message overhead. Finally, we verify our analysis via extensive numerical evaluations.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Wireless Sensor Networks (WSNs) are networks formed by a large number of simple and low cost sensors. Sensors are self-organized to perform certain tasks, such as environment monitoring, target tracking or infrastructure surveillance. An important research problem in wireless sensor networks is the coverage problem, which studies how well the field is monitored by sensors <ref type="bibr" target="#b1">[1]</ref>. The sensing region of a single sensor is often abstracted as a disk with radius r centered at it. The field is said to be k-covered when every point in the field is within the sensing region of at least k sensors <ref type="bibr" target="#b2">[2,</ref><ref type="bibr" target="#b3">3]</ref>.</p><p>A critical aspect which determines the quality of coverage is network deployment. Due to a variety of factors, such as the scale of the network, inaccessibility of the terrain etc., optimal deterministic deployment of the network is often infeasible. A common scenario envisioned for deployment is that of randomly scattering sensor devices over the field of interest. Although this eases the task of network deployment, it makes the task of guaranteeing coverage much harder.</p><p>In this paper, we define a metric, over-provisioning factor, which indicates the efficiency of a network deployment strategy. For a given network deployment strategy, if a sensor density of λ is required to guarantee k-coverage, then we say that the deployment strategy has an over-provisioning factor η = λ k . Consider a random deployment strategy with static sensors of sensing range r = 1 √ π over a square region of area L. Then to guarantee k-coverage, we need sensor density λ = log L + (k + 2) log log L + c(L) with c(L) → +∞ when L → +∞ <ref type="bibr" target="#b3">[3,</ref><ref type="bibr" target="#b4">4,</ref><ref type="bibr" target="#b5">5]</ref>. Since c(L) can grow slower than O(log log L), the over-provisioning factor is η = Θ( log L k + log log L). Compared to a deterministic deployment, which has η = Θ(1), the over-provisioning solution has an unbounded over-provisioning factor as network size L grows. Loosely speaking, for the random deployment, many areas in the field will have far more than k sensors covering them, while a few critical regions will have around k sensors covering them. Consequently, the random deployment strategy has a high over-provisioning factor and low efficiency for large networks.</p><p>As an alternative, mobility can be used to improve network coverage efficiency <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b7">7]</ref>. Mobile sensors can relocate themselves to heal coverage holes in the network so that the randomness in sensor deployment can be compensated. Clearly, the over-provisioning factor for a network with all mobile sensors can be Θ(1) since the sensors have the flexibility of relocating themselves to the optimal locations. Unfortunately, this extra degree of freedom does not come cheap. First, mobile sensors are far more expensive than static sensors. Second, mobility consumes more energy than communication or sensing. However, most research in mobile sensor networks do not consider the cost of movement for mobile sensors. If a mobile sensor is required to move over long distances, then its entire energy supply may be depleted in locomotion. Moreover, the redeployment process may take considerable time in large networks since the speed of mobiles is limited.</p><p>In this paper, we first consider the coverage problem for an all mobile sensor network, where the mobile sensors only have limited mobility. Specifically, we consider the case where each mobile can only move once, over a short distance which is pre-determined by the hardware limitations <ref type="bibr" target="#b8">[8]</ref>. Unlike conventional mobile robots, these mobile sensors can use simple mobility mechanisms, such as propeller systems powered by fuels <ref type="bibr">[9]</ref>. Using the well known result in minimax grid matching <ref type="bibr" target="#b10">[10]</ref>, we show that if the mobile sensors are uniformly deployed, the maximum distance that any mobile sensor has to move is O( 1 √ k log 3/4 (kL)) w.h.p. (with high probability 1 ) to provide k-coverage. In other words, although the over-provisioning factor is O <ref type="bibr" target="#b1">(1)</ref> for an all mobile sensor network, the maximum distance moved by any sensor scales as O(log 3/4 L) for a fixed value of k. We see that the maximum movement distance for an all mobile network scales slower than the over-provisioning factor for a static sensor network when k is fixed.</p><p>Although this result is promising, a mobile sensor is more expensive than a static sensor. This motivates us to investigate the design of a hybrid sensor network structure comprising a large number of static sensors and a small fraction of mobile sensors. The key question is whether, with such a structure, it would still be possible to maintain a constant over-provisioning factor and simultaneously limit the rate at which the maximum movement distance scales. We propose a hybrid network structure which requires a small fraction of O( 1 √ k ) of the sensors to be mobile. Our hybrid network structure has an over-provisioning factor which is O(1) for a given k. Moreover, we show that w.h.p. the maximum moving distance for mobiles is O(log 3/4 L). Therefore, the moving distance for the mobiles is small compared to the size of the network and only a small number of mobile sensors are required. This implies a significant cost advantage over the static and all-mobile deployment strategies.</p><p>The main results of this paper are as follows:</p><p>• We show that w.h.p. sensor networks of all mobile sensors can use an over-provisioning factor of η = π 2 and a maximum moving distance of O( 1 √ k log 3/4 (kL)) to provide k-coverage over the whole field (Section 3).</p><p>• We propose a hybrid network structure which uses a static sensor density of λ = 2πk and mobile sensor density of λ √ 2πk to provide k-coverage over the field. The maximum moving distance for mobile sensors is O(log 3/4 L) w.h.p. in our scheme (Section 4).</p><p>• We describe a distributed algorithm to find the movement schedule for mobile sensors. Mobile sensors only need to have knowledge of neighbors within distance of O(log 3/4 L) in the algorithm. The algorithm has time complexity of O(L 2 ) and uses O(L 3 log 3/2 L) message exchanges (Section 5).</p><p>• There is a trade-off between mobile sensor density and static sensor density. With higher static sensor densities, the mobile density can be reduced exponentially while the 1 In the rest of this paper, the term "with high probability" means that the probability is larger than 1 -L -c log 1/2 L for some constant c, when L → +∞. </p><formula xml:id="formula_0">+ log L) 0 0 All mobile 0 O(k) O( 1 √ k log 3/4 (kL)) Hybrid O(k) O( √ k) O(log 3/4 L)</formula><p>moving distance for mobiles still scales with the network size as O(log 3/4 L) (Section 6). In summary, Table <ref type="table" target="#tab_0">1</ref> compares the sensor density and moving distance for different network structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Mobile sensors are widely studied in sensor networks for coverage improvement <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b7">7,</ref><ref type="bibr" target="#b11">11,</ref><ref type="bibr" target="#b12">12]</ref>, load balancing <ref type="bibr" target="#b13">[13]</ref> or lifetime extension <ref type="bibr" target="#b14">[14,</ref><ref type="bibr" target="#b15">15,</ref><ref type="bibr" target="#b16">16]</ref>. Most of these approaches do not consider the limitations on the distance that a mobile sensor can move. Mobile sensors in these approaches are assumed as powerful rechargeable devices. In this paper, we study the possibility of using cheap and simple mobile devices to achieve similar performance as complex mobile sensors.</p><p>Chellappan et al. introduce flip-based sensors for network coverage improvement in <ref type="bibr" target="#b8">[8]</ref>. The flip-based sensors can only move once, over a limited distance, therefore the costs of such sensors are quite low. A network flow based algorithm is used in <ref type="bibr" target="#b8">[8]</ref> to find the mobility schedule which maximizes network coverage. The problem is further formulated as an optimization problem which minimizes the variance of sensors in different regions in <ref type="bibr" target="#b17">[17]</ref>. However, both <ref type="bibr" target="#b8">[8]</ref> and <ref type="bibr" target="#b17">[17]</ref> do not provide performance bounds for fraction of area covered or maximum moving distance. In this paper, we show that the network can be completely k-covered by using only a small fraction of mobile sensors. We give bounds on the maximum moving distance of mobile sensors. Furthermore, our movement schedule formulation is simpler than in <ref type="bibr" target="#b8">[8]</ref>. We also provide a distributed algorithm which achieves the optimal solution, while the algorithm in <ref type="bibr" target="#b17">[17]</ref> is a distributed heuristic algorithm, with no guarantees of optimality.</p><p>The bound on maximum mobile moving distance in this paper is based on the minimax grid matching result for uniformly distributed points <ref type="bibr" target="#b10">[10]</ref>. The minimax grid matching result has been applied to solve load balancing problems on graphs in <ref type="bibr" target="#b18">[18]</ref> and emulation problems for sensor networks in <ref type="bibr" target="#b19">[19]</ref>. In this paper, we extended the original minimax matching result to different distributions to bound the matching distance between mobiles and vacancies in hybrid sensor networks, where the vacancies are not uniformly distributed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">COVERAGE WITH MOBILE SENSORS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">System Model</head><p>Consider a square sensing field with side length l and area L = l × l. We assume that there are N = λL static sensors uniformly and independently scattered in the network. When N is large , the number of static sensors in a region with area of A, which is denoted as nA, will be Poisson dis-tributed with mean of λA <ref type="bibr" target="#b20">[20]</ref>:</p><formula xml:id="formula_1">P{nA = i} = (λA) i e -λA i! (1)</formula><p>Also, the number of sensors in disjoint areas will be asymptotically independent to each other ( <ref type="bibr" target="#b20">[20]</ref>, page 39). Thus, our point process can be approximated by a stationary Poisson point process when the network is large enough. In later derivations, we directly use the properties of Poisson point processes, since we study large networks where these assumptions are valid. We assume that each static sensor can cover a disk with radius r = 1 √ π centered at it. In other words, every sensor can cover a disk with unit area. The field is said to be kcovered when every point in it can be covered by at least k sensors. The communication range for sensors is assumed to be larger than 2r so that the network will be connected when it is completely covered <ref type="bibr" target="#b21">[21]</ref>. Note that sensing regions can be irregular and dependent on environments around sensors in the real world. Although we use a simplified disk sensing model in our derivations, our results can be easily modified and applied to other complicated sensing models.</p><p>We also assume that mobile sensors are uniformly and independently scattered in the network and the total number of mobiles is M = ΛL. The mobile sensors have the same coverage range as static sensors. Due to energy and cost considerations, we assume that each mobile sensor only moves once over a limited distance, to heal coverage holes in the network. We assume that the mobiles are provisioned with sufficient energy, so that after relocation, they can sense and communicate for at least the same duration as the static sensors. Finally, our goal is to guarantee that the entire field is k-covered, where k is determined by the network operator prior to deployment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Over-Provisioning Factor</head><p>We define a new metric, which we call the over-provisioning factor η = λ+Λ k , i.e., the ratio of sensor (static and mobile) density to the coverage requirement of the network. Clearly, the smaller the value of η, the more efficient is the network deployment in providing k-coverage.</p><p>For deterministically deployed networks, the optimal overprovisioning factor is Θ(1). The upper bound for η can be found by placing sensors on regular grids. For example, placing sensors on square grids with side length of ds = √ 2r can provide 1-coverage over the network. If k-coverage is required, k sensors can be placed at every grid point. Thus, the over-provisioning factor for this deterministic deployment is ηs</p><formula xml:id="formula_2">= k k( √ 2r) 2 = π 2 .</formula><p>The reason that ηs is larger than 1 is that there are still some overlapping areas between adjacent sensors in deterministic deployments. For higher efficiency, we can place sensors on equilateral triangular lattices to achieve ηt = 2 √ 3π 9 , which is the most efficient regular lattice for 1coverage <ref type="bibr" target="#b22">[22]</ref>. It is easy to see that the over-provisioning factor is lower bounded by 1 for any deployment, since the sum of areas of sensing regions of all sensors should be k times larger than the sensing field size. Therefore, the optimal over-provisioning factor for deterministically deployed sensor networks is Θ <ref type="bibr" target="#b1">(1)</ref>.</p><p>Let us now investigate the over-provisioning factor for randomly deployed static sensor networks with density λ. By the theory of random coverage processes ([20] Theorem 3.6), the total expected area which is uncovered is e -λ L.</p><p>By choosing a large enough λ, the percentage of uncovered area, which is e -λ , can be made arbitrarily small. However, the probability that there exists a connected coverage hole larger than unit area approaches one for a network with constant sensor density λ when the network size L → ∞. The reason for this is as follows: Consider the case that a point in the network has no sensors within a distance of 2r from it. If such a point exists, the disk with radius r = 1 √ π around it will be uncovered, which is a coverage hole with an area of at least 1. Note that such a point always exists when the network is not completely covered with an increased sensing range of 2r. As shown by the theory of random coverage processes ([20] Theorem 3.1), with probability approaching one, a network cannot be completely covered by a constant density of sensors with range of 2r when the network sizes goes to infinity. Therefore, we see that a constant sensor density of λ can not guarantee that there are no big holes in the network as the network size grows, even though most areas of the field will be covered.</p><p>To achieve k-coverage in a large network, the static sensor density needs to grow with the network size as λ = log L + (k + 2) log log L + c(L) where c(L) → +∞ as L → +∞ <ref type="bibr" target="#b3">[3]</ref>. The over-provisioning factor for a randomly deployed static sensor network is:</p><formula xml:id="formula_3">η s = log L + (k + 2) log log L + c(L) k (2)</formula><p>which is O(log L) for fixed values of k. This shows that the coverage efficiency for random static sensor networks become worse as the network size increases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">All Mobile Networks</head><p>We now consider coverage in networks when all sensors are mobiles and are randomly deployed. These mobile sensors then reposition themselves so as to provide k-coverage. Clearly, in this case we should be able to achieve ηm = Θ(1). However, the key question is what is the maximum distance that each sensor has to move in order to place itself at the optimum location, since movement consumes a significant amount of energy <ref type="bibr" target="#b23">[23]</ref>. Most prior research tries to minimize the total distance moved or total number of movements made by all the sensors, e.g., <ref type="bibr" target="#b13">[13]</ref>. This is inadequate since energy is not transferable between mobile sensors. Therefore, it is better to limit the maximum moving distance for each mobile by moving several mobiles over a short distance, such as the cascaded movement in <ref type="bibr" target="#b24">[24]</ref>.</p><p>We bound the maximum moving distance for all mobile networks as follows:</p><p>Theorem 1. Consider an all mobile sensor network uniformly and independently distributed over a square field with area L. The network can provide k-coverage with an overprovisioning factor of η m = π 2 and the maximum distance moved by any mobile sensor is O( 1 √ k log 3/4 (kL)) w.h.p. Proof. In order to provide a tight bound on the moving distance, we use a different placement than the deterministic placement discussed in the previous section, which places k sensors at the same grid point of side length ds = √ 2r. Instead, here we divide the sensing field into square grids with side length of da = √ 2r √ k as shown in Fig. <ref type="figure" target="#fig_1">1</ref>. It is easy to see that the density of the grid points is k 2r 2 = ηmk. We first show that the network can be k covered with one mobile at each of these grid points. Then, we will bound the  maximum moving distance for uniformly distributed mobiles to achieve such a regular grid deployment. Assume that the mobiles have been relocated so that each grid point has exactly one mobile on it. First consider coverage on interior network areas which have distance more than r to the field boundary. If a point is within distance r to at least k grid points, it is then k covered. By the lower bounds on lattice points covered by a circle <ref type="bibr" target="#b25">[25]</ref>, there are at least W (k) lattice points of side length of da covered by a circle of radius r centered at an arbitrary point:</p><formula xml:id="formula_4">W (k) ≥ π(r -1 √ 2 da) 2 d 2 a = k × π 2 (1 - 1 √ k ) 2<label>(3)</label></formula><p>Note that W (k)/k is a monotonically increasing function when k ≥ 1, and we have W (k) &gt; k when k ≥ 25. It is also easy to verify that the network is at least k-covered when 1 ≤ k &lt; 25. Thus, we can see that if there is one sensor at each grid point then the network interior is completely kcovered. To cover points near the boundary, we can slightly increase the deployment field to a (l + 2r) × (l + 2r) square. This only increases the density by a fraction of O( r l ), which is negligible when the network size is large.</p><p>After mobiles are randomly deployed in the network, we need to relocate mobiles so that each grid point has exactly one mobile. This is essentially a matching problem between mobile sensors and grid points. The maximum moving distance for mobile sensors can be derived from the results of the minimax grid matching problem studied in <ref type="bibr" target="#b10">[10]</ref>:</p><p>Consider an l × l square region with square grids of unit side length. If we randomly and independently scatter L = l 2 points in the region according to a uniform distribution, then w.h.p., there exists a perfect match between the L random points and the L grid points with maximum distance between any matched pairs of O(log 3/4 L).</p><p>Note that the total number of grid points is k 2r 2 L in our network instead of L. Therefore, the maximum moving distance will be O(log 3/4 (kL)) times the side length of the grid. Since our grid size is da</p><formula xml:id="formula_5">= √ 2r √ k instead of 1, we get the max- imum moving distance bound of O( 1 √ k log 3/4 (kL)).</formula><p>Theorem 1 shows that it is possible to relocate the mobiles by only a small distance to achieve deterministic sensor placement. The actual relocation algorithm will be discussed in section 5.</p><p>An interesting point in an all mobile sensor network is that the mobiles compensate the randomness in large networks differently when compared to static approaches. The static approach needs to use higher density, scaled as O(log L), to compensate for the network size. In mobile sensor networks, the sensor density remains constant while mobiles need to increase their moving distance as O(log 3/4 L) as the network size increases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">COVERAGE OF HYBRID NETWORKS</head><p>The all mobile network can achieve deterministic sensor deployment by moving sensors over a small distance. However, mobile sensors are much more expensive than static sensors. In order to reduce the network cost, it is preferable to use only a small number of mobiles to improve the network performance. In this section, we study the coverage of hybrid networks in which a large number of static sensors and a small fraction of mobile sensors are deployed. We provide a constructive proof to show that the over-provisioning factor is O(1) and the fraction of mobile sensors required is less than 1 √ 2πk . We further show that for this particular deployment, the maximum distance that any mobile sensor will have to move is O(log 3/4 L) w.h.p.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Density of Mobile Sensors</head><p>In this section, we first fix the static sensor density at λ = 2πk. The trade-off between static sensor density and mobile sensor density will be further discussed in later sections.</p><p>We divide the network into square cells with equal side length of</p><formula xml:id="formula_6">d h = r/ √ 2.</formula><p>Since the sensing range is r, any sensor in the cell can completely cover the cell. The average number of static sensors in each cell will be 2πkd 2 h = k. The network will be k-covered if all cells contain at least k sensors. However, some cells may contain fewer than k static sensors due to the randomness in deployment. If a cell i contains ni &lt; k static sensors, we say cell i has vi = kni vacancies. According to the Poisson approximation, ni will be asymptotically independently and identically distributed as:</p><formula xml:id="formula_7">P{ni = j} = k j e -k j! (4)</formula><p>The random variable vi = [kni] + , where [x] + means max{x, 0}, will be distributed as:</p><formula xml:id="formula_8">P{vi = j} = 8 &gt; &lt; &gt; : k k-j e -k (k-j)! 1 ≤ j ≤ k 1 - P k-1 m=0 k m e -k m! j = 0 0 otherwise (5)</formula><p>The expected number of vacancies in a cell will be:</p><formula xml:id="formula_9">E{vi} = k X j=1 j k k-j e -k (k -j)! = k-1 X l=0 (k -l) k l e -k l! = k-1 X l=1 » k l+1 e -k l! - k l e -k (l -1)! - + ke -k = k X l=1 k l e -k (l -1)! - k-1 X l=1 k l e -k (l -1)! = k k e -k (k -1)! = kP{ni = k} (6)</formula><p>Since vi are independently and identically distributed random variables, we drop the subscript i in E{vi} in later derivations. The average number of vacancies per cell will converge to E{v} when the network size is large, by the Law of Large Numbers <ref type="bibr" target="#b26">[26]</ref>. In other words, the average number of vacancies per cell will be within a range of [(1 -)E{v}, (1 + )E{v}] for arbitrarily small values of when L → ∞. Therefore, with a mobile density of Λ = (1+ )E{v} (r/ √</p><p>2) 2 = (1 + )2πE{v}, the number of mobiles is almost surely larger than or equal to the total number of vacancies for large networks. As can be made arbitrarily small, we just use the asymptotic mobile density of Λ = 2πE{v} in future derivations.</p><p>Using Stirling's approximation, k! ≈ k k e -k √ 2πk:</p><formula xml:id="formula_10">E{v} = k k k e -k k! ≈ √ k √ 2π<label>(7)</label></formula><p>Note that the error of Stirling's approximation has the order of O(e 1/(12k) ). Thus, we have E{v} → √ k/ √ 2π as k → ∞, see Fig. <ref type="figure" target="#fig_4">5</ref>. Consequently, we have Λ ≈ √ 2πk. As the static sensor density is 2πk, the density ratio of mobile sensors compared to static sensors is</p><formula xml:id="formula_11">Λ λ ≈ 1 √ 2πk .</formula><p>As k increases, a smaller fraction of sensors need to be mobile to fill the vacancies. This agrees with the intuition that the Poisson distributed number of static sensors in a cell will be more concentrated around the mean of k as k increases.</p><p>The summation of mobile and static sensor density is still O(k) since we have λ = 2πk and Λ ≈ √ 2πk. More precisely, the over-provisioning factor η h = λ+Λ k ≤ 2π + √ 2π for an arbitrarily large network and any integer value of k. The fraction of mobiles needed for different k values are plotted in Fig. <ref type="figure" target="#fig_4">5</ref>. For k larger than 15, fewer than 10% of the sensors need to be mobile. However, for small k values, the mobile sensor density Λ can be larger than the density of all mobile networks. For example, when k = 1, we can use mobile density of π 2 to achieve a deterministic square coverage over the field while our solution requires density of Λ = √ 2π &gt; π 2 . This problem will be further discussed in section 6 where we can use several methods to reduce the mobile density.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Moving Distance for Mobiles</head><p>In the hybrid network solution discussed above, we need to move mobiles to fill in the vacancies in each cell. In other words, we need to build up a one-to-one matching between mobile sensors and vacancies. In the following, we show that the maximum distance that any mobile sensor will have to move is O(log 3/4 L) with high probability.</p><p>The matching is built in two steps: First, we match the mobiles to points on a grid with side length of 1 √ Λ . The maximum matching distance is O( 1 √ Λ log 3/4 (ΛL)) w.h.p., as shown in section 3. The function 1 √ Λ log 3/4 (ΛL) is a decreasing function with Λ when Λ and L are larger than 1. Therefore, the matching distance decreases with Λ and it can be rewritten as O(log 3/4 L), since Λ ≈ √ 2πk &gt; 1. The second step is to match vacancies to the grid points on the grid with side length of 1 √ Λ . Unfortunately, the results from <ref type="bibr" target="#b10">[10]</ref> cannot be directly applied since the vacancies are not uniformly distributed. We use the following theorem to bound the maximum matching distance: Thus, the matching distance between vacancies and the grid points is also O(log 3/4 L). Since the big O notation hides constant factors, the distance between the mobile and vacancy matched to the same grid point is also O(log 3/4 L). This builds up the one-to-one matching between mobiles and vacancies with maximum distance between matched pairs as O(log 3/4 L).</p><p>Compared to the all mobile case, the moving distance of the hybrid network is O( √ k) times larger, yet it is small compared to the network size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">MOBILITY ALGORITHM</head><p>As shown in section 4, the maximum moving distance of mobiles is small compared to the network size. However, we still require a distributed locomotion schedule for which the maximum movement distance is O(log 3/4 L). Simple greedy movement, such as moving mobiles to the nearest vacancy, may fail to fill all vacancies with short distance movements <ref type="bibr" target="#b8">[8]</ref>. Since the matching problem is a special kind of network flow problem, we can use a network flow architecture to solve the movement schedule in a distributed manner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Problem Formulation</head><p>Inspired by the network flow model used in <ref type="bibr" target="#b8">[8]</ref>, we formulate our movement schedule problem as follows: Suppose for each cell i there are ni static sensors and mi mobile sensors. The number of vacancies in cell i will be vi = [kni] + . The problem of moving mobiles to fill the vacancies is similar to traffic flow problem in networks, see Fig. <ref type="figure">2</ref>.</p><p>We construct a graph G(V, E) with each cell as a vertex. We add a directional edge (i, j) from cell i to j when the distance between their center is smaller than D = O(log 3/4 L), which is the maximum distance that a mobile sensor can move. Thus, mobiles can move between two cells when the distance between them are smaller than D. Denote the number of mobiles which move from cell i to cell j as xij, then the movement schedule problem can be formulated as:</p><formula xml:id="formula_12">Minimize X i,j cij × xij (8) s.t. X j xji - X j xij ≥ vi -mi ∀i (9) X j xij ≤ mi ∀i (10) xij ≥ 0 ∀i, j (<label>11</label></formula><formula xml:id="formula_13">)</formula><p>where cij is the movement cost. In this optimization problem, Eq.( <ref type="formula">9</ref>) is the flow conservation condition, which requires the net in-flow for cell i (number of mobiles moving into cell i minus number of mobiles moving out of cell i) to be larger than the number of mobiles it requires (the number of vacancies minus initial number of mobiles in cell i). This constraint guarantees that the final number of mobiles in cell i will be larger than the number of vacancies after the movement. Eq. <ref type="bibr" target="#b10">(10)</ref> shows that the total number of mobiles moving out of cell i should not be larger than the initial number of mobiles in cell i. The movement cost cij determines the metrics that need to be minimized. If we set all cij = 1, then the optimal solution will give the movement schedule which has minimum number of movements. If cij is selected as distance between cells, we will get the scheme with the minimum total moving distance. In this formulation, every mobile will move only once between cells which are not more than D apart. Note that our problem formulation is simpler compared to the formulation in <ref type="bibr" target="#b8">[8]</ref>. This problem formulation can work for both the all mobile network and hybrid network. In case of all mobile network, we can simply set vi = k for all cells in the problem. This formulation can also be applied to irregularly shaped networks by the same graph construction methods as in square networks.</p><p>We next convert our problem to an equivalent standard network flow problem to show certain important properties of this problem. Note that the linear optimization problem of Eq.( <ref type="formula">8</ref>) -( <ref type="formula" target="#formula_12">11</ref>) is similar to the minimum cost flow problem <ref type="bibr" target="#b27">[27]</ref>, except for the flow conservation constraint of Eq.( <ref type="formula">9</ref>). Since in our problem the total number of mobiles P 2πL i=1 mi is slightly larger than the total number of vacancies P 2πL i=1 vi (see Sec. 4.1), we make the net in-flow to be larger or equal to vi -mi instead of just equal to. If we add a super sink cell c0 and slack variables xi0 to represent the excess number of mobiles, we will get an equivalent problem which is exactly the minimum cost flow problem with the few excess mobiles going to the super sink:</p><formula xml:id="formula_14">Minimize X i,j cij × xij (12) s.t. X j =0 xji - X j =0 xij -xi0 = vi -mi, ∀i = 0 (13) X i xi0 = 2πL X i=1 mi - 2πL X i=1 vi (14) X j xij ≤ mi ∀i (<label>15</label></formula><formula xml:id="formula_15">) xij ≥ 0 ∀i, j<label>(16)</label></formula><p>This minimum cost flow problem has flow capacity constraints on nodes, i.e., the total flow through a node is limited. We can further convert such problem to a traditional network flow problem which has only edge capacity constraints using the well known node-splitting method in network flow problems ( <ref type="bibr" target="#b27">[27]</ref> page 41-42).</p><p>As the constraint matrices for network flow problems are Totally Unimodular ( <ref type="bibr" target="#b27">[27]</ref> page 447-449), the optimal solution x * ij are integers since vi and mi are integers. Therefore, the optimal solution implies that we can just move x * ij mobile sensors from cell i to cell j to ensure that each cell has at least k sensors in total.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Distributed Solution</head><p>In this section, we describe a distributed algorithm to find the movement schedules for the mobiles. To better describe the algorithm, we first provide a distributed algorithm to solve a simpler problem. This algorithm only gives a feasible movement schedule to fill all vacancies without minimizing the total movement cost. We will later show that with several iterations of this algorithm, the minimum-cost flow can also be achieved. Details are at the end of this section.</p><p>The minimum cost flow problem described in section 5.1, gives the optimal sensor movement schedule which minimizes the total movement costs. However, if our goal is only to use mobiles to fill all the vacancies (without minimizing the movement cost), we can just treat the problem as a maximum flow problem, i.e., maximizing the flow from the source to the destination. The solution of the maximum flow will be a feasible movement schedule for mobiles to fill all vacancies when such schedule exists. Several efficient algorithms for the maximum flow problem exist, such as Ford-Fulkerson augmenting path algorithm or the pushrelabel algorithm <ref type="bibr" target="#b28">[28]</ref>. In this paper, we adopt the pushrelabel structure which is a naturally distributed algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Assumptions for the Algorithm</head><p>We assume that each mobile or static sensor knows its location and knows which cell it is located in. After deployment, mobiles and static sensor in the same cell i communicate with each other to compute vi and mi. Each cell elects a mobile or static sensor as the delegate for the entire cell. This sensor stores the necessary information of the cell during the algorithm execution. The delegate of cell i also needs to communicate and exchange information with its neighbors in graph G described earlier. In case there are empty cells, which contain no mobile or static sensors, we can randomly assign a mobile in an adjacent cell as its delegate. Since we have shown the empty cell can be filled with a maximum moving distance of D w.h.p., there will at least be one mobile within distance of D. In case that an empty cell makes the network disconnected, the nearest mobile moves to the empty cell to connect the network before executing the algorithm. In the following discussion, we just use the term "cell" instead of "the delegate of the cell" when an operation needs to be performed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Algorithm Description</head><p>The basic idea for push-relabel algorithm is to iteratively push the excess flow of one vertex to neighboring vertices with lower "heights" or relabel itself, which is lift the height of itself, when a push can not be performed. The push and relabel will be repeated until all cells have no excess flow. Details of the original push-relabel algorithm can be found Mobility algorithm for cell i 01: Collect cell information of v i and m i 02: Set height of i in and iout, denoted as h(i in ) and h(iout) to 0 03: Set excess of i in , denoted as e(i in ) to 0, and e(iout) to v i -m i 04: while there exists vertex with positive excess 05: Call Push-relabel(i in ) 06: Call Push-relabel(iout) 06: Update heights of neighboring cells within distance D 07: endwhile 08: Send mobiles to cell j according the flow on arc (jout, i in ) Push-relabel <ref type="bibr">(</ref>  in <ref type="bibr" target="#b28">[28,</ref><ref type="bibr" target="#b30">30]</ref>. Here we only discuss the difference between our algorithm and the original push-relabel algorithm.</p><p>• In our algorithm, we use the vacancies as the commodity instead of mobiles. In other words, we push the vacancies from the cells with fewer than k sensors to the cells with free mobiles.</p><p>• We have capacity limits on the total flow going through one cell to bound the number of mobiles which can move out of the cell. We adopt the node splitting method to handle capacity bounds on nodes ( <ref type="bibr" target="#b27">[27]</ref> page 41-42). Each cell i will be split to two vertices iin and iout, the input vertex and the output vertex, respectively. The input vertex is connected with the output vertex by a unidirectional arc (iin, iout) with zero cost and capacity same as mi, the upper bound on number of mobiles which can move out of cell i. Then, the output vertex iout is connected with neighboring cell's input vertex jin with a unidirectional arc (iout, jin) with cost defined as the cij in section 5.1 and unlimited capacity. Therefore, each cell must maintain two vertices in the push-relabel algorithm. This node splitting method directly comes form the network flow theory <ref type="bibr" target="#b27">[27]</ref>, and it is simpler than algorithms splitting each cell to three vertices as in <ref type="bibr" target="#b8">[8]</ref>.</p><p>The details of this algorithm are shown in Fig. <ref type="figure" target="#fig_2">3</ref>. In this algorithm, cells only need to know the heights of vertices in neighboring cells within distance D to perform either push or relabel operation. The push process between iin and iout in the same cell is the same as between different cells except that no message needs to be sent. Note that the push and relabel operations only send messages between cells without actually moving the mobiles. The movements are performed at the end of the algorithm. Each cell will send mobiles to neighboring cells according to the in-flow of their input cells.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Algorithm Performance</head><p>In our algorithm, every cell needs to communicate only with cells within distance of D and the cell only requires knowledge about these neighboring cells to perform the push and relabel. The network graph has |V| = O(L) vertices and each vertex has at most πD 2 = O(log 3/2 L) arcs. Therefore, the number of edges is |E| = O(L log 3/2 L). Since asynchronous distributed push-relabel algorithm runs in O(|V| 2 ) time and uses at most O(|V| 2 |E|) message exchanges <ref type="bibr" target="#b30">[30]</ref>, our algorithm takes at most O(L 2 ) running time and the number of messages exchanged is O(L 3 log 3/2 L). Later, via simulations, we will show that this bound is quite loose since the actual running time scales nearly linearly with the network size. Since our algorithm is executed in the delegates of the cells, the complexity of our algorithm scales with the network size (number of cells in the network) instead of the number of sensors in the network. When the network density increases, only the values of mi and vi in the algorithm changes and the algorithm complexity remains the same.</p><p>If the minimum movement cost schedule is required instead of an arbitrary feasible movement schedule, we can use the cost scaling algorithm proposed by Goldberg et al. in <ref type="bibr" target="#b31">[31]</ref>. The algorithm uses O(log(LC)) iterations of pushrelabel processes to refine the cost of the solution, where C is the maximum cost for any edge. In our problem, our edge cost has positive integer values bounded by D = O(log 3/4 L). Therefore, finding the minimum movement cost schedule takes O(log L) times more computational time and message exchanges than finding an arbitrary feasible movement schedule.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISCUSSIONS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Reducing Mobile Density</head><p>The mobile density used in section 4 is quite high especially when k is small. In this section, we provide several methods to reduce mobile density.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Sharing Mobiles</head><p>The cell used in our hybrid network has side length of r/ √ 2, which is quite conservative compared to the sensing range of r. Actually, a mobile at the corner of a cell can cover four cells at the same time, see Fig. <ref type="figure" target="#fig_3">4</ref>.</p><p>Consider the super-cell which contains 9 cells as shown in Fig. <ref type="figure" target="#fig_3">4</ref>. We need to deploy the mobiles only at the four central points of pi to provide coverage for the 9 cells. For example, when k = 1, if there are no static sensors in the super-cell, we can put one sensor at each pi to provide full coverage on the 9 cells while the basic algorithm discussed in section 4 uses 9 mobiles. If cell 1 has at least one static sensor, then at most three mobiles are needed to stay at p2, p3 and p4 to cover the rest of cells. As each mobile can cover four adjacent cells, the mobile density can be reduced by a constant factor.</p><p>The density of mobiles required for sharing mobiles can be numerically calculated by enumerating possible vacancy distributions in the super-cell. The reduced mobile density is shown in Fig. <ref type="figure" target="#fig_4">5</ref>. We see that when k is small, this scheme can reduces the mobile density by half, compared to the original hybrid structure. In this case, our hybrid network can use fewer mobiles than all mobile networks when k = 1. However, the improvement ratio reduces as k increases as in Fig. <ref type="figure" target="#fig_4">5</ref>. When implementing the sharing mobile algorithm, we separate the network region to disjoint super-cells. The number of mobiles required in each super-cell can be determined when the number of static sensors in the 9 small cells is known. We can apply the push-relabel algorithm to find the optimal solution in this case also. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Increasing Static Sensor Density</head><p>We can also reduce the density of mobiles by increasing the density of static sensors. Suppose that we increase the density of static sensors so that the average number of sensors in each cell of side length r</p><formula xml:id="formula_16">√ 2 is g ≥ k.</formula><p>The number of vacancies will be distributed as:</p><formula xml:id="formula_17">P{vi = j} = 8 &gt; &lt; &gt; : g k-j e -g (k-j)! 1 ≤ j ≤ k 1 - P k-1 m=0 g m e -g m! j = 0 0 otherwise (17)</formula><p>Similar to Eq.( <ref type="formula">6</ref>), the expected number of vacancies in a cell will be:</p><formula xml:id="formula_18">E{v} = k-1 X l=0 (k -l) g l e -g l! ≤ " g k " k-1 e -(g-k) k-1 X l=0 (k -l) k l e -k l! ≤ e (k-1)(g-k) k e -(g-k) E{v} = e -g-k k E{v} (18)</formula><p>The third step uses the inequality of (1+ x n ) n ≤ e x when x &gt; 0 and n &gt; 0, to get `g k ´k-1</p><formula xml:id="formula_19">= (1 + g-k k ) k-1 ≤ e (k-1)(g-k) k</formula><p>. Therefore, with a increased static sensor density, the density of mobile sensors is reduced at least exponentially as e -g-k k . Specifically, when the density of static sensor is doubled (g = 2k), the density of mobiles can be reduced by at least e -1 which is close to one third. Note that the bound in Eq.( <ref type="formula">18</ref>) is tight only for small k, we can use even smaller number of mobiles when k is large. Note that we are still maintaining a constant over-provisioning factor in this solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Maximum Moving Distance</head><p>Suppose that we use one of the two methods discussed above and the mobile density is Λ. Using the same argument as in section 4.2, we can first match the mobiles to grid points with side length 1 √ Λ , then match the vacancies to the grid points. However, the vacancy distributions are different from those in section 4.2, and we have a different bound on moving distance here.</p><p>Theorem 3. Consider a square network with area L with ΛL vacancies distributed independently and identically in each square cell with side length of d, where d is some constant. If the number of vacancies in each cell is upper bounded by k, then, w.h.p. we can find a matching which has maximum matching distance as O( k Λ log 3/4 L) between vacancies and the grid points (on grids with side length of 1 √ Λ ). Proof. See Appendix for the proof.</p><p>Theorem 3 can be directly used for the increasing static sensor density scheme. For the first scheme which shares the mobiles, we can set d as the side length of the super-cell, which is 3r √ 2 . The number of mobiles required in each super cell is independently and identically distributed. Also, each super cell needs at most 4k mobiles. Applying Theorem 3, we get the maximum moving distance of O( k Λ log 3/4 L). Therefore, when Λ and k are fixed, the maximum moving distances for both schemes still increases as O(log 3/4 L) with the network size L. From Theorem 3, we also see that when the mobile density decreases, the moving distance for mobiles will increase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Network Lifetime</head><p>The k-coverage problem is closely related to the network lifetime problem. We define the network lifetime as time that the network cannot provide 1-coverage over the sensing field. Suppose that each sensor can monitor the region for time of τ before the battery is exhausted. Then k-coverage is a necessary condition for network to reach kτ lifetime <ref type="bibr" target="#b3">[3]</ref>, since any point which is covered by fewer than k sensors can not be monitored for time longer than kτ . On the other hand, ensuring the network to be k-covered does not directly lead to kτ lifetime since there may not exist a sleep-wake schedule which can operate for more than kτ lifetime <ref type="bibr" target="#b32">[32]</ref>.</p><p>In our hybrid network scheme, there are at least k mobile or static sensors in each cell with side length r √ 2 . Therefore, we can achieve kτ network lifetime by using each of the k sensors in a cell for 1 k fraction of the network lifetime. The interesting point here is that the scheduling problems for coverage are often NP-complete in random networks <ref type="bibr" target="#b32">[32]</ref>. However, this problem can be easily solved in our hybrid network structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">NUMERICAL RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">All Mobile Networks</head><p>We first consider the network where all sensors are mobiles. As shown in section 3, providing k-coverage in an all mobile network is the same as the 1-coverage case, but with the moving distance scaling as 1/ √ k. Hence, we only consider the maximum matching distance for 1-coverage in our simulations.</p><p>In the simulation, M = ΛL mobiles are uniformly and randomly scattered into the network with area of L, where Λ is fixed as π 2 . Then, the mobiles are matched to M grid points on grids with side length of ds = √ 2r so that they can provide full coverage over the field (see Sec. 3.3). The matching is performed by a centralized linear programming algorithm described in section 5.1. By repeating this over 10 5 randomly generated topologies, we find the probability that no feasible matching exists for a given maximum moving distance D.</p><p>Fig. <ref type="figure">6</ref>(a) shows the probability that no feasible matching exists in different network sizes, where the moving distance is normalized by the grid size of ds. From Fig. <ref type="figure">6</ref>(a), we see that the probability that no feasible matching exists quickly drops from 1 to 0 as the moving distance increases from 1.5ds to 3.5ds. This phenomenon is a consequence of the fact that in random geometric graphs, monotone properties demonstrate critical threshold phenomena <ref type="bibr" target="#b33">[33]</ref>.</p><p>In this simulation, the network size is changed from 10×10 grids to 50 × 50 grids. Consider the moving distance which can ensure the network to be completely covered by relocated mobiles with probability higher than 99.9% (where curves drop below 10 -3 in Fig. <ref type="figure">6(a)</ref>). We see that the moving distance is only increased by about 0.4ds while the network size is increased by 25 times. Also, note that the maximum moving distance for large networks is small compared to the networks size. For example, in a network with side length of l = 50ds, the mobiles only need to move for at most 3.5ds to form a regular grid deployment, which is less than one tenth of the network size. For larger networks, the difference will be even greater since the moving distance scales as O(log 3/4 L). A online demo for networks smaller than 10 × 10 grids is available on <ref type="bibr" target="#b35">[35]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Hybrid Networks</head><p>In the simulation of hybrid networks, we divide the network area as cells with side length of d h = r/ √ 2 as in section 4. We uniformly deploy N = λL static sensors and M = ΛL mobiles in the network, where λ = 2πk and M is selected so that there are exactly enough mobiles to fill all vacancies. The mobiles in one cell can move to cells within a distance of D. The following results are obtained by solving the linear program described in section 5.1 on 10 5 randomly generated topologies for each network size. Fig. <ref type="figure">6</ref>(b) shows the probability that there is no feasible mobility schedule to fill all vacancies under different network sizes when k is 10. In the hybrid network, the maximum moving distance for mobiles also increases slowly as the network size increases. Note that the moving distance in hybrid networks is normalized by d h instead of ds in the previous section. Since we have d h = 0.5ds, the actual moving distance for hybrid networks is comparable to the all mobile case when k = 1. The moving distance for networks with varying k is plotted in Fig. <ref type="figure">6(c</ref>) with network size of 900 cells. We see that the maximum moving distance required for hybrid networks slightly decreases as k increases, while the curve for k = 50 and k = 100 almost overlap. This shows that when k is small the maximum moving distance is affected by both the matching distance from the mobile to the grid points and matching distance from the grid points to the vacancies. As k increases, the matching distance from the mobile to the grid points will decrease to zero as the mobile density increases, see section 4. Then, the moving distance is dominated by the matching distance from the vacancies to the grid points which is not changed as k increases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Performance of Push-Relabel Algorithm</head><p>We study the performance of the synchronous push-relabel algorithm which finds a feasible movement schedule without optimizing the total movement cost. The execution process is divided into rounds which contain two phases. In the first phase of each round, cells push excess flow to adjacent cells. If a relabel process is needed, the cell will relabel itself and inform neighboring cells at the second phase. In real networks, we can use an asynchronous algorithm which uses acknowledgement messages for push messages to relieve collisions in information updates <ref type="bibr" target="#b30">[30]</ref>. Here, we study the synchronized version, which has similar performance as the asynchronous algorithm when collision rate is low. We execute the algorithm on 10 3 randomly generated topologies to get the average and the maximum running time in all topologies. Fig. <ref type="figure" target="#fig_7">7</ref>(a) shows the number of rounds required by the algorithm. Although the upper bound of running time is O(L 2 ) as shown in section 5, the simulation shows that both the average and maximum running time increase linearly with L. For networks with 2500 cells, we need to use on average 800 rounds to get the solution. Fig. <ref type="figure" target="#fig_7">7</ref>(b) gives the number of messages used in the algorithm. By curve fitting, the number of messages increases empirically as O(L 1.4 ) when the network size increases, which is also much smaller than the bound. Note that the number of messages in Fig. <ref type="figure" target="#fig_7">7(b</ref>) is the sum of messages send by all cells in the network. When normalized by the number of cells in the network, the aver-  age number of messages sent by a single cell only increases sub-linearly with the network size L. As this algorithm only executes once after the deployment, the transmission cost can be amortized over the lifetime of the network and become negligible in small networks. However, the algorithm may still consume considerable energy when the network size is extremely large. In that case, the role of delegator can be rotated between nearby sensors when a single cell is extremely highly loaded in the message exchange process. The push-relabel algorithm is simple enough to be implemented on popular sensor platforms. We have implemented this algorithm on the Cricket platform <ref type="bibr" target="#b36">[36]</ref>, integrated with Boe-Bot Robot <ref type="bibr" target="#b37">[37]</ref>. The push-relabel algorithm, which runs on the Cricket senor, only takes 267 bytes in RAM and about 10K bytes in ROM <ref type="bibr" target="#b38">[38]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSION</head><p>In this paper, we investigated the distance that a mobile sensor will have to move in both all mobile sensor networks and hybrid sensor networks. Our study is the first of its kind, in that it precisely formalizes the trade-off that exists between an all static network and a network with mobile sensors. Our results prove that from a scalability point of view, introducing mobility has significant advantages in providing coverage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof of Theorem 2</head><p>Our proof is similar to the proof given by Leighton and Shor for uniformly distributed points <ref type="bibr" target="#b10">[10]</ref>. The major differences are that our vacancy distribution is not uniform and the vacancies are distributed in discrete cells rather than in a continuous field. In this proof, we focus on the differences and only give an outline for parts which are same as in <ref type="bibr" target="#b10">[10]</ref>.</p><p>Consider the case of matching ΛL randomly distributed vacancies to the same number of grid points on the grid with side length of 1 √ Λ by maximum matching distance of D. Define the neighborhood of a region R in the sensing field as N (R), the set of cells where all points are within a distance of D of at least one point in R. Note that R is also contained in N (R). It is easy to see that mobiles on grid points in N (R) can move into R by moving by at most a distance of D. By Hall's Theorem <ref type="bibr" target="#b29">[29]</ref>, there exists a perfect matching with maximum moving distance D between the vacancies and grid points if and only if for every subregion R in the field, the number of vacancies contained in R, denoted as VR, is smaller or equal to the number of grid points in N (R), denoted as W N (R) .</p><p>For our problem, we need to first define the number of vacancies in an arbitrary region which may not contain exactly an integer number of cells with side length d h = r √ 2 . Denote the number of cells in region R as AR = Area(R)/d<ref type="foot" target="#foot_0">2</ref> h = 2πArea(R). Suppose region R intersects with CR cells, and it overlaps with only a fraction ai of the total area of cell i, where 0 &lt; ai ≤ 1. Then we have AR = P C R i=1 ai. Define the number of vacancies in R as VR = P C R i=1 aivi. In other words, if a region only covers part of the cell i, the number of vacancies contributed by the cell i will be aivi. This definition "spreads" the vacancy in cell i uniformly on the area of a cell, thus it has the property that the number of vacancies in a union of disjoint regions will be the sum of vacancies in individual regions.</p><p>Since we need to prove that D = O(log 3/4 L), it is sufficient to only consider region RΓ and N (RΓ) with boundaries lying along the edges of squares Γ with side length c log 3/4 L, where c is some constant <ref type="bibr" target="#b10">[10]</ref>, as shown in Fig. <ref type="figure" target="#fig_8">8</ref>. We have: where Area(R) is the area of region R. By using the region decomposition method, it is shown in <ref type="bibr" target="#b10">[10]</ref> that if for every region R (not necessarily having boundaries lying on Γ):</p><formula xml:id="formula_20">W N (R Γ ) = Λ(Area(RΓ) + Area(N (RΓ) \ RΓ)) = E{VR Γ } + Λ × Area(N (RΓ) \ RΓ) (<label>19</label></formula><formula xml:id="formula_21">)</formula><formula xml:id="formula_22">P{Δ(R) ≥ δ} &lt; O(e - c 2 δ 2 Area(R) ) for δ &lt; Area(R) (20) P{Δ(R) ≥ δ} &lt; O(e -c 2 δ</formula><p>) for δ &gt; Area(R) <ref type="bibr" target="#b21">(21)</ref> then w.h.p., we will have Δ(RΓ) ≤ cpP er(RΓ) log 3/4 L for all regions RΓ which have boundary lying on Γ.</p><p>Therefore, we need the following lemma:</p><p>Lemma 1. For any region R, we have the probability P{Δ(R) ≥ δ} &lt; 2e -δ 2 4πArea(R)k <ref type="bibr" target="#b22">(22)</ref> when the vacancies are distributed according to Eq. <ref type="bibr" target="#b5">(5)</ref>.</p><p>Proof. Construct random variables v i = vi -E{v} which have mean E{v i } = 0. Accordingly, we have V R = P C R i=1 aiv i = VR-E{VR} and Δ(R) = |V R |. Since the number of vacancies in a cell can not exceed k, we have 0 ≤ VR ≤ ARk. Thus, we only need to consider δ &lt; ARk, since P{Δ(R) ≥ δ} = 0 when δ ≥ ARk.</p><p>We will bound the probability P{Δ(R) ≥ δ} by the Chernoff bound. For t &gt; 0, we have:</p><formula xml:id="formula_23">P{V R ≥ δ} ≤ e -tδ E{e tV R } (<label>23</label></formula><formula xml:id="formula_24">)</formula><p>Since v i are independently distributed, we have:</p><formula xml:id="formula_25">E{e tV R } = C R Y i=1 E{e ta i v i } (<label>24</label></formula><formula xml:id="formula_26">)</formula><p>Since 0 &lt; ai ≤ 1, the function f (x) = x a i is concave when x &gt; 0. By Jensen's inequality, we have E{f (x)} ≤ f (E{x}) for a concave function f (x), we get:</p><p>E{e ta i v i } = E{(e tv i ) a i } ≤ (E{(e tv i )}) a i <ref type="bibr" target="#b25">(25)</ref> for all i. Since v i are identically distributed, we have:</p><formula xml:id="formula_27">P{V R ≥ δ} ≤ e -tδ C R Y i=1 (E{e tv }) a i = e -tδ " E{e tv } " A R (26)</formula><p>Using the vacancy distribution function of Eq.( <ref type="formula">5</ref>), we have: = e -tE{v} " e k(t+e -t -1) + 1</p><formula xml:id="formula_28">" (<label>27</label></formula><formula xml:id="formula_29">)</formula><p>where the last equality comes from the expansion of e x = P ∞ l=0</p><p>x l l! . Consider two subcases:</p><p>A. e k(t+e -t -1) ≥ (e tE{v} -1) -1  The condition is equivalent to: e k(t+e -t -1) ≥ e -tE{v} 1e -tE{v} <ref type="bibr" target="#b28">(28)</ref> Since 1e -tE{v} &gt; 0, Eq.( <ref type="formula">28</ref>) can be converted to:</p><p>e k(t+e -t -1) ≥ e -tE{v} " e k(t+e -t -1) + 1 " &gt; E{e tv } By Eq.( <ref type="formula">26</ref>), we get:</p><p>P{V R ≥ δ} &lt; e kA R (t+e -t -1)-tδ Since δ &lt; ARk, let t = log A R k A R k-δ &gt; 0, we get:</p><formula xml:id="formula_30">P{V R ≥ δ} &lt; exp " (ARk -δ) log ARk ARk -δ -δ «<label>(29)</label></formula><p>Using the inequality of log x ≥ x 2 -1 2x for 0 &lt; x &lt; 1 , we get:</p><formula xml:id="formula_31">(ARk -δ) log ARk ARk -δ -δ = -ARk(1 - δ ARk ) log(1 - δ ARk ) -δ ≤ -ARk (1 -δ A R k ) 2 -1 2 + δ ARk ! = - δ 2 2ARk (<label>30</label></formula><formula xml:id="formula_32">)</formula><p>So, we get P{V R ≥ δ} &lt; e</p><formula xml:id="formula_33">-δ 2 2A R k .</formula><p>B. e k(t+e -t -1) &lt; (e tE{v} -1) -1</p><p>In this case we have:</p><formula xml:id="formula_34">E{e tv } &lt; e -tE{v}</formula><p>" 1 e tE{v} -1 + 1</p><formula xml:id="formula_35">« = 1 e tE{v} -1</formula><p>By Eq.( <ref type="formula">26</ref>), we get:</p><formula xml:id="formula_36">P{V R ≥ δ} ≤ " 1 e tE{v} -1 « A R e -tδ<label>(31)</label></formula><p>As E{v} ≥ e -1 for any k (by Eq.( <ref type="formula" target="#formula_10">7</ref>)), we can select t = 3, so that e tE{v} -1 &gt; e -1 &gt; 1. We have:</p><formula xml:id="formula_37">P{V R ≥ δ} &lt; " 1 e 3E{v} -1 « A R e -3δ</formula><p>&lt; e -3δ ≤ e</p><formula xml:id="formula_38">-3 δ 2 A R k &lt; e -δ 2</formula><p>2A R k due to 0 &lt; δ A R k &lt; 1. Consider both cases, we have P{V R ≥ δ} &lt; e -δ 2 2A R k when δ &lt; ARk. For δ ≥ ARk, it is easy to see that P{V R &gt; δ} = 0.</p><p>We can also get:</p><formula xml:id="formula_39">P{V R ≤ -δ} &lt; e -δ 2</formula><p>2A R k <ref type="bibr" target="#b32">(32)</ref> for the other side of the distribution with some different derivations. The details are omitted due to space limits.</p><p>Combining the results for both sides, we have P{|V R | ≥ δ} &lt; 2e</p><formula xml:id="formula_40">-δ 2</formula><p>2A R k . This is equivalent to: <ref type="bibr" target="#b33">(33)</ref> as AR = 2πArea(R).</p><formula xml:id="formula_41">P{Δ(R) ≥ δ} &lt; 2e - δ 2 4πArea(R)k</formula><p>Note that our discrepancy bound is cpΛP er(RΓ) log 3/4 L instead of cpP er(RΓ) log 3/4 L. Therefore, in our problem the discrepancy should be scaled by a factor of Λ, which is the density of the grid points. We have Λ ≈ √ 2πk. Put δ = Λδ into Eq.( <ref type="formula">33</ref>), we can see that the factor of k in the exponent in Eq.(33) will be canceled by Λ 2 . In this case, it is easy to see that the bound in Lemma 1 satisfies Eq.( <ref type="formula">20</ref>) and <ref type="bibr" target="#b21">(21)</ref> for both cases of δ ≤ Area(R) and δ &gt; Area(R). Therefore, using the same region decomposition method as in <ref type="bibr" target="#b10">[10]</ref>, we have Δ(RΓ) ≤ c1ΛP er(RΓ) log 3/4 L with high probability. This directly leads to the upper bound of O(log 3/4 L) in maximum moving distance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof of Theorem 3:</head><p>The proof of Theorem 3 is similar to the proof of Theorem 2. Consider an region R with exactly AR cells which has side length of d. Since the number of vacancies in each cell is bounded in [0, k], by Hoeffding's inequality <ref type="bibr" target="#b34">[34]</ref>, we have:</p><formula xml:id="formula_42">P{|VR -E{VR}| ≥ δ} &lt; e -2δ 2</formula><p>A R k 2 <ref type="bibr" target="#b34">(34)</ref> With similar arguments as the proof in Theorem 2, this bound can be extended to regions which do not contain exactly an integer number of cells, and we get:</p><formula xml:id="formula_43">P{|VR -E{VR}| ≥ δ} &lt; e - 2d 2 δ 2 Area(R)k 2 (35)</formula><p>Comparing Eq. <ref type="bibr" target="#b35">(35)</ref> and Eq.( <ref type="formula">33</ref>), we see that any region will have discrepancy less than cpkP er(RΓ) log 3/4 L w.h.p. This gives an upper bound on moving distance of O( k Λ log 3/4 L) since the grid point density is Λ. Note that the bound of Theorem 3 is √ k times larger than the bound in Theorem 2 when we set Λ = O( √ k). This is because of the Chernoff bound we derived in Theorem 2 for the specific vacancy distribution is tighter than the Hoeffding bound used here.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Matching mobiles to grid points in all mobile networks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Distributed mobility algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Sharing the mobile sensor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Ratio of Λ/λ (with λ = 2πk).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>2 )Figure 6 :</head><label>26</label><figDesc>Figure 6: Probability that no feasible matching exists for a given moving distance (confidence interval 95%)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Total number of messages used.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Performance of push-relabel algorithm, k = 10 and D=6 (confidence interval 95%).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: A region and its neighborhood.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>j-E{v}) k k-j e -k (kj)! + e -tE{v} 1k-l-E{v}) k l e -k l! + e -tE{v} = e -tE{v} (e tk k-1 X l=0 e -tl k l e -k</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 : Sensor density and moving distance trade- off for k-coverage</head><label>1</label><figDesc></figDesc><table><row><cell>Network</cell><cell>Static sensor density</cell><cell>Mobile</cell><cell>Maximum moving</cell></row><row><cell></cell><cell></cell><cell>density</cell><cell>distance</cell></row><row><cell>Static</cell><cell>O(k log log L</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>x 98 =1 Figure 2: Formulating the mobility problem as a network flow problem. The excess mobiles are "flow- ing" towards the vacancies.</head><label></label><figDesc></figDesc><table><row><cell>Cell 1</cell><cell>Cell 2</cell><cell>Cell 3</cell><cell></cell></row><row><cell>Cell 4</cell><cell>Cell 5</cell><cell>Cell 6</cell><cell></cell></row><row><cell>x 41 =1</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Cell 7</cell><cell>Cell 8 x 54 =1</cell><cell>Cell 9 x 69 =1</cell><cell>Vacancy</cell></row><row><cell></cell><cell></cell><cell cols="2">Static Sensor</cell></row><row><cell></cell><cell></cell><cell cols="2">Mobile Sensor</cell></row><row><cell cols="4">Theorem 2. Consider a square network with area L where</cell></row><row><cell cols="4">ΛL vacancies are distributed independently and identically,</cell></row><row><cell cols="4">in cells with side length of d h = r √ 2 according to Eq.(5).</cell></row><row><cell cols="4">Then, w.h.p., there exists a matching which has maximum matching distance of O(log 3/4 L) between vacancies and the</cell></row><row><cell cols="4">grid points on grids with side length of 1 √ Λ .</cell></row><row><cell cols="3">Proof. See Appendix for the proof.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Define the discrepancy Δ(R) = |VR -E{VR}|. As shown in<ref type="bibr" target="#b10">[10]</ref>, we can make Area(N (RΓ) \ RΓ) ≥ cpP er(RΓ) log 3/4 L for an arbitrarily constant cp by setting D = O(log 3/4 L), where P er(R) is the perimeter of region R 2 . Thus, if we have Δ(RΓ) ≤ cpΛP er(RΓ) log 3/4 L for all RΓ, we can guarantee that VR Γ ≤ W N (R Γ ) also holds for all RΓ.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>More strictly, this holds for at least one of RΓ or its complement RΓ, so we need to show that |VR -E{VR Γ }| ≤ cpΛP er(RΓ) log</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p> 3/4  L instead of VR -E{VR Γ } ≤ cpΛP er(RΓ) log 3/4 L. For details, see<ref type="bibr" target="#b10">[10]</ref>.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Coverage problems in wireless ad-hoc sensor network</title>
		<author>
			<persName><forename type="first">S</forename><surname>Meguerdichian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Potkonjak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The coverage problem in a wireless sensor network</title>
		<author>
			<persName><forename type="first">C</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tseng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM WSNA</title>
		<meeting>ACM WSNA</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On deriving the upper bound of α-lifetime for large sensor networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM MobiHoc</title>
		<meeting>ACM MobiHoc</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On k-coverage in a mostly sleeping sensor network</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Balogh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM Mobicom</title>
		<meeting>ACM Mobicom</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="144" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Coverage by randomly deployed wireless sensor networks</title>
		<author>
			<persName><forename type="first">P.-J</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-W</forename><surname>Yi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2658" to="2669" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Movement-assisted sensor deployment</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Porta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Sensor deployment and target localization based on virtual forces</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chakrabarty</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sensor Networks Deployment Using Flip-Based Sensors</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chellappan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Xuan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE MASS</title>
		<meeting>IEEE MASS</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Advanced mobile networking, sensing, and controls</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Feddema</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Byrne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Harrington</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Kilman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Robinett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P V</forename><surname>Leeuwen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Young</surname></persName>
		</author>
		<idno>SAND2005-1661</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
		<respStmt>
			<orgName>Sandia National Laboratories</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Tight bounds for minimax grid matching, with applications to the average case analysis of algorithms</title>
		<author>
			<persName><forename type="first">T</forename><surname>Leighton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Shor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="161" to="187" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Mobility improves coverage of sensor networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Brass</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Dousse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Nain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM MobiHoc</title>
		<meeting>ACM MobiHoc</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Improving coverage performance in sensor networks by using mobile sensors</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nygard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE MILCOM</title>
		<meeting>IEEE MILCOM</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">SMART: A scan-based movement-assisted sensor deployment method in wireless sensor networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Joint mobility and routing for lifetime elongation in wireless sensor networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Using mobile relays to prolong the lifetime of wireless sensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">C</forename><surname>Chua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM MobiCom</title>
		<meeting>ACM MobiCom</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Exploiting sink mobility for maximizing sensor networks lifetime</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Melachrinoudis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of HICSS</title>
		<meeting>HICSS</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Deploying wireless sensor networks under limited mobility constraints</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chellappan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Xuan</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>to appear in IEEE Transactions on Mobile Computing</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Unbalanced points and vertices problem</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Lotker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Navarra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of PerCom Workshops (FAWN)</title>
		<meeting>PerCom Workshops (FAWN)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="96" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Managing random sensor networks by means of grid emulation</title>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Networking</title>
		<meeting>Networking</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">3976</biblScope>
			<biblScope unit="page" from="856" to="867" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Introduction to the theory of coverage processes</title>
		<author>
			<persName><forename type="first">P</forename><surname>Hall</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>John Wiley &amp; Sons, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Integrated coverage and connectivity configuration in wireless sensor networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Pless</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Gill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings ACM Sensys03</title>
		<meeting>ACM Sensys03</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Williams</surname></persName>
		</author>
		<title level="m">The Geometrical Foundation of Natural Structure: A Source Book of Design</title>
		<imprint>
			<publisher>Dover Publications</publisher>
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Proxy-based sensor deployment for mobile sensor networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Porta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE MASS</title>
		<meeting>IEEE MASS</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Sensor relocation in mobile sensor networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Porta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Lattice points</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kratzel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Kluwer Academic Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Papoulis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">U</forename><surname>Pillai</surname></persName>
		</author>
		<title level="m">Probability, Random Variables and Stochastic Processes</title>
		<imprint>
			<publisher>McGraw Hill</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Ahuja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Orlin</surname></persName>
		</author>
		<title level="m">Network flows : theory, algorithms, and applications</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Cormen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Leiserson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
		<title level="m">Introduction to Algorithms</title>
		<imprint>
			<publisher>MIT Press and McGraw-Hill</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Random Graphs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Janson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Luczak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruciński</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>John Wiley &amp; Sons, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A new approach to the maximum-flow problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tarjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="921" to="940" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Finding minimum-cost circulations by successive approximation</title>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Operations Research</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="430" to="466" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Energy-Efficient Target Coverage in Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cardei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Thai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Sharp thresholds for monotone properties in random geometric graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Krishnamachari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM symposium on Theory of computing</title>
		<meeting>the ACM symposium on Theory of computing</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="580" to="586" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Probability inequalities for sums of bounded random variables</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hoeffding</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">301</biblScope>
			<biblScope unit="page" from="13" to="30" />
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Web based demo for mobile sensors</title>
		<ptr target="http://cnds.ece.nus.edu.sg/mobile/mobile.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<ptr target="http://cricket.csail.mit.edu/" />
		<title level="m">MIT Cricket platform</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Parallax</forename><surname>Boe-Bot</surname></persName>
		</author>
		<ptr target="http://www.parallax.com/htmlpages/robotics/boebot/boebot.asp" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<ptr target="http://cnds.ece.nus.edu.sg/mobile/mobile4.mpg" />
		<title level="m">Video for mobile implementations</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
