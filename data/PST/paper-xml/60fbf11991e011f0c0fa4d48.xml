<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Asynchronous Reinforcement Learning Framework for Net Order Exploration in Detailed Routing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Tong</forename><surname>Qu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institute of Microelectronics</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">University of Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">‡ CS Department</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yibo</forename><surname>Lin</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zongqing</forename><surname>Lu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yajuan</forename><surname>Su</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institute of Microelectronics</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">University of Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">‡ CS Department</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Guangdong Greater Bay Area Applied Research Institute of Integrated Circuit and Systems</orgName>
								<address>
									<settlement>Guangdong</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yayi</forename><surname>Wei</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institute of Microelectronics</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">University of Chinese Academy of Sciences</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">‡ CS Department</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Guangdong Greater Bay Area Applied Research Institute of Integrated Circuit and Systems</orgName>
								<address>
									<settlement>Guangdong</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Asynchronous Reinforcement Learning Framework for Net Order Exploration in Detailed Routing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The net orders in detailed routing are crucial to routing closure, especially in most modern routers following the sequential routing manner with the rip-up and reroute scheme. In advanced technology nodes, detailed routing has to deal with complicated design rules and large problem sizes, making its performance more sensitive to the order of nets to be routed. In literature, the net orders are mostly determined by simple heuristic rules tuned for specific benchmarks. In this work, we propose an asynchronous reinforcement learning (RL) framework to search for optimal ordering strategies automatically. By asynchronous querying the router and training the RL agents, we can generate highperformance routing sequences to achieve better solution quality.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Routing is a critical and time-consuming step in physical design <ref type="bibr" target="#b0">[1]</ref>. Its solution impacts timing, power, and yield <ref type="bibr" target="#b1">[2]</ref>. Routing is usually divided into global routing and detailed routing, with the former planning the rough routing regions and the latter finishing the actual interconnections <ref type="bibr" target="#b2">[3]</ref>. Unlike global routing, detailed routing needs to handle plenty of design rules on a large grid graph. With feature sizes scaling down with the technology nodes, the routing grids become increasingly denser, leading to more complicated design rules from manufacturing, such as parallel-run spacing, endof-line spacing, corner-to-corner spacing, and minimum area <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>. Meanwhile, the grid graph for detailed routing is much larger than that of global routing, indicating larger solution space. As a result, detailed routing is becoming the most time-consuming step in advanced technology nodes <ref type="bibr" target="#b3">[4]</ref>.</p><p>While routing has been studied for several decades with many fundamental algorithms proposed, e.g., Lee's algorithm, A* search, negotiation-based rip-up and reroute scheme, etc., most of the attention has been paid to global routing for a long time <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b2">[3]</ref>. In the past few years, with advanced technology nodes coming to the stage, the importance of detailed routing has been realized. Various aspects of detailed routing have been investigated. For example, pin access issues have been discussed in <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref>. Ahrens et al. explored specific data structures for efficient detailed routing <ref type="bibr" target="#b10">[11]</ref>. Manufacturing constraints have also been explored in <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>, such as multiple patterning lithography friendly routing algorithms.</p><p>In recent ISPD contests <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>, detailed routing has been raised as a fundamental challenge in the backend design with practical benchmarks and realistic design rules. The contests largely stimulate the researches in detailed routing and several high-performance and robust routers have been proposed <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>. Sun et al. <ref type="bibr" target="#b19">[20]</ref> proposed a valid pin access pattern generalization with a via-aware track assignment to minimize the overlaps between the wire segments. TritonRoute <ref type="bibr" target="#b14">[15]</ref> adopted integer linear programming</p><p>The first two authors contributed equally to this work. Yajuan Su, Yayi Wei are the corresponding authors (e-mail:{suyajuan, weiyayi}@ime.ac.cn).</p><p>(ILP) for parallel intra-layer routing. DRAPS <ref type="bibr" target="#b17">[18]</ref> developed an A*interval-based path search algorithm to handle complicated design rules. Dr.CU <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref> proposed an optimal correct-by-construction path search algorithm and a two-level sparse data structure for runtime and memory efficiency. RDTA <ref type="bibr" target="#b18">[19]</ref> developed an analytical approach to solve the track assignment problem following the global routing guides. Attention router explored reinforcement learning to solve the analog routing problem at a small scale <ref type="bibr" target="#b20">[21]</ref>.</p><p>Among the aforementioned detailed routers, most of them substantially follow the sequential routing strategy with the negotiation-based rip-up and reroute scheme <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>.</p><p>The parallelism is usually obtained by routing a batch of nets far away enough from each other simultaneously. This means the routing order of nets is critical to the performance of the algorithm. Currently, the net ordering strategy is usually determined by simple heuristics, e.g., the region size covered by a net. The performance may vary from design to design and from router to router as well. Therefore, a generic way to search for a good ordering strategy is desired to achieve high-performance routing.</p><p>To find a good ordering strategy, in this work, we formulate the strategy search problem into a reinforcement learning (RL) task to automatically learn from the designs. The major contribution can be summarized as follows.</p><p>• We formulate the ordering strategy search problem in sequential detailed routing into a reinforcement learning task such that it can be automatically learned.  <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref> demonstrate that the ordering strategy obtained from our framework generalizes well and can achieve 14% fewer DRC violations and 0.7% less total costs compared with the state-ofthe-art detailed router Dr.CU 2.0 <ref type="bibr" target="#b16">[17]</ref>.</p><p>The rest of this paper is organized as follows. Section II explains the background of routing, reinforcement learning, and problem formulation. Section III presents the algorithm details. Section IV reports the experimental results on ISPD contest benchmarks. Finally, Section V concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PRELIMINARIES</head><p>In this section, we introduce the background on VLSI routing, reinforcement learning, and problem formulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Design Rules</head><p>More design rules are introduced in the advanced technology nodes. Meanwhile, three fundamental and representative design rules need to be considered <ref type="bibr" target="#b3">[4]</ref>. (1) Short: a via or wire segment of a net should not overlap with any object of another net. (2) Spacing: the spacing between two objects should satisfy the minimum distances. There are several different types of such requirements, e.g., endof-line spacing, parallel-run spacing, and cut spacing. (3) Minimum area: a metal polygon should have an area larger than the minimum threshold. Typical objectives for routing are to minimize the total wirelength and the DRC violations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Dr.CU 2.0 Sequential Detailed Router</head><p>In year 2018 and 2019, the ISPD contest was organized on detailed routing <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>. Dr.CU <ref type="bibr" target="#b16">[17]</ref> won the first place in the ISPD 2019 contest and is open source. In this work, we adopt Dr.CU as the target detailed routing framework for studying, while the methodology can work on other routers as well. Fig. <ref type="figure">2</ref> illustrates its routing flow, which is a typical procedure for most sequential routing algorithms as well. Given a placed netlist, routing guides, routing tracks, and design rules, it first assigns access points for each pin. Then it starts the rip-up and reroute (RRR) iterations to accomplish the routing. During the RRR iterations, if the router encounters congestion or DRC violations when trying to route a net, it rips up the net and the conflicted nets, leaving them for the next iteration to reroute. With enough iterations, the router can achieve convergence. Finally, it performs a post-routing refinement stage to reduce DRC violations. It needs to be noted that within each RRR iteration, Dr.CU also exploits parallelism between nets far away from each other, such that there will be no interaction when simultaneously solving the routing problem of each net. This does not change the sequential nature of the algorithm, i.e., routing in a net-by-net manner, as it does not determine the routing of different nets at the same time.</p><p>The solution quality of sequential routers like Dr.CU is highly correlated to the order of nets to be routed. Fig. <ref type="figure">1</ref> shows the distribution of solution quality with random net ordering routed by Dr.CU. Although the wirelength does not change much, the order affects both via count and the number of DRC violations. Thus, the ordering strategy needs to be carefully designed for high-quality routing across various benchmarks.</p><p>Dr.CU sorts nets by the routing region sizes (half-perimeter of the bounding box) of each net in descent order. In other words, nets covering large routing regions are routed first. However, we observe that the routing region sizes of different nets can be very similar, leading to random orders between these nets, and eventually causing high variations in the final violations. For example, Fig. <ref type="figure">3</ref> shows that 5293 nets have the same routing region size, accounting for 14.4 % of the total number of nets in benchmark ispd18_test3. Therefore, there is a potential to improve the routing performance by developing an ordering strategy considering more features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Reinforcement Learning</head><p>Reinforcement learning enables the agent to learn a policy by interacting with the environment to maximize the cumulative reward. As illustrated in Fig. <ref type="figure">4</ref>, at each step t, the agent observes a state st, takes an action at based on st, receives a reward rt, and then the state stochastically transits to the next state st+1. The objective is to learn a policy π(a|s) that maximizes the expected cumulative reward, starting from any state s.</p><p>In this work, we define the environment as the router, the agent as a net order planner that ranks the nets based on the features (state). The net ordering result is the action and the reward is positively related to the solution quality, e.g., total wirelength and DRC violations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Problem Formulation</head><p>We define the net ordering problem in detailed routing as follows.</p><p>Problem 1 (Net ordering). Given a set of nets N , train a net ordering   policy that can generate a ranking score si for each net ni ∈ N used by a sequential detailed router. The following metrics should be optimized simultaneously: (1) the total wirelength of all nets, (2) the number of the total used vias, (3) the number of DRC violations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. ALGORITHM</head><p>In this section, we first define the state space, action space, reward, and the basic RL setup. Then we explain the dedicated RL techniques for our routing problem. In the end, we summarize the overall flow of our RL algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Basic RL Setup</head><p>We define the state space, action space, and reward as follows: State space S: A state s is the collective representation of features for all nets. Table I summarizes the seven features for each net. The first feature is the size of its routing region. The second feature is its degree, which denotes the number of nets whose routing region overlaps with it. The third feature is the number of times routed/rerouted so far. The remaining four features are its costs information, including the violations cost, wirelength, number of vias, and metal layers assignment.</p><p>Action space A: An action a is a real number vector. Each number is defined as an ordering score of a net.</p><p>Reward R: Given the ordering scores (action a), the environment (router) will provide its feedback (i.e. evaluation metrics). The agent receives a reward according to the environment's feedback. The reward r is defined as:</p><formula xml:id="formula_0">r = −Cagent + Ccu<label>(1)</label></formula><p>Where Cagent and Ccu are the total cost of all nets achieved by the agent's action a and Dr.CU's default strategy. The total cost C is defined as:</p><formula xml:id="formula_1">C = 4 i=1 wixi<label>(2)</label></formula><p>Where xi|i ∈ {1, 2, 3, 4} are the evaluation metrics used in the ISPD Contests, including short violation, spacing violation, number of vias, and wire length, wi|i ∈ {1, 2, 3, 4} are the weights of the above metrics. The objective of the agent is to learn a policy to maximize the reward.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. The A3C Framework</head><p>Expensive query to the environment is a typical challenge in RL, leading to slow convergence and unaffordable training time. We adopt an asynchronous advantage actor-critic (A3C) method <ref type="bibr" target="#b21">[22]</ref> with multiple actor-critic (AC) agents running in parallel. As shown in Fig. <ref type="figure" target="#fig_2">5</ref>, each agent has a local copy of the policy and value networks. It performs actions in its environment to explore the solution space with a different policy. Different agents update the global network asynchronously during the training. Algorithm 1 Update each A3C actor <ref type="bibr" target="#b21">[22]</ref> Require: Global shared parameter vectors θ, and θv.</p><p>1: Initialize thread step counter t ← 1 2: Define thread-specific copy of weights θ , θ v 3: for T = 1, .., Tmax do 4:</p><p>dθ ← 0 and dθv ← 0 Reset gradients.</p><p>5:</p><formula xml:id="formula_2">θ = θ and θ v = θv 6:</formula><p>Get state st Return R = 0 for terminal st V (st, θ v ) for non-terminal st </p><formula xml:id="formula_3">dθ ← dθ + ∇ θ log π (ai|si; θ ) (R − V (si; θ v )) 18: dθv ← dθv − ∂ (R − V (si; θ v )) 2 /∂θ v 19:</formula><p>end for 20:</p><p>Perform async. update of θ using dθ and of θv using dθv 21: end for A3C maintains a policy π (at|st; θ) and an estimate of the value function V (st; θv), where θ and θv are the global shared parameter vector. The policy and the value function are updated after every tmax actions or when a terminal state is reached.</p><p>Algorithm 1 illustrates how each actor is updated. After initialization, each agent takes a copy of the global shared network, with parameters θ and θ v (line 5), and then runs the policy for tmax steps or until a terminal state is reached. Finally, the agent computes the gradients in its process (line 17-18) and then updates the global share network asynchronously.</p><p>Network Architecture. We need two models in the A3C framework, a policy network and a value network. The policy network takes the state s and outputs two arrays (µ, σ 2 ) that represent a probability distribution over the actions. We pick the action by sampling from this probability distribution. We denote π(a|s) as the probability of the sampled action a given state s. The value network outputs the value function V (s) (the expected return in rewards for state s and action a), which is used to determine how advantageous it is in a particular state. Intuitively, the policy network tells us the ordering scores of the nets and the value network evaluates the scores in the sense of future rewards. Fig. <ref type="figure">6</ref> plots the network architecture of the two models. We design the models in a special way so that the policy model can be used across different designs with different numbers of nets. To Fig. <ref type="figure">6</ref>: Architecture of the policy and value networks, where E denotes the number of nets. The net feature encoder encodes the features of each net. decouple the network architecture from the number of nets in design, we introduce a net-wise feature encoding network that encodes the features of each net independently. We then concatenate the encoded features for the policy and value networks. For example, given a design with E nets, the encoder will encode the R E×16 input feature tensor into an R E×64 tensor. The policy network takes this tensor and generates an array of ordering scores for all nets, i.e., R E×2 (mean and variance of the probability distribution for each net). We then sample from a normal distribution for each net to get its ordering score. In our implementation, µ is modeled by a linear layer and σ 2 by a softplus layer. The value network flattens the feature tensor and feeds into a fully connected layer with E × 64 hidden units to obtain a scalar at the output.</p><p>The major benefit of such a network architecture is that the policy network can be shared across different designs, as we essentially perform net-wise modeling with the ordering score of each net dependent on its features only. While it is true that using a more complicated model that correlates the features of multiple nets may help to explore better policy, current architecture still has enough expressive power to verify the main idea of using RL in solving the net ordering problem. We leave the exploration of complicated models in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Mismatch Penalty</head><p>General RL framework initializes the neural networks in a random manner, which may cause slow convergence in our problem, especially when obtaining the reward from the environment (i.e., running the router) is very time-consuming. On the other hand, we do have the prior knowledge to this problem that the default ordering strategy of using routing region sizes in Dr.CU is a generally good policy compared with a random one. Incorporating such knowledge has the potential to speed up training. Hence, Equation ( <ref type="formula" target="#formula_0">1</ref>) is modified to:</p><formula xml:id="formula_4">r = −Cagent + Ccu − α k k i=1 ∆ai 2 (<label>3</label></formula><formula xml:id="formula_5">)</formula><p>Where ∆a is the difference between the predicted ordering scores and the sizes of routing regions, α is a user-defined parameter, and k is the number of nets to be routed. The parameter α is positive only at the early training steps and then set to zero. The detailed setup can be found in Section IV. Fig. <ref type="figure">7</ref> compares the learning speeds of the two reward function defining methods. The results show that the method of adding a mismatch penalty tends to learn faster. As we only apply the mismatch penalty at the early stage of the training, it will speed up the training, but not limit the exploration space to the heuristic ordering strategy used in Dr.CU. R e w a r d f u n c t i o n w i t h p e n a l t y R e w a r d f u n c t i o n w i t h o u t p e n a l t y 7: Comparison of two reward functions. The curves represent the moving average reward of the last 1000 episodes (one episode includes four RRR iterations according to the setting of Dr.CU). We train the agents for 15 000 episodes and the maximum training time is within 24 hours. Mismatch penalty enables faster reward increase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 2 Overall routing flow using RL policy</head><p>Require: A set of nets N and various design rules for a router Ensure: Routing solution with optimized solution quality 1: Define M as the maximum number of iterations of RRR. 2: Define S as the set of nets' ordering scores.</p><formula xml:id="formula_6">3: i ← 0 4: while i &lt; M, N = ∅ do 5: i ← i + 1 6:</formula><p>for all net n ∈ N do 7:</p><p>Extract net features fn 8:</p><p>end for 9:</p><p>Use the RL policy π and features F to get the ordering scores of all nets S end for 22: end while</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Overall Routing Flow</head><p>Once the policy is obtained, the overall routing flow is summarized in Algorithm 2. Once obtaining the ordering scores (line 9), we leverage Dr.CU to finish each RRR iteration (line 10-19). More specifically, we schedule all batches at the beginning of an RRR iteration (line 10) by sorting the nets according to the scores and divide them into batches, such that nets within a batch do not conflict with each other and can be routed in parallel to reduce the runtime <ref type="bibr" target="#b15">[16]</ref>. If the RRR stopping criteria are not met, the iterations will continue until the maximum number of iterations is reached.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXPERIMENTAL RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experimental Setup</head><p>We define our environment using the OpenAI Gym interface with Dr.CU 2.0 <ref type="bibr" target="#b16">[17]</ref> as the detailed router, and implement our RL agent network in PyTorch. All the experiments ran on a 64-bit Linux machine with two 20-core Intel Xeon@2.1 GHz CPUs and 64 GB RAM. We set the discount factor γ = 0.99, coefficient for the value loss β = 0.25, entropy cost η = 0.001, and learning rate to 0.001. We also set α = 0.1 for the first 100 training episodes and reduce to 0 afterwards. A standard non-centered RMSProp is used as the gradient ascent optimizer. The neural network weights are initialized randomly. We use eight AC agents to train in parallel, and the maximum training time is set to 24 hours. We experiment on the benchmarks from ISPD 2018 and ISPD 2019 Initial Detailed Routing Contests <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>. The detailed information of the benchmarks are shown in Table <ref type="table" target="#tab_4">II</ref>. We can see that benchmarks have quite different problem sizes, and technology nodes (32/45/65 nm). According to Dr.CU <ref type="bibr" target="#b16">[17]</ref>, the runtime of routing one of these benchmarks varies from two minutes to five hours. Ideally, it is expected to train and test a RL model on one technology node only. However, considering that most designs in Table II are in the 32 nm node, while the ones in 45/65 nm nodes are either too small or large, we choose a training dataset mixed with designs in 32 nm and 45 nm nodes, and test on the remaining to validate the framework. To balance the runtime overhead and universality of the generated model, ISPD18_test3/5/6/7 are selected as benchmarks in the training dataset and the remaining sixteen as the test dataset. Due to ISPD18_test7's big size, it is divided into many benchmarks with each region containing around 500 nets, and we choose two densest regions containing 7 and 26 violations to put in the training dataset. In conclusion, the training dataset contains {two regions clipped from ISPD18_test7, ISPD18_test3/5/6}. These training benchmarks have moderate and diverse sizes that can keep reasonable training time but also complicated enough to represent the real routing challenges. <ref type="table" target="#tab_2">IV</ref> summarize the results of the training and testing datasets. We compare the wirelength, number of vias, DRC violations, total cost, and runtime between our RL framework and Dr.CU <ref type="bibr" target="#b16">[17]</ref>. The violation values here are a summation of all the DRC violations mentioned in Equation (1). In the training dataset, with similar wirelength and number of vias, we can achieve 13% fewer DRC violations compared with the default policy in Dr.CU.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Model performance</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table III and Table</head><p>The total cost only has small improvements. This is because the cost is dominated by wirelength due to its large scale according to its definition in the contests. The results on the training dataset indicate that our RL framework and training techniques are able to learn good policies from the benchmarks. We also observe around 6 % runtime overhead, which mostly comes from the feature extraction and the system integration between the Python-based RL agent and the C++-based Dr.CU implementation.</p><p>In the testing dataset, our policy can achieve an average of 14 % improvement in violations and 0.7 % in total cost without degradation in wirelength and number of vias. The results on the testing dataset demonstrate that the policy learnt from the training dataset can generalize to unseen benchmarks and achieve high-quality solutions on average.</p><p>One needs to mentioned that on large benchmarks like ISPD19_test7-10 in 32 nm technology node, the RL policy can reduce the violations by 40 % to 50 %, which is rather promising. However, we observe that there are also outliers like ISPD18_test4 and ISPD19_test4 where the violations increase by 15 % and 46 %, respectively. The results of all the remaining benchmarks are either improved or within a comparable range. We speculate that the two outliers contain special features not in our training dataset or state space, causing unusual behaviors. ISPD19_test4 is in 65 nm technology node with 6 metal layers, while the designs in the training dataset are in 45/32 nm technology nodes with 9 metal layers. These differences probably reduce the generalization performance of the RL policy in these two designs. In addition, ISPD18_test4 has Metal2 obstacles in some of its standard cells, and ISPD19_test6 has 16 block macros. These factors are likely to impact the routability of the designs, but not yet included in the state space. As our RL model is highly flexible, we can extract more features and conduct targeted training for specific benchmarks in a technology node to get better policies. This highlights the possibility of an online learning system to continuously improve the policy by running more and more benchmarks, which is worth exploring in the future. In this way, the policy network can evolve to be more robust and general on unseen benchmarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>In this paper, we propose an asynchronous reinforcement learning framework to search for high-quality net ordering strategies in detailed routing automatically. We propose highly extensible agent models, mismatch penalty to enable efficient exploration of good policies. Experiments on ISPD 2018 &amp; 2019 contest benchmarks demonstrate that our framework is able to learn an ordering policy that reduces the number of violations by 14 % on unseen benchmarks, compared with the state-of-the-art detailed router. The future work includes improving the agent network architecture to consider the correlation between multiple nets and expanding the state space to consider more features.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :Fig. 2 :</head><label>12</label><figDesc>Fig.1: Distribution of solution quality with random net ordering (300 iterations). The relative standard deviation of the number of DRC violations, the number of vias, and wirelength is 1.95 %, 0.04 %, and 0.008 %. Their ranges are 70.00, 845.00, and 4996.31, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 :Fig. 4 :</head><label>34</label><figDesc>Fig. 3: Distribution of the net routing region sizes in ispd18_test3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: The A3C Framework with asynchronous parallel agents and global network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>15 :</head><label>15</label><figDesc>for i = t − 1, ...,tstart do 16: R ← ri + γR 17:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>10 :</head><label>10</label><figDesc>batch list B = Scheduler(N, S) 11: for all b ∈ B do 12:Run maze routing, via selection and post-routing in mul-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE I :</head><label>I</label><figDesc>Features of Each Net.</figDesc><table><row><cell cols="3">Feature Dimension Description</cell></row><row><cell>Size</cell><cell>1</cell><cell>The size of the routing region (half-perimeter of</cell></row><row><cell></cell><cell></cell><cell>bounding box).</cell></row><row><cell>Degree</cell><cell>1</cell><cell>Number of nets with conflicts in its routing</cell></row><row><cell></cell><cell></cell><cell>region.</cell></row><row><cell>Count</cell><cell>1</cell><cell>The number of times it has been routed/rerouted.</cell></row><row><cell>Cost</cell><cell>1</cell><cell>The weighted sum of violations on it.</cell></row><row><cell>Via</cell><cell>1</cell><cell>Number of via on it.</cell></row><row><cell>WL</cell><cell>1</cell><cell>Wirelength.</cell></row><row><cell>LA</cell><cell>16</cell><cell>Layer assignment.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE II :</head><label>II</label><figDesc>Characteristics of ISPD 2018 &amp; 2019 Contest Benchmarks</figDesc><table><row><cell>Benchmark</cell><cell>#std</cell><cell>#net</cell><cell>Die size (mm 2 )</cell><cell>Tech. node (nm)</cell></row><row><cell>ISPD18 test1</cell><cell>8879</cell><cell>3153</cell><cell>0.20 × 0.19</cell><cell>45</cell></row><row><cell>ISPD18 test2</cell><cell>35 913</cell><cell>36 834</cell><cell>0.65 × 0.57</cell><cell>45</cell></row><row><cell>ISPD18 test3</cell><cell>35 973</cell><cell>36 700</cell><cell>0.99 × 0.70</cell><cell>45</cell></row><row><cell>ISPD18 test4</cell><cell>72 094</cell><cell>72 401</cell><cell>0.89 × 0.61</cell><cell>32</cell></row><row><cell>ISPD18 test5</cell><cell>71 954</cell><cell>72 394</cell><cell>0.93 × 0.92</cell><cell>32</cell></row><row><cell>ISPD18 test6</cell><cell cols="2">107 919 107 701</cell><cell>0.86 × 0.53</cell><cell>32</cell></row><row><cell>ISPD18 test7</cell><cell cols="2">179 865 179 863</cell><cell>1.36 × 1.33</cell><cell>32</cell></row><row><cell>ISPD18 test8</cell><cell cols="2">191 987 179 863</cell><cell>1.36 × 1.33</cell><cell>32</cell></row><row><cell>ISPD18 test9</cell><cell cols="2">192 911 178 857</cell><cell>0.91 × 0.78</cell><cell>32</cell></row><row><cell cols="3">ISPD18 test10 290 386 182 000</cell><cell>0.91 × 0.87</cell><cell>32</cell></row><row><cell>ISPD19 test1</cell><cell>8879</cell><cell>3153</cell><cell>0.148 × 0.146</cell><cell>32</cell></row><row><cell>ISPD19 test2</cell><cell>72 094</cell><cell>72 410</cell><cell>0.873 × 0.589</cell><cell>32</cell></row><row><cell>ISPD19 test3</cell><cell>8283</cell><cell>8953</cell><cell>0.195 × 0.195</cell><cell>32</cell></row><row><cell>ISPD19 test4</cell><cell cols="3">146 442 151 612 1.604 × 1.554</cell><cell>65</cell></row><row><cell>ISPD19 test5</cell><cell>28 920</cell><cell>29 416</cell><cell>0.906 × 0.906</cell><cell>65</cell></row><row><cell>ISPD19 test6</cell><cell cols="3">179 881 179 863 1.358 × 1.325</cell><cell>32</cell></row><row><cell>ISPD19 test7</cell><cell cols="3">359 746 358 720 1.581 × 1.517</cell><cell>32</cell></row><row><cell>ISPD19 test8</cell><cell cols="3">539 611 537 577 1.803 × 1.708</cell><cell>32</cell></row><row><cell>ISPD19 test9</cell><cell cols="3">899 341 895 253 2.006 × 2.151</cell><cell>32</cell></row><row><cell cols="4">ISPD19 test10 899 404 895 253 2.006 × 2.151</cell><cell>32</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>ACKNOWLEDGEMENT This work was supported by the National Natural Science Foundation of China (61874002, 62004006), Beijing Municipal Natural Science Foundation (2017ZX02315001), the National Key Research and Development Program of China (2019YFB2205005).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Global and detailed routing</title>
		<author>
			<persName><forename type="first">H.-Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Electronic Design Automation</title>
				<imprint>
			<publisher>Elsevier</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="687" to="749" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An efficient hierarchical timing-driven steiner tree algorithm for global routing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Integration</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="69" to="84" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Nctu-gr 2.0: Multithreaded collision-aware global routing with bounded-length maze routing</title>
		<author>
			<persName><forename type="first">W.-H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-C</forename><surname>Kao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-Y</forename><surname>Chao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="709" to="722" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Ispd 2018 initial detailed routing contest and benchmarks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mantik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Posser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-K</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-H</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 International Symposium on Physical Design</title>
				<meeting>the 2018 International Symposium on Physical Design</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="140" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Ispd 2019 initial detailed routing contest and benchmark with advanced routing rules</title>
		<author>
			<persName><forename type="first">W.-H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mantik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-K</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Farshidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Posser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 International Symposium on Physical Design</title>
				<meeting>the 2019 International Symposium on Physical Design</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="147" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Archer: A history-based global routing algorithm</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Ozdal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="528" to="540" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Grip: Global routing via integer programming</title>
		<author>
			<persName><forename type="first">T.-H</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Davoodi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Linderoth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="72" to="84" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Detailed-routing algorithms for dense pin clusters in integrated circuits</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="340" to="349" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Gridless pin access in detailed routing</title>
		<author>
			<persName><forename type="first">T</forename><surname>Nieberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2011 48th ACM/EDAC/IEEE Design Automation Conference (DAC)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="170" to="175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Concurrent pin access optimization for unidirectional routing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Livramento</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Z</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2017 54th ACM/EDAC/IEEE Design Automation Conference (DAC)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Detailed routing algorithms for advanced technology nodes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Klewinghaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Peyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schulte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tellez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="563" to="576" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Triple patterning aware routing and its comparison with double patterning aware routing in 14nm technology</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Design Automation Conference</title>
				<meeting>the 49th Annual Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="591" to="596" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Triad: A triple patterning lithography aware detailed router</title>
		<author>
			<persName><forename type="first">Y.-H</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Z</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-L</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Computer-Aided Design</title>
				<meeting>the International Conference on Computer-Aided Design</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="123" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An effective triple patterning aware grid-based detailed routing approach</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">F</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1641" to="1646" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">TritonRoute: an initial detailed router for advanced VLSI technologies</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Kahng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Dr. CU: Detailed Routing by Sparse Grid Graph and Minimum-Area-Captured Path Search</title>
		<author>
			<persName><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-W</forename><surname>Pui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">F</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Dr. CU 2.0: A Scalable Detailed Routing Framework with Correct-by-Construction Design Rule Satisfaction</title>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">F Y</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)</title>
				<meeting><address><addrLine>Westminster, CO, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019-11">Nov. 2019</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Draps: A design rule aware path search algorithm for detailed routing</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Gonc ¸alves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Rosa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">S</forename><surname>Marques</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems II: Express Briefs</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Rdta: An efficient routability-driven track assignment algorithm</title>
		<author>
			<persName><forename type="first">G</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-C</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 on Great Lakes Symposium on VLSI</title>
				<meeting>the 2019 on Great Lakes Symposium on VLSI</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="315" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A multithreaded initial detailed routing algorithm considering global routing guides</title>
		<author>
			<persName><forename type="first">F.-K</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-H</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Attention routing: track-assignment detailed routing using attention-based reinforcement learning</title>
		<author>
			<persName><forename type="first">H</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Fallon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">B</forename><surname>Kara</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2004.09473</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName><forename type="first">V</forename><surname>Mnih</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Badia</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mirza</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Lillicrap</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Harley</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Silver</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kavukcuoglu</surname></persName>
			<affiliation>
				<orgName type="collaboration">cs</orgName>
			</affiliation>
		</author>
		<idno type="arXiv">arXiv:1602.01783</idno>
		<idno>arXiv: 1602.01783</idno>
		<title level="m">Asynchronous Methods for Deep Reinforcement Learning</title>
				<imprint>
			<date type="published" when="2016-06">Jun. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
