<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Waiting Times in Discrete-Time Cyclic-Service Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Onno</forename><forename type="middle">J</forename><surname>Boxma</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Wim</forename><forename type="middle">P</forename><surname>Groenendijk</surname></persName>
						</author>
						<title level="a" type="main">Waiting Times in Discrete-Time Cyclic-Service Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3AB2F98D1B501B44C4CB13061243C14E</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:10+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper considers single-server, multiqueue systems with cyclic service in discrete time. Nonzero switch-over times between consecutive queues are assumed; the service strategies at the various queues may differ. A decomposition for the amount of work in such systems is obtained, leading to an exact expression for a weighted sum of the mean waiting times at the various queues. The present paper is the companion paper of Boxma and Groenendijk [l] where the continuoustime case is treated.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION N local communication networks, a number of stations often</head><p>I compete for the use of a common transmission medium.</p><p>Various polling schemes are employed to coordinate and control the access to the communication channel. The performance of such polling schemes can be analyzed by studying single-server, multiqueue queueing systems. For example, in a token ring local area network, the common transmission channel may be represented by the single server, and the workstations attached to the ring by the queues. The circulation of the token along the ring implies that the stations are polled in a cyclic order. The resulting single-server, multiqueue system with cyclic service and switch-over times between queues is the subject of the present paper.</p><p>The main performance measure of interest in polling systems is the waiting time of messages at the stations. Unfortunately, explicit analytical results for even mean waiting times in cyclically served queueing systems are only available in some exceptional cases. The recent discovery of so-called pseudoconservation laws <ref type="bibr">(Watson [ 131,</ref><ref type="bibr">Ferguson and Aminetzah [3]</ref>) is an important step forward. These laws are exact expressions for weighted sums of the mean waiting times. They can be readily used to obtain and/or test approximations for the mean waiting times at the various queues (cf. <ref type="bibr">[2]</ref>). In <ref type="bibr">[l]</ref>, those pseudoconservation laws have been generalized by allowing a mixture of different service strategies at different queues. The proof of the resulting unified pseudoconservation law is based on a stochastic decomposition of the amount of work in the cyclic-service system. This decomposition provides a generalization of <ref type="bibr">Kleinrock's work conservation principle [5]</ref> to models with switch-over times. The decomposition also allows a simple probabilistic interpretation of the various terms of the unified pseudoconservation law.</p><p>All above-mentioned results are for continuous-time systems. The main goal of the present paper is to obtain discretetime analogs of the results of [l]-thus solving a problem posed by Takagi [ 121. Our motivation is that discrete-time arrival and service processes naturally fit the generally timesynchronized configuration of practical communication net-works (while continuous-time cyclic-service results can be easily obtained from their discrete-time counterparts). Discrete-time polling systems have been studied before, cf. <ref type="bibr">Konheim and Meister [7]</ref>, <ref type="bibr">Swartz [lo]</ref>, <ref type="bibr">Rubin and DeMoraes [9]</ref>, and Takagi [ 111, but the bulk of the literature in this area is devoted to continuous-time systems. See Takagi [ 1 11 for an extensive survey of cyclic-service systems, and Takagi [ 121 for an update reflecting the rapid development and strong interest in this area of research.</p><p>The organization of the rest of the paper is as follows. In Section 11, we consider cyclic-service systems without switchover times. For such systems the principle of work conservation clearly holds. This principle naturally leads to a discretetime version of Kleinrock's conservation law for mean waiting times. The extension of the work conservation principle to the case with switch-over times is made in Section 111. The main result of the paper, the discrete-time pseudoconservation law for mean waiting times, is proved in Section IV. In Section V the relation between the obtained discrete-time results and results for the continuous-time case is presented. Section VI contains some concluding remarks and topics for further research. We close this introductory section by presenting a more detailed model description and some basic results of general validity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Model Description</head><p>We consider a discrete-time queueing system with N stations (queues) QI, * a , QN where each station has an infinite buffer capacity to store waiting messages (customers). Each message consists of a number of packets, which are assumed to be of fixed length. Time is slotted with slot size equal to the transmission time of the data contained in a packet (the service time of a packet). We shall call the time interval [j, j + 11 thejth slot.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Arrival Process</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Let</head><p>x ; ( j ) : = number of messages arriving at station i b; : = number of packets included in a message in the jth slot, at station i.</p><p>The message arrival process at each station is assumed to be independent of those at other stations. The stochastic processes { x i ( j ) } and {bi} are assumed to be mutually independent. The X j ( j ) , j = 1, 2, ... are assumed to be independent, identically distributed random variables with z transform, first and second moment</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A ; ( z ) : = E [ z x q , A; : = E [ x ; ( j ) ] ,</head><p>hj2' : = E [ x ? ( j ) ] . (1 -5)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Note that we can view the arrival process at</head><p>The total offered traffic p is defined as</p><formula xml:id="formula_0">N p : = p;. i= I</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Service Strategy</head><p>We assume that a single server S visits the N stations in the order of their indexes i = 1, 2, * * , N("cyc1ic service"). For the service strategies at the queues there are various possibilities, which differ in the number of messages which may be served in a queue during a visit of server S to that queue. Assume that S visits Q,. When Q, is empty, S immediately begins to switch to QI+ 1 (we disregard variants in which S does not switch if none of the queues contains messages). Otherwise, S acts as follows, depending on the service strategy at 1) Exhaustive service (E): S serves type i messages until Q, is empty. 2) Gated service (G): S serves exactly those type i messages present upon his arrival at Q, (a gate closes upon his arrival). 3) 1-limited service (I-L): S serves one type i message (the term nonexhaustive has often been used for this strategy; in [l] we have accordingly used NE instead of IL). 4) Semiexhaustive service (SE): S continues serving type i messages until the number present is one less than the number present upon his arrival.</p><p>In this paper, we will allow mixed cyclic-service strategies (e.g., semiexhaustive at Q1, exhaustive at Q2 and Q4, 1-limited at Q3, and gated at Qs, . . . , QN). The order of service within each queue is first-come-first-served (FCFS). This assumption is not essential. In the sequel, the system is assumed to be in equilibrium.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remark I</head><p>Consideration of mixed service strategies will enable us to prove results for various cyclic-service systems in a unified manner. However, it is also of practical interest to study mixed strategies. For example, according to the draft IEEE 802.6 recommendation of the committee on metropolitan area networks, two or more token ring local area networks are to be interconnected by a backbone ring through bridges. It is often natural to assign a higher priority to the queues which represent the bridges than to the other queues at the ring. The service discipline at the ordinary queues usually is 1-limited, but at the "bridge queues" one may consider another service Qi.</p><p>discipline to model the preferential treatment received by these queues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Switching Process</head><p>A switch-over time is needed to switch from one station to the next. The switch-over times of the server between the ith and the (i + 1)th station (measured in slots) are independent, identically distributed random variables with first moment s; and second moment . I2). The first moments of the total switchover time during a cycle of the server is given by N s : = cs;</p><formula xml:id="formula_1">I = 1 (1.7)</formula><p>its second moment is given by s@).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>following:</head><p>Some additional notation we shall be needing is the X,: the number of type i messages in the system at an arbitrary epoch; X : : the number of waiting type i messages in the system at an arbitrary epoch; W,: waiting time of a type i message; the waiting time is counted from the beginning of the slot following the one in which the message arrived.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remark 2</head><p>It should be noted that, as customary in discrete-time queueing literature, an arbitrary epoch is supposed to be the instant just after the beginning of a slot.</p><p>Below, we state a few general results for future reference. For any strictly cyclic-service system, we can define the cycle time C, for Q, as the time between two successive arrivals of S at Q,. It is easily seen that the mean cycle time for Q,, EC,, is independent of i; we will denote it by EC. The visit time V, of S for Q, is the time between the arrival of S at Q, and his subsequent departure from that queue. Balancing the flow of type i messages in and out of the system during a cycle shows that Summing over i , we obtain</p><formula xml:id="formula_2">i p E C = C E V ; = E C -s . r = l</formula><p>This yields and hence, from (1.8) and (1.9)</p><formula xml:id="formula_3">(1.9) (1.10)</formula><p>The intervisit time Ii for Qi is defined as z; : = c;v;.</p><p>(1.11)</p><p>Now some remarks about the conditions for ergodicity of these cyclic-service systems are in order. Clearly, p &lt; 1 is a necessary condition. For exhaustive and gated service, this condition is also sufficient. For a queue Q, with I-limited service, it can be seen that</p><formula xml:id="formula_4">X;S -&lt; 1 1 -P (1.12)</formula><p>is an additional condition for the ergodicity of the cyclic-service system; indeed, the mean number of type i arrivals during a cycle should be less than one. Note that it is possible that, even if Q, is unstable, some of the other queues are stable.</p><p>Similarly, for a queue QI with semiexhaustive service, we have the following additional condition:</p><p>(1.13) This reflects the fact that, for semiexhaustive service, the mean number of type i arrivals during the intervisit time I; should be less than one, for during visit times the number of type i messages is at most reduced by one.</p><p>For the mixed strategies that we allow, the conditions (1.12) and (1.13) should be added to the stability condition p &lt; 1 for those queues at which we have a 1L or SE strategy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">CONSERVATION LAW FOR THE DISCRETE-TIME M/G/1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MODEL</head><p>In this section, the switch-over times are taken to be zero; hence, the server works whenever there is work in the system, and is idle when there is no work in the system. Therefore, the principle of work conservation holds: the total amount of work V, in the cyclic-service system does not depend on the order of service, and should hence equal the amount of work in a "corresponding" FCFS M / G / 1 queueing system. This observation will allow us to derive a conservation law for mean waiting times in the cyclic-service system without switch-over times. We first introduce the notion of the "corresponding" M/G/l queueing model. This is a discrete-time queueing model, consisting of one queue and one server with a Bernoulli (Memoryless = M ) arrival process with batch arrivals. The arrival process is constructed as follows: the arrival streams at all N queues of the cyclic-service model are aggregated into a single arrival stream. The batch of all the messages arriving in a slot is called a train. In any slot, no train arrives with probability IIf" A ;(O) and a train does arrive with probability 1 -IIf" Al{O). An arbitrarily chosen message in this train poses a service request whose z transform is the mixture Cf" (Xi/</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A)&amp; (2).</head><p>The principle of work conservation now states that V, equals the amount of work in the corresponding M/G/1 system, VM/,/l. Therefore, V, also equals V , / G / ~ in distribution</p><p>According to <ref type="bibr">Kobayashi and Konheim [6]</ref>, the mean number of messages in the corresponding system at an arbitrary epoch is given by x2p (2)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2(1 -P )</head><p>2(1 -P I</p><formula xml:id="formula_5">-A 2 -x ) p EXM/G/I = ~ + + p .</formula><p>(2.2)</p><p>Note that the second term in the right-hand side disappears when the arrival process is Poisson. The mean number of messages in service is p ; the residual service time of the message in service is p(2)/2/3 + 1/2. Hence,</p><formula xml:id="formula_6">+ p [p.'] . (2.3) 2P 2</formula><p>Remark 3 It should be observed that in the renewal process in discrete time with interevent-time distribution with first moment and second moment p(2), p(2)/2p + 1/2 is the mean residual life time and p(2)/2@ -1/2 is the mean past life time.</p><p>On the other hand, we can write EV, as (cf. the definitions above Remark 2) i = I</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>L L P i</head><p>The second equality is based on Little's formula.</p><p>From (2.1), (2.3), and (2.4), we obtain the following expression for a weighted sum of the mean message waiting times</p><p>We propose to call (2.5) the M/G/l conservation law in discrete time. We have found no references to this relation in the literature, although it seems highly likely that it has been derived before.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="111.">A STOCHASTIC DECOMPOSITION RESULT</head><p>In the sequel, switch-over times are incorporated in the systems under consideration. Because now the server may be idle (switching) although there is work in the system, Kleinrock's principle of work conservation is no longer valid. However, Theorem 1 below presents a natural modification of this work conservation principle. In the theorem, an arbitrary epoch is considered to be "in" a switching interval if it marks the beginning of a switching slot; the "corresponding" M/G/l system is the system (without switch-over times) introduced in the preceding section.</p><p>Theorem I Consider a single-server cyclic-service system with mixed service strategies as described in Section I. Suppose the system is ergodic and stationary. Then the amount of work V, in this system at an arbitrary epoch is distributed as the sum of the amount of work VM/G/I in the "corresponding" M/G/l system at an arbitrary epoch and the amount of work Y in the cyclic-service system at an arbitrary epoch in a switching interval. In other words, where stands for equality in distribution. Furthermore, V,,,,, and Y are independent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>The proof is similar to that of Theorem 1 in [l]</p><p>for the continuous-time case, apart from the fact that trains are considered instead of customers. It is based on the following observations : 1) VMIGlI is not affected when the service discipline is LCFS nonpreemptive instead of FCFS.</p><p>2) V, is also not affected when, instead of cyclic service, the following service strategy is enforced: all arriving trains are served LCFS, but service is interrupted precisely during the switch-over periods of the cyclic-service system.</p><p>3) It now suffices to prove that, in distribution, VkCFs = + Y. The validity of this decomposition is a consequence of the LCFS discipline. Consider a train T that arrives during a switch-over period. It has to wait until trains that arrived after T, in the same switch-over period, have been served (and also trains arriving during their service, etc.). When, finally, T i s taken into service, the only work present is the work that T found upon his arrival. This latter quantity is distributed like Y. Here, we use a discrete-time equivalent of the PASTA property [14], which we should like to call the BASTA property (Bernoulli arrivals see time averages); because the input of trains to the system is Bernoulli (and due 167 to the memoryless property of the underlying geometric distribution), the distribution of the amount of work at an arbitrary epoch is equal to the distribution of the amount of work immediately before an arrival epoch of a train. T initiates a busy period, which evolves exactly like a busy period in the "corresponding" M / G / I system. So during the busy period initiated by T, the amount of work present in the system is distributed as the sum of Y and the amount of work during a busy period of the M / G / I system. We refer to [I] for details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remark 4</head><p>Theorem 1 is the discrete-time analog of Theorem 1 of [I]. The latter theorem was motivated by, and its proof uses arguments suggested by, <ref type="bibr">Fuhrmann and Cooper [4]</ref>.</p><p>However, the reasoning in [4] is held for customers at departure epochs instead of work at arbitrary epochs. <ref type="bibr">In [4]</ref>, this leads to a similar decomposition as [ 1, Theorem 11 and (3.1), for queue lengths, for a class of so-called vacation systems. For our purposes, the amount of unfinished work is the natural quantity. Decomposition (3.1) holds for this quantity under very general assumptions (the restriction to cyclic service can in fact be relaxed). In the next section, decomposition (3.1) will be exploited to obtain a relation between the mean waiting times at the various queues of the cyclic-service system. 2) EMj2): the mean amount of work in the rest of the system at a departure epoch of S from QI.</p><p>3) p{sj2)/2s, -1/2}: the amount of work that arrived in the system during the past part of the switching interval under consideration (cf. also Remark 3).</p><p>Again, as in the continuous-time case, we have (4.7)</p><formula xml:id="formula_7">+</formula><p>For the 1-limited strategy somewhat more work is required. At a departure epoch of S from Qi, S has just completed one service of a message with probability his/(l -p ) , and no service with probability 1 -Xis/(l -p ) . Hence, with ET; the amount of work left behind at a departure epoch of a type i message h;S</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">-P</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E M ! " = -ET,. (4.8)</head><p>To determine ET;, we calculate the mean number of packets left behind by a departing type i message. Let Wi(z) be the z transform for the waiting time of an arbitrarily chosen type i message (the tagged message); E Wi = ";(I)( 1). Note that the messages left behind at station Qi when the service of the tagged message has been completed are those which arrived during the sojourn time of the tagged message, and those which arrived in the same slot as the tagged message but were placed behind the tagged message (the sojourn time is counted from the beginning of the slot next to the one in which the arrival took place). The z transform Qi(z) for the number of messages who arrived during the sojourn time of the tagged message is given by &amp;i(z), the z transform for the number of messages which arrived in the same slot as the tagged message, but were placed behind the tagged message, is given by the backward recurrence time transform (4.10)</p><p>These numbers of messages are not independent, but we can still determine the first moment of the sum, Le.,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Q ! ' ) ( l )</head><formula xml:id="formula_8">+ Q : ' ) ( l ) (4.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>11)</head><p>where A(; ) -x; 1 (x!")-x;-x;)p;</p><formula xml:id="formula_9">Q!"(l)=- .<label>2</label></formula><p>x ! 2 ' -x ;</p><formula xml:id="formula_10">+ + p ; + L</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2(1 -P i )</head><p>2 A;</p><p>Note that the second term in the right-hand side represents the amount of work left behind by a departing message in a discrete-time M / G / 1 queue with Ai(.@ and Bi(z), respectively, the z transform of the number of message arrivals per slot and the number of packets per message; the first three terms between square brackets represent the mean number of messages that have arrived during the sojourn time of the departing message (cf. (2.2) and Little's formula), and the fourth term is the mean number of messages that have arrived in the same slot as this message, but were placed behind it, cf. (4.13). Subsequently, express EM,(') in the first term in the right-hand side of (4.16)  The case of N = 1 queue yields expressions for mean waiting times in discrete-time M / G / l queues with some form of server vacations. In the completely symmetric case with all queues having identical characteristics and the same exhaustive (gated, 1-limited) service strategy, formula (4. In the present paper, we have expressed all quantities involved, including waiting times, in slots with the slot length equal to the time unit. If, instead, we assume a slot to be of length A we are able, by taking the limit A .+ 0, to pass the</p><formula xml:id="formula_11">S 1 A -~</formula><p>(X~'-X'-X;)P;.p;-.</p><p>(5.7) 2(1 -P) iEse results over to continuous time.</p><p>First, we express the arrival process in messages per time unit. Recall that the transform of the number of message arrivals at Q; in a slot is given by A;(z), with first and second moment hi and A?), respectively. Denote by A&amp;) the number of message arrivals at Q; per time unit. Then (5.8)</p><p>-~ hence, <ref type="figure">---1   A   A"-h2-A=-(A(2,-h2-A</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2(1 -P ) ;Ese</head><p>At this point, some remarks are in order. To obtain formula (5.8), it is not necessary to specify precisely how the above limit A -+ 0 is taken. However, the structure of the resulting arrival process does depend on it. Let us take a closer look at the arrival process. As has been noted in Section I, the message arrival process at Qi is a Bernoulli process with batch arrivals. We have a Bernoulli arrival process in the sense that furthermore,</p><p>x.  ] ER X;f(lp;) iEse Formula (5.8) presents a slight extension to this result, in that the message arrival process at Q; is allowed to be a Poisson process with batch arrivals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. DISCUSSION</head><p>In this paper, we have derived a stochastic decomposition for the amount of work in discrete-time cyclic-service systems with mixed service strategies. This decomposition is analogous to one that has recently been proved in [I] for the continuous-time case. The work decomposition result is used to derive an exact expression for a weighted sum of mean waiting times-a so-called "pseudoconservation law. " This pseudoconservation law, stated in Theorem 2, forms a natural extension of the M / G / l conservation law in discrete time as stated in formula (2.5). Its derivation clearly exposes the meaning of all terms. Theorem 2 presents a remarkably simple result, in view of the fact that expressions for the individual mean waiting times (in continuous-or discrete-time) are in general either not known or very complicated.</p><p>In [ 2 ] , it has been shown, for the 1-limited case, how pseudoconservation laws can be used to obtain simple, yet quite accurate, approximations for individual mean waiting times. In a future report, this approximation will be extended to more general cyclic-service niodels with mixed service strategies.</p><p>Finally, we should like to stress the fact that Theorem 1 and decomposition (4.5) can be proved for more general models than the one under consideration. In particular, other service strategies may also be included-and for each extension the challenge is to determine E :</p><p>, EM!1), the sum of the mean amounts of work left behind by the server in the queues.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>=</head><label></label><figDesc>Qi as a Bernoulli arrival process with batch arrivals 0090-6778/88/02oO-0164$01 .oO 0 1988 IEEE with G&amp;) denoting the z transform of the size of a type i The z transform, first and second moment of the number of packets, b;, in a message at Qi are given by Pr {b; = 0} = 0 by definition. The offered traffic at the ith station, p,, is defined as p i : = hi&amp;, i = l , 2, . a * , N.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>In Levy and Kleinrock [8], Y represents "the additional delay due to the presence of the starter." IV . THE PSEUDOCONSERVATION LAW As a consequence of Theorem 1 and hence, cf. (2.3) and (2.4), We now derive an expression for E Y , thus obtaining a very general pseudoconservation law for the weighted sum of the mean waiting times at the various queues. Let EY, denote the amount of work in the cyclic-service system at an arbitrary switching epoch during a switch-over from QI to Q I + l . Obviously, EY = C E I (s,/s)EY,. As in the continuous-time case, EY, is composed of three terms: 1) EM!? the mean amount of work in QI at a departure epoch of the server from Q I .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>The first term in the right-hand side of (4.4) represents the mean amount of work that arrived at all queues during the switching intervals after the last visit of the server to those queues. Note that d2)/2s -112 represents the mean total past switching time from the departure of the server from an arbitrary queue to the present random switching epoch. This interpretation explains why only s and d2) occur, and no moments of individual switch-over times. The second term reflects the interaction between queues; it represents the mean amount of work that arrived at queues, after the last visit of S, during the subsequent service periods of other queues. Its most natural representation is perhaps[cf.( 1. lo)]    Finally, Cy= I EM,(') represents the mean amount of work that arrived at queues during the last service periods of those queues, but that was not handled by S at those service periods.Note that the form of formula (4.5) is still independent of the service strategies at the various queues; only the EM!') depend on the choice of service strategies.The EMJ') are readily found for an exhaustive or gated strategy at Qi: Qi exhaustive: QI gated [cf. (1. IO)] :</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>cyclic-service system with one server and mixed service strategies as described in Section I. Denote by group of E(xhaustive) queues, the group of G(ated) queues, the group of lL(imited) queues, and the group of S(emi) E(xhaustive) queues.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>22) reduces to formula (3.63b) [respectively, (5.23), (6.60)] of [ l l ] .Remark 7If we assume Poisson arrivals in (4.22) (and hence take Al') = X t + Xi), we obtain the following relation for the weighted sum of the mean waiting times.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>is the number of slots per time unit). From (5.1), we find ) ;. (5.2) the first and second moment, respectively, of the service (switching) time expressed in time units. It may be easily seen that In (5.7), we can take the limit for A --* 0 by multiplying the left-and right-hand side with A and substituting A = 0. If we do so, we Obtain E p i E R + C piEWi+ E pi [I-x] 1 -P E%.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>For the mean waiting time in time units E@;:., we have Pr{ type i batch arrives in a slot } = 1 -A;(O) Pr{ type i batch does not arrive in a slot } =A,(O).With respect to the batch arrivals, let G&amp;) denote the z transform of the size of a type i batch. Then, we can writeE wi = E W;A.(5 -6) Of course pi = hJ3; = We can now express (4.22) in time units. With the slot length equal to A, we obtain from thcarrival intensity of type i batches. Note that y; is also equal to AJGj')(l). Now, if in (5.10) we let A + 0 in such a way that y; remains constant, the z transform for the number of message arrivals per time unit at Qi becomes (5.11) which is the z transform of a compound Poisson process. If we take G j ( z ) = z (single arrivals), we obtain the z transform _Of the "ordinary" Poisson process; in this case x!*) = x: + A;, and (5.8) reduces to the pseudoconservation law in continuous time, formula (3.22), derived in [l]:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Ui 2 11 Pr {Vi 2 l } . (4.17)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell cols="2">Combining (4.14), (4.16), (4.17), and (4.19),</cell></row><row><cell></cell><cell></cell><cell>p;E W; + p i p ; = ~</cell><cell>EM!"</cell></row><row><cell></cell><cell></cell><cell cols="2">1 -P i xis -</cell></row><row><cell></cell><cell></cell><cell></cell><cell>1 -P</cell></row><row><cell></cell><cell></cell><cell>And so we have</cell></row><row><cell></cell><cell></cell><cell cols="2">Combining (4.5) and the four expressions for EM!') in the</cell></row><row><cell></cell><cell></cell><cell cols="2">cases of E, G, 1 L and SE service strategy at Qi, respectively,</cell></row><row><cell></cell><cell></cell><cell cols="2">we have proved our main result.</cell></row><row><cell cols="2">EM:" = P;E [max (0, U; -l ) ]</cell><cell></cell></row><row><cell cols="3">= P , E [ U , -1 I Because the mean visit time of S at Q; during a cycle, when</cell></row><row><cell cols="3">positive, equals &amp;/(l -p,) (the mean busy period of a</cell></row><row><cell cols="3">discrete-time M / G / l system with mean number of arrivals</cell></row><row><cell cols="3">per slot A; and mean number of packets per message pi), we</cell></row><row><cell>have</cell><cell></cell><cell></cell></row><row><cell>Pis EVi=-=Pr</cell><cell>Pi { Ui 2 l } -</cell><cell>(4.18)</cell></row><row><cell>1 -P</cell><cell>1 -P i</cell><cell></cell></row><row><cell>so</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>(4.19)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Paper approved by the Editor for Queueing Networks and Performance of the IEEE Communications Society. Manuscript received March 17, 1987; revised July 24, 1987. The authors are with the Centre for Mathematics and Computer Science, Amsterdam, The Netherlands. IEEE Log Number 8718267.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>His research interests include queueing theory and applications, with specific emphasis on performance evaluation of computer-communication systems.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Pseudo-conservation laws in cyclic-service systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Boxma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">P</forename><surname>Groenendijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Appl. Prob</title>
		<imprint>
			<biblScope unit="volume">8606</biblScope>
			<date type="published" when="1986">1986. 1987</date>
		</imprint>
	</monogr>
	<note>Rep. OS-R</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Waiting-time approximations for cyclicservice systems with switch-over times</title>
		<author>
			<persName><forename type="first">J</forename><surname>Boxma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Meister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perform. Eval. Rev</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="254" to="262" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Exact results for nonsymmetric token ring systems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Aminetzah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="223" to="231" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Stochastic decompositions in the M/G/l queue with generalized vacations</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Fuhrmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">B</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="1117" to="1129" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">L</forename><surname>Kleinrock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Queueing Systems</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="1976">1976</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Queueing models for computer communications systems analysis</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kobayashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">G</forename><surname>Konheim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Waiting lines and times in a system with polling</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">G</forename><surname>Konheim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Meister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Ass. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="470" to="490" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A queue with starter and a queue with vacations: Delay analysis by decomposition</title>
		<author>
			<persName><forename type="first">H</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Kleinrock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Message delay analysis for polling and token multiple-access schemes for local communication networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Rubin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">F</forename><surname>Demoraes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Select. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="935" to="947" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Polling in a loop system</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">B</forename><surname>Swartz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Ass. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="42" to="59" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Analysis of Polling Systems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Takagi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>M.I.T. Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A survey of queueing analysis of polling models</title>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Third Int. Conf. Data Cornmun. Syst. Perform</title>
		<imprint>
			<date type="published" when="1987">1987</date>
			<pubPlace>Rio de Janeiro, Brazil</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Performance evaluation of cyclic service strategies-a survey,&apos;&apos; in Performance &apos;84</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Watson</surname></persName>
		</author>
		<editor>E. Gelenbe</editor>
		<imprint>
			<date type="published" when="1984">1984</date>
			<publisher>North-Holland</publisher>
			<biblScope unit="page" from="521" to="533" />
			<pubPlace>Ed. Amsterdam</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Poisson arrivals see time averages</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Wolff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="223" to="231" />
			<date type="published" when="1977">1977. 1986. 1982</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
