<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2009-04-28">April 28, 2009</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">A</forename><forename type="middle">C D</forename><surname>Erera</surname></persName>
						</author>
						<author role="corresp">
							<persName><surname>Tarantilis</surname></persName>
							<email>tarantil@aueb.gr</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Management Science and Tech-nology</orgName>
								<orgName type="institution">Athens University of Economics and Business</orgName>
								<address>
									<postCode>11362</postCode>
									<settlement>Athens</settlement>
									<country key="GR">Greece</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Chemical Engi-neering</orgName>
								<orgName type="institution">National Technical of Athens</orgName>
								<address>
									<postCode>15780</postCode>
									<settlement>Athens</settlement>
									<country key="GR">Greece</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2009-04-28">April 28, 2009</date>
						</imprint>
					</monogr>
					<idno type="MD5">FD480376B778E579D42BF9A8E4C7AF77</idno>
					<idno type="DOI">10.1109/TITS.2009.2020187</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:37+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>I N THIS paper, we examine a practical variant of the stan- dard version of the vehicle routing problem (VRP) <ref type="bibr" target="#b0">[1]</ref> in which customer demand is formed by a set of 3-D, rectangular, and weighted items. Although routing problems with 3-D loading constraints are frequently encountered in real-life applications, only recently did Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> publish the first paper introducing the Capacitated Vehicle Routing Problem with 3-D Loading Constraints (3L-CVRP). Briefly, 3L-CVRP aims to design the least cost route set for covering customer demand and determine a feasible packing of the transported items into the available loading space.</p><p>The standard version of the capacitated VRP (CVRP) is a widely studied combinatorial optimization problem <ref type="bibr" target="#b2">[3]</ref>. It calls for the minimization of the cost of satisfying the customer demand using a fleet of vehicles operating from a central station. In particular, the CVRP model considers a number of geographically dispersed customers with known demands and a central depot that acts as the base of a homogeneous fleet of vehicles with a fixed maximum carrying load. Moving between a pair of points is associated with a cost that may reflect the distance, travel time, or actual cost of implementing this transition. The goal of the problem is to design a set of routes (one route per vehicle) that start and terminate at the central depot such that the demand of customers is fully satisfied, each customer is visited exactly once by a single vehicle, the total demand of the customers that are assigned to a route does not exceed carrying capacity of the vehicle, and the total cost of the designed route set is minimized. Except for the classic static routing problems (CVRP variants), recent advances in information technology allow dynamic characteristics of the network to be taken into account when the optimal routing policies are determined <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>.</p><p>As previously mentioned, apart from the constraints of the standard CVRP model, the examined problem aims at determining a feasible-nonoverlapping-packing of the transported items into the loading spaces (containers) of the vehicles. It considers a variety of operational constraints that often arise in practical situations and involve the stability of the packing, the unloading process, and the fragility of the items. Thus, 3L-CVRP can be seen as a generalization of the CVRP; aside from the weight attribute, the physical dimensions of the transported goods are also considered. Packing the items into the containers is closely related to nondeterministic polynomialtime hard (NP-hard) 3-D bin packing (3-D-BPP) <ref type="bibr" target="#b5">[6]</ref>, which consists of packing a given set of 3-D rectangular items into the minimum number of identical bins. The problem presented in this paper is reduced to the CVRP in special cases involving items with zero volume or loading spaces with infinite dimensions for which the loading feasibility is always guaranteed.</p><p>The examined problem is of great value from both the theoretical and commercial viewpoints. Concerning theoretical importance, 3L-CVRP is a challenging problem to solve, as it is composed of two NP-hard combinatorial optimization problems, i.e., the VRP (routing aspects) and the 3-D-BPP (packing aspects). From the commercial point of view, modeling the container transportation of goods, which plays a central role in the field of distribution/collection management, is a particularly interesting problem and has become increasingly popular in recent years mainly because of the fact that it favors intermodal means of transportation involving road, rail, and sea freight networks.</p><p>In terms of published solution approaches for 3L-CVRP, Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> tackled the routing features of the problem by employing the tabu search (TS) method, which relocates customers using the GENI <ref type="bibr" target="#b6">[7]</ref> heuristic. The loading constraints are handled by applying two packing heuristics for solving the 3-D strip-packing problem. Again, TS is applied for searching through the possible orders by which items are inserted into the container. The performance of their algorithmic methodology was evaluated on benchmark instances derived from the CVRP literature and was modified to express customer demand as a set of 3-D rectangular items.</p><p>Combinations of the CVRP with additional loading constraints have also been investigated in the case of 2-D loading surfaces and items [CVRP with 2-D Loading Constraints (2L-CVRP)]. Iori et al. <ref type="bibr" target="#b7">[8]</ref> presented an exact methodology that employs a branch-and-cut algorithm for the routing aspects of the problem and a branch-and-bound algorithm for determining the loading feasibility of an item set. The solution approach of Iori et al. <ref type="bibr" target="#b7">[8]</ref> is applicable to problems involving up to 30 customers and 90 items. Gendreau et al. <ref type="bibr" target="#b8">[9]</ref> designed a TS methodology for solving larger scale 2L-CVRP instances. Zachariadis et al. <ref type="bibr" target="#b9">[10]</ref> proposed a metaheuristic development that deals with the routing aspects of 2L-CVRP by hybridization of TS and guided local search (GLS), whereas the loading constraints are tackled by applying a series of packing heuristics. Moving from the 2L-CVRP <ref type="bibr" target="#b9">[10]</ref> to the 3L-CVRP model raised numerous challenges in terms of the packing aspects of the algorithm. Specifically, 3L-CVRP considers the transportation of 3-D items in containers so that item stacking is allowed. Stacking of items both incorporates additional loading constraints (i.e., stability and fragility issues) and complicates some of the constraints imposed by 2L-CVRP (e.g., unloading issues and rotation of items), as will be discussed later in detail. Therefore, our primary aim is to effectively tackle these complex packing requirements while keeping the computational effort of our algorithm to manageable levels. Another study on a combined routing and loading problem was published by Doerner et al. <ref type="bibr" target="#b10">[11]</ref>.</p><p>The purpose of this paper is to study combined routing and 3-D-packing problems. Specifically, apart from 3L-CVRP, a new practical problem version is also introduced. This version was dictated by a major company in the transportation industry and is suited for cases in which transported items are not of excessive size or weight, so that they can manually be unloaded from the containers [Capacitated Vehicle Routing Problem with Manual 3-D Loading Constraints (M3L-CVRP)]. We propose an effective hybrid metaheuristic development for solving both problem versions (3L-CVRP and M3L-CVRP). Regarding the routing characteristics, the proposed algorithm explores the solution space using a TS methodology <ref type="bibr" target="#b11">[12]</ref>. To help the algorithm escape from the local optima encountered and move along diverse trajectories of the solution space, the conducted search is coordinated by a guiding mechanism that periodically modifies the objective function of the problem. The objective function alteration mechanism incorporates the rationale of GLS <ref type="bibr" target="#b12">[13]</ref> in the search process and works by penalizing lowquality features of the candidate solutions. Both TS and GLS have successfully been used for solving a routing variant, which considers vehicles to be replenished at intermediate stops <ref type="bibr" target="#b13">[14]</ref>. However, the algorithmic framework of the work involved the execution of a pure GLS method for improving the solution obtained by a hybrid TS within a variable neighborhood search <ref type="bibr" target="#b14">[15]</ref> block. To determine whether a candidate route is feasible in terms of the loading constraints posed by the problem, we employ a bundle of heuristics that aim at generating diverse packing structures to increase the probability of achieving feasible loadings. To reduce the required computational time, as the search progress evolves, the obtained loading feasibility information is recorded in a tree-based memory structure. To test the robustness of the proposed method, we developed new benchmark instances involving diverse customer populations and item dimensions. Our algorithmic framework was employed to solve instances derived from the literature and our new benchmark problems for both problem versions. It produced fine results, significantly improving the majority of the best solutions previously reported.</p><p>The remainder of this paper is outlined as follows: In Section II, a description of the examined problem is provided. In Section III, all of the proposed algorithmic features are discussed in detail. Section IV presents the experimental computational results and introduces our proposed new benchmark instances. Finally, Section V concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PROBLEM</head><p>Following the notation of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref>, the 3L-CVRP variant is defined on a graph G = (N, A), where N is the vertex set containing the central depot and n geographically dispersed customers, and A = {(i, j) : i, j ∈ N, i = j} is the arc set. A travel cost c ij corresponding to the required travel cost of transiting from i to j is associated with each arc (i, j). The demand of each customer i is formed by a set IT i of m i 3-D items having total weight d i and total volume s i . The length, width, and height dimensions of an item I ik ∈ IT i (k = 1, 2, . . . , m i ) are denoted by l ik , w ik , and h ik , respectively. A fragility status fr ik (whose value is 1 if item I ik is fragile and 0 otherwise) is associated with each item I ik . The demanded goods are transported by a fleet of v homogeneous vehicles that are available at the central depot. The vehicles have a maximum carrying load Q and a loading space of length L, width W , and height H, respectively. The goal of 3L-CVRP is to design the minimum cost set of routes satisfying five constraints.</p><p>1) The size of the generated route set must not exceed the number of available vehicles (at most one route per vehicle). 2) Every route must originate and terminate at the central depot.</p><p>3) The demand of all customers must fully be satisfied. 4) Every customer must be visited once by exactly one vehicle. 5) The total demand weight of the customer set assigned to any route must not exceed vehicle capacity Q. In terms of the loading aspects of the problem, for every item set transported by a vehicle, five constraints must also hold.</p><p>1) There must be an orthogonal nonoverlapping loading of the items into the vehicle's loading space. 2) Items must be packed with a fixed vertical orientation.</p><p>3) Every item must be unloaded with a straight movement parallel to the horizontal plane (last-in-first-out (LIFO) policy). 4) Every item's bottom surface must sufficiently be supported by another item's top surface or by the container's bottom surface (supporting-area constraint). 5) No nonfragile item can be stacked on any fragile item (fragility constraint). Fig. <ref type="figure" target="#fig_1">1</ref> shows a feasible route for the 3L-CVRP problem. In particular, the route covers customers 1, 3, and 2. Customer 1 demands items I 11 and I 12 , customer 3 demands a single item I 31 , and customer 2 demands two items, i.e., I 21 and I 22 . Note that the only fragile item transported by the vehicle is I 21 , as indicated by its fragility status fr. As shown in Fig. <ref type="figure" target="#fig_1">1</ref>, the container is placed with its bottom-back-left corner at position (0, 0, 0) of a 3-D coordinate system. The W , L, and H edges of the loading space are parallel to the w-, l-, and h-axis, respectively. The container's loading/unloading door lies at the W × H rectangle originating from point (0, L, 0) (the container's front end or the vehicle's rear end).</p><p>Concerning the loading constraints imposed, loading constraint 2 ensures that all items are packed with a fixed vertical orientation; however, they can be rotated 90 • on the horizontal plane. The LIFO policy (loading constraint 3) guarantees that all items can directly be delivered into the container without any repositioning of the other items. This constraint frequently arises in practical situations of freight distribution when the weight of items makes repositioning impossible or in the case of automated unloading. Thus, if item I ik is to be delivered before another item I jl , item I jl must not obstruct the direct unloading of I ik . To ensure the stability of the loading patterns, supporting-area loading constraint 4 is introduced. Every item's bottom surface must partially lie on either the bottom of the container or the top surfaces of other items. In particular, an item I ik is considered to be sufficiently supported if its bottom surface lies on top of a supporting surface with an area of not lower than a • w ik • l ik , where a is the supporting-area factor. The fragility constraint ensures that no nonfragile item is stacked on any fragile item. On the contrary, fragile items can be stacked on both fragile and nonfragile items.</p><p>To better present the loading constraints 2-5 of the problem formulation, we provide Fig. <ref type="figure" target="#fig_2">2</ref>, which shows three packing examples (for the route shown in Fig. <ref type="figure" target="#fig_1">1</ref>) that violate the aforementioned loading constraints. The packing of Fig. <ref type="figure" target="#fig_2">2</ref>(a) violates the fragility constraint, as the nonfragile item I 22 is stacked on the fragile item I 21 . In the case of Fig. <ref type="figure" target="#fig_2">2</ref>(b), the supporting-area constraint is violated due to the fact that item I 22 is supported by neither the top surface of any other item nor the bottom surface of the container. Finally, the loading pattern of Fig. <ref type="figure" target="#fig_2">2(c</ref>) does not satisfy the LIFO-policy constraint. In particular, two violations occur: I 21 is stacked on I 31 , obstructing the direct unloading of I 31 , and I 22 is placed between item I 12 and the unloading door, blocking the direct unloading of I 12 .</p><p>In addition to 3L-CVRP, a new problem version called M3L-CVRP is introduced. The M3L-CVRP model is distinguished from that of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> in terms of the LIFO policy adopted. Specifically, Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> considered that a loading pattern violates the LIFO constraint if an item A is placed under item B, A is to be delivered before B, and A and B have overlapping projections on the w-l plane [see Fig. <ref type="figure" target="#fig_3">3(a)</ref>]. This policy is suited for scenarios that involve the use of forklifts to unload the transported items. In such cases, the delivered items are first elevated and then moved toward the unloading door. On the contrary, the M3L-CVRP version considers a packing to be infeasible only if item B is stacked on A (i.e., the top surface of item A touches the bottom surface of B), item A is to be delivered before B, and A and B have overlapping projections on the w-l plane [see Fig. <ref type="figure" target="#fig_3">3(b)</ref>]. The M3L-CVRP version models cases in which transported items are manually unloaded from the vehicle loading space; therefore, they are not necessarily elevated before pulling them out of the container. Note that, for both problem versions, a packing is considered to violate the LIFO policy if item B, which is to be delivered after item A, is packed between A and the unloading door of the vehicle, and items A and B have overlapping projections on the w-h plane.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. PROPOSED SOLUTION APPROACH</head><p>As previously mentioned, 3L-CVRP is composed of two highly complex combinatorial optimization problems (i.e., CVRP and 3-D-BPP). Exact algorithmic methodologies are inapplicable of solving real-life problems of large customer and item sets. Therefore, our interest is focused on metaheuristic methodologies that are able to produce near-optimal solutions within reasonable computing times. The routing aspects of the examined problem were tackled by an algorithmic framework that incorporates the search strategies of two powerful metaheuristic approaches, i.e., TS and GLS. As far as the loading features of the problem are concerned, a collection of six packing heuristics is employed, each of which is designed to favor a different packing structure to increase the probability of achieving feasible loadings of the transported items into the containers.</p><p>The proposed algorithmic framework is motivated by the successful application of a scheme that is similar to 2L-CVRP <ref type="bibr" target="#b9">[10]</ref>. The components of the aforementioned scheme are not  problem specific; therefore, they can confidently be transferred to the more complex 3L-CVRP. Regarding the routing aspects, both TS and GLS have effectively been applied to numerous vehicle routing variants. Their hybridization aims at successfully balancing the intensification and diversification of the search process, so that a thorough exploration of the solution space is performed. In terms of the loading constraints, although the problem examined in <ref type="bibr" target="#b9">[10]</ref> imposes fewer and simpler loading requirements, compared with those of 3L-CVRP, a similar bundle of packing heuristics is used mainly because of its simple structure and computational economy. In this section, we provide an analytic description of the proposed packing heuristics, followed by a presentation of the guided TS (GTS) methodology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Packing Heuristics Bundle</head><p>To determine whether customer sequence CS(k), which is assigned to vehicle k, is feasible in terms of the loading constraints of the problem, we employ the following procedure, aiming at feasibly packing the transported item set I(k) = i∈CS(k) IT i into the loading space of vehicle k: We create three orders Ord t , t = 1, 2, and 3 of the items present in set I(k). For all three orders, the items are sorted in descending order of visit, breaking ties based on ascending order of fragility status, where the order of visit denotes the position of the corresponding customer within its route. The orders are different in terms of the second tie breaker used: For Ord 1 , Ord 2 , and Ord 3 , items are sorted in descending order of volume (w • l • h), bottom area (w • l), and height (h), respectively. The aforementioned sortings correspond to the order in which items are loaded into the container. In all cases, the items delivered first are loaded last, as dictated by the LIFO policy. Note, however, that, if the LIFO policy is not considered, the order of visit is not taken into account when generating the item orders. Regarding the fragility of the items, nonfragile items precede fragile items, so that the former's top surface can be used for hosting subsequent items of any fragility status. Ord 1 aims at packing larger boxes first to occupy the initially available wide space. Ord 2 and Ord 3 facilitate stacking of items. Loosely speaking, the use of Ord 2 entails loading items with a large bottom area first to adequately support subsequent items; with Ord 3 , short items are placed last so that they can be loaded on top of previously inserted items. Items are successively picked from set Ord 1 to be inserted into the container using the first packing heuristic Heur 1 . For each item and for both item orientations, all available loading positions are scanned. Note that, in the beginning, the only available loading position lies at the bottom-left-back corner of the container (0, 0, 0). The item is inserted into a position that does not lead to any loading constraint violation and satisfies the packing criterion dictated by the heuristic that is currently employed, i.e., Heur 1 . When an item occupies the selected position, the list of available loading positions is updated, and new spaces become available for the subsequent items. If all items of Ord 1 are feasibly packed into the container, the route is considered to be feasible in terms of the loading positions of the problem. In the opposite case, if, for any item, no feasible loading position is available, the container is emptied, and the insertion procedure is again initiated using the next packing heuristic Heur i+1 . If none of the six available heuristics succeeds in producing a feasible loading, the heuristic bundle is reapplied to the next item order Ord 2 . If no feasible packing is achieved for any of the three item orders, the investigated route is considered to be infeasible in terms of the loading constraints.</p><p>As previously mentioned, the insertion of an item results in the generation of new loading positions for hosting the following items. The rationale of managing the available loading positions for the inserted items is similar to the corner-point approach in <ref type="bibr" target="#b5">[6]</ref>, which was modified to deal with the loading constraints posed by the problem examined. Fig. <ref type="figure" target="#fig_4">4</ref> shows a sample item insertion, where item C is placed at loading position B2. In particular, B2 is erased from the list of available loading positions, whereas seven new loading positions (C1-C7) are generated and become available to accommodate subsequent items: C1 is created at the leftmost nonoccupied point of the item's bottom-front edge projection (0, l B + l C , 0). C2 lies at the bottom-left-front corner of the inserted item (w A , l B + l C , 0). Position C3 is generated at the bottom, right, back corner of C (w A + w c , l B , 0). C4 is created at the backmost nonoccupied point of the inserted item's right-bottom edge projection (w A + w c , 0, 0). Loading position C5 lies at the backmost available point of the item's top-left edge projection (w A , 0, h C ), whereas C6 lies at the top-back-left corner of C (w A , l B , h C ). Finally, loading position C7 lies at the leftmost nonoccupied point of the inserted item's top-back edge projection (0, l B , h C ). Note that we do not generate a position at (0, 0, h C ), because this loading position rarely offers an adequate supporting area for subsequent items. Two more loading positions are generated when the inserted item is not placed at h = 0: The first loading position lies at the lowest nonoccupied point of the item's left-front edge projection, whereas the second loading position is generated at the lowest nonoccupied point of the item's right-back edge projection. When the list of available loading positions is updated, any duplicate entries are removed. Moreover, loading positions in the space occupied by the inserted item are also deleted. This process of updating the available loading positions aims to keep track of possible empty spaces between inserted items so that they can later be filled to obtain dense packing patterns.</p><p>The criteria for assigning each item into a specific loading position are dictated by the aforementioned six packing heuristics Heur i , (i = 1, 2, . . . , 6), each of which aims at generating a different packing structure. As previously stated, the selected loading position for a given item must not lead to any fragility, supporting-area, or LIFO-policy constraint violation. Since 3L-CVRP and M3L-CVRP are different in terms of the LIFO policy adopted, the packing heuristics examine the LIFO feasibility of a specific position by employing the appropriate criterion for each problem version. The underlying mechanism of all six packing heuristics is provided here. 1) BackLeftLow (Heur 1 ): The position with the minimum l-axis coordinate is selected, breaking ties with the minimum wand h-axis coordinates. Employing this criterion, the packing tends to evolve in the form of layers that are parallel to the w-h plane. 2) LeftBackLow (Heur 2 ): The position with the minimum w-axis coordinate is selected, breaking ties with the minimum land h-axis coordinates. Using this heuristic, the packing tends to evolve in the form of layers that are parallel to the l-h plane. 3) MaxTouchingAreaW (Heur 3 ): The selected position is that which maximizes the inserted item's touching area. The total touching area of an item is obtained by summing the area of its surface that is adjacent to either the surface of the items that were already placed or the container walls. To favor stacking of items, the bottom surface of the container is not taken into account. In addition, the common surface of two fragile items, with one item placed on top of the other, is doubled to take advantage of the top surface of the fragile items. In the case of equal touching areas, the position with the minimum w-axis position is selected to break the tie. Using this heuristic, items tend to be initially spread out at the container's boundaries and later fill the inner part of the loading space. Regarding the tie breaker employed, it drives the packing to evolve in the direction of the w-axis. 4) MaxTouchingAreaNoWallsW (Heur 4 ): This heuristic operates with the exact same mechanism as that in the case of the MaxTouchingAreaW heuristic. As its name suggests, the walls of the containers are not taken into account when calculating the touching area of an inserted item. Following this rationale, the items tend to be initially packed into the inner parts of the container and later be spread out at the container's boundaries.</p><p>5) MaxTouchingAreaL (Heur 5 ): This packing method shares the same mechanism with the MaxTouchingAreaW heuristic. In this case, the position lying at the minimum l-axis coordinate is selected to break the tie. The aforementioned criterion favors the evolution of the packing in the direction of the l-axis. 6) MaxTouchingAreaNoWallsL (Heur 6 ): The last heuristic employed has the same behavior as that of the Max-TouchingAreaL method, which is apart from the fact that the walls of the container are not taken into account when calculating the touching area of an inserted item.</p><p>The heuristics of the bundle are sorted in increasing order of complexity. First, the simple Heur 1 and Heur 2 are executed, followed by Heur 3 -Heur 6 , which require additional computational effort for the calculation of touching perimeters. Preliminary experiments indicated that the aforementioned order reduces the total CPU time required by the heuristic bundle since, for the cases in which a feasible loading pattern can easily be obtained, it is preferable to first use the fastest heuristics. If these heuristics fail to produce a feasible packing, they are followed by the slower but more effective (see Section IV-E) Heur 3 -Heur 6 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Constructing an Initial Feasible Solution</head><p>The solution approach is initiated by employing a construction algorithm to generate an initial solution that is going to be improved by the application of the proposed metaheuristic methodology. This initial solution must respect all of the constraints imposed by the problem formulation. The feasibility of a solution heavily depends on the loading characteristics of the designed routes. Therefore, to ensure the construction of a feasible solution, our major goal is to maximize the volume utilization of the available containers. The actual quality of the produced solution, as far as the routing features are concerned, is of secondary importance for the construction algorithm. The proposed methodology managed to successfully produce feasible solutions for all test problems and for both problem versions.</p><p>The mechanism of the construction algorithm works as follows: Customers are sorted in descending order of demanded item volume s i , and v new empty-of-customer routes originating and terminating at the central depot are generated (one route per vehicle). Customers are successively picked to be assigned to some route. The feasibility of inserting customer i into any position, of all the available routes, is investigated using the packing heuristic bundle. Let S feas denote the set of routes to which customer i can feasibly be assigned. For every route j ∈ S feas , the quantity f reeV olume j is calculated, where f reeV olume j denotes the nonoccupied volume of the container of route j. The customer is assigned to the route that yields the minimum f reeV olume j value. Regarding the insertion position within the selected route, the customer is inserted into the point that minimizes the objective function increase.</p><p>As previously mentioned, the construction heuristic managed to build feasible initial solutions in terms of both the loading constraints and the fleet size for all test instances and for both problem versions. However, if the construction method fails to generate such a solution, additional vehicles become available so that all produced routes satisfy the loading constraints, as this is the only precondition for executing the improvement metaheuristic. Then, the proposed algorithm is applied, having as primary objective the elimination of these additional routes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Defining Neighborhood Structures</head><p>The proposed metaheuristic methodology, as every local search procedure, works by performing moves for transiting between solutions and exploring the solution space. We consider three move types, with each defining a neighborhood structure NS i , i = 1, 2, and 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Customer relocation (NS1):</head><p>This move type relocates a customer from its current position to another <ref type="bibr" target="#b0">[1]</ref>. Every possible reinsertion position is taken into consideration. 2) Customer swap (NS2): This move type exchanges the positions of a given customer pair <ref type="bibr" target="#b0">[1]</ref>. Every possible customer pair is taken into consideration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) Route interchange (NS3):</head><p>The mechanism of the route interchange move (2-opt) <ref type="bibr" target="#b0">[1]</ref> depends on the route pair involved. If the move is performed within a single route, two arcs are removed, two new arcs are created, and the path lying between the created arcs is reversed. In the case where the move is applied between a route pair, the routes are divided into their starting and terminating sections.</p><p>The initial section of the first route is connected to the terminating section of the second route, and vice versa, by replacing a pair of arcs. Every arc pair is considered a candidate for replacement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. GTS Methodology</head><p>The initial feasible solution produced by the construction algorithm is improved by the proposed metaheuristic methodology called GTS. The GTS methodology explores the solution space by embodying the GLS principles into the TS framework. A guiding mechanism, based on the GLS, coordinates the search process of a TS procedure by controlling the objective function of the problem. The purpose of this guiding mechanism is twofold: It induces diversification by driving the algorithm to unexplored search trajectories and aims to eliminate low-quality features from the final solution obtained.</p><p>The GTS metaheuristic begins from the initial solution of the construction heuristic and works as follows: At each iteration, a move type is stochastically selected (NS i ). All three move types have the same probability of being chosen. Neighborhood structure NS i is fully explored, and the method implements the most economical move that does not violate any of the constraints posed by the problem model and is not declared tabu, unless it leads to the highest quality solution ever encountered (aspiration criterion). The loading feasibility of all tentative solutions is investigated by employing the packing heuristic bundle presented in Section III-A. To avoid any cycling phenomena caused by the deterministic criterion of moving to subsequent solutions, when a move is performed, its reversal is declared tabu for a number of iterations equal to tabuTenure.</p><p>For every guidFreq completed iterations of the GTS framework, the guiding mechanism is initiated. As for the GLS method, a set of undesirable solution features must be defined and penalized. In the case of the GTS methodology, as well as numerous routing problem approaches, expensive (long) arcs are not considered to be part of a near-optimal solution. Therefore, long arcs present in the candidate solution are located, and their cost is penalized to be eliminated from the final solution. The arc selected to be penalized is that which maximizes the following utility function:</p><formula xml:id="formula_0">U (i, j) = (c ij /avg ij )/(1 + p ij ),</formula><p>where avg ij denotes the average cost of all arcs originating from vertices i and j in arc set A and p ij is equal to the number of times that arc (i, j) has been selected for penalization. The proposed utility function not only selects the longest arc of the solution but also takes into account the vertex topology by considering the positions of i and j relative to the rest of the customer population (term avg ij ). This behavior results in a fairer and more balanced arc selection strategy <ref type="bibr" target="#b13">[14]</ref>. Let arcPen denote the term selected to be penalized. The cost of arcPen is doubled for a penalization horizon that is equal to (guidF req/2) number of iterations before being restored to its original value. Using this penalization policy, the methodology is driven to search trajectories that do not contain the penalized arc for a number of iterations that is at least equal to the penalization horizon. If, during the penalization period, a tentative solution improves the highest quality solution ever encountered, the penalization policy is overridden. The GTS methodology is terminated after maxNoImp nonimproving iterations by returning the highest quality solution ever encountered during the search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Acceleration Strategies</head><p>To restrict the computational time required by the GTS methodology, we designed two accelerating strategies: The first strategy reduces the size of the neighborhoods explored, whereas the second strategy records the loading feasibility of all encountered routes.</p><p>As far as the neighborhood reduction policy is concerned, the moves defined by the selected neighborhood structure NS i are evaluated, only if they result in the generation of arcs linking two neighboring vertices. In detail, for every vertex k, quantity avg k is obtained as the average cost of all arcs beginning from k in arc set A. Then, the set of neighboring vertices of k, which is denoted by NV k , is composed of every vertex m, such that c km ≤ avg k . Note that the central depot is considered to be a neighbor of every customer. A solution's neighborhood structure NS i is reduced to RN S i by considering only the moves that lead to the connection of vertices k and m such that k ∈ NV m and m ∈ NV k . Thus, at each GTS iteration, the search explores the limited RN S i of the current solution.</p><p>The second policy of reducing the computational time demanded by the GTS methodology employs a memory structure that records the loading feasibility information of all previously encountered routes. Since the packing heuristic bundle is a major contributing factor to the overall computational effort required by the proposed methodology, any duplicate executions of these packing heuristics must be eliminated. During the search process, the loading feasibility of all tentative solutions is investigated using the packing heuristic bundle. Already examined routes may repeatedly be encountered as the search evolves. Therefore, once the loading feasibility of a given route has been checked, the corresponding information is stored in a memory structure to be available for later stages of the search. To reduce the time needed for accessing and retrieving the obtained loading information, the memory structure was designed in the form of a sorted tree.</p><p>Fig. <ref type="figure" target="#fig_5">5</ref> shows an example of the memory structure employed, particularly in the case where the packing heuristic bundle achieved a feasible loading pattern for routes 0-2-4-0 and 0-1-3-2-0, and no such pattern was generated for route 0-2-1-5-0. If these routes are to be reencountered during the search progress, their loading feasibility is going to be retrieved from the memory structure rather than determined by the application of the packing heuristic bundle. Recording and retrieving the obtained loading information resulted in a significant decrease in the total GTS computational time, which ranged from 64% for the smallest instances involving up to 15 customers to 35% for the largest instances with 125 customers. Note that, as the search process evolves, the required physical memory for storing the loading feasibility information may exceed the memory availability of the computer executing the GTS algorithm. This danger becomes greater in the case of larger scale instances when the cardinality of the potential routes becomes higher. Therefore, to avoid any memory overflow situations, the tree-based structure may need to be destroyed and rebuilt from the beginning after a fixed number of completed GTS iterations. Fixing the destruction period at 5000 iterations worked fine when executing the GTS algorithm on a computer with 1 GB of RAM, even for the largest scale instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. COMPUTATIONAL RESULT</head><p>The proposed metaheuristic solution approach was coded in Visual C# and executed on a Pentium IV 2.8-GHz computer with 1 GB of RAM. To determine the standard setting for all algorithmic parameters, we conducted extensive tests, solving both the instances of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> and the new test problems that we developed. Then, the performance of the GTS methodology was evaluated using the standard parameter setting. Note that, to directly compare the performance of the GTS algorithm to the solution approach of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref>, we set the supporting-area factor a = 0.75, as in the work of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref>. All benchmark instances and analytic solutions obtained by the GTS methodology are available at www.msl.aueb.gr/management_science/networks.htm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Benchmark Instances</head><p>Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> introduced 27 instances for routing problems with 3-D loading constraints. These test problems were derived from previous CVRP instances <ref type="bibr" target="#b0">[1]</ref> by expressing the customer demand in the form of 3-D rectangular items. In particular, the length L, width W , and height H of the containers were set equal to 60, 25, and 30, respectively. For each customer i, a set of items IT i was created. The size of IT i is stochastically generated within the <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3]</ref>  Apart from the aforementioned instances, the GTS algorithm was applied to 12 new benchmark problems. To determine a robust parameter setting, these instances involve diverse item dimensions and customer set sizes. In particular, we developed four graphs containing 50-125 customers. The central depot lies at (x dep , y dep )=(0, 0), and each customer i is placed at (x i , y i )=(r cos(θ), r sin(θ)), where r and θ are stochastically taken from <ref type="bibr" target="#b9">[10,</ref><ref type="bibr">100]</ref>   <ref type="table" target="#tab_0">I</ref>. Every generated item has 20% probability of being fragile. The demand d i of a customer i is randomly valued within the range <ref type="bibr" target="#b4">[5,</ref><ref type="bibr">35]</ref>. To ensure the feasibility of the developed test problems, the number of available vehicles v was experimentally defined by applying the construction heuristic algorithm described in Section III-B.  The capacity of the vehicles was set equal to 120. Table <ref type="table" target="#tab_0">II</ref> presents a description of both the 27 instances introduced by Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> and our new 12 benchmark problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Calibration of the Parameters</head><p>The GTS algorithmic framework contains three parameters, the values of which have to be determined before the algorithm is executed. To define the setting of these parameters, we performed a thorough calibration procedure, solving instances of various scales and item characteristics for the 3L-CVRP version. The test problems that were used for the sensitivity analysis procedure involve 21-100 customers and 40-309 transported items. The calibrated parameters were individually valued in relatively wide ranges, and the resulting GTS performance was evaluated. Table III presents a brief summary of the calibration procedure and results.</p><p>The tabuTenure parameter controls the period for which the reversal of a performed move is declared tabu. This tabu period is expressed in GTS iterations and guarantees that the search process avoids cycling phenomena and moves toward new unexplored solution trajectories. We valued the tabuTenure parameter within three to six iterations per move type. Since the GTS method considers three neighborhood structures, tabuTenure varied from 9 to 18 in increments of three. The GTS methodology was executed 100 times on each test problem, and the results obtained are presented in Table <ref type="table" target="#tab_2">IV</ref>. The GTS methodology proved to be rather insensitive to the value of the tabuTenure parameter, as the average gap between the minimum and the maximum scores achieved was limited to 0.34%. For the majority of test problems, the best results were obtained by fixing tabuTenure at 12. Therefore, tabuTenure was set equal to 12.</p><p>The guidFreq parameter controls the period of employing the guiding mechanism. The lower the value of guidFreq, the more  frequent the arcs are penalized, and the stronger the diversification induced to the search process. To define the value yielding the most satisfactory interplay between the intensification and diversification of the search, the guidFreq parameter was valued within <ref type="bibr" target="#b4">[5,</ref><ref type="bibr">30]</ref> in increments of five. For each parameter value and each test problem, the algorithm was applied 100 times. The results obtained are presented in Table <ref type="table">V</ref>. They indicate a considerable dependence of the GTS method on the guidFreq parameter, as the gaps between the best and worst average scores ranged between 1.18% and 3.98%. The lowest average objective function values were obtained, when guidFreq was set equal to 15 and 20. Thus, the standard setting of the guidFreq parameter was fixed at 18.</p><p>The last parameter to be valued controls the terminating condition of the GTS methodology. GTS is terminated after the completion of maxNoImp iterations without improving the highest quality solution encountered. Obviously, the greater the value of maxNoImp, the higher the probabilities of achieving better-quality solutions, and the longer the computational time required by the GTS method. To tune the maxNoImp parameter, we tested GTS with maxNoImp values taken from {2000, 4000, 6000, 10 000, 15 000}. For small-scale test problems, 4000 proved to be high enough to guarantee the production of high-quality solutions. On the contrary, when GTS was applied for solving large-scale instances, we observed solution improvements after the completion of 6000 or even 10 000 nonimproving iterations. These high values of maxNoImp involve the risk of consuming excessive overall computational effort. Therefore, we fixed maxNoImp at 6000, for which we observed a satisfactory balance between the final solution quality and the demanded computational time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Comparison of GTS With Pure TS</head><p>To visualize both the effectiveness and the diversification effect of the guiding mechanism, we provide Fig. <ref type="figure" target="#fig_8">6</ref>, which compares the solution function value through the search process, with and without applying the guiding strategy. The problem used to conduct this comparison is benchmark instance E-045-04f (see Section IV-A). The black line represents the pure TS method, whereas the gray line corresponds to the proposed GTS methodology. In terms of the solution quality of the final solution obtained, the guiding mechanism resulted in a 3.13% solution improvement, compared with the pure TS algorithm (GTS: 1338.38, TS: 1376.52). To measure the diversification character of both search processes, we calculate the standard deviation of the candidate solution scores. The results obtained indicate a remarkable 82.79% increase in the solution score standard deviation (GTS: 63.61, TS: 34.80).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Computational Result for Both Problem Versions</head><p>Using the standard parameter setting determined by the calibration experiments, we applied the GTS methodology to all 27 benchmark instances of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> and our 12 new developed test problems for both problem versions (3L-CVRP and M3L-CVRP). The performance of the GTS algorithm is compared with that of the TS methodology of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref>. In addition, to gain insight into the effect of the loading constraints on the final solution quality and compare the performance of the GTS and TS methods for different constraint configurations, we executed our algorithm, disregarding the loading constraints imposed by the problem. In particular, we ran the GTS methodology with four different loading constraint configurations: The first three do not consider the fragility, LIFO, and supporting-area constraints, respectively. For the fourth configuration, all three aforementioned constraints are ignored.</p><p>1) Computational Result for 3L-CVRP: Table VI compares the results of the GTS algorithm with those of the TS method for the 27 problems of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref>. GTS improves 21 out of the 27 best solutions obtained by TS. The average solution improvement is equal to 3.54%. As shown in Table <ref type="table" target="#tab_3">VI</ref>, the gap between the GTS and TS scores increases with the problem scale. In particular, when up to 30 customers are considered, the TS method presents better results for six out of the 11 test problems. However, for the rest of the sixteen test problems (31-101 customers), the GTS method consistently produces higher quality solutions. This indicates that the relative advantage of the proposed method comes from the interplay between the computational effort dedicated to the routing and packing aspects; instead of spending computational time searching through item orders to overcome loading infeasibilities <ref type="bibr" target="#b1">[2]</ref>, GTS uses a simpler packing component to determine if loading constraints are satisfied. In this way, the proposed method is mainly oriented toward the minimization of the routing cost, which constitutes the actual objective of the problem. Therefore, for small-scale instances, where the routing aspects can easily be dealt with and the solution quality primarily depends on the loading constraints, the TS and GTS methods present comparable results. However, for the large-scale instances, where the routing aspects are more challenging and become the decisive factor for the solution quality, GTS exhibits better performance than the TS method. Regarding the computational times required, GTS appears to be faster on average; however, no direct comparisons can be made, as the computational times heavily depend on a variety of factors, including the programming languages, compilers, computer systems, and the coding skills of the developers. Table VII presents the 3L-CVRP solution scores and the CPU times for the 12 new benchmark instances.</p><p>Table <ref type="table" target="#tab_5">VIII</ref> presents the effect of the loading constraints on the solution quality. It summarizes the gaps between the solution values for the fully constrained problem and for each of the aforementioned constraint configurations (no fragility, no LIFO, no supporting area, and 3-D packing). Table VIII also presents the gaps between the GTS and TS methods for each constraint configuration. The solution values obtained by the In detail, the %Cons column of Table <ref type="table" target="#tab_5">VIII</ref> presents the percent gaps between the GTS solution values achieved for the fully constrained problem denoted by the F C_C GTS (column C GTS of Tables <ref type="table" target="#tab_3">VI</ref> and<ref type="table" target="#tab_4">VII</ref>) and GTS values achieved for each examined constraint configuration CC_C GTS (column C GTS of Table <ref type="table" target="#tab_6">IX</ref>). These gaps have been evaluated as (F C_C GTS -CC_C GTS )/F C_C GTS . The %T S columns of Table VIII correspond to the percent gaps between the values of GTS (column C GTS of Table <ref type="table" target="#tab_6">IX</ref>) and TS (column C TS of Table <ref type="table" target="#tab_6">IX</ref>) for each constraint configuration, which are denoted by CC_C GTS and CC_C TS , respectively. They have been computed as (CC_C TS -CC_C GTS )/CC_C TS . In terms of the CPU times, ignoring the loading constraints of the original model significantly accelerated the performance of the algorithm, as less feasibility checks were required by the packing heuristics. We observe that removing each of the loading constraints results in a significant objective function decrease. Disregarding the fragility constraint, the results indicate a 2.58% (2.85% for the instances of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> and 1.95% for the new instances) average decrease in the solution costs. The LIFO policy plays a more important role, as its removal yields an average solution quality improvement of 5.22% (4.61% and 6.58% for the two data sets, respectively). The supporting-area constraint has a stronger impact on the final solution quality. In particular, setting the supporting-area factor a = 0 results in an average solution cost decrease of 5.65% (5.61% and 5.74% for the two data sets, respectively). Finally, removing all three aforementioned constraints leads to a 10.43% average solution quality improvement (10.66% and 9.89% for the two data sets, respectively). Comparing the GTS and TS method performances for the various constraint configurations, we observe that GTS consistently improves the results of TS when ignoring the fragility, LIFO, and supporting-area constraints. In particular, disregarding the fragility constraint, GTS improves the average solution values obtained by the TS approach by 4.01%. The average improvement is lower when removing the LIFO and supporting-area constraints (0.25% and 0.30%). Surprisingly, when all of the aforementioned loading constraints are ignored, GTS increases the average solution cost achieved by the TS method by 0.20%. This behavior may be due to the fact that, since the packing has no special requirements (e.g., the supporting-area, LIFO-policy, and fragility constraints), the order by which items are loaded into the container is not strictly dictated by the loading constraints; therefore, by searching through possible item orders, the TS of Gendreau et al. <ref type="bibr" target="#b1">[2]</ref> more effectively tackles the unrestricted problem version.</p><p>2) Computational Results for M3L-CVRP: Table X presents the best solution scores obtained by the GTS algorithm, solving all 39 benchmark instances for the M3L-CVRP version of the problem. It also presents the percent differences between the solution values achieved for M3L-CVRP and 3L-CVRP presented in Tables VI and VII. These differences have been evaluated as (C 3L -C M3L )/C 3L , where C 3L and C M3L denote the solution values for the 3L-CVRP and M3L-CVRP versions, respectively. The 3L-CVRP scores are slightly higher than the M3L-CVRP scores as the 3L-CVRP problem version follows a more restrictive LIFO policy.</p><p>To investigate the effect of the loading constraints on the solution quality, we solved the M3L-CVRP problem version for all four constraint configurations previously described. Table XI presents the results obtained. Note that the GTS solution values for each of the four examined constraint configurations of the M3L-CVRP version are presented in Table <ref type="table" target="#tab_9">XII</ref>. As shown in Table XI, ignoring the supporting area leads to a significant average decrease of 6.00% in the solution values obtained. The average decrease in the solution scores for ignoring the fragility and LIFO constraints is limited to 2.08% and 4.60%, respectively. Removing all of the aforementioned constraints yields a 9.85% average solution improvement. The greatest decrease in the solution scores is observed for the new benchmarks of Class 3 (involving diverse item dimensions).</p><p>In particular, ignoring the fragility, LIFO, and supporting-area constraints results in a 17.30% average solution improvement for the Class-3 instances (50-3: 14.50%, 75-3: 8.40%, 100-3: 21.38%, and 125-3: 24.93%). The total computational times were reduced, compared with those demanded to solve the fully constrained problem, as the packing heuristics performed fewer operations for the loading feasibility checks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Relative Effectiveness of the Packing Heuristics</head><p>To give insight into the relative effectiveness of the six packing heuristics included in the bundle of Section III-A, we have performed the following experimental procedure: For both problem versions, we applied the GTS method to each benchmark instance. Instead of terminating the execution of the bundle when the first feasible packing was obtained, all six packing heuristics were always applied to the investigation of the feasibility of the tentative routes. In this way, we can empirically compare the relative performance of the proposed packing heuristics. The results found are presented in Table <ref type="table" target="#tab_10">XIII</ref>. In detail, for each instance, the heuristic that obtained the most feasible loadings is assigned a score of 100%. The score for each of the remaining heuristics is proportional to the number of feasible loading patterns that it generated. As seen from the results, the four heuristics that involve the calculation of the touching perimeters (Heur 3 -Heur 6 ) exhibited better performance, compared with the simpler and faster Heur 1 and Heur 2 . For both problem versions, Heur 4 , which ignores the container walls when calculating the touching perimeters and favors the evolution of packing in the form of layers parallel to the l-h plane, yielded the best average scores or, in other words, managed to generate the most feasible loading patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>In this paper, we have investigated combined routing and 3-D-packing problems. Specifically, we have studied a recently addressed practical variant of the CVRP called 3L-CVRP. This problem arises in the context of transportation logistics when vehicles must be routed to satisfy customer demand, which consists of 3-D, rectangular, and weighted items.</p><p>Regarding our solution approach, we have proposed a hybrid metaheuristic method called GTS, which combines the strengths of the TS and GLS strategies. The conducted TS is periodically controlled by a guiding mechanism, which locates and penalizes low-quality features present in the candidate solution. The application of this guiding mechanism drastically diversifies the search process and increases the effectiveness of the proposed methodology. Concerning the packing aspects of the problem, we have proposed a collection of packing heuristics. To increase the probability of obtaining feasible loadings, each heuristic is designed to favor a different packing structure. The overall computational effort is reduced by two acceleration strategies: We have used a policy for restricting the size of the solution neighborhoods explored, together with a memory structure for storing the loading feasibility information obtained through the search progress. To calibrate the algorithmic parameters of the GTS, we have performed extensive computational experiments, solving both instances derived from the literature and a set of new benchmark problems. These new benchmark instances have been developed to cover different problem characteristics, as far as the size of the customer population and the dimensions of the transported items are concerned. After determining the standard parameter setting, GTS has successfully been applied to the benchmark problems. In particular, it managed to improve the average quality of the previously reported best solutions by 3.54%. Finally, to evaluate the sensitivity of the proposed algorithmic methodology to the various packing constraints, we have executed GTS, considering various loading constraint configurations.</p><p>Despite their great practical importance, only recently have the first routing problems with loading constraints been addressed. Therefore, in terms of future research directions, several hybrid metaheuristic frameworks that have proven to be effective for routing and packing problems can be developed to deal with practical large-scale problems. In addition, for medium-and small-scale problem instances, it is challenging to design metaheuristic strategies that include mathematicalprogramming-related components, which have recently been defined as matheuristic methods. Practical variants of 3L-CVRP covering more operational constraints can also be investigated. In terms of the packing features of the problem, these variants may consider various container sizes and irregular shapes of transported items. Regarding the routing aspects, problem models considering time windows and split deliveries can also be examined.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>A</head><label></label><figDesc>Hybrid Metaheuristic Algorithm for the Integrated Vehicle Routing and Three-Dimensional Container-Loading Problem Christos D. Tarantilis, Emmanouil E. Zachariadis, and Chris T. Kiranoudis Abstract-This paper examines a recently addressed practical variant of the capacitated vehicle routing problem (VRP) called the Capacitated Vehicle Routing Problem with 3-D Loading Constraints (3L-CVRP). This problem considers customer demand to be formed by 3-D rectangular items. Additional loading constraints often encountered in real-life applications of transportation logistics are imposed on the examined problem model. In addition to 3L-CVRP, we also introduce and solve a new practical problem version that was dictated by a transportation logistics company and covers cases in which transported items are manually unloaded from the loading spaces of the vehicles. Both problem versions are solved by a hybrid metaheuristic methodology that combines the strategies of tabu search (TS) and guided local search (GLS). The loading characteristics are tackled by employing a collection of packing heuristics. The proposed algorithm's robustness was tested for both problem versions, solving benchmark instances derived from the literature and new benchmark problems with diverse features in terms of customer set size and transported-item dimensions. It produced fine results, improving most of the best solutions that were previously reported. Index Terms-Fleet management, guided local search (GLS), tabu search (TS), vehicle routing and packing integration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Feasible 3L-CVRP route example.</figDesc><graphic coords="3,39.73,70.46,246.12,201.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Loading constraints violations for the route shown in Fig. 1. (a) Fragility violation. (b) Supporting-area violation. (c) LIFO violation.</figDesc><graphic coords="4,143.45,231.98,312.12,122.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. LIFO policies of the examined problem versions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Loading an item into the container.</figDesc><graphic coords="5,144.24,69.86,300.12,156.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Recording the loading feasibility.</figDesc><graphic coords="7,313.24,70.46,225.12,150.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>interval. The dimensions l it , w it , and h it of a generated item it take random integer values from [d min L, d max L], [d min W, d max W ], and [d min H, d max H], respectively, where d min = 0.2 and d max = 0.6. The number of available vehicles v was experimentally determined to guarantee the feasibility of the developed instances.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>and [0, 2π], respectively. The dimensions of the containers were defined as L = 60, W = 30, and H = 30. Furthermore, we introduced three classes of item demand characteristics: Class 1 contains small items, Class 2 contains large items, and Class 3 involves diverse item dimensions. For each of the four graphs, we have created three test problems according to the aforementioned item classes: With each customer i, an item set IT i is associated. The size of IT i is randomly generated in the interval [m min , m max ]. The dimensions l it , w it , and h it of each item it are uniformly distributed in [d min L, d max L], [d min W, d max W ], and [d min H, d max H], respectively. The values of m min , m max , d min , and d max for each class are presented in Table</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Role of the guiding mechanism for instance E045-04f.</figDesc><graphic coords="9,309.24,485.62,232.20,101.16" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="10,76.94,93.09,444.96,313.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="11,84.23,93.49,420.12,473.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="12,97.45,93.49,403.92,407.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="13,77.74,93.41,432.72,324.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="14,96.44,92.73,405.84,446.04" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="15,92.24,92.65,403.92,417.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="16,107.45,93.29,384.12,333.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I DEMANDED</head><label>I</label><figDesc>ITEM SET CHARACTERISTICS OF THE NEW BENCHMARK INSTANCES</figDesc><table><row><cell>TABLE II</cell></row><row><cell>BENCHMARK INSTANCES SOLVED</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE IV CALIBRATING</head><label>IV</label><figDesc></figDesc><table /><note><p>THE tabuTenure PARAMETER TABLE V CALIBRATING THE guidFreq PARAMETER</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE VI COMPUTATIONAL</head><label>VI</label><figDesc>RESULTS FOR 3L-CVRP ON GENDREAU et al. [2] INSTANCES</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE VII COMPUTATIONAL</head><label>VII</label><figDesc>RESULTS FOR 3L-CVRP ON THE NEW BENCHMARK INSTANCES</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE VIII EFFECT</head><label>VIII</label><figDesc>OF THE LOADING CONSTRAINTS FOR 3L-CVRP</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE IX 3L</head><label>IX</label><figDesc>-CVRP SOLUTION VALUES FOR VARIOUS LOADING CONSTRAINT CONFIGURATIONS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>TABLE X COMPUTATIONAL</head><label>X</label><figDesc>RESULTS FOR M3L-CVRP GTS and TS methods for each constraint configuration of the 3L-CVRP model are presented in TableIX.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>TABLE XI EFFECT</head><label>XI</label><figDesc>OF THE LOADING CONSTRAINTS FOR M3L-CVRP</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>TABLE XII M3L</head><label>XII</label><figDesc>-CVRP SOLUTION VALUES FOR VARIOUS LOADING CONSTRAINT CONFIGURATIONS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>TABLE XIII RELATIVE</head><label>XIII</label><figDesc>EFFECTIVENESS OF THE PACKING HEURISTICS</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank the anonymous referees for extensively reviewing this paper and offering constructive remarks and directions for the completion of this work.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Operations Research and Decision Systems Centre, Athens. He has been a member of the Board of Directors of several companies, a principal investigator for several European Union and national projects, and a consultant for public organizations and private industries. He has authored more than 100 scientific papers in international journals, books, and conference proceedings. His research interests include the application of operations research techniques for complex decision systems modeled across many time and scale lengths, with specialization in the analysis, design, and development of integrated models, methodologies, and computational tools in the areas of distribution logistics services, supply-chain management, and production scheduling.</p><p>Dr. Tarantilis was the recipient (more than ten times) of the "Best Teaching Faculty Award" from the Department of Management Science and Technology, Athens University of Economics and Business. His current research interests include the analysis and design of intelligent computational methodologies for tackling large-scale complex combinatorial optimization problems, which arise in logistics, transportation, and production operations.</p><p>Chris T. Kiranoudis received the Diploma in chemical engineering and the Ph.D. degree in nonlinear mathematical programming from the National Technical University of Athens (NTUA), Athens, Greece, in 1988 and 1992, respectively.</p><p>He is currently an Associate Professor of computational methods in analysis and design of industrial processes and management operations with the School of Chemical Engineering, NTUA. He has authored more than 120 international scientific journal publications and presented papers at 50 national and international conferences. In addition, he has actively participated in 20 European Union projects and more than 60 national scientific projects in the fields of computational system analysis, optimization, and control for industrial processes and operations. His current research interests include the design and control of chemical processes and plants, numerical analysis, mathematical programming, risk analysis, and the development of information systems for logistics operations.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Vehicle Routing Problem</title>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIAM Monographs on Discrete Mathematics and Applications</title>
		<meeting><address><addrLine>Philadelphia, PA</addrLine></address></meeting>
		<imprint>
			<publisher>SIAM</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Tabu search algorithm for a routing and container loading problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Iori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Martello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transp. Sci</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="342" to="350" />
			<date type="published" when="2006-08">Aug. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Active-guided evolution strategies for largescale capacitated vehicle routing problems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Mester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Bräysy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2964" to="2975" />
			<date type="published" when="2007-10">Oct. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Optimal vehicle routing with real-time traffic information</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><surname>Iii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="178" to="188" />
			<date type="published" when="2005-06">Jun. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Truck route planning in nonstationary stochastic networks with time windows at customer locations</title>
		<author>
			<persName><forename type="first">H</forename><surname>Jula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dessouky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Ioannou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="51" to="62" />
			<date type="published" when="2007-03">Mar. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The three-dimensional bin packing problem</title>
		<author>
			<persName><forename type="first">S</forename><surname>Martello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pisinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="256" to="267" />
			<date type="published" when="2000-03">Mar. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">New insertion and postoptimization procedures for the traveling salesman problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hertz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1086" to="1094" />
			<date type="published" when="1992-12">Nov./Dec. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An exact approach for the symmetric capacitated vehicle routing problem with two dimensional loading constraints</title>
		<author>
			<persName><forename type="first">M</forename><surname>Iori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Salazar Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transp. Sci</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="253" to="264" />
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A Tabu search heuristic for the vehicle routing problem with two-dimensional loading constraints</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Iori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Martello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="4" to="18" />
			<date type="published" when="2008-01">Jan. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A guided Tabu search for the vehicle routing problem with two-dimensional loading constraints</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Zachariadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Tarantilis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Kiranoudis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">195</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="729" to="743" />
			<date type="published" when="2009-06">Jun. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Metaheuristics for the vehicle routing problem with loading constraints</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">F</forename><surname>Doerner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fuellerer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Hartl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gronalt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Iori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="294" to="307" />
			<date type="published" when="2007-07">Jul. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Tabu search, in search methodologies</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Potvin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Introductory Tutorials in Optimization and Decision Support Techniques</title>
		<editor>
			<persName><forename type="first">E</forename><surname>Burke</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Kendall</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="165" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Partial constraint satisfaction problems and guided local search</title>
		<author>
			<persName><forename type="first">C</forename><surname>Voudouris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tsang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd Int. Conf. PACT</title>
		<meeting>2nd Int. Conf. PACT</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="337" to="356" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A hybrid guided local search for the vehicle routing with intermediate replenishment facilities</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Tarantilis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Zachariadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Kiranoudis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFORMS J. Comput</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="154" to="168" />
			<date type="published" when="2008-02">Feb. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">He is currently an Associate Professor of operations research with the</title>
		<author>
			<persName><forename type="first">N</forename><surname>Mladenoviae</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Christos D. Tarantilis received the Diploma in mathematics from the University of Patras, Patras, Greece, in 1997, the M.S. degree in operational research from the London School of Economics</title>
		<meeting><address><addrLine>London, U.K.; Athens, Greece</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-11">Nov. 1997. 2002</date>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="1097" to="1100" />
		</imprint>
		<respStmt>
			<orgName>Department of Management Science and Technology, Athens University of Economics and Business</orgName>
		</respStmt>
	</monogr>
	<note>Variable neighborhood search. and the Director of the</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
