<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Cost-Aware Network Immunization Framework for Intrusion Prevention</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Marjan</forename><surname>Keramati</surname></persName>
							<email>marjan_keramati@comp.iust.ac.ir</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Engineering Department</orgName>
								<orgName type="institution">Iran University of Science and Technology Tehran</orgName>
								<address>
									<country key="IR">Iran</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hassan</forename><surname>Asgharian</surname></persName>
							<email>asgharian@iust.ac.ir</email>
							<affiliation key="aff1">
								<orgName type="department">Computer Engineering Department</orgName>
								<orgName type="institution">Iran University of Science and Technology Tehran</orgName>
								<address>
									<country key="IR">Iran</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ahmad</forename><surname>Akbari</surname></persName>
							<email>akbari@iust.ac.ir</email>
							<affiliation key="aff2">
								<orgName type="department">Computer Engineering Department</orgName>
								<orgName type="institution">Iran University of Science and Technology Tehran</orgName>
								<address>
									<country key="IR">Iran</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Cost-Aware Network Immunization Framework for Intrusion Prevention</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T13:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>component; attack graph</term>
					<term>network hardening</term>
					<term>network immunization</term>
					<term>vulnerability</term>
					<term>attack scenario</term>
					<term>security metrics</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>in this paper, a cost-aware framework for intrusion prevention has been presented. The inputs of this framework are the attack graph of the specified network and also the important assets of it (target of attacker). We have defined some graph based security metrics and aggregated their effects for prioritizing attack scenarios. The scenarios are ordered based on the attacker's knowledge, attacker's endurance, and scenario's ease of exploitability and also impact of the attack scenario. The impact and exploitability of each attack scenario have been computed based on the extracted CVSS values. Based on the output of the prioritizing algorithm, some of the most important scenarios are selected for elimination. A subset of the initial conditions and vulnerabilities of the selected scenarios is carefully chosen to harden the network with the lowest possible cost in terms of the time and also removal costs.</p><p>For evaluating our framework, we have also presented a risk factor. This factor indicates the likelihood of the attack path which is multiplied by its impact on the security factors (confidentiality, integrity and availability). The result of applying our framework on one well-known network example has been presented for showing its performance.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>With the growth of the computer networks in all related topics to information technology (e.g. commercial systems) in recent years, one of the vital subjects to computer networks is security. The security is one of the crucial requirements in all reliable networks. A wellknown approach to securing computer network is based on their known vulnerabilities. Therefore, identifying the possible attacks and using acceptable countermeasures for removing them or reducing their likelihood will be important. In order to identify a possible attack, it is needed to recognize their causes. The main factor of network attacks is existence of vulnerabilities in systems, services and configurations. In computer security, vulnerability is a weakness which allows an attacker to reduce a system's information assurance. Vulnerability is the intersection of three elements: 1-a system susceptibility, weakness or flaw, 2-attacker access to the flaw, and 3-attacker capability to exploit the flaw <ref type="bibr" target="#b0">[1]</ref>. By exploiting the vulnerability, the attacker improves his access level on the desired asset in the network. There are many vulnerability scanners like Nessus [13] and NMAP <ref type="bibr">[12]</ref> which has the capability of identifying the separate vulnerabilities of the existing elements of the network but these tools do not present any information about the relationship between these vulnerabilities <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6]</ref>. For this reason they cannot identify the multi-stage attacks and attackers can infiltrate a seemingly well-guarded network using multi-stage attacks by exploiting sequences of related vulnerabilities <ref type="bibr" target="#b0">[1]</ref>. Therefore, in addition to identification of existing vulnerabilities in the computer network, it is necessary to extract the relationship between the vulnerabilities. For this reason, a security model is needed to figure out the relationship between the known vulnerabilities. All different types of the attack graphs are one of these kinds of tools, which have the capability to specify the interaction and relation of vulnerabilities <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref>. In other words, an attack graph specifies the attack paths (multi-stage attacks) and the causes of exploiting each single vulnerability in each attack path. Therefore, attack graphs can reveal all possible potential threats; measuring security risk of crucial resources in the vulnerable network and for this reason we used them as the security model in this paper.</p><p>By analyzing the attack graph as a security model of the network, it is possible to extract the sequence of the vulnerabilities that results to attack. In other words, we can identify the causes of the multi-stage attacks in the specified network by attack graph analysis and perform some prevention tasks for complete attack removal or reducing the likelihoods of them. Resolving the related vulnerabilities to each attack path is one of the solutions that can be used for this problem. However, there is a direct mapping between vulnerabilities and associated costs of their removal that should be considered; because some of these costs can be unacceptable in some systems. For instance, the solution for removing an attack (e.g. attack to file server via ftp vulnerabilities) can be stopping its related service (e.g. ftp service) which is completely unacceptable because this solution affected the availability of the system directly. On the other hand, removing all vulnerabilities is impossible because there are no security patches for all known vulnerabilities <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8]</ref>.</p><p>The other approach for attack removal is focused on removing the exploitation conditions (e.g. Attacker's access level) of vulnerabilities (e.g. ftp_rhosts) instead of patching their related services (e.g. ftp). But this solution also has some associated costs (e.g. decreasing the availability of the system) <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b7">8]</ref>. For this reason, the cost factor should be defined and deployed effectively for making balance between benefits and costs.</p><p>In this paper, a solution for network hardening problem has been presented. We have also proposed a framework for securing vulnerable networks by removing their most beneficial known vulnerabilities against known attacks (tradeoff between costs and benefits). The main contributions of this paper in comparison with other similar works are as follows:</p><p>• Defining Model-based security metrics and aggregating their effects;</p><p>• Applying CVSS <ref type="bibr">[14]</ref> values in the definition of security metrics;</p><p>• And making tradeoff between benefit and cost in removal of vulnerabilities in the specified network.</p><p>The remainder of this paper is organized as follows. The next section reviews related works quickly. Section III explains the proposed solution and section IV and Section V presents our cost function and our algorithm for removing vulnerabilities or exploitation conditions with considering associated costs in one motivating example. The last section concludes the paper and proposes some comments for future works.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORKS</head><p>The possible network attacks (multi-stage attacks) and the effective conditions for their occurrences can be shown and modeled with attack graphs. Two kinds of attack graphs that were used for security purposes in computer networks are: state-based attack graphs and exploit-based attack graphs <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref>. In state-based graphs, each node indicates a security state of network. For instance each node shows the presence of attacker and his accessibility in one host and also figures the running services on that host. Although this kind of graphs has all necessary information for solving network prevention problem, but their shortcomings in modeling real computer networks, causes limited use of them. In other words, the main problem of state-based attack graphs is their scalability <ref type="bibr" target="#b3">[4]</ref>. The complexity of generation of these graphs is exponential in the terms of the number of existing hosts and the number of related vulnerabilities. For solving the scalability problem of state-based attack graphs, the exploit-based or compact attack graphs are proposed. In this kind of graphs, in contrast to the statebased graphs, there are two types of nodes: exploits and conditions. The exploit nodes are indeed the vulnerabilities that can be used by the attacker, and the condition node indicate the exploitation pre-conditions and post-condition of vulnerabilities. The complexity of compact graph generation is polynomial in terms of the total number of vulnerabilities and security conditions <ref type="bibr" target="#b3">[4]</ref>.</p><p>In <ref type="bibr" target="#b0">[1]</ref>, for a specific attack path, the sequence of its related vulnerabilities is extracted. In other words, for each attack which is done against a specific service or host, all vulnerability sequences are selected. Then some of these selected paths with lower lengths are used in the removal phase. The main problem of <ref type="bibr" target="#b0">[1]</ref> is its assumption in considering just the length of the attack path. It is obvious that the longer attack paths are more difficult to exploit than the shorter ones, but it is not a true assumption in all conditions. In other words, considering the number of the vulnerabilities is not enough because the longer attack paths are not always the harder ones. For instance consider a long path with the same vulnerability in all nodes in comparison with shorter one with some difficult to launch vulnerabilities. It is obvious that in this example the longer path is more vulnerable to use by the attacker than the shorter path. For solving these problems, in our proposed framework, we defined our metric based on the inherent quality of existing vulnerabilities in the attack path. We have used CVSS and also we have defined it in terms of vulnerability's effect on the security and its exploitability. The proposed metric and its related terms are presented in the next sections.</p><p>The other related work in hardening problem for intrusion or attack prevention has been presented in <ref type="bibr" target="#b1">[2]</ref>. The writers of <ref type="bibr" target="#b1">[2]</ref> used the attack graph as a model for representation of their network. They have assigned a value to all available vulnerabilities in the network. They have called this value the difficulty level and have used it as a measure for the exploitability of the respective vulnerability. Based on this difficulty level, the writers of <ref type="bibr" target="#b1">[2]</ref> have assigned a value to all attack paths and they decide for vulnerability removal based on this value. In other words, only vulnerabilities are selected for removing that their effects on the difficulty level are significant. They have not explained the details of their computation and implementation methods, and also they have ignored the interactions and relationships between vulnerabilities in attack paths. In our framework, we define two metrics based on the CVSS that resolves the shortcoming of their proposed solution and also simplifies the computation complexity.</p><p>For solving the similar problem, the writers of <ref type="bibr" target="#b2">[3]</ref> have assigned a criticality degree to each exploitation conditions and then prioritize them based on these degrees. The main problem of this approach is that they ignore the cost factor in removing conditions and therefore it may affect the principle security factors (i.e. confidentiality, integrity and availability). Our proposed approach has solved this subject by using two level operations with considering the cost factors in both two levels.</p><p>The other related work to this paper is <ref type="bibr" target="#b3">[4]</ref>. The probability has been computed for all possible attack paths in <ref type="bibr" target="#b3">[4]</ref>. The main problem with this approach is the computation of probabilities which is not a trivial task and in addition to its complexity; there is no recommendation for its computation in <ref type="bibr" target="#b3">[4]</ref>. They have assigned some random values for likelihoods and have evaluated their works based on these hypothetical values which is no acceptable in real computer networks and restricts its usages.</p><p>For securing the specified network in <ref type="bibr" target="#b4">[5]</ref> with the minimum cost, they have tried to select the best subset of the conditions in the term of defined cost function. The main problem of this approach is that it only considers the number of related vulnerabilities to each condition that are the consequences of using that condition. In other words, the conditions that are pre-condition of more number of vulnerabilities get higher values and priority for removal. It is clear that, with this assumption in mind, some isolated attack paths may not be considered (which are really important) and also some pre-conditions that related to more attack paths may get higher priority while some of these attack paths may not be resulted or ended to the attacker's goal. The similar problem of <ref type="bibr" target="#b0">[1]</ref> and <ref type="bibr" target="#b4">[5]</ref> is that they have focused only on the removal of initial conditions while it is possible to remove vulnerability in a system or service by patching it to resist network against known attacks. In our proposed framework, we have taken into account the vulnerabilities (and their associated costs) and also initial conditions (and their associated costs) in an integrated manner for finding the subset of initial conditions and vulnerabilities that has minimum cost for removal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. PROPOSED FRAMEWORK</head><p>In this section, our proposed framework and solution for intrusion prevention has been presented. We have defined some security metrics and also we have presented a closed formula for aggregating the effects of all defined metrics. Although our proposed solution is not perfect but our evaluation on the known network configurations, and comparison with other works, shows that its output is acceptable and also it resolves the shortcomings of the similar works. In this part, we have used the well-known network example similar to <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref> for showing the effectiveness of our proposed framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Security modeling based on attack graph</head><p>A compact attack graph is a directed graph with two types of nodes. In many papers like <ref type="bibr" target="#b10">[11]</ref>, there is a formal description of these graphs and for this reason we do not rewrite them. In compact attack graphs which are called exploit-based attack graphs too, there are two types of node. One of them shows exploited vulnerabilities and the other type defines the required security conditions for exploitation of vulnerabilities <ref type="bibr" target="#b3">[4]</ref>. The security conditions are shown by labels on the edges and the exploited vulnerabilities are shown with rounded boxes in the Fig. <ref type="figure" target="#fig_0">1</ref>. Similar to other works, we have used this type of attack graphs for security modeling. The principle related definitions of the attack graph that we have used them in our framework, are as follows.</p><p>• Intermediate conditions: there are some pre-conditions for exploiting vulnerabilities and after exploiting them, some new conditions (consequences) are added to network. These new conditions that are consequences of exploiting vulnerabilities are called intermediate conditions.</p><p>For instance in Fig. <ref type="figure" target="#fig_0">1</ref>, user(1) is one of these intermediate conditions that refers to the access level of the attacker on host 1 after using the vulnerability sshd_bof(0, 1). • Initial conditions: those pre-conditions that are necessary for exploiting vulnerabilities but are not consequences of the exploiting other vulnerabilities are called initial conditions. In other words, the initial conditions exist inherently in network and specifies by network configuration, accessibility conditions and network topology. For example in Fig. <ref type="figure" target="#fig_0">1</ref>, user(0) and sshd(0,1) are two instances of initial conditions.</p><p>• Attack path: a set of vulnerabilities which their sequential exploitation results in attacker's access to some of the network assets and resources are called attack path or attack scenario. For instance in Fig. <ref type="figure" target="#fig_0">1</ref>, the sequence of "ftp_rhosts(0,2) rsh(0,2) local_bof( <ref type="formula" target="#formula_1">2</ref>)" resulted to the root access of the attacker in host 2 and is an example of attack path in this figure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Intrusion Prevention with Cost Consideration</head><p>As it can be seen in Fig. <ref type="figure" target="#fig_0">1</ref>, there may be more than one attack path for intruder's illegal access to the specified network's asset. Therefore, there will be several alternative scenarios that can be selected from these attack paths for network immunization or network hardening. In other words, by selecting some attack scenarios and removing their root causes from network, the likelihood of intrusion will be decreased and therefore, the network will be hardened against that removed attacks. Although in this approach the main aim is to decrease the likelihood of intruder's access to assets but in many cases, because of side effects and related costs, it is not possible to remove all vulnerabilities and attack paths and therefore the immunization does not perform completely. By analyzing the corresponding attack graph of the network, it can be identified that for illegal access to one specified asset (e.g. illegal root access to write in the database), which vulnerabilities with what sequence should be exploited.</p><p>For removing an attack path, it is enough to eliminate one of its vulnerabilities but this process may be difficult. In other words, there may be no appropriate patches for all known vulnerabilities and in some cases we have to stop its corresponding service which will affect seriously the service availability and it will not always be possible because in some cases the side effects of removing vulnerability for intrusion prevention may be more than side effects of the attacks. In these circumstances, the reasonable solution is to eliminate the exploitation conditions instead of patching and removing vulnerabilities <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref>. For example, stopping the vulnerable web server, make it completely secure, but it is not acceptable solution because of its serious side effect on the service availability. As stated before, in these situations, it is tried to eliminate the exploitation conditions of vulnerabilities instead of stopping vulnerable services. There are two alternatives for exploitation condition removal (i.e. initial conditions and intermediate conditions). Intermediate conditions unlike initial conditions are not in the direct control of administrator and so only initial conditions can be removed for this purpose. The important issue that should be considered in this point is the associated costs of network immunization. Therefore, the cost factor should be defined and measured exactly. It means that, it should be tried to maximize the network security with the minimum possible costs in terms of other objectives. In our proposed approach, the removal of some attack scenarios is prioritized based on their potential risk for network and their contribution in other attack paths. With this approach, the network hardening process is done in two phases. In the first stage, all attack paths are ordered and in the second phase, a subset of the initial conditions and vulnerabilities with cost consideration, are selected for removal. These two phases were done in the following six steps in our proposed framework: In some papers like <ref type="bibr" target="#b0">[1]</ref>, the length of the attack path was defined as a basic security metric and used for prioritizing the scenarios for removal but only the path length is not a good factor because the shorter paths do not necessarily refer to simpler ones and there may be some short attack paths that have very challenging vulnerabilities and will be never used by the attacker. In our presented framework, the aggregation of following four parameters has been used for attack scenario arrangement: attack path length, vulnerability's diversity in each attack path, ease of exploitability of attack path and the impact of exploitation of attack path in terms of essential security metrics (confidentiality, integrity and availability). For measuring the latter two parameters, we used the information of CVSS <ref type="bibr">[14]</ref> and assigned values to each attack path based on their existing vulnerabilities. The other two required parameters (i.e. length and diversity) can be extracted from attack graph easily and can be used for prioritization. We have considered the impact of vulnerability exploitation on the overall system security, because the vulnerability elimination cost may be more than its exploitation impact cost. We have tried to aggregate the effects of these factors for ordering the attack paths in the first phase of our framework. Our defined parameters and security metrics are defined in the following parts.</p><p>• Ease factor: there is a numerical value in the CVSS (exploitability metrics section of the CVSS base score) that indicates the exploitability of all indexed vulnerabilities. Based on these exploitability metrics, we have defined the exploitability of each attack path as an ease factor that was shown as a <ref type="bibr" target="#b0">(1)</ref>.</p><formula xml:id="formula_0">∑ ∈ = V v cvss v lity Exploitabi Factor Ease ) (<label>(1)</label></formula><p>• Impact factor: there is another numerical value in the CVSS that shown the vulnerability exploitation impact on the overall security. We have calculated the side effect of executing an attack path to the confidentiality, integrity and availability, based on this CVSS parameter, as the summation of the impact metrics of the CVSS base score. It was shown as a (2):</p><formula xml:id="formula_1">∑ ∈ = V v cvss v impact Factor impact ) (<label>(2)</label></formula><p>In both above equations, the V is referred to the set of all existing vulnerabilities of each attack path. By considering the abovementioned parameters in addition to the length and diversity of attack paths, we have aggregated these parameters for sorting scenarios based on the following intuitive rules:</p><p>1-The shorter attack paths should be removed with higher priority because as the length of an attack path is increased, the attacker needs to traverse more steps, and therefore, the attack probability may be decreased. This parameter can indicate the intruder's endurance.</p><p>2-The diverse attack paths (i.e. the paths with more different vulnerabilities) should be removed with lower priority because they require more knowledge to exploit than the normal paths. This parameter can indicate the intruder's knowledge.</p><p>3-The attack paths with more negative effects should be removed with higher priority because its side effect on the network is more critical than the normal paths. 4-The simpler attack paths (i.e. attack path with simpler exploitable vulnerabilities) should be removed with higher priority because the likelihood of their occurrences is more than others.</p><p>We have defined (3) for prioritizing attack scenarios based on above rules:</p><formula xml:id="formula_2">) ( ) ( ) ( ) (</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Diversity</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Factor</head><p>Ease Diversity Factor impact Length Factor Ease Length Factor impact priority Scenario Attcak</p><formula xml:id="formula_3">δ γ β α + + + = (3)</formula><p>As it can be seen in the (3), we have considered coefficients for all terms which can be used for applying policy to the network. For instance, if we have a network that its data integrity and availability are more important than the occurrence of attacks, we should assign higher values to α and γ . Also, it can be evaluated that the longer paths or more complicated ones will have lower priorities and also the paths with higher impact or exploitability values will have higher priority for removal. In other words, the attacks with higher negative impact, higher exploitability, lower length and lower diversity should have higher priority for elimination.</p><p>The attack paths with the highest priority are selected for elimination in the second phase of our proposed framework. The main reason for not using all attack scenarios in the second phase and just using the highest priority scenarios is the complexity of the second phase algorithm. In this stage, the critical set of the attack paths are extracted and a subset of it which has the acceptable cost in terms of time and related costs are presented for elimination. The complexity of this algorithm is exponential ( ) and even for small attack graphs, the execution time will be significant. Therefore, we have implemented a heuristic algorithm in this phase which solves the tradeoff between complexity and costs. We have assigned the negative cost to each vulnerability and initial condition similar to <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref> and used these costs for minimization. The effective cost for each initial condition and vulnerabilities was computed based on the actual cost which assigned by network administrator and the contribution factor of it in other attack scenarios. The effective cost of initial condition and vulnerabilities is computed by the (4):</p><formula xml:id="formula_4">Rate on Contributi Cost Actual Cost Effective =<label>(4)</label></formula><p>The contribution rate in the (4) indicates the number of scenarios that each specified initial condition or vulnerability is appeared in them. For example, for initial condition sshd(0,1), the number of all attack paths that this initial condition has been appeared in them is its contribution rate. The higher the contribution rate of one vulnerability or initial condition, the higher effect on the total cost because the removal of such initial condition will effect on elimination of more attack paths. In other words, the initial conditions and vulnerabilities were selected for removal that appears in more attack paths. In this way, the second phase algorithm tries to find the subset of initial conditions and vulnerabilities with lowest cost based on its input from the first phase. In the following section, the results of the applying this approach to one well known example (Fig. <ref type="figure" target="#fig_0">1</ref>) is shown.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXPERIMENTAL RESULTS</head><p>After validating our proposed approach on some artificial examples, we have evaluated it on some wellknown network examples that some of its results are shown in this section. The specified attack graph has been shown in the Fig. <ref type="figure" target="#fig_0">1</ref> and used in other papers like <ref type="bibr">[1, 4, 9, and 10]</ref> for similar purposes too. The main security goal of immunization in this example is to limit the access of attacker to host 2. We have assigned similar values to the coefficients of (3) and solve the problem with different threshold values. Our assigned CVSS values for vulnerabilities of the attack graph are shown on the Table <ref type="table">1</ref>.</p><p>We use (3) to order the attack paths and after sorting them, some of these scenarios are selected for removal. Our main aim in sorting the attack scenarios is to decrease the complexity of the second phase algorithm. In other words, we pass some of the sorted scenarios with higher priorities to the second phase. For instance, the following attack paths have the highest priority based on the (3):</p><p>1-sshd_bof(0,1) rsh(1,2) local_bof(2) 2-ftp_rhosts(0,2) rsh(0,2) ftp_rhosts(2,1) rsh(2,1) ftp_rhosts(1,2) rsh(1,2) local_bof(2) 3-ftp_rhosts(0,2) rsh(0,2) ftp_rhosts(2,1) rsh(2,1) rsh(1,2) local_bof(2)</p><p>As it can be seen in the above attack scenarios, the second one is longer than the third one and it is because of the effect of other parameters. For evaluating the performance of our framework in different situations, we have defined a metric based on the risk definition for each attack path and summed these risk of all attack paths in the graph. Our defined risk is shown in (5):</p><formula xml:id="formula_5">∑ = + + = paths of Number i i i i i I C A p Risk 1 ) ( γ β α (5)</formula><p>The i p indicates the likelihood of execution of the attack path and the</p><formula xml:id="formula_6">i i i I C A , ,</formula><p>indicates the impact of exploitation of the attack path. Similar to <ref type="bibr" target="#b0">[1]</ref>, we have used the CVSS temporal score metrics for computation of i p . We have assigned the perfect probability (i.e. 1) to the initial conditions and we have computed the path likelihood based on that. The probability of each intermediate condition is equal to the probability of its vulnerability and the probability of each vulnerability in the path is the multiplication of its conditions. By these assumptions we have computed the probability of execution of each attack path. It is obvious that the lower risk is more acceptable and it is achieved by removing more attack paths.</p><p>For evaluating the performance of the first phase of the framework, we have repeated the second phase with three different inputs of attack scenarios: the best scenarios, the worst scenarios and the random scenarios. The best ones are the scenarios which have the highest priority in (3) and the worst scenarios are the ones that have lowest priority and the random scenarios are selected randomly from all attack paths. The Table <ref type="table">3</ref> shows the result of this test.</p><p>For displaying the performance of the second phase of the proposed framework, we have repeated our tests with different threshold values and its results have been shown in the following table. We have also assigned '1' for the cost value of all initial conditions except the user(0) and '2' for the value of all vulnerabilities except the local_bof(2). The user(0) which indicates the presence of attacker cannot be removed and also we have assumed that local_bof(2) cannot be patched.</p><p>As it was expected, the risk improvement is constant from a specific threshold point in our example and the network administrator can make decision about the working point of his system by selecting the best threshold which solved the tradeoff between cost and time. It is clear that with the same risk, with consuming more time, we can reach better results in the case of cost. The execution time for finding the best solution (exhaustive search) is in the order of some hours even in our small example which indicates the importance of our framework in decreasing this complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION AND FUTURE WORKS</head><p>Intrusion prevention is one of the most important research topics in the computer security. In this paper we have presented a preventive solution for network immunization with considering the related costs in terms of time and other factors. We have proposed a framework which use the attack related and also some other metrics that we defined them based on the CVSS scores. For performance evaluation, we defined a risk function which shows the relative security of the graph. The main shortcomings of the proposed solution are as follows that we plan to solve them in our future works. The greedy nature of the second phase algorithm, the lack of awareness of the priority function in the first stage to the cost factor parameters and also evaluation of the proposed framework with larger valid artificial or real examples are some of the shortcomings of the current work that will be part of our future works.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. An attack graph for sample network</figDesc><graphic url="image-509.png" coords="3,429.84,175.20,100.32,84.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>1-Phase I: 1 - 1 - 2 -Phase II: 2 - 1 - 2 - 2 -</head><label>1122122</label><figDesc>Extraction of all attack scenarios from attack graph 1-2-Definition of security metrics and prioritization of the attack paths based on the these metrics 1-3-Selection of attack paths for removal with highest priority Critical set<ref type="bibr" target="#b9">[10]</ref> extraction for each attack scenario (i.e. corresponding vulnerabilities and initial conditions) Cost assignment to all initial conditions and vulnerabilities based on their nature 2-3-Extraction a subset of vulnerabilities and initial conditions with acceptable cost</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I .</head><label>I</label><figDesc>CVSS VALUES OF THE VULNERABILITIES OF FIG. 1.</figDesc><table><row><cell cols="3">Vulnerability Exploitability Impact</cell></row><row><cell>ftp_rhosts</cell><cell>8</cell><cell>2.9</cell></row><row><cell>sshd_bof</cell><cell>8</cell><cell>10</cell></row><row><cell>local_bof</cell><cell>10</cell><cell>10</cell></row><row><cell>Rsh</cell><cell>8</cell><cell>2.9</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE II .</head><label>II</label><figDesc>PERFORMANCE EVALUATION OF THE FIRST PHASE</figDesc><table><row><cell></cell><cell>Best</cell><cell>Worst</cell><cell>Random</cell></row><row><cell></cell><cell>Scenarios</cell><cell>Scenarios</cell><cell>Scenarios</cell></row><row><cell># of selected scenarios</cell><cell>2</cell><cell>2</cell><cell>2</cell></row><row><cell>Risk improvement</cell><cell>87%</cell><cell>38%</cell><cell>50%</cell></row><row><cell>Total # of removed scenarios</cell><cell>7</cell><cell>5</cell><cell>7</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE III .</head><label>III</label><figDesc>RESULTS OF OUR FRAMEWORK ON ONE REAL NETWORK</figDesc><table><row><cell>Number of selected scenarios</cell><cell>Total number of removed scenarios</cell><cell>Risk improvement</cell><cell>Total elimination cost</cell><cell>Total Execution time (ms)</cell></row><row><cell>1</cell><cell>2</cell><cell>49%</cell><cell>1</cell><cell>6.7</cell></row><row><cell>2</cell><cell>7</cell><cell>87%</cell><cell>2</cell><cell>7.2</cell></row><row><cell>3</cell><cell>9</cell><cell>100%</cell><cell>3</cell><cell>8.1</cell></row><row><cell>4</cell><cell>9</cell><cell>100%</cell><cell>2.1667</cell><cell>9.1</cell></row><row><cell>5</cell><cell>9</cell><cell>100%</cell><cell>2</cell><cell>10</cell></row><row><cell>6</cell><cell>9</cell><cell>100%</cell><cell>0.9</cell><cell>11</cell></row><row><cell>7</cell><cell>9</cell><cell>100%</cell><cell>0.6667</cell><cell>11.8</cell></row><row><cell>8</cell><cell>9</cell><cell>100%</cell><cell>0.5357</cell><cell>12.8</cell></row><row><cell>9</cell><cell>9</cell><cell>100%</cell><cell>0.7</cell><cell>14.2</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2011" xml:id="foot_0">International Conference on Computer Applications and Industrial Electronics (ICCAIE 2011) 978-1-4577-2059-8/11/$26.00 ©2011 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1">Authorized licensed use limited to: Tsinghua University. Downloaded on March 09,2022 at 12:11:23 UTC from IEEE Xplore. Restrictions apply.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank Iran Telecommunication Research Center (ITRC) for its financial and scientific support.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A Scalable Approach to Analyzing Network Security using Compact Attack Graphs</title>
		<author>
			<persName><forename type="first">Feng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dehui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinshu</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Networks (Journal of Networks)</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="543" to="550" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Survivability Quantitative Analysis Model for Network System Based on Attack Graph</title>
		<author>
			<persName><forename type="first">Le-Jun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lin</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wu</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yong-Tian</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning and Cybernetics</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="3211" to="3216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Method Based on Global Attack Graph for Network Hardening</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Man</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y T</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th International Conference on Wireless Communications Networking and Mobile Computing</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Flexible Approach to Measuring Network Security Using Attack Graphs</title>
		<author>
			<persName><forename type="first">Chen</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Su Jin-Shu</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Electronic Commerce and Security</title>
				<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="426" to="431" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A Huristic Approach to Minimum Cost Network Hardening Using Attack Graphs</title>
		<author>
			<persName><forename type="first">T</forename><surname>Islam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lingyu</forename><surname>Wang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>New Technologies, Mobility and Security. IEEE</publisher>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An Approach for Security Assessment of Network Configurations Using Attack Graph</title>
		<author>
			<persName><forename type="first">Nirnay</forename><surname>Ghosh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1st International Conference on Networks and Communications</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="283" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">VEA-bility Security Metric: A Network Security Analysis Tool</title>
		<author>
			<persName><forename type="first">M</forename><surname>Tupper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zincir-Heywood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Third International Conference on Availability, Reliability and Security</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="950" to="957" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An Efficient Approach to Minimum Cost Network Hardening Using Attack Graphs</title>
		<author>
			<persName><forename type="first">Feng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lingyu</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinshu</forename><surname>Su</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fourth International Conference on Information Assurance and Security</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="209" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Efficient Minimum-Cost Network Hardening Via Exploit Dependency Graphs</title>
		<author>
			<persName><forename type="first">Steven</forename><surname>Noel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sushil</forename><surname>Jajodia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O'</forename><surname>Brian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Berry</surname></persName>
		</author>
		<author>
			<persName><surname>Jacobs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">19th Annual Computer Security Applications Conference</title>
				<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="86" to="92" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Minimum-cost network hardening using attack graphs</title>
		<author>
			<persName><forename type="first">Lingyu</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Noel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sushil</forename><surname>Jajodia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Communications</title>
		<imprint>
			<biblScope unit="page" from="3812" to="3824" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Scenario Graphs and Attack Graphs</title>
		<author>
			<persName><forename type="first">Oleg</forename><surname>Sheyner</surname></persName>
		</author>
		<author>
			<persName><surname>Mikhail</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
		<respStmt>
			<orgName>Submitted to School of Computer Science, Computer Science Department, Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD Thesis</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
