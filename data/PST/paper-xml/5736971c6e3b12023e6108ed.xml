<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SpaTeL: A Novel Spatial-Temporal Logic and Its Applications to Networked Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Iman</forename><surname>Haghighi</surname></persName>
							<email>haghighi@bu.edu</email>
						</author>
						<author>
							<persName><forename type="first">Austin</forename><surname>Jones</surname></persName>
							<email>austinmj@bu.edu</email>
						</author>
						<author>
							<persName><forename type="first">Zhaodan</forename><surname>Kong</surname></persName>
							<email>zdkong@ucdavis.edu</email>
						</author>
						<author>
							<persName><forename type="first">Ezio</forename><surname>Bartocci</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Radu</forename><surname>Grosu</surname></persName>
							<email>radu.grosu@tuwien.ac.at</email>
						</author>
						<author>
							<persName><forename type="first">Calin</forename><surname>Belta</surname></persName>
							<email>cbelta@bu.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Boston University</orgName>
								<address>
									<addrLine>15 Saint Mary&apos;s Street Brookline</addrLine>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Boston University</orgName>
								<address>
									<addrLine>15 Saint Mary&apos;s Street Brookline</addrLine>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Davis One Shields Avenue Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">TU Wien Treitlstrasse</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<address>
									<settlement>Vienna</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">TU Wien Treitlstrasse</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<address>
									<settlement>Vienna</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff7">
								<orgName type="institution">Boston University</orgName>
								<address>
									<addrLine>110 Cummington Street</addrLine>
									<settlement>Boston</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff8">
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">SpaTeL: A Novel Spatial-Temporal Logic and Its Applications to Networked Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A2283710BF8C9AD1CDEEC2AADF2FE29C</idno>
					<idno type="DOI">10.1145/2728606.2728633</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D.2.1 [Software Engineering]: Requirements/Specifications</term>
					<term>F.4.3 [Mathematical Logic and Formal Languages]: Formal Languages Algorithms, Theory Spatial Temporal Logic</term>
					<term>Statistical Model Checking</term>
					<term>Parameter Synthesis</term>
					<term>Networked Dynamical Systems</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Networked dynamical systems are increasingly used as models for a variety of processes ranging from robotic teams to collections of genetically engineered living cells. As the complexity of these systems increases, so does the range of emergent properties that they exhibit. In this work, we define a new logic called Spatial-Temporal Logic (SpaTeL) that is a unification of signal temporal logic (STL) and tree spatial superposition logic (TSSL). SpaTeL is capable of describing high-level spatial patterns that change over time, e.g., "Power consumption in the northwest quadrant of the city drops below 100 megawatts if the power consumption in the southwest quadrant remains above 200 megawatts for two hours." We present a statistical model checking procedure that evaluates the probability with which a networked system satisfies a SpaTeL formula. We also develop a synthesis procedure that determines system parameters maximizing the average degree of satisfaction, a continuous measure that quantifies how strongly a system execution satisfies a given formula. We demonstrate our algorithms on two systems: a biochemical reaction-diffusion system and a demand-side management system for a smart neighborhood.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>A networked system can be roughly defined as a system whose components are distributed across space and connected via a communication network. Examples include electrical power grids, teams of robots, gene networks, and groups of animals. The complicated dynamics of individual system components, e.g. the stochastic power consumption demand of individual buildings in a neighborhood, and the interactions between these components via the network, e.g. load balancing between neighborhoods, allow networked systems to produce rich, complicated behaviors, e.g. fulfilling the overall demand for power consumption while ensuring that no load on the network is high enough to trip a blackout. Such dynamic patterns have been studied by diverse communities including physics, biology and computer science <ref type="bibr" target="#b23">[23,</ref><ref type="bibr" target="#b15">15]</ref>. However, these approaches have been domain-specific and thus how to formally characterize and use dynamic patterns is still an open question.</p><p>In this paper, we propose a novel logic called Spatial Temporal Logic (SpaTeL) to describe such high-level behaviors of networked systems. Our formulation combines spatial logic, which can be used to describe properties of the system across space such as "The power consumption in neighborhood A and in the adjacent neighborhood B remains below 150 MW and the combined power consumption of the two neighborhoods does not exceed 200 MW", with temporal logic, which can be used to describe properties of the system across time, such as "The power consumption never exceeds 150 MW for longer than 20 minutes and always exceeds 20 MW for 24 hours." With SpaTeL, we can express how a system evolves across space and time with properties such as "The power consumption in A and B each never exceeds 150 MW for longer than 20 minutes and the combined consumption is always between 20 MW and 200MW for 24 hours".</p><p>The spatial component of SpaTeL is based on Tree Spatial Superposition Logic (TSSL), which was introduced in <ref type="bibr" target="#b2">[2]</ref> for supervised classification of patterns. TSSL is defined with respect to the quad tree data structure that is widely used in pattern recognition. Quad trees are constructed by recursively partitioning images into quadrants. TSSL is based on Linear Spatial-Superposition-Logic (LSSL), which was developed in <ref type="bibr" target="#b16">[16]</ref>. LSSL was successfully employed to specify and to detect the onset of electrical spirals in networks of cardiac myocytes, and the authors devised a method for learning an LSSL formula from examples of spatial patterns. TSSL was introduced in order to deal with the entire quad tree representation of the space instead of just a path. An example of a TSSL property is "The average intensity of the image is less than 0.5 and the average intensity of the northwest quadrant is less than 0.25". Given a quad tree and a TSSL formula, the quantitative semantics of TSSL can be used to describe how well the given tree satisfies the formula. If this value is high and positive, then the tree is a very good example of the pattern; if this value is negative, then the tree does not satisfy the pattern; and if the value is close to 0 a small change to the tree could affect whether or not it satisfies the given pattern. The authors of <ref type="bibr" target="#b2">[2]</ref> performed parameter synthesis for a reaction diffusion network by optimizing the quantitative semantics of the steady-state system behavior with respect to a given TSSL formula that described desirable system behavior.</p><p>The temporal component of SpaTeL is based on Signal Temporal Logic (STL), a predicate temporal logic defined with respect to continuous-valued signals <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b11">11]</ref>. STL formulae describe how inequalities defined over a signal evolve over time, e.g. "The squared distance from the origin (x 2 + y 2 ) is greater than or equal to 2 within 5 s of system initialization." Quantitative semantics can also be defined for an STL formula that quantify how well a given signal satisfies a given STL formula. STL has proven a useful tool for supervised learning from continuous signals. Parametric signal temporal logic (PSTL) is a version of STL in which physical constants and time bounds are replaced with free parameters, e.g. "(x 2 + y 2 ) &lt; π within τ seconds." In <ref type="bibr" target="#b17">[17]</ref>, the quantitative semantics of STL was used to find a parameterization of a given PSTL formula that described system output data. In <ref type="bibr" target="#b19">[19]</ref> and <ref type="bibr" target="#b18">[18]</ref>, these methods were extended to supervised and unsupervised learning applications, respectively. A similar supervised learning problem with respect to Metric Interval Temporal Logic (MITL) was solved in <ref type="bibr" target="#b4">[4]</ref>.</p><p>In this paper, we combine TSSL and STL to form SpaTeL. SpaTeL describes how a networked system (whose state can be encapsulated by an image) evolves over time. We define quantitative semantics for this logic that describes how well a given execution of a system satisfies the given formula. We show how SpaTeL can be used in the analysis of networked systems via statistical model checking and in the control of systems via parameter synthesis. Our proposed algorithms are evaluated in simulations of a networked reaction-diffusion system used to describe skin pigmentation in animals and a smart electrical power grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Several logics have been proposed for specifying the behavior and the spatial structure of concurrent systems <ref type="bibr">[9]</ref> and for reasoning about the topological <ref type="bibr" target="#b5">[5]</ref> or directional <ref type="bibr" target="#b7">[7]</ref> aspects of the interacting entities. In topological reasoning <ref type="bibr" target="#b5">[5]</ref>, the spatial objects are sets of points and the relation between them is preserved under translation, scaling and rotation. In directional reasoning, the relation between objects depends on their relative position. These logics are usually highly computationally complex <ref type="bibr" target="#b7">[7]</ref> or even undecidable <ref type="bibr" target="#b22">[22]</ref>. Even though there has been a lot work done in spatial logics and temporal logics with applications to several domains <ref type="bibr" target="#b8">[8,</ref><ref type="bibr" target="#b13">13]</ref>, spatiotemporal reasoning is scarcely explored. To the best of our knowledge, the available results are mainly theoretical <ref type="bibr" target="#b5">[5,</ref><ref type="bibr" target="#b6">6,</ref><ref type="bibr" target="#b20">20]</ref> and lack real practical applications such as those provided in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">NETWORKED DYNAMICAL SYSTEMS AND QUAD TRANSITION SYSTEMS</head><p>In this section, we formalize the notion of a networked dynamical system and describe the process of abstracting such a system to a quad transition system (QTS) <ref type="bibr" target="#b2">[2]</ref>, the model with respect to which SpaTeL is defined. A networked system S can be modeled as a K × K square grid of K 2 subsystems Si,j. We use x(t) ∈ R K×K×N + to denote the state of the system at time t, t = 0, . . . , T where xi,j(t) ∈ R N + denotes the state of sub-system Si,j. Each sub-system evolves according to a (possibly non-deterministic) difference relation. Without loss of generality, we will assume that K is a power of two, i.e. K = 2 k . A square sub-system of S is a collection of adjacent subsystems of S denoted Si 1 :i 2 ,j 1 :j 2 where 1</p><formula xml:id="formula_0">≤ i1 ≤ i2 ≤ K, 1 ≤ j1 ≤ j2 ≤ K and j2 -j1 = i2 -i1 is a power of 2. The state of Si 1 :i 2 ,j 1 :j 2 at time t is denoted as xi 1 :i 2 ,j 1 :j 2 (t) = [xi,j(t)]i=i 1 ,...,i 2 ,j=j 1 ,...,j 2 .</formula><p>A quad tree is a representation of x(t) given as a quarternary tree structure T (t) = (V (t), R(t)) where each vertex v ∈ V (t) represents the state of a square sub-system of S. The set V (t) is constructed by recursively partitioning x(t) into quarters, e.g. if V (t) is initially v1 = x(t), then v2 . . . v5, which represent four K/2 × K/2 square subsystems of S would be added to V . The recursive partitioning hap-</p><formula xml:id="formula_1">pens k = log 2 (K) times. The relation R ⊂ V (t) × V (t) is defined such that (v, v ) ∈ R(t) ⇔ v was constructed from partitioning v.</formula><p>The concept of a Quad Transition System (QTS) was introduced in <ref type="bibr" target="#b2">[2]</ref> as a compact representation of quad-trees. A quad transition system is a tuple QT S := (A, a0, τ, Σ, [.], L) where A is a set of states, a0 ∈ A is an initial state, τ ⊆ A×A is a transition relation such that for every state a ∈ A, 1 ≤ |{a|(a, a ) ∈ τ }| ≤ 4. Σ is a set of variables, and From the state of the system S at time t, we can construct the QTS Q(t) := (A(t), a0(t), τ (t), Σ, [.](t), L(t)) via the algorithm given in <ref type="bibr" target="#b2">[2]</ref>. In this paper, we suppress the dependence of the relation [.](t) on time. We note that in contrast to transition systems typically used in formal methods applications, the QTS constructed via this algorithm represents the spatial relationships (patterns) of the system at a particular time. A trace corresponding to a trajectory x : {0, . . . , T } → R K×K×N + is a function Q : {0, . . . , T } → Q where Q is the space of quad transition systems. The set of all traces that a networked system S can produce is called the language of S and is denoted as L(S). The technical details of the QTS construction are omitted, but the relationship of the constructed QTS to the original networked system S is illustrated in the following example.   Example 1. A 4 by 4 checkerboard can be characterized by the QTSs shown in Figure <ref type="figure" target="#fig_2">1</ref>  <ref type="bibr" target="#b2">[2]</ref>. Each subsystem Si,j is the (i, j)th cell of the checkerboard with state xi,j(t) = [Ki,j(t), Wi,j(t)] ∈ {0, 1} 2 , where xi,j(t) = [1, 0] if the square is black and xi,j(t) = [0, 1] if the square is white. The set of variables is defined as Σ = {K, W } which represent the proportion of cells of a particular subsystem that are black and white, respectively. The QTS is constructed from the quad tree by first aggregating all of the states on the bottom level of the tree with equivalent values xi,j(t) into QTS states. The valuations of these states are defined as [[a](K), [a](W )] = xi,j(t). a2(t) and a3(t) correspond to the black and white cells of the checkerboard, respectively. Each of these states is assigned a self-transition. <ref type="bibr">Next</ref> This process continues until a state a0(t) that denotes the root of the quad tree is constructed.</p><p>At some point t ∈ {0, . . . , T }, the color of all of the cells inverts. This flipped colors are represented by the QTS Q(t+ 1). Note that in this case, the states a0(t + 1), a1(t + 1) have the same values of K and W and the same transition between them as a0(t), a1(t). This is because both x(t) and x(t + 1) have the property that the neighbors of any given cell Si,j are the opposite color from Si,j. However, the values of K and W associated with a2(t + 1) and a3(t + 1) are the opposite of a2(t) and a3(t), which demonstrates the color inversion at time t. Definition 1. (Labeled paths) Given a set B of labels representing the spatial directions, a labeled path (lpath) of a QTS is an infinite sequence π B = a0a1a2 . . . of states such that (ai, ai+1) ∈ τ and L(ai, ai+1) ∩ B = 0, ∀i ∈ N. We denote the set of all labeled paths starting in state a(t) as LP ath B (a(t)) and the i-th element of a path π B as π B i . For example, in Fig. <ref type="figure" target="#fig_2">1</ref></p><formula xml:id="formula_2">(c), LP ath B (a0) = {a0a1a2a2 . . .} if B = {N W, SE}.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SPATEL: SPATIAL TEMPORAL LOGIC</head><p>In this section, we define the syntax and qualitative and quantitative semantics of Spatial Temporal Logic (SpaTeL).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Syntax</head><p>SpaTeL has a nested syntax where inner spatial formulae are modified by temporal and logical operators. Spatial formulae are assertions about the spatial properties (patterns) of a networked system at a particular time instance, i.e. are defined with respect to a QTS at a single time instance. When the spatial formulae are modified by temporal and logical operators, the resulting SpaTeL formula express behaviors of sequences of patterns, i.e. are defined with respect to traces of a networked system. Definition 2. (SpaTeL syntax) The syntax of a spatial formula is defined as</p><formula xml:id="formula_3">ϕ ::= |m ∼ d|¬ϕ|ϕ1 ∧ ϕ2|∃B ϕ|∀B ϕ| ∃Bϕ1U k ϕ2|∀Bϕ1U k ϕ2,<label>(1)</label></formula><p>where <ref type="figure"></ref>and<ref type="figure">m</ref> ∈ Σ where Σ is as defined for a QTS. U k and are read as "until" and "next". The syntax of a SpaTeL formula is defined as</p><formula xml:id="formula_4">∼∈ {≥, ≤}, d ∈ [0, b], b ∈ R+, k ∈ N&gt;0, B ⊆ D := {N W, N E, SE, SW } with B = ∅,</formula><formula xml:id="formula_5">Φ ::= ϕ|¬Φ|Φ1 ∧ Φ2|Φ1UI Φ2, (<label>2</label></formula><formula xml:id="formula_6">)</formula><p>where I is a time interval such that I := [I1, I2), I1, I2 are non-negative and finite, and ϕ is a spatial formula.</p><p>Other spatial and temporal operators can be derived from the until operator as follows:</p><formula xml:id="formula_7">∃BF k ϕ := ∃B U k ϕ ∃BG k ϕ := ¬∀BF k ¬ϕ ∀BF k ϕ := ∀B U k ϕ ∀BG k ϕ := ¬∃BF k ¬ϕ FI Φ := UI Φ GI Φ := ¬FI ¬Φ.<label>(3)</label></formula><p>At this point, it becomes clear that SpaTeL is an integration of TSSL <ref type="bibr" target="#b2">[2]</ref> and Signal Temporal Logic (STL) <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b19">19]</ref>. Its spatial formulae share the same syntax with TSSL, while the temporal operators are defined similarly to their STL counterparts with predicates replaced by spatial formulae. At first glance, it may seem that requiring a spatial formula to be nested inside a temporal formula unnecessarily diminishes the expressivity of the logic, i.e. eliminates the interaction between temporal and spatial aspects. However, as pointed out in <ref type="bibr" target="#b20">[20]</ref>, allowing spatial and temporal operators to be nested arbitrarily can lead to undecidable cases. To further combat undecidability, we bounded time and space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Semantics</head><p>We define the qualitative semantics of SpaTeL as follows.</p><p>Definition 3. (Qualitative Semantics of SpaTeL) Let Q be a trace of a networked system. The qualitative semantics of SpaTeL are defined recursively as 1</p><formula xml:id="formula_8">(Q, t) |= ¬Φ ⇔ (Q, t) |= Φ (Q, t) |= Φ1 ∧ Φ2 ⇔ (Q, t) |= Φ1 ∧ (Q, t) |= Φ2 (Q, t) |= Φ1U [I 1 ,I 2 ) Φ2 ⇔ ∃t ∈ [t + I1, t + I2) : (Q, t ) |= Φ2 ∧∀t ∈ [t, t ), (Q, t ) |= Φ1 (Q, t) |= ϕ ⇔ (Q, a0, t) |= ϕ (Q, a, t) |= (Q, a, t) |= m ∼ d ⇔ [a(t)](m) ∼ d (Q, a, t) |= ϕ1 ∧ ϕ2 ⇔ (Q, a, t) |= ϕ1 ∧ (Q, a, t) |= ϕ2 (Q, a, t) |= ¬ϕ ⇔ (Q, a, t) |= ϕ (Q, a, t) |= ∃B ϕ ⇔ ∃a (t) : ((a(t), a (t)) ∈ τ (t) ∧ L(t)(a(t), a (t)) ∩ B = ∅), (Q, a , t) |= ϕ (Q, a, t) |= ∀B ϕ ⇔ ∀a (t) : ((a(t), a (t)) ∈ τ (t) ∧ L(t)(a(t), a (t)) ∩ B = ∅), (Q, a , t) |= ϕ (Q, a, t) |= ∃Bϕ1U k ϕ2 ⇔ ∃π B ∈ LP aths B (a(t)) : ∃i ∈ (0, k] : (Q, π B i , t) |= ϕ2 ∧ ∀j ∈ [0, i), (Q, πj, t) |= ϕ1 (Q, a, t) |= ∀Bϕ1U k ϕ2 ⇔ ∀π B ∈ LP aths B (a(t)) : ∃i ∈ (0, k] : (Q, π B i , t) |= ϕ2 ∧ ∀j ∈ [0, i), (Q, πj, t) |= ϕ1.</formula><p>The trace Q satisfies Φ if (Q, 0) |= Φ. The qualitative semantics can be used to check whether a model satisfies or violates a dynamic pattern expressed in SpaTeL. However, it does not provide any information about how strongly the property is satisfied or violated. Quantitative semantics were proposed in <ref type="bibr" target="#b14">[14]</ref> and <ref type="bibr" target="#b12">[12]</ref> to provide a measure of satisfiability of a trace with respect to a STL formula. Similarly, <ref type="bibr" target="#b2">[2]</ref> proposes a quantitative semantics that measures satisfiability of a pattern with respect to a TSSL formula. In the following, we integrate these two sets of semantics. </p><formula xml:id="formula_9">ρt(¬Φ, Q, t) = -ρt(Φ, Q, t) ρt(Φ1 ∧ Φ2, Q, t) = min(ρt(Φ1, Q, t), ρt(Φ2, Q, t)) ρt(Φ1U [I 1 ,I 2 ) Φ2, Q, t) = sup t ∈[t+I 1 ,t+I 2 ) (min(ρt(Φ2, Q, t ), inf t ∈[t+I 1 ,t ) ρt(Φ1, Q, t ))) ρt(ϕ, Q, t) = ρs(ϕ, a0(t)) 1 (Q, t</formula><p>) is used to define the semantics of trace Q at time t (not to be confused with the value of Q at time t, Q(t)). Similarly, (Q, a, t) is used to define the semantics of trace Q at time t and state a. </p><formula xml:id="formula_10">B i ), inf j∈[0,i) 0.25 j ρs(ϕ1, π B j ))) ρs(∀Bϕ1U k ϕ2) = inf π B ∈LP ath B (a),i∈(0,k] (min(0.25 ρs(ϕ2, π B i ), inf j∈[0,i) 0.25 j ρs(ϕ1, π B j ))).</formula><p>With a slight abuse of notation, the quantitative semantics of a formula Φ with respect to a trace</p><formula xml:id="formula_11">Q is denoted ρt(Φ, Q) = ρt(Φ, Q, 0).</formula><p>Remark 1. We restrict the spatial configuration to QTSs constructed from a system S modeled as a K × K grid. The syntax and semantics of SpaTeL can easily be modified to describe a networked system with a spatial configuration that can be represented as a transition system constructed from a generic tree structure. Extension to systems with general configurations will be studied in the future.</p><p>Remark 2. The absolute value of this quantitative valuation can be viewed as a measure of "distance to satisfaction". In other words, larger values correspond to traces that satisfy the formula better than traces with smaller quantitative valuation. Therefore, traces with a larger quantitative valuation are expected to conform quite strongly to the spatial and temporal patterns described by the given formula. For this reason, we refer to the value of the quantitative semantics of a formula with respect to a trace as its degree of satisfaction.</p><p>Remark 3. Discounting reduces the effect of deeper nodes in a quad tree, which correspond to more local portions of the network. This leads to a better description of global patterns.</p><p>We now show that given a trace Q and a SpaTeL formula Φ the sign of the quantitative evaluation ρt is consistent with the violation or satisfaction of the formula. That is, if ρt(Φ, Q, 0) is positive, then Q satisfies Φ and if it is negative, Q does not satisfy Φ.</p><p>Theorem 1 (Soundness). Let Φ be a SpaTeL formula and Q be a trace of a networked system. Then, the following properties hold for the two semantics:</p><formula xml:id="formula_12">ρt(Φ, Q, 0) &gt; 0 ⇒ Q |= Φ ρt(Φ, Q, 0) &lt; 0 ⇒ Q |= Φ (4)</formula><p>Proof. (Sketch) Our previous results in <ref type="bibr" target="#b2">[2]</ref> showed that the following properties hold for the spatial fragment of Spa-Tel:</p><formula xml:id="formula_13">ρs(ϕ, a0) &gt; 0 ⇒ (Q, a, t) |= ϕ ρs(ϕ, a0) &lt; 0 ⇒ (Q, a, t) |= ϕ<label>(5)</label></formula><p>SpaTeL is a special case of STL <ref type="bibr" target="#b11">[11]</ref> where the predicates defined over signals are substituted with a TSSL spatial formula. The proof of soundness for STL can be then derived by structural induction on the operational semantics following the ideas from <ref type="bibr" target="#b11">[11]</ref>. Now, we define the QTS max distance, a measure of similarity of two given QTSs. Definition 5. (QTS Max Distance) The max distance of two QTSs Q (1) = (A (1) , a</p><p>(1) 0 , τ (1) , Σ, [.] (1) , L (1) ) and Q (2) = (A (2) , a</p><p>(2) 0 , τ (2) , Σ, [.] (2) , L (2) ) is defined as: 1) , a (2) , k) 1) , a (1) ) ∈ τ (1) ∧ (a (2) , a (2) ) ∈ τ (2)   max d∈D n∞(a</p><formula xml:id="formula_14">d∞(Q (1) , Q (2) ) = n∞(a (1) 0 , a (2) 0 , 0) where n∞ : A × A × N → [0, b] such that: n∞(a<label>(</label></formula><formula xml:id="formula_15">=          1 4 k max m∈Σ |[a (1) ] (1) (m) -[a (2) ] (2) (m)| if (a<label>(</label></formula><formula xml:id="formula_16">(1) d , a<label>(2)</label></formula><formula xml:id="formula_17">d , k + 1) otherwise</formula><p>We now introduce a second theorem, showing that given a property Φ, if two bounded traces of QTS are similar enough, i.e. their max distance is less than the robustness value for the given formula, then if one trace satisfies the formula Φ implies that the other trace satisfies the same formula.</p><p>Theorem 2 (Correctness). Given two traces Q (1) (t) and Q (2) (t) of bounded length T then:</p><formula xml:id="formula_18">(Q (1) , 0) |= Φ∧ D∞ ∞ &lt; ρt(Φ, Q (1) , 0) ⇒ (Q (2) , 0) |= Φ</formula><p>with D∞ defined as:</p><formula xml:id="formula_19">D∞ = [d∞(Q (1) (0), Q (2) (0)), • • • , d∞(Q (1) (T -1), Q (2) (T -1))]</formula><p>Proof. (Sketch) The proof for the temporal fragment of SpaTeL is analogous to the one for STL in <ref type="bibr" target="#b14">[14]</ref>. We provide here a sketch for the proof for the nested spatial fragment:</p><formula xml:id="formula_20">(Q (1) , t) |= ϕ ∧ d∞(Q (1) (t), Q (2) (t)) &lt; ρs(ϕ, a<label>(1)</label></formula><formula xml:id="formula_21">0 (t)) ⇒ (Q (2) , t) |= ϕ</formula><p>We can distinguish the following cases: case ϕ := : in this case the theorem is true following the definition of the qualitative semantics.</p><p>case ϕ := m ∼ d: This proof assumes ∼:= " ≥ ". A similar proof can be derived from ∼:= " ≤ ". We have that:</p><formula xml:id="formula_22">d∞(Q (1) (t), Q (2) (t)) &lt; ρs(m ≥ d, Q (1) (t)) = [a (1) 0 (t)] (1) (m) -d</formula><p>Moreover, by the definition of d∞ we have that:</p><formula xml:id="formula_23">|[a (1) 0 (t)] (1) (m) -[a (2) 0 (t)] (2) (m)| ≤ d∞(Q (1) (t), Q (2) (t)) [a (1) 0 (t)] (1) (m) -|[a (2) 0 (t)] (2) (m) -[a (2) 0 (t)] (2) (m)| -d &gt; 0 [a (1) 0 (t)] (1) (m)-|[a (2) 0 (t)] (2) (m)-[a (2) 0 (t)] (2) (m)| ≤ [a (2) 0 (t)] (2) (m)</formula><p>From Theorem 1 we have that:</p><formula xml:id="formula_24">[a (2) 0 (t)] (2) (m) -d &gt; 0 ⇒ ρt(m ≥ d, Q (2) (t)) &gt; 0 ⇒ (Q (2) , t) |= ϕ</formula><p>all other cases: if (Q (1) , t) |= ϕ then we have:</p><formula xml:id="formula_25">ρs(ϕ, a (1) 0 (t)) =            (1): 1 4 j b: j ∈ N or (2): 1 4 j ([a (1) (t)] (1) (m) -d) : j ∈ N, a<label>(1)</label></formula><p>∈ A (1) , m ∈ Σ Situation (1) may occur when one of the subformulae of ϕ is and the proof is equivalent to the case of ϕ := . Situation (2) can be proved in a similar way as the case ϕ := m ∼ d.</p><p>Example 1. cont'd. The original checkerboard pattern can be described by a TSSL formula</p><formula xml:id="formula_26">∀B * F1((∀ {SW,N E} ((W ≥ 1)) ∧ (∀ {N W,SE} (W ≤ 0)))</formula><p>where B * = {SW, N E, N W, SE}. With SpaTeL, we can formulate the spatial-temporal pattern "All the tiles in the checkerboard flip their colors simultaneously at some time t ∈ (0, T ]" as</p><formula xml:id="formula_27">Φ := F (0,T ] ((∀B * F1((∀ {SW,N E} (W ≥ 1)) ∧(∀ {N W,SE} (W ≤ 0))))∧ G (0,1] (∀B * F1((∀ {N W,SE} (W ≥ 1))∧ (∀ {SW,N E} (W ≤ 0)))))).<label>(6)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">VERIFICATION AND SYNTHESIS</head><p>In this section we show that standard model checking and parameter synthesis algorithms presented in <ref type="bibr" target="#b29">[29]</ref> and <ref type="bibr" target="#b2">[2]</ref> can easily be applied to SpaTeL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Statistical Model Checking</head><p>We are interested in determining whether the traces produced by a networked system S satisfy a given SpaTeL formula Φ. In general, a networked system produces traces non-deterministically due to variations in initial conditions, system parameters, or un-modeled dynamics. Let the nondeterminism of the system be described by a random variable U with range space RU such that a given realization u generates a unique trace Qu and L(S) = u∈R U Qu. Enumerating each trace Qu and checking Qu |= Φ is infeasible, as this set is (possibly) countably infinite. A traditional model checking algorithm <ref type="bibr" target="#b3">[3]</ref>, in which a formal proof of whether or not all traces produced by S satisfy Φ is generated, is also likely infeasible to implement due to the potential size and complexity of networked systems. Further, the question of whether or not all traces of S satisfy Φ may be too narrow of an inquiry, as we may only be interested in how frequently Φ is satisfied. Therefore, we propose to characterize the behavior of S by using the model to randomly generate a finite number of traces and solving the broader (and more feasible) statistical model checking problem.</p><p>Problem 1. A model of a networked dynamical system S and a SpaTeL formula Φ are given. Let p = P r[Q |= Φ], c ∈ ( 1 2 , 1) be a confidence level, and δ &gt; 0 be a half-interval size. Find an interval (p0, p1) where 0 ≤ p0 &lt; p1 ≤ 1 and p1 -p0 = 2δ such that P r[p ∈ (p0, p1)] ≥ c.</p><p>Problem 1 asks for a confidence interval (p0, p1) because this interval can be calculated from a finite number of traces of S while explicitly calculating p in general would require an infinite number of traces.</p><p>Example 1. cont'd. Each of the tiles Si,j flips its color at a random time Ti,j distributed non-uniformly over the range li,j, . . . , hi,j. Let U be the random matrix [Ti,j]. We want to estimate (via a confidence interval) the probability that all the tiles in the checkerboard flip their color simultaneously at some time t, i.e. the probability of satisfying <ref type="bibr" target="#b6">(6)</ref>.</p><p>Our statistical model checking procedure is summarized in Algorithm 1. Algorithm 1 uses Bayesian Interval Estimation, an algorithm presented in <ref type="bibr" target="#b29">[29]</ref> to recursively construct a confidence interval for the mean of a Bernoulli random variable. We define an i.i.d. sequence of Bernoulli random variables {χi} N i=1 such that χi = I(Qu i |= Φ), <ref type="bibr" target="#b7">(7)</ref> where ui is a sample drawn from U and I is the indicator function. The sample mean of the variables {χi} N i=1 thus approaches p as defined in Problem 1 as N → ∞. For a finite value of N , we can estimate an interval [p -δ, p + δ] such that</p><formula xml:id="formula_28">P r[p ∈ (p -δ, p + δ)] ≥ c,<label>(8)</label></formula><p>where δ and c are as defined in Problem 1. This interval is called the "100c percent Bayesian interval estimate of p". The Bayesian interval estimation algorithm proceeds by collecting samples of χi and recursively applying Bayes' rule f (p|χi, . . . , χn) = f (χ1, . . . , χn|p)g(p)</p><formula xml:id="formula_29">1 0 f (χ1, . . . , χn|v)g(v)dv ,<label>(9)</label></formula><p>where f and g are probability density functions (pdfs), until the estimated interval achieves the desired confidence level c. Recursively applying Bayes' rule requires us to have some prior pdf of p over the interval [0, 1] before collecting the first sample χ1. We use β priors as suggested in <ref type="bibr" target="#b29">[29]</ref>, where a β random variable has a pdf</p><formula xml:id="formula_30">∀p ∈ [0, 1] g(p, α, β) = 1 B(α,β) p α-1 (1 -p) β-1 B(α, β) = 1 0 t α-1 (1 -t) β-1 dt.<label>(10)</label></formula><p>and a cumulative density function (cdf)</p><formula xml:id="formula_31">F α,β (p) = p 0 g(t, α, β)dt.<label>(11)</label></formula><p>In the absence of a principled guess of the prior density of p, we make the assumption of uniform density, e.g. F α,β (p) = p, by setting α = β = 1. If we use the β prior, the posterior mean p can be calculated as</p><formula xml:id="formula_32">p = X + α n + α + β<label>(12)</label></formula><p>where X = n i=1 χi. The posterior probability is:</p><formula xml:id="formula_33">P r[p ∈ (p0, p1)] = F (X+α,n-X+β) (p1) -F (X+α,n-X+β) (p0). (<label>13</label></formula><formula xml:id="formula_34">)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Parameter Synthesis</head><p>Consider the case in which in addition to stochastic parameters U , the traces of S are influenced by some design parameters Π ∈ P. Let Qu,Π be the unique trace associated with realization u and parameters Π such that L(S) = u∈R U Π∈P Qu,Π. We wish to find a parameterization Π * such that the traces {Qu,Π * }u∈R U strongly satisfy some desirable property Φ on average. Formally, we have: Problem 2. A model of a system S, a SpaTeL formula Φ, and ranges of system parameters P = P1 × . . . P |Π| , Pi ⊂ R, i = 1, . . . , |Π| are given. Determine the parameterization Π * ∈ P such that the average degree of satisfaction of the resulting traces with respect to Φ is maximized.</p><p>Example 1. cont'd. Assume that the maximum possible flipping time hi,j for each subsystem Si,j is randomly selected according to an Algorithm 1: Statistical Model Checking Input: Φ, S, δ ∈ (0, 1/2), c ∈ (1/2, 1), α, β Output: (p0, p1) 1 n ← 0 (number of traces drawn so far) ; 2 X ← 0 (number of traces satisfying Φ) ; 3 γ ← 0 (coverage probability of the interval (p0, p1)) ; 4 while γ &lt; c do 5 Qu ← draw a sample trace of the system ; The temporal version of problem 2 has been solved in <ref type="bibr" target="#b1">[1,</ref><ref type="bibr" target="#b26">26]</ref>.We study the spatio-temporal case in this paper. Problem 2 can be formulated as an optimization problem:</p><formula xml:id="formula_35">6 n ← n + 1 ; 7 if (Qu |= Φ) then 8 X ← X + 1;</formula><formula xml:id="formula_36">Π * = arg max Π∈P EU [ρt(Φ, Qu,Π)]. (<label>14</label></formula><formula xml:id="formula_37">)</formula><p>We do not evaluate the expectation directly but rather approximate it by generating N traces {Qu i ,Π} N i=1 and calculating the sample mean of the degree of satisfaction. In practice, we have found that relatively small sample sizes N sufficed for parameter synthesis.</p><p>In <ref type="bibr" target="#b2">[2]</ref>, the minimum value of the degree of satisfaction over all possible executions was maximized. The authors argue that if we make sure that the lowest possible quantitative valuation (which corresponds to the worst execution of the system with respect to the given specification) is still positive, then every possible execution will satisfy the specification. We have replaced the minimum degree of satisfaction with the sample mean because we deal with stochastic systems such that even for the optimal parameters, there may still be some traces among the samples where the specification is not satisfied. Further, the sample mean is a better indicator of the behavior of a typical execution of the system than the robustness of the "worst case" trace.</p><p>The process of parameter synthesis using particle swarm optimization is summarized in Algorithm 2. Many continuous optimization methods can be used to solve <ref type="bibr" target="#b14">(14)</ref>. In this paper, we use particle swarm optimization (PSO) <ref type="bibr" target="#b24">[24]</ref>, a randomized search algorithm in which a collection of points in the search space are updated at each iteration to move closer (on average) to a global optimal solution. The choice of PSO was motivated by <ref type="bibr" target="#b2">[2]</ref> where it was chosen due to its inherent distributed nature and its ability to operate on ir-regular search spaces. In particular, PSO does not require a differentiable objective function. The PSO procedure begins by randomly initializing a set of m particles with positions zi ∈ P and velocities vi ∈ V ⊆ R |Π| . The position of a particle represents a candidate solution to <ref type="bibr" target="#b14">(14)</ref> and the velocity represents a search direction from the current solution. After the particles are generated, m sets of N traces {Qu j ,z i } N j=1 are produced and used to evaluate <ref type="bibr" target="#b14">(14)</ref> for each point represented by the particles. The position of the ith particle that has performed the best so far is stored in the variable z best i and the optimal value of z best i is stored in the variable z best . After all particles have been evaluated, their positions and velocities are updated according to the relations</p><formula xml:id="formula_38">vi ← W vi + η(0, rp)(z best i -zi) + η(0, rg)(z best -zi) zi ← zi + vi.</formula><p>(15) η(0, rj) represents a random number uniformly distributed over the interval [0, rj]. The parameters W ∈ R, rp, and rg are specified by the user. The iterative process of updating particles and evaluating their performance proceeds until a termination criterion is met, e.g., z best does not change after k consecutive iterations. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Complexity</head><p>The time complexity of executing either Algorithm 1 or 2 is difficult to compute explicitly. Each algorithm proceeds in an iterative fashion until a convergence criterion is met. Thus, the complexity depends on system-dependent convergence rates that can vary widely among application areas. Some insight into how different stopping criteria affect convergence of particle swarm optimization for a given objective function is given in <ref type="bibr" target="#b28">[28]</ref>. Here, we establish the complexity of computing the degree of satisfaction for an execution trace of a networked dynamical system where the size of the network is K × K and the traces have a length of T . This is the core computational procedure that is executed during every iteration of each algorithm. The temporal and spatial portions of SpaTeL are inspired by STL and TSSL, respectively. The worst-case complexity of computing the degree of satisfaction of an STL formula was established as O(T 2lt ) in <ref type="bibr" target="#b12">[12]</ref> where lt is the maximum number of nested temporal until operators in the formula. The quantitative semantics of Spa-TeL is defined in such a way that the quantitative valuation for spatial and temporal until operators are computed using the same expressions. Therefore, computing the spatial portion of the SpaTeL quantitative valuation for a given quad tree has a complexity of O(4 ns .n 2ls s ) where ns = log K is the depth of the tree and ls is the maximum number of nested spatial until operators. Finally, constructing of a quad tree from a K × K grid needs O(K 2 log K) operations. Consequently, the total complexity is O(T 2lt K 4 (log K) 2ls+1 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CASE STUDIES</head><p>The matlab package SPATEL, which includes our implementations of Algorithms 1 and Algorithms 2 and the simulation software we used in our case studies, is available at http://sites.bu.edu/hyness/software/. Inspired by <ref type="bibr" target="#b27">[27]</ref>, we consider a reaction-diffusion system that describe the generation of skin pigments that produce spots in animals. Following <ref type="bibr" target="#b2">[2]</ref>, we consider a 32×32 reactiondiffusion system with two species. The concentrations of the species in Si,j evolve according to the ODE</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Reaction-Diffusion System</head><formula xml:id="formula_39">dx (1) i,j dt = D1(µ<label>(1)</label></formula><p>i,j -x</p><p>i,j ) + R1x</p><p>(1)</p><formula xml:id="formula_41">i,j x<label>(2)</label></formula><p>i,j -x</p><p>i,j + R2 dx</p><formula xml:id="formula_43">(2) i,j dt = D2(µ<label>(2)</label></formula><p>i,j -x</p><p>i,j ) + R3x</p><p>(1)</p><formula xml:id="formula_45">i,j x<label>(2)</label></formula><p>i,j + R4</p><p>i,j and x</p><p>i,j represent the concentration of each species at cell (i, j), µ</p><p>i,j and µ</p><p>(2) i,j are the inputs of the (i, j)th system Si,j from neighboring systems,</p><formula xml:id="formula_49">µ (n) i,j = 1 |νi,j| ν∈ν i,j x (n) ν ,<label>(17)</label></formula><p>νi,j is the set of indices of systems adjacent to Si,j, Di, i = 1, 2 are diffusion coefficients, and Ri, i = 1, . . . , 4 are the parameters that define the local dynamics for the two species. Fig. <ref type="figure" target="#fig_7">2</ref> shows the observed concentrations of species 1 at different time points for two different parameter choices. The more black cell (i, j) is, the larger the value of x (1) i,j . The two corresponding steady-state spatial patterns present at time t = 60 are called large spots (LS) and small spots (SS), respectively. In <ref type="bibr" target="#b2">[2]</ref>, the RIPPER supervised learning algorithm was used to learn the TSSL formulae ϕLS and ϕSS from examples of large and small spot patterns that were labeled manually. These formulae are too long to be displayed here. SpaTeL, a richer logic, can not only characterize these spatial patterns but also capture how they develop over time. Consider the following formulae: Φ2 : Formula Φ1 specifies that the SS pattern appears within the first 30 seconds and persists for 60 seconds after it emerges. Formula Φ2 is the conjunction of an expression which states that LS pattern emerges within the first 30 seconds and remains for the next 60 seconds and an expression which specifies that the SS pattern never occurs during the first 60 seconds, i.e. the large spots pattern is established unambiguously. The valuations of the quantitative semantics of a system execution with respect to ϕLS and ϕSS are plotted over time in Fig. <ref type="figure" target="#fig_8">3(b)</ref>. The figure shows that although this particular set of parameter lead to large spots pattern in steady state, the small spots pattern occur transiently during the system evolution.</p><formula xml:id="formula_50">Φ1 : F [0,30) G [0,60) ϕSS<label>(18)</label></formula><formula xml:id="formula_51">F [0,30) G [0,60) ϕLS ∧ G [0,60) ¬ϕSS.<label>(19)</label></formula><p>We applied the statistical model checking procedure (Algorithm 1) to estimate the probability that formula Φ1 holds for the Turing system. The results from using three different sets of diffusion rates, two different confidence levels c, and two different half-interval sizes δ are summarized in Table <ref type="table" target="#tab_2">1</ref>.</p><p>The system with the first set of parameters (1.44, 5.27) (selected by an expert) satisfies Φ1 with high probability. The other two parameterizations hold with very low probability. We also see that as c increases and δ decreases, the Table <ref type="table">2</ref>: Synthesized diffusion rates for the reactiondiffusion system when the objective is satisfaction of Φ1 with δ = 0.01 and c = 0.99. number of traces, and consequently the computation time, required to find the desired interval increases significantly.</p><p>Next, we applied the parameter synthesis procedure (Algorithm 2) to find a pair of diffusion coefficients that maximized the expected degree of satisfaction with respect to Φ1. We increased the number of traces at each iteration N and observed that the results improve as N grows (i.e., the synthesized parameter values correspond to higher probability of satisfaction). The results are illustrated in Table <ref type="table">2</ref>. Notice that computing the average quantitative valuation for only ten executions at every step results in a satisfaction probability as high as 88 %.  In this section, we apply our procedures to a simulation of a smart neighborhood electricity grid whose power consumption is controlled by demand-side management (DSM). Due to the growing share of fluctuating renewable sources such as wind and solar in power generation, it becomes increasingly difficult to maintain the balance between power production and consumption by only managing power generation. Recent advent of the smart grid, a more flexible and reliable grid, enables DSM systems to play a more active role in mitigating the effects of such intermittent resources <ref type="bibr" target="#b25">[25]</ref>. A DSM system controls power distribution in a network by varying the prices that consumers pay per unit of consumed power in response to consumer demand. Thus, when the demand for electricity is high, only those members of the market (network) that highly prioritize power consumption at that time will consume electricity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Smart Neighborhood Power Management</head><p>Consider a Smart Neighborhood Operator (SNO) that manages loads in commercial and residential buildings in a neighborhood as shown in Fig. <ref type="figure" target="#fig_3">4</ref>. The neighborhood has commercial buildings located at the northwestern quarter and residential buildings in the other quarters. There is an electrical vehicle (EV) charging station at the southeastern corner of each residential quarter. Following <ref type="bibr" target="#b10">[10]</ref>, at time t, inside each building ni(t) appliances are consuming actively with a rate ri kW with subscripts c, r and e denoting commercial building, residential building and EV station, respectively. The arrival distribution of appliances for building class i over the period [t, t+1] is Poisson distributed with a rate λi(Ui -pj(t))/Ui, where Ui is the utility of an appliance of class i and pj(t) is the broadcast price for neighborhood class j, j ∈ {c, r} with residential building and EV station charged by the same price. Once connected, an appliance continues to consume for a period of time τi which is exponentially distributed with rate µi. The goal of the SNO is to set the broadcast prices pj such that the loads of different areas and the whole neighborhood satisfy certain specified load constraints.</p><p>The statistical model checking procedure was used to ensure that the power system conformed to the specification "Always ensure that for each of the four 'neighborhoods', the power consumption level m is below 300 and the power consumption is below 200 in each of the neighborhoods' quadrants at least once per hour. Ensure that after 6 hours, the power consumption in all residential areas is above level 3." This is written in SpaTeL as Φ3 := G [0,18) F [0,1) (∀ (N W,N E,SW,SE) (m ≤ 300∧ ∀ (N W,N E,SW,SE) m ≤ 200))∧ G <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b18">18)</ref> (∀ (N E,SE,SW ) ∀ (N W,N E,SW ) m ≥ 3).</p><p>Table <ref type="table" target="#tab_4">3</ref> shows the probability of satisfaction for the above specification for different choices of daytime and nighttime residential power prices (RPD, RPN ). The parameters <ref type="bibr" target="#b3">(3,</ref><ref type="bibr" target="#b5">5)</ref> lead to a network that rarely violates the given specification. Altering these prices by even a small amount will cause the specification to be violated often. Now consider the case where we want to synthesize power prices so that: the total power consumption of the commercial buildings is always less than 150; the power consumption is below 150 in each EV station and below 25 in each of the residential neighborhoods in the first 12 hours; after 12 hours, the power consumption of each EV station is between 30 and 200; after 15 hours, the power consumption in all residential areas is above 5. In SpaTeL, these requirements are The design parameters are daytime and nighttime prices of the residential areas RPD, RPN and nighttime power price    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head><p>The advent of spatially distributed and networked cyberphysical systems has increased the demand for novel efficient spatio-temporal reasoning techniques. SpaTeL provides an intuitive formal framework to specify the emergent behaviors to be detected or to be enforced. We have demonstrated that SpaTeL can be used to specify, verify, and enforce desired system behaviors. Future research includes using SpaTeL to learn dynamic patterns directly from data and synthesizing control policies to ensure a given dynamic pattern.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">ACKNOWLEDGMENT</head><p>This work was partially supported by ONR under grant ONR N00014-14-1-0554 and NSF under grant CBET-0939511. E.B. and R.G. acknowledge the support of the Austrian FFG project HARMONIA (nr. 845631) and the Doctoral Program Logical Methods in Computer Science funded by the Austrian FWF. The authors would like to acknowledge Ebru Aydin Gol from Google Inc. for providing software and data for the reaction-diffusion system presented in <ref type="bibr" target="#b2">[2]</ref> and Bowen Zhang and Michael Caramanis from Boston University for their helpful insight on the smart neighborhood model.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>[.] : A → (Σ → [0, b]) is a function that assigns to each state a ∈ A and variable m ∈ Σ a value [a](m) ∈ [0, b], and L : τ → 2 D where D = {N W, N E, SW, SE} is a labeling function for the relation τ with the extra constraint that only one successor exists for every direction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: (a) Flipping checkerboard pattern. (b) A portion a the quad tree corresponding to the pattern at time t. (c) The derived QTSs at time t (before the flip) and t + 1 (after the flip).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Definition 4 .</head><label>4</label><figDesc>(Quantitative Semantics of SpaTeL) The quantitative valuation ρt of a SpaTeL spatial formula can be calculated according to the recursive quantitative semantics</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>and ρs( , a) = b ρs(m ∼ d, a) = (∼ is ≥)?([m](a) -d) : (d -[m](a)) ρs(¬ϕ, a) = -ρs(ϕ, a) ρs(ϕ1 ∧ ϕ2, a) = min(ρs(ϕ1, a), ρs(ϕ2, a)) ρs(∃B ϕ, a) = 0.25 max π B ∈LP ath B (a) ρs(π B 1 ) ρs(∀B ϕ, a) = 0.25 min π B ∈LP ath B (a) ρs(π B 1 ) ρs(∃Bϕ1U k ϕ2) = sup π B ∈LP ath B (a),i∈(0,k] (min(0.25 ρs(ϕ2, π</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>9 end 10 p 12 if p1 &gt; 1 then 13 ( 15 if p0 &lt; 0 then 16 ( 18 end 19 γ</head><label>910121315161819</label><figDesc>← (X + α)/(n + α + β) (compute posterior mean) ;11 (p0, p1) ← (p -δ, p + δ) (interval estimate) ; p0, p1) ← (1 -2δ, 1) 14 else p0, p1) ← (0, 2δ) 17end ← Posterior probability of p ∈ (p0, p1) computed by (13) 20 end exponential distribution with rate Π. A parameter synthesis problem is to determine the value of Π such that on average each tile flips its color as close to simultaneously as possible.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Algorithm 2 : 6 for 1 ≤ j ≤ N do 7 9 end 10 [ 11 Π</head><label>261791011</label><figDesc>Parameter Synthesis Input: Φ, S, P, N , (W, rp, rg, m), k Output: Π * 1 for 1 ≤ j ≤ m do 2 zi ← initialize particle positions; 3 vi ← initialize particle velocities 4 end 5 while Π * has changed during the last k iterations do Qu j ,z i ← draw a sample trace of the system ; 8 ρt(Φ, Qu j ,z i ) ← calculate quantitative valuation of Qu j ,z i with respect to Φ ; zi, vi] ← update particles according to (15) ; * ← the best position so far (z best ) 12 end</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Patterns generated by system (16) with R = [1, -12, -1, 16] and different diffusion parameters DLS = [5.6, 24.5] and DSS = [1.4, 5.3]. The steady state observations produce large spots (LS) and small spots (SS).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Time evolution of TSSL quantitative semantics for an execution of the reactiondiffusion system with parameter D = [D1, D2] = [5.6, 24.5] where LS emerges in steady state and SS emerges in transient state. (a) Generated patterns (b)ρs(ϕLS, Q(t)) and ρs(ϕSS, Q(t)) with t = 0, . . . , 60.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Smart neighborhood example: Configuration of the neighborhood.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>Φ4 := G [0,18) (∀NW (m ≤ 150)) ∧ G [0,12) (∀ (N E,SE,SW ) (∀ (N W,N E,SW ) m &lt; 25) ∧ (∀SE m ≤ 150))∧ G [12,18) (∀ (N E,SE,SW ) ∀SE (m ≤ 200 ∧ m ≥ 30)) ∧G [15,18) (∀ (N E,SE,SW ) ∀ (N W,N E,SW ) m ≥ 5).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 5</head><label>5</label><figDesc>illustrates a few traces that are executed with the final synthesized prices. The vast majority of the simulated traces satisfy the required specifications.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Traces generated the smart neighborhood model when (RPD, RPN ) = (4.15, 5.05) and (CPD, CPN ) = (19, 19.70).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>, d ∈ D is such that (a, a d ) ∈ τ and d ∈ L((a, a d )).</figDesc><table><row><cell cols="2">to a2(t) is annotated with the directions N W, SE. The val-</cell></row><row><cell cols="2">ues of [a](C) for the new states a and variables C ∈ Σ are</cell></row><row><cell cols="2">calculated according to</cell></row><row><cell>[a](C) =</cell><cell>[aNW ](C) + [aNE](C) + [aSE](C) + [aSW ](C) 4</cell></row><row><cell>where a d</cell><cell></cell></row><row><cell>, the states</cell><cell></cell></row><row><cell>in the next highest level of the quad tree are aggregated</cell><cell></cell></row><row><cell>into QTS states. States at this level of the tree with identi-</cell><cell></cell></row><row><cell>cal children are aggregated into the same QTS state. a1(t)</cell><cell></cell></row><row><cell>is the only QTS state constructed from this level because</cell><cell></cell></row><row><cell>every state has identical children. Transitions from a new</cell><cell></cell></row><row><cell>QTS state to an existing QTS state are constructed if the ex-</cell><cell></cell></row><row><cell>isting state represented a child of the new state in the quad</cell><cell></cell></row><row><cell>tree. The transitions are annotated with the direction of</cell><cell></cell></row><row><cell>the child's corresponding cell, e.g. the transition from a1(t)</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Satisfaction probabilities for Φ1. Each iteration took on average approximately 0.74 seconds on a machine with a 2.40 GHz processor and 8 GB RAM.</figDesc><table><row><cell>(D1, D2)</cell><cell>δ</cell><cell>c</cell><cell>p</cell><cell>n</cell></row><row><cell></cell><cell>0.05</cell><cell>0.95</cell><cell>0.95</cell><cell>156</cell></row><row><cell>(1.44,5.27)</cell><cell>0.05 0.01</cell><cell>0.99 0.95</cell><cell>0.95 0.95</cell><cell>538 3766</cell></row><row><cell></cell><cell>0.01</cell><cell>0.99</cell><cell>0.96</cell><cell>284</cell></row><row><cell></cell><cell>0.05</cell><cell>0.95</cell><cell>0.11</cell><cell>98</cell></row><row><cell>(5.6,24.5)</cell><cell>0.05 0.01</cell><cell>0.99 0.95</cell><cell>0.13 0.11</cell><cell>71 279</cell></row><row><cell></cell><cell>0.01</cell><cell>0.99</cell><cell>0.11</cell><cell>318</cell></row><row><cell></cell><cell>0.05</cell><cell>0.95</cell><cell>0.03</cell><cell>28</cell></row><row><cell>(0.2,20)</cell><cell>0.05 0.01</cell><cell>0.99 0.95</cell><cell>0.02 0.007</cell><cell>43 148</cell></row><row><cell></cell><cell>0.01</cell><cell>0.99</cell><cell>0.004</cell><cell>228</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3 :</head><label>3</label><figDesc>Satisfaction probabilities for Φ3. The price for the commercial district is fixed at 19. Each iteration required on average 0.85 seconds.</figDesc><table><row><cell>(RPD, RPN )</cell><cell>δ</cell><cell>c</cell><cell>p</cell><cell>n</cell></row><row><cell></cell><cell>0.05</cell><cell>0.95</cell><cell>0.95</cell><cell>117</cell></row><row><cell>(3.0,5.0)</cell><cell>0.05 0.01</cell><cell>0.99 0.95</cell><cell>0.95 0.94</cell><cell>238 3207</cell></row><row><cell></cell><cell>0.01</cell><cell>0.99</cell><cell>0.94</cell><cell>3291</cell></row><row><cell></cell><cell>0.05</cell><cell>0.95</cell><cell>0.69</cell><cell>103</cell></row><row><cell>(3.3,4.7)</cell><cell>0.05 0.01</cell><cell>0.99 0.95</cell><cell>0.72 0.72</cell><cell>104 1201</cell></row><row><cell></cell><cell>0.01</cell><cell>0.99</cell><cell>0.72</cell><cell>1200</cell></row><row><cell></cell><cell>0.05</cell><cell>0.95</cell><cell>0.04</cell><cell>45</cell></row><row><cell>(4,4)</cell><cell>0.05 0.01</cell><cell>0.99 0.95</cell><cell>0.02 0.02</cell><cell>43 113</cell></row><row><cell></cell><cell>0.01</cell><cell>0.99</cell><cell>0.02</cell><cell>110</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 :</head><label>4</label><figDesc>Synthesized power prices for the smart neighborhood example with δ = 0.01 and c = 0.99. of commercial areas CPN . We fixed the daytime power price of factories at 19. Algorithm 2 results in prices specified in Table4. The demand coefficients shift from daytime values λ i,d to nighttime values λi,n. The values of the simulation parameters were (rc, λ c,d , λc,n, Uc) = (20, 0.33, 0.33, 20), (rr, λ r,d , λr,n, Ur) = (4, 0.28, 1.02, 6), and (re, λ e,d , λe,n, Ue) = (9, 0.28, 1.02, 8).</figDesc><table><row><cell>N</cell><cell>(RP  *  D , RP  *  N , CP  *  N )</cell><cell>p</cell></row><row><cell>1</cell><cell>(4.69, 4.41, 19.70)</cell><cell>0.43</cell></row><row><cell>10</cell><cell>(4.42, 4.74, 19.70)</cell><cell>0.75</cell></row><row><cell>20</cell><cell>(4.40, 4.75, 19.70)</cell><cell>0.73</cell></row><row><cell>50</cell><cell>(4.15, 5.05, 19.70)</cell><cell>0.90</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>HSCC'15, April 14-16, 2015, Seattle, Washington</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Robustness-guided temporal logic testing and verification for stochastic cyber-physical systems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Abbas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hoxha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fainekos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ueda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Cyber Technology in Automation, Control, and Intelligent Systems (CYBER), 2014 IEEE 4th Annual International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A formal methods approach to pattern synthesis in reaction diffusion system</title>
		<author>
			<persName><forename type="first">E</forename><surname>Aydin Gol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bartocci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Belta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 53rd Annual Conference on Decision and Control</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Principles of model checking</title>
		<author>
			<persName><forename type="first">C</forename><surname>Baier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Katoen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>MIT press Cambridge</publisher>
			<biblScope unit="volume">26202649</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Data-driven statistical learning of temporal logic properties</title>
		<author>
			<persName><forename type="first">E</forename><surname>Bartocci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bortolussi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sanguinetti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Formal Modeling and Analysis of Timed Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="23" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Multi-dimensional modal logic as a framework for spatiotemporal reasoning</title>
		<author>
			<persName><forename type="first">B</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wolter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zakharyaschev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Intelligence</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="239" to="251" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Specifying and monitoring properties of stochastic spatio-temporal systems in signal temporal logic</title>
		<author>
			<persName><forename type="first">L</forename><surname>Bortolussi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Nenzi</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A decidable spatial generalization of metric interval temporal logic</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bresolin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Della Monica</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Montanari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sciavicco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of TIME 2010: the 17th International Symposium on Temporal Representation and Reasoning</title>
		<meeting>of TIME 2010: the 17th International Symposium on Temporal Representation and Reasoning</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010-09">Sept 2010</date>
			<biblScope unit="page" from="95" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Temporal logic based monitoring of assisted ventilation in intensive care</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bufo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bartocci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sanguinetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Borelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Lucangelo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bortolussi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ISoLA 2014: 6th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, Part II</title>
		<meeting>of ISoLA 2014: 6th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, Part II</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="volume">8803</biblScope>
			<biblScope unit="page" from="391" to="403" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A spatial logic for concurrency (part ii)</title>
		<author>
			<persName><forename type="first">L</forename><surname>Caires</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Cardelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">322</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="517" to="565" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Provision of regulation service reserves by flexible distributed loads</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Caramanis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">C</forename><surname>Paschalidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">G</forename><surname>Cassandras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bilgin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Ntakou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 51st Annual Conference on Decision and Control</title>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="3694" to="3700" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Efficient robust monitoring for STL</title>
		<author>
			<persName><forename type="first">A</forename><surname>Donzé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ferrère</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Aided Verification -25th International Conference, CAV 2013</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Saint Petersburg, Russia</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013">July 13-19, 2013. 2013</date>
			<biblScope unit="volume">8044</biblScope>
			<biblScope unit="page" from="264" to="279" />
		</imprint>
	</monogr>
	<note>Proceedings</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Robust satisfaction of temporal logic over real-valued signals</title>
		<author>
			<persName><forename type="first">A</forename><surname>Donzé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">On temporal logic and signal processing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Donzé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bartocci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Nickovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Grosu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Smolka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ATVA 2012: the 10th International Symposium on Automated Technology for Verification and Analysis</title>
		<meeting>of ATVA 2012: the 10th International Symposium on Automated Technology for Verification and Analysis</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="volume">7561</biblScope>
			<biblScope unit="page" from="92" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Robustness of temporal logic specifications for continuous-time signals</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Fainekos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Pappas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">410</biblScope>
			<biblScope unit="issue">42</biblScope>
			<biblScope unit="page" from="4262" to="4291" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Pattern formation in nonequilibrium physics</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Gollub</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Langer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reviews of Modern Physics</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">396</biblScope>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Learning detecting emergent betavior in networks of cardiac myocytes</title>
		<author>
			<persName><forename type="first">R</forename><surname>Grosu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Smolka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Corradini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wasilewska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Entcheva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bartocci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communication of ACM</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="97" to="105" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Mining requirements from closed-loop control models</title>
		<author>
			<persName><forename type="first">X</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Donze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Deshmukh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Seshia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control (HSCC)</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Anamoly detection in cyber-physical systems: A formal methods approach</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Belta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the 53rd IEEE Conference on Decision and Control</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Temporal logic inference for classification and prediction from data</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Medina Ayala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">Aydin</forename><surname>Gol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Belta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th international conference on Hybrid systems: computation and control</title>
		<meeting>the 17th international conference on Hybrid systems: computation and control</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="273" to="282" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Kontchakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kurucz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wolter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zakharyaschev</surname></persName>
		</author>
		<title level="m">Spatial logic + temporal logic = ? Handbook of Spatial Logics</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="497" to="564" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Monitoring temporal properties of continuous signals</title>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Nickovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Formal Techniques, Modelling and Analysis of Timed and Fault-Tolerant Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="152" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Undecidability of compass logic</title>
		<author>
			<persName><forename type="first">M</forename><surname>Marx</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reynolds</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Logic and Computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="897" to="914" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Complexity, pattern, and evolutionary trade-offs in animal aggregation</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Parrish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Edelstein-Keshet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">284</biblScope>
			<biblScope unit="page" from="99" to="101" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Particle swarm optimization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Poli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Blackwell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Swarm intelligence</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="57" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Demand-side management for the smart grid</title>
		<author>
			<persName><forename type="first">F</forename><surname>Saffre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gedge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network Operations and Management Symposium Workshops (NOMS Wksps)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010">2010. 2010</date>
			<biblScope unit="page" from="300" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Falsification of temporal properties of hybrid systems using the cross-entropy method</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sankaranarayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fainekos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th ACM international conference on Hybrid Systems: Computation and Control</title>
		<meeting>the 15th ACM international conference on Hybrid Systems: Computation and Control</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="125" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The chemical basis of morphogenesis</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Turing</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Philosophical Transactions of the Royal Society of London. Series B, Biological Sciences</title>
		<imprint>
			<biblScope unit="volume">237</biblScope>
			<biblScope unit="issue">641</biblScope>
			<biblScope unit="page" from="37" to="72" />
			<date type="published" when="1952">1952</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Stopping criteria for a constrained single-objective particle swarm optimization algorithm</title>
		<author>
			<persName><forename type="first">K</forename><surname>Zielinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Laur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Informatica (Slovenia)</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="51" to="59" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Bayesian statistical model checking with application to simulink/stateflow verification</title>
		<author>
			<persName><forename type="first">P</forename><surname>Zuliani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Platzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Clarke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th ACM international conference on Hybrid systems: computation and control</title>
		<meeting>the 13th ACM international conference on Hybrid systems: computation and control</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="243" to="252" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
