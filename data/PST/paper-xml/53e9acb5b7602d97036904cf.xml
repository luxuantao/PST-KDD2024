<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Voronoi Diagram of Curved Objects *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Helmut</forename><surname>Alt</surname></persName>
							<email>alt@inf.fu-berlin.de</email>
							<affiliation key="aff0">
								<orgName type="department">Institut für Informatik</orgName>
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<addrLine>Takustraße 9</addrLine>
									<postCode>14195</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Otfried</forename><surname>Cheong</surname></persName>
							<email>otfried@cs.kaist.ac.kr</email>
							<affiliation key="aff1">
								<orgName type="department">Division of Computer Science</orgName>
								<orgName type="institution">KAIST</orgName>
								<address>
									<addrLine>373-1 Guseong-dong, Yuseong-gu</addrLine>
									<postCode>305-701</postCode>
									<settlement>Daejeon</settlement>
									<country key="KR">Korea</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Antoine</forename><surname>Vigneron</surname></persName>
							<email>antoine@comp.nus.edu.sg</email>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<addrLine>3 Science Drive 2</addrLine>
									<postCode>117543</postCode>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Voronoi Diagram of Curved Objects *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F41F27B9A4DA1ADE7EA085553ACDAB9C</idno>
					<idno type="DOI">10.1007/s00454-005-1192-0</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Voronoi diagrams of curved objects can show certain phenomena that are often considered artifacts: The Voronoi diagram is not connected; there are pairs of objects whose bisector is a closed curve or even a two-dimensional object; there are Voronoi edges between different parts of the same site (so-called self-Voronoi-edges); these self-Voronoiedges may end at seemingly arbitrary points not on a site, and, in the case of a circular site, even degenerate to a single isolated point. We give a systematic study of these phenomena, characterizing their differential-geometric and topological properties. We show how a given set of curves can be refined such that the resulting curves define a "well-behaved" Voronoi diagram. We also give a randomized incremental algorithm to compute this diagram. The expected running time of this algorithm is O(n log n).</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Voronoi diagrams are among the most extensively studied objects in computational geometry (see for instance Aurenhammer's survey <ref type="bibr" target="#b1">[2]</ref> or the book by Okabe et al. <ref type="bibr" target="#b18">[19]</ref>). Naturally the first type of Voronoi diagrams considered was the one for point sites and the Euclidean metric in two dimensions. Subsequent research was concerned with generalizations of all of these features.</p><p>In the two-dimensional case these generalizations were also motivated by applications in motion planning which lead to the so-called retraction method <ref type="bibr" target="#b17">[18]</ref>. This method makes use of the fact that if there is a collision-free motion of a disk-shaped object within a collection of obstacles from a source to a target position, then there is also one that essentially follows the edges of the Euclidean Voronoi diagram of the obstacles. Since in general the obstacles are not single points, Voronoi diagrams for other types of sites were investigated, mostly for line segments. More complex shapes can be approximated by polygons to arbitrary precision. However, in general a good approximation requires very many line segments and leads to large running times of the construction algorithms. Therefore it should be interesting to consider the construction of Voronoi diagrams where the sites are bounded by more general curves.</p><p>Yap <ref type="bibr" target="#b23">[24]</ref> solves the problem for the Euclidean metric and second degree curves. Further steps in a more general direction are made by Yap and Alt <ref type="bibr" target="#b24">[25]</ref>, who gave an idea of an algorithm for the case that the bounding curves are circular arcs or line segments. Karavelas and Yvinec <ref type="bibr" target="#b11">[12]</ref> consider the case of convex objects in the plane.</p><p>Klein <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref> gave a unified approach for many of the different variants of twodimensional Voronoi diagrams, the so-called abstract Voronoi diagrams. They are not specified by distance functions but by certain topological conditions which the vertices and edges have to satisfy. Klein et al. <ref type="bibr" target="#b14">[15]</ref> gave a general paradigm for a randomized O(n log n) algorithm for constructing an abstract Voronoi diagram for a set of n sites.</p><p>Unfortunately, Voronoi diagrams of curved objects do not satisfy the conditions of abstract Voronoi diagrams. Figure <ref type="figure" target="#fig_0">1</ref> shows the particularities that can occur. Here we simply define the Voronoi diagram as the set of all points having more than one closest point on the union of all sites. The Voronoi diagram is not connected and there are Voronoi edges between different parts of the same site, which we call self-Voronoi-edges; these self-Voronoi-edges may end at seemingly arbitrary points, and, in the case of a circular site, even degenerate to a single isolated point. Furthermore, the bisector between two objects may be a closed curve. Self-Voronoi-edges, which are part of the medial axis of a curve, play an essential role in Voronoi diagrams of curved objects. If the Voronoi diagram is used to do motion planning using the retraction method, for instance, then the self-Voronoi edges are necessary to capture the connectivity of the workspace. Without them, the robot may not be able to reach concavities formed by a single curve.</p><p>The aim of this paper is threefold:</p><p>1. To investigate the mentioned phenomena of Voronoi diagrams of curves and characterize their differential geometric and topological properties. 2. To show how these difficulties can be overcome (under certain preconditions) by breaking up the curves into "harmless" pieces. 3. To give a randomized incremental algorithm to compute the Euclidean Voronoi diagram of these pieces.</p><p>A "harmless" curve is either a line segment, a circular arc, or a spiral arc. A spiral arc is a curve whose curvature monotonically increases strictly along the curve. A circular arc can be seen as the extreme case of a spiral arc where the curvature remains constant, while a line segment can be seen as the extreme case of a circular arc whose curvature is zero. Perhaps the corner stone of our results is the insight that spiral arcs are well-behaved with respect to Voronoi diagram formation.</p><p>A set of curves that arises in an application will not necessarily consist of harmless curves only. We therefore describe how such a given set of curves can-under some mild conditions-be refined into harmless pieces by cutting up the curves and adding point sites on curves.</p><p>The algorithmic result of this paper is a randomized algorithm of running time O(n log n) for constructing the Voronoi diagram of a set of n harmless curves. Combined with our technique to refine curves that are not yet sufficiently well-behaved, this results in an algorithm to compute the Voronoi diagram of a set of arbitrary curves in time O(n log n).</p><p>The algorithm considers curves as abstract objects and assumes that certain elementary operations are available as black boxes. These include finding the points having the same distance from three given sites, finding all points of a given slope, finding points where the curvature has a local maximum, given the representations of two curves finding the representation of a bisector, and finding intersection points of given curves. The details of these operations including numerical problems involved will depend on the particular application of our paradigm. For example, if it is applied to algebraic curves of some fixed degree, the elementary operations would consist of solving systems of algebraic equations of constant degree and constantly many variables. The underlying algebraic and numerical questions are quite involved and have been investigated in several publications in the computer graphics and CAD community <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b6">[7]</ref>- <ref type="bibr" target="#b9">[10]</ref>.</p><p>A preliminary version of this work appeared in the Proceedings of the ACM Symposium on Computational Geometry, 1995 <ref type="bibr" target="#b0">[1]</ref>. Lemma 1(b) of that version is incorrect. Overcoming the incorrect claim led us to the following exposition that is based on spiral arcs.</p><p>After the first version of this work, Farouki and Ramamurthy published a different approach [8]- <ref type="bibr" target="#b9">[10]</ref> for computing Voronoi diagrams of curved objects. They also have a technique for splitting curves into simpler pieces that allows one to compute self-Voronoi edges, but it is by no means trivial <ref type="bibr" target="#b7">[8]</ref>, so they restrict their attention to cubics. With our approach one only needs to find extrema of curvature, which is straightforward for arbitrary algebraic curves. Besides, the only time bound given is O(n 2 ) <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Spiral Arcs</head><p>We assume that curves are regular in the differential-geometric sense, and that they do not contain their endpoints. More precisely, a curve γ is a subset of R 2 such that there is a function f γ : [0, 1] → R 2 with the following properties: f γ is twice continuously differentiable, f γ (t) = 0 for all t ∈ [0, 1] and γ = { f γ (x) | 0 &lt; x &lt; 1}. The endpoints of γ are f γ (0) and f γ <ref type="bibr" target="#b0">(1)</ref>. We say that two curves touch each other in some point p ∈ R 2 iff they both pass through p and have the same tangent direction there. As a special case, a circle touches a curve γ in p if it contains p and its center lies on the normal to γ through p. Consider a touching circle C whose center lies on the concave side of the curve. If the radius of C is small, it will locally-in a neighborhood of p-lie on the concave side of γ . If its radius is large, the circle lies locally on the convex side of γ . The radius of curvature separates the two sets of radii. In general, an osculating circle (the circle of curvature) touches and crosses the curve in p (the only exception is in points p where the curvature is extreme). The curvature is the reciprocal of the radius of curvature (for more details see for instance <ref type="bibr" target="#b21">[22]</ref>).</p><p>A curve is a spiral arc if it is convex (that is, the union of the curve and the segment connecting its endpoints is a closed convex curve) and if its curvature is strictly monotone. In particular, a spiral arc does not contain a point of zero curvature. The convexity requirement excludes genuine spirals (which have arbitrarily long and complex self-Voronoi edges). Our definition of a spiral arc is more restricted than definitions given elsewhere; Guggenheimer <ref type="bibr" target="#b10">[11]</ref>, for instance, requires only monotone curvature (not strictly monotone), and does not have the convexity requirement.</p><p>The following theorem is due to Kneser <ref type="bibr" target="#b10">[11,</ref>.</p><p>Theorem 1 (Kneser's Theorem). Any circle of curvature of a spiral arc contains every smaller circle of curvature of the arc in its interior.</p><p>A point p = γ (t 0 ) on a spiral arc γ decomposes the arc into two branches, a branch γ 1 with increasing curvature, and a branch γ 2 with decreasing curvature when traversing these branches starting from p. Kneser's theorem implies that γ 2 lies inside the osculating circle C at p, while γ 1 lies outside C. In particular, this implies that a spiral arc is simple,</p><formula xml:id="formula_0">that is γ (t) = γ (t ) for t = t .</formula><p>The following theorem is due to Vogt <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b10">[11,</ref>, see Fig. <ref type="figure" target="#fig_1">2</ref>.</p><p>Theorem 2 (Vogt's Theorem). Let p and q be two points on a spiral arc, with curvature strictly increasing from p to q. Then the angle β of the tangent to the arc at q with the chord pq is larger than the angle α of the tangent at p with pq. Vogt's theorem implies the following result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 3. Let γ be a spiral arc.</head><p>There is no circle that touches γ in more than one point.</p><p>Proof. Assume a spiral arc γ touches circle C at p and q. The angles of the tangents to C at p and q with pq are equal. So the same is true for the tangents to γ at p and q, which is impossible by Vogt's theorem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Harmless Sites</head><p>Recall that our goal is to give a systematic treatment of self-Voronoi edges. Our first central observation is that self-Voronoi edges are closely related to local maxima of the curvature of the curves, as Fig. <ref type="figure" target="#fig_2">3</ref> shows. There is a circle around x touching γ in two points. When decreasing the radius the center of the circle traces a self-Voronoi-edge that ends at c where the two tangent points fall together in the point u. The point c is the center of the circle of curvature C of γ at u, which is a local maximum of curvature.</p><p>Points y on the line segment cu are centers of circles that touch γ only in u and, thus, do not contribute to the self-Voronoi edge.</p><p>Since spiral arcs have monotone curvature, they cannot have local maxima of the curvature. Lemma 3 implies that indeed no self-Voronoi edge can exist for a single spiral arc: no disk can touch a spiral arc in two places. This insight leads us to restrict our discussion of Voronoi diagrams to sites that are spiral arcs. We also allow arcs of constant curvature, that is, circular arcs and line segments.</p><p>Formally, let a harmless site be either a point, a line segment, a circular arc, or a spiral arc. A harmless site collection is a finite set S of pairwise disjoint harmless sites with the condition that for every line segment, circular arc, and spiral arc γ ∈ S the endpoints of γ are also members of S.</p><p>For example, the parabolic arc (t, t 2 ) -3 &lt; t &lt; 3 is not a spiral arc. We can cut it at its apex by adding the point site (0, 0), and can obtain a harmless site collection of two parabolic arcs and three point sites. Observe that it is possible that several curves share one endpoint, so we allow arbitrary planar subdivisions by regular curves. Curves may not intersect, but this case can be handled by making the intersection points additional point sites. Closed curves (loops) can be handled by cutting them at some points, and adding those points to the site collection.</p><p>In Section 5 we will see how to compute the Voronoi diagram of a harmless site collection in time O(n log n). To apply that algorithm to more general sets of curves, we have to partition the curves into spiral arcs, straight segments, and circular arcs. If, for instance, the given curves are algebraic of constant degree, each can have at most a constant number of points of vertical tangency and local maxima of the curvature, and a nondegenerate interval of constant curvature is only possible if the whole curve is a circular arc. By cutting the n original curves at these points we obtain a collection of O(n) harmless sites. We can then compute the Voronoi diagram of these pieces, and obtain a Voronoi diagram of complexity O(n). If that is desired, we can then merge the Voronoi cells of curves that are pieces of the same original curve. In most applications, however, that is probably not what is needed: if the Voronoi diagram is used for motion planning with the retraction method, for instance, the additional self-Voronoi-edges are essential to guarantee that the resulting road map captures the connectivity of the workspace.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The Voronoi Diagram of Harmless Sites</head><p>Throughout this paper we denote by d(x, y) the Euclidean distance of points x, y ∈ R 2 and for A ⊂ R 2 , x ∈ R 2 we define d(x, A) := inf y∈A d(x, y). Also, let ψ A (x) be that point of A with d x, ψ A (x) = d(x, A). Whenever there is no such point or when there is more than one, then ψ A is not defined. Let A be the region where ψ A is defined. On A we define an equivalence relation ≡, where x ≡ y if and only if ψ A (x) = ψ A (y). Figure <ref type="figure" target="#fig_3">4</ref> shows the region γ and some equivalence classes for γ a line segment, a circular arc, or spiral arc. Note that the boundary of γ (shown dotted in the figure) is in general not part of the region, except for the curved boundary in the case of a spiral arc. Observe the fibration of γ defined by ≡. Parts (a) and (b) of the figure require no further proof, so we consider the case of a spiral arc. Lemma 4. Let γ be a spiral arc with endpoints p and q, such that the curvature increases from p to q. Let u be a point on γ and let n be the line normal to γ in u. Then ψ γ (x) = u if and only if x is a point on n and d(x, u) ≤ d(x, q). Proof. The "only if" direction is obvious, so assume that x is a point on n with d(x, u) ≤ d(x, q). If x is on the convex side of γ then clearly ψ γ (x) = u, so we also assume that x is on the concave side. We denote by C the circle through u with center x and by C u the osculating circle at u (see Fig. <ref type="figure" target="#fig_4">5</ref>(a)). Since both circles share a common tangent at u and q is outside the interior of C, and, by Kneser's theorem, inside C u , we know that the interior of C is contained in the interior of C u . Kneser's theorem also implies that the osculating circle at p contains C u in its interior, so p is outside C u and, therefore, outside C. Hence there is a closest point to x in γ , we denote this point by v. We will prove by contradiction that v = u, so from now on we assume v = u. By Lemma 3, the point v cannot lie on C, so v is inside C, and thus v cannot be situated between p and u along γ . However, if v lies between u and q, there is a point w on C such that γ touches C at u from the outside, enters the interior of C, visits v, leaves C at w, and runs to q (see Fig. <ref type="figure" target="#fig_4">5(b)</ref>). Then the angle between the tangent to γ at u and the line uw is larger than the angle between the same line and the tangent to γ at w, contradicting Vogt's theorem. The lemma explains why spiral arcs are so well-behaved under Voronoi-diagram formation: to verify the nearest point on a spiral arc, we need to consider only the neighborhood of that point and the endpoint of the arc. Lemma 4 has the following corollary.</p><formula xml:id="formula_1">γ Ψ γ Ψ γ γ (a) (b) (c) γ Ψ γ</formula><p>Corollary 5. Let γ be a spiral arc with endpoints p and q, and curvature increasing from p to q. Then γ is the region bounded by normals in p and q and by the bisector of q and γ . The latter is part of γ , the normals are not. The center of any osculating circle of γ lies outside γ .</p><p>Lemma 6. Let γ be a line segment, circular arc, or spiral arc. The function ψ γ is continuous on γ .</p><p>Proof. Let x ∈ γ , let u := ψ γ (x), and let r := d(x, u). We denote by γ the union of γ and its endpoints. For some arbitrary ε &gt; 0 consider the ε-neighborhood U ε (u) and A := γ \U ε (u). Let ε be sufficiently small so that A = ∅. Since for any u ∈ A, d(x, u ) &gt; r and A is compact, there is some δ &gt; 0 such that</p><formula xml:id="formula_2">d(x, u ) &gt; r + 2δ<label>( 1)</label></formula><p>for all u ∈ A. Let y be any point in U δ (x) so that ψ γ (y) is defined. Since by the triangle inequality d(y, γ ) ≤ r + δ, and by ( <ref type="formula" target="#formula_2">1</ref>) d(y, u ) &gt; r + δ for any u ∈ A, it must be ψ γ (y) ∈ U ε (u). This shows the continuity of ψ γ .</p><p>Given a harmless site collection S and a site s ∈ S, we define the Voronoi region of s in S, VR(s, S), as follows:</p><formula xml:id="formula_3">VR(s, S) := {x ∈ R 2 | there is a unique p ∈ s with d(x, p) = min s ∈S d(x, s )}.</formula><p>An example of Voronoi regions associated with a harmless site collection S is given in Fig. <ref type="figure" target="#fig_5">6</ref>. The sites in S are a spiral arc γ , its two endpoints p and q, and another point a. In this example the edges bounding a region belong to it, except for the edges containing p and q which are not part of VR(γ , S). Note the slight twist in the definition. Had we chosen the simpler condition then the Voronoi region of a curve would contain the Voronoi region of its endpoints.</p><formula xml:id="formula_4">d(x, s) = min s ∈S d(x, s ), p q γ a V R(p, S) V R(q, S) V R(γ, S)</formula><p>Our definition avoids that. The uniqueness of p serves only to exclude the center of a circular arc from its Voronoi region (the point p is unique in all other cases, trivially so for line segments and circular arcs, by Lemma 3 for spiral arcs). The Voronoi diagram V (S) is defined as the set of all Voronoi regions VR(s, S), for s ∈ S. The Voronoi diagram can also be represented as a Voronoi graph as follows: the vertices of the graph are the points in R 2 which belong to the boundary of three or more Voronoi regions. The edges of the graph correspond to the maximal connected subsets belonging to the boundary of exactly two Voronoi regions. (In these two definitions, the boundary of a Voronoi region is defined according to the usual topology of R 2 , except if the Voronoi region is a line segment, in which case we consider that its boundary consists of its two endpoints.) We show below that Voronoi edges are curves. The faces of the graph correspond to the Voronoi regions.</p><p>We will find it helpful to restrict our attention to the "finite" part of the Voronoi diagram. Therefore, we add a large circle ω with center in the origin to our site collection. The radius of this circle is assumed so large that it contains all Voronoi vertices and furthermore the circle is not their nearest site. This means that no information about the topological structure of the Voronoi diagram gets lost by inserting ω. So we only have to consider the Voronoi diagram inside ω and, consequently, all Voronoi regions are bounded.</p><p>Next we investigate the shape of Voronoi regions: Proof. If x ∈ VR(γ , S), then there is u ∈ γ such that d(x, u) = min s∈S d(x, s). In particular, d(x, u) = d(x, γ ), and so x ∈ γ . Recall now that, by Lemma 4, K u is a ray or line, and note that K u ∩ VR(γ , S) is not empty: it contains at least u and a small segment around it. Consider now two points p, q ∈ K u ∩ VR(γ , S), and a point y ∈ K u between p and q. Let v be a point <ref type="figure">y,</ref><ref type="figure">s</ref>), and so y ∈ VR(γ , S). If y belongs to the closure of VR(s, S) for some s ∈ S\{γ }, then we have <ref type="figure">d(y,</ref><ref type="figure">v) = d(y,</ref><ref type="figure">s) = d(y,</ref><ref type="figure">u</ref>). So y belongs to the bisector of u and v, which implies that <ref type="figure">d( p,</ref><ref type="figure">u) ≥ d( p,</ref><ref type="figure">v) or d(q,</ref><ref type="figure">u) ≥ d(q,</ref><ref type="figure">v</ref>). Remember that <ref type="figure">d( p, u) ≤ d( p, v)</ref> and<ref type="figure">d(q, u) ≤ d(q, v</ref>), so p or q belongs to the bisector of u and v. Then the bisector of u and v is the line pq, and so v = u, a contradiction. It follows that K u ∩ VR(γ , S) is a segment, and its interior points do not lie in the closure of any other Voronoi region.</p><formula xml:id="formula_5">on {s ∈ S | s = γ } closest to y (v exists since {s ∈ S | s = γ } is compact). Since p, q ∈ VR(γ , S), we have d( p, u) ≤ d( p, v) and d(q, u) ≤ d(q, v). Since {x ∈ R 2 | d(x, u) ≤ d(x, v)} is a closed half-plane, this implies d(y, u) ≤ d(y, v) = min s∈S\{γ } d(</formula><p>Suppose now that h is not continuous. Then there exists a sequence of points in γ converging to u ∈ γ whose h -values do not converge to h (u). Since VR(γ , S) is bounded, there exists a subsequence converging to some w = h (u). Because of the continuity of ψ γ , ψ γ (w) = u and so, by Lemma 4, w lies on the straight line through u and h (u). Since ∂VR(γ , S) is closed, w ∈ ∂VR(γ , S). This implies that w belongs to the closure of two different Voronoi cells, although it lies in the interior of K u ∩ VR(γ , S), which is a contradiction to the above.</p><p>We summarize important topological properties of Voronoi diagrams in the following theorem: Theorem 8. Let S be a harmless site collection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(i) The union of the Voronoi regions covers the interior of ω, and no Voronoi region is empty. (ii) For R ⊂ S and s ∈ R we have VR(s, S) ⊆ VR(s, R). (iii) The intersection of two Voronoi regions lies on the boundary of both. (iv) A Voronoi region VR(s, S) is simply connected, for point sites it is even starshaped from s. (v) The boundary of each Voronoi region VR(s, S) is a Jordan curve except if s is</head><p>an endpoint where several curves meet. In this case the Voronoi region might be a line segment or the point itself. (vi) Any triple of sites defines at most two Voronoi vertices.</p><p>Proof. (i) Since the union of all sites is a compact set, for any point x ∈ ω the minimum distance to that union is assumed, so x lies in some Voronoi region. Any Voronoi region contains the site itself and therefore is not empty.</p><p>(ii) Let s ∈ R ⊂ S, and let x ∈ VR(s, S). This means that there is a point p ∈ s with d(x, p) ≤ d(x, s ) for all s ∈ S. Clearly this implies x ∈ VR(s, R).</p><p>(iii) Let x ∈ VR(s, S) ∩ VR(t, S). There must be points u ∈ s, v ∈ t lying on the maximal empty circle around x. By Lemma 7 any point in the interior of the line segments xu and xv lies in VR(s, S)\VR(t, S) and VR(t, S)\VR(s, S), respectively. This shows that x lies on the boundary of both.</p><p>(iv) First assume that s is a curve. Let α be some closed curve within VR(s, S). Let q be some arbitrary point surrounded by α and let K := {x ∈ VR(s, S) | x ≡ q}. K intersects α in at least two points a, b ∈ VR(s, S) surrounding q, and so q ∈ VR(s, S) by Lemma 7. Since this holds for any point q in the region encircled by α, α is within VR(s, S) contractible to a point. Since this holds for any α, VR(s, S) is simply connected. Now assume that s is a point and p ∈ V R(s, S). Let p be a point in the interior of the segment ps. We denote by C (resp. C ) the circle centered at p (resp. p ) through s. Since the interior of C does not intersect any site, the same is true for C , hence p ∈ V R(s, S).</p><p>(v) Let s be a curve, and consider the functions h , h r : s → ∂VR(s, S) defined in Lemma 7. For all x ∈ s, we have h (x) ≡ h r (x) ≡ x. By Lemmas 6 and 7 we know that h and h r are homeomorphisms. Thus the images A := h (s) and B := h r (s) are simple arcs. For continuity reasons their endpoints have the endpoints p, q of s as closest points. Altogether, the boundary of ∂VR(s, S) consists of A, B and two segments I, J (that may degenerate to a single point) of the normals through p, q, respectively (see Fig. <ref type="figure" target="#fig_6">7</ref>). Since I, A, J, B are pairwise nonintersecting, their concatenation forms a Jordan curve. If s is a circular segment then one of A, B may degenerate to a single point, the center of s. Similar techniques prove the statement if s is an isolated point or an endpoint of a curve. If several curves share s as an endpoint VR(s, S) may degenerate to a line segment (Fig. <ref type="figure" target="#fig_8">8</ref>(a), VR(s, S) is the segment uv) or just s itself (Fig. <ref type="figure" target="#fig_8">8(b)</ref>). The former phenomenon occurs when the closed half-spaces beyond the normals of those curves in s intersect only in a straight line, the latter when they intersect only in s itself.</p><p>(vi) Assume three sites s 1 , s 2 , s 3 ∈ S define three Voronoi vertices v 1 , v 2 , v 3 . If some VR(s i , S) is a point or line segment then, by our definition, its boundary consists of at most two vertices, contradiction. Otherwise, it follows from (v) that each VR(s i , S) is bounded by a Jordan curve. For each pair (s i , v j ) we can draw a path connecting s i to v j in the interior of VR(s i , S), so that these paths are disjoint. However, that is a planar embedding of K 3,3 , a contradiction. Theorem 8(iv) implies that the edges of the Voronoi graph are indeed well-defined and are curves. Finally, we consider the complexity of this Voronoi graph. Theorem 9. Given a harmless site collection S of n sites (not counting the outer circle ω). The Voronoi graph V (S) is a planar connected graph with at most n + 1 faces, at most 3n -3 edges, and at most 2n -2 vertices.</p><p>Proof. Each face of the graph is a Voronoi region, and there are n of those plus the outer face. All Voronoi regions are simply connected, so V (S) is connected. Let v and e denote the number of vertices and edges of the graph. By definition, a Voronoi vertex has degree at least three, so 2e ≥ 3v. By Euler's formula, we have 2 ≤ n+1-e+v ≤ n+1-e+2e/3, and so e ≤ 3n -3. That implies v ≤ 2n -2. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Randomized Incremental Construction</head><p>The Voronoi diagram of curved objects does not fit into the framework of abstract Voronoi diagrams by Klein et al. <ref type="bibr" target="#b14">[15]</ref> and cannot be computed with their randomized incremental algorithm. The reason for this is that they assume that the bisector of any pair of sites is an unbounded simple curve. Even for a point and a circular arc, this is no longer true: the bisector can be a closed curve as in Fig. <ref type="figure" target="#fig_0">1</ref>.</p><p>If, however, the objects form a harmless site collection, this situation can be remedied. In the following we demonstrate how to compute the Voronoi diagram of a harmless site collection in time O(n log n) using a kind of randomized incremental algorithm, based on the framework set by Clarkson and Shor <ref type="bibr" target="#b5">[6]</ref>, Mulmuley <ref type="bibr" target="#b16">[17]</ref>, and Boissonnat et al. <ref type="bibr" target="#b2">[3]</ref>. We have to make sure that during the execution of the algorithm which constructs the Voronoi diagram by inserting the sites one by one, the intermediate set of sites is always a harmless site collection, that is that no curve is inserted before both of its endpoints are.</p><p>Therefore, we compute the Voronoi diagram of a harmless site collection S in two stages. In the first stage we compute the Voronoi diagram of n points P ∪ Q. Here P ⊂ S is the set of all point sites. Q is obtained by selecting for each curve site s ∈ S a point q in the relative interior of s.</p><p>The points in Q serve as "placeholders" for the curves they stem from. In the second stage the curve sites are added one by one in random order. The replacement of the placeholders by the actual curves is made easy by the fact that we already know where to insert a new site s.</p><p>We will need to represent the Voronoi diagram V (R) of a subset R ⊂ S ∪ Q. This can be done using any standard structure for planar subdivisions, such as the doubly connected edge list <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b19">[20]</ref>. In the first stage of the algorithm we simply compute the Voronoi diagram V (P ∪ Q). This can be done using any efficient algorithm for the construction of Voronoi diagrams and takes time O(n log n).</p><p>As discussed in Section 3, we add a large circle ω to our site collection S. If necessary, this circle has to be handled symbolically. After computing V (P ∪ Q), we add ω to obtain V (P ∪ Q ∪ {ω}). This can be done in time O(n).</p><p>Let now s 1 , s 2 , . . . , s m be a random permutation of the curve sites in S. Let q r denote the point in the interior of s r we had chosen. We consider the sites s r in this order. In every step of the algorithm, we enlarge a point site q r in the current Voronoi diagram V (P ∪ {ω, s 1 , . . . , s r -1 , q r , . . . , q m }) to the curve site s r and obtain V (P ∪ {ω, s 1 , . . . , s r , q r +1 , . . . , q m }). Let us look at this in more detail.</p><p>For brevity, let s := s r , q := q r , R := P ∪ {s 1 , . . . , s r -1 , q r , q r +1 , . . . , q m }, and R := P ∪ {s 1 , . . . , s r -1 , s r , q r +1 , . . . , q m }. By Theorem 8, the Voronoi region VR(s, R ) of s is a simply connected region whose boundary is a closed Jordan curve (recall that s is not a point site). To obtain V (R ) from V (R) means to remove the portion I of V (R) that lies in VR(s, R ), and to add the boundary of VR(s, R ). (See Fig. <ref type="figure" target="#fig_9">9</ref>.) We first prove a lemma. Lemma 10. The "skeleton" I (the portion of V (R) that lies in VR(s, R )) contains the boundary of VR(q, R), is connected, and contains no cycle except for the boundary of VR(q, R). All its leaves lie on the boundary of VR(s, R ), and its complexity is linear in the number of these leaves. Proof. Since q lies on s, clearly VR(q, R) is completely contained in VR(s, R ), and hence I contains the boundary of VR(q, R). If I contained any other cycle, some Voronoi region VR(r, R), r ∈ R, r = q, must lie inside VR(s, R ) which would imply that r lies in VR(s, R ), which is impossible. Assume now that I is not connected. That means that there are at least two connected components I 1 and I 2 of I. By Theorem 8(iv), none of these can be contained in the interior of VR(s, R ), they both must have some connection with ∂VR(s, R ). So there is a path γ ⊂ VR(s, R )\I connecting two points x and y on the boundary of VR(s, R ) and separating I 1 from I 2 . Since γ ∩ V (R) = ∅, γ lies in the interior of some VR(r, R), for r ∈ R. This implies that there must be points x and y arbitrarily close to x and y that lie in VR(r, R ). That means that x and y can be connected by a path γ in VR(r, R ). The combination γ ∪γ is a closed loop in VR(r, R) containing either I 1 or I 2 , a contradiction to Theorem 8(iv). It follows that I is connected.</p><p>Leaves of I must clearly lie on ∂VR(s, R ). By removing one edge on ∂VR(q, R) from I, it becomes a tree, all of whose interior vertices have degree at least three. Consequently, its complexity is linear in the number of its leaves.</p><p>Consider now the boundary of VR(s, R ). As discussed in the proof of Theorem 8(v), it consists of two segments I and J -possibly degenerated to a point-through the endpoints p and q of s and two simple curves A and B. The curves A and B consist of a sequence of • edges that lie in the interior of some VR(r, R), r ∈ R, and are hence part of the bisector of r and s, • crossings between edges of V (R) and ∂VR(s, R ), and • vertices of V (R).</p><p>We first determine I , J , and the skeleton I. This can be done using a graph search starting at any edge on the boundary of VR(q, R) and takes time linear in the complexity of I. The leaves of I are the vertices of VR(s, R ), and from that information we can then construct the curves A and B to obtain VR(s, R ) in time linear in the complexity of I and VR(s, R ).</p><p>It remains to bound the running time of the algorithm. As we observed, the first stage of the algorithm takes time O(n log n). Inserting curve site s r takes time linear in the complexity of I and VR(s r , R ) and thus by Lemma 10 linear in the complexity of the new Voronoi region VR(s r , R ).</p><p>It remains to bound the expected size of VR(s r , R ). We use a standard backwardsanalysis argument <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b20">[21]</ref>: Fix R , and let s be a random curve site in R . The total complexity of V (R ) is O(n) by Theorem 9, and there are r possible choices for s. Consequently, the expected complexity of VR(s, R ) is O(n/r ). Summing this over all curve sites, we find that the second stage of the algorithm takes expected time O( n r =1 n/r ) which is O(n log n) as well. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. A Voronoi diagram of curves.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Vogt's theorem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. A local maximum of curvature.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. The region γ for the three different curve types.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Proof of Lemma 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Example of Voronoi regions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Lemma 7 .</head><label>7</label><figDesc>Let S be a harmless site collection and let γ ∈ S be a curve. Then VR(γ , S) ⊆ γ . For any u ∈ γ , the equivalence class K u := {x ∈ γ | x ≡ u} of u intersects VR(γ , S) in a straight line segment with endpoints h ( p) and h r ( p) lying on opposite sides of u. The interior points of this segment do not belong to the closure of any other Voronoi region. The functions h and h r : γ → R 2 defined this way are continuous.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Voronoi region VR(s, S).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Degenerate Voronoi-cells.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. The Voronoi diagram before and after inserting s. The shaded region in (a) is VR(q, R) and the shaded region in (b) is VR(s, R ). The skeleton I is represented by the dashed edges.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Theorem 11 .</head><label>11</label><figDesc>The two-stage randomized incremental algorithm constructs the Voronoi diagram of a harmless site collection of n sites in time O(n log n).</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank Rida Farouki, Stefan Felsner, and Lorenz Wernisch for fruitful discussions and valuable hints. We also thank an anonymous referee for his or her helpful comments.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>* This work was supported by the the Brain Korea 21 Project, The School of Information Technology, KAIST, 2005, and by the National University of Singapore under Grant R252-000-130.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Voronoi diagram of curved objects</title>
		<author>
			<persName><forename type="first">H</forename><surname>Alt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Schwarzkopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th Annual ACM Symposium on Computational Geometry</title>
		<meeting>11th Annual ACM Symposium on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="89" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Voronoi diagrams: a survey of a fundamental geometric data structure</title>
		<author>
			<persName><forename type="first">F</forename><surname>Aurenhammer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="345" to="405" />
			<date type="published" when="1991-09">September 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Applications of random sampling to on-line algorithms in computational geometry</title>
		<author>
			<persName><forename type="first">J.-D</forename><surname>Boissonnat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Devillers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Schott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Teillaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yvinec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="51" to="71" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Building Voronoi diagrams for convex polygons in linear expected time</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">P</forename><surname>Chew</surname></persName>
		</author>
		<idno>PCS-TR90-147</idno>
	</analytic>
	<monogr>
		<title level="s">Dept. Mathematics and Computer Science</title>
		<imprint>
			<date type="published" when="1986">1986</date>
			<pubPlace>Dartmouth College, Hanover, NH</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Voronoi diagrams for planar shapes</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Chou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput. Graph. Appl</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="52" to="59" />
			<date type="published" when="1995-03">March 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Applications of random sampling in computational geometry, II</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">L</forename><surname>Clarkson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Shor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="387" to="421" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Bisector curves of planar rational curves</title>
		<author>
			<persName><forename type="first">G</forename><surname>Elber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CAD</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1089" to="1096" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Degenerate point/curve and curve/curve bisectors arising in medial axis computations for planar domains with curved boundaries</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">T</forename><surname>Farouki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramamurthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Aided Geom. Design</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="615" to="635" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Voronoi diagram and medial axis algorithm for planar domains with curved boundaries, I</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">T</forename><surname>Farouki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramamurthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="119" to="131" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Voronoi diagram and medial axis algorithm for planar domains with curved boundaries, II</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">T</forename><surname>Farouki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramamurthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="253" to="277" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">W</forename><surname>Guggenheimer</surname></persName>
		</author>
		<title level="m">Differential Geometry</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw-Hill</publisher>
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The Voronoi diagram of planar convex objects</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Karavelas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yvinec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th European Symposium on Algorithms (ESA 2003)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>11th European Symposium on Algorithms (ESA 2003)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2832</biblScope>
			<biblScope unit="page" from="337" to="348" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Abstract Voronoi diagrams and their applications</title>
		<author>
			<persName><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computational Geometry and its Applications</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1988">1988</date>
			<biblScope unit="volume">333</biblScope>
			<biblScope unit="page" from="148" to="157" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Concrete and Abstract Voronoi Diagrams</title>
		<author>
			<persName><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">400</biblScope>
			<date type="published" when="1989">1989</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Randomized incremental construction of abstract Voronoi diagrams</title>
		<author>
			<persName><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mehlhorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Meiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Geom. Theory Appl</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="157" to="184" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Finding the intersection of two convex polyhedra</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Muller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="217" to="236" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A fast planar partition algorithm, I</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mulmuley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 29th Annual IEEE Symposium on the Foundations of Computer Science</title>
		<meeting>29th Annual IEEE Symposium on the Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="1988">1988</date>
			<biblScope unit="page" from="580" to="589" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A &quot;retraction&quot; method for planning the motion of a disk</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dúnlaing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Yap</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="104" to="111" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Spatial Tessellations: Concepts and Applications of Voronoi Diagrams</title>
		<author>
			<persName><forename type="first">A</forename><surname>Okabe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Boots</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sugihara</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Wiley</publisher>
			<pubPlace>Chichester</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Computational Geometry: An Introduction</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Shamos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Backwards analysis of randomized geometric algorithms</title>
		<author>
			<persName><forename type="first">R</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">New Trends in Discrete and Computational Geometry</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Pach</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1993">1993</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="37" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Stoker</surname></persName>
		</author>
		<title level="m">Differential Geometry</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley-Interscience</publisher>
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Über monotongekrümmte Kurven</title>
		<author>
			<persName><forename type="first">W</forename><surname>Vogt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Reine Angew. Math</title>
		<imprint>
			<biblScope unit="volume">144</biblScope>
			<biblScope unit="page" from="239" to="248" />
			<date type="published" when="1914">1914</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An O(n log n) algorithm for the Voronoi diagram of a set of simple curve segments</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Yap</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="365" to="393" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Motion planning in the CL-environment</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Yap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Alt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Workshop on Algorithms and Data Structures</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>1st Workshop on Algorithms and Data Structures<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1989">1989</date>
			<biblScope unit="volume">382</biblScope>
			<biblScope unit="page" from="373" to="380" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">and in revised form May 11</title>
		<imprint>
			<date type="published" when="2004-07-20">July 20, 2004. 2005. August 4, 2005</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
