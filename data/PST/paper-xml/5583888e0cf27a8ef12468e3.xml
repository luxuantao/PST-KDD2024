<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Shape Modeling with Front Propagation: A Level Set Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ravikanth</forename><surname>Malladi</surname></persName>
						</author>
						<author>
							<persName><forename type="first">James</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Baba</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Lawrence</forename><forename type="middle">Berkeley</forename><surname>Laboratory</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Usa</forename><forename type="middle">B</forename><surname>Vemuri</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">partment of Mathematics</orgName>
								<orgName type="institution">University of Califomia</orgName>
								<address>
									<postCode>94720</postCode>
									<settlement>Berkeley</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer and Information Sci-ences</orgName>
								<orgName type="institution">University of Florida</orgName>
								<address>
									<postCode>32611</postCode>
									<settlement>Gainesville</settlement>
									<region>FL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Shape Modeling with Front Propagation: A Level Set Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">69BDE888526CEF26341ED5C6BB92AC84</idno>
					<note type="submission">received May 17, 1993; revised June 21, 1994.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:04+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Shape modeling</term>
					<term>shape recovery</term>
					<term>interface motion</term>
					<term>level sets</term>
					<term>hyperbolic conservation laws</term>
					<term>Hamilton-Jacobi equation</term>
					<term>entropy condition</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Shape modeling is an important constituent of computer vision as well as computer graphics research. Shape models aid the tasks of object representation and recognition. This paper presents a new approach to shape modeling which retains some of the attractive features of existing methods and overcomes some of their limitations. Our techniques can be applied to model arbitrarily complex shapes, which include shapes with significant protrusions, and to situations where no a priori as- sumption about the object's topology is made. A single instance of our model, when presented with an image having more than one object of interest, has the ability to split freely to represent each object. This method is based on the ideas developed by Osher and Sethian to model propagating solidhiquid interfaces with curvature-dependent speeds. The interface (front) is a closed, nonintersecting, hypersurface flowing along its gradient field with constant speed or a speed that depends on the curvature. It is moved by solving a "Hamilton-Jacob?' type equation written for a function in which the interface is a particular level set. A speed term synthesizpd from the image is used to stop the interface in the vicinity of object boundaries. The resulting equation of motion is solved by employing entropy-satisfying upwind finite difference schemes. We present a variety of ways of computing evolving front, including narrow bands, reinitializations, and different stopping criteria. The efficacy of the scheme is demonstrated with numerical experiments on some synthesized images and some low contrast medical images.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>wherein the boundary of the model is represented in a parametric form. These parameterized boundary representations will encounter difficulties when the dynamic model embedded in a noisy data set is expandinghhrinking along its normal field [ 101 and sharp corners or cusps develop or pieces of the boundary intersect. By exploiting recent advances in interface techniques, our modeling technique avoids this Lagrangian geometric view and instead capitalizes on a related initial value partial differential equation. In this setting, several advantages are apparent, including the ability to evolve the model in the presence of sharp corners, cusps and changes in topology, model shapes with significant protrusions and holes in a seamless fashion, and extension to three dimensions in an extremely straightforward way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Background</head><p>An important goal of computational vision is to recover the shapes of objects in 2D and 3D from various types of visual data. One way to achieve this goal is via model-based techniques. Broadly speaking, these techniques involve the use of a model whose boundary representation is matched to the image to recover the object of interest. These models can either be rigid, such as correlation-based template matching techniques, or nonrigid, as those used in dynamic model fitting techniques.</p><p>Shape recovery from raw data typically precedes its symbolic representation. Shape models are expected to aid the recovery of detailed structure from noisy data using only the weakest of the possible assumptions about the observed shape. To this end, several variational shape reconstruction methods have been proposed and there is abundant literature on the same (see <ref type="bibr">[4]</ref>, [27], <ref type="bibr">[35]</ref>, <ref type="bibr">[38]</ref>, <ref type="bibr">[17]</ref> and references therein). Generalized spline models with continuity constraints are well suited for fulfilling the goals of shape recovery (see [6], <ref type="bibr">[331)</ref>. Generalized splines are the key ingredient of the dynamic shape modeling paradigm introduced to vision literature by <ref type="bibr">Kass et a1 [15]</ref>. Incorporating dynamics into shape modeling enables the creation of realistic animation for computer graphics applications and for tracking moving objects in computer vision. Following the advent of the dynamic shape modeling paradigm [ 151, <ref type="bibr" target="#b29">[34]</ref>, considerable research followed, with numerous application specific modifications to the modeling primitives, and external forces derived from data constraints [391, [181, [I 11, [241, [%I, [W.   The final recovered shape in these schemes can depend on an initial guess which is reasonably close to the desired shape. One solution to this problem in the one-dimensional case has been presented by <ref type="bibr">Amini et al [2]</ref>. They use a discrete form of dynamic programming to optimize the univariate variational problem.</p><p>The framework of energy minimization (snakes) has been used successfully in the past for extracting salient image contours such as edges and lines by Kass et a1 [15]. To make the final result relatively insensitive to the initial conditions, Cohen [lo] suggested the use of an inflation force which makes the snake behave like an edge seeking active model. Although the inflation force prevents the curve from getting trapped by isolated spurious edges, the active contour model cannot be made to extrude through any significant protrusions that a shape may possess (see <ref type="bibr">Fig. l(b)</ref>) without resorting to cumbersome resampling techniques. In this paper, we present a technique which overcomes this problem and accurately models bifurcations and protrusions in complex shapes. Most existing shape modeling schemes require that the topology of the object be known before the shape recovery can commence. It is, however, not always possible to specify the topology of an object prior to its recovery. For example, an important concern in object tracking and motion detection applications is topological change resulting from tracking the positions of object boundaries in an image sequence through time. During their evolution, these closed contours may change connectivity and split, thereby undergoing a topological transformation. One such example is the splitting of cell boundary in a sequence of images depicting cell division. A heuristic criterion for splitting and merging of curves in 2D which is based on monitoring deformation energies of points on the elastic curve has been discussed in [26]. In the context of static problems, more recently, particle systems have been used to model surfaces of arbitrary topology [32]. Here, particles can be added and deleted dynamically to enlarge, and trim the surface respectively.</p><p>The schemes described in this paper offer a new approach to some of the above problems. To begin, the convergence to the final result is relatively independent of the shape initialization. The algorithm allows branches to sprout automatically as the front moves. The scheme described in this paper can be applied where no a priori assumption about the object's topology is made. A single instance of our model, when presented with an image having more than one shape of interest (see Fig. <ref type="figure">I(c</ref>)), has the ability to split freely to represent each shape [19], <ref type="bibr">[20]</ref>. We show that by using our approach, it is also pos-sible to extract the bounding contours of shapes with holes in a seamless fashion (see Fig. <ref type="figure" target="#fig_3">13</ref>).</p><p>Our method is inspired by ideas first introduced in Osher and Sethian [23], [29], which grew out of work in Sethian [28], to model propagating fronts with curvature-dependent speeds. Two such examples are flame propagation and crystal growth, in which the speed of the moving interface normal to itself depends on transport terms modified by the local curvature. The challenge in these problems is to devise numerical schemes for the equations of the propagating front which will accurately approximate these highly unstable physical phenomena. <ref type="bibr">Osher and Sethian [23]</ref> achieve this by viewing the propagating surface as a specific level set of a higherdimensional function. The equation of motion for this function is reminiscent of an initial value "Hamilton-Jacob?' equation with a parabolic right-hand side and is closely related to a viscous hyperbolic conservation law.</p><p>In our work, we adopt these level set techniques to the problem of shape recovery. To isolate a shape from its background, we first consider a closed, nonintersecting, initial hypersurface placed inside (or outside) it. This hypersurface is then made to flow along its gradient field with a speed F(K), where K is the curvature of the hypersurface. Unknown shapes are recovered by making the front adhere to the object boundaries. This is done by synthesizing a speed term from image data which acts as a halting criterion. Finally, we note that a separate study also applying a level set approach has been performed independently by Caselles et a1 [7].</p><p>The outline of this paper is as follows. In Section 11, we briefly explain the level set approach to front propagation problems and the accompanying numerical algorithms. In Sections 111 and IV, we discuss the application of this technique to shape recovery problems, and consider various speed functions and approaches to the problem, such as the effect of global speed laws, narrow band formulations, reinitialization and stopping criteria. In Section V, we present some experimental results of applying our method to some synthetic and low contrast medical images. We conclude in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">FRONT PROPAGATION PROBLEM</head><p>In this section we present the level set technique due to <ref type="bibr">Osher and Sethian [23]</ref>. For details and an expository review, see <ref type="bibr">Sethian [29]</ref>.</p><p>As a starting point and motivation for the level set approach, consider a closed curve moving in the plane, that is, let $0) be a smooth, closed initial curve in Euclidean plane S2, and let $t) be the one-parameter family of curves generated by moving $0) along its normal vector field with speed F(K), a given scalar function of the curvature K . Let x(s, f), be the position vector which parameterizes $t) by s, 0 5 s S S.</p><p>One numerical approach to this problem is to take the above Lagrangian description of the problem, produce equations of motion for the position vector x(s, t), and then discretize the parameterization with a set of discrete marker particles lying on the moving front. These discrete markers are updated in time by approximating the spatial derivatives in the equations of motion, and advancing their positions. However, there are several problems with this approach, as discussed in <ref type="bibr">Sethian [28]</ref>. First, small errors in the computed particle positions are tremendously amplified by the curvature term, and calculations are prone to instability unless an extremely small time step is employed. Second, in the absence of a smoothing curvature (viscous) term, singularities develop in the propagating front, and an entropy condition must be observed to extract the correct weak solution. Third, topological changes are difficult to manage as the evolving interface breaks and merges. And fourth, significant bookkeeping problems occur in the extension of this technique to three dimensions.</p><p>As an alternative, the central idea in the level set approach of <ref type="bibr">Osher and Sethian [23]</ref> is to represent the front $f) as the level set { W = 0) of a function W. Thus, given a moving closed hypersurface fit), that is, $t = 0) : [0, -) + SN, we wish to produce an Eulerian formulation for the motion of the hypersurface propagating along its normal direction with speed F, where F can be a function of various arguments, including the curvature, normal direction, etc. The main idea is to embed this propagating interface as the zero level set of a higher dimensional function W. Let y(x, t = 0), where x E 91N is defined by where d is the distance from x to $it = 0), and the plus (minus) sign is chosen if the point x is outside (inside) the initial hypersurface $t=O). Thus, we have an initial function y(x, t = 0) : 91N + % with the property that</p><formula xml:id="formula_0">y(t=O)=(xI W(X, t = O ) = O ) (2)</formula><p>As illustration, consider the example of an expanding circle. Suppose the initial front y at t = 0 is a circle in the xy-plane (Fig. <ref type="figure" target="#fig_1">2(a)</ref>). We imagine that the circle is the level set { I// = 0 ) of an initial surface z = H x , y, t = 0) in 913 (see Fig. <ref type="figure" target="#fig_1">2(b)</ref>). We can then match the one-parameter family of moving curves r(t) with a one-parameter family of moving surfaces in such a way that the level set { t, u = 0) always yields the moving front (see Fig. <ref type="figure" target="#fig_1">2(c</ref>) and Fig. <ref type="figure" target="#fig_1">2(d)</ref>).</p><p>Our goal is to now produce an equation for the evolving function w(x, t) which contains the embedded motion of $t) as the level set { v/ = 0). Here, we follow the derivation presented in <ref type="bibr">[22]</ref>. Let x(t), f E [0, =) be the path of a point on the propagating front. That is, x (t=O) is a point on the initial front $t = 0), and x, = F(x ( t ) ) with the vector x, normal to the front at x(t). Since the evolving function w is always zero on the propagating hypersurface, we must have we then have the evolution equation for W, namely with a given value of y(x, t = 0). We refer to this as a Hamilton-Jacobi "type" equation because, for certain forms of the speed function F, we obtain the standard Hamilton-Jacobi equation.</p><p>There are four major advantages to this Eulerian Hamilton-Jacobi formulation. The first is that the evolving function</p><formula xml:id="formula_1">I &amp; ,</formula><p>t) always remains a function as long as F is smooth. However, the level surface ( W= 0}, and hence the propagating hypersurface $t) may change topology, break, merge, and form sharp corners as the function yevolves, see [231.</p><p>The second advantage of this Et~kian formulation concerns numerical approximation. Because yfx, t ) remains a function as it evolves, we may use a discrete grid in the domain of x and substitute finite difference approximations for the spatial and temporal derivatives. For example, using a uniform mesh of spacing h, with grid nodes ij, and employing the standard notation that I,Y~ is the approximation to the solution W(ih,jh, ndt), where At is the time step, we might write y"'ys</p><formula xml:id="formula_2">'I " + ( F ) ( V u y ; ) = 0. At (7)</formula><p>Here, we have used forward differences in time, and let V , y i be some appropriate finite difference operator for the spatial derivative.</p><p>The correct technique for approximating the spatial derivative in the above comes from respecting the appropriate entropy condition for propagating fronts, discussed in detail in [29]. As brief motivation for these schemes, consider a periodic cosine curve propagating in its normal direction with speed F = 1 -EK, where K is the curvature. This problem has been discussed extensively in <ref type="bibr">[28]</ref>. For E &gt; 0, the front stays smooth for all time. For E = 0, the parameterized analytic solution corresponds to a front which passes through itself and develops a swallowtail solution. In order for the propagating front to correspond to the boundary of an expanding region, we invoke the entropy condition, namely that if the boundary is viewed as a propagating flame, then once a particle is burnt, it stays burnt. This entropy condition yields the front which corresponds to the limiting solution as E + 0 of the smooth case.</p><p>In order to build a correct entropy-satisfying approximation to the difference operator, we exploit the technology of hyperbolic conservation laws. Following <ref type="bibr">[23]</ref>, we use a modification of an . That is, given a speed function F(K), we update the front by the following scheme. First, separate F(K) into a constant advection term Fo and the remainder F I ( K ) , that is, The advection component Fo of the speed function is then approximated using upwind schemes, while the remainder is approximated using central differences. In one space dimension, we have Extension to higher dimensions are straightforward; we use the version given in <ref type="bibr">[30]</ref>.</p><p>The third advantage of the above formulation is that intrinsic geometric properties of the front may be easily determined from the level function y. For example, at any point of the front, the normal vector, is.given by and the curvature is easily obtained from the divergence of the gradient of the unit normal vector to front, that is, Finally, the fourth advantage of the above level set approach is that there are no significant differences in following fronts in three space dimensions. By simply extending the array structures and gradients operators, propagating surfaces are easily handled.</p><p>Since its introduction in [23], the above level set approach has been used in a wide collection of problems involving moving interfaces. Some of these applications include the generation of minimal surfaces [8], singularities and geodesics in moving curves and surfaces in [9], flame propagation [25],</p><p>[40], and fluid interfaces [31], <ref type="bibr">[22]</ref>. Extensions of the basic technique include fast methods in [ l ] and extensions to triple points in <ref type="bibr">[3]</ref>. The fundamental Eulerian perspective presented by this approach has since been adopted in many theoretical analyses of mean curvature flow, in particular, see <ref type="bibr">[13]</ref>. In computer vision, a model for shape theory based on this work has been presented in [ 161.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="111.">SHAPE RECOVERY WITH FRONT PROPAGATION</head><p>In this section, we describe how the level set formulation for the front propagation problem discussed in the previous section can be used for shape recovery. First, note that the front represents the boundary of an evolving shape. Since the idea is to'extract objects, shapes from a given image, the front should be forced to stop in the vicinity of the desired objects' boundaries. This is analogous to the force criterion used to push the active contour model towards desired shapes <ref type="bibr">[15]</ref>. We define the final shape to be the configuration when all the points on the front come to a stop, thereby bringing the computation to an end.</p><p>Our goal now is to define a speed function from the image data that can be applied on the propagating front as a halting criterion. As before, we split the speed function F into two components: F = FA + FG. The term FA, referred to as the advection term, is independent of the moving front's geometry. The front uniformly expands or contracts with speed FA depending on its sign and is analogous to the inflation force defined in <ref type="bibr">[lo]</ref>. The second term FG, is the part which depends on the geometry of the front, such as its local curvature. This (diffusion) term smoothes out the high curvature regions of the front and has the same regularizing effect on the front as the internal deformation energy term in thin-plate-membrane IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE, VOL. 17, NO. 2, FEBRUARY 1995 splines <ref type="bibr">[15]</ref> (see the Fig. <ref type="figure" target="#fig_12">9</ref>). We rewrite Equation 6 by splitting the influence of F as First consider the case when the front moves with a constant speed, that is, FG = 0 3 F = FA. Define a negative speed F, to be where M I and M2 are the maximum and minimum values of the magnitude of image gradient IVG, * I(x, j)I, (x, y) E R. The expression Go * I denotes the image convolved with a Gaussian smoothing filter whose characteristic width is 6. Alternately, we could use a smoothed zero-crossing image to synthesize the negative speed function. The zero-crossing image is produced by detecting zero-crossings in the function V'G, * I , which is the original image convolved with a Laplacian-of-Gaussian filter whose characteristic width is Q. The value of F, lies in the range [-FA, 01 as the value of image gradient varies between M I and MZ. From this argument it is clear that, if IVG,* I(x, y)I approaches the maximum M I at the object boundaries, then the front gradually attains zero speed as it gets closer to the object boundaries and eventually comes to a stop.</p><p>If FG # 0, then it is not possible to find an additive speed term from the image that will cause the net speed of the front to approach zero in the neighborhood of a desired shape. Instead, we multiply the speed function F = FA + FG with a quantity k,. The term k,, which is defined as</p><formula xml:id="formula_3">1 k f ( x , y ) = 1 +(VGU * I(x,y)l'</formula><p>has values that are closer to zero in regions of high image gradient and values that are closer to unity in regions with relatively constant intensity. If one desires a speed function that falls to zero faster than the reciprocal function, the following definition can be employed: More sophisticated stopping criteria can be synthesized by using the orientation dependent "steerable" filters [ 141.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Iv. EXTENDING THE SPEED FUNCTION</head><p>The image-based speed terms have meaning only on the boundary y(t), that is, on the level set { v = 0 ) . This follows from the fact that they were designed to force the propagating level set ( t y = 0) to a complete stop in the neighborhood of an object boundary. However, the level set equation of motion is written for the function ydefined over the entire domain. Consequently, we require that the evolution equation has a consis-tent physical meaning for all the level sets, that is, at every point (x. y ) E R. The speed function FI derives its meaning not from the geometry of y but from the configuration of the level set ( w = 0 ) in the image plane. Thus, our goal is to construct an image-based speed function that is globally defined. We call it an extension of F, off the level set { y = 0) because it extends the meaning of F, to other level sets <ref type="bibr">[30]</ref>. Note that the level set ( 0) lies in the image plane and therefore @, must equal F, on ( = 0). The same argument applies to the coefficient k,. With the extensions so defined, the equation of motion for the case F = FA is given by and when F = FA + FG.</p><p>If the level curves are moving with a constant speed, that is, FG = 0, then at any time t, a typical level set { y = C) , C E R, is a distance C away from the level set ( y = 0) (see Fig. <ref type="figure" target="#fig_3">3</ref>). Observe that the above statement is a rephrased version of Huy- gen 's principle which, from a geometrical standpoint, stipulates that the position of a front propagating with unit speed at a given time t should consist of only the set of points located a distance t away from the initial front. On the other hand, for FG # 0, the level sets will not remain a constant distance apart. With this in mind, there are several Gays to extend the speed function to the neighboring level sets. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Global Extension</head><p>As a first attempt, we require that the external (image-based) speed function be such that level sets moving under this speed function cannot collide.</p><p>We can construct one such extension to the image-based speed function by (see Fig. <ref type="figure" target="#fig_4">4</ref>) letting the value of kI(i,) at a point P lying on a level set { y = C) be the value of 4(iI) at a point Q, such that point Q is closest to P and lies on the level set { v= 0). Thus, k,(L/) reduces to FI (k,) on { y = 0).</p><p>By updating the level set function on a grid, we are moving the level sets without constructing them explicitly. Therefore a straightforward algorithm consists of advancing from one time step to the next as follows: Algorithm 1 1) At each grid point (iAx, jAy), where Ax and Ay are step sizes in either coordinate directions, the extension of image-based speed term is computed. This is done in accordance with the construction described in the previous section; that is, by searching for a point q which lies on the level set</p><formula xml:id="formula_4">{ ty= O ) ,</formula><p>and is closest to the point (iAx, jAy). The value of imagebased speed term at the current point is simply its value at the point q.</p><p>2) With is constructed as follows. Given a cell C(i, j ) , if or then C(i, j ) @ $t) and is ignored, else, the entry and exit points where y = 0 are found by linear interpolation. This provides two nodes on r(t) and thus, one of the line segments which form the approximation to $t). The collection of all such line segments constitutes the approximation to the level set [ ty= 0}, which is used for future evaluation of the imagebased speed term in the update equation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4)</head><p>Replace n by n + 1 and return to step 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Global Extension with Reinitialization</head><p>The above construction can create a discontinuous velocity extension away from the zero level set, since the distance function is not differentiable. One solution to this is to reinitialization the level set function every fixed number of time steps to keep the level sets evenly spaced around the front. A straightforward way to do this is to recompute the distance from each point of the grid to the zero level set. However, this is an O(N3) operation, if we assume that there are N points in each coordinate direction, plus approximately O(N) points on the interfaces.</p><p>An alternative to this reconstruction is provided by [31], based on an idea of Morel. The idea is simply to iterate on the level set function at a given time according to the following equation:</p><p>In the limit as k + m, this convergences to the distance function, with some error in relocating the original zero level set. For details, see [5].</p><p>The most expensive step in either of these algorithms is the computation of the extension for image-based speed term. This is because at each grid point, we must search for the closest point lying on the level set { ty = 0). Moreover, if FG = 0, then the stability requirement for thi explicit method for solving our level set equation is At = O(Ax). For the full Equation ( <ref type="formula">12</ref>), the stability requirement is At = O(Axz). This could potentially force a very small time step for fine grids. These two effects, individually and compounded, make the computation exceedingly slow. In the case of reinitializing using the above iteration formula, additional labor is involved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Narrow-Band Extension with Reinitialization</head><p>As a efficient alternative, we observe that the front can be moved by updating the level set function at a small set of points in the neighborhood of the zero set instead of updating it at all the points on the grid. In Fig. <ref type="figure">5</ref> the bold curve depicts the level set { ty= 0) and the shaded region around it is the narrow band. The narrow band is bounded on either side by two curves which are a distance 6 apart, that is, the two curves are the level sets ( ty = f &amp;2). The value of 6 determines the number of grid points that fall within the narrow band. Since, during a given time step the value of wj is not updated at points lying outside the narrow band, the level sets [lM &gt; 6'2) remain stationary. The zero set which lies inside moves until it collides with the boundary of the narrow band. Which boundary the front collides with depends on whether it is moving inward or outward; either way, it cannot move past the narrow band. A complete discussion of the narrow band techniques for interface propagation may be found in [ 13.   As a consequence of our update strategy, the front can be moved through a maximum distance of 8 2 , either inward or outward, at which point we must rebuild an appropriate (a new) narrow band. We reinitialize the tyfunction by treating the current zero set configuration, that is, { ty = 01, as the initial curve $0). Chopp [8] observed that the reinitialization step can be made cheaper by treating the interior and exterior mesh points as sign holders. Note that the reinitialization procedure must account for the case when ( ty = 0) changes topology. This procedure will restore the meaning of ty function by cor- by a distance equal to &amp;2. The value of I is set to the number of time steps required to move the front by a distance roughly equal to &amp;2. This choice depends on some experimentation. Thus, a faster algorithm for shape recovery consists of the following steps: the narrow band, the issue of specifying boundary conditions for points lying on the edge of the band becomes pertinent. With our relatively simple speed motion, the free-end boundary condition is adequate, however, in more complex applications such as crystal growth, and flame propagation, accurate specification of boundary conditions is necessary [ 13.</p><p>We now show that this new faster approach provides a correct approximation to the propagating front problem. In Fig. <ref type="figure" target="#fig_7">6</ref>, we show the result of applying narrow-band algorithm to a star shaped front propagating with speed F = -K, where K is the curvature as in Equation (1 1). The calculation was done on a unit box with 64 points in either direction, and a time step of At = 0.00003 was employed. The width of the narrow band has been set to 6 = 0.075, and the w function was recomputed once every (I =) 40 time steps. In Fig. <ref type="figure" target="#fig_7">6(a)</ref>, we show the initial curve along with the level sets (I v/l e 0.2).</p><p>After 40 narrow-band updates (Fig. <ref type="figure" target="#fig_7">6(b)</ref>), only the level sets {lv/l e 0.0375) move and the rest remain stationary. We note the inconsistency between the level sets lying on either side of the narrow band, making the reinitialization step necessary in order to restore the meaning of the ty function. Following the reinitialization step, another 40 update steps are applied (Fig. <ref type="figure" target="#fig_7">6(c</ref>)), which "diffuses" the high curvature regions of the front even further. In subsequent figures, the results of repeatedly applying the same strategy are shown. Finally, in Fig. <ref type="figure" target="#fig_7">6</ref>(f), the peaks and troughs on the front get completely diffused, and it attains a smooth circular configuration after four Algorithm 2 1) Set the iteration number m = 0 and go to step 2.</p><p>2)At each grid point (i, j ) lying inside the narrow band,</p><p>3) With the above value of extended speed term (@), , and yTj, calculate y : ' ' using the upwind, finite the extension k, Of image-based 'peed term. reinitialization steps and a total of 200 time steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Straighqorward Narrow-Band Extension</head><p>1.1 difference scheme given in <ref type="bibr">[30]</ref>. 4)Construct a polygonal approximation for the level set [ VI= 0) from wr ; ' . A contour tracing procedure is used to obtain a polygonal approximation. Given a cell (i, J ) which contains $t), this procedure traces the contour by scanning the neighboring cells in order to find the next cell which contains $t). Once such a cell is found, the process is repeated until the contour closes on itself. The set of nodes visited during this tracing process constitutes the polygonal approximation to st). In general, to collect all the closed contours, the above tracing procedure is started at a new, as yet unvisited, cell which contains the level set { w = 0). A polygonal approximation is required in step 2 for the evaluation of image-based speed term and more importantly, in step 6 for reinitializing the function. 5) Increment m by one. If the value of m equals I, go to step 6, else, go to step 2.</p><p>6)Compute the value of signed distance function w by treating the polygonal approximation of { w = 0) as the initial contour $0). As mentioned earlier, a more general method of reinitialization is required when { ly = 0) changes topology. Go to step 1.</p><p>at points lying in In this approach, since we only update</p><p>The narrow-band approach, in addition to being computationally efficient, allows us to return to the original construction of the speed function extension and replace it with a more mathematically appealing version. Since the narrow-band mechanism periodically "recalibrates" the front, we can in fact simply move each level set with the speed determined by the image gradient as given in Equations ( <ref type="formula">14</ref>) and (15). In other words, for points inside the narrow band, the external speed values are picked directly from their corresponding image locations. Thus, we can ignore the previous extension velocity and provide a purely geometric one based on the local image gradient. Although this may cause many other level sets to temporarily stop, the narrow-band reinitialization resets them all around the zero level set. This will ensure that the zero level set is drawn close to the object boundary as well as retain other desirable properties of the level set approach, such as topological merge and split. Also, since the extension computation does not involve any search, the time complexity of this approach is identical to that of a basic narrow-band front propagation algorithm. We currently use this computationally efficient algorithm and suggest it for others interested in this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. SHAPE RECOVERY RESULTS</head><p>In this section we present several shape recovery results that were obtained by applying the narrow-band level set algorithm to image data. Given an image, our method requires the user to provide an initial contour y(0). The initial contour can be placed anywhere in the image plane. However, it must be placed inside a desired shape or enclose all the constituent shapes. Our front seeks the object boundaries by either propagating inward or outward in the normal direction. This choice is made at the time of initialization. Note that after the specification of initial shape of y(O), our algorithm does not require any further user interaction. On the other hand, the user may interact with the model by varying the smoothness control pa-rameter E until a desired amount of smoothness is achieved in a given shape.</p><p>The initial value of the function I , U that is, Hx, 0) is computed from $0). We first discretize the level set function won the image plane and denote wij as the value of I,U at a grid point (idx, jAy), where Ax and Ay are step sizes in either coordinate directions. We define the distance from a point (i, j ) to the initial curve to be the shortest distance from (i, j ) to y(0). The magnitude of w, is set to this value. We use the plus sign if is outside y(0) and minus sign if (i, j ) is inside. Once the value of yjj is computed at time t = 0 by following the above procedure, we use algorithms from the previous section to move the front.</p><p>We now present our shape recovery results in 2D. First, we consider a 256 x 256 CT (computed tomography) image of an abdominal section shown in Fig. <ref type="figure">7</ref>(a), with the goal of recovering the shape of the stomach in this particular slice. The function yhas been discretized on a 128 x 128 mesh, that is, calculations are performed at every second pixel. In Fig. <ref type="figure" target="#fig_11">8</ref>(a), we show the closed contour that the user places inside the desired shape at time t = 0. The function y i s then made to propagate in the normal direction with speed F = k,(-1.0 -0.025K).</p><p>We employed the narrow-band update algorithm to move the front with a time step size set to At = 0.0005, and the yfunction was recomputed after every 50 time steps. We emphasize that our method does not require that the initial contour be placed close to the object boundary. In addition, observe how the front overshoots all the isolated spurious edges present inside the shape (see Fig. <ref type="figure">7</ref>(b)) and settles in the neighborhood of edges which correspond to the true shape. This feature is a consequence of EK component in the speed which diffuses regions of high curvature on the front and forces it to attain a smooth shape.</p><p>As mentioned in Section 111, smoothness of the front can be controlled by choosing an appropriate curvature component in the speed function F = 1 -EK. The objective of our next experiment is to demonstrate smoothness control in the context of shape recovery. In Fig. <ref type="figure" target="#fig_12">9</ref>(a) through Fig. <ref type="figure" target="#fig_12">9</ref>(c), we show the results of applying our narrow-band shape recovery algorithm to an image consisting of three synthetic shapes. Initialization was performed by drawing a curve enclosing each one of the three shapes. We compute the signed distance function ytx, y) from these curves. The level sets of are then made to propagate with speed F = k, (1 .O -EK). First, as shown in Fig. <ref type="figure" target="#fig_12">9</ref>(a), we perform shape recovery with the value of E = 0.05. The process is repeated with different values of E; 0.25 in Fig. <ref type="figure" target="#fig_12">9</ref>(b) and 0.75 in Fig. <ref type="figure" target="#fig_12">9</ref>(c). Clearly, with every increment in the value of E, the level set ( ly= 0} attains a configuration that is relatively smoother. This is analogous to the smoothness provided by the second order term in the internal energy of a thin flexible rod [ 151.</p><p>In our third experiment we recover the complicated structure of an arterial tree. The real image has been obtained by clipping a portion of a digital subtraction angiogram. This is an example of a shape with extended branches or significant protrusions. In this experiment we compare the performance of our scheme with the active contour model. First, an attempt is made to reconstruct the arterial structure using a snake model with inflation forces <ref type="bibr">[lo]</ref>. In Fig. <ref type="figure">10(a</ref> in terms of the closeness to the desired final shape. In all three cases the active contour model, even after 1000 time iterations, barely recovers the main stem of the artery and completely fails to account for the branches. Due to the existence of multiple local minima in the (nonconvex) energy functional which the numerical procedure explicitly minimizes, the final result depends on the initial guess. Observe how, in the third case, despite a good initialization (Fig. <ref type="figure">lO(g</ref>)), the snake snaps back into a relatively bumpless configuration in Fig. <ref type="figure">10(h</ref>). This is due to the snake's arc-length length (elasticity) and curvature (rigidity) minimizing property. Snakes prefer regular shapes because shapes with protrusions have very high defor ,.</p><p>mation energies. Note that it is important to maintain a balance between the image-based force and the inflation force. Therefore, we cannot increase the latter arbitrarily. One possible way to account for significant protrusions in a shape is via an adaptive resampling of the first order "balloon-snake" model. This however is a cumbersome solution to the problem. Now, we apply our level set algorithm to reconstruct the same shape. After the initialization in Fig. <ref type="figure">1</ref> l(a), the front is made to propagate in the normal direction. We employ the narrow-band algorithm with a band width of 6 = 0.045 to move the front. It can be seen that in subsequent frames the front evolves into the branches and finally in Fig. <ref type="figure">1</ref> l(h) it completely reconstructs the complex tree structure. Thus, a single instance of our shape model sprouts branches and recovers all the connected components of a given shape. Calculations were carried out on a 128 x 128 grid and a time step At = 0.00025 was used. The In the next experiment, we depict a situation when the front undergoes a topological transformation to reconstruct the constituent shapes in an image. The image shown in Fig. <ref type="figure" target="#fig_1">12</ref>(a) consists of three distinct shapes. Initial curve is placed in such a way that it envelopes all the objects. The front is then advanced in the direction of the negative normal. Alternately, we could perform the initialization by placing a curve in each one of the individual shapes and propagating them in the normal direction. We choose the former option. The level set { ty= 0 ) first wraps itself tightly around the objects (see Fig. <ref type="figure" target="#fig_1">12(d</ref> Next, we show that our approach can also be used to recover shapes with holes. The shapes in the Fig. <ref type="figure" target="#fig_3">13</ref> are examples of shapes with holes. The outer and inner boundaries of a given shape are recovered without requiring separate initializations. In Fig. <ref type="figure" target="#fig_3">13</ref>(a), we show the initial contour which encloses both the shapes. This contour is then made to propagate inward with a constant speed. Fig. <ref type="figure" target="#fig_3">13</ref>(b) through Fig. <ref type="figure" target="#fig_3">13(d</ref>) are intermediate stages in the front evolution. In Fig. <ref type="figure" target="#fig_3">13(e)</ref>, it splits into two separate contours. The calculation comes to a halt when, in Fig. <ref type="figure" target="#fig_3">13</ref>(f), the level set { v/ = 0) recovers the outer boundaries of two disconnected shapes. In the second stage of our computation, we treat the zero set configuration in Fig. <ref type="figure" target="#fig_3">13(f</ref>) as an initial state, and propagate the front inward by momentarily relaxing the image-based speed term. This causes the zero set to move into the shapes as shown in Fig. <ref type="figure" target="#fig_3">13(g)</ref>, and recover the holes, thereby achieving a complete shape recovery (see 13(h)). The calculations for this experiment were done on a 128 x 128 grid, and the time step At was set to 0.00025.</p><p>In our last experiment, we recover the shape of a flat superquadric using the level set front propagation scheme in 3D. Vol- In this paper we have presented a new shape modeling scheme. Our approach retains some of the desirable features of existing methods for shape modeling and overcomes some of their deficiencies. We adopt the level set techniques first introduced in <ref type="bibr">Osher and Sethian [23]</ref> to the problem of shape recovery. With this approach, complex shapes can be recovered from images. The final result in our method is relatively independent of the initial guess. This is a very desirable feature to have, especially in applications such as automatic shape recovery from image data. Moreover, our scheme makes no a priori assumption about the object's topology. Other salient features of our shape modeling scheme include its ability to split and merge freely without any additional bookkeeping during the evolutionary process, and its easy extensibility to higher dimensions. We believe that this shape modeling algorithm will have numerous applications in the areas of computer vision and computer graphics. For an extension of this work to a level set based shape description and recognition scheme, the reader is referred to <ref type="bibr">Malladi and Sethian [21]</ref>. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Fig. I .Test bed for our topology-independent shape modeling scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Level set formulation of equations of motion -(a) and (b) show the curve y and the surface Hx, y ) at t = 0, and (c) and (d) show the curve y and the corresponding surface w(x, y ) at time t.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>By the chain rule,where xi is the ith component of x .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Huygen's principle construction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>IXFig. 4 .</head><label>4</label><figDesc>Fig. 4. Extension of image-based speed terms to other level sets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>,~, calculate I,u~,;' using the upwind, finite difference schemes given in[30].3) Construct an approximation for the level set ( ty = 0) from yts' . This is required to visualize the current position of the front in the image plane. A piecewise linear approximation for the front ~t )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>5 Fig. 5 .</head><label>55</label><figDesc>Fig. 5. A narrow band of width 6 around the level set ( y = 0).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6 .</head><label>6</label><figDesc>Narrow-band algorithm applied to a star-shaped front propagating with speed F = -K. Calculations were done with a 64 x 64 grid with a time step Af = 0.00003. Ywas recomputed after every 40 time iterations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Fig. 7. Image-based speed term kdx, y) =</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>Fig. 7(b) shows the image-based speed term which is synthesized according to Equation (14). Note that in Fig. 7(b), kdx, y) values lying in the interval [0..1] have been mapped into the interval [0..255]. In Fig. 8(b) through Fig. 8(e) we depict the configuration of the level set { y = 0) at four intermediate time instants. The final result is achieved after 575 time iterations and is shown in Fig. 8(f).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>) through Fig. lO(i), we show a sequence of pictures depicting the snake configuration in the image. We present the final equilibrium state of the snake in Fig. lO(c), Fig. lO(f), and Fig. 1O(i) corresponding to three distinct initializations, each better than the preceding one</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Recovery of the stomach shape from a CT image of an abdominal section. Narrow-band computation was done on a 128 x 128 gridthe front was made to propagate with speed F = k,(-1.0 -0.025 K ) and the time step At was set to 0.OOOS. ylwas recomputed once every SO time steps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Smoothness control in shape recovery can be achieved by varying the CUI</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>) through Fig.12(f)). Subsequently it changes connectivity and splits twicein Fig.12(g) and Fig.12(h), thereby recovering three shapes. Fig.12(i) shows the final result. Again it should be noted that a single instance of our shape model dynamically splits into three instances to represent each object. The function v/ was discretized on a 64 x 64 grid and At was set to 0.00025.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>the speed F = k, (1.0 -EK) , ( c ) E = 0.75ume data for this experiment consists of 32 slices each with a particular cross section of the superquadric. The image-based speed term kI is computed from these images according to an equation in 3D which is analogous to Equation (14). A sphere, which is the level surface { w= O } of a function Nx, y, z) = 2 + yz+ zz-O.Ol, forms our initialization (see Fig.14(a)). This initial surface is moved with speed F = i, by updating the value of w on a discrete 3D grid. The initial surface expands smoothly in all directions until a portion of it collides with the superquadric boundary. At points with high gradient, the k, values are close to zero and cause the zero set to locally come to stop near the boundary of the superquadric shape. This situation is depicted in Fig.14(b) through Fig.14(e), wherein the initial spherical shape transforms into a flat superquadric. Finally, in Fig.14(f), all the points on our shape model are stopped, thereby recovering the entire shape of the flat superquadric. Calculations were done on a 32 x 32 x 32 grid with a time step Af = 0,0025. e VI. CONCLUDING REMARKS</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 10 .Fig. 11 .Fig. 12 .Fig. 13 .Fig. 14 .</head><label>1011121314</label><figDesc>Fig. 10. An unsuccessful attempt to reconstruct a complex shape with significant protrusions using an active contour model. Three different results are shown in parts (c), (0, and (i) corresponding to three distinct initializations in parts (a), (d), and (g), respectively. The following parameter values were employed in this experiment: y (damping) = 1.0, At = 0.50, W I (elasticity) = 0.035, w2 (rigidity) = 0.015, coefficient of inflation force = 0.50, and coefficient of image force = 2.50.</figDesc></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>'s and J. Sethian's research supported in part by the Applied Mathematical Sciences Subprogram of the Office of Energy Research, USDept. of Energy under Contract DE-AC03-76SD00098 and by the NSF ARPA under grant DMS-8919074. B. C. Vemuri's work sponsored in part by NSF grant ECS-9210648.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In the summer of 1985 he worked at the National Geophysical Research Institute, India. During the spring of 1988, he held a research assistant position with the semiconductor physics group at the Central Electrical and Electronics Research Institute, India, From summer 1990, till fall 1993, he was a graduate research assistant at the University of Florida, and was affiliated with the Center for Computer Vision and Visualization.</p><p>His research interests ace focused on computational vision, shape modeling and recognition, computer graphics, and medical image interpretation.</p><p>Dr. Malladi was awarded the NSF Postdoctoral Fellowship in Computational Science and Engineering in June 1994, and his work received best peer reviews at the Third European Conference on Computer Vision, Stockholm, Sweden, in May 1994.</p><p>James A. Sethian is professor of mathematics at the University of California, Berkeley, California, USA, and senior scientist in the physics division at the Lawrence Berkeley Laboratory. Before coming to Berkeley, he was at the Courant Institute of Mathematics.</p><p>He received a Ph.D. in mathematics from the University of California, Berkeley, and has been a recipient of the Presidential Young Investigator Award and a Sloan Foundation Fellowship.</p><p>His research interests include computational physics, parallel processing, image processing, and material science.</p><p>Baba C. Vemuri received the PhD degree in electrical and computer engineenng from the University of Texas at Austin in 1987, and joined the Department of Computer and Information Sciences at the University of Florida, Gainesville, where he is currently an associate professor of computer and information sciences and electrical engineering.</p><p>In the summer of 1988 and 1992, Prof. Vemuri was a Visiting Faculty Member at the IBM Thomas J. Watson Research Center, Yorktown Heights, NY, associated with the Exploratory Computer Vision Group there. During the academic year 1989-1990, he was a Visiting Research Scientist with the German Aerospace Research Institute, DLR Oberpfaffenhofen, Germany.</p><p>His research interests include computational vision, modeling for vision and graphics, medical imaging, and applied mathematics. In the past several years, his research has focused primarily on efficient algorithms for 3D shape modeling and recovery from image data. He has published numerous refereed journal and conference articles in the field of computer vision and its applications. Dr. Vemuri received the NSF Research Initiation and the Whitaker Foundation Awards in 1988 and 1994, respectively. He was a recipient of the first priu: for best intemational paper in Computer Vision from the Norwegian branch of the IAPR in 1992. He subsequently received the best review scores for his co-authored paper in ECCV '94. Dr. Vemuri served as a guest editor for the April 1992 special issue on Range Image Understanding of the Joumal of Image and Vision Computing. He also served as a program committee member for the IEEE Conference on CVPR in 1993, and was the chairman of the SPIE-sponsored conferences on Geometric Methods in Computer Vision in 1991 and 1993, respectively.</p><p>Dr. Vemuri is a member of the IEEE Computer and Signal Processing Societies,, ACM SIGGRAH and the SIAM.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A fast level set method for propagating interfaces</title>
		<author>
			<persName><forename type="first">D</forename><surname>Adalsteinsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of Compututionul Physics</title>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
	<note>submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Using dynamic programming for solving variational problems in vision</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Amini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">E</forename><surname>Weymouth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Tn&quot;. on Punem Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="855" to="867" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Motion of multiple triple junctions: A level set approach</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bence</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Meniman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Bok</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Truns. on Panem Analysis and Muchine Intelligence</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="13" />
			<date type="published" when="1991">1994. 1991</date>
		</imprint>
	</monogr>
	<note># Compututionul Physics</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Projection mthods coupled to level set interface methods,&quot; to be submitted</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bourlioux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">1</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. qf&apos;Computuhonal Physics</title>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vi</forename></persName>
		</author>
		<imprint>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
	<note>wul Reconstruction</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">A geometric model for active contours in image processing</title>
		<author>
			<persName><forename type="first">V</forename><surname>Caselles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Catte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Coll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dibos</surname></persName>
		</author>
		<idno>no. 9210</idno>
		<imprint>
			<pubPlace>France</pubPlace>
		</imprint>
		<respStmt>
			<orgName>CEREMADE, Universiti de Paris-Dauphine</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Internal report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On active contour models and balloons</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision, Graphics, and Imuge Processing</title>
		<imprint>
			<date type="published" when="1991-03">March 1991</date>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="211" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Shape representation and image segmentation using deformable models</title>
		<author>
			<persName><forename type="first">H</forename><surname>Delingette</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hebert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ikeuchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Con$ on Computer Vision and Pattern Recognition</title>
		<meeting>of IEEE Con$ on Computer Vision and Pattern Recognition<address><addrLine>Maui, Hawaii</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-06">June 1991</date>
			<biblScope unit="page">467472</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Stable and entropy satisfying approximations for transonic flow calculations</title>
		<author>
			<persName><forename type="first">B</forename><surname>Engquist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Comp</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Motion of level sets by mean curvature. I</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Spruck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ofDifJerentia1 Geometry</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="635" to="681" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Steerable filters for early vision, image analysis, and wavelet decomposition</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Adelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICCV</title>
		<meeting>of ICCV<address><addrLine>Osaka, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="406" to="415" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Snakes: Active contour models</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int&apos;l. J. of Computer Vision</title>
		<imprint>
			<biblScope unit="page" from="321" to="331" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Toward a computational theory of shape: An overview</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">B</forename><surname>Kimia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Tannenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Zucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. qf ECCV</title>
		<meeting>qf ECCV<address><addrLine>Antibes, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Deformable models: Canonical parameters for surface representation and multiple view integration</title>
		<author>
			<persName><forename type="first">D</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Pavlidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<date type="published" when="1991-05">May 1991</date>
			<pubPlace>Gainesville, FL</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. of CIS, Univ. of Florida</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master&apos;s thesis</note>
	<note>One-dimensional regularization with discontinuities</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A topology-independent shape modeling scheme</title>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<pubPlace>Gainesville, FL, December</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. of CIS, Univ. of Florida</orgName>
		</respStmt>
	</monogr>
	<note>Doctoral dissertation</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Evolutionary fronts for topology-independent shape modeling and recovery</title>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Third European Con$ on Computer Vision, LNCS</title>
		<meeting>of Third European Con$ on Computer Vision, LNCS<address><addrLine>Stockholm, Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-05">May 1994</date>
			<biblScope unit="volume">800</biblScope>
			<biblScope unit="page" from="3" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">A unified framework for shape segmentation, representation, and recognition</title>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-08">Aug. 1994</date>
		</imprint>
		<respStmt>
			<orgName>Lawrence Berkeley Laboratory, Univ. of California, Berkeley</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Report LBL-36069</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Computing interface motion in compressible gas dynamics</title>
		<author>
			<persName><forename type="first">W</forename><surname>Mulder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. qf Computational Physics</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="209" to="228" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fronts propagating with curvature dependent speed: Algorithms based on Hamilton-Jacobi formulation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="12" to="49" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Closed-form solutions for physically based shape modeling and recognition</title>
		<author>
			<persName><forename type="first">A</forename><surname>Pentland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sclaroff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Pattern Anulysis und Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">7</biblScope>
			<date type="published" when="1991-07">July 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Dynamical behavior of a premixed turbulent open V-Flame</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rhee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Talbot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of Fluid Mech</title>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
	<note>submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Changes in connectivity in active contour models</title>
		<author>
			<persName><forename type="first">R</forename><surname>Samadani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Workshop on Visual Motion</title>
		<meeting>of the Workshop on Visual Motion<address><addrLine>Imine, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989-03">March 1989</date>
			<biblScope unit="page" from="337" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Fitting surfaces to scattered data</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Schumaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">G</forename><surname>Lorentz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Chui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Schumaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Approximation Theory II</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1976">1976</date>
			<biblScope unit="page" from="203" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Curvature and the evolution of fronts</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comm. in Math. Physics</title>
		<imprint>
			<biblScope unit="volume">101</biblScope>
			<biblScope unit="page">487499</biblScope>
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Numerical algorithms for propagating interfaces: Hamilton-Jacobi equations and conservation laws</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of DifJerential Geometry</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="131" to="161" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Crystal growth and dendritic solidification</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Strain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">98</biblScope>
			<biblScope unit="page" from="231" to="253" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">A level set approach for computing solutions to incompressible two-phase flow</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sussman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Smereka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<idno>93-18</idno>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note type="report_type">UCLA CAM Report</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Surface modeling with oriented particle systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tonnesen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics SIGGRAPH</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="185" to="194" />
			<date type="published" when="1992-07">July 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Regularization of inverse visual problems involving discontinuities</title>
		<author>
			<persName><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="822" to="829" />
			<date type="published" when="1986">1986. 1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">lie computation of visible surface representations</title>
		<author>
			<persName><forename type="first">D</forename><surname>Tempoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Constmints on deformable m dels: Recovering 3D shape and nonrigid motion</title>
		<imprint>
			<date type="published" when="1988">1988</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">417438</biblScope>
		</imprint>
	</monogr>
	<note>Artificial Intelligence, D. Terropoulos</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">ChW&quot;ting intrinsic parameters with active models for invaiant surface nxonstruction</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Panern Analysis andMachine Intelligence</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="668" to="681" />
			<date type="published" when="1992-11">Nov. 1992. July 1993</date>
		</imprint>
	</monogr>
	<note>PatlernRecognifionLeners</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Surface reconstruction using deformable models with interior and boundary constraints</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mitiche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">;</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">F</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. qf ICCV</title>
		<meeting>qf ICCV<address><addrLine>Osaka, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="3W" to="303" />
		</imprint>
	</monogr>
	<note>Curvature-based r e p m t ation of objects from range W Int</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Pmjection methods coupled to level set interface techniques</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. qf Comp~tatioml Physics</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="91" to="123" />
			<date type="published" when="1988">1992. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">He is currently working at the Lawrence Berkeley Laboratory</title>
	</analytic>
	<monogr>
		<title level="m">Ravikanth Malladj received his B.Eng. degree with honors in electrical engineering and an MSc. degree in physics from Birla Institute of Technology and Science</title>
		<meeting><address><addrLine>India; Gainesville, Florida, USA; Berkeley, California, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1988">1988</date>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
	<note>He subsequently received the MS degree in 1991 and the Ph.D. degree in 1993; both in computer vision from the University of Florida</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
