<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Shortest Paths, Single Origin-Destination Network Design, and Associated Polyhedra</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Thomas</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Sloan School of Management</orgName>
								<orgName type="institution" key="instit2">MIT</orgName>
								<address>
									<postCode>02139</postCode>
									<settlement>Cambridge</settlement>
									<region>Massachusetts</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Prakash</forename><surname>Mlrchandani</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Katz Graduate School of Business</orgName>
								<orgName type="institution">University of Pittsburgh</orgName>
								<address>
									<postCode>15260</postCode>
									<settlement>Pittsburgh</settlement>
									<region>Pennsylvania</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Shortest Paths, Single Origin-Destination Network Design, and Associated Polyhedra</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">047FDEA86F57F7048185505E44747CE9</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We study a specialized version of network design problems that arise in telecommunications, transportation, and other industries. The problem, a generalization of the shortest path problem, is defined on an undirected network consisting of a set of arcs on which we can install (load), at a cost, a choice of up to three types of capacitated facilities. Our objective is to determine the configuration of facilities to load on each arc that will satisfy the demand of a single commodity at the lowest possible cost. Our results (i) demonstrate that the single-facility loading problem and certain "common break-even point" versions of the two-facility and three-facility loading problems are polynomially solvable as a shortest path problem; (ii) show that versions of the two-facility loading problem are strongly NP-hard, but that a shortest path solution provides an asymptotically "good" heuristic; and (iii) characterize the optimal solution (i.e., specify a linear programming formulation with integer solutions) of the common break-even point versions of the two-facility and three-facility loading problems. In this development, we introduce two new families of facets, give geometric interpretations of our results, and demonstrate the usefulness of partitioning the space of the problem parameters to establish polyhedral integrality properties. Generalizations of our results apply to (i) multicommodity applications and (ii) situations with more than three facilities. 0 7993 by John Wiley &amp; Sons, Inc.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Although we do not typically think of it this way, the shortest path problem is a special case of a more general fixed-charge network design problem. Consider a network flow problem with a single commodity, single source, and single destination. Suppose we wish to design a network to send a unit of flow of this commodity from the source node to the destination node. Moreover, suppose we can install (load) integer multiples of a unit capacity facility on each arc {i, j } of the network, incurring a per unit cost aii for each unit of the facility. We wish to design a network at minimal NETWORKS, Vol. <ref type="bibr">23 (1993)</ref>  cost that has the capacity to meet the flow requirements for the given commodity. This design problem is easy to solve: We solve a shortest path problem from the commodity's source node to its destination node with respect to the arc costs aij and load one unit of the facility on each arc of the shortest path.</p><p>Now suppose that we need to send d (an integer) units of the commodity from its source to its destination and that we can load multiple types of facilities on each arc; that is, arc capacities are now available in several base capacities and we can install integer multiples of any base capacity, at a per unit cost, on each arc. We refer to this generalization of the shortest path problem as the single commodity network louding prohlein since we are loading the network with facilities, at a cost, to carry the required flow. The transition from the original shortest path problem to this more general setting raises several questions. Is the problem still easily solvable? Can we solve it as a shortest path problem? Can we formulate a linear programming model whose extreme point solutions satisfy the integrality restrictions of the problem? In this paper, we consider these issues. In particular, we consider three versions of the problem: (i) one with a single base level of capacity equal to C units, (ii) one with two base levels of capacity, a low level (LC) equal to one unit and a medium level (MC) equal to C units. and (iii) one with three base levels of capacity, low (LC), medium (MC), and high (HC) equal to one unit. C units, and AC units. We assume that both C and A are integers greater than one. and refer to these three versions of the problem as the one-facility (1F). twofacility (2F), and three-facility (3F) loading problems, respectively. As we will see, certain versions of the two-facility and three-facility problems are strongly NP-hard, and other versions are easy to solve. Moreover, for these efficiently solved versions of the problem, we are able to offer affirmative answers to the questions that we have posed.</p><p>This study is motivated by a set of network design problems that we have encountered in the telecommunications industry (see <ref type="bibr">Magnanti et al. [12]</ref>) and related problems that arise in transportation freight flow planning (e.g., see <ref type="bibr">Leung et al. [I I]</ref>). In the telecommunications industry, data transmission lines are available in several service types, for example, digital service type zero. or DSO, lines and digital service type one, or DSI, lines whose capacity is 24 times that of a DSO line. In freight flow applications, trucks on any transportation link might be available in multiple capacities: for example, 24-foot trailers or 48-foot trailers. These applications typically have many commodities, so the problem that we are considering in this paper arises as a subproblem.</p><p>More general fixed-charge network design problems arise in many application contexts, notably telecommunications, computer networking, facility location, production planning, and transportation. (For examples and for a discussion of the underlying methodology, we refer the reader to surveys by <ref type="bibr">Magnanti and Wong [14]</ref>, Minoux [16], and <ref type="bibr">Wolsey [21]</ref>.) Furthermore, some classical combinatorial optimization problems such as the traveling salesman problem, the minimum spanning tree problem, and the Steiner tree problem are special cases of the general network design problem. Consequently, the study of generic network design problems could yield theoretical, algorithmic, and practical insight that might cut across a wide variety of problem domains. Our hope is that the results presented in this paper might not only resolve (partially) the questions that we have posed, but might also contribute to a better understanding of more general design models.</p><p>Because of its importance, the network design problem has attracted substantial attention in recent years. In a more general form than we are considering, the problem associates two kinds of costs with each arc: (i)   <ref type="bibr">Powell and Sheffi [20]</ref>.)</p><p>The fixed-charge network flow problem assumes linear flow costs and fixed costs associated with installing capacity on the arcs. Balinski [4] and Gray 191 studied the specialized fixed-charge transportation version of the problem. <ref type="bibr">Balakrishnan et al. [3]</ref> suggested a dual ascent approach that has been successful in solving large-scale uncapacitated fixed-charge transshipment problems.</p><p>Our model assumes a piecewise staircase form for fixed costs and no flow costs. This cost function is closely related to the ones considered by <ref type="bibr">Goldstein and Rothfarb [8]</ref>, <ref type="bibr">Magnanti et al. [I21 and Mirchandani [171.</ref> The first set of these authors studied the singlesource multiple-destination problem and discussed properties of the optimal solution. The model considered by the second set of authors is more general and allows for commodity demand between every pair of nodes. These authors developed a polyhedral-based approach for solving this problem. <ref type="bibr">Padberg et al.</ref> [I91 studied the polyhedral properties of a core single-node fixed-charge problem. <ref type="bibr">LeBlanc and Simmons [lo]</ref> assumed nonzero flow costs in their model, but allowed capacity to be available at continuous levels.</p><p>We focus on a single-commodity version of the problem for situations with up to three types of facilities. The economies of scale in the tariff structure of these facilities implies that the cost function is neither convex nor concave; moreover, as we will see, the optimal solution does not inherit the nice extremal flow property that characterizes models with concave cost flows.</p><p>We assume that our problem is defined over a connected network G = ( N , A ) with node set N and undirected arc set A. Let a, b, and c be real vectors of dimension IA 1 , whose components equal, respectively, the cost of loading each unit of the LC, MC, and HC facilities. The first break-even point of arc { i , j } , mi = b,/a,, is the ratio of the cost of loading an MC facility to the cost of loading an LC facility. Similarly, the second break-even point, mt = c,/a,, is the ratio of the cost of loading an HC facility to the cost of loading an LC facility. For the most part, we assume that 1 &lt; rnh C C and rn; &lt; mi &lt; Am;; otherwise, when the costs are nonnegative, the optimal solution need not consider any MC and/or HC facilities.</p><p>This paper studies the one-facility, two-facility, and three-facility variations of the single-commodity loading problem in increasing order of difficulty. Our intention is to develop solution methods and to describe the polyhedral structure of integer programming formulations for particular versions of this problem. We show how to solve certain versions of the model as (variants of) shortest path problems and specify linear programming formulations for these models that have integer extreme points for the variables modeling the loading of facilities. We also show that other versions of the problem are difficult to solve (are NP-hard).</p><p>Section 2 introduces our notation and a first model formulation for the three-facility problem, and Sections 3, 4, and 5 study the three loading problems. In Section 3, we tighten the original formulation of the one-facility problem by adding a class of facets and show that this enhanced linear programming formulation describes the convex hull of feasible solutions:</p><p>For this enhanced problem formulation, in some optimal solution, the arc loading variables are all integer, and in a projected lower-dimensional space containing only these variables, the formulation completely describes the convex hull of the integer feasible solutions. To establish these polyhedral results, we develop and use a shortest path algorithm for solving the problem. The results in this section build directly upon well-known results from the literature.</p><p>Section 4 studies the two-facility loading problem. In this discussion, for the two-facility case, we present a generalization of the class of facets that we introduced in Section 3 for the one-facility problem. We show that an enhanced linear programming formulation does guarantee integer x and y solutions when the break-even points mi are equal for all the arcs; but, unlike the one-facility case, this formulation does not guarantee integer solutions in all situations. In this sec-tion, we develop a heuristic for the two-facility loading problem that generates asymptotically "good" solutions in the sense that the relative error of the heuristic solution goes to zero as the demand, d, approaches infinity. We also discuss some variations of the twofacility loading problem that are strongly NP-hard. In Section 5 , we generalize the results of Section 4. In particular, we introduce two new classes of facets for the three-facility loading problem. These facets are useful for generating a linear program that has an optimal solution with integer values for the arc design variables x, y, and z when the break-even points mb and mi are the same on all arcs { i , j } . Our proof technique, which conceivably applies in other settings as well, partitions the space of problem parameters and identifies optimal primal and dual solutions within each partition. We also show how to generalize these classes of facets for a broader class of capacitated network design problems. Section 6 concludes the paper with some possibilities for future research directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">NOTATION AND MODEL FORMULATIONS</head><p>This section introduces our notation and describes the basic ingredients of our model. Recall that the LC. MC, and HC facilities are available in unit capacities of 1, C, and AC (for given integers A and C that are both greater than 1) and the cost of installing one unit of these facilities on arc { i . j } is a,, b,, , and c',, , respectively. Let f;,(f;,) denote the flow of the commodity from i to j ( j to i) on arc {i, j } and let x l j , y,,, and z,, denote the number of LC, MC. and HC facilities loaded on arc {i,j}. In principle, the design variables x u , y u , and z,, could be unbounded; however, in practice, we can bound the feasible set of design vectors by a sufficiently large integer, say L, without altering the problem in any essential way.</p><p>We define an (undirected) cutset {S, T} by a partitioning of the node set N into two nonempty disjoint sets S C Nand T = N\S. An arc { i , j } E A belongs to cutset {S, T} if nodes i a n d j belong to different sets S and T. If the origin node 0 and the destination node D belong to different sets S and T, we refer to {S, T} as an 0-D cutset. We also define aggregate design variables for each cutset {S, T}: XSs equals the total number of LC facilities loaded on the cutset arcs, i.e., XS.T ber of MC and HC facilities loaded on this cutset. DS. denotes the total demand from the set S to the set T; note that Ds,r equals either the commodity demand d or 0 depending on whether {S, T} is an 0-D cutset or not. We let r S , 7 = DS, mod( C) and suppress the subscripts when doing so would not seem to cause any --2 ( r . , ~~( ~.</p><p>T ) xu, and Ys. T and Zs, equal the total num-confusion. We adopt the convention that rs. T equals C when Ds.7 is a multiple of C. Lastly, for p E 9Ik, we define p+ and p-as vectors with components CLj' = max(pj, 0) and py = min(p,.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0).</head><p>Using this notation, we can formulate the 3F loading problem as the following mixed-integer program: <ref type="figure">,</ref><ref type="figure">~~,</ref><ref type="figure">z ,</ref><ref type="figure">E Z ~,</ref><ref type="figure">j ,</ref><ref type="figure">~,</ref><ref type="figure">f ;</ref><ref type="figure">,</ref><ref type="figure">E ~. ' ,</ref><ref type="figure">f o r u l l { i ,</ref><ref type="figure">J } E A</ref> .</p><formula xml:id="formula_0">[Problem P(IP3)I : subject to: 1 X I , 5 L fur all { i . j } E A x ,</formula><p>In this formulation, the objective is to minimize the total cost incurred in loading the LC, MC, and HC facilities on all the arcs. The first set of constraints consists of the usual flow conservation constraints: They ensure that the flow conforms to the mass balance requirements of each node. The second set of constraints guarantees that the total flow on an arc does not exceed the total installed capacity on that arc. We call these constraints the capacity constraints. Finally, in addition to the upper bounding constraints, we require that the design variables x,, y,, and z, be nonnegative integers and the flow variablesJ;, be nonnegative.</p><p>In the IF specialization of this problem, the formulation does not contain either of the xu and zo variables, and in the 2F specialization, it does not contain the z, variables. [We refer to these formulations as P(IP1) and P( IP2) respectively .]</p><p>The max flow-min cut theorem permits us to recast the formulation P(IP3) by projecting it into the subspace of design variables (see also Mirchandani [ 171). Given values for the vectors, x, y, and z, which specify capacities on the arcs, the problem has a feasible flow </p><formula xml:id="formula_1">1 xij I L yij 5 L for all {i, j } E A 1 x i , yo, z i E Z', for all { i , j } E A .</formula><p>We refer to the one-facility version of this formulation without the variables x and z as P(CUTl), and the twofacility version without the variables z as P(CUT2).</p><p>The arguments described in the previous paragraph establish the following relationship between the formulations P(IP3) and P(CUT3).</p><p>Property 2.1. The polyhedron defined by the linear programming relaxation of formulation P(CUT3) is the projection of the polyhedron defined by the linear programming relaxation of formulation P(IP3) into the space of the x, y, and z variables.</p><p>For the IF loading problem, the aggregate-capacity demand inequality reduces to Ys, T 2 Ds. TIC = d/C if {S, T } is an 0-D cutset. But since the left-hand side of this inequality is an integer, the inequality remains valid if we round the right-hand side up to the next nearest integer. This integrality argument implies that the cutset inequality YS.T 2 IDs,.I/C] is valid for P(IP1). A special case of a more general result of Magnanti et al. [12] shows that this inequality, in fact, defines a facet of formulation P(IP1) whenever Ds. &gt; 0 and the subgraphs defined by S and Tare connected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Note that if d mod(C) equals C , then YS,T 2 [Ds.T/C]</head><p>is redundant since it is implied by the flow conservation and the capacity constraints. In Section 3, we show that we can use the cutset inequality to define the convex hull of the formulation P(CUT1) in the subspace of the design variables. Generalizations of the cutset inequalities apply to the 2F and the 3F cases and define facets of the underlying polyhedra (see <ref type="bibr">Magnanti et al. [12]</ref>). Sections 4 and 5 study these inequalities and show how they tighten the formulations P(IP2) and P(IP3).</p><p>To this point, we have formulated the network loading problem in two ways: One model contains both the flow variables f and arc design variables x, y, and z, and one model contains only the design variables. It is also instructive to model the problem with only the flow variables:</p><formula xml:id="formula_2">[Problem P(f)]: Li Cost I t 0 3 6 9</formula><p>LinkFlow (a) Single Facility subject to:</p><formula xml:id="formula_3">-d i f i = O C f j j -C Jj = 0 otherwise j € N J E N A, , &amp;; E %\',or all { i , j } E A .</formula><p>In this formulation, $ i i ( -) denotes the cost function on arc { i , j } as a function of the total flow on that arc. For the network loading problem, this cost function is neither convex nor concave. Notice that for the one-facility loading problem the cost function is a step function of width C corresponding to the MC facility. For the two-facility problem, the cost structure over the interval 0 &lt; f s C is a step function of unit width for the small facility and a single step of the cost function of the medium facility. The optimal cost on this interval is the lower envelope of these two cost functions. This cost function replicates itself in shape on each subsequent interval of length C ; observe, however, that when compared with the cost function in the range ( k -I)C &lt; f I kC, the cost function in the range kC &lt; f 5 ( k + l)C is shifted upward by the cost 6, of a single medium facility.</p><p>Observe that this flow formulation of the problem places all the model complexities in the objective function; the constraints are very simple: They define a shortest path polytope whose extreme points correspond to spanning trees in the underlying network with a flow of d units on the unique path in the tree joining the source and destination nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">THE ONE-FACILITY LOADING PROBLEM</head><p>We next consider the polyhedral structure of the IF model obtained by appending the cutset inequalities </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ys.7 2 [ D . Y . ~/ C ]</head><p>to the formulation P(IP1). As we will see, the one-facility version of the problem is easy to analyze since it essentially is a shortest path problem. To solve the problem, we simply solve a shortest path problem from the source node to the destination node with respect to the arc costs b+. Let P denote such a shortest path and let len(b+) denote its length. We load [d/Cl MC facilities on all arcs of path P for which 6, 2 0 and L MC facilities on all arcs of the network for which bii C 0. We also send a flow of d units on the facilities loaded on the shortest path. We refer to this solution as the loaded shortest path solution. The cost of this solution is [d/C]* len(b+) + LZ(j,jlEAb,;.</p><p>We make a preliminary observation before proving the optimality of the loaded shortest path solution. When C = 1, problem P(IP1) is equivalent to formulation P(IP3) without they or z variables. Notice that it is easy to remove the x variables from the linear programming relaxation of this formulation: If au &lt; 0, we set xu = L; and if a" 2 0, we set xu = Jj + jji. By making these associations, we can eliminate the x variables, and if d = 1, the resulting formulation in the f variables becomes the standard formulation of the shortest path problem with nonnegative arc costs. Therefore, for any choice of the cost vector a, the problem has a solution with an 0-D flow vector f carrying d units of flow on a single path. Setting x,, = L or x,, = JJ + Al, depending upon the sign of a,,, we see that if d and L are integral, then the linear programming relaxation of the problem always has an integral solution in the x variables. Consequently, the values of the x variables are integral in every extreme point to the polyhedron defined by relaxing the integrality constraints of the problem. This same argument applies to the formulation P(IPI) in the y variables whenever d is a multiple of C and both d and C are positive integers, since, in this case, ylJ = (f,, + f;,)/C andf;, + AI = 0 or d in the solution to the shortest path problem that arises after we eliminate the y variables. Since the y components of every extreme point in this polyhedron are integer, its projection (using Property 2.1) into the space of the y variables has integer extreme points. We have thus established the following lemma: Lemma 3.1. If d is a multiple of C and both C and dare integers, then the polyhedron defined by the linear programming relaxation of the cutset formulation P(CUTI) has integer extreme points and the values of the variables y are integer in every extreme point to the polyhedron defined by the linear programming relaxation of P(1PI).</p><p>To establish the optimality of the loaded shortest path when d is not multiple of C . we will use a dual interpretation of Dijkstra's algorithm (see Nemhauser  and Wolsey [ 181). This approach, based on linear programming duality? will also set the stage for our subsequent analysis of the two-facility and three-facility versions of the problem.</p><p>Recall from the theory of blocking polyhedra (Fulkerson [6]) that the length of the shortest 0-D path using the vector u E as arc lengths equals the maximum number of 0-D cuts that can be packed into the vector u. In other words, the length of the shortest 0-D path equals</p><p>In this expression, each component of the column vector 8 corresponds to an 0-D cutset, D is a matrix whose rows are the arc incidence vectors of 0-D cuts, and 1 is a column vector of ones of the appropriate dimension. A dual interpretation of Dijkstrd's algorithm shows how to assign optimal values to the components of 8. We will use this procedure, which we refer to as algorithm SPP, to prove Proposition 3.2 and will also use it in our algorithms for more general versions of the single commodity network loading problem in Section 5.</p><p>Algorithm SPP operates as follows: It initializes all the variables &amp; T to value 0, starts with a set Q equaling the origin node 0, and sets the initial "updated" cost of each arc to its given cost (which we assume is nonnegative). It then finds a minimum cost arc, with respect to the costs as updated throughout the algorithm, across the cutset {Q, N\Q}. Suppose that this arc is { i * , j * } and that node i* E Q. Next, the algorithm sets the value of the variable 8Q.N,Q corresponding to the cutset {Q, N\Q} equal to the updated cost of arc {i*, j * } and reduces the cost of all the arcs across the cutset by this same quantity. The algorithm then transfers nodej* to the set Q and repeats this process until it has assigned the destination node D to the set Q. At this stage, the shortest path length from node 0 to node D is C ( s . r ) Os,r. (Notice that the mechanics of the algorithm implies that the sum of all the cutset variables Bs, containing any arc {i, j } does not exceed the original cost of this arc. Moreover, for any arc { i * , j * } that the algorithm selects as the minimum cost arc at any step, the sum of the cutset variables tl.y.r containing that arc must equal the cost of that arc.)</p><p>The optimality of the loaded shortest path solution for the one-facility loading problem follows from the following proposition: In this formulation, the dual variables ui (with u,, = 0). wo, 0 s . ~. and no correspond to (i) the flow conservation constraint for node i, (ii) the capacity constraint for arc {i, j}, (iii) the cutset constraint for cutset { S , T}, and (iv) the upper bounding constraints for arc {i, j}, respectively. For ease in notation, in the remainder of this paper, we write </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IS. T t 3 t i . j )</head><p>We begin by applying Algorithm SPP with bC as the arc lengths to obtain the nonnegative variables OS, for all 0-D cutsets { S , T}. To construct the dual solution, we then set ui = 0 for all i E N, wo = 0 for all {i, j } E A , p S , T = 0s.T and nu = -bfi. This solution satisfies the nonnegativity constraints and constraints (3.1). Since the solution also satisfies constraints (3.2). It is easy to see that the objective function value of this dual solu-tion equals the objective function value of the loaded shortest path solution. This completes the proof of the second part of Proposition 3.2.</p><p>To prove the first part of Proposition 3.2, we observe that the optimal dual variables ui and wo corresponding to the flow conservation and capacity constraints in the flow model P(IP1) are zero: Thus, these constraints are not "critical" at the optimal primal solution.</p><p>As shown by simple examples, Proposition 3.2 is valid only for the special form of the objective function that we have considered with the zero-cost coefficients for the flow variables; that is, if the flow costs are nonzero, the problem can have an extreme point solution with nonintegral values for they variables. <ref type="bibr">Barany et al. [5]</ref> also considered special objective function structures in their study of the convex hull of solutions to uncapacitated lot-sizing problems.</p><p>The proof of Proposition 3.2 shows that we can determine the optimal solution to the 1F loading problem by solving a single shortest path problem and that all the demand flows over a single path in the optimal solution. Thus, even though our cost function has a staircase form, and is not convex or concave, the optimum solution occurs at an extreme point of the shortest path polytope in formulation P(f) just as it does for concave-cost single-commodity flow problems <ref type="bibr">(Zangwill [24]</ref>). This result also implies that we can scale the demand and cost figures to obtain an equivalent loading problem that has a unit demand.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">THE TWO-FACILITY LOADING PROBLEM</head><p>For situations with two instead of one facility, the network loading problem becomes more difficult and the results of Section 3 no longer apply. The problem is more complex for several reasons: (9</p><formula xml:id="formula_4">(ii) (iii)</formula><p>Adding a generalized version of the cutset inequalities YS. 2 IDs, TIC] to the linear programming relaxation of the formulation P(IP2) of two-facility case is not sufficient for generating integer optimal x and y solutions.</p><p>A heuristic that is a natural generalization of the shortest path algorithm for the 1F case, while generating "good" solutions, does not necessarily generate an optimal solution. The optimum flow need not be an extreme flow in the shortest path polyhedron defined by the formulation P(f). Thus, the 2F loading problem does not inherit the nice characterization of the optimal solution to the IF loading problem.</p><p>(iv) Variations of the 2F loading problem are strongly NP-hard.</p><p>In this section and the next subsection, we consider these four features of the two-facility problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Property (i).</head><p>The generalized cutset inequality for any cutset {S, T ) is X S , T + r5.T Y.7.r 2 r s . ~[ D s . d C l .</p><p>Note that if X.y.T = 0. then this inequality reduces to the cutset inequality Y.y,T z )D.7.TIC1 for the one-facility problem. Moreover, if YS.T = ID.$.T/C~ -I , then the inequality states that the unit capacity facility must provide at least X s . 2 r.y. units of capacity so that the total capacity across the cutset {S. T } is at least Ds, T = C((DS.~/Cl -1) + r5.T. <ref type="bibr">Magnanti et al.</ref> [I21 established the validity of this generalized cutset inequality and showed that it typically is a facet of the integer polyhedron defined by the formulations P(IP2) and P(CUT2). The example in Figure <ref type="figure" target="#fig_4">2</ref> shows, however, that the linear program consisting of the flow conservation constraints, the capacity constraints, and the generalized cutset inequalities does not necessarily have integral x and y solutions. In this example, we can install LC and MC (with capacity C equal to 10 units) facilities on the five network arcs. The numbers next to the arcs in Figure <ref type="figure" target="#fig_4">2</ref>(a) represent the costs for installing these facilities; the first number indicates the LC cost, and the second number, the MC cost. A flow of 12 units must be sent from node I to node 4. The optimal solution to the problem shown in Figure <ref type="figure" target="#fig_4">2</ref>(b) satisfies all these constraints and has fractional values for some of the x and y variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Properties (ii) and (iii).</head><p>The following heuristic is a natural generalization of the shortest path algorithm for the IF problem, and even though it generates "good" solutions, it does not necessarily generate an optimal solution to the problem. For reasons that will become apparent, we refer to this heuristic as the twopath heuristic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Problem n</head><p>The Two-path Heuristic STEP 0: Let r = d mod(C) and d = 4C + r. STEP 1: Find the shortest path from node 0 to node D using 6 : as the arc lengths. Load q MC facilities on this path and send a flow of 4C on this path. STEP 2: For each arc {i, j } , if uIf = 0, set e,, = 0; otherwise, calculate the (adjusted for sign) breakeven point m: = b;la;. If r ? m;. set e , = b J r . Otherwise, set eV = u:. STEP 3: Find the shortest path length using e,, as the arc lengths. Load I MC facility on all arcs of this path satisfying r z ml and r LC facilities on those arcs that satisfy r &lt; m;. Send a flow of r on this path.</p><p>STEP 4: Load the required number of MC facilities on each arc with h &lt; 0 so that these arcs have a total of L MC facilities. Similarly, load the appropriate number of LC facilities on arcs with a , ; &lt; 0 to obtain a total of L LC facilities on these arcs.</p><p>This solution costs len(b+)*q + len(e)*r + L ( a J + b J .</p><p>The two-path heuristic need not generate the optimal solution to the problem. The example in Figure <ref type="figure" target="#fig_7">3</ref> illustrates this fact. The two-path heuristic finds the shortest MC path-that is, the shortest path using MC facilities as the arc lengths-from node 1 to node 4 and loads 112/10] = 1 MC facility on all the arcs of this path. We can send a flow of 10 units on path 1-2-4 at a cost of 55. To send the remaining flow of 2 units, we find the shortest LC path, making appropriate adjustments for those arcs that have a break-even point of 2 or less (i.e., arcs (2, 3) and (3, 4)). The corresponding shortest path is 1-3-2-4, and the cost of sending the remaining 2 units is 28; thus, the total cost of this heuristic solution is 83. However, the optimal solution  places 1 MC facility on each of the arcs {I, 2}, (2, 3}, and {3,4}, and 2 LC facilities on arcs {I, 3) and {2,4} at a total cost of 78. This example also shows that the optimal solution need not necessarily be an extreme flow in the flow formulation P(f) of the 2F loading problem.</p><p>We might note that the error introduced by the solution generated by the two-path heuristic is bounded. To consider the most interesting cases, assume that a, b &gt; 0 and let E = ( u ( H ) -u*)/u* denote the relative error measuring the difference between the optimal value u* of the 2F loading problem and the value u ( H ) of the solution generated by the two-path heuristic. Then E tends to 0 as d approaches infinity.</p><p>Proposition 4.1. Let u* denote the optimal solution to the 2F loading problem and u ( H ) denote the value of the heuristic solution provided by the two-path heuristic. Then,</p><formula xml:id="formula_5">u ( H ) -u* U* = 0. limd,,</formula><p>Proof. u ( H ) = len(b+)*q + len(e)*r I len(b+)*q + len(b+) = len(b+)*(q + 1).</p><p>Since the LP relaxation of P(IP2) will use only MC facilities, u* 2 len(b+)*d/C. Therefore, since q + 1 = Id/Cl I d/C + 1, u ( H )u* 5 len(b+), which implies the result.</p><p>In a special case, the addition of the cutset inequalities to P(IP2) is sufficient to guarantee integer x and y optimal solutions. This situation arises when the break-even points of all the arcs are equal. Proposition 4.2. Suppose that the value of the breakeven point rnb = bolao is the same for every arc {i, j } of the network G. Then, (i) every solution to P(CUT2) is an extreme point solution to the linear program defined by the cutset inequalities X S T + rs. T US, 2 rs. T [DS. TIC] for all 0-D cutsets {S, T}, the aggregate-capacity demand constraints, and the upper bounding and the nonnegativity conditions xu 2 0 and yc 2 0 for all arcs (i, j } , and (ii) if we append the cutset inequalities to the formulation P(IP2), then the values of the variables x and y are integer in every extreme point solution to the linear programming relaxation of the problem formulation.</p><p>Rather than proving this result at this point, we will prove a more general result for the 3F loading problem in Section 5 . A modification of same proof technique will prove the result for the 2F case. The proof will also imply that the version of the 2F loading 'problem with the same break-even point on each arc is polynomially solvable. In the next section, we describe a variation of the problem and discuss its complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">A Strongly NP-Hard Variation</head><p>Suppose that we are given an existing network with specified capacities on some of the arcs that can be used to satisfy the demand requirements. We want to load additional capacity on the arcs in order to send a flow of d from node 0 to D. An equivalent way of viewing this problem is to assume we can obtain the first unit of capacity at zero cost on some arcs. We wish to study the computational complexity of this variation of the 2F loading problem.</p><p>Recall that a recognition problem is said to be strongly NP-complete if the existence of a pseudopolynomial algorithm for it implies that P = NP. Furthermore, an optimization problem is said to be strongly NP-hard if some strongly NP-complete recognition problem can be polynomially reduced to it.</p><p>We shall use the three exact cover problem (3XC)which is strongly NP-complete-to prove that the 2F loading problem with existing arc capacities is strongly NP-hard. The 3XC can be described as follows (Garey  and Johnson [7]): Given a set P with cardinality equal top, and a collection S of 3-element subsets of P , does there exist a subcollection S' S with the property that every element of P occurs in exactly one member of S'? Corollary 4.5. The 2F loading problem with upper bounds on the design variables is strongly NP-hard.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">THE THREE-FACILITY LOADING PROBLEM</head><p>We now consider the 3F loading problem. A straightforward generalization of the two-path heuristic of the 3F loading problem generates "good" (i.e., asymptotically optimal) solutions that, again, are not necessarily optimal. Furthermore, since A of the MC facilities are equivalent to an HC facility, the two-facility cutset inequality also generalizes to the 3F case to give the inequality for all cutsets {S, T}. <ref type="bibr">Mirchandani [17]</ref> showed that these inequalities are valid and that they are facetdefining under fairly mild restrictions. However, unlike the 2F case, the linear program obtained by adding the 3F cutset inequalities to P(IP3) does not guarantee integer x, y, and z optimal extreme point solutions to its linear programming relaxation even if mi = m' and mi = rnl for all arcs { i , j}. We require two additional classes of facets for this result to be true.</p><p>To describe these facets, we introduce some further notation. Let d = p AC + qC + r with r = d mod(C) and qC + r = d mod(AC). By appending subscripts S, T to p . q. and r, we can write a similar expression to represent any cutset demand Ds, r , even for problems with multiple commodities. For notational convenience, in the expressions to follow, we will not state these subscripts explicitly. Note that we could view the inequality (5.1) as a "lifting" of its two-facility analog without the variables z (i.e., the inequality obtained by setting z = 0). (See Fig. <ref type="figure" target="#fig_9">4</ref> for an example.) Similarly, suppose that we started with two-facility problems containing only the variables x and z, or y and z. The resulting two-facility cutset inequalities are and Figure <ref type="figure" target="#fig_9">4</ref> shows an example. We can interpret the last inequality as follows: In the space of the y and z variables, the aggregate-capacity demand constraint is Y S . T + AZS.T 2 Ds.T/C. But since the left-hand side of this expression is an integer, for any 0-D cutset { S, T}, we can replace the right-hand side by [d/Cl = [(PAC + qC + r)/C1 = pA + ( q + I). So now if we view A as the capacity of the higher-capacity facility, the remainder on dividing the demand by A is ( q + I ) and so the given inequality is just a version of the usual two-facility cutset inequality.</p><p>If we "lift" these inequalities to the full space of x, y, and z variables, they become and X t .</p><p>x + l x= 0. Figure <ref type="figure" target="#fig_9">4</ref> shows the polyhedron defined by these inequalities and the nonnegative orthant. Note that the extreme points of this polyhedron have integer values for all the variables. Proposition 5.3 shows that (under certain circumstances) this integrality result applies more generally, not only for the aggregate variables across any cutset, but also in the space of full variables for the entire network.</p><formula xml:id="formula_6">X = 4 Y = &amp; Z = 2 , x= 1 4 Y =o, z = 2 \ 4 2 2 4% Y=o Y=O,Z= 3 \ AiLIPlV-PPatY i-"d inequplity L X = A Y = 4 Z = 1 / L X=4,Y = 7 , z = o z== * Y , z = o \ Y + 2 z 2 6, x a</formula><p>We might note that the inequalities (5.1)-(5.3) are related for the boundary values of parameters r and q .</p><p>First, if q = A -1, then inequality (5.1) is equivalent to inequality (5.3) and therefore for a fixed value of A, the faces defined by these two inequalities alternately coalesce and dissociate as we increase the value of d.</p><p>Second, when q = 0, or when r = C, then inequality (5.2) is equivalent to inequality (5.3). In particular, when A = 2, then q = A -1 or 0 and one of the inequalities (5.1) or (5.2) subsumes (5.3). Moreover, when A = 1 (and so only two types of facilities are available), then q always equals zero and inequalities (5.1), (5.2), and (5.3) are equivalent.</p><p>Finally, all three inequalities are equivalent when q = A -1 (for an arbitrary value of A) and r = C (i.e., when DS.T is a multiple of AC). In fact, in this case, these inequalities are equivalent to the aggregatecapacity demand inequality, XS,T + CYS,T + AC2s.r 2</p><p>The Chvatal-Gomory (C-G) procedure repeatedly considers nonnegative combinations of already-known D S . T .</p><p>Proposition 5.2 describes necessary and sufficient conditions for inequalities (5.2) and (5.3) to define facets of the underlying polyhedron. These conditions are similar to the conditions required for inequality (5.1) to be facet-defining (see <ref type="bibr">Magnanti et al. [12]</ref>).</p><p>Proposition 5.2. The following conditions are necessary and sufJicient for the inequalities (5.2) and (5.3) to be facet-dejining for P(IP3): </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0-D cutset.)</head><p>Proof of necessity of the conditions. The necessity part of the proposition is easy to establish. If DS.7 = 0, then both the inequalities are simply aggregations of the nonnegativity constraints. If S is not connected and consists of two components SI and SZ with 0 E SI , it is easy to see that the inequalities corresponding to S, are stronger than the inequalities corresponding to S; therefore, S must be connected for (5.2) and ( <ref type="formula">5</ref>.3) to be facet-defining. Analogously, T must also be connetted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remarks</head><p>(i) Recall that if d is a multiple of AC, then both the inequalities (5.2) and (5.3) are equivalent to the aggregate-capacity demand inequality. Thus, although they still define facets, they do not add to the formulation P(IP3).</p><p>(ii) The sufficiency part of the proof is lengthy and technical, but essentially follows the argument of the cutset inequality proof given by <ref type="bibr">Magnanti et al. [12]</ref>. We will not provide the proof here. Some natural generalizations of these facet inequalities apply to (i) multicommodity situations, as well as to (ii) siutations with more than three facilities. The extension for multicommodity situations is straightforward. We just let DSQT denote the total demand between nodes in S and nodes in T for all commodities.</p><p>To illustrate the multiple-facility extensions, let us generalize inequality (5.3). We first need to define additional notation for the new facilities. Suppose facilities LC, HC(O), HC(l), HC(2), . . . , and HC(t) are available with capacities, respectively, of 1, C, and hkC units for k = 1 to t . Define ho = 1 and reindex the facilities if necessary so that hk &lt; &amp; + I for k = 0, 1, . . . , (t -1). Let the number of facilities of each type on arc {i, j } be x i j , z $ , with the obvious aggrega- The following inequality is a generalization of (5.3) (with rl&amp; ( p i + 1 ) = 1):</p><p>Therefore, although we have discussed inequalities (5.1), (5.2), and (5.3) only for the single-commodity three-facility case, they are applicable in more general settings. We will not explore these generalizations in this paper; our objective here is to show that the addition of these inequalities to formulation P(IP3) produces a linear program that has integer optimal x, y, and z solutions whenever the break-even points m i equal m' and m i equal m2 for all arcs { i , j } . In fact, we can obtain the optimal solution to the singlecommodity problem with equal break-even points on all the arcs by solving a single shortest path problem.</p><p>Theorem 5.3. For all a E ))ZIAl, the following optimization problem P(FACET3) has an optimal solution with integer values for the x, y, and z variables. to specify summations over the cutset variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>tive function equal</head><p>We first note that the first four terms of the objec-</p><p>We will find it more convenient to work with the objective function in this form. If the primal solution uses all three types of facilities (i.e., Case 4 applies), then this representation of the objective function is more intuitive since, as we will see, we can assign dual variables so that on some subset {i,j} of the arcs (v) V D equals the shortest path length from 0 to D using wij as the arc lengths.</p><p>If the dual variables were to satisfy these conditions, then the objective function value of this dual solution equals the objective function of the integer primal solution and the proof would be complete for this case. The representation (5.8) of the objective function is useful in other cases as well.  <ref type="figure">a,,, p,,, y,,,</ref> and<ref type="figure">6</ref>, as described in the We now show that the dual solution obtained in Steps 2, 4, and 5 is feasible and has a solution value equal to that of the primal solution that we have found.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Construction of a Feasible</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>mod(hC)] / C .</head><p>(i) Constraints (5.7b): The dual solution satisfies constraints (5.7b) as a result of the shortest path optimality conditions.</p><p>(ii) Constraints (5.7~): The dual solution satisfies constraints (5.7~) if</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remarks mulation P(CUT3) always has an optimal solution</head><p>with integer values for the x, y, and z variables. (i) The primal solution to P(FACET3) and the solution of its dual depends on the objective function coefficients and the commodity demand value, i.e., on the problem instance. Our proof partitions the space of the problem parameters into seven regions and identifies region specific primal and dual solutions. This approach of segmenting the parameter space is potentially useful for establishing convex hull proofs as well (see <ref type="bibr">Magnanti et al. [13]</ref>).</p><p>(ii) For the special case when the network contains only a single arc (and when q &gt; l), the convex hull of the feasible region has the form shown in Figure <ref type="figure" target="#fig_9">4</ref>. In this case, the values of the dual variables a o , piJ, y o , and tiii given in Table <ref type="table" target="#tab_1">11</ref> specify the multiples of the constraints (5.4), (5. l), (5.2), and (5.3) needed to represent the objective function as a nonnegative weighted combination of these constraints; that is, these variables specify the values of the optimal dual variables in the linear program defined over the polyhedron shown in the figure . 
(iii) Note, from Figure <ref type="figure" target="#fig_9">4</ref>, that when the optimal design uses only HC facilities (the solution X = 0, Y = 0, and Z = 3), or when it uses a combination of all three facilities (the solution X = 4, Y = 1, and Z = 2). then the polyhedron is degenerate since four of the defining inequalities meet at the optimal solution (in the case of only HC facilities, two of the four inequalities are the nonnegativity conditions X 2 0 and Y 2 0). As reflected by Cases 1 and 4, in these instances, the choice of which dual variables belong to the optimal basis of the linear programming dual problem (and, hence, which primal constraints have positive weights) depends upon the coefficients of the objective function.</p><p>(iv) The choices of the values in Table <ref type="table">I1</ref> might appear to be ad hoc. One way to see how to generate these values is to work backward. Assuming we know which of the variables are positive in any case or subcase, we solve for the values of the variables by solving the appropriate system of equations obtained by setting a subset of (5.9a), (5.9b), and (5.9~) as equalities; that is, in Case 1, we formulate only (5.9~) as an equality; in Case 2, we formulate (5.9b) and (5.9~) as equalities; in Case 3, we formulate (5.9a) and (5.9~) as equalities; and in Case 4, we formulate all three of the inequalities as equalities.</p><p>To conclude this section, we note that projecting variables would permit us to use Theorem 5.3 to establish the following results: Theorem 5.4. For all a E 911Al, ifthe break-even points m,!j and m$ are the same for all arcs {i, j } , then with the addition of the inequalities (5.1)-( <ref type="formula">5</ref>.3), the cutset for-Theorem 5.5. For all a € 9dA1, ifthe break-even points m,!j and mi.are the same for all arcs {i, j } , then theJlow formulation P(f) always has an optimal extreme point solution, that is, a solution in which all d units of demand Jlow on the same OD path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSIONS</head><p>We have discussed several variations of a network design problem that we refer to as the single commodity network loading problem, showing that one variation is strongly NP-hard while others are polynomially solvable. In particular, we identified several families of facets of the problem and have shown that (i) when the economic break-even points between the LC and MC facilities and between the LC and HC facilities are the same on all the arcs (the common break-even point problem), then (assuming all costs are nonnegative) it is always optimal to load facilities and send all the flow on a shortest path;</p><p>(ii) for the common break-even point version of the problem, when augmented by the addition of the new facets, the linear programming relaxation of a problem formulation in the space of flow and design variables and of a cutset formulation in the space of the design variables always has an integer solution in the facility design variables;</p><p>(iii) for the common break-even point version of the problem, the formulation of the problem in the space of the flow variables has an extreme point solu- tion;</p><p>(iv) the general (with economic break-even points that vary by arc) version of the problem need not have an extreme point solution in the flow space and the set of facets that we have identified do not assure that the linear programming relaxation has an integer solution in the design variables; and</p><p>(v) a version of the general problem with existing arc capacities is strongly NP-hard. This research raises several theoretical and algorithmic issues. In our model, we have assumed that the flow costs are zero. If the flow costs are not zero, then the results of this paper are no longer valid. A result similar to Proposition 4.2 with nonzero flow costs would provide us with the convex hull of feasible solutions to the problem. Moreover, it would be useful to investigate further the polyhedral structure and the computational complexity of the general 2F design problem. This investigation might yield additional families of facets. Finally, we could study situations with a larger number of available facilities and attempt to identify formulations of these problems that would yield integer design variables.</p><p>We might view this paper as a study of a single commodity specialization of a broader multicommodity network loading problem that arises in the telecommunications and transportation industries. While our study of the single-commodity problem was not motivated by any direct practical application, the investigation of this problem can help in determining the polyhedral properties of the multicommodity case. Another possible specialization would be to retain the multicommodity nature of the problem, but consider specialized network topologies. In a companion paper (Magnanti et al. [ 13]), we identified the convex hull of solutions to a single arc (with both flow costs and design costs) and three-node three-arc versions of the capacitated network loading problem. These results, in turn, provide a set of inequalities that are valid across a generic cut and across a three partition of the general problem and, together with the results of this paper, furnish the essential ingredients for a cutting plane approach to the general multicommodity flow problem (see <ref type="bibr">Magnanti et al. [ 121)</ref>. The resulting computational results are promising and show that the solution of large-scale applications, if not yet a reality, may be within reach.</p><p>We are grateful to the referees for many helpful comments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Level</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX I</head><p>Proposition 4.2. The 2F loading problem with existing arc capacities is strongly NP-hard.</p><p>Proof. Let P = {mi, T:, . . . , T,,} and S = {vI, ( ~2 , . . . , 0,) in the definition of the 3XC problem given in Section 4.1. We can assume that (TI, ( ~2 , . . , , (T, are unique. We wish to define a network loading problem with existing arc capacities, which we denote as eci,, on some of the arcs {i, j } , whose solution will correspond to a solution to the 3XC problem. Construct a network G = ( N , A ) as follows:  </p><formula xml:id="formula_7">A = {{I</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>103-121 0 1993 by John Wiley &amp; Sons, Inc.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>of d units from 0 to D if and only if the capacity of every 0-D cutset is at least d. In other words, the problem has a feasible flow if and only if the design variables satisfy the aggregate-capacity demand in- equality Xs. T + C Ys, T + ACZ.F, T 2 d for all 0-D cutsets {S, T}. In this alternate formulation, the model becomes [Problem P(CUT3)I: subject to: X S , T + c Y s , r +-ACZS.T 2 d for all 0 -D cutsets (S, T }</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Figure I(a) and (b) shows the structure of this cost function for the one-facility and two-facility versions of the problem (with C = 3).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Arc cost for network loading.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Proposition 3. 2 .</head><label>2</label><figDesc>The convex hull of the solutions to P(CUT1) is defined by the inequalities YS,7 L [d/C] for all 0-D cutsets {S, T}, and, the upper bounding and the nonnegativity constraints on the arc design variables. For all cost vectors b E %lAl, Ji 5 Cye for all {i, j } E A Ys,r 1 [D/Cl for all 0-D cutsets { S , T } yu I L for all {i, j } E A y i i . J j , f ; i E %!+ for all {i, j } E A has an optimal solution with integer values for all the y variables. Proof. Let (y*, f*) be a loaded shortest path solution to the integer problem P(IP1). We will show that (y*, I*) is an optimal solution to the linear program P(FACET1) by constructing a feasible solution to its dual D(FACET1) that has the same objective function value as the loaded shortest path solution. The dual to problem P(FACET1) is given by [Problem P(DFACET1)I: subject to: ui u.i.s. for all i E N no, wo 2 0 for all {i, j } E A p s . ~ 2 0 for all 0 -D cutsets { S , T } .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Numbers on arcs in (a) indicate the cost of installing LC and MC facilities. The fractional optimal solution shown in (b) satisfies the flow conservation, capacity, and cutset inequalities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Numbers next to the arcs in (a) indicate LC or MC costs for problem definition, and those in (b) specify the number of LC or MC facilities used in the optimal design. Dashed lines in the optimal design indicate LC facilities and solid lines indicate MC facilities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Proposition 4. 3 .</head><label>3</label><figDesc>The 2F loading problem with existing arc capacities is strongly NP-hard. Proof. See Appendix 1. Corollaries 4.4 and 4.5 are immediate consequences of Proposition 4.3. Corollary 4.4. The 2F loading problem with upper bounds on arcs flows is strongly NP-hard. Proof. Refer to Figure I. I . Impose upper bounds on the flow variables as follows: (i) on arcs { I , mi}, the upper bound is 3, and (ii) on arcs IT,, n} this bound is 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Facets corresponding to a cutset.</figDesc><graphic coords="11,108.12,70.79,346.08,330.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>1.</head><label></label><figDesc>Ds.T &gt; 0. (This condition implies that { S , T} is an 2. The subgraphs dejned by S and T a r e connected.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>tion over any { S , T } cutset. Let d = p A C + pf-lA,-lC + -* + poC + r with r + d mod(C) and let f o r k = O , 1 , . , . , t .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>minimize 2 (aijxij + mla,.yij + mza-,z, ..) . + f;; I xu + Cyii + ACzijfor all {i, j } E A XS.T + rY5.r + ArZs,T 2 rldlC1 for all 0-D cutsets (S, T ) Xs,r + min(qC + r , C)YS,T + (qC + r)Zs,r 2 (qC + r)ld/AC1 for all 0-D cutsets (S, T ) X S , T + rYs.r + 4s + 1Ks.r r r ( q + l)[d/AC] for all 0 -D cutsets (S, T ) yij I L for all {i, j } E A I xij 5 L zg 5 L x u , yij, zij, fij, J;i 2 Ofor all {i, j } E A . for all {i, j } E A for all {i, j } E A (5.7e) u, u.i.s. for all i E N wo, 70, T O , c#+j 2 0 for all {i, j } E A (5.7f) p s , ~, U S J , 0s.r 2 0 for all 0-D cutsets {S, T } .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>(</head><label></label><figDesc>iv) 4.. = -m2aT n.. = -mlaZand 7.. = -a -</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>STEP 1 .</head><label>1</label><figDesc>Calculate r = d mod(C) and s = [(dr ) STEP 2. Set r,, = -a;, n,, = -m'a;and &amp; = -m2al;. STEP 3. Set</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>, a;}: i = 1 , 2 , . . . , s} U {{(T;, rj}, i , j : T,€ (T;} ~{ { ~~, n } : j = 1 , 2 , . . . , p } .Origin = 1 , destination = n, demand = p , C = 3.Assign the costs and existing capacities on the arcs as follows (see Fig.1.1): a;j, tq , e q Arcs at the same level have the same parameters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 1 . 1 .</head><label>11</label><figDesc>Fig. 1.1. Transformation of 3XC into the single commodity loading problem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>variable (flow) costs that depend upon total arc flow volume, and (ii) fixed charges that determine the level of installed capacity on the arcs. Researchers have assumed a variety of functional forms for either cost, including models with one of the costs equal to zero. Many researchers have focused on a flow cost</figDesc><table /><note><p><p><p><p><p>function that is concave and nondecreasing. A concave functional form, which reflects efficiencies of scale and volume discounts, arises often in the transportation and telecommunications industries.</p>Zangwill  [24]  </p>studied the minimum concave cost flow problem and demonstrated how it captures the concave cost warehouse location problem, the single and multiproduct production and inventory models, and the plant location problem.</p>Yaged [22]</p>, Zadeh [23], and Minoux [15], among others, studied this problem in the context of the telecommunications industry, and Balakrishnan and Graves [2] studied the problem in the context of freight flow planning. (See also</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 11 .</head><label>11</label><figDesc>STEP 4. Using any shortest path algorithm, find the shortest path from node 0 to every other node with a,, as the arc costs. Let u, equal the shortest path to node i</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>. Set wU = a,,.</head><label></label><figDesc></figDesc><table><row><cell cols="2">STEP 5. Use Algorithm SPP with p,,, y,, , and 8, as the</cell></row><row><cell cols="2">arc lengths. (Note that these costs are nonnegative,</cell></row><row><cell cols="2">so we can apply the algorithm.) This computation</cell></row><row><cell>gives us values for the p s . ~,</cell><cell>and 8S.T variables.</cell></row></table></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>valid inequalities and use integrality arguments to generate new stronger valid inequalities. We use the C-G procedure on the aggregate-capacity demand inequality to establish the validity of the new inequality (5.2).</p><p>(5.3), we use an algebraic argument. Proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>XS.T + + [AC</head><p>(a) Since the inequality (5.2) is redundant if D5.r = 0, assume DS,T = d. We start with the aggregatecapacity demand inequality:</p><p>and use an induction argument to establish ( 5 . 2 ) . Consider the inequality for integer values of k between 0 and AC -max{C, qC + r}. For k = 0, this inequality is the aggregatecapacity demand inequality (5.4); if 4 2 1, then max{C, yC + r} = qC + r , and fork = AC -(qC + r), the inequality ( 5 . 5 ) becomes the inequality (5.2) since [Ds,T/AC] = p + 1. Although the inequality is not yet of the form of ( 5 . 2 ) if q = 0 and k = AC -C , by further arguments we will later show how this inequality with k = AC -C implies (5.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Suppose (5.5) is valid for k</head><p>The nonnegativity of X.y,T and Y s . ~ implies that</p><p>) Ys., 2 0. Adding these two inequalities and ( 5 . 5 ) with k = I, we obtain Now, since qC + r &lt; AC -1 and the left-hand side is necessarily integer, integrality arguments permit us to round up the right-hand side to obtain inequality (5.5) with k = 1 + 1. So by induction, we have established (5.5) with k = AC -max{C, 4C + r}. If q &gt; 0, or if q = 0 and r = C, this inequality is (5.2) and we are done. Otherwise, q = 0, r &lt; C and we obtain the inequality</p><p>with w = 0. We now use the previous argument, using induction on values of HJ between 0 and Cr -I . We use the fact that r &lt; Cw , just as we had used the fact that qC + r &lt; AC -1 above, in the integer rounding argument. At the value w = C -r , the inequality becomes (5.2), completing the proof of the first part of the proposition. A + q ) + r . To establish the validity of the inequality ( 5 . 3 ) , we have to show that If Ys.7 2 (ul)A + (q + l), then the left-hand side of inequality ( 5 . 6 ) is at least r ( q + 1)u since A 2 ( q + 1).</p><p>So assume that YS,T = (u -1)A + (y + I ) -u for some u 2 1. In addition to the (ID~.T/AC] -u ) HC and the [(u -1)A + (q + 1) -u] MC facilities so loaded, we must load at least C(uA -A + q ) + r -C[(u -1)A + (q + 1)ul L C facilities, i.e., we must load at least C(u (AC -1) (AC -1) -I ) + r 2 ur LC facilities in order to satisfy the remaining demand.</p><p>However, in order to prove the validity of inequality ( 5 . 3 ) , we need to show that XS.T 2 r(q + l)ur</p><p>which is no larger than ur since A t 9 + 1. Hence, the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Multiplying this inequality by {[AC</head><p>Proof. We first assume that 1 &lt; m' &lt; C , and mI &lt; m2 &lt; Am', so that (for arcs with positive costs) HC facilities are more cost effective per unit than either LC or MC facilities and MC facilities are more cost effective per unit than LC facilities. We present the proof only for r &lt; C. As in the proof of Proposition 3.2, we will construct a primal feasible solution that is integer and construct a dual feasible solution whose objective function value equals that of the primal sol ution.</p><p>We will consider the four cases for developing the primal and dual feasible solutions. These cases exhaust all possible values for the parameters of the problem. For Case I , the optimal primal solution will use only HC facilities; for Cases 2, 3, or 4, the optimal primal solution will use a combination of HC and MC, or HC and LC, or HC. MC, and LC facilities, respectively. Note that if we scale the cost on each arc by aii and a y 2 0, and the arc carries the d units of demand, then given our cost assumptions, it is cost effective to load the arc with p = ld/ACJ HC facilities, incurring a cost of p m2, together with a combination of LC, MC. and HC facilities. The additional cost beyond p m2 is</p><p>if we install only MC additional facilities if we install MC and LC additional facilities if we install only a single HC additional facility .</p><p>The following cases define outcomes for distinguishing between these solutions:</p><p>Subcase l(a). m2C &lt; mYqC + r ) . Subcase I(b). m2C 2 m'(9C + r). CASE 2. (y + 1)m' &lt; m2 and r 2 m ' .</p><p>Subcase 3(a). Ar &lt; m 2 .</p><p>Subcase 3(b). Ar 2 m2.</p><p>Let</p><p>(4 + 111.</p><p>positive or negative, differentiating Cases 4(a) and 4 w . for all {i, j } E A (5.7b)   v,uiwij 5 0</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Construction of a</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Configuration of facilities for the primal solution</head><p>No. Facilities Loaded Some comments about this classification are in orat least 1 since mI &lt; m 2 . Second, Case 2 can occur both when q = 0 or when q z I. Finally, 0 consists of two terms:</p><p>The first term is nonnegative and the second term is nonpositive. Their sum can be either der. First, for Case 1 to be true, the value of q must be The nonnegativity of the dual variables follows from the conditions of Subcase 4a. Finally, expression</p><p>(5.8), or a complementary slackness argument, shows that the objective function value of this dual solution equals the objective value of the primal solution described in Table <ref type="table">1</ref>.</p><p>Similar algebraic computations complete the proof for the other cases.</p><p>This proof works with minor modifications for situations with A = 1 [and so the inequalities (5.1), (5.2), and (5.3) are equivalent]; in this case, the problem has an integer x and y optimal solution whenever the (first) break-even points for all the arcs are equal. The proof also applies with minor modifications to situations when the data do not satisfy the conditions 1 &lt; m 1 &lt; C, and m' &lt; m2 &lt; Am' or when au &lt; 0 for all {i, j}. rn ACq + rh&amp; + (qC + r)yu + r(9 + l)au 5 m2a;, <ref type="bibr">(5.9c)</ref> respectively.</p><p>The solutions given in Table <ref type="table">11</ref> satisfy these inequalities and the nonnegativity restrictions. As an illustration, we consider Subcase 4(a). Notice in this case that 6-0 = -P-U -[(m' -C)/(mlr)]yu. Therefore, and so the solution satisfies (5.9a). Proof. If we have a Yes instance of the 3XC problem, then it is trivial t o obtain a feasible solution to the loading problem that costs p/3*(3 -6). So assume that we have a Yes instance of the loading problem. Then, a solution that costs p/3*(3 -6) satisfies the following properties.</p><p>I. It uses exactly p/3 MC facilities loaded on p/3 dif-2. The flows on arcs {uir rj} are either 0 or 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head><p>T h e flows on the arcs {rj, n } are exactly one.</p><p>ferent { 1, cri} edges.</p><p>It is then easy t o derive an exact cover for the 3XC problem.</p><p>8</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Ahuja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Orlin</surname></persName>
		</author>
		<title level="m">Network Flows: Theory, Algorithms, and Applications</title>
		<meeting><address><addrLine>Englewood Cliffs, New Jersey</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A composite algorithm for a concave-cost network flow problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Graves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="175" to="202" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A dual-ascent procedure for large scale uncapacitated network design</title>
		<author>
			<persName><forename type="first">A</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">T</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Res</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="716" to="740" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fixed cost transportation problems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Balinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Res. Log. Q</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="41" to="54" />
			<date type="published" when="1961">1961</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Uncapacitated lot-sizing: The convex hull of solutions</title>
		<author>
			<persName><forename type="first">I</forename><surname>Barany</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Van Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program. Study</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="32" to="43" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Blocking and antiblocking pairs of polyhedra</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Fulkerson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="168" to="194" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to the Theory of NP-Completeness</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
			<pubPlace>Freeman, San Fransisco</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The one terminal telepack problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Rothfarb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="156" to="169" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Exact solution for the fixed charge transportation problem</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Res</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1529" to="1538" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Continuous models for capacity design of large packet-switched telecommunications networks</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">J</forename><surname>Leblanc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Simmons</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA J. Comput</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Routing in point to point delivery systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Singhal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transportation Sci</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="245" to="260" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Modeling and solving the capacitated network loading problem</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mirchandani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vachani</surname></persName>
		</author>
		<idno>No. 709</idno>
	</analytic>
	<monogr>
		<title level="j">PA</title>
		<imprint>
			<biblScope unit="volume">15260</biblScope>
			<date type="published" when="1991">1991</date>
		</imprint>
		<respStmt>
			<orgName>Katz Graduate School of Business, University of Pittsburgh, Pittsburgh</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Working Paper</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The convex hull of two core capacitated network loading problems</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mirchandani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vachani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint/>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">T</forename><surname>Wong</surname></persName>
		</author>
		<title level="m">Network design and transportation planning: Models and algorithms. Transportation Sci</title>
		<imprint>
			<date type="published" when="1984">1984</date>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Multiflots de cBut minimal avec fonctions de c6ut concaves</title>
		<author>
			<persName><forename type="first">M</forename><surname>Minoux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Telecommun. l</title>
		<imprint>
			<biblScope unit="page" from="77" to="92" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Network synthesis and optimum network design problems: Models, solution methods and applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Minoux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="313" to="360" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Polyhedral structure of a capacitated network design problem with an application to the telecommunication industry</title>
		<author>
			<persName><forename type="first">P</forename><surname>Mirchandani</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<pubPlace>MIT, Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
	<note>Unpublished PhD Dissertation</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Integer and Combinatorial Optimization</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Nemhauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>Wiley-Interscience</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Valid inequalities for fixed charge problems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Padberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Van Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operutions Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="842" to="861" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The load planning problem of motor carriers: Problem description and proposed solution approach</title>
		<author>
			<persName><forename type="first">W</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sheffi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transportation Sci</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="471" to="480" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Strong formulations for mixed integer programming: A survey</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Wolsey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Minimum cost routing for static network models</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yaged</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="139" to="172" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">On building minimum cost communication networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Zadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="315" to="331" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Minimum concave cost flows in certain networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">I</forename><surname>Zangwill</surname></persName>
		</author>
		<idno>429-450. 271-286. 173-I9</idno>
	</analytic>
	<monogr>
		<title level="j">Management Sci</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<date type="published" when="1968">1968. 1990</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
