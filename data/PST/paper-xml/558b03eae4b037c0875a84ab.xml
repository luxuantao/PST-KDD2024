<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">REEP: data-centric, energy-efficient and reliable routing protocol for wireless sensor networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">F</forename><surname>Zabin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Ryerson University</orgName>
								<address>
									<settlement>Toronto</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">S</forename><surname>Misra</surname></persName>
							<email>smisra@sit.iitkgp.ernet.in</email>
							<affiliation key="aff1">
								<orgName type="department">School of Information Technology</orgName>
								<orgName type="institution">Indian Institute of Technology</orgName>
								<address>
									<settlement>Kharagpur</settlement>
									<region>West Bengal</region>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">I</forename><surname>Woungang</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Ryerson University</orgName>
								<address>
									<settlement>Toronto</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">H</forename><forename type="middle">F</forename><surname>Rashvand</surname></persName>
							<affiliation key="aff3">
								<orgName type="department">School of Engineering</orgName>
								<orgName type="institution">University of Warwick</orgName>
								<address>
									<settlement>Coventry</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">N.-W</forename><surname>Ma</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Ryerson University</orgName>
								<address>
									<settlement>Toronto</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">M</forename><surname>Ahsan</surname></persName>
							<affiliation key="aff4">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Windsor</orgName>
								<address>
									<settlement>Windsor</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">REEP: data-centric, energy-efficient and reliable routing protocol for wireless sensor networks</title>
					</analytic>
					<monogr>
						<idno type="ISSN">1751-8628</idno>
					</monogr>
					<idno type="MD5">7BA82E7A33993C5A5BB3344684414E0A</idno>
					<idno type="DOI">10.1049/iet-com:20070424</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:08+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Owing to the growing demand for low-cost 'networkable' sensors in conjunction with recent developments of micro-electro mechanical system (MEMS) and radio frequency (RF) technology, new sensors come with advanced functionalities for processing and communication. Since these nodes are normally very small and powered with irreplaceable batteries, efficient use of energy is paramount and one of the most challenging tasks in designing wireless sensor networks (WSN). A new energy-aware WSN routing protocol, reliable and energy efficient protocol (REEP), which is proposed, makes sensor nodes establish more reliable and energy-efficient paths for data transmission. The performance of REEP has been evaluated under different scenarios, and has been found to be superior to the popular data-centric routing protocol, directed-diffusion (DD) (discussed by Intanagonwiwat et al. in 'Directed diffusion for wireless sensor networking' IEEE/ACM Trans. Netw., 2003, 11(1), pp. 2 -16), used as the benchmark.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>During data transmission in WSN, nodes can fail as a result of lack of power or can be blocked by any obstacle or can get undesirable physical or environmental damage. The ability to sustain such situations by avoiding any interruption of network functionality assures more reliable transmission of information. This is known as the fault tolerance issue. Fault tolerance, or the ability to sustain by avoiding any interruption of network functionality, is an important issue in WSN.</p><p>We believe, two important issues should be taken into account while designing a routing protocol for WSN. First, the level of power consumption at each stage of functionality should be maintained. Second, tolerance of different types of failures should be achieved.</p><p>In order to meet the requirements of different types of applications, correctly processing the collected information and appropriately relaying them, are important considerations in any routing protocol. In WSN, these steps should ideally be accompanied by the efficient use of energy in sensor nodes. Each sensor node in the network is battery equipped and is, therefore, limited in terms of the energy. In most of the WSN applications, replenishment of power resources is nearly impossible. Another important factor that influences the consumption of more power in WSN is that each sensor node consumes power not only for sensing but also for processing the sensed data and transmitting/receiving them to/from its neighbours. These are the reasons for which the efficient use of power is the primary and perhaps the most important consideration for designing a WSN protocol.</p><p>In this paper, we report a new data-centric, energyefficient and reliable routing protocol for use in WSN. Data-centric routing refers to the fact that all the information queries in the network result in sampled data and are named by some of their attributes and are routed based on those attribute values. In data-centric routing, interest is disseminated throughout the network to perform sensing tasks. So far there are two popular approaches that have been used for interest dissemination in data-centric routing <ref type="bibr" target="#b0">[1]</ref>. The first is the DD protocol, in which sinks broadcast the interest about specific area <ref type="bibr" target="#b1">[2]</ref> and the second is the Sensor Protocol for Information via Negotiation (SPIN) protocol, in which sensor nodes broadcast the advertisement for the sensed data and wait for requests from interested nodes <ref type="bibr" target="#b2">[3]</ref>. In addition to DD and SPIN, there are some other protocols in this category that have been proposed in the literature. Ref. <ref type="bibr" target="#b3">[4]</ref> provides a good summary of some of them such as rumor routing <ref type="bibr" target="#b4">[5]</ref>, minimum cost forwarding algorithm (MCFA) <ref type="bibr" target="#b5">[6]</ref>, gradient based routing (GBR) <ref type="bibr" target="#b6">[7]</ref>, information-driven sensor querying (IDSQ) <ref type="bibr" target="#b7">[8]</ref>, constrained anisotropic diffusion routing (CADR), COUGAR, ACQUIRE, Energy Aware Routing and Routing protocol with random walks <ref type="bibr" target="#b8">[9]</ref>. SPIN is a family of adaptive protocols, which includes SPIN-1 and SPIN-2 <ref type="bibr" target="#b2">[3]</ref>. Without delving into the details of SPIN, it is worth mentioning here that it is the first data-centric routing protocol <ref type="bibr" target="#b9">[10]</ref>, which uses data negotiation mechanism to eliminate the redundant data transmission. But SPIN does not establish any path for data transmission. Consequently, data delivery is not guaranteed in SPIN. DD <ref type="bibr" target="#b1">[2]</ref> has been developed with single path for data transmission. Later, based on this single path routing in DD, a highly resilient and energyefficient multipath routing scheme has been developed <ref type="bibr" target="#b10">[11]</ref>. Many other protocols have been designed and proposed <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref><ref type="bibr" target="#b15">[15]</ref><ref type="bibr" target="#b16">[16]</ref><ref type="bibr" target="#b17">[17]</ref><ref type="bibr" target="#b18">[18]</ref><ref type="bibr" target="#b19">[19]</ref><ref type="bibr" target="#b20">[20]</ref><ref type="bibr" target="#b21">[21]</ref><ref type="bibr" target="#b22">[22]</ref>. Interested readers are also directed to an excellent and relatively recently published paper on routing in sensor networks <ref type="bibr" target="#b9">[10]</ref>. Specific to data-centric routing, a good survey of data-centric routing protocols can be found in <ref type="bibr" target="#b23">[23]</ref>.</p><p>Our proposed protocol, REEP, has been motivated by the existing network layer data-centric routing protocol DD <ref type="bibr" target="#b1">[2]</ref>. In addition, the energy conservation heuristic of SPIN-2 has motivated us to maintain an energy threshold value in each REEP node in order to make the sensor nodes energy-aware.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Proposed protocol</head><p>REEP has five important elements. These are: sense event, information event, request event, energy threshold value and request priority queue (RPQ ). A 'sense event' is a kind of query, which is generated at the sink node and is supported by the sensor network for acquiring information. The response of this query is the 'information event', which is generated at the source node. It specifies the detected object type and the location information of the source node. After receiving this information, 'request events' are generated at the sink node and are used for path setup to retrieve the real data. The real data in any sensor network are the collected or processed information regarding any physical phenomenon. Each node in REEP uses an 'energy threshold value' by checking which node agrees or denies for participating in any further activities. It gives more reliable transmission of any event information or real data. RPQ is a kind of first-in-first-out (FIFO) queue, which is used in each node to track over the sequence of 'information event' reception from different neighbours and to select a neighbour with highest priority in order to request for path setup. Fig. <ref type="figure" target="#fig_0">1</ref> illustrates the simplified view of how REEP works.</p><p>As mentioned earlier, REEP follows the data-centric approach for routing. Therefore, at the outset, a naming scheme is required for this data-centric approach to work properly. We have followed the naming scheme used in DD <ref type="bibr" target="#b1">[2]</ref>. In the interest of brevity, it is not mentioned here, but in short, in this scheme, each task includes a list of attribute-value pairs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">REEP functions</head><p>To have an overall view of how REEP works, let us consider the following simplified form of a WSN application. Let us assume that a large geographic area has a large number of sensors for security purpose. As shown in Fig. <ref type="figure" target="#fig_0">1a</ref>, let us assume that a user 'injects' queries into the sink node through the task management node. An example of a query is: 'What moving objects can be found within the whole secured zone?' This query leads all the sensor nodes to sense for a limited time to collect information from the environment. Nodes that sense any moving object, such as a human or a vehicle or an animal, send this information (not the real data) back to the user. If multiple sources detect objects from different locations (see Fig. <ref type="figure" target="#fig_0">1b</ref>), the user receives a list of detected objects and the corresponding detector source node's location information. The user can, then, choose one or multiple sources from the list for having detailed data of the detected object. The user then sends requests through the sink node to retrieve the real data. The sink node forwards these requests to particular neighbours, in order to setup paths for real data transmission (see Fig. <ref type="figure" target="#fig_0">1c</ref>). Intermediate nodes do the same as the sink does for path setup. Once sources receive their corresponding requests for real data, they complete the path and start to send data along dedicated paths (see Fig. <ref type="figure" target="#fig_0">1d</ref> ). Thus, user starts receiving real data through single path for each task.</p><p>We can arrange the above simplified explanation of REEP in three phases, described in Table <ref type="table" target="#tab_0">1</ref>. The details of how REEP works in these three phases are explained in the next few sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1">Sense event propagation:</head><p>A sensing task is initiated in a sink node in the network. A sink node can be any node within the network topology from which the user wants to acquire all the information she/he needs. We describe how this sense event is diffused throughout the sensor network. As an example, the following sense event is instantiated in a particular sink node with the corresponding values: sink ¼ ½120; 230 timestamp ¼ 11 : 20 : 40 duration ¼ 1 s This is an exploratory event which is flooded all over the network and intended for path setup and repair. Here, the value [120, 230] of the 'sink' attribute indicates the location of the sink node that generated this sense event. The value of 'timestamp' specifies at what time the event was generated. The 'duration' attribute specifies the time; each node will keep activating its sensing device in case no objects can be found. Let us consider the example of sense event propagation in Fig. <ref type="figure" target="#fig_1">2a</ref>. In this example, Node A is the sink node which generates the above-stated sense event. Every node maintains a cache to store all necessary information for routing. Node A stores all the necessary information from this event and broadcasts this sense event to all of its neighbours, just to activate their sensing device to sense environmental phenomenon around them. Every time a node receives a sense event, it checks only the sink and timestamp information of the received event with the saved sink and the timestamp information of the node's cache. It should be noted that each node always overwrites the latest sense event information and it need not store a list of previous sense events, because this event is used only for sensing, not for routing. Node B receives the sense event from Node A for the first time, checks its cache and finds that this is a new sense event. Then, it saves the sink and timestamp information from the event and sends this event to Nodes C, D, E and A. Node B also activates its sensing device to collect samples within its sensing range. Nodes C, D and E repeat the same processing as the intermediate Node B did.</p><p>On the basis of a sensing task scheduled in any application, the sink node will periodically broadcast this sense event with an increasing timestamp. The sink node overwrites the information of sink location and timestamp in its cache and activates its sensing device if the received sense event has been generated by some other sink node in the network. The sink node also sends this new sense event to all its neighbours.</p><p>The node that detects any moving object within the period indicated in the sense event, generates an information event and sends it to all its neighbours. The information event propagation is discussed in detail in Section 2.1.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Information event propagation:</head><p>A node that detects any object is termed as the source node. During the sensing period, a source node collects samples and matches with the predefined library values to generate the 'information' event. Consider the following example of an information event generated in an arbitrary source node:</p><formula xml:id="formula_0">type ¼ human location ¼ ½10; 15 intensity ¼ 0:84 timestamp ¼ 11 : 22 : 30</formula><p>The source node includes the value of object type that it has detected and the node's location information into the 'information' event to indicate which source node has detected which object. The intensity of the sampled waveform roughly indicates the distance between the source node and the detected object. This value helps the operator to choose the best source in case multiple sources detect the same object with different intensity values. The 'timestamp' field specifies the time when this information event was generated.</p><p>The source node saves all the information from the generated information event by creating an entry in its cache and then sends this event to all its neighbours. In each node, different entries are created for different tasks based on two attribute values of a task -the type of the object and the location of the source node.</p><p>Each entry in the cache has several attribute fields. The 'Type' and 'Source' fields contain the type of the object and the location of the source node that detected this object. The 'InformationTime' field contains the information event generation time derived from the information event. The 'RequestPriorityQueue' field maintains a FIFO queue. Each time a node receives an information event, it saves the sender's node ID in this queue for the corresponding matching entry. This value will be needed later when the sink node sends the request event for path setup. An intermediate node chooses the first node from this queue to send the request event.</p><p>The information event propagation is illustrated in Fig. <ref type="figure" target="#fig_1">2b</ref>. Node D sends the information event to all its neighbouring nodes, B, C and E. Node B receives this new information event for the first time from Node D, creates a new entry, saves all the necessary information from the event for future routing and sends it to all of its neighbours C, D, E and A. Node B saves the node ID of Node D in its RPQ. If Node B receives a copy of the same information event from its neighbour, it just searches for the matching entry and saves the sender's node ID into its RPQ.</p><p>If a node receives a new information event with different event generation time and the node finds a matching entry for that event, which was for some previous task, it does not create a new entry for this new event. This node simply resets all the values with updated information including the RPQ for that corresponding entry. A node does not keep all the previous records for all entries because it leads to more complex searching that requires more energy.</p><p>During the information event propagation, RPQ is created based on the sequence in which a node receives the same information event from all its neighbours. This implies that the first node of this queue has the highest priority to be selected for path setup. When the sink node receives the same information event from its other neighbours, it does not request all its neighbors at the same time. Rather, it saves the neighbours' IDs in that queue for future use, in case of alternate path setup. Intermediate nodes do the same as the sink node. Since Node B receives the information event from Node D first and saves it in its priority queue, Node B sends the request event received from Node A to Node D only (Fig. <ref type="figure" target="#fig_1">2b</ref>). When Node B receives that same information event from Nodes C and E, it saves their IDs in its RPQ , respectively, in order for future use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.3">Request event propagation:</head><p>One of the important features of REEP is the maintenance of an energy threshold value at each node. This threshold value is checked at each node only when a node receives a request event or real data to transmit each time. This energy threshold value is application dependent. When any node's energy goes below the threshold value, this feature allows each node not to participate in path setup and data transmission; rather it allows transmitting control information only.</p><p>In some situations, such as in case of a node or link failure, the nodes need to search for alternate path setup. In such situations, REEP nodes need not perform network wide searching or any periodic flooding to find out the next best path to transmit <ref type="bibr" target="#b1">[2]</ref> or even they do not need to maintain any alternate multi-paths <ref type="bibr" target="#b10">[11]</ref>. Rather they can choose the next best neighbour from their priority queue for further alternate path setup. Therefore, the entire request event is saved at each node for future use.</p><p>As explained earlier, when all information events are received at the sink node, the operator receives a list having the information regarding the detected object type and the associated source node location information (see Fig. <ref type="figure" target="#fig_1">2c</ref>). The operator can choose a single task or multiple tasks to retrieve the real data. Based on the operator's selection, the sink node generates request events for path setup.</p><p>Once a sink node receives the information event for the first time, it does the same processing as an intermediate node does. In addition, the sink node creates a request event and sends it to that specific node from which the sink node received the corresponding information event first. For doing this, the sink node simply chooses the first neighbour from its RPQ to send the request event for path setup.</p><p>An intermediate node does not have the entire path information for a specific task. All it has is the knowledge about its neighbours from/to whom it receives/sends events. So, when an intermediate node, such as Node B in Fig. <ref type="figure" target="#fig_1">2c</ref>, receives a request event from Node A, it searches for any matching entry and picks the first neighbour from the priority queue of that entry to send this request event. Each node also saves the ID of the neighbour from whom it receives and accepts the request for data transmission corresponding to the matching entry.</p><p>When a source node, for example, Node D in Fig. <ref type="figure" target="#fig_1">2c</ref>, receives a request event, it completes the path and starts sending the real data at a higher rate along the path, corresponding to the specified request. After completing this sequence of local interactions, a path is constructed for data transmission from source to sink.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Algorithm/flowchart</head><p>The algorithm is presented in Fig. <ref type="figure" target="#fig_2">3</ref> and the corresponding flowchart is presented in Fig. <ref type="figure">4</ref>. This algorithm is invoked when a node receives a packet. Here, NE denotes the node's energy and ET denotes energy threshold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Node failure and fault tolerance</head><p>In the REEP protocol, as each node maintains an energy threshold value and paths are constructed after checking the energy level of each node with this threshold value, paths are more reliable for data transmission compared to the other related protocols such as DD. Let us consider a situation (refer to Node B in Fig. <ref type="figure">5</ref>) where a node's energy level was above the threshold value before receiving the data but goes down of the threshold value immediate after receiving the data. Node B then picks up the www.ietdl.org corresponding request event from its cache, which was saved during request propagation step, changes this event's status to negative and sends this negative request event towards the neighbour Node A on the path from whom it received the data packet. In addition, Node B also changes the data packet's status to negative and sends this negative data packet to the next Node C on the path (see Fig. <ref type="figure">5</ref>). Consequently, data do not get lost in the middle of the path for having low energy in a node. Thus, this low energy node, B, lets its both-side neighbours A and C to know about its own status that it has low energy and capable of sensing and exchanging control information only, not for path setup or data transmission. Node A receives and forwards the negative request (Fig. <ref type="figure">5a</ref>) to   Node F towards the source node, in order to close the path. This node does not send any more data to the neighbour node, B. Only exploratory events are exchanged between them. On the other hand, Node C receives the negative data packet (Fig. <ref type="figure">5a</ref>), changes the packet's status to positive and sends it to the next node D on the path. Additionally, Node C also removes the low energy node B's ID from its RPQ and picks up the next node, E, from the queue to request and sends the previously saved request event to Node E for alternate path setup (Fig. <ref type="figure">5a</ref>). Node E sends its best neighbor G and so on.</p><p>Let us consider what happens if either Node A or Node C finds that its energy is low, immediately after receiving negative events. They simply pass the negative events to their corresponding neighbour nodes, without changing the status of the event (see Fig. <ref type="figure">5b</ref>). Node A sends the negative event to Node F and C sends it to Node D. If Node E finds that its energy level goes below the threshold value, as soon as it receives the request from Node C (see Fig. <ref type="figure">5c</ref>), Node E changes the status of the received request event from positive to negative and sends back to Node C indicating that Node E is not interested in path setup because of low energy. Node C does the same as before, removes Node E's ID from RPQ and picks up the next node from the queue to send request for alternate path setup (see Fig. <ref type="figure">5c</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Evaluation of REEP</head><p>As our proposed protocol is diffusion-based, meaning that control information is diffused throughout the whole network for path setup before real data transmission, we have used DD, which is perhaps the most popular diffusion-based data-centric routing protocol for WSN, as the benchmark for purposes of comparison. In this section, first, we present qualitative points of comparison of REEP and DD. Next, we present the results of comparison obtained from simulations.</p><p>Both REEP and DD have some similarities and differences between them. Similarities include the following: both of these two protocols are application-aware and diffusion based; use the same naming scheme, the data-centric approach and negative events (negative 'reinforcement' in DD and negative 'request' in REEP) in case of path failure; construct single path for data transmission based on the local interactions and operate mainly in three steps until the path has been established (a mapping of the steps used in DD and REEP are presented in Table <ref type="table" target="#tab_0">1</ref>). Differences include the following: paths in DD are created according to their interest where, as in REEP, paths are created after selecting a task. This is also energy-efficient, because in case a large number of sources report several events towards the sink node, it does not send request for all events. Instead, requests are sent only for those events that are requested by the application. DD uses a gradient setup technique by flooding the exploratory events, which incurs more energy consumption, whereas in REEP, the gradient setup technique is not required. In case of any node failure, for alternate path discovery, REEP uses the RPQ to ensure savings of time and energy. DD needs to invoke periodic flooding of low rate exploratory events in such a situation. Each task is distinct in REEP, based on both the object type and the source node's location information, but in DD each task is distinguishable by both the object type and a rectangular area specified in the interest.</p><p>In REEP, the maintenance of an energy threshold value in each node is resemblance to the fuel indicator of each car. When this indicator shows empty, it reminds the driver to refill the oil tank but still can go for example for 10 more kilometres. Nodes with adequate energy, participate in path setup, ensures more reliable path establishment for data transmission. If a node's energy goes below the threshold value during data transmission, the currently received data do not get lost into the node. Rather the node sends the data to the next node on the path and denies transmitting any more data by sending negative events to its neighbours. A good design of the threshold value causes less data loss in a highly busy network. DD does not maintain any energy threshold value.</p><p>In DD, only a particular task can be accomplished by an 'interest' propagation that contains a specified area size and a specified object type. But in REEP, sense event propagation results in a list of all available objects within the topology area of the sink node. For example, for security purpose, an operator may be interested to know how many pedestrians can be found within a specified area. But, in practice, there may not be any pedestrians within that area, rather they may be found in a different area. In this case, DD will result in no pedestrians being found within that specified area, but REEP will result in pedestrians being found in the different area (Fig. <ref type="figure" target="#fig_4">6</ref>). DD does not report other object type within the specified area, unless this type does not match with the object type specified in the 'interest'.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Simulation</head><p>We have used MATLAB 7.4 in our simulations. In order to analyse the performance of both protocols as a function of network size and as a function of energy, we have simulated a variety of different-sized sensor fields with different setup for a variety of cases. During simulations, the different data structures (shown in Tables <ref type="figure" target="#fig_1">2</ref><ref type="figure" target="#fig_2">3</ref><ref type="figure">4</ref>) are used for a sensor node, a detected object type and a packet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Simulation inputs:</head><p>The user inputs to our sensor network simulation are as follows. TOTAL_SENSOR_ NODES is the number of total sensor nodes used in the network. ENERGY is the total initial energy available in each node. AREA_WIDTH is the width of a topological area. The RECT area and the OBJECT_TYPE are used to define 'interest' in DD. The value of ENERGY_ TRESHOLD is used in REEP to find a reliable path. MAX_DATA indicates the maximum number of data that are generated in the source node, and MAX_OBJECT indicates the maximum number of detected objects. There are some other prime inputs to the simulation, but they are calculated based on the user input. They are as follows</p><formula xml:id="formula_1">NODES IN ROW ¼ ceiling(TOTAL SENSOR NODES 1=2 ) (1) SINK ¼ TOTAL SENSOR NODES À modulus (TOTAL SENSOR NODES, NODES IN ROW) (2) NODE HOR VERT DISTANCE ¼ AREA WIDTH =NODES IN ROW<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Performance metrics:</head><p>We have chosen four performance metrics to analyse and compare the performance of both protocols DD and REEP. These metrics are as follows: </p><formula xml:id="formula_2">(P r þ P t )=2 N Â T<label>(4)</label></formula><p>In ( <ref type="formula" target="#formula_2">4</ref>), P r denotes the total number of packets received and P t denotes the total number of packets transmitted in the network. The sum of P r and P r has been divided by two, because a unit of communication includes the reception and the transmission of each packet. N indicates the total number of sensor nodes and T indicates the total number of tasks. The lower value of this metric indicates a lesser number of packet transmissions by each node as well as less energy consumption and better performance.</p><p>Average energy consumption: It indicates the average amount of energy spent in each node for each individual task. An increased value of average energy consumption indicates more power consumption by each node. This metric is computed with the help of the following equation:</p><formula xml:id="formula_3">P N i¼1 (IEi À REi) N Â T<label>(5)</label></formula><p>In <ref type="bibr" target="#b4">(5)</ref>, N denotes the total number of sensor nodes and T denotes the total number of tasks. For each node i, the used energy is the difference between the IE (the initial energy available in the node i) and the RE (the remaining energy in node i after simulation).</p><p>Average data loss ratio: It indicates the average value of data loss ratio. The average data loss ratio is computed with the help of the following equation:</p><formula xml:id="formula_4">P T i¼1 MDiÀRDi MDi T<label>(6)</label></formula><p>In ( <ref type="formula" target="#formula_4">6</ref>), T denotes the total number of tasks and for each task i, MD denotes the maximum data generated in the source node and RD denotes the total data received in the sink node. Data loss ratio for each task i has been computed by dividing the number of lost data by the maximum generated data. An increased value of average data loss ratio indicates more data loss.</p><p>Average delay: It indicates the time duration required for receiving the first data after the query generation at the sink node for a particular task. An increasing average delay indicates more time requirement. The average delay is computed with the help of the following equation:</p><formula xml:id="formula_5">P T i¼1 (tDi À tIi) T<label>(7)</label></formula><p>In <ref type="bibr" target="#b6">(7)</ref>, T is the total number of tasks and for each task i, tD denotes the time when sink receives the first data for i and tI denotes the initial time when sink generated the query for i.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Simulation results</head><p>Different simulations were conducted in both grid and random arrangement of nodes, because performance varies for increased or decreased connectivity among nodes. The simulation results are explained in the following sections with associated configuration and graph results. It should be noted that all the value points in all graphs are the average of 10 simulation runs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Performance in grid arrangement:</head><p>The performance of DD and REEP is compared in most of our experiments in terms of the 'average packet transmission', 'average energy consumption' and 'average delay' as a function of the network size and the 'average data loss ratio' is computed as a function of energy. In this experiment, we simulated 10 different network sizes, with an increment of 100 nodes each time, ranging from 100 to 1000 nodes. The sensor field has been generated by placing all the nodes in a grid fashion within a square area, and by scaling and keeping the communication range constant. If we do not keep the density constant, the performance increased network size will be affected by the effect of performance as a result of increased connectivity. The initial available energy in each node is 100 in cases of 'average packet transmission', 'average dissipated energy', 'average delay', and 1000 nodes have been used in the case of 'average data loss ratio'.</p><p>REEP performs comparatively better than DD in every experiment we performed. In a grid system network, the data points of average packet transmission (Fig. <ref type="figure" target="#fig_5">7a</ref>) and the average dissipated energy (Fig. <ref type="figure" target="#fig_5">7b</ref>) remain almost the same in any size of the network. We observe that the number of neighbours for each node is the same in each increased size of the network, because we kept the communication range constant for every node. Thus, the number of packet transmission remains almost the same in each node. Therefore, the dissipated energy also remains similar in every network.</p><p>The average delay (Fig. <ref type="figure" target="#fig_5">7c</ref>) increases with an increased network size, because the hop-count increases in the path. When there are 100 nodes in the network, the difference between DD and REEP is small in terms of average delay, but this difference increases rapidly with the increased number of nodes. The average data loss ratio (Fig. <ref type="figure" target="#fig_5">7d</ref> ) decreases with the increased function of energy, in both the protocols, in the same manner.</p><p>Since the packet transmissions are less in REEP compared to that in DD, the delay is also small. Again, less amount of energy is consumed for less amount of packet transmission. Therefore, the data loss ratio is also comparatively less in REEP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Performance in random arrangement:</head><p>The network setup is same as in Section 3.2.1. Only the node placement has been done here in a random fashion. Different plots shown in Fig. <ref type="figure" target="#fig_6">8</ref> show the results. We observe that the average packet transmission (Fig. <ref type="figure" target="#fig_6">8a</ref>) and the average dissipated energy (Fig. <ref type="figure" target="#fig_6">8b</ref>) decrease gently with the increased number of nodes, and the data values are comparatively smaller than in a grid network. Both protocols perform almost similarly in terms of the average delay (Fig. <ref type="figure" target="#fig_6">8c</ref>) in both the grid and the random system </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Fault tolerance in REEP:</head><p>As mentioned earlier, in case a node fails to transmit, the ability to sustain by avoiding any interruption of network functionality assures more reliable transmission of information, which is known as the fault tolerance issue. How this issue has been handled in REEP described in detail in Section 2.3. Fig. <ref type="figure">9</ref> shows the performance of REEP with and without fault tolerance. We have simulated REEP over 100 nodes to show how data loss ratio varies with the increased energy level. When a node fails and fault tolerance is absent, alternate paths are not created and, therefore, data loss becomes higher.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">Reliability in REEP:</head><p>In this Section, we show how the reliability issue is handled in REEP. In Fig. <ref type="figure" target="#fig_0">10a</ref>, we see that a path has been established from the source node 1 to the sink node 49 for data transmission. In REEP, no node participates in path if its energy level goes below the threshold value. Hence, we can infer that reliable path is established in REEP for data transmission. The blank (empty) circles shown in Fig. <ref type="figure" target="#fig_0">10</ref> indicate that their energy level is below the threshold value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.5">Multipath and non-participating nodes scenarios:</head><p>Considering that it is possible in practical scenarios for some nodes to lose their power during a transmission setup, it is essential to make use of an energy threshold. That is, as soon as a node reaches the energy threshold value, it denies participating in any data transmission and alternate path setup. Fig. <ref type="figure" target="#fig_8">11</ref> shows different snapshots in REEP under different situations. As long as nodes on the paths have adequate energy, data transmissions go on over a single path as shown in Figs. <ref type="figure" target="#fig_8">11a</ref> and<ref type="figure">c</ref>. However, alternate paths are established by the neighbouring nodes when a node is disabled (non-participating) for data transmission, as shown in Figs. <ref type="figure" target="#fig_8">11b</ref> and<ref type="figure">d</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>In this paper, we have reported a new protocol named REEP, which is diffusion-based and data centric. The data-centricity of REEP refers to the fact that it uses data aggregated from the network for energy-efficient information dissemination. For instance, as seen in the plots shown in Fig. <ref type="figure" target="#fig_5">7</ref>, in a grid system, the data points of average packet transmission (Fig. <ref type="figure" target="#fig_5">7a</ref>) and the average dissipated energy (Fig. <ref type="figure" target="#fig_5">7b</ref>) remain almost same in any size of the network. Similarly, we also observed that the average packet transmission (Fig. <ref type="figure" target="#fig_6">8a</ref>) and the average dissipated energy (Fig. <ref type="figure" target="#fig_6">8b</ref>) decreases gently with the increase in the number of nodes. We have also seen in Figs. 9 and 10 that REEP is fault tolerant and reliable.</p><p>Communication paths established in REEP are inspired by the observation of strictly local communication in physical systems <ref type="bibr" target="#b17">[17]</ref>. In such systems, path setup functions cannot use global topology metrics. As discussed earlier, REEP differs from the other data-centric routing protocols in sensor networking in the following respects. First, REEP is an interactive on-demand protocol, in which path establishment can be done based on the choice of any user or an application. Secondly, each node maintains an energy threshold value and participates in path setup with adequate energy for data transmission. Finally, the request priority queue is used for loop prevention and alternate path setup in case of failed path, without invoking periodic flooding.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Future work</head><p>We now provide some directions of future research. REEP has been designed for such sensor networks where sensor nodes are stationary. Future work may be done to redesign REEP with the mobility feature included. In addition to that, REEP can be adopted for event-triggered applications also, which requires all-time sensing of changing physical phenomena.</p><p>As the sensor nodes are energy constrained and are capable of less complex computations, it may be possible in the future to use some extra special kind of power generator type nodes in the network to supply extra energy to the low-powered sensor devices. This technology will give flexibility to designers to design more powerful algorithms for sensor networks. Signal amplifiers can be used within the sensor field to transmit poor signals properly from one end to the other end of the network.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 A</head><label>1</label><figDesc>Figure 1 A high-level schematic view of REEP a Sense event b Information event c Sink sending request for path d Data delivery along dedicated</figDesc><graphic coords="2,311.81,548.56,234.70,156.59" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2</head><label>2</label><figDesc>Figure 2 Propagation of different events in REEP a Propagation of sense event b Propagation of Information event c Propagation of request event</figDesc><graphic coords="4,107.72,75.29,379.65,177.73" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3</head><label>3</label><figDesc>Figure 3 REEP algorithm</figDesc><graphic coords="5,124.72,467.54,348.69,281.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 Figure 5</head><label>45</label><figDesc>Figure 4 Flowchart of the algorithm</figDesc><graphic coords="6,48.19,75.29,234.46,281.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6</head><label>6</label><figDesc>Figure 6 Example of how DD and REEP operate for the same situation</figDesc><graphic coords="6,311.81,75.29,234.70,122.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7</head><label>7</label><figDesc>Figure 7 Performance in grid arrangement a Average packet transmission b Average energy consumption c Average delay (second) d Average data loss ratio</figDesc><graphic coords="9,102.05,383.58,391.14,321.62" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8</head><label>8</label><figDesc>Figure 8 Performance in random arrangement a Average packet transmission b Average energy consumption c Average delay (s) d Average data loss ratio</figDesc><graphic coords="10,102.05,361.47,391.67,343.73" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 FaultFigure 10</head><label>910</label><figDesc>Figure 9 Fault Tolerance in REEP</figDesc><graphic coords="11,48.19,75.29,235.65,175.97" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11</head><label>11</label><figDesc>Figure 11 Multipath and non-participating nodes scenarios a Single sink (100) and single source (1) without alternate path setup b Single sink (100) and single source (1) with alternate path setup c Multiple sinks (72,79) and multiple sources (1,18) without alternate path setup d Multiple sinks (72,79) and multiple sources (1,18) with alternate path setup</figDesc><graphic coords="12,99.21,75.29,395.96,316.35" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Brief description of the functional steps</figDesc><table><row><cell>Functional steps of DD</cell><cell>Functional steps of REEP</cell></row><row><cell>'Interest' propagation</cell><cell>'Sense' propagation</cell></row><row><cell>(exploratory events)</cell><cell>(exploratory events)</cell></row><row><cell>'Data message (reply of the</cell><cell>'Information' propagation</cell></row><row><cell>interest)' propagation</cell><cell>(exploratory events)</cell></row><row><cell>(exploratory events)</cell><cell></cell></row><row><cell>'Reinforcement' propagation</cell><cell></cell></row><row><cell>for path setup</cell><cell></cell></row></table><note><p>'Request' propagation for path setup IET Commun., 2008, Vol. 2, No. 8, pp. 995-1008 997 doi: 10.1049/iet-com:20070424</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Structure of each sensor node</figDesc><table><row><cell>SI.</cell><cell>Field name</cell><cell>Description</cell></row><row><cell>No.</cell><cell></cell><cell></cell></row><row><cell>1</cell><cell>ID</cell><cell>unique ID of a sensor node</cell></row><row><cell>2</cell><cell>Location</cell><cell>position of the sensor node in</cell></row><row><cell></cell><cell></cell><cell>the network</cell></row><row><cell>3</cell><cell>NeighborList</cell><cell>the list of each node's</cell></row><row><cell></cell><cell></cell><cell>neighbors</cell></row><row><cell>4</cell><cell>TotalObject</cell><cell>total number of entries in</cell></row><row><cell></cell><cell></cell><cell>each node's cache for different</cell></row><row><cell></cell><cell></cell><cell>tasks</cell></row><row><cell>5</cell><cell>PacketList</cell><cell>queue of pending packets to</cell></row><row><cell></cell><cell></cell><cell>be processed</cell></row><row><cell>6</cell><cell>SenseSink</cell><cell>node ID of the sink node that</cell></row><row><cell></cell><cell></cell><cell>generated the sense event</cell></row><row><cell>7</cell><cell>SenseTime</cell><cell>Sense event generation time</cell></row><row><cell>8</cell><cell>Source</cell><cell>this field is true if the node is a</cell></row><row><cell></cell><cell></cell><cell>source node</cell></row><row><cell>9</cell><cell>Energy</cell><cell>lifetime of a sensor node</cell></row><row><cell>10</cell><cell>receivePkCount</cell><cell>counter of total received</cell></row><row><cell></cell><cell></cell><cell>packets</cell></row><row><cell>11</cell><cell>sendPkComit</cell><cell>counter of total sent packets</cell></row><row><cell>12</cell><cell>Active</cell><cell>flag to indicate alive or dead</cell></row><row><cell></cell><cell></cell><cell>sensor node</cell></row><row><cell>13</cell><cell>ObjectType</cell><cell></cell></row><row><cell></cell><cell>(</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc></figDesc><table /><note><p>) all the information about the detected object type are stored in this field 1000 IET Commun., 2008, Vol. 2, No. 8, pp. 995 -1008 &amp; The Institution of Engineering and Technology 2008 doi: 10.1049/iet-com:20070424</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3</head><label>3</label><figDesc>Structure of each detected ObjectType</figDesc><table><row><cell>Sl no.</cell><cell>Field name</cell><cell>Description</cell></row><row><cell>1</cell><cell>Type</cell><cell>Indicates the detected object type</cell></row><row><cell>2</cell><cell>Source</cell><cell>source node's ID which has detected the object in REEP</cell></row><row><cell>3</cell><cell>InfoTime</cell><cell>Info event generation time in REEP</cell></row><row><cell>4</cell><cell>RequestPriorityQueue</cell><cell>in REEP, request for path setup is sent to the first node taken from this queue each</cell></row><row><cell></cell><cell>(RPQ)</cell><cell>time</cell></row><row><cell>5</cell><cell>RequestReceivedFrom</cell><cell>ID of the neighbor from which a node accepts the request in REEP</cell></row><row><cell>6</cell><cell>RequestPacket</cell><cell>request packet is saved for future use incase of alternate path setup in REEP</cell></row><row><cell>7</cell><cell>DataPayload</cell><cell>generated data are stored in this field in source node</cell></row><row><cell>8</cell><cell>PrevSender</cell><cell>node ID of the neighbor who has sent request</cell></row><row><cell>9</cell><cell>RequestTime</cell><cell>Request event generation time in REEP</cell></row><row><cell>10</cell><cell>Reef</cell><cell>specified rectangular area included in the interest event in DD</cell></row><row><cell>11</cell><cell>InterestTime</cell><cell>Interest event generation time</cell></row><row><cell>12</cell><cell>DataTime</cell><cell>data generation time in DD</cell></row><row><cell>13</cell><cell>DataGenerated</cell><cell>once data has generated this field becomes true</cell></row><row><cell>14</cell><cell>ReinforcementPacket</cell><cell>reinforcement packet is saved for future use incase of alternate path setup in DD</cell></row><row><cell>15</cell><cell>ReinforcementTime</cell><cell>reinforcement generation time in DD</cell></row><row><cell>16</cell><cell>ReplyTime</cell><cell>reply generation time in DD</cell></row><row><cell>17</cell><cell>ReinforceReceivedFrom</cell><cell>ID of the neighbor from which a node accepts the reinforcement packet in DD</cell></row><row><cell>18</cell><cell>Gradient</cell><cell>this field contains gradient value for each of all individual neighbors in DD</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4</head><label>4</label><figDesc>Structure of a packetAverage packet transmission: It measures the average number of packet transmissions per node, per task and can be computed by the following equation:</figDesc><table><row><cell>Sl</cell><cell>Field name</cell><cell>Description</cell></row><row><cell>no.</cell><cell></cell><cell></cell></row><row><cell>1</cell><cell>Type</cell><cell>indicates the Packet type</cell></row><row><cell>2</cell><cell cols="2">ObjectType indicates the detected object type</cell></row><row><cell>3</cell><cell>TimeStamp</cell><cell>packet generation time</cell></row><row><cell>4</cell><cell>Sink</cell><cell>sink node's ID for this packet in REEP</cell></row><row><cell>5</cell><cell>Payload</cell><cell>real data payload is stored in this</cell></row><row><cell></cell><cell></cell><cell>field of a packet</cell></row><row><cell>6</cell><cell>SenderID</cell><cell>sender ID of this Packet</cell></row><row><cell>7</cell><cell>Source</cell><cell>source node's ID for this packet in</cell></row><row><cell></cell><cell></cell><cell>REEP</cell></row><row><cell>8</cell><cell>Last</cell><cell>this field is true if this is the last</cell></row><row><cell></cell><cell></cell><cell>packet of a source</cell></row><row><cell>9</cell><cell>Deny</cell><cell>low-energy node makes this field</cell></row><row><cell></cell><cell></cell><cell>true before sending a packet to</cell></row><row><cell></cell><cell></cell><cell>indicate the status of the node in</cell></row><row><cell></cell><cell></cell><cell>REEP</cell></row><row><cell>10</cell><cell>Rect</cell><cell>specified rectangular area indicated</cell></row><row><cell></cell><cell></cell><cell>in the interest event in DD</cell></row><row><cell>11</cell><cell>Interval</cell><cell>specified time interval included in</cell></row><row><cell></cell><cell></cell><cell>the interest event in DD</cell></row></table><note><p>1002 IET Commun., 2008, Vol. 2, No. 8, pp. 995 -1008 &amp; The Institution of Engineering and Technology 2008 doi: 10.1049/iet-com:20070424 www.ietdl.org</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>&amp; The Institution of Engineering and Technology 2008 www.ietdl.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>www.ietdl.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>&amp; The Institution of Engineering and Technology 2008 doi: 10.1049/iet-com:20070424 www.ietdl.org</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Acknowledgment</head><p>This work was supported by Advanced Communication Systems Limited (Adcoms). A preliminary abridged version of this work appeared in the Proceedings of the 7th WSEAS International Conference on Applied Computer Science (ACS'07), Venice, Italy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">References</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Wireless sensor networks: a survey</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyildiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sankarasubramaniam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cayirci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="393" to="422" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Directed diffusion for wireless sensor networking</title>
		<author>
			<persName><forename type="first">C</forename><surname>Intanagonwiwat</surname></persName>
		</author>
		<author>
			<persName><surname>Govindan R</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="2" to="16" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Adaptive protocols for information dissemination in wireless sensor networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kulik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Rabiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Annual ACM/IEEE Int. Conf. Mobile Comput. Netw. (MobiCom&apos;99)</title>
		<meeting>5th Annual ACM/IEEE Int. Conf. Mobile Comput. Netw. (MobiCom&apos;99)<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Routing techniques in wireless sensor networks: a survey</title>
		<author>
			<persName><forename type="first">Al-Karaki J</forename><forename type="middle">N</forename><surname>Kamal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Commun., IEEE</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="6" to="28" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Rumor routing algorithm for sensor networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Braginsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Workshop on Sensor Networks and Applications (WSNA)</title>
		<meeting>1st Workshop on Sensor Networks and Applications (WSNA)<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-10">October 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Scalable solution to minimum cost forwarding in large sensor networks</title>
		<author>
			<persName><forename type="first">F</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICCCN</title>
		<meeting>ICCCN</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">01</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Gradient-based routing in sensor networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Faruque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MOBICOM</title>
		<meeting>MOBICOM</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Scalable informationdriven sensor querying and routing for ad hoc heterogeneous sensor networks</title>
		<author>
			<persName><forename type="first">Chu</forename><forename type="middle">M</forename><surname>Haussecker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename></persName>
		</author>
		<idno>P2001-10113</idno>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
		<respStmt>
			<orgName>Xerox Palo Alto Research Center</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Constrained random walks on random graphs: routing algorithms for large scale wireless sensor networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Servetto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Barrenechea</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. 1st ACM Int. Workshop Wireless Sensor Networks and Appl</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<pubPlace>Atlanta, GA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A survey on routing protocols for wireless sensor networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Akkaya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Younis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ad Hoc Netw</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="325" to="349" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Highly resilient, energy-efficient multipath routing in wireless sensor networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ganesan</surname></persName>
		</author>
		<author>
			<persName><surname>Govindan R</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGMOBILE Mobile Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="11" to="25" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">TEEN: a protocol for enhanced efficiency in wireless sensor networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Manjeshwar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Agrawal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Int. Workshop on Parallel and Distributed Computing Issues in Wireless Networks and Mobile Computing</title>
		<meeting>1st Int. Workshop on Parallel and Distributed Computing Issues in Wireless Networks and Mobile Computing<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-04">April 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Energy efficient routing in wireless sensor networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Schurgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MILCOM Proc. Commun. Network-Centric Operations: Creating the Information Force</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<pubPlace>McLean, VA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Scalable informationdriven sensor querying and routing for ad hoc heterogeneous sensor networks</title>
		<author>
			<persName><forename type="first">Chu</forename><forename type="middle">M</forename><surname>Haussecker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. High Perform. Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName><surname>Iet Commun</surname></persName>
		</author>
		<idno type="DOI">10.1049/iet-com:20070424</idno>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">1007</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Energy aware routing for low energy ad hoc sensor networks</title>
		<author>
			<persName><surname>Shah R</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rabaey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Wireless Commun. Netw. Conf. (WCNC)</title>
		<meeting>IEEE Wireless Commun. Netw. Conf. (WCNC)<address><addrLine>Orlando, FL, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-03">March 2002</date>
			<biblScope unit="page" from="350" to="355" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The cougar approach to in-network query processing in sensor networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gehrke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGMOD Record</title>
		<imprint>
			<date type="published" when="2002-09">September 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">SPEED: a stateless protocol for real-time communication in sensor networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Abdelzaher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Int. Conf. Distributed Comput. Syst</title>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
			<pubPlace>Providence, RI, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Energyefficient communication protocol for wireless microsensor networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Heinzelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chandrakasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Hawaii Int. Conf. Syst. Sci</title>
		<imprint>
			<biblScope unit="page" from="4" to="7" />
			<date type="published" when="2000-01">January 2000</date>
			<pubPlace>Maui, Hawaii</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Select-andprotest-based beaconless georouting with guaranteed delivery in wireless sensor networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kalosha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nayak</surname></persName>
		</author>
		<author>
			<persName><surname>Ru ¨hrup S</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
		<respStmt>
			<orgName>Manuscript University of Ottawa, Canada</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Active query forwarding in sensor networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Sadagopan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Krishnamachari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ad Hoc Netw</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="91" to="113" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Robust position-based routing for wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Moaveninejad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Z</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ad Hoc Netw</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="546" to="559" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The ACQUIRE mechanism for efficient querying in sensor networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Sadagopan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Krishnamachari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. 1st Int. Workshop on Sensor Netw. Protocol and Appl</title>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
			<pubPlace>Anchorage, AK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Data-centric protocols for wireless sensor networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Olariu</surname></persName>
		</author>
		<editor>STOJMENOVIC I.</editor>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Wiley</publisher>
			<biblScope unit="page" from="417" to="456" />
			<pubPlace>Ed.</pubPlace>
		</imprint>
	</monogr>
	<note>): &apos;Handbook of sensor networks</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IET Commun</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="995" to="1008" />
			<date type="published" when="1008">1008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
