<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Online Optimization of Swimming and Crawling in an Amphibious Snake Robot</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Alessandro</forename><surname>Crespi</surname></persName>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Jan</forename><surname>Ijspeert</surname></persName>
						</author>
						<title level="a" type="main">Online Optimization of Swimming and Crawling in an Amphibious Snake Robot</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A91236EACAFCCA8A1BD6DC6DD01869F6</idno>
					<idno type="DOI">10.1109/TRO.2008.915426</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Amphibious snake robot</term>
					<term>locomotion control</term>
					<term>online optimization</term>
					<term>serpentine crawling</term>
					<term>swimming</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>An important problem in the control of locomotion of robots with multiple degrees of freedom (e.g., biomimetic robots) is to adapt the locomotor patterns to the properties of the environment. This article addresses this problem for the locomotion of an amphibious snake robot, and aims at identifying fast swimming and crawling gaits for a variety of environments. Our approach uses a locomotion controller based on the biological concept of central pattern generators (CPGs) together with a gradient-free optimization method, Powell's method. A key aspect of our approach is that the gaits are optimized online, i.e., while moving, rather than as an off-line optimization process. We present various experiments with the real robot and in simulation: swimming, crawling on horizontal ground, and crawling on slopes. For each of these different situations, the optimized gaits are compared with the results of systematic explorations of the parameter space. The main outcomes of the experiments are: 1) optimal gaits are significantly different from one medium to the other; 2) the optimums are usually peaked, i.e., speed rapidly becomes suboptimal when the parameters are moved away from the optimal values; 3) our approach finds optimal gaits in much fewer iterations than the systematic search; and 4) the CPG has no problem dealing with the abrupt parameter changes during the optimization process. The relevance for robotic locomotion control is discussed.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>B OTH ANIMALS and biomimetic robots (or, more gen- erally, robots with multiple degrees of freedom) face a complex problem when adapting their locomotion to their environment. Indeed, animals and robots must generally carefully adapt their gaits depending on multiple criteria: whether the ground is soft or hard, slippery or sticky, flat or uneven, horizontal or with a slope, etc. In some cases, the environment may even dramatically change between ground, water, and/or air, and locomotion must be adapted to the corresponding physics. In this paper, we address the problem of adaptive locomotion with an amphibious snake robot. This problem is very relevant for such a robot because of the tight interaction with the environment: indeed, it has multiple contact points with the ground when crawling, and complex interaction with the water when swimming.</p><p>Manuscript received January 1, 2007; revised <ref type="bibr">November 27, 2007</ref>. This paper was recommended for publication by Associate Editor A. Takanisi and Editor F. Park upon evaluation of the reviewers' comments. This work was supported by the Swiss National Science Foundation.</p><p>The authors are with the Biologically Inspired Robotics Group, Faculty of Computer and Communication Sciences, Ecole Polytechnique Fédérale de Lausanne, CH-1015 Lausanne, Switzerland (e-mail: alessandro.crespi@epfl.ch; auke.ijspeert@epfl.ch).</p><p>Color versions of one or more of the figures in this paper are available online at http://ieeexplore.ieee.org.</p><p>Digital Object Identifier 10.1109/TRO.2008.915426 We propose a framework for learning locomotion controllers based on two components: a central pattern generator and a gradient-free optimization algorithm, Powell's method. Our approach is inspired by a control mechanism that nature has found to deal with the redundancies in animal bodies and the requirement to easily modulate locomotion: central pattern generators (CPGs). CPGs are neural networks capable of producing coordinated patterns of rhythmic activity without any rhythmic inputs from sensory feedback or from higher control centers <ref type="bibr" target="#b0">[1]</ref>. Even completely isolated CPGs in a petri dish can produce patterns of activity, called fictive locomotion, that are very similar to intact locomotion when activated by simple electrical or chemical stimulation <ref type="bibr" target="#b1">[2]</ref>. Typically, varying simple stimulation allows modulation of both the speed and direction of locomotion. From a control point of view, CPGs, therefore, implement some kind of internal model, i.e., a controller that "knows" which torques need to be rhythmically applied to obtain a given speed of locomotion. Interestingly, CPGs combine notions of stereotypy (steady-state locomotion tends to show little variability) and of flexibility (speed, direction, and types of gait can continuously be adjusted).</p><p>In this paper, we implement a CPG model as a system of coupled amplitude-controlled phase oscillators inspired from the lamprey's swimming CPG. The CPG can produce and modulate the travelling waves necessary for swimming and serpentine locomotion of the amphibious robot Amphibot II (see Fig. <ref type="figure" target="#fig_0">1</ref>). The CPG has several explicit parameters, which can be continuously modified, controlling the shape of the generated gaits. Interesting properties of the CPG include: 1) it is computationally cheap; 2) it exhibits limit cycle behavior (temporary perturbations are rapidly forgotten); 3) the limit cycle behavior has an analytical solution with explicit frequency, amplitude, and phase lag parameters that can be used as control parameters; and 4) it produces smooth trajectories even when the control parameters are abruptly changed.</p><p>These properties allow us to run an optimization algorithm in parallel of the locomotion controller and to regularly update the CPG parameters online, i.e., during locomotion. The criterion optimized is the forward speed. To maximize the speed (and also to obtain any locomotion at all), the parameters of the CPG have to be adapted depending on the environmental conditions. We demonstrate how a gradient-free optimization algorithm (the Powell's method) can be used to search for the CPG parameters (phase lag, oscillation amplitude) that produce the maximum speed of the robot for a given environment. Our goal is to demonstrate that the CPG implemented as a system of coupled nonlinear oscillators is an ideal building block for doing online optimization in a redundant robotic system. Indeed, the optimization algorithm can run in parallel to the CPG and regularly update its parameters. Despite abrupt parameter changes, the produced trajectories will smoothly converge toward the new limit cycle after a short transient period. This means that the robot does not need to be stopped or reset between iterations.</p><p>This paper extends a previous conference article <ref type="bibr" target="#b2">[3]</ref> that presents the CPG model and its interactive control with a humanin-the-loop. This work is also related to CPG models used to control a fish <ref type="bibr" target="#b3">[4]</ref> and a salamander-like robot <ref type="bibr" target="#b4">[5]</ref> that we constructed using the same hardware modules. The novelty here is the online learning and the adaptation to different terrains (different grounds and different slopes) and environments (ground and water). This possibility to do online optimization, i.e., learning while moving, is one of the main contributions of this paper. Being able to learn gaits online, as opposed to do off-line optimization with a model or a simulator, for instance, is of great importance for biomimetic robotics. Indeed, it might be one of the only solutions to tackle the problem of adapting gaits to complex, possibly unknown, environments. Keeping a realistic and up-to-date model of the interaction forces with such environments might be impossible or not accurate enough to allow alternative (e.g., model-based) approaches (described later).</p><p>In the rest of the paper, we will first review related work in Section II. We will then describe the snake robot Amphibot II in Section III, the CPG model in Section IV, and the simulated robot model in Section V. We then present the results obtained with the optimization experiments with the real and simulated robots in Section VII. Finally, a discussion of the results is presented in Section VIII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>A considerable number of snake-like robots have been constructed. Most of them were designed for use on ground <ref type="bibr" target="#b5">[6]</ref>- <ref type="bibr" target="#b9">[10]</ref>, a few were designed for swimming <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b11">[12]</ref>, only a small minority of them has the capability to be amphibious <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>. Their control architecture can roughly be divided into three categories: sine based, model based, and CPG based.</p><p>Sine-based approaches use simple time-indexed sine-based functions for generating travelling waves (see, for instance, <ref type="bibr" target="#b7">[8]</ref> and <ref type="bibr" target="#b9">[10]</ref>). The advantages of such an approach are its simplicity and the fact that important quantities such as frequency, ampli-tude, and wavelength are explicitly defined. A disadvantage is that online modifications of the parameters of the sine function (e.g., the amplitude or the frequency) will lead to discontinuous jumps of setpoints, which will generate jerky movements, risking damages of the motors and gearboxes. This problem can, to some extent, be overcome by filtering the parameter and/or the outputs, but the approach then loses its simplicity. Another disadvantage is that sine-based functions do not offer simple ways of integrating sensory feedback signals. In this paper, we will argue that a simple CPG model can combine, without much computational costs, the simplicity of time-indexed sine-based functions with additional interesting properties related to numerical integration of a system of differential equations.</p><p>Model-based approaches use kinematic <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref> or dynamic <ref type="bibr" target="#b16">[17]</ref>- <ref type="bibr" target="#b19">[20]</ref> models of the robot to design control laws for gait generation. The control laws are sometimes based on sinebased functions as before (e.g., <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b19">[20]</ref>), but the modelbased approaches offer a way to identify fastest gaits for a given robot by using kinematic constraints or approximations of the equations of motion, for instance. Model-based approaches are, therefore, very useful for helping to design controllers, but have two limitations. First, the performance of controllers will deteriorate when models become inaccurate, which is rapidly the case for interaction forces with a complex environment (e.g., friction with uneven ground). Second, the resulting controllers are not always suited for interactive modulation by a human operator.</p><p>CPG-based approaches use dynamical systems, e.g., systems of coupled nonlinear oscillators or recurrent neural networks, for generating the travelling waves necessary for locomotion (see, for instance, <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b20">[21]</ref>- <ref type="bibr" target="#b22">[23]</ref>). These approaches are implemented as differential equations integrated over time, and the goal is to produce the travelling wave as a limit cycle. If this is the case, the oscillatory patterns are robust against transient perturbations (i.e., they asymptotically return to the limit cycle). Furthermore, the limit cycle can usually be modulated by some parameters, which offer the possibility to smoothly modulate the type of gaits produced. Finally, CPGs can readily integrate sensory feedback signals in the differential equations and show interesting properties such as entrainment by the mechanical body <ref type="bibr" target="#b23">[24]</ref>.</p><p>However, one difficulty with CPG-based approaches is to determine how to design the CPG to produce a particular pattern. Many CPG models do not have explicit parameters defining quantities such as frequency, amplitude, and wavelength (for instance, a van der Pol oscillator does not have explicit frequency and amplitude parameters). This does not need to be the case. In this paper, we use a CPG model based on amplitude-controlled phase oscillators. An interesting aspect of this approach is that the limit cycle of the CPG has a closed form solution, with explicit frequency, amplitude, and wavelength parameters. The approach, therefore, combines the elegance and robustness of the CPG approaches with the simplicity of sine-based approaches. Furthermore, our CPG model is computationally very light, which makes it well suited to be programmed on a microcontroller on board of the robot. The implementation of the CPG is inspired from lamprey models <ref type="bibr" target="#b24">[25]</ref>. It is close to the CPG model presented in <ref type="bibr" target="#b22">[23]</ref>, but differs in the following aspects: Fig. <ref type="figure">2</ref>. Salamander (left) and fish (right) robots that have been constructed using the same elements used for the snake robot described in this paper.</p><p>1) it is made of a double chain of oscillators; 2) it has differential equations controlling the amplitudes of each oscillator (not only the phase); and 3) the CPG is used to control not only serpentine crawling but also swimming.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. HARDWARE DESCRIPTION</head><p>Our online optimization method is tested with AmphiBot II, an amphibious snake/lamprey robot capable of swimming and serpentine crawling. The robot is an improved version of Amphibot I <ref type="bibr" target="#b13">[14]</ref>, a previous amphibious prototype. The main improvements are the following: we added wireless communication, onboard trajectory generation, better electronics, stronger motors, and compliant connection elements. The modules used for Amphibot II were also used to construct Salamandra robotica, a salamander-like robot <ref type="bibr" target="#b4">[5]</ref> and Boxybot, a fish robot <ref type="bibr" target="#b3">[4]</ref> (see Fig. <ref type="figure">2</ref>).</p><p>The Amphibot II robot has a modular design and is constructed out of seven actuated elements (see Fig. <ref type="figure" target="#fig_1">3</ref>) and a head element (which is externally identical to the others). The external casing of each element consists of two symmetrical parts molded using lightened polyurethane resin. The elements are connected using a compliant connection piece fixed to the output axis. All the output axes are aligned, therefore producing planar locomotion. To ensure the waterproofing of the robot, custom O-rings are used. <ref type="foot" target="#foot_0">1</ref> The total length of the robot is 77 cm. The asymmetric friction with the ground, required to correctly crawl on the ground, is obtained by fixing a couple of passive wheels to each element. The wheels are removed for swimming, except for experiments implying transitions between water and ground. The density of the robot is slightly lower than 1 kg/m 3 , so that it floats under the surface when in water. The battery is placed at the bottom of the elements to have the center of mass below the vertical center, thus ensuring the vertical stability of the robot during both swimming and crawling. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Actuated Elements</head><p>Each element contains three printed circuits connected with a flat cable, a dc motor with integrated incremental encoder, a set of gears, and a rechargeable Li-ion battery. The elements are, thus, completely independent from each other.</p><p>The motor controller is based on a PIC16F876A microcontroller, which runs a PID motor controller developed at the Autonomous Systems Laboratory of the Ecole Polytechnique Fédérale de Lausanne (EPFL), and is connected to the I 2 C bus of the robot. The controller receives feedback from the motor encoder through a quadrature detector, and drives the H-bridges powering the motor with a pulse width modulation (PWM) signal.</p><p>The electronics (with the exception of the motor) are powered using 5 V. This voltage is generated from the battery voltage by the power circuit, using a step-up converter. The power circuit also features a battery charger (when empty, the battery can be recharged in approximately 1 h) and a battery protection system, which avoids damaging the battery by discharging it excessively.</p><p>A water detector circuit, used internally to detect and localize any leakage, is placed at the bottom of the element, and is connected to an LED fixed through the top of the element, thus allowing the user to immediately detect the leakage.</p><p>The 2.83 W dc motor (Faulhaber 1724 T 003 SR) has a maximum recommended torque of 4.2 mN•m, and drives a gearbox with a reduction factor of 125. The output axis of the gears is fixed to the connection piece, which is inserted into the next element. Six wires are inserted into the axis, and connected to the power boards of two adjacent elements: two are used for the external power, two for the I 2 C bus, one for the power switch, and the last one is reserved for future usage and currently unconnected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Head Element</head><p>The head element, like the body elements, has three printed circuits (a power board without all the motor-related circuits, a controller board, and a water detector). The controller circuit is based on a PIC18F2580 microcontroller, which is master on the I 2 C bus of the robot. It implements the CPG (described in Section IV), and sends out the setpoints to the motor controllers of each element in real time. The main microcontroller communicates, using a serial line, with a PIC16LF876A microcontroller, which controls an nRF905 radio transceiver. The antenna is internal to the element and consists of a simple λ/4 wire (where λ is the wavelength of the used frequency). The radio system uses the 868 MHz ISM band: preliminary experiments showed that a 10 mW signal (the power transmitted by the nRF905) on this frequency can penetrate in water up to at least 30 cm (the maximum tested depth). The more common 2.4 GHz band has not been used, because it is heavily absorbed by the water. The maximal bandwidth is approximately 50 kb/s, largely enough to send control commands and parameters to the online trajectory generator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Video Tracking</head><p>To run an optimization algorithm, we need an estimation of the performance of the robot (the speed in this paper) for a given set of locomotion parameters. Several solutions to this problem exist. For simplicity, we chose video tracking in this paper (in future work, we are planning to provide the robot means to estimate its speed on its own). The tracking system that has been developed for these experiments is relatively simple: a bright 48 lm green LED having an irradiation angle of 130 • and powered by an independent Li-ion battery is fixed on the head of robot. The experimental setup is filmed using a Basler A622f camera connected through an IEEE 1394 interface to a PC, on which a simple tracking program is running. The whole system is depicted in Fig. <ref type="figure" target="#fig_2">4</ref>.</p><p>The tracking program acquires the data from the camera at 15 fps, with a resolution of 800 × 600 pixels and a depth of 8 b per pixel (grayscale). The used image processing algorithm is trivial: the coordinates (S x , S y ) of the LED spot (in pixels) are calculated as the average coordinates of all the pixels having a lightness higher than a given threshold (currently 192). The coordinates are then converted to the real (homogeneous) coordinates of the robot on the plane (R x /R w , R y /R w ) using a 2-D transformation matrix</p><formula xml:id="formula_0">  R x R y R w   =   a b c d e f g h i     S x S y 1  <label>(1)</label></formula><p>The coefficients a, b, . . . , i are obtained (for a given placement and orientation of the camera) by solving a linear system: aP n,x + bP n,y + c -gD n,x P n,x -hD n,x P n,y -iD n,x = 0 dP n,x + eP n,y + f -gD n,y P n,x -hD n,y P n,y -iD n,y = 0</p><formula xml:id="formula_1">(∀n ∈ [1, . . . , 4]) (2)</formula><p>where D 1 , . . . , D 4 are the real coordinates of four reference points (aligned on two parallel lines) and P 1 , . . . , P 4 are their coordinates in pixels. The system is currently solved numerically by writing it into matrix form and using singular value decomposition (SVD).</p><p>The tracking system includes a Transmission Control Protocol/Internet Protocol (TCP/IP) server, allowing the coordinates of the robot (and its visibility status) to be remotely retrieved in real time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CENTRAL PATTERN GENERATOR MODEL</head><p>Our CPG model is based on a system of amplitude-controlled phase oscillators. The design of the CPG is loosely inspired from the neural circuit controlling swimming in the lamprey <ref type="bibr" target="#b25">[26]</ref>: it spontaneously produces travelling waves with constant phase lags between neighboring segments along the body, and it is made of multiple oscillators connected as a double chain. An oscillator in the model corresponds to an oscillatory center in the lamprey, i.e., a subnetwork of several thousands of neurons located in one segment of the spinal cord that is capable of producing oscillations independently of other centers.</p><p>The CPG model is a double chain of oscillators with nearest neighbor coupling (see Fig. <ref type="figure" target="#fig_3">5</ref>). The chain is designed to generate a travelling wave from the head to the tail of the robot. This wave is used to achieve anguilliform swimming in water and serpentine locomotion on ground. The total number of oscillators is 2N , where N = 7 is the number of actuated joints in the robot. Actuated joints are numbered 1 to N from head to tail. Oscillators in the left chain of the CPG are numbered 1 to N , and those on the right side are numbered N + 1 to 2N from head to tail.</p><p>The CPG is implemented as the following system of 2N coupled oscillators:</p><formula xml:id="formula_2">           θi = 2πν i + j ∈T (i) w ij sin(θ j -θ i -φ ij ) ri = a i a i 4 (R i -r i ) -ṙi x i = r i (1 + cos(θ i ))<label>(3)</label></formula><p>where the state variables θ i and r i represent, respectively, the phase and the amplitude of the ith oscillator, the parameters ν i and R i determine the intrinsic frequency and amplitude, and a i is a positive constant. The coupling between the oscillators is defined by the weights w ij and the phase biases φ ij . An oscillator i receives inbound couplings from the oscillators in the discrete set T (i) according to the topology shown in Fig. <ref type="figure" target="#fig_3">5</ref>. For instance, oscillator number 2 receives coupling from oscillators number 1, 3, and 9 (T (2) = [1, 3, 9]). The variable x i is the rhythmic and positive output signal extracted out of oscillator i. The first differential equation determines the time evolution of the phase θ i . It can easily be shown that two (or more) coupled oscillators will synchronize (i.e., oscillate at the same frequency and with a constant phase lag) if the coupling weights w ij are sufficiently large as compared to the differences of intrinsic frequencies (see Appendix). The phase lag between the oscillators will then depend on φ ij , w ij , and ν i . The second differential equation is a second-order linear differential equation that ensures that the amplitude r i smoothly converges to R i in a critically dampened fashion. The setpoints ϕ i , i.e., the desired angles for the N actuated joints, are obtained by taking the difference between signals from the left and right oscillators. A standard proportionalderivative (PD) motor controller is then used to compute τ i the voltage (i.e., torque) applied to the motor</p><formula xml:id="formula_3">ϕ i = x i -x N +1 τ i = K p e i + K d ėi<label>(4)</label></formula><p>where e i = ϕ iφi is the tracking error between the desired angles ϕ i and the actual angles φi measured by the motor incremental encoders and K p and K d are the proportional and derivative gains.</p><p>In order to reflect the symmetries of the robot and to reduce the number of parameters to optimize, we set several parameters to the same values. The frequency parameters are equal for all oscillators, i.e., ν i = ν. We also chose the amplitude parameters on one side of the CPG to be an affine function of the maximal amplitude on that side: R i = α i A L for the left side (i = [1, . . . , N]) and R i = α i-N A R for the right side (i = [N + 1, . . . , 2N ]). The α i parameters are linearly interpolated between the open parameter α 1 (head) and α N = 1.0 (tail). The parameter α 1 , therefore, acts as an amplitude gain, and allows the CPG to make undulations of increasing amplitude from head to tail, as it is often seen during anguilliform swimming. The phase biases φ ij are equal to π between left and right oscillators (i.e., these will oscillate in antiphase). The phase biases between neighbor oscillators are set to ∆φ for the descending connections and to -∆φ for the ascending connections. The parameter ∆φ will determine the phase lag between modules, as described later. We used w ij = 4 for all connections and a i = 100 for all oscillators. The PD coefficients K p and K d are tuned manually for each element (e.g., elements in middle of the chain require larger gains than those at the extremities for good trajectory tracking).</p><p>With these settings, the CPG asymptotically converges to a limit cycle that is defined by the following closed form solution for the ith actuated joint (a skeleton of the proof is given in Appendix)</p><formula xml:id="formula_4">ϕ ∞ i (t)=α i A L -A R + (A L + A R ) cos(2πνt + i∆φ + φ 0 )<label>(5)</label></formula><p>where φ 0 depends on the initial conditions of the system. This means that the system always stabilizes into a travelling wave that depends on the five control parameters: ν, ∆φ, A L , A R , and α 1 . Indeed the frequency, phase lag, amplitude, and offset are directly determined by ν, ∆φ, α i (A L + A R ), and α i (A L -A R ), respectively. It is here useful to introduce Φ ≡ N ∆φ, the total phase lag between head and tail. The control parameters can be modified online by the optimization algorithm (or by a human operator) from a control PC using the wireless connection. The CPG will rapidly adapt to any parameter change and converge to the modified travelling wave after a short transient period. An example of how the CPG reacts to parameter changes can be observed in Fig. <ref type="figure" target="#fig_4">6</ref>: when the parameters are changed, the oscillator smoothly converges to the new limit cycle, without any discontinuities in the outputs.</p><p>The differential equations are integrated by the microcontroller of the head (see Section III-B) using the Euler method, with a time step of 10 ms and using fixed point arithmetics.</p><p>Note that similar lamprey CPG models based on phase oscillators have been extensively studied by Kopell and Ermentrout and their colleagues <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b26">[27]</ref>- <ref type="bibr" target="#b29">[30]</ref>. More generally, the behavior of networks of phase oscillators is a large field of study since the pioneering work of Winfree and Kuramoto. See, for instance, <ref type="bibr" target="#b30">[31]</ref>- <ref type="bibr" target="#b35">[36]</ref>. Unlike our model, most of these models do not have the amplitude as a state variable (it is typically a constant). As discussed in Section II, the closest model used to control a robot is the one developed by Conradt and Varshavskaya <ref type="bibr" target="#b22">[23]</ref>. Compared to previous neural network models that we developed of the lamprey CPG <ref type="bibr" target="#b36">[37]</ref>, <ref type="bibr" target="#b37">[38]</ref>, the model in this paper is simpler (much fewer state variables), and therefore, better suited for being programmed on a microcontroller on board of the robot, while keeping the essential features of lamprey travelling wave generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. SIMULATION</head><p>In order to test our approach more systematically and to allow easier adjustments of the environment (e.g., variations of the slope), a simulated model of the robot has been created with Webots <ref type="bibr" target="#b38">[39]</ref>. It is controlled by the same CPG of the real robot (with the exception that it is implemented on a PC using standard floating point arithmetics) and has the same mechanical and physical properties of the real robot. The wheels are modelled with asymmetric friction (simulated with a simplification of the Coulomb friction model):</p><formula xml:id="formula_5">F ⊥ = -µ ⊥ F N v ⊥ | v| F = -µ F N v | v| (6)</formula><p>where F ⊥ and F are the friction forces perpendicular and parallel to the main axis of each element, F N is the normal force due to gravity, µ ⊥ and µ are (dynamic) friction coefficients, and v ⊥ and v are the perpendicular and parallel components of the velocity v of the center of mass of the element. The used friction coefficients are µ ⊥ = 1.0 and µ = 0.05. This friction model is only a first approximation of the dynamics of the passive wheels, and although the simulation is giving maximal speeds similar to the ones obtained with the real robot, the underlying parameters are often quite different (see Figs. <ref type="figure">8</ref> and<ref type="figure" target="#fig_0">11</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. OPTIMIZATION ALGORITHM</head><p>The function we want to optimize is the locomotion speed v( x) of the robot, where x is the parameter vector containing the parameters to be optimized (oscillation amplitude A, total phase lag Φ ≡ N ∆φ, and amplitude gain α 1 ). The value of the function for a given set of parameters can be automatically estimated using the video tracking system (the parameters x can be sent to the robot using a TCP/IP gateway, as described later).</p><p>As the convergence time is critical in this context (online optimization of locomotion parameters), methods requiring a large number of function evaluations (e.g., genetic algorithms) have to be avoided. Moreover, we do not have any gradient information for v( x), and are, therefore, limited to gradient-free methods. The algorithm we chose is Powell's method <ref type="bibr" target="#b39">[40]</ref>, which is an heuristic optimization algorithm that rapidly converges for smooth functions. The main risk associated with this kind of algorithm is the possibility to converge to a local optimum of the function, rather than to the global one; however, systematical tests with the snake robot show that the speed function v( x) is rather smooth with typically a single global optima for a given frequency. A brief description of the algorithm, inspired from the one found in <ref type="bibr" target="#b39">[40]</ref>, follows:</p><p>a) 1-D optimization: The goal of function optimization is to find x such that f (x) is the highest or lowest value in a finite neighborhood. From now on, we just consider the problem of function minimization. Note that function maximization is trivially related because it is equivalent to a minimization -f (x). The main idea of 1-D function optimization is to bracket the minimum with three points a &lt; b &lt; c, such that f (b) is less than both f (a) and f (c). In this case and if f is nonsingular, f must have a minimum between a and c. Now, suppose that a new point x is chosen between b and c. If f (b) &lt; f(x), the minimum is bracketed by the triplet (a, b, x). In the other case, if f (x) &lt; f(b), the new bracketing points are (b, x, c). In both the cases, the bracketing interval decreases and the function value of the middle point is the minimum found so far. Bracketing continues until the distance between the two outer points is tolerably small <ref type="bibr" target="#b39">[40]</ref>. The challenge is finding the best strategy for choosing the new point x in the bracketing interval at each iteration. The Powell's algorithm is based on Brent's method, which is a combination of golden section search and parabolic interpolation <ref type="bibr" target="#b39">[40]</ref>, <ref type="bibr" target="#b40">[41]</ref>.</p><p>b) Multi-dimensional optimization: Consider a line defined by a starting point P and a direction n in N -dimensional space. It is possible to find the minimum of a multi-dimensional function f on this line using a 1-D optimization algorithm <ref type="bibr" target="#b39">[40]</ref> (e.g., Brent's method, as described earlier). Direction-set methods for multi-dimensional function minimization consist of sequences of such line minimizations. The methods differ by the strategies in choosing a new direction for the next line minimization at each stage. Powell's method starts with the unit vectors e 1 , e 2 , . . . , e N of the N -dimensional search space as a set of directions. One iteration of the algorithm does N line minimizations along the N directions in the set. After each iteration, Powell's method checks if it is beneficial to replace one of the directions in the set by v i = P 0 -P N , where P 0 was the starting point at the current iteration and P N the new point after the N line minimizations. For most problems, this significantly increases the speed of convergence compared to using the original unit vectors. The mechanisms for deciding whether or not to include the new direction v i after each iteration and which direction in the set should be replaced are described in <ref type="bibr" target="#b40">[41]</ref> and <ref type="bibr" target="#b39">[40]</ref>. Note that there is no learning rate; the algorithm simply always goes to the optimum in the next direction. The Powell's method has two open parameters, i.e., the stopping thresholds of the 1-D and of the multi-dimensional optimizations. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. RESULTS</head><p>Several optimization experiments, both with the real snake robot and in simulation, have been done using two fixed frequencies, ν = 0.4 Hz and ν = 1.0 Hz. The frequency has not been included in the optimized parameters as the systematic tests showed a direct dependence of the speed on the frequency <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b41">[42]</ref>. The optimization has been done with the real robot for crawling on a horizontal plane and for swimming, and with the simulator for crawling on a horizontal plane and on a slope (ascending and descending). All the experiments with the real robot have been repeated five times. Note that to keep them tractable, all the systematic tests have been done with a fixed value of α 1 = 1.0 (and thus, in a 2-D space, for a given frequency), while the optimization experiments are carried in a 3-D space (A, Φ, and α 1 ). The comparison of the optimization with the systematic tests permits a validation of the optimization algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Optimization of Crawling (Real Robot)</head><p>The parameters A, Φ ≡ N ∆φ, and α 1 have been optimized at fixed frequencies of ν = 0.4 Hz and ν = 1.0 Hz, on a horizontal linoleum experimental surface. The speed function was evaluated automatically, using the video tracking system, by running the robot for a fixed period of 10 s with the parameters to be evaluated, and then, measuring its distance from the initial position. Whenever the robot left the experimental surface (i.e., when it was not anymore visible by the tracking camera), the measure was automatically stopped, and then, restarted from the beginning after a manual repositioning of the robot. The optimization has been run five times, starting from a point at the center of the parameter space (A = 30 • , Φ = 0.75, and α 1 = 0.5). For comparison, systematic tests have been done for the same frequencies, with a fixed value of α 1 = 1.0, amplitudes between 10 • and 60 • (with a step of 10 • ), and a total phase lag between 0.25 and 1.50 (with a step of 0.25).</p><p>The results are plotted in Fig. <ref type="figure">8</ref>. For ν = 0.4 Hz, the five different optimization runs converged to two slightly different optima: the average parameter values are A = 52.3 • , Φ = 0.87, and α 1 = 0.70, with an average speed of 0.178 m/s (0.231 BL/s) for the first optimum, and A = 52.3 • , Φ = 1.05, and α 1 = 0.50, with an average speed of 0.169 m/s (0.220 BL/s) for the second optimum. The maximal speed obtained during systematic tests was 0.201 m/s (0.261 BL/s). The reason for the slightly lower quality of the optima found by Powell's algorithm (and for the fact that different optima were found) is likely due to variations in the estimation of the speed and to our relatively large tolerance parameters of Powell's algorithm, which stops it a bit prematurely in this case. In practice, this is not a problem since the obtained speeds are reasonable. For ν = 1.0 Hz, the algorithm converged to a single optimal result having average parameter values of A = 52.8 • , Φ = 1.24, and α 1 = 0.81, and an average obtained speed of 0.296 m/s (0.384 BL/s). This is better than the maximal speed obtained during systematic tests, which was 0.278 m/s (0.361 BL/s). There were always two iterations of the algorithm, with an average of 32.2 evaluations at ν = 0.4 Hz and of 29.2 evaluations at ν = 1.0 Hz. Fig. <ref type="figure" target="#fig_5">7</ref> shows snapshots of the optimal crawling gait at ν = 1.0 Hz.</p><p>The obtained gaits have a high amplitude for both frequencies. The other parameters depend on the frequency, which is in agreement with the results obtained during systematic tests; the wavelength is shorter (i.e., Φ ≡ N ∆φ is larger) for ν = 1.0 Hz than that for ν = 0.4 Hz, and α 1 increases with the frequency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Optimization of Swimming (Real Robot)</head><p>The parameters A, Φ, and α 1 have been optimized at fixed frequencies of ν = 0.4 Hz and ν = 1.0 Hz, in an aquarium measuring 2.5 m × 0.8 m. The speed function was evaluated automatically, using the video tracking system, by running the robot with the parameters to be evaluated, and then, measuring its distance from the point reached after an acceleration phase of 1.50 s. For each measure, the robot was placed at the beginning of the aquarium and stopped when it reached the position threshold (15 cm before the end of the aquarium), or a maximum run time of 10 s (whichever came first). As for crawling, the optimization has been run five times, with the same starting point. Systematic tests have been done for the same frequencies <ref type="bibr" target="#b2">[3]</ref>, with the same parameter range than for crawling.</p><p>The results are plotted in Fig. <ref type="figure" target="#fig_7">10</ref>. For ν = 0.4 Hz, the algorithm converged to several distinct optima (having similar amplitudes but different values of Φ and α 1 ) with similar resulting speeds and an average of 0.132 m/s (0.171 BL/s). The parameter values for the best result are A = 42.0 • , Φ = 0.45, and α 1 = 0.50, with a resulting speed of 0.136 m/s (0.177 BL/s). The maximal speed obtained during systematic tests was 0.147 m/s (0.191 BL/s). For ν = 1.0 Hz, the algorithm found four optimal results, all having the same amplitude (A = 52.9 • ), but with different values of Φ and α 1 . The resulting average speed is 0.220 m/s (0.286 BL/s). The best result has Φ = 1.05 and α 1 = 0.82, and the obtained speed is 0.249 m/s (0.323 BL/s). The average speed obtained with the optimization is, therefore, very similar to the one found during systematic tests, which was 0.222 m/s (0.288 BL/s). There was always only one iteration of the algorithm, with an average of 14.4 evaluations at ν = 0.4 Hz and of 10.4 evaluations at ν = 1.0 Hz. Fig. <ref type="figure">9</ref> shows snapshots of the optimal swimming gait.</p><p>The parameters of the obtained optimal gaits clearly depend on the frequency. As for crawling, the wavelength is shorter when the frequency is higher; the amplitude increases with the frequency, and there is only a slight change of α 1 . The fact that all optimal values of α 1 are smaller than 1.0 is in accordance with the anguilliform swimming with increasing amplitude observed in animals <ref type="bibr" target="#b42">[43]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Optimization of Simulated Crawling</head><p>We reproduce here in simulation the optimization of crawling done with the real robot. The use of a simulation allows us to test the optimization in environments that are difficult to realize (see Section VII-D). The parameters A, Φ, and α 1 have been optimized at fixed frequencies of ν = 0.4 Hz and ν = 1.0 Hz in an environment with friction coefficients µ ⊥ = 1.0 and µ = 0.05. For each evaluation, the simulator was started with the robot in the initial position, and its average speed measured over 20 s after a stabilization time of 10 s. The starting point was at the center of the parameter space (A = 30 • , Φ = 0.75 and α 1 = 0.5). Systematic tests have been done for the same frequencies, with a fixed value of α 1 = 1.0, amplitudes between 10 • , and 60 • (with a step of 10 • ), and a total phase lag between 0.25 and 1.50 (with a step of 0.25).</p><p>The results are plotted in Fig. <ref type="figure" target="#fig_0">11</ref>. For ν = 0.4 Hz, the algorithm converged to an optimum with A = 37.4 • , Φ = 0.45, and α 1 = 0.82, with a speed of 0.207 m/s (0.269 BL/s). The maximal speed obtained during systematic tests was slightly higher, 0.222 m/s (0.288 BL/s). For ν = 1.0 Hz, the algorithm found optimal parameter values of A = 41.5 • , Φ = 0.56, and α 1 = 0.45, and a resulting speed of 0.401 m/s (0.521 BL/s), slightly lower than the maximal one found with systematic tests, which was 0.415 m/s (0.539 BL/s). There was always only one iteration of the algorithm, with 9 evaluations at ν = 0.4 Hz and 14 evaluations at ν = 1.0 Hz. The amplitude and wavelength of the optimum are similar for the two frequencies, and only the α 1 parameter decreases with the frequency. This is a clear difference as compared to the results obtained with the real robot: the obtained maximal speeds are higher than the real ones, and the position of the optima in the systematical tests is clearly different. This mostly owes to the used friction model, which is too simplified and needs to be improved in the future to better model the passive wheels' dynamics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Optimization of Simulated Crawling on a Slope</head><p>The movement of a snake on a slope has different parameters than on a flat ground <ref type="bibr" target="#b43">[44]</ref>, and it is clearly expected that this will also be the case for a snake robot.</p><p>The parameters A, Φ, and α 1 have been optimized in the same way of the simulated crawling, using an environment in which the ground was rotated of a given angle θ. Systematic tests have also been done with the same parameter range.</p><p>The results for θ = 15 • (where a positive angle means that the robot climbs on the slope) are plotted in Fig. <ref type="figure" target="#fig_1">13</ref>. For ν = 0.4 Hz, the algorithm converged to an optimum with A = 57.4 • , Φ = 0.69, and α 1 = 0.70, with a speed of 0.054 m/s (0.070 BL/s), which is very similar to the maximal speed obtained with systematic tests, 0.055 m/s (0.071 BL/s). For ν = 1.0 Hz, the algorithm found optimal parameter values of A = 51.5 • , Φ = 0.68, and α 1 = 0.78, and a resulting speed of 0.117 m/s (0.152 BL/s), slightly higher than the maximal one found during systematic tests, 0.109 m/s (0.142 BL/s). There always were two iterations of the algorithm, with a total of 17 evaluations at ν = 0.4 Hz and 22 evaluations at ν = 1.0 Hz. Fig. <ref type="figure" target="#fig_0">12</ref> shows snapshots of the resulting optimal gait.</p><p>The parameters of the found optima are similar for both frequencies (with a slightly higher amplitude at ν = 0.4 Hz). The algorithm clearly found waves with higher amplitudes than for crawling on a plane, as it is the case for real snakes <ref type="bibr" target="#b43">[44]</ref>. The explanation is simple: having higher oscillation amplitudes means  The obtained speeds are clearly physically unrealistic and are caused by the simplicity of the physical model that does not include velocity-dependent friction terms. The optimal gaits are very similar for both the frequencies, and can be summarized as having the robot as straight as possible and letting it freely roll down the slope. This strategy is very different from the one found for climbing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. DISCUSSION AND CONCLUSION</head><p>This paper has shown that the fastest gaits are considerably different from one medium to the other. For instance, crawling up a slope requires undulations with large amplitudes, while crawling down a slope requires very small amplitudes. And, slow swimming requires shorter phase lags than slow crawling. This dependence on the environment is in agreement with observations made by others <ref type="bibr" target="#b43">[44]</ref>. In agreement with our previous studies <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b41">[42]</ref>, frequency is the parameter whose influence on the speed of locomotion is the simplest: with all other parameters fixed (i.e., amplitude, phase lag, and amplitude gain), increasing the frequency generally leads to an increase of speed (in the range tested). This makes the frequency a useful control parameter. But, one should notice that the optimal gaits change with the frequency. It is, therefore, important to adapt all parameters when the frequency is changed. Another important observation is that the optima are peaked. For a given medium and a given frequency, the speed of locomotion drops rapidly when the parameters are changed as compared to their optimal values. In other words, two seemingly very similar gaits might result in dramatically different speeds of locomotion.</p><p>All these observations confirm the importance to finely adapt gaits to the environment. There is not a single gait that performs satisfactorily in all conditions, and a robot that would rely on a single gait for various environments would be strongly suboptimal for most conditions. These empirical tests with our robot have, therefore, confirmed the necessity of designing online optimization methods for snake robots. Note that in this paper, we essentially explored variations of a single type of gait (serpentine crawling). Real snakes exhibit a larger variety of gaits such as side winding, concertina, and others <ref type="bibr" target="#b43">[44]</ref>, which our simple planar robot cannot perform.</p><p>Any method for doing online optimization requires to fulfill at least two characteristics: 1) to allow parameters to be changed online, i.e., to have a control mechanism that smoothly adapts to parameter changes and does not need to be reset between evaluations and 2) to be fast in order to avoid excessive wear and tear, and prohibitive testing durations. The results presented here show that our control mechanism satisfactorily fulfills the two requirements. The CPG is a useful building block that is well suited for optimizing the locomotion and modulating it (e.g., adapting the speed and the direction, see <ref type="bibr" target="#b2">[3]</ref>), and for optimizing it. The Powell's method proved to be a useful algorithm for rapidly finding the optimal parameters of the CPG in a given environment. It is significantly faster than doing extensive systematic evaluations of the robot speed on the parameter space. For instance, a systematic exploration of the 3-D parameter space considered during our experiments, with six steps for each parameter, would require 216 evaluations of the function, whereas the Powell's method can obtain similar results with an order of magnitude less evaluations (between 6 and 37 during the described experiments). In preliminary studies, it has also been found to be one or two orders of magnitude faster than alternative methods such as genetic algorithms <ref type="bibr" target="#b44">[45]</ref>. An analysis of the results shows that there is clearly space for improvements, particulary, the stopping conditions of the 1-D optimization and of the Powell's algorithm itself have to be carefully calibrated, in order to minimize the number of evaluations needed and to avoid stopping the algorithm too early (or too late), as it seems to have been the case during some of the experiments. Compared to related work on learning (e.g., <ref type="bibr" target="#b45">[46]</ref> and <ref type="bibr" target="#b46">[47]</ref>), our approach is very empirical and is fast enough to learn gaits directly on the robot without requiring a simulator or a model. As mentioned in the Introduction, we believe that this empirical approach is the only viable one for many situations, for instance, for complex terrains that cannot be modeled or simulated accurately enough.</p><p>In a previous paper <ref type="bibr" target="#b2">[3]</ref>, we used results from systematic searches to design interface functions to maintain an optimal gait for a given frequency. Frequency is used as the control parameter that monotonously adjusts speed, and the interface functions adjust the other parameters (amplitude and phase lag) by linearly interpolating between the optimal values found with the systematic search. Two interface functions, one for locomotion on a wooden floor and one for locomotion in water, were designed. A human operator could thus easily control the speed (and direction) of locomotion by adjusting the frequency (and the asymmetry of amplitudes), without having to worry about the other control parameters. This is done transparently for the human operator, except for the switch between functions for different environments.</p><p>This paper extends the previous results by allowing to find optimal interface functions for a given environment much faster. There are two interesting outcomes: 1) it is much less tedious to create a database of interface functions for a variety of environments. This database can be used by the human operator to rapidly switch between different locomotion modes (ideally, this decision should be made by the robot itself, as described later) and 2) The optimization is fast enough to be run during operation time for novel environments. For instance, if the robot is brought to a new terrain for a specific mission (e.g., search and rescue), and one notices that locomotion is slow, the operator could rapidly run the optimization process. The optimization takes, in average, 20 evaluations (i.e., less than 4 min), which seems acceptable for finding a good gait. This paper will be extended in several directions in the future. First, the robot will be modified such as to be capable of estimating its speed independently of any external device (e.g., by doing odometry with a passive wheel, using an optical mouse sensor, integrating signals from accelerometers, and/or measuring the optical flow of a camera), and of running the optimization algorithm on-board, instead of on the off-board PC. The current setup with an external camera and PC was used because it was readily available. Second, it would be useful to find ways to allow the robot to discover its environment by itself, for instance, to distinguish between water and ground, to estimate the slope, the friction of the surface, etc. This could be done with the addition of sensors and/or by measuring the response to predefined movements. With that information available, we could build some simple heuristics to reuse previously learned gaits: e.g., to query a database with previously optimized gaits for parameters that match the estimated terrain and to only run the optimization algorithm if the current environment seems too different from previous ones or if the speed seems suboptimal as</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Robot with passive wheels and the tracking LED mounted on it.</figDesc><graphic coords="1,305.86,167.33,241.10,122.59" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Internal view of a part of an actuated element. The output axis, normally inserted at the output of the gearbox, is not shown.</figDesc><graphic coords="3,322.17,68.30,208.50,166.27" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Video tracking system used for crawling. The setup for swimming is very similar.</figDesc><graphic coords="4,44.65,68.26,246.00,222.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Structure of the CPG used in the robot.</figDesc><graphic coords="4,317.50,68.27,226.30,173.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Effect of changing the parameters of the CPG. Top: setpoint signals; Bottom: control parameters. Initial parameters are A L = A R = 1, ν = 1 Hz, Φ ≡ N ∆φ = 1, and α 1 = 1.0.At t = 4 s, ν is temporarily changed to 2.0 Hz; at t = 8 s, A L and A R are temporarily changed to 0.5 and 1.5, respectively, which lead to a negative offset of the setpoint oscillations. At t = 12 s, α 1 is changed to 0.2, which leads to oscillations of increasing amplitude from head to tail. At t = 16 s, Φ is set to -1.0, which leads to a reversal of the direction of the travelling wave.</figDesc><graphic coords="5,303.45,68.26,246.00,184.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Robot crawling at A = 53 • , Φ = 1.24, ν = 1.0 Hz, and α 1 = 0.90. The time step between the snapshots is 0.12 s. Videos of the robot are available at http://birg.epfl.ch/amphibot.</figDesc><graphic coords="7,51.35,68.28,487.10,119.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .Fig. 9 .</head><label>89</label><figDesc>Fig. 8. Results of the optimization for crawling. The data from the systematic tests with α 1 = 1.0 are plotted in the background, and the evaluations done by five runs of the optimization algorithm are represented by the small dots (the α 1 dimension is not visible in the plot). All the speeds are in meter per second. The speed indicated in the caption inside the plot is the highest speed obtained with optimization. (a) 0.4 Hz. (b) 1.0 Hz.</figDesc><graphic coords="8,84.00,68.26,430.30,178.55" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Results of the optimization for swimming at ν = 0.4 Hz and ν = 1.0 Hz. The speed indicated in the caption is the highest speed obtained during optimization. (a) 0.4 Hz. (b) 1.0 Hz.</figDesc><graphic coords="9,79.90,68.29,430.00,178.29" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 12 .Fig. 13 .</head><label>1213</label><figDesc>Fig. 12. Simulated robot crawling on a slope (θ = 15 • ) at A = 51 • , Φ = 0.68, ν = 1.0 Hz, and α 1 = 0.78. The time step between the snapshots is 0.12 s.</figDesc><graphic coords="10,55.56,68.28,487.10,94.06" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Results of the optimization for simulated crawling on a slope (θ = -15 • ). (a) 0.4 Hz. (b) 1.0 Hz.</figDesc><graphic coords="10,83.75,413.76,430.80,180.24" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>During extensive swimming tests, air is insufflated inside the robot by a small pump through a highly flexible silicone tube for maintaining a little overpressure inside the elements and avoiding leakage.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank A. Guignard and A. Badertscher for the technical support in the design and construction of the robot. They also thank F. Mondada and the Autonomous Systems Laboratory (ASL) at the EPFL, for their PD motor controller.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>compared to the previous situation. Finally, it would be interesting to apply the online optimization method to deal with real (or simulated) mechanical damage, e.g., to find new gaits that allow forward motion despite some mechanical failures (e.g., one or several modules that are blocked). The optimization algorithm could be started after an unexpected drop in forward speed, and should, in principle, lead to modified gaits adapted to the new situation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head><p>The limit cycle of the CPG is determined by the time evolution of the amplitude and phase variables. We here show the particular case of two oscillators coupled bidirectionally with coupling weights w 12 = w 21 = w and phase biases</p><p>It is easy to demonstrate that the state variables r 1 and r 2 asymptotically converge to R 1 and R 2 , respectively, from any initial condition. Indeed, the variables [r 1 , ṙ1 ] have [R 1 , 0] as single stable fixed point. Since we are interested in determining whether these two oscillators will synchronize (i.e., evolve with a constant phase difference), and, if yes, with which phase difference, it is useful to introduce the phase difference ψ = θ 2θ 1 . The time evolution of the phase difference is determined by</p><p>If the oscillators synchronize, they will do so at the fixed points ψ ∞ (i.e., points where f (ψ ∞ ) = 0)</p><p>In our case, we have ν 1 = ν 2 = ν, and this equation has a single solution ψ ∞ = ∆φ. This solution is asymptotically stable because ∂f (ψ ∞ )/∂ψ &lt; 0. The outputs of the oscillators, therefore, asymptotically converge to oscillations that are phase locked with a phase difference of ∆φ:</p><p>, where φ 0 is a constant that depends on initial conditions. Since the complete CPG is made of multiple bidirectionally coupled oscillators and that all parameters φ ij are consistent (i.e., the sums of the parameters φ ij are equal to a multiple of 2π on any closed path between oscillators), the same reasoning can be recursively applied to demonstrate convergence of the complete CPG. Note that more in-depth analysis of networks of phase oscillators can be found in <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b26">[27]</ref>- <ref type="bibr" target="#b29">[30]</ref>, and <ref type="bibr" target="#b31">[32]</ref>. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Neural basis for rhythmic behaviour in animals</title>
		<author>
			<persName><forename type="first">F</forename><surname>Delcomyn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">210</biblScope>
			<biblScope unit="page" from="492" to="498" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Neural control of vertebrate locomotion-Central mechanisms and reflex interaction with special reference to the cat</title>
		<author>
			<persName><forename type="first">S</forename><surname>Grillner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Feedback and Motor Control in Invertebrates and Vertebrates</title>
		<editor>
			<persName><forename type="first">W</forename><forename type="middle">J P</forename><surname>Barnes</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Gladden</surname></persName>
		</editor>
		<meeting><address><addrLine>Sydney, Australia</addrLine></address></meeting>
		<imprint>
			<publisher>Croom Helm</publisher>
			<date type="published" when="1985">1985</date>
			<biblScope unit="page" from="35" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Online trajectory generation in an amphibious snake robot using a lamprey-like central pattern generator model</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Crespi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robot. Autom. (ICRA 2007)</title>
		<meeting>IEEE Int. Conf. Robot. Autom. (ICRA 2007)</meeting>
		<imprint>
			<biblScope unit="page" from="262" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">BoxyBot: A swimming and crawling fish robot controlled by a central pattern generator</title>
		<author>
			<persName><forename type="first">D</forename><surname>Lachat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st IEEE/RAS-EMBS Int. Conf. Biomed. Robot. Biomechatron</title>
		<meeting>1st IEEE/RAS-EMBS Int. Conf. Biomed. Robot. Biomechatron</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="643" to="648" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">From swimming to walking with a salamander robot driven by a spinal cord model</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ryczko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Cabelguen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">315</biblScope>
			<biblScope unit="issue">5817</biblScope>
			<biblScope unit="page" from="1416" to="1420" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Design, implementation, and experiments with a thirty-degreeof-freedom &apos;hyper-redundant&apos; robot</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Chirikjian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Burdick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th Int. Symp. Robot. Manuf. (ISRAM 1992)</title>
		<meeting><address><addrLine>Santa Fe, NM</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">GMD-SNAKE2: A snake-like robot driven by wheels and a method for motion control</title>
		<author>
			<persName><forename type="first">B</forename><surname>Klaassen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">L</forename><surname>Paap</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1999 IEEE Int. Conf. Robot. Autom. (ICRA 1999)</title>
		<meeting>1999 IEEE Int. Conf. Robot. Autom. (ICRA 1999)</meeting>
		<imprint>
			<biblScope unit="page" from="3014" to="3019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">in Neurotechnology for Biomimetic Robots</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S P</forename><surname>Miller</surname></persName>
		</author>
		<editor>J. Ayers, J. L. Davis, and A. Rudolph</editor>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Bradford/MIT Press</publisher>
			<pubPlace>Cambridge, U.K.</pubPlace>
		</imprint>
	</monogr>
	<note>Snake robots for search and rescue</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Robotic system with active steering capability for internal inspection of urban gas pipelines</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">R</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Ryew</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mechatronics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="713" to="736" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Polychaete-like undulatory robotic locomotion</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Tsakiris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sfakiotakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Menciassi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>La</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Spina</surname></persName>
		</author>
		<author>
			<persName><surname>Dario</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2005 IEEE Int. Conf. Robot. Autom. (ICRA 2005)</title>
		<meeting>2005 IEEE Int. Conf. Robot. Autom. (ICRA 2005)</meeting>
		<imprint>
			<biblScope unit="page" from="3029" to="3034" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A geometric approach to anguilliform locomotion: Simulation and experiments with an underwater eel-robot</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Mcisaac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Ostrowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1999 IEEE Int. Conf. Robot. Autom. (ICRA 1999)</title>
		<meeting>1999 IEEE Int. Conf. Robot. Autom. (ICRA 1999)</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="2843" to="2848" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">A lamprey-based undulatory vehicle</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wilbur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Vorus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">N</forename><surname>Currie</surname></persName>
		</author>
		<editor>Neurotechnology for Biomimetic Robots, J. Ayers, J. L. Davis, and A. Rudolph</editor>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Bradford/MIT Press</publisher>
			<pubPlace>Cambridge, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Development of amphibious snake-like robot ACM-R5</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yamada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chigisaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Takita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ogami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hirose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">36th Int. Symp. Robot. (ISR 2005)</title>
		<meeting><address><addrLine>Tokyo, Japan</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">AmphiBot I: An amphibious snake-like robot</title>
		<author>
			<persName><forename type="first">A</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Badertscher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Guignard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Robot. Auton. Syst</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="175" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Gait kinematics for a serpentine robot</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ostrowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Burdick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1996 IEEE Int. Conf. Robot. Autom. (ICRA 1996)</title>
		<meeting>1996 IEEE Int. Conf. Robot. Autom. (ICRA 1996)</meeting>
		<imprint>
			<biblScope unit="page" from="1294" to="1299" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Control of redundant 3D snake robot based on kinematic model</title>
		<author>
			<persName><forename type="first">F</forename><surname>Matsuno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Suenaga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2003 IEEE Int. Conf. Robot. Autom. (ICRA 2003)</title>
		<meeting>2003 IEEE Int. Conf. Robot. Autom. (ICRA 2003)</meeting>
		<imprint>
			<biblScope unit="page" from="2061" to="2066" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Control and analysis of the gait of snake robots</title>
		<author>
			<persName><forename type="first">P</forename><surname>Prautsch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mita</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1999 IEEE Int. Conf. Control Appl</title>
		<meeting>1999 IEEE Int. Conf. Control Appl</meeting>
		<imprint>
			<date type="published" when="1999-08">Aug., 1999</date>
			<biblScope unit="page" from="502" to="507" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Locomotion control of a snake robot with constraint force attenuation</title>
		<author>
			<persName><forename type="first">H</forename><surname>Date</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hoshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sampei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shigeki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Am</title>
		<meeting>Am</meeting>
		<imprint>
			<date type="published" when="2001-06">Jun. 2001</date>
			<biblScope unit="page" from="113" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fast and efficient locomotion of a snake robot based on self-excitation principle</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ute</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ono</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 7th Int. Workshop Adv. Motion Control</title>
		<meeting>7th Int. Workshop Adv. Motion Control</meeting>
		<imprint>
			<date type="published" when="2002-07">Jul. 2002</date>
			<biblScope unit="page" from="532" to="539" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Motion planning for anguilliform locomotion</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mcisaac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ostrowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Robot. Autom</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="637" to="652" />
			<date type="published" when="2003-08">Aug. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Serpentine locomotion of a snake-like robot controlled by cyclic inhibitory CPG model</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE/RSJ Int. Conf. Intell. Robots Syst. (IROS 2005)</title>
		<meeting>IEEE/RSJ Int. Conf. Intell. Robots Syst. (IROS 2005)</meeting>
		<imprint>
			<biblScope unit="page" from="96" to="101" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Biomimetic centering for undulatory robots</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Tsakiris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sfakiotakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vlakidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st IEEE/RAS-EMBS Int. Conf. Biomed. Robot. Biomechatron</title>
		<meeting>1st IEEE/RAS-EMBS Int. Conf. Biomed. Robot. Biomechatron</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="744" to="749" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Distributed central pattern generator control for a serpentine robot</title>
		<author>
			<persName><forename type="first">J</forename><surname>Conradt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Varshavskaya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. Conf. Artif. Neural Netw. (ICANN</title>
		<imprint>
			<date type="published" when="2003">2003. 2003</date>
			<pubPlace>Istanbul, Turkey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A model of the neuro-musculo-skeletal system for anticipatory adjustment of human locomotion during obstacle avoidance</title>
		<author>
			<persName><forename type="first">G</forename><surname>Taga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biol. Cybern</title>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="9" to="17" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The nature of coupling between segmented oscillations and the lamprey spinal generator for locomotion: A mathematical model</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Holmes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Math. Biol</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="345" to="369" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Neural networks that co-ordinate locomotion and body orientation in lamprey</title>
		<author>
			<persName><forename type="first">S</forename><surname>Grillner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Degliana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ö</forename><surname>Ekeberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Marina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lansner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">N</forename><surname>Orlovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wallén</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trends Neurosci</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="270" to="279" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Forcing of coupled nonlinear oscillators: Studies of intersegmental coordination in the lamprey locomotor central pattern generator</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Sigvardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kopell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">B</forename><surname>Ermentrout</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Rempler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Neurophysiol</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="862" to="871" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">On chains of oscillators forced at one end</title>
		<author>
			<persName><forename type="first">N</forename><surname>Kopell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">B</forename><surname>Ermentrout</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1397" to="1417" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Mathematical models for the swimming pattern of a lamprey-I. Analysis of collective oscillators with timedelayed interaction and multiple coupling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Nishii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Uno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Suzuki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biol. Cybern</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page" from="1" to="9" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Effects of local oscillator frequency on intersegmental coordination in the lamprey locomotor CPG: Theory and experiment</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Sigvardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Neurophysiol</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="4094" to="4103" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Biological rhythms and the behavior of populations of coupled oscillators</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Winfree</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Theoretical Biol</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="15" to="42" />
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Chemical Oscillations, Waves, and Turbulence</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kuramoto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Winfree</surname></persName>
		</author>
		<title level="m">The Geometry of Biological Time</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Collective behavior of coupled phase oscillators</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kuramoto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Handbook of Brain Theory and Neural Networks, M. A. Arbib</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="223" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Discrete time kuramoto models with delays</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">I</forename><surname>Triplett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Morgansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Control and Information Sciences</title>
		<imprint>
			<biblScope unit="volume">331</biblScope>
			<biblScope unit="page" from="9" to="23" />
			<date type="published" when="2006">2006</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Stabilization of planar collective motion with limited communication</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sepulchre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Paley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">E</forename><surname>Leonard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Control</title>
		<imprint/>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Evolving swimming controllers for a simulated lamprey with inspiration from neurobiology</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hallam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Willshaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adaptive Behav</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="151" to="172" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Evolution and development of a central pattern generator for the swimming of a lamprey</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kodjabachian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Life</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="247" to="269" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Webots: Professional mobile robot simulation</title>
		<author>
			<persName><forename type="first">O</forename><surname>Michel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Adv. Robot. Syst</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="39" to="42" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes in C: The Art of Scientific Computing</title>
		<meeting><address><addrLine>Cambridge, U.K.</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Algorithms for Minimization Without Derivatives</title>
		<author>
			<persName><forename type="first">R</forename><surname>Brent</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973">1973</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">AmphiBot II: An amphibious snake robot that crawls and swims using a central pattern generator</title>
		<author>
			<persName><forename type="first">A</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">presented at the 9th Int. Conf. Climbing Walking Robots (CLAWAR 2006)</title>
		<meeting><address><addrLine>Brussels, Belgium</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Undulatory locomotion in elongate aquatic vertebrates: Anguilliform swimming since Sir James Gray</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">B</forename><surname>Gillis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Am. Zool</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="656" to="665" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Biologically Inspired Robots. Snake-Like Locomotors and manipulators</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hirose</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>London, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Online optimization of modular robot locomotion</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Ijspeert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Mechatron. Autom. (ICMA 2005)</title>
		<meeting>IEEE Int. Conf. Mechatron. Autom. (ICMA 2005)</meeting>
		<imprint>
			<biblScope unit="page" from="248" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Limbless locomotion: Learning to crawl with a snake robot</title>
		<author>
			<persName><forename type="first">K</forename><surname>Dowling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997-12">Dec. 1997</date>
			<pubPlace>Pittsburgh, PA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon Univ.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. thesis Robotics Inst</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Intelligent gait synthesizer for serpentine robots</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Kulali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gevher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Erkmen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Erkmen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2002 IEEE Int. Conf. Robot. Autom. (ICRA 2002)</title>
		<meeting>2002 IEEE Int. Conf. Robot. Autom. (ICRA 2002)</meeting>
		<imprint>
			<biblScope unit="page" from="1513" to="1518" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
