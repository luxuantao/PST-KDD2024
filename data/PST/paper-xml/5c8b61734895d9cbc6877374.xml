<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Meta-Learning Approach to One-Step Active-Learning</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Gabriella</forename><surname>Contardo</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">UMR 7606</orgName>
								<orgName type="institution" key="instit1">Sorbonne Universites</orgName>
								<orgName type="institution" key="instit2">UPMC Univ Paris 06</orgName>
								<address>
									<postCode>LIP6, F-75005</postCode>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ludovic</forename><surname>Denoyer</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">UMR 7606</orgName>
								<orgName type="institution" key="instit1">Sorbonne Universites</orgName>
								<orgName type="institution" key="instit2">UPMC Univ Paris 06</orgName>
								<address>
									<postCode>LIP6, F-75005</postCode>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Thierry</forename><surname>Artieres</surname></persName>
							<email>thierry.artiere@centrale-marseille.fr</email>
							<affiliation key="aff1">
								<orgName type="institution">Ecole Centrale Marseille-Laboratoire d&apos;Informatique Fondamentale (Aix-Marseille Univ.)</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Meta-Learning Approach to One-Step Active-Learning</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We consider the problem of learning when obtaining the training labels is costly, which is usually tackled in the literature using active-learning techniques. These approaches provide strategies to choose the examples to label before or during training. These strategies are usually based on heuristics or even theoretical measures, but are not learned as they are directly used during training. We design a model which aims at learning active-learning strategies using a meta-learning setting. More specifically, we consider a pool-based setting, where the system observes all the examples of the dataset of a problem and has to choose the subset of examples to label in a single shot. Experiments show encouraging results.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Machine learning, and more specifically deep learning techniques, are now recognized for their ability to obtain high performance on a large variety of problems, from image recognition to natural language processing. However, most of the tasks tackled for now are supervised and need a critical amount of labeled data to be learned properly. Depending on the final application, these labeled examples are often expensive to get (e.g manual annotation), and not always available in large quantity.Learning using a small amount of labeled data is thus a key issue in the machine learning domain.</p><p>Humans are able to learn and generalize well from only a few labeled examples (e.g children can recognize rapidly any depiction of a car or some animalsdrawing, photo, real life-after having been shown only a few pictures with explicit "supervision"). This problem has been studied in the literature as oneshot (or few-shots) learning, where the goal is to predict based on very few supervised examples (e.g one per category). This setting was first proposed in <ref type="bibr" target="#b15">[16]</ref>, and it knows a renewal of interest under slightly different flavors. Recently, several methods have been presented, relying on different techniques such as matching networks and bi-LSTM ( <ref type="bibr" target="#b13">[14]</ref>) or memory-networks ( <ref type="bibr" target="#b9">[10]</ref>) which are learned using a meta-learning approach: they aim at learning from a large set of learning problems a strategy that will enable the algorithm to efficiently and rapidly use the (small) supervision when facing a new problem (see Section 2 for arXiv:1706.08334v2 [cs.LG] 17 Jul 2017 a description of the related work). In this setting, one consider that the model has as an input a set of already labeled data, usually k examples chosen randomly per category in the problem.</p><p>In parallel, the field of active learning focuses on approaches that allow a model to ask an oracle for the labels of some training examples, to improve its learning. It is thus based on a different assumption where the model has the ability to ask labels for a set of unsupervised data. In this case, different settings can be defined, regarding the nature of the unsupervised examples set (a finite dataset completely observable, i.e pool-based, or a stream of inputs), and the nature of the acquisition process (single step or sequential). Some approaches also benefits from an initial small labeled dataset. The decision process for selecting the examples to label being made during training, all methods from state of the art in this field do not learn this decision process, but instead design specific heuristics or criterion.</p><p>We propose to study a problem at the crossroad of one-shot learning and active learning. We present a method that not only learns to classify examples using small supervision but additionally learns a label acquisition strategy which is used to acquire the training set. We study the case of pool-based setting: the model works on a completely observable set of examples. This is novel with regard to previous approach in one-shot learning which consider a stream of examples to classify one after the other. The choice of the subset of examples to label is made in a single step via the acquisition strategy.</p><p>In Section 3, we define the problem and the specific training strategy inspired from recent one-shot learning methods. We then describe our approach in Section 4, which is based on representation learning and the use of bi-directional recurrent networks. Section 5 provides experimental results on artificial and real datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related work</head><p>The active-learning problem has been studied under various flavors, reviewed in a survey in <ref type="bibr" target="#b10">[11]</ref>. Generically speaking, methods are usually composed of two components: a selector, which decides which examples should be labeled, and a predictor. Most of the approaches focus on sequential labeling strategies, where the system can send some examples to be labeled to the oracle, eventually update its prediction model, and choose new examples to be labeled depending on the answers of the oracle and/or the new predictor. The data examples can be presented to the selector either as a complete set (e.g pool-based ) or in a sequential fashion, where the selector has to decide at each step if the example should be labeled or not. Several methods for single-instance selector in pool-based setting have been proposed such as <ref type="bibr" target="#b17">[18]</ref>, which uses Fisher information matrices, or <ref type="bibr" target="#b2">[3]</ref> that relies on a multi-armed bandit approach. Batch-mode (i.e each step can ask for several labels) have been studied for instance by <ref type="bibr" target="#b6">[7]</ref>, using a definition of the performance based on high likelihood of labeled examples and low uncertainty of the unlabeled ones. Stream-based setting have been tackled through measures of "informativeness" (i.e favor labeling of more informative examples <ref type="bibr" target="#b3">[4]</ref>), by defining region of uncertainty (e.g <ref type="bibr" target="#b1">[2]</ref>), using "committees" for the decision (e.g <ref type="bibr" target="#b7">[8]</ref> with an ensemble method focusing on favoring diversity in committee members). Other types of approaches design decisions by studying the expected model change ( <ref type="bibr" target="#b11">[12]</ref>) or the expected error reduction ( <ref type="bibr" target="#b8">[9]</ref>). Static methods (i.e where the subset of examples to label is decided in a single shot) have been less studied as it can not benefit from the feedback of the oracle or any estimation w.r.t. the prediction, the quality of the current predictor or uncertainty measure. However such methods can prove useful when asking several times in a row an oracle is not possible, or when interactions between the learner and the "oracle" is limited, e.g. as cited by <ref type="bibr" target="#b4">[5]</ref> when using Amazon Mechanical Turks. In this paper, the authors define the problem as selective labeling, in a semi-supervised context. They propose to select a subset of examples to label by minimizing the upper-bound of a deterministic out-of-sample error bound for Laplacian regularized Least Squares. <ref type="bibr" target="#b5">[6]</ref> present an approach for single batch active learning for specific graphs-based tasks, while <ref type="bibr" target="#b16">[17]</ref> propose a method based on transductive experimental design, however they design a sequential optimization algorithm to overcome the combinatorial problem.</p><p>In parallel, the problem of one-shot learning (first described in <ref type="bibr" target="#b15">[16]</ref>) knows a renewal of interest. Notably, recent methods have proposed to use a metalearning approach, by relying on additionnal data of similar nature (e.g images of different classes). The goal is to design systems that learns to predict on novel problems based only on few labeled examples. For example, <ref type="bibr" target="#b9">[10]</ref> propose to use the recent memory-augmented neural network, to integrate and store the new examples. Similarly, <ref type="bibr" target="#b13">[14]</ref> propose to rely on external memories for neural networks, bidirectional LSTM and attention LSTM. One key aspect of their approach is their aim at representing an instance w.r.t. the current memory (i.e observed labeled examples). Note that these approaches design a "one-shot learning problem" (e.g training point/inference point) as a sequential problem, where one instance arrives after the other. Additionally, the system can receive some afterward feedback on the observed instances. Tackling active-learning through meta-learning has been little studied for now. The work of <ref type="bibr" target="#b14">[15]</ref> propose an extension of the model of <ref type="bibr" target="#b9">[10]</ref>, where the true label of the observed instance is withheld unless the system ask for it. The model can either classify or ask for the label. The decision is learned through reinforcement learning, where the system gets a high reward for accurate prediction and is penalized when acquiring label or giving false prediction. They design the action-value function to learn as a LSTM. This suffers from a similar drawback as one-shot learning methods, as it does not consider the dataset as a whole but instead follow a "myopic" process. The recent work of <ref type="bibr" target="#b0">[1]</ref> is the most closely related to ours, as they propose a similar approach for this novel task of meta-learning an active labeling strategy in a pool-based setting. However, they present a model that sequentially select an item to label in several step, while we propose a "one-step" static selection that does not rely on any oracle feedback.</p><p>3 Meta-active learning problem and setting</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Preliminary</head><p>The generic goal of an active learning system is to provide the best prediction on a task, using the fewer amount of labels as possible. The system has to choose the most relevant examples to label in order to learn accurately. It is usually considered that the model has access to an oracle, which provides the labels of given examples. Active learning usually aims at tackling a single problem, i.e one dataset and one task. We consider in this paper a pool-based setting with a single-step acquisition, which resumes to the generic following schema: (i) the system receives an entire unsupervised set of examples, (ii) it computes the subset of examples to send to the oracle for labeling, (iii) learning is made based on this reduced supervised subset. In such a single step setting, the decision process for choosing the examples to label can not be learned.</p><p>We propose to design a meta-active learning protocol in order to learn the acquisition strategy i.e the way to choose the examples to label, in a meta learning fashion. We follow a similar principle to what has been recently presented for one-shot learning problems, e.g in <ref type="bibr" target="#b9">[10]</ref>. It aims at extending the basic principle of training in machine learning, where a model is trained on data-points from a similar distribution to the data-points observed during inference. For one-shot learning, it resumes as designing data-points as one-shot problems, on dataset of similar nature (e.g all inputs are images). The protocol therefore replicates the final task during training and aims at learning to learn from few examples.</p><p>Let us now describe our meta-active learning protocol while introducing few notations. As explained in Figure <ref type="figure" target="#fig_0">1</ref>, our training stage will consist of many elementary active classification problems built from a large dataset. Each elementary problem is denoted S = (C, S T rain , S Eval ), it is dedicated to the classification of classes in a set C, coming with two sets of examples, the first one being used to infer a prediction model, S T rain , and the second one, S Eval , being used to evaluate the inferred model.</p><p>Starting from a large multiclass dataset B of labeled examples belonging to a large number of categories U T rain , each elementary problem is built as follows:</p><p>-A subset of classes C is sampled uniformly in the set of all the categories in U T rain . -Then, a first set of N examples from classes in C is sampled from B to build S T rain = {(x 1 , y 1 ), ...., (x N , y N )}, where x i is the i-th input data-point and y i ∈ C stands for its class. -At last, a second set of M new data points is sampled from B to build S Eval = {(x N +1 , y N +1 ), ...., (x N +M , y N +M )} where S T rain ∩ S Eval = ∅.</p><p>In the learning stage, the system is presented a series of elementary training problems S. For each problem the training set S T rain is provided without any labels and the system is allowed to ask for the label of a limited subset D of samples in S T rain according to an acquisition strategy. The system then infers a predictive model d from D that is evaluated over S Eval . Learning aims at learning the various components of the system (acquisition strategy, infering a predictive model). Each pair (S T rain , S Eval ) serves as a supervised example for the meta-learning algorithm of the system.</p><p>In the test stage the system is evaluated on elementary testing problems to evaluate the quality of our meta-learning approach. The testing problems are fully different from training problems since there are based on a new subset of categories U T est that is disjoint from the categories used to build the training sets U T rain .</p><p>An illustration of this setting is provided in Figure <ref type="figure" target="#fig_0">1</ref> with image classification. All elementary classification problems are binary classification (i.e |C|=2). The training problems contains categories such as cats, dogs, houses and bicycles, with different classification problems e.g classification between cat and dog, dog and house,etc. The elementary testing problems are drawn from a different set of categories, here elephants, cars, cakes and planes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Problem Definition</head><p>The goal of a meta-active learning system is to learn an active-learning strategy such that, for each problem, coming with a training dataset of unlabeled examples, it can predict the most relevant examples to label and provide a good prediction based on these supervised examples on the "test" part of the problem. We propose a system to tackle such a task as composed of two modules.</p><p>The first component is an active-learning strategy, which controls the selection of examples. This strategy is defined as a probability distribution over the set of training examples of a problem that we note P (α|S train ) where α is a binary vector of size N such that α k = 1 if the strategy asked for label y k and α k = 0 elsewhere. The distribution P (α|S train ) is used to sample which examples are asked to be labeled by the oracle. This yields a subset of labeled examples</p><formula xml:id="formula_0">D α = {x j ∈ S train /α j = 1} ⊂ S train .</formula><p>The second component is a prediction component, which takes as an input an example x to classify in S eval and the supervised training dataset D α , and outputs prediction for this example denoted d(x, D α ). The prediction component does not have access to the examples that have not been targeted by the acquisition policy -i.e only the examples from D α are used.</p><p>We resume the generic learning scheme in Algorithm 1. During training, the process iteratively samples a random problem S in the set of training problems. The acquisition model receives S train (without labels) and predicts which examples to select for labelling by sampling with P (α|S train ). The built labeled set D α is used to output prediction for each example in S Eval using the prediction module d. Its performance is evaluated on S Eval which is used to update the model.The process is similar at testing time to evaluate the whole meta-learning system.</p><p>Since we consider that acquiring labels during the first step has a price, we consider a generic objective function that is a trade-off between the prediction quality on the evaluation set S Eval and the size of the labeled set (|D α |), i.e the labeling cost. The generic objective function resumes to:</p><formula xml:id="formula_1">L = E S∼P (S) [E α∼P (α|S T rain ) [ (xj ,yj )∈S Eval [∆(d(x j , D α ), y j )] + λ|D α |]]<label>(1)</label></formula><p>where E S∼P (S) is the expectation over the distribution of problems which we will empirically approximate by an average over a large set of training problems. E α∼P (α|S T rain ) stands for the expectation over the subset of examples selected according to the acquisition strategy and ∆(d(x j , D α ), y j ) measures the error ∆ between the expected output y j and the model prediction d(x j , D α ) for an evaluation sample x j and a model inferred from D α . Active-learning model predicts the probability P (α|S T rain ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4:</head><p>Sample following the probability to obtain Dα ,the subset of examples to label in S T rain 5:</p><p>Feed d with labeled sub-dataset Dα and evaluate error of d on predictions of all xj ∈ S Eval 6:</p><p>Update both modules accordingly. 7: until stopping criterion 4 Description of the model</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Optimization criterion</head><p>We now detail the optimization criterion based on the generic objective function defined in Equation <ref type="formula" target="#formula_1">1</ref>. As explained in the previous section, the sub-dataset D α of examples chosen for labeling comes from the binary vector α, s.t. an example x j is asked for labeling if α j = 0. This vector α is sampled from the distribution P θ (α|S T rain ), outputted by the acquisition component (whose parameters are noted θ), given the unsupervised training set S train . Thus, the number of elements in the dataset D α is directly the number of non-zero elements in α. The loss for a given problem S can therefore be rewritten as :</p><formula xml:id="formula_2">L θ,d (S) = E α∼P θ (α|S T rain ) [ (x,y)∈S Eval ∆(d(x, D α ), y) + λ|D α |] = E α∼P θ (α|S T rain ) [ (x,y)∈S Eval ∆(d(x, D α ), y)] error in prediction + E α∼P θ (α|S T rain ) [λ N k=1 α k ] cost of labelization (2)</formula><p>The first part corresponds to the prediction quality depending on the acquired and labeled examples. Its gradient w.r.t. parameters of both modules (noted for sake of simplicity ∇ θ,d ) can be computed using inspired policy-gradient method (likelihood-ratio trick) as follows, where we consider for clarity the gradient of the prediction loss for a single example (x, y) in S Eval :</p><formula xml:id="formula_3">∇ θ,d E α∼P θ (α|S T rain ) [∆(d(x, D α ), y)] = ∇ θ,d (P θ (α|S T rain )∆(d(x, D α ), y)dα + P θ (α|S T rain )∇ θ,d ∆(d(x, D α ), y)dα = P θ (α|S T rain ) P θ (α|S T rain ) ∇ θ,d (P θ (α|S T rain ))∆(d(x, D α ), y)dα + P θ (α|S T rain )∇ θ,d ∆(d(x, D α ), y)dα = P θ (α|S T rain )∇ θ,d (log(P θ (α|S T rain )))∆(d(x, D α ), y)dα + P θ (α|S T rain )∇ θ,d ∆(d(x, D α ), y)dα<label>(3)</label></formula><p>This can be approximated through Monte-Carlo sampling, which yields, on M histories:</p><formula xml:id="formula_4">∇ θ,d E α∼P θ (α|S T rain ) [∆(d(x, D α ), y)] ≈ 1 M M m=1 ∇ θ,d (log(P θ (α|S T rain )))∆(d(x, D α ), y) + ∇ θ,d ∆(d(x, D α ), y)<label>(4)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Labels acquisition component</head><p>This module takes as input the whole unlabeled training dataset of the current problem at hand and outputs a probability of the usefulness of labeling each of these samples. We propose to use recurrent neural networks, which were initially proposed to consider sequences of inputs. More specifically, we propose in this work to use bi-directional RNN, which ensure that the output i of the network is computed with regards to all inputs examples, and thus provide a "non-myopic" decision for each example (at the difference of a classical RNN), in order to benefit from the observation of all example for each decision. Note that it could be relevant to use attentional-LSTM here, as presented in <ref type="bibr" target="#b12">[13]</ref>, as it provides an order-invariant network, but this has not been tested yet in our experiments. The output of the recurrent network is considered to be a probability distribution that is used to sample α, the binary vector that select the examples to label.</p><p>The output can thus be seen either as (i) a multinomial distribution, where N i=1 α i = 1,<ref type="foot" target="#foot_0">3</ref> , (ii) a bernouilli distribution where each P θ (α j |S train i ) ∈ {0, 1}. We present in this paper experiments using a multinomial distribution sampled k-times, where k is the maximum number of examples labeled.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Prediction component</head><p>This module takes as input a (new) example and a limited supervised training dataset, and outputs a prediction (e.g a category). It could be any prediction algorithm, parametric or not, which requires learning or not. In our case, the component should be able to back-propagate some gradients of errors to drive the overall learning. We propose to use similarity based prediction, which doesn't need learning, thus allows for a fast overall meta-learning. We test two similarity measures, a normalized cosine similarity and an euclidean-based similarity. Additionally, computing the predicted label for a new input is done as follow : (i) each similarity with the supervised examples is computed. (ii) This vector of similarities is then converted into a probability distribution, using a softmax with temperature. (iii) The predicted label is computed as the sum of one-hot-vector labels of supervised examples weighted by this distribution. Note that when the temperature is high enough, this distribution is a one-hot vector, which is similar to a 1-nearest neighbor technique.</p><p>Additionally, we propose to use a representation component, common to the acquisition and decision components. The key idea is to learn a latent representation space that disentangle the raw inputs to provide better prediction as well as facilitate the acquisition decision. This module, denoted f , takes as input an example in R K (the original space of all examples of B) and outputs its representation in a latent space R L . It is conjointly learned with the others functions. Integrating this representation function in the original loss defined in Eq. 2 resumes to:</p><formula xml:id="formula_5">L θ,d,f (S) = E α∼P θ (αf (|S T rain )) [ (x,y)∈S Eval ∆(d(f (x), f (D α )), y)] + E α∼P θ (α|f (S T rain )) [λ N k=1 α k ]</formula><p>(5) Where we note for sake of clarity f (S T rain ) = {f (x 1 ), . . . , f (x N )}, and similarly for f (D α ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiments</head><p>We first describe our experimental protocol and the baselines we used, then we show the results of our experiments on two datasets,letter and aloi.</p><p>Experimental Protocol : To build our "meta-active learning" datasets, we set P , the number of categories of each elementary problem, N the number of examples in the "unsupervised" dataset, and M the number of examples to classify on. For simplicity, we chose in our experiments to use same numbers P,M,N, whatever the every elementary problem.</p><p>The generation of the complete dataset as illustrated in Figure <ref type="figure" target="#fig_0">1</ref> with training/validation/testing problems is based on a partition of the full set of categories between train, validation and test, while keeping a common domain between all inputs. It is done as follows:</p><p>training dataset: we select a subset of the categories as "training classes" (e.g 50% of all classes) and their corresponding examples. We then generate a large amount of sub-problems: for one problem, (i)   Figures 3a,3b,3c. We observe mixed results. Our model performs better than a k-medoid acquisition strategy for a budget of 2 on binary-classification problems, but k-medoid leads to a better accuracy for higher budgets. It is also better for all budgets except 6 on 4-categories problems. For 6-categories problems, our model beats the two baselines for all budgets. This difference of performance can be explained by the small amount of different categories in the training dataset; with 10 categories and binary problems (45 different combinations), our model will observe the same problem a large number of times, which could lead to over-fitting. This seems to be the case, as it performs better on 6-classes problems (210 different combinations). We propose thus to study now a dataset with a larger number of categories. We see that our method performs better than k-medoid for all budgets and all types of problems, except on binary-classification with budget 6, where k-medoid performs slightly better (0.5%). On this bigger dataset, our approach is less prone to overfit, and thus manages to generalize well its acquisition strategy to novel problems on unseen categories.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: Examples of a complete dataset for a meta-active learning strategy, with a set of training problems S, with P categories per problem, on a total of |C train | classes, and a set of testing problems on distinct categories. Each problem is composed of a set of N examples that can be labeled and used for prediction, and a set of M examples to classify.</figDesc><graphic url="image-1.png" coords="4,160.70,101.66,293.95,264.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: Illustration of the inference process for a given problem : the unsupervised dataset S T rain is fed to a "selector", which decides which examples should be labeled. The oracle provides the necessary labels, which provides a small supervised sub-dataset D α . This dataset is used by the prediction model to predict on the evaluation examples in S Eval .</figDesc><graphic url="image-2.png" coords="7,160.70,115.84,293.95,90.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a) Results on dataset letter with 2-categories classification problems. (b) Results on dataset letter with 4-categories classification problems. (c) Results on dataset letter with 6-categories classification problems. (d) Results on dataset aloi with 2-categories classification problems. (e) Results on dataset aloi with 4-categories classification problems. (f) Results on dataset aloi with 6-categories classification problems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 :</head><label>3</label><figDesc>Fig.3: Plots of results on uci-dataset letter (top) and dataset aloi (bottom), with 2,4 or 6 categories per problem. K-medoids acquisition strategy is depicted in blue, random acquisition strategy in red. Our model using Policy-Gradient is in green. Abscissa is the number of examples selected for labeling, ordinate is the average accuracy obtained on all test-problems. For each model, we select the best results on validation problems for each budget, and plot the corresponding performance on test problems (square points).</figDesc><graphic url="image-6.png" coords="11,134.77,335.97,103.74,103.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Dataset aloi : This dataset has 1000 categories, with around one hundred images per class. It is a more realistic and challenging dataset for the meta active learning setting we are dealing with. We created 4000 training problems on 350 training categories, and 500 validation and testing problems on respectively 300 and 350 categories. The number of examples that can be labeled is 25, and the number of examples to classify per problem is 40. The results are shown in Figures3d,3e,3f, for the 3 types of problems (2-classes, 4-classes and 6-classes).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>we randomly select P categories in the "training classes", (ii) we randomly select N examples in these P categories (i.e S train</figDesc><table><row><cell></cell><cell>i</cell><cell>, the examples that can be asked for labeling),</cell></row><row><cell cols="3">(iii) we randomly select M additional examples to evaluate the predictions,</cell></row><row><cell>i.e S eval i</cell><cell>.</cell></row><row><cell cols="3">-validation and testing datasets are generated similarly, on distinct "vali-</cell></row><row><cell cols="3">dation classes" and "testing classes", unobserved in the complete training</cell></row><row><cell>dataset.</cell><cell></cell></row><row><cell cols="3">Baselines : We propose for this study two baselines. These baselines follow the</cell></row><row><cell cols="3">same global scheme, but with a different acquisition component:</cell></row><row><cell cols="3">-Random acquisition: the examples to label are chosen randomly in the</cell></row><row><cell>dataset.</cell><cell></cell></row><row><cell cols="3">-K-medoids acquisition: the examples to label are selected following a k-</cell></row><row><cell cols="3">medoid clustering technique, where we label each example if it is a centroid</cell></row><row><cell cols="2">of a cluster.</cell></row><row><cell cols="3">Note that these acquisition methods do not learn during the overall process, only</cell></row><row><cell cols="3">the representation component (if one is used) is learned. While being simple,</cell></row><row><cell cols="3">we expect the k-medoids baseline to be a reasonable and efficient baseline in</cell></row><row><cell cols="3">our static active-learning setting, more especially when using a similarity-based</cell></row><row><cell cols="2">function for prediction.</cell></row><row><cell cols="3">Dataset letter : This dataset has 26 categories and 16 features. We took 10</cell></row><row><cell cols="3">categories for training, 7 for validation and 9 for testing. We generated 2000</cell></row><row><cell cols="3">problems in training and 500 problems for validation and testing. The size of</cell></row><row><cell cols="3">a dataset (examples that can be labeled) is 25, and the number of examples</cell></row><row><cell cols="3">to classify per problem is 40. Here again we study 3 types of problems, binary,</cell></row><row><cell cols="3">4-classes and 6-classes with various budget levels. The results are plotted in</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0">Note that this allows to manually bound the number of examples labeled as one has to decide beforehand the number of sampling</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Closing remarks</head><p>We present in this paper a first approach for a meta-learning approach to a poolbased static active-learning strategy. We propose a stochastic instantiation based on bi-directionnal LSTM to benefit from the whole unsupervised dataset before prediction. First results are encouraging and show the ability of our approach to learn a labeling strategy that performs as well or better than our k-medoid baseline.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Learning algorithms for active learning</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bachman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sordoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Trischler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
			<publisher>ICLR Workshop</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Improving generalization with active learning</title>
		<author>
			<persName><forename type="first">D</forename><surname>Cohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Atlas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ladner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine learning</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="201" to="221" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Optimistic active learning for classification</title>
		<author>
			<persName><forename type="first">T</forename><surname>Collet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Pietquin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014. 2014</date>
			<biblScope unit="page">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Committee-based sampling for training probabilistic classifiers</title>
		<author>
			<persName><forename type="first">I</forename><surname>Dagan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Engelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twelfth International Conference on Machine Learning</title>
				<meeting>the Twelfth International Conference on Machine Learning<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="150" to="157" />
		</imprint>
	</monogr>
	<note>The Morgan Kaufmann series in machine learning</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Selective labeling via error bound minimization</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Ding</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="323" to="331" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Label selection on graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Guillory</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Bilmes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="691" to="699" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Discriminative batch mode active learning</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schuurmans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="593" to="600" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Diverse ensembles for active learning</title>
		<author>
			<persName><forename type="first">P</forename><surname>Melville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Mooney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the twenty-first international conference on Machine learning</title>
				<meeting>the twenty-first international conference on Machine learning</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page">74</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Toward optimal active learning through monte carlo estimation of error reduction</title>
		<author>
			<persName><forename type="first">N</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>ICML</publisher>
			<biblScope unit="page" from="441" to="448" />
			<pubPlace>Williamstown</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Meta-learning with memory-augmented neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Santoro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bartunov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Botvinick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wierstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lillicrap</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of The 33rd International Conference on Machine Learning</title>
				<meeting>The 33rd International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1842" to="1850" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Active learning literature survey</title>
		<author>
			<persName><forename type="first">B</forename><surname>Settles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Madison</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2010">2010</date>
		</imprint>
		<respStmt>
			<orgName>University of Wisconsin</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Multiple-instance active learning</title>
		<author>
			<persName><forename type="first">B</forename><surname>Settles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Craven</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="1289" to="1296" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Order matters: Sequence to sequence for sets</title>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kudlur</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.06391</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Matching networks for one shot learning</title>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Blundell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wierstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="3630" to="3638" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Active one-shot learning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Woodward</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Finn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Yip</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Sussman</surname></persName>
		</author>
		<title level="m">Sparse representations for fast</title>
				<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
	<note>one-shot learning</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Active learning via transductive experimental design</title>
		<author>
			<persName><forename type="first">K</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Tresp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd international conference on Machine learning</title>
				<meeting>the 23rd international conference on Machine learning</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="1081" to="1088" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The value of unlabeled data for classification problems</title>
		<author>
			<persName><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Oles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventeenth International Conference on Machine Learning</title>
				<editor>
			<persName><forename type="first">P</forename><surname>Langley</surname></persName>
		</editor>
		<meeting>the Seventeenth International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="1191" to="1198" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
