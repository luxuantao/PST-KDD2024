<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Resurrecting Duckling: Security Issues for Ad-hoc Wireless Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="1999-09">th September 1999</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Frank</forename><surname>Stajano</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">AT&amp;T Laboratories Cambridge</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">University of Cambridge Computer Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ross</forename><surname>Anderson</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">University of Cambridge Computer Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">http://www.uk.research.att.com/˜fms/ , http://www.cl.cam.ac</orgName>
								<address>
									<country>uk, ˜rja14</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Resurrecting Duckling: Security Issues for Ad-hoc Wireless Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="1999-09">th September 1999</date>
						</imprint>
					</monogr>
					<idno type="MD5">E7034B9877CBA517F61651DC55870AEA</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In the near future, many personal electronic devices will be able to communicate with each other over a short range wireless channel. We investigate the principal security issues for such an environment. Our discussion is based on the concrete example of a thermometer that makes its readings available to other nodes over the air. Some lessons learned from this example appear to be quite general to ad-hoc networks, and rather different from what we have come to expect in more conventional systems: denial of service, the goals of authentication, and the problems of naming all need re-examination. We present the resurrecting duckling security policy model, which describes secure transient association of a device with multiple serialised owners.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The established trend in consumer electronics is to embed a microprocessor in everything-cellular phones, car stereos, televisions, VCRs, watches, GPS (Global Positioning System) receivers, digital cameras-to the point that most users have lost track of the number of items they own that contain one. In some specific environments such as avionics, electronic devices are already becoming networked; in others, work is underway: consumer electronics makers, for example, are promoting the Firewire standard <ref type="bibr" target="#b9">[10]</ref> for PCs, stereos, TVs and DVD players to talk to each other.</p><p>We envisage that, in the near future, this networking will become much more general. After the microprocessor, a short range wireless transceiver will be embedded in everything, so that many gadgets will become more useful and effective by communicating and cooperating with each other. A camera, for example, might obtain the geographical position and exact time from a GPS unit every time a picture is taken, and record that information with the image. At present, if the photographer wants to record a voice note with the picture, the camera must incorporate digital audio hardware; in the future, the camera might let her speak into her audio recorder or cellphone. Each device, by becoming a network node, may take advantage of the services offered by other nearby devices instead of having to duplicate their functionality. This vision of embeddable wireless connectivity has been in development for several years at AT&amp;T Laboratories Cambridge in the context of the Piconet <ref type="bibr" target="#b3">[3]</ref> project and is also being pursued, although with emphasis on different aspects, by several other groups including HomeRF [9, 14], IrDA <ref type="bibr" target="#b10">[11]</ref> (which uses infrared instead of radio) and Bluetooth <ref type="bibr" target="#b5">[5,</ref><ref type="bibr" target="#b8">8]</ref>.</p><p>Everyone-including potential users-understands that wireless networking is prone to passive eavesdropping attacks. But it would be highly misleading to take this as the only, or even the main, security concern.</p><p>In this paper we investigate the security issues of an environment characterised by the presence of many principals acting as network peers in intermittent contact with each other. To base the discussion on a concrete example we shall consider a wireless temperature sensor. Nearby nodes may be authorised to request the current temperature, or to register a "watch" that will cause the thermometer to send out a reading when the temperature enters a specific range. We wish to make our thermometer useful in the widest range of environments including environmental monitoring, industrial process control and medicine.</p><p>We will therefore consider how we can enable our thermometer to support all the security properties that might be required, including confidentiality, integrity (and its close relative authenticity) and availability. Contrary to academic tradition, however, we shall examine them in the opposite order, as this often (and certainly in our case) reflects their actual importance.</p><p>In our analysis we must not overlook the defining characteristics of this environment: portable wireless consumer electronics devices imply small size, low cost and battery-powered operation. From these constraints, and in particular from battery weight issues, follow limits on the computing speed of the processor and even on the total amount of computation and communication that can be performed. These constraints are new for the usual distributed systems scenario, and so are their effects on security.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Availability</head><p>Availability means ensuring that the service offered by the node will be available to its users when expected. In most non-military scenarios, this is the security property of greatest relevance for the user. All else counts little if the device cannot do what it should.</p><p>Apart from radio jamming attacks on the communication channel, the novel and interesting service denial threat concerns battery exhaustion.</p><p>A malicious user may interact with a node in an otherwise legitimate way, but for no other purpose than to consume its battery energy. Battery life is the critical parameter for many portable devices, and many techniques are used to maximise it; in Piconet, for example, nodes try to spend most of the time in a sleep mode in which they only turn on the radio receiver, or even the processor, once in a while (the period can be set from a few seconds to several minutes). In this environment, energy exhaustion attacks are a real threat, and are much more powerful than better known denial of service threats such as CPU exhaustion; once the battery runs out the attacker can stop and walk away, leaving the victim disabled. We call this new attack the sleep deprivation torture.</p><p>For any public access server, there is necessarily a tension between the contrasting goals of being useful to unknown users and not succumbing to vandals. Whereas some applications can restrict access to known principals, in others (such as web servers and name servers) this is infeasible since the very usefulness of the service comes from its being universally available.</p><p>If a server has a primary function (such as sending the outside temperature to the meteorological office every hour) and a distinct auxiliary function (such as sending the current temperature to anyone who requests it) then these functions can be prioritised; a reservation mechanism can ensure that the higher priority use receives a guaranteed share of the resource regardless of the number of requests generated by the lower priority uses. Even just turning on the receiver to listen to unexpected messages may become a rationed activity. The highest priority use of all may be battery management: if one can accurately estimate the amount of usable energy remaining, then the service can be monitored and managed-provided that the process does not itself consume too much of the resource it is intended to conserve.</p><p>It has been suggested that an attacker might starve the legitimate users by forcing the node to become unresponsive in self-defense, and that it would be better to identify and blacklist the source of the attack. However, this forces the node to use a lot of storage to perform traffic analysis, and in any case the attacker could mount his sleep deprivation attack via multiple paths. Authenticating other nodes is a possible solution, but has difficulties which we will discuss in the next section. The most general defence against sleep deprivation remains a resource reservation mechanism.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Authenticity</head><p>Authenticity is ensuring that the principals with whom one interacts are the expected ones.</p><p>In most applications where security matters, authenticity is an essential prerequisite. Granting resources to, obeying an order from, or sending confidential information to a principal of whose identity we are unsure is not the best strategy for protecting availability, integrity and confidentiality.</p><p>Many authentication protocols have been developed to identify authorized principals. However, the ad-hoc network environment introduces a fundamental new problem: the absence of an online server. When a new node comes within range, we cannot connect to an authentication server to obtain a Kerberos ticket or to check the validity of an exhibited certificate: suddenly, the traditional solutions no longer apply. Besides, the problem of greatest relevance in this new context is itself new-secure transient association, which we shall now describe.</p><p>If a householder owns a device, say a universal remote control, that lets her control various other devices in her home (such as hi-fi and television components, the heating system, lights, curtains and even the locks and burglar alarm) then she will need to ensure that a new device she buys from the shop will obey her commands, and not her neighbour's. She will want to be assured that a burglar cannot take over the heat sensing floodlight in the garden, or unlock the back door, just by sending it a command from a remote control bought in the same shop.</p><p>As well as being secure (whatever that means), the association between the controller and the peripheral must also be transient. When a householder resells or gives away her television set or hi-fi or fridge, the appliance will have to obey another controller; when her controller breaks down (or she decides to replace it or upgrade its operating system), she must be able to regain control of all the gadgets she already owns.</p><p>A central authentication service is possible for expensive consumer durables; most governments run such services for houses and cars. But there is no prospect that this will be extended to all durable consumer goods; the UK government abandoned dog licensing some years ago as uneconomic. In any case, there would be very grave civil liberties objections to the government maintaining lists of all PCs, hi-fis and DVD players in the country; the outcry over the Pentium III processor ID <ref type="bibr" target="#b7">[7]</ref> indicates the likely level of political resistance. Even the existing registration services stop short of managing keys; the replacement of car keys is left to the motor trade, while house locks are completely uncontrolled. So it is desirable that key management be performed locally: the last thing we want is to impose an expensive and unpopular central solution. Yet it would be nice if we could still provide some means of making a stolen DVD player harder to resell.</p><p>Another insight comes from scenarios where we have a pool of identical devices, such as a bowl of disinfectant containing ten thermometers. The doctor does not really care which thermometer she gets when she picks one up, but she does care that the one her palmtop talks to is the same one she is holding and not any other one nearby.</p><p>A metaphor inspired by biology will help us describe the behaviour of a device that properly implements secure transient association. As Konrad Lorenz beautifully narrates <ref type="bibr" target="#b12">[13]</ref>, a duckling emerging from its egg will recognise as its mother the first moving object it sees that makes a sound, regardless of what it looks like: this phenomenon is called imprinting. Similarly, our device (whose egg is the shrink-wrapped box that encloses it as it comes out of the factory) will recognise as its owner the first entity that sends it a secret key. As soon as this "ignition key" is received, the device is no longer a newborn and will stay faithful to its owner for the rest of its life. If several entities are present at the device's birth, then the first one that sends it a key becomes the owner: to use another biological metaphor, only the first sperm gets to fertilise the egg.</p><p>We can view the hardware of the device as the body, and the software (particularly the state) as the soul. As long as the soul stays in the body, the duckling remains alive and bound to the same mother to which it was imprinted. But this bond is broken by death: thereupon, the soul dissolves and the body returns in its pre-birth state, with the resurrecting duckling ready for another imprinting that will start a new life with another soul. Death is the only event that returns a live device to the prebirth state in which it will accept an imprinting. We call this process reverse metempsychosis. Metempsychosis refers to the transmigration of souls as proposed in a number of religions; our policy is the reverse of this as, rather than a single soul inhabiting a succession of bodies, we have a single body inhabited by a succession of souls <ref type="foot" target="#foot_0">1</ref> .</p><p>With some devices, death can be designed to follow an identifiable transaction: in medicine, a thermometer can be designed to die (and lose its memory of the current patient's temperature history) when returned to the bowl of disinfectant at the nursing station. With others, we can arrange a simple timeout, so that the duckling dies of old age. With other devices (and particularly those liable to be stolen) we will arrange that the duckling will only die when so instructed by its mother: thus only the currently authorised user may transfer control of the device. In order to enforce this, some level of tamper resistance will be required: assassinating the duckling without damaging its body should be made suitably difficult and expensive.</p><p>Sometimes the legitimate user will lose the shared secret (e.g. when the password is forgotten or the remote control is broken beyond repair). To be able to regain control of the duckling, an easy solution is escrowed seppuku: someone other than the mother, such as the manufacturer, holds the role of Shōgun with a master password that can command the device to commit suicide. But this reintroduces centralised control: the Shōgun can always take over any device and, more worryingly, he is forced to keep a global database (built from warranty cards sent in by the owners as they purchase the ducklings) mapping serial numbers to legitimate owners, lest he give out the seppuku key to the thief of the DVD player. The experience of the motor industry shows that the manufacturer, whose profits come from sales, often has little incentive to make its products hard to steal. This makes us suspicious about how careful or scrupulous the Shōgun would be in managing such an escrow database. To keep key management local, a better solution is for the mother to backup the ignition key, and even split it into shares if necessary; this gives her better privacy guarantees, at the cost of transferring the key management burden from the Shōgun to her. A key recovery facility may be genuinely beneficial to the mother, as long as she is free to choose local escrow parties that she trusts (the neighbours holding a copy of her house keys) instead of global ones imposed from above. We prefer the decentralised end of this wide spectrum of possible key recovery solutions, though there might exist applications with little or no civil liberties implications for which a different trade-off between usability and privacy might prove more appropriate.</p><p>There are also applications in which only part of the duckling's soul should perish. Our thermometer might be calibrated every six months, and the calibration information must not be erased along with the patient data and user key when the device is disinfected, but only when it is plugged into a calibration station. So we may consider the device to be endowed with two souls-the calibration state and the user state-and a rule that the latter may not influence the former. So our resurrecting duckling security policy may be combined with multilevel security concepts (in fact, "multilevel secure souls" are a neat application of the Biba integrity policy model <ref type="bibr" target="#b4">[4]</ref>).</p><p>During the imprinting phase, as we said, a shared secret is established between the duckling and the mother. One might think that this is easy to do: the mother generates a random secret and encrypts it under the public key of the duckling, from which it gets back a signed confirmation. But many of our nodes, due to their peanut-sized CPU, lack the ability to do public key, and even if they did it would still not help much. Suppose that a doctor picks up a thermometer and tries to get his palmtop to do a Diffie-Hellman key exchange <ref type="bibr" target="#b6">[6]</ref> with it over the air. How can he be sure that the key has been established with the right thermometer and not one of the others sitting in the bowl of disinfectant? If both devices have screens, then a hash of the key might be displayed and verified manually; but this is both tedious and error-prone, in an environment where we want neither. Besides, we do not want to give a screen to every device: sharing peripherals is one of the goals of ad-hoc networking.</p><p>In many applications there will only be one satisfactory solution, and we advocate its use generally as it is effective, cheap and simple: physical contact. When the device is in the pre-birth state, simply touching it with an electrical contact that transfers the bits of a shared secret constitutes the imprinting. No cryptography is involved, since the secret is transmitted in plaintext, and there is no ambiguity about which two entities are involved in the binding.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Integrity</head><p>Integrity means ensuring that the node has not been maliciously altered. The recipient wants to be sure that the measurements come from the genuine thermometer and not from a node that has been modified to send out incorrect temperature values (the application might not be meteorology or medicine, but a fire alarm warning system).</p><p>The threat model here assumes that the sensing node may be left unattended for long periods of time and that, sooner or later, an attacker will pick it up, mess around with its internals and put it back where it was. A legitimate node may then end up unknowingly transacting with a maliciously altered one. This can in theory be avoided by making the nodes tamper-proof, but it is much easier to talk about this property than to implement it in practice <ref type="bibr" target="#b0">[1]</ref>, especially within the cost and form factor constraints of personal consumer electronics devices. Under the circumstances, it is not clear whether any extra assurance is given by furnishing our thermometer with the ability to do public key cryptography; such a device can have its private key read out just as a device with a certificate but without a private/public keypair can be forged.</p><p>In such environments it may often be more suitable to use tamper-evidence mechanisms (such as seals) rather than more expensive tamper-proofing ones (such as sensing switches that erase the memory). In this case, one must still design the device so that non-intrusive attacks (such as those based on protocol failure, power analysis and glitch attacks <ref type="bibr" target="#b1">[2]</ref>) are not practical; it is also necessary to take into account the time that might pass before a broken seal is noticed, and the likelihood of successful attacks on the sealing mechanism <ref type="bibr" target="#b11">[12]</ref>. It must also be realised that the tampering may not be limited to the onboard code and keys: a very effective attack on the unattended thermometer is to simply replace its analogue sensing element with a bad one. This attack highlights that even enclosing the entire processor, memory and backup battery in a high-grade tamper resistant enclosure, with only a ribbon connector to interface with the outside world, would still leave us vulnerable to direct attacks on its "peripherals". Bringing the sensor itself within the tamper resistant enclosure may make manufacturing too expensive (the computing and communication core willl no longer be a modular building block) and may even interfere with the proper working of the sensor. So the transducer may be an Achilles' heel, and it may not be worth spending large sums on tamper-proofing the core if the sensor cannot economically be protected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Confidentiality</head><p>We find that we have little to say about confidentiality other than remarking that it is pointless to attempt to protect the secrecy of a communication without first ensuring that one is talking to the right principal. Authenticity is where the real issues are and, once these are solved, protecting confidentiality is simply a matter of encrypting the session with whatever key material is made available by the authentication process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>We examined the main security issues that arise in an ad-hoc wireless network of mobile devices. The design space of this environment is constrained by tight bounds on power budget and CPU cycles, and by the intermittent nature of communication. This combination makes much of the conventional wisdom about authentication, naming and service denial irrelevant; even tamper resistance is not completely straightforward.</p><p>There are interesting new attacks, such as the sleep deprivation torture, and limitations on the acceptable primitives for cryptographic protocols. However, there are also new opportunities opened up by the model of secure transient association, which we believe may become increasingly important in real networking applications.</p><p>The contribution of this paper was to spell out the new problems and opportunities, and to offer a new way of thinking about the solution space-the resurrecting duckling security policy model.</p></div>			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Prior art on this technique includes Larry Niven's science fiction novel A World Out ofTime (1977)  in which convicted criminals have their personalities "wiped" and their bodies recycled.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Acknowledgements</head><p>Thanks to Alan Jones for suggesting the wireless thermometer, a prototype of which had just been built in the context of Piconet, as a minimal but still meaningful example. Thanks also to Jonathan Smith and his group at the University of Philadelphia for insightful criticisms when this research was presented there in June 1999. This is an abridged and updated version of the paper by the same name <ref type="bibr" target="#b14">[15]</ref> presented in April 1999 at the 7 th Security Protocols workshop, Cambridge, UK.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Tamper resistance-a cautionary note</title>
		<author>
			<persName><forename type="first">Ross</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Markus</forename><surname>Kuhn</surname></persName>
		</author>
		<ptr target="http://www.cl.cam.ac.uk/˜mgk25/tamper.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proc. 2 nd USENIX Workshop on Electronic Commerce, 1996</title>
		<meeting>2 nd USENIX Workshop on Electronic Commerce, 1996</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Low cost attacks on tamper resistant devices</title>
		<author>
			<persName><forename type="first">Ross</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Markus</forename><surname>Kuhn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security protocols: 5th international workshop</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">Mark</forename><surname>Lomas</surname></persName>
		</editor>
		<meeting><address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-09">April 7-9, 1997</date>
			<biblScope unit="volume">1361</biblScope>
			<biblScope unit="page" from="125" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer-Verlag</surname></persName>
		</author>
		<ptr target="http://www.cl.cam.ac.uk/˜mgk25/tamper2.pdf" />
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Piconet: Embedded mobile networking</title>
		<author>
			<persName><forename type="first">Frazer</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Clarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">B</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andy</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Leask</surname></persName>
		</author>
		<ptr target="http://www.uk.research.att.com/abstracts.html#79" />
	</analytic>
	<monogr>
		<title level="j">IEEE Personal Communications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="8" to="15" />
			<date type="published" when="1997-10">October 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Integrity considerations for secure computer systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kenneth</surname></persName>
		</author>
		<author>
			<persName><surname>Biba</surname></persName>
		</author>
		<idno>MTR-3153</idno>
		<imprint>
			<date type="published" when="1975-04">April 1975</date>
		</imprint>
		<respStmt>
			<orgName>MITRE Corporation</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Sig</forename><surname>Bluetooth</surname></persName>
		</author>
		<ptr target="http://www.bluetooth.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">New directions in cryptography</title>
		<author>
			<persName><forename type="first">Whitfield</forename><surname>Diffie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><forename type="middle">E</forename><surname>Hellman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory, IT</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="644" to="654" />
			<date type="published" when="1976-11">November 1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<ptr target="http://www.bigbrotherinside.org/" />
		<title level="m">Electronic Privacy Information Center, JunkBusters, and Privacy International</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Bluetooth: Visions, goals, and architecture</title>
		<author>
			<persName><forename type="first">Jaap</forename><surname>Haartsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mahmoud</forename><surname>Naghshineh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jon</forename><surname>Inouye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olaf</forename><forename type="middle">J</forename><surname>Joeressen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Warren</forename><surname>Allen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mobile Computing and Communications Review</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="38" to="45" />
			<date type="published" when="1998-10">October 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">IEEE standard for a high performance serial bus</title>
		<author>
			<persName><surname>Ieee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Standard</title>
		<imprint>
			<biblScope unit="volume">1394</biblScope>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<ptr target="http://www.irda.org/" />
		<title level="m">Infrared Data Association</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Vulnerability assessment of security seals</title>
		<author>
			<persName><forename type="first">G</forename><surname>Roger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anthony</forename><forename type="middle">R E</forename><surname>Johnston</surname></persName>
		</author>
		<author>
			<persName><surname>Garcia</surname></persName>
		</author>
		<ptr target="http://lib-www.lanl.gov/la-pubs/00418796.pdf" />
	</analytic>
	<monogr>
		<title level="j">Journal of Security Administration</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="15" to="27" />
			<date type="published" when="1997-06">June 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Er redete mit dem Vieh, den Vögeln und den Fischen (King Solomon&apos;s ring)</title>
		<author>
			<persName><forename type="first">Konrad</forename><surname>Lorenz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Borotha-Schoeler</title>
		<imprint>
			<date type="published" when="1949">1949</date>
			<pubPlace>Wien</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">HomeRF and SWAP: Wireless networking for the connected home</title>
		<author>
			<persName><forename type="first">Kevin</forename><forename type="middle">J</forename><surname>Negus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Waters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jean</forename><surname>Tourrilhes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Romans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jim</forename><surname>Lansford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Hui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mobile Computing and Communications Review</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="28" to="37" />
			<date type="published" when="1998-10">October 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The resurrecting duckling: Security issues in ad-hoc wireless networks</title>
		<author>
			<persName><forename type="first">Frank</forename><surname>Stajano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ross</forename><surname>Anderson</surname></persName>
		</author>
		<ptr target="http://www.cl.cam.ac.uk/˜fms27/duckling/" />
	</analytic>
	<monogr>
		<title level="m">Security Protocols, 7th International Workshop Proceedings</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Christianson</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Crispo</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Roe</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
