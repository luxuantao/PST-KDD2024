<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A TABU search heuristic for the team orienteering problem</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Hao</forename><surname>Tang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Operations Research and Spatial Applications</orgName>
								<orgName type="institution" key="instit2">FedEx Express Corporation</orgName>
								<address>
									<addrLine>3680 Hacks Cross Road</addrLine>
									<postCode>38125</postCode>
									<settlement>Memphis</settlement>
									<region>TN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Elise</forename><surname>Miller-Hooks</surname></persName>
							<email>elisemh@umd.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Civil and Environmental Engineering</orgName>
								<orgName type="institution">The University of Maryland</orgName>
								<address>
									<addrLine>1173 Glenn L. Martin Hall</addrLine>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A TABU search heuristic for the team orienteering problem</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F8D8FCE5FDBC51037538047C6F85D291</idno>
					<idno type="DOI">10.1016/j.cor.2003.11.008</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:21+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Team Orienteering Problem (TOP)</term>
					<term>Multiple Tour Maximum Collection Problem</term>
					<term>Tabu Search</term>
					<term>Adaptive Memory Procedure</term>
					<term>Selective TSP</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper describes a tabu search heuristic for the Team Orienteering Problem (TOP). The TOP is a variant of the well-known Vehicle Routing Problem in which a set of vehicle tours are constructed such that the total collected reward received from visiting a subset of customers is maximized and the length of each vehicle tour is restricted by a pre-speciÿed limit. The tabu search heuristic is embedded in an adaptive memory procedure that alternates between small and large neighborhood stages during the solution improvement phase. Both random and greedy procedures for neighborhood solution generation are employed and infeasible, as well as feasible, solutions are explored in the process. Results from computational experiments conducted on a set of published test problems show that the proposed technique consistently produces high-quality solutions and outperforms other published heuristics for the TOP.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In this paper, a tabu search heuristic is proposed to solve the Team Orienteering Problem (TOP). Given a complete graph G =(V; E), where V ={0; 1; 2; : : : ; n-1} is the vertex set, E ={(i; j) | i; j ∈ V } is the edge set and r i is the reward collected by visiting vertex i (i ∈ V \ {0}), the TOP seeks a set of m vehicle tours that start at the same vertex, collect the maximum total reward by visiting select vertices within a pre-speciÿed duration limit L, and return to the ending vertex. For the purpose of simplifying the notation, we assume that these m tours have an identical starting and terminus point, vertex 0. No capacity constraints are considered. The TOP arises in many applications. Consider, for instance, routing technicians to service customers at geographically distributed locations. In this context, each vehicle in the TOP model represents a single technician and there is often a limitation on the number of hours each technician can be scheduled to work in any given day. Thus, it may not be possible to include all customers requiring service in the technicians' schedules for a given day. Instead, a subset of the customers will be selected. Decisions regarding which customers to choose for inclusion in each of the service technicians' schedules may take into account customer importance or task urgency. Note that this customer selection requirement also arises in many real-time routing applications.</p><p>The service scheduling application of the TOP is illustrated for two technicians (i.e. m = 2) in Fig. <ref type="figure" target="#fig_0">1</ref>. In the ÿgure, vertices 1-8 represent customer requests for service. The relative location of each vertex corresponds with the geographical location of each request. Suppose that the maximum working duration (travel time plus service time) for each day is 8 h (i.e. L=8 h). For the purpose of simpliÿcation, breaks are ignored. Service time s i and reward r i for each vertex i (i ∈ [1; : : : ; 8]) and travel times between requests are shown in the ÿgure. Travel times are assumed to be symmetric. Rewards are greater for servicing requests with greater urgency or higher priority. The problem is to select a set of requests to be serviced on this day by each of the two technicians and to determine the order in which they will be served such that the overall reward is maximized. Each technician must be able to service all assigned requests within the tour duration limit L. Note that there may be some savings incurred by servicing a less urgent request, and thus, it is not necessarily best to only consider the requests with the highest rewards (i.e. with greatest urgency or priority).</p><p>The optimal solution for this illustrative problem instance is depicted in the ÿgure. The solution contains two tours resulting in 21-unit total reward. Note that two requests (located at vertices 1 and 5) are not included in either technician's schedule. Due to the tour duration restrictions, including these requests would require exclusion of other requests and would result in a lower total reward.</p><p>Problems arise in many other applications that can be similarly modeled as TOPs, including the multi-vehicle version of the home fuel delivery problem <ref type="bibr" target="#b0">[1]</ref>, the sport game of team orienteering <ref type="bibr" target="#b1">[2]</ref> and athlete recruiting from high schools for a college team <ref type="bibr" target="#b2">[3]</ref>. In addition, some applications of pickup or delivery services involving the use of common carriers and private eets also require selection of only a subset of available customers (see, e.g. <ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref>).</p><p>The TOP has received some attention in the published research works. In these works, the TOP is also referred to as the Multiple Tour Maximum Collection Problem (MTMCP), where all tours have an identical starting and terminus vertex <ref type="bibr" target="#b2">[3]</ref>. Two heuristics have been previously proposed for the TOP: a greedy construction procedure <ref type="bibr" target="#b2">[3]</ref> and the 5-step heuristic <ref type="bibr" target="#b1">[2]</ref>. In the former procedure, at each iteration the best pair of vertices are assigned to the solution tours. The procedure stops when all m tours have been constructed and it does not appear possible to add additional vertices without exceeding tour length restrictions. The latter 5-step (initialization, main movement, clean up, local improvement and reinitialization) heuristic can be viewed as a deterministic variant of simulated annealing <ref type="bibr" target="#b6">[7]</ref>, a type of metaheuristic. The 5-step metaheuristic proposed by Chao et al. appears to be the best published heuristic available for the TOP. The only exact algorithm that addresses the TOP is based on column generation <ref type="bibr" target="#b7">[8]</ref>. This procedure is capable of solving some small-to moderate-size problems with up to 100 vertices, provided the number of vertices in each tour remains relatively small.</p><p>The TOP is the multi-vehicle version of the Selective Traveling Salesperson Problem (STSP). A number of works have addressed the STSP or the related Orienteering Problem (OP, the single vehicle version of the TOP), several of which propose exact algorithms based on branch-and-bound <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref> and branch-and-cut <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref> procedures. The most successful implementation was due to the branch-and-cut procedure (e.g., <ref type="bibr" target="#b10">[11]</ref>), which solved STSP instances with up to 500 vertices.</p><p>As shown by Golden et al. <ref type="bibr" target="#b0">[1]</ref>, the OP (and thus, the STSP) is NP-hard. Therefore, most research on these problems have focused on providing heuristic approaches. Tsiligirides <ref type="bibr" target="#b12">[13]</ref> proposed deterministic and stochastic heuristics for the problem. The deterministic heuristic uses a variant of the heuristic procedure proposed by Wren and Holliday <ref type="bibr" target="#b13">[14]</ref> for vehicle routing and the stochastic method relies on Monte Carlo techniques. A center-of-gravity heuristic was introduced by Golden et al. <ref type="bibr" target="#b0">[1]</ref>, where the solution tour is constructed by the cheapest insertion procedure according to a combined measure for vertex selection. Incorporating the concept of a learning measure, Golden et al. <ref type="bibr" target="#b14">[15]</ref> improved the center-of-gravity heuristic by rewarding vertices associated with "above-average" tours while penalizing those associated with "below-average" tours. Ramesh et al. <ref type="bibr" target="#b15">[16]</ref> proposed a four-phase heuristic. After choosing the best solution from iterations over a set of three phases (vertex insertion, edge exchange and vertex deletion), a fourth phase is entered, where one attempts to insert unvisited vertices into the tour. A 5-step heuristic was proposed by Chao et al. <ref type="bibr" target="#b16">[17]</ref> for the OP. This heuristic takes advantage of a probabilistic criterion for candidate solution selection. Gendreau et al. <ref type="bibr" target="#b11">[12]</ref> developed two approximate algorithms for the STSP. The ÿrst, H1, gradually constructs a solution tour by inserting a single or a pair of vertices into the current tour. The second, H2, constructs a tour using all vertices, then gradually removes some vertices from the tour. A tabu search procedure that incorporates the proximity measure on clusters of vertices in candidate moves, rather than on single vertices, was proposed by Gendreau et al. <ref type="bibr" target="#b17">[18]</ref>. Numerical experiments show that this tabu search heuristic is able to provide close to optimal solutions for the STSP.</p><p>The prize-collecting traveling salesperson problem is another related problem to the TOP that employs the use of rewards or proÿts for visiting customers (e.g. <ref type="bibr" target="#b18">[19]</ref>). In this problem class, a minimum-cost route is constructed such that the route visits each customer at most once and the total collected prize (or proÿt) is no less than a given value.</p><p>Compared to the closely related STSP and Vehicle Routing Problem (VRP), the TOP is a much less explored problem, despite that there are a wealth of applications that could beneÿt from such a model. Unfortunately, techniques developed for these related problems cannot be directly applied or easily extended to solve the TOP or its variants.</p><p>In the STSP, a subset of customers is chosen and the optimal order in which to visit these customers is simultaneously determined. In contrast to the STSP, in the TOP, in addition to selecting the subset of customers to be visited and determining the optimal order in which to visit them, these customers must also be assigned to the m vehicles. Thus, the joint selection and ordering problem for a single tour becomes a joint selection, assignment and ordering problem for m tours. The increased complexity in problem structure of this multiple vehicle version of the STSP that results from the additional consideration of the assignment of customers to multiple tours signiÿcantly ampliÿes the search space for exactly or approximately solving this routing problem (the TOP) as compared with its single vehicle version (the STSP).</p><p>It is well known that the m-TSP is no more di cult than the TSP, because an m-TSP instance can be easily transformed to a TSP instance (see, e.g. <ref type="bibr" target="#b19">[20]</ref>). Unfortunately, a similar relationship between the TOP (or MTMCP) and the STSP is not known (the method for transforming an m-TSP to a TSP is not valid for creating a similar transformation between the TOP and the STSP due to the existence of tour duration limitations).</p><p>The TOP also di ers from the VRP in a signiÿcant way. Thus, existing procedures for addressing the VRP cannot be directly applied to solve the TOP. In the VRP, all customers must be included in the ÿnal set of tours; whereas, in the TOP, the ÿnal set of tours will contain only a subset of the customers as a consequence of tour duration limitations. Furthermore, in the VRP, the objective is to ÿnd the set of tours that minimize the total travel cost; whereas, in the TOP the objective is to maximize the total reward received by visiting the chosen subset of customers.</p><p>Due to the intractability of the STSP and VRP, most research e orts that address these problems focus on the development of heuristics that solve them approximately, but e ciently (as compared to exact approaches). Among these approximate approaches, metaheuristics have gained recent popularity due to their ability to provide close to optimal solutions within reasonable computing time (e.g. <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref>). Although tabu search has been found to be one of the most promising metaheuristics for the STSP and the VRP, it appears that no tabu search algorithms have been previously proposed in the literature for the TOP.</p><p>In this paper, an integer programming formulation for the TOP is provided (Section 2) and a tabu search heuristic is devised. A step-by-step description of this procedure is provided (Section 3). Computational results on published test problems are presented (Section 4). The results of these computational experiments show that the proposed tabu search algorithm for solving the TOP outperforms other published heuristics for the TOP. Conclusions follow (Section 5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Mathematical formulation</head><p>The TOP described in Section 1 can be formulated as an integer program using the following additional notation.</p><formula xml:id="formula_0">y ik 1, if vertex i is visited by vehicle k; 0, otherwise x ijk</formula><p>the number of times edge (i; j) is traversed by vehicle k;</p><formula xml:id="formula_1">x ijk ∈ {0; 1} if i; j ∈ V \ {0}; x ijk ∈ {0; 1; 2} if i = 0 and j ∈ V \ {0}. d ij</formula><p>distance of travel along edge (i; j);</p><formula xml:id="formula_2">(i; j) ∈ E s i service time at vertex i; i ∈ V U a subset of vertices in V , i.e. U ⊂ V</formula><p>Note that x 0jk = 2 is deÿned for a tour that traverses only one customer vertex in addition to depot 0, i.e. the tour consists of two edges: (0; j) and (j; 0). In this formulation, the distance matrix is assumed to be symmetric, i.e. d ij = d ji for all (i; j) ∈ E; thus, only x ijk (i ¡ j) and d ij (i ¡ j) are deÿned. The formulation of the TOP is given next (for n ¿ 3):</p><formula xml:id="formula_3">Max n-1 i=1 m k=1 r i y ik<label>(1)</label></formula><p>s:t:</p><formula xml:id="formula_4">n-1 j=1 m k=1 x 0jk = 2m;<label>(2) i¡j</label></formula><p>x ijk + i¿j x jik = 2y jk (j = 1; 2; : : : ; n -1; k = 1; 2; : : : ; m); </p><p>m k=1 y ik 6 1 (i = 1; 2; : : : ; n -1);</p><p>i; j∈U i¡j</p><formula xml:id="formula_8">x ijk 6 |U | -1(U ⊂ V \ {0}; n -2 ¿ |U | ¿ 2; k = 1; 2; : : : ; m);<label>(6)</label></formula><p>x 0jk ∈ {0; 1; 2}(j = 1; 2; : : : ; n -1; k = 1; 2; : : : ; m);</p><p>x ijk ∈ {0; 1}(1 6 i ¡ j 6 n -1; k = 1; 2; : : : ; m);</p><p>y ik ∈ {0; 1}(i = 1; 2; : : : ; n -1; k = 1; 2; : : : ; m):</p><p>The objective of the TOP is to maximize the total reward of all vehicle tours, as shown in <ref type="bibr" target="#b0">(1)</ref>. In this formulation, constraint <ref type="bibr" target="#b1">(2)</ref> ensures that there are m tours starting and ending at depot 0. Constraints (3) guarantee the connectivity of each vehicle tour, while the limitation on total duration for each tour is respected by constraints (4) (note that constraint (4) may also be written</p><formula xml:id="formula_12">as n-2 i=0 j¿i (d ij + si 2 + sj 2 )</formula><p>x ijk 6 L (k = 1; 2; : : : ; m)). Constraints <ref type="bibr" target="#b4">(5)</ref> ensure that all vertices (except for depot 0) can be visited at most once. Sub-tours are prohibited by <ref type="bibr" target="#b5">(6)</ref>. Constraints ( <ref type="formula" target="#formula_9">7</ref>)-( <ref type="formula" target="#formula_11">9</ref>) set integral requirements on the decision variables. Another integer formulation for the TOP has been presented in the literature <ref type="bibr" target="#b2">[3]</ref> with 2n 2 m integer variables. The formulation presented in this paper has only (n 2 m + (n -2)m)=2 integer variables.</p><p>The TOP formulated in (1)-( <ref type="formula" target="#formula_11">9</ref>) is NP-hard. This is because when m = 1, the TOP reduces to an STSP, which is NP-hard <ref type="bibr" target="#b0">[1]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The TABU search algorithm</head><p>In this section, a tabu search heuristic for solving the TOP is described. Introduced and reÿned by Glover <ref type="bibr" target="#b22">[23]</ref><ref type="bibr" target="#b23">[24]</ref><ref type="bibr" target="#b24">[25]</ref>, tabu search is a type of metaheuristic that has been widely used to solve complex combinatorial optimization problems. As with many other metaheuristics, the success of tabu search is in large part due to its ability to steer the search process from getting stuck in a local optimum. In tabu search, this is achieved by allowing a move to a neighboring solution that may result in deterioration in the objective value, but that simultaneously avoids cycling back through previous moves. Speciÿcally, tabu search procedures exploit the short-term memory, i.e. the tabu list, which keeps track of recently visited solutions or their attributes. A move to a neighboring solution is permitted if the neighboring solution is neither contained in the tabu list nor possesses an identical attribute (e.g. objective value) to a solution in that list. However, a move to a neighboring solution could be selected based on some aspiration criterion even if it is prohibited by the tabu list. For example, in most tabu search applications, a particular move may be permitted even if it (or its attribute) is contained in the tabu list as long as such a move will result in a solution that is superior to the best solution obtained thus far.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Overview of the approach</head><p>The tabu search heuristic proposed herein for the TOP can be roughly characterized into three steps: initialization, solution improvement and evaluation. An overview of the approach is depicted in Fig. <ref type="figure" target="#fig_2">2</ref>. The tabu search procedure is called from within an Adaptive Memory Procedure (AMP). Details of the AMP are given in Section 3.2.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Step-by-step description</head><p>In this section, details of the AMP and tabu search procedure are provided, including details of the initialization, improvement and evaluation (Steps A, B and C in Fig. <ref type="figure" target="#fig_2">2</ref>) steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1.">Parameters</head><p>The tabu search procedure employs a set of parameters whose values need to be set before the algorithm is run. These parameters include the number of tabu iterations ( ), penalty factor (Á), neighborhood size (ÿ), tour improvement frequency ( ), retrospect length ( ), tour duration violation coe cient ( ), tour selection parameter (T), the number of randomized improvement iterations (Ä),</p><p>Step A. (Initialization from the AMP) Given current solution S determined in the AMP, set tabu parameters to a small neighborhood stage in which only a small number of neighborhood solutions will be explored.</p><p>Step B. (Improvement) Generate by both random and greedy procedures a number of neighborhood solutions (feasible and infeasible) to the current solution based on the current tabu parameters. Note that in select iterations, the sequence of each of these neighborhood solutions is improved by heuristic procedures.</p><p>Step C. (Evaluation) Select the best non-tabu solution from the candidates generated in Step B (tabu status can be overridden if the best tabu solution is better than the current best feasible solution). Depending on the current neighborhood size and solution quality, set the neighborhood size parameter to large or small stages and return to Step A or B. and tabu tenure interval [Â min ; Â max ]. The deÿnitions of these parameters are described as follows. Their utility will be explained in more detail in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>:</head><p>The maximum non-improvement iterations in the tabu search procedure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Á:</head><p>The penalty coe cient applied to infeasible solutions generated in the tabu search procedure. ÿ:</p><p>The number of neighborhood solutions generated in the tabu search procedure. : Solution tour improvement frequency, i.e. these tours will be improved by a post-optimization procedure every tabu iterations. : Every tabu iterations, the previously selected non-tabu solutions will be examined. If all of them are feasible, penalty coe cient Á will be halved; if all of them are infeasible, Á will be doubled. :</p><p>Tour duration limit L is adjusted to L × (1 + ) in more than one procedure employed in the tabu search procedure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>T:</head><p>The number of candidate tours that will be considered for selection in initial solution construction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ä:</head><p>The number of remove and reinsert iterations for the RVI procedure (Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.3.2). [Â min ; Â max ]:</head><p>Tabu tenure for each recently inserted vertex is randomly chosen from interval Â min to Â max .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2.">Adaptive memory procedure (feeds Step A)</head><p>The tabu search procedure is embedded in an AMP. At the beginning, a certain amount of storage space (adaptive memory) is allotted within the AMP. A set of partial solutions (a partial solution is deÿned herein as a single tour, i.e. one of the required m tours) is generated by heuristic techniques and is stored in the adaptive memory. An initial solution is then constructed by combining select partial solutions, where selection preference is probabilistically biased to those partial solutions with</p><p>Step 1. Generate a set of N vehicle tours and store them in the adaptive memory.</p><p>Each vehicle tour is labeled according to its objective value in terms of total reward. Set the iteration counters: q AMP = 0 and q tabu = 0.</p><p>Step  <ref type="figure" target="#fig_4">4</ref>) and go to Step 3.</p><p>Step 3. Improve solution S by the tabu search algorithm.</p><p>Step 4. Update the solutions maintained in adaptive memory by inserting solution tours of the improved solution S from tabu search determined in Step 3. Remove the worst tours (i.e. tours with smallest objective values) from the adaptive memory so that the number of vehicle tours included is still N. Let q AMP = q AMP +1. If q AMP &lt; λ (the preset total number of the AMP iterations), go to Step 2; otherwise, output the best solution and stop. preferred objective values. The initial solution is improved by the tabu search procedure and the solutions maintained in the adaptive memory will be updated using the components (i.e. vehicle tours) of the improved initial solution. As pointed out by Golden et al. <ref type="bibr" target="#b25">[26]</ref>, the AMP works similarly to genetic algorithms, with the exception that o spring (in AMP, the new initial solutions) can be generated from more than two parents. The idea of using such an AMP was introduced by Rochat and Taillard <ref type="bibr" target="#b26">[27]</ref>. Several published studies show that the AMP is very e ective in providing high quality solutions, especially when implemented in conjunction with tabu search (e.g. <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b27">28]</ref>).</p><p>For recent reviews of the AMP and related methods see Taillard et al. <ref type="bibr" target="#b28">[29]</ref> and Glover <ref type="bibr" target="#b29">[30]</ref>. The AMP process employed in this research e ort is described in Fig. <ref type="figure" target="#fig_3">3</ref>, where we see that the tabu search procedure is called in Step 3.</p><p>In Step 2 of Fig. <ref type="figure" target="#fig_3">3</ref>, the algorithm attempts to construct an initial solution by ÿrst combining available tours stored in the adaptive memory. Note that this does not guarantee that a complete solution with m tours will be constructed. If the solution built by combining the tours in the adaptive memory has fewer than m tours, new vehicle tours will be constructed using vertices that have not yet been visited in the current partial solution until it contains m vehicle tours and no more vertices can be inserted in the new tours without violating duration limitations. This general framework for initial solution construction was proposed by Rochat and Taillard <ref type="bibr" target="#b26">[27]</ref> and successfully implemented to solve several VRP-related problems (e.g. <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b30">31]</ref>).</p><p>As described in Step 2 of Fig. <ref type="figure" target="#fig_3">3</ref>, tour selection in initial solution construction is probabilistically biased to those partial solutions with higher objective values. This can be implemented in several di erent ways. The implementation employed herein is as follows. T partial tours with highest rewards are sorted in a non-increasing order. Each partial tour i (i = 1; 2; : : : ; T ) is assigned an index value Index(i) = i j=1 R( j )= T j=1 R( j ), where R( j ) is the total reward of tour j . Let Index(0) = 0. During tour selection, a random number between 0 and 1 is generated. If this number is between Index(i -1) and Index(i), then tour i is chosen.</p><p>The process of generating a set of N initial vehicle tours in Step 1 of the AMP is described in greater detail in Fig. <ref type="figure" target="#fig_4">4</ref>. This is a modiÿed cheapest insertion procedure, whose generic form was proposed for the TSP by Rosenkrantz et al. <ref type="bibr" target="#b31">[32]</ref>. Speciÿcally, two modiÿcations are made. First, the seed vertex (i.e. the ÿrst vertex other than depot 0 to be inserted in each tour) in each tour is randomly selected to diversify produced solutions; second, the evaluation function for candidate vertices is modiÿed such that instead of minimizing total added duration due to inclusion of each additional vertex, we minimize the ratio of added duration to additional reward. To further diversify the solution tours stored in the adaptive memory, a number of alternative solutions may be generated using di erent evaluation functions. In Fig. <ref type="figure" target="#fig_4">4</ref>, it was assumed that evaluation function (10a) was employed:</p><formula xml:id="formula_13">(d pj + d jq -d pq + s j )=r j :<label>(10a)</label></formula><p>Instead, one of the following functions may be employed in place of (10a):</p><formula xml:id="formula_14">(d pj + d jq -d pq + s j )= √ r j ;<label>(10b)</label></formula><formula xml:id="formula_15">d pj + d jq -d pq + s j =r j ;<label>(10c)</label></formula><formula xml:id="formula_16">d pj + d jq -d pq + s j :<label>(10d)</label></formula><p>Note that one pass of the procedure deÿned in Fig. <ref type="figure" target="#fig_4">4</ref> will create and store m feasible vehicle tours in the adaptive memory; thus, executing this procedure N=m times will create at least N vehicle tours.</p><p>To take advantage of stored partial or complete solutions in the adaptive memory, these solutions must be sorted according to their objective values. A linked list structure is employed to store the initial vehicle tours, which allows for insertion and deletion operations. There are three components for each tour in the linked list: the unit for recording the tour reward, a pointer to the actual address of the stored tour, and the elements of the stored tour. This is shown in Fig. <ref type="figure" target="#fig_5">5</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3.">Neighborhood generation and improvement (Step B) in the tabu search</head><p>Step B of the tabu search procedure focuses on the generation of neighborhood solutions and improving these solutions. In this process, infeasible solutions (i.e. solutions for which the tour limitation constraint is not enforced) are permitted. Permitting intermediate infeasible solutions may aid in moving the search process out of a local optimum. First introduced by Gendreau et al. <ref type="bibr" target="#b32">[33]</ref>, empirical results in several di erent contexts (and also in our numerical experiments) have shown that this strategy is very e ective in providing high-quality solutions. In order to guide infeasible solutions to improved feasible solutions through neighborhood moves, a quasi-reward is used in the tabu search heuristic. Here, a quasi-reward of a solution is deÿned as its true total reward less a penalty cost that is incurred if at least one vehicle route contained in this solution has a duration that is greater than L. The mathematical expression of quasi-reward is presented in expression <ref type="bibr" target="#b10">(11)</ref> of Fig. <ref type="figure" target="#fig_9">9</ref>. We use a quasi-reward with an adaptively adjusted penalty factor to guide the search process that explores both feasible and infeasible solutions.</p><p>In some tabu search implementations (e.g. <ref type="bibr" target="#b33">[34]</ref>), the solution improvement phase is divided into two stages: one stage explores a small number of neighborhood solutions (referred to herein as the small neighborhood stage), while the other explores a large number of neighborhood solutions (referred to herein as the large neighborhood stage). The search process enters the large neighborhood stage when no improvement is found in the small neighborhood stage. For example, Barbarosoglu and Ozgur's procedure does not return to the small neighborhood stage until a new initial solution is generated and the tabu search is restarted.</p><p>We employ a method of switching between small and large neighborhood exploration stages in our implementation. That is, during the stage where a large number of neighborhood solutions are generated, once an improved solution (over the current best feasible solution) is found, the algorithm immediately returns to the stage where a small number of neighborhood solutions are generated. The algorithm returns to the small neighborhood stage, because an improvement in the best available solution may indicate that the search process has successfully moved out of the current local optimum. Intuitively, one would expect that if the search process stays in the large neighborhood stage (i.e. does not return to small neighborhood stage), the result obtained should be much better than alternating between the two stages. However, empirical results show that alternating between small and large neighborhood stages during the course of the tabu search enables the search to evolve in an e cient way without leading to solutions that degrade in solution quality (see computational experiments (Section 4) for more details). Thus, this tabu search procedure is implemented in such a way that it alternates between small and large neighborhood stages during solution improvement (Step B Fig. <ref type="figure" target="#fig_2">2</ref>). Note that this alternation in neighborhood solution exploration stages is related to variable depth search (e.g. <ref type="bibr" target="#b34">[35]</ref>) and variable neighborhood search <ref type="bibr" target="#b35">[36]</ref>.</p><p>In this step, the algorithm explores various neighborhood moves, such as exchange of vertices that are included in tours with those that are not, exchange of vertices between two di erent tours, changes in the sequencing of vertices in a tour and addition of vertices not included in tours to existing tours. Both random and greedy procedures are employed in neighbor solution exploration.</p><p>3.2.3.1. Neighborhood structure and generating neighborhood solutions. The tabu search procedure starts from an initial solution S constructed in the AMP. In one tabu iteration, neighbors of this initial solution will be generated and improved and the best non-tabu solution from the generated neighborhood solutions will be selected as the initial solution for the next iteration. Similar to most tabu search implementations, a tabu solution will be selected if it is better than the best solution obtained in all previous iterations. Neighbors (or neighborhood solutions) are deÿned herein as solution tours that have at least one vertex di erent from the initial solution. If a new solution contains the same set of vertices as the initial solution, but the sequence of these vertices di ers between tours, they are not considered neighbors in our implementation.</p><p>To generate neighborhood solutions of initial solution S (let S be the set of vertices not included in S), we consider inserting additional vertices into S and exchanging vertices between S and S, as discussed next. Similar neighborhood moves have also been used in other studies, e.g. for the vehicle routing problem with time windows <ref type="bibr" target="#b36">[37]</ref>.</p><p>(1) Insert additional vertices in S. At each iteration, two vehicle tours of S will be randomly selected. Initially, as many vertices of S as possible (given the tour duration limitation constraints) are inserted in each of the selected tours. The insertion is conducted via a procedure that is similar to the cheapest insertion for the TSP, as described in Fig. <ref type="figure" target="#fig_1">6</ref> (for tour k ).</p><p>(2) Exchange vertices between select tours from (1) and S. For each select tour, randomly choose some vertices and remove them from the tour (the number of vertices to be removed can be chosen randomly, as in our experiments). And for each such tour, randomly insert some vertices from set S until the total duration of the select tour is no less than L(1 + ). Insert these vertices in the location that leads to the minimal increase in tour duration. That is, for a randomly selected x ∈ S and tour ; x is inserted in according to the insertion criterion described in Step 2 of Fig. <ref type="figure" target="#fig_1">6</ref>. 3.2.3.2. Tour improvement. The quality of a feasible TOP solution is solely dependent on the total reward of its constituent vehicle tours (i.e. which vertices have been included in the tours) and not on the duration of each constituent tour. However, improving vertex sequences on solution tours such that the minimum duration is obtained is crucial for achieving high quality solutions. A shorter solution tour is more likely to have more vertices included in successive iterations, and therefore, a higher potential reward at future iterations. Thus, at each iteration, a series of tour improvement procedures that consider tour duration are selectively applied. These procedures include balancing the tours, exchanging vertices between tours, and randomly removing and re-inserting vertices within a tour, as described next.</p><p>(1) Balance between longer and shorter tours. For randomly selected tours 1 and 2 from the current solution S, the following improvement attempts are made. If D( 1 ) ¿ D( 2 ), scan 1 to see if any vertex can be removed from 1 and be inserted in 2 such that the updated total duration of 1 and 2 is decreased. If D( 1 ) 6 D( 2 ), scan 2 to see if any vertex can be removed from 2 and inserted in 1 such that the updated total duration of 1 and 2 is decreased.</p><p>(2) Exchange of vertices between two tours. For randomly selected tours 1 and 2 from the current solution S, this improvement procedure makes one-vertex exchanges between tours 1 and 2 . Starting with the ÿrst vertex on 1 , scan from the ÿrst to last vertex on 2 to examine if an exchange of the ÿrst vertex on 1 with the current vertex on 2 makes the total duration of the two tours shorter. The exchange is made immediately when such a vertex on 2 is found. Then the procedure is repeated with the second vertex on 1 , scanning vertices on 2 . This procedure stops when all one-vertex exchanges between 1 and 2 leading to improved tour duration have been performed.</p><p>(3) A random vertex-insertion (RVI) procedure. For a select vehicle tour, , of duration D( ), this semi-greedy random insertion approach randomly removes a subset of vertices from the tour and re-inserts them in the resulting partial tour in a greedy way. This was motivated by the empirical results of Hart and Shogan <ref type="bibr" target="#b37">[38]</ref>. Hart and Shogan recognized that there are performance beneÿts to reverting to a partial solution and reapplying a heuristic. Moreover, they found that additional beneÿts were achieved by incorporating randomization within the heuristic. A similar remove-and-insert procedure is proposed in Shaw <ref type="bibr" target="#b38">[39]</ref> in the context of improving solution routes for the VRP with time windows. A step-by-step description of this approach is shown in Fig. <ref type="figure" target="#fig_7">7</ref>, where Ä is the preset parameter used to indicate the maximum number of remove-and-reinsert iterations in the RVI. Note that by adjusting the value of Ä, the computational time used for solution improvement in the RVI can be easily controlled. To reduce computational time, the RVI is applied once every iterations to select tours in the tabu search procedure (see Fig. <ref type="figure" target="#fig_8">8</ref> for more detail).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3.3.">Step-by-step description of</head><p>Step B in the tabu search procedure. Given the description in Sections 3.2.3.1 and 3.2.3.2, a more detailed account of Step B in the tabu search procedure can be provided, as given in Fig. <ref type="figure" target="#fig_8">8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4.">Tour evaluation and selection (Step C) of the tabu search procedure</head><p>Neighborhood solutions generated in Step B of the tabu search procedure will be evaluated in Step C. Speciÿcally, in Step C, the best non-tabu solution will be selected as the new initial solution for the next tabu iteration (see Fig. <ref type="figure" target="#fig_9">9</ref>). Note that in Step 3, the conditions under which the solution improvement procedure in the tabu search heuristic switches between small and large neighborhood stages are presented. These conditions are based on the discussion given in Section 3.2.3.</p><p>By allowing neighborhood moves that may result in deterioration in the objective value and by prohibiting cycling to previous moves, tabu search is able to guide the search process from being caught in local optima. More speciÿcally, this is achieved through a tabu list that prevents a move made at iteration q from being repeated until iteration (q + Â), where Â is the tabu duration that may be set deterministically or chosen randomly on a pre-speciÿed interval. In this study, whenever a vertex is inserted in a solution tour at iteration q, it may not be removed from that tour until iteration (q + Â), where Â is randomly chosen on interval [Â min ; Â max ]. Similar to most tabu search procedures in the literature, in this tabu search algorithm, a move will not be accepted if it is forbidden in the tabu list unless its tabu status is overridden by the aspiration criterion whenever this move results in a better solution than the best found thus far.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Computational experiments</head><p>The tabu search algorithm described in this paper was examined on 320 test problems published in the literature <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b12">13]</ref>. The results from the tabu search were compared with those produced by Chao et al.'s 5-step algorithm and a version of Tsiligirides' stochastic heuristic for the STSP that was extended for the TOP by Chao et al. <ref type="bibr" target="#b1">[2]</ref>. This tabu search heuristic was implemented in C++ and run on DEC AlphaServer 1200/533 and DEC Alpha XP1000 computers with 1 gigabyte ram and 1:5 gigabytes swap, each running Digital 4.0E operating system, using Digital's C++ compiler.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Description of the test problems</head><p>There are six data sets in the test problems, each with more than 30 vertices: n = 32 (data set 1), 33 (data set 3), 100 (data set 4), 66 (data set 5), 64 (data set 6) and 102 (data set 7). All test problems are provided in Chao <ref type="bibr" target="#b39">[40]</ref>. Data sets 1 and 3 originated from Tsiligirides' <ref type="bibr" target="#b12">[13]</ref> work for the OP. With the exception of data sets 5 and 6, the locations of vertices in these data sets were randomly generated. In data sets 5 and 6, the locations of the vertices take on a square shape and a diamond shape, respectively, and vertices further away from the starting and ending points have larger rewards than those closer in (see <ref type="bibr" target="#b39">[40]</ref> for more information).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Computational results</head><p>The computational results of the tabu search algorithm on the 320 test problems were compared with published results obtained by other heuristics on the same problems: Tabu: The tabu search heuristic described in this paper; CGW: Chao et al.'s 5-step heuristic <ref type="bibr" target="#b1">[2]</ref>; TSA: A version of Tsiligirides' heuristic extended for the TOP by Chao et al. <ref type="bibr" target="#b1">[2]</ref>. As is common in most metaheuristic approaches, we set the parameters used in the algorithm before running the experiments. There are two sets of parameters employed in this tabu search algorithm: one for the small neighborhood stage and the other for the large neighborhood stage, both required in solution improvement (Step B of Fig. <ref type="figure" target="#fig_2">2</ref>). These two sets of parameters used in the experiments for randomly generated problems (datasets 1, 3, 4 and 7) are as follows:</p><p>( 1 ; ÿ 1 ; T; 1 ; 1 ; 1 ; Ä 1 ; Â min ; Â max ) = (n; 2n; 30; 4; 6; 0:02; 5; 5; 10); ( 2 ; ÿ 2 ; T; 2 ; 2 ; 2 ; Ä 2 ; Â min ; Â max ) = (n; 8n; 30; 4; 6; 0:05; 7; 6; 12) while the parameters for the square-shaped and diamond-shaped problems are:</p><p>( 1 ; ÿ 1 ; T; 1 ; 1 ; 1 ; Ä 1 ; Â min ; Â max ) = (n; 2n; 30; 4; 6; 0; 5; 5; 10); ( 2 ; ÿ 2 ; T; 2 ; 2 ; 2 ; Ä 2 ; Â min ; Â max ) = (n; 8n; 30; 4; 6; 0; 7; 6; 12): These parameters were determined based on a small number of preliminary runs. This tabu search heuristic is embedded in the AMP procedure, where parameters = 3; N = 1500 and evaluation function (10a) are used, as described in Section 3.2.2. Other values for and N may be chosen. Generally, the tabu search heuristic with larger and N values will likely obtain better solutions, but with increased computational e ort. Note that the only di erence in the two parameter sets for computational experiments is parameter . By setting a positive with value greater than zero, neighborhood solutions generated in the tabu search may be infeasible. It was observed during preliminary experiments that allowing infeasibility was more useful for random problem sets (i.e. problem sets 1, 3, 4 and 7) than it was for other problem sets (i.e. problem sets 5 and 6). This led to the decision to employ di erent parameter settings for each of the two problem classes.</p><p>Recall from the algorithm description given in Section 3, the proposed algorithm alternates between small and large neighborhood stages in solution improvement, which is di erent from many other tabu search implementations (e.g. <ref type="bibr" target="#b33">[34]</ref>). To conÿrm that alternating between these two neighborhood stages can reduce computation time without degrading solution quality, a comparison tabu search procedure was coded that utilized the same parameters (two sets, one for the small neighborhood stage and the other for the large neighborhood stage) as the tabu search algorithm described in this paper, but separated the small and large neighborhood stages in solution improvement. That is, for the comparison tabu search, the search process enters the large neighborhood stage when no improved solutions can be found in the small neighborhood stage and does not return to the small neighborhood stage until a new initial solution is generated and the tabu search is restarted, as was implemented by <ref type="bibr" target="#b33">[34]</ref>.</p><p>In Table <ref type="table" target="#tab_1">1</ref>, the two implementations are compared based on the results of test runs on select problems from data sets 4 and 7. These selected problems have comparatively large m and L values, and thus, are likely to be more computationally demanding than other problems with smaller values of m and L in the same data sets. The results for the comparison tabu search procedure are recorded under the column "Comparison Tabu". We see from the test runs that for the comparable average solution values ("Comparison Tabu" only improves average rewards by 0.1% and 0.5%, respectively), the implementation with the separated small and large neighborhood stages has incurred signiÿcantly more computational time (increase of 29.1% and 55.7%, respectively). This conÿrms the conjecture that alternating between the small and large neighborhood stages can be an e cient way of implementing tabu search algorithms without signiÿcant loss in solution quality.</p><p>Average solution values for the test problems employing this more e cient implementation with respect to changes in the neighborhood size are summarized in Table <ref type="table" target="#tab_3">2</ref>. These average values were obtained based on the results of a single pass of the proposed tabu search algorithm with ÿxed parameters and compared with the results from Chao et al. <ref type="bibr" target="#b1">[2]</ref>. For example, there are 17 problems, each with a di erent L for data set 4 (n = 100) with four vehicles (i.e. m = 4). Thus, the average results (reward = 785 for Tabu, 766 for CGW and 713 for TSA) provided in  a Average based on the results in Tables <ref type="table" target="#tab_4">3</ref> and<ref type="table">4</ref>. b DEC Alpha XP1000 Computer (s). c SUN 4/370 Workstation (s, <ref type="bibr" target="#b1">[2]</ref>).</p><p>the nearest integers, similar to the rounding used in presenting similar results in Chao et al. <ref type="bibr" target="#b1">[2]</ref>. Detailed solution values for these problems are provided in Tables <ref type="table" target="#tab_4">3</ref><ref type="table">4</ref><ref type="table" target="#tab_5">5</ref><ref type="table" target="#tab_6">6</ref><ref type="table" target="#tab_7">7</ref><ref type="table">8</ref>(Appendix A).</p><p>As is shown in Table <ref type="table" target="#tab_3">2</ref>, the tabu search heuristic provides best average solutions in 14 out of 18 problem categories. For the remaining four problem categories, the tabu search procedure obtained close to the best average solution values. The CGW heuristic provides six best average solutions (two tied in average value with the tabu search heuristic). None of the average solutions of the TSA heuristic is ranked best, as shows that the TSA heuristic is inferior to both the CGW heuristic and the proposed tabu search heuristic. More speciÿcally, out of the 12 random problem categories (i.e. where vertex locations and rewards are randomly assigned), the proposed tabu search procedure obtained 11 best average solution values (the only exception is for the smallest problem with 32 vertices and three vehicles). The results in Table <ref type="table" target="#tab_3">2</ref> clearly show that the tabu search heuristic described in this paper outperforms the CGW and TSA heuristics in solution quality, especially for randomly generated problem cases.</p><p>Note that better solutions can sometimes be obtained through sensitivity analysis (where the parameter settings are varied). The corresponding best results for ÿve of the largest problems in each category with n ¿ 64 obtained during this process are reported in Table <ref type="table" target="#tab_8">9</ref> in Appendix B. Of all 60 problem instances, the proposed tabu search heuristic obtained 55 best-known results, of which only 12 solution values are tied with the previous best results. Some of the best solutions found  by the proposed tabu search heuristic signiÿcantly improve the previous best results (e.g. for the problem in data set 4 with m = 4 and L = 50:0, the previous best solution has been improved 9.8%). Solutions obtained by the proposed tabu search procedure are robust, as is evidenced by the fact that there is very small variation (less than 2% in most cases) between the best results (Table <ref type="table" target="#tab_8">9</ref>) and the one-run results (Tables <ref type="table" target="#tab_4">3</ref><ref type="table">4</ref><ref type="table" target="#tab_5">5</ref><ref type="table" target="#tab_6">6</ref><ref type="table" target="#tab_7">7</ref><ref type="table">8</ref>). Little variation in solution quality was also observed in these experiments when compared across parameter settings. The c.p.u. times reported under column "cpu max " in Table <ref type="table" target="#tab_3">2</ref> are the maximum c.p.u. times in seconds of all the problems in each problem category. A direct analysis of running times is di cult, because various methods were implemented using di erent programming languages and tested on di erent computers. However, since the DEC Alpha machine is considered signiÿcantly faster than Sun 4/370, the proposed tabu search heuristic might be more time-consuming than the CGW heuristic. In a related study <ref type="bibr" target="#b40">[41]</ref>, modiÿcations were proposed that signiÿcantly reduced the computational requirements of an extension of this tabu search heuristic with very small sacriÿce in solution quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions</head><p>A tabu search heuristic embedded in an adaptive memory procedure for the TOP is described in this paper. Several features are incorporated in the proposed tabu search heuristic: (1) the AMP and its mechanism for updating stored solutions allow a comparatively large pool of good and diversiÿed solutions to be stored and used during the search process; (2) alternating between small and large neighborhood stages during the tabu search course enables the search to evolve in an e cient way without signiÿcant degradation in solution quality; and (3) both random and greedy procedures are employed in neighborhood solution exploration. These features are largely responsible for the e ciency and e ectiveness of this tabu search algorithm in the computational experiments.</p><p>The structure of the proposed tabu search is exible, allowing for further improvements and the use of new extensions. For example, one could use a solution procedure that addresses the set packing problem as a post-optimization technique to improve solutions that are produced by the tabu search procedure (see, e.g. <ref type="bibr" target="#b41">[42]</ref>). In addition, no signiÿcant revision in neighborhood structure would be necessary for the current algorithm to consider more realistic problem features such as time-dependent customer rewards and stochastic service or travel times. By employing a less vigorous set of parameters and providing guidance criteria for vertex selection in the algorithm, the search process will be able to tackle some large size problems. In a related work <ref type="bibr" target="#b40">[41]</ref>, this tabu search procedure was modiÿed to solve a real-world application with more than 2000 vertices. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. An illustrative example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>ik 6 L</head><label>6</label><figDesc>(k = 1; 2; : : : ; m);</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Tabu search procedure overview.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Overview of the AMP.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Generating partial solutions for the AMP.</figDesc><graphic coords="9,132.46,95.61,276.00,114.62" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Data structure for storing feasible solutions in the adaptive memory.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Insertion procedure.</figDesc><graphic coords="11,132.46,95.69,276.00,95.54" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. RVI procedure for tour improvement.</figDesc><graphic coords="12,132.46,95.59,276.00,98.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Step B of the tabu search procedure.</figDesc><graphic coords="13,132.46,95.27,276.00,255.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Step C of the tabu search procedure.</figDesc><graphic coords="14,125.96,95.37,288.60,270.86" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>2. Let candidate list, CL, include all N tours in the adaptive memory. Construct a new TOP solution S by combining ≤ m vehicle tours in the adaptive memory in an attempt to produce a feasible solution to the TOP. Assign a probability of being selected to each tour based on its objective value. If tour r is selected as one of the m vehicle tours of solution S, remove from CL all tours having at least one vertex in common with that of tour r. Repeat this process until CL = φ. If the number of tours in S is equal to m, go to Step 3; otherwise, construct (from the prior partial solution) new vehicle tours (until the number of tours in S equals m) using the vertices that are not yet included in S (similar to Step 2 of Figure</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell>Results for test runs</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu</cell><cell></cell><cell>Comparison Tabu</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c.p.u. a</cell><cell>Reward</cell><cell>c.p.u. a</cell></row><row><cell>102</cell><cell>4</cell><cell>100.0</cell><cell>1063</cell><cell>148.3</cell><cell>1067</cell><cell>196.9</cell></row><row><cell></cell><cell></cell><cell>95.0</cell><cell>1022</cell><cell>164.1</cell><cell>1021</cell><cell>230.4</cell></row><row><cell></cell><cell></cell><cell>90.0</cell><cell>966</cell><cell>197.6</cell><cell>964</cell><cell>262.3</cell></row><row><cell></cell><cell></cell><cell>85.0</cell><cell>905</cell><cell>184.7</cell><cell>900</cell><cell>209.1</cell></row><row><cell></cell><cell></cell><cell>80.0</cell><cell>832</cell><cell>149.7</cell><cell>838</cell><cell>191.4</cell></row><row><cell>Average</cell><cell></cell><cell></cell><cell>957</cell><cell>168.9</cell><cell>958</cell><cell>218.0</cell></row><row><cell cols="2">Average di erence from Tabu</cell><cell></cell><cell></cell><cell></cell><cell>0:1%</cell><cell>29:1%</cell></row><row><cell>100</cell><cell>4</cell><cell>60.0</cell><cell>1255</cell><cell>243.5</cell><cell>1254</cell><cell>445.9</cell></row><row><cell></cell><cell></cell><cell>57.5</cell><cell>1203</cell><cell>160.4</cell><cell>1221</cell><cell>457.1</cell></row><row><cell></cell><cell></cell><cell>55.0</cell><cell>1165</cell><cell>144.9</cell><cell>1159</cell><cell>410.7</cell></row><row><cell></cell><cell></cell><cell>52.5</cell><cell>1127</cell><cell>330.8</cell><cell>1108</cell><cell>238.5</cell></row><row><cell></cell><cell></cell><cell>50.0</cell><cell>1056</cell><cell>247.2</cell><cell>1094</cell><cell>203.0</cell></row><row><cell>Average</cell><cell></cell><cell></cell><cell>1161</cell><cell>225.4</cell><cell>1167</cell><cell>351.0</cell></row><row><cell cols="2">Average di erence from Tabu</cell><cell></cell><cell></cell><cell></cell><cell>0:5%</cell><cell>55:7%</cell></row></table><note><p>a DEC AlphaServer 1200/533 computer (seconds).</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Table 2 are average values on the solutions for these 17 problems. Average solution values in Table 2 are rounded to</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2</head><label>2</label><figDesc>Summary of one-run results</figDesc><table><row><cell>Set</cell><cell>n</cell><cell>m</cell><cell>Tabu</cell><cell></cell><cell></cell><cell>CGW</cell><cell></cell><cell></cell><cell>TSA</cell><cell></cell><cell>Tabu vs. CGW</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c:p:u: max</cell><cell>b</cell><cell>Reward</cell><cell>c:p:u: max</cell><cell>c</cell><cell>Reward</cell><cell>c:p:u: max</cell><cell>c</cell><cell>+</cell><cell>-</cell></row><row><cell>1 a</cell><cell>32</cell><cell>4</cell><cell>138</cell><cell>1.5</cell><cell></cell><cell>130</cell><cell>6.8</cell><cell></cell><cell>133</cell><cell>96.9</cell><cell>3</cell><cell>0</cell></row><row><cell>3 a</cell><cell>33</cell><cell>4</cell><cell>353</cell><cell>0.8</cell><cell></cell><cell>337</cell><cell>2.6</cell><cell></cell><cell>340</cell><cell>119.3</cell><cell>3</cell><cell>0</cell></row><row><cell>4</cell><cell>100</cell><cell>4</cell><cell>785</cell><cell>136.8</cell><cell></cell><cell>766</cell><cell>674.9</cell><cell></cell><cell>713</cell><cell>1358.0</cell><cell>13</cell><cell>2</cell></row><row><cell>5</cell><cell>6 6</cell><cell>4</cell><cell>699</cell><cell>22.6</cell><cell></cell><cell>696</cell><cell>141.2</cell><cell></cell><cell>675</cell><cell>454.4</cell><cell>7</cell><cell>3</cell></row><row><cell>6</cell><cell>64</cell><cell>4</cell><cell>713</cell><cell>19.9</cell><cell></cell><cell>716</cell><cell>109.6</cell><cell></cell><cell>624</cell><cell>295.0</cell><cell>1</cell><cell>1</cell></row><row><cell>7</cell><cell>102</cell><cell>4</cell><cell>515</cell><cell>101.0</cell><cell></cell><cell>497</cell><cell>482.9</cell><cell></cell><cell>481</cell><cell>1059.9</cell><cell>13</cell><cell>1</cell></row><row><cell>1 a</cell><cell>32</cell><cell>3</cell><cell>166</cell><cell>2.6</cell><cell></cell><cell>170</cell><cell>2.9</cell><cell></cell><cell>168</cell><cell>120.8</cell><cell>1</cell><cell>3</cell></row><row><cell>3 a</cell><cell>33</cell><cell>3</cell><cell>634</cell><cell>3.3</cell><cell></cell><cell>614</cell><cell>9.9</cell><cell></cell><cell>606</cell><cell>163.3</cell><cell>4</cell><cell>1</cell></row><row><cell>4</cell><cell>100</cell><cell>3</cell><cell>844</cell><cell>317.4</cell><cell></cell><cell>815</cell><cell>707.3</cell><cell></cell><cell>773</cell><cell>1563.0</cell><cell>15</cell><cell>2</cell></row><row><cell>5</cell><cell>6 6</cell><cell>3</cell><cell>776</cell><cell>51.7</cell><cell></cell><cell>776</cell><cell>157.8</cell><cell></cell><cell>762</cell><cell>516.1</cell><cell>7</cell><cell>4</cell></row><row><cell>6</cell><cell>64</cell><cell>3</cell><cell>787</cell><cell>37.2</cell><cell></cell><cell>788</cell><cell>135.7</cell><cell></cell><cell>707</cell><cell>336.7</cell><cell>1</cell><cell>2</cell></row><row><cell>7</cell><cell>102</cell><cell>3</cell><cell>593</cell><cell>143.2</cell><cell></cell><cell>586</cell><cell>557.6</cell><cell></cell><cell>554</cell><cell>1191.5</cell><cell>13</cell><cell>3</cell></row><row><cell>1 a</cell><cell>32</cell><cell>2</cell><cell>135</cell><cell>1.3</cell><cell></cell><cell>130</cell><cell>4.0</cell><cell></cell><cell>130</cell><cell>84.3</cell><cell>1</cell><cell>0</cell></row><row><cell>3 a</cell><cell>33</cell><cell>2</cell><cell>441</cell><cell>6.6</cell><cell></cell><cell>433</cell><cell>15.4</cell><cell></cell><cell>438</cell><cell>164.8</cell><cell>6</cell><cell>2</cell></row><row><cell>4</cell><cell>100</cell><cell>2</cell><cell>895</cell><cell>796.7</cell><cell></cell><cell>876</cell><cell>934.8</cell><cell></cell><cell>844</cell><cell>1748.2</cell><cell>16</cell><cell>3</cell></row><row><cell>5</cell><cell>66</cell><cell>2</cell><cell>887</cell><cell>71.3</cell><cell></cell><cell>891</cell><cell>193.7</cell><cell></cell><cell>886</cell><cell>566.9</cell><cell>8</cell><cell>8</cell></row><row><cell>6</cell><cell>6 4</cell><cell>2</cell><cell>818</cell><cell>53.8</cell><cell></cell><cell>815</cell><cell>150.1</cell><cell></cell><cell>746</cell><cell>420.2</cell><cell>3</cell><cell>1</cell></row><row><cell>7</cell><cell>102</cell><cell>2</cell><cell>634</cell><cell>432.6</cell><cell></cell><cell>634</cell><cell>841.4</cell><cell></cell><cell>587</cell><cell>1333.3</cell><cell>9</cell><cell>5</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3</head><label>3</label><figDesc></figDesc><table><row><cell cols="3">Results for data set 1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu</cell><cell></cell><cell>CGW</cell><cell></cell><cell>TSA</cell><cell></cell><cell>Tabu vs.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c.p.u. a</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>CGW</cell></row><row><cell>32</cell><cell>4</cell><cell>18.8</cell><cell>175</cell><cell>1.5</cell><cell>160</cell><cell>6.8</cell><cell>165</cell><cell>96.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>18.2</cell><cell>165</cell><cell>1.3</cell><cell>160</cell><cell>1.2</cell><cell>160</cell><cell>95.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>12.5</cell><cell>75</cell><cell>0.8</cell><cell>70</cell><cell>0.5</cell><cell>75</cell><cell>55.4</cell><cell>+</cell></row><row><cell></cell><cell>3</cell><cell>25.0</cell><cell>220</cell><cell>1.5</cell><cell>215</cell><cell>2.7</cell><cell>215</cell><cell>120.8</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>24.3</cell><cell>205</cell><cell>2.6</cell><cell>215</cell><cell>2.8</cell><cell>210</cell><cell>117.8</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>21.7</cell><cell>170</cell><cell>1.4</cell><cell>175</cell><cell>2.9</cell><cell>170</cell><cell>100.2</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>13.3</cell><cell>70</cell><cell>0.8</cell><cell>75</cell><cell>1.0</cell><cell>75</cell><cell>60.4</cell><cell>-</cell></row><row><cell></cell><cell>2</cell><cell>23.0</cell><cell>135</cell><cell>1.3</cell><cell>130</cell><cell>4.0</cell><cell>130</cell><cell>84.3</cell><cell>+</cell></row><row><cell cols="4">a DEC Alpha XP1000 Computer (S).</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">b SUN 4/370 Workstation (s, [2]).</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Table 4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">Results for data set 3</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu</cell><cell></cell><cell>CGW</cell><cell></cell><cell>TSA</cell><cell></cell><cell>Tabu vs.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c.p.u. a</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>CGW</cell></row><row><cell>33</cell><cell>4</cell><cell>22.5</cell><cell>560</cell><cell>0.7</cell><cell>530</cell><cell>2.6</cell><cell>520</cell><cell>119.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>310</cell><cell>0.8</cell><cell>300</cell><cell>1.2</cell><cell>310</cell><cell>89.6</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>10.0</cell><cell>190</cell><cell>0.6</cell><cell>180</cell><cell>1.9</cell><cell>190</cell><cell>62.6</cell><cell>+</cell></row><row><cell></cell><cell>3</cell><cell>36.7</cell><cell>750</cell><cell>3.3</cell><cell>720</cell><cell>3.4</cell><cell>710</cell><cell>163.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>31.7</cell><cell>680</cell><cell>3.1</cell><cell>630</cell><cell>6.4</cell><cell>630</cell><cell>149.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>640</cell><cell>2.1</cell><cell>620</cell><cell>3.4</cell><cell>610</cell><cell>136.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>28.3</cell><cell>590</cell><cell>2.0</cell><cell>580</cell><cell>9.9</cell><cell>570</cell><cell>134.5</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>510</cell><cell>2.0</cell><cell>520</cell><cell>7.8</cell><cell>510</cell><cell>122.0</cell><cell>-</cell></row><row><cell></cell><cell>2</cell><cell>47.5</cell><cell>760</cell><cell>5.4</cell><cell>750</cell><cell>14.3</cell><cell>740</cell><cell>164.8</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>42.5</cell><cell>690</cell><cell>6.6</cell><cell>680</cell><cell>15.4</cell><cell>680</cell><cell>150.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>490</cell><cell>1.5</cell><cell>470</cell><cell>2.4</cell><cell>500</cell><cell>117.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>27.5</cell><cell>460</cell><cell>3.8</cell><cell>440</cell><cell>5.8</cell><cell>460</cell><cell>105.6</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>410</cell><cell>3.1</cell><cell>390</cell><cell>2.5</cell><cell>400</cell><cell>100.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>290</cell><cell>1.2</cell><cell>300</cell><cell>3.5</cell><cell>290</cell><cell>84.5</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>17.5</cell><cell>250</cell><cell>0.8</cell><cell>260</cell><cell>1.9</cell><cell>250</cell><cell>75.0</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>12.5</cell><cell>180</cell><cell>1.2</cell><cell>170</cell><cell>0.8</cell><cell>180</cell><cell>63.4</cell><cell>+</cell></row></table><note><p><p><p>a DEC Alpha XP1000 Computer (S). b SUN 4/370 Workstation (s,</p><ref type="bibr" target="#b1">[2]</ref></p>).</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5</head><label>5</label><figDesc></figDesc><table><row><cell cols="3">Results for data set 4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu</cell><cell></cell><cell>CGW</cell><cell></cell><cell>TSA</cell><cell></cell><cell>Tabu vs.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c.p.u. a</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>CGW</cell></row><row><cell>100</cell><cell>4</cell><cell>60.0</cell><cell>1255</cell><cell>136.8</cell><cell>1253</cell><cell>435.4</cell><cell>1160</cell><cell>1358.0</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>57.5</cell><cell>1243</cell><cell>86.6</cell><cell>1230</cell><cell>674.9</cell><cell>1122</cell><cell>1298.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>55.0</cell><cell>1165</cell><cell>79.7</cell><cell>1155</cell><cell>345.9</cell><cell>1061</cell><cell>1231.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>52.5</cell><cell>1124</cell><cell>115.5</cell><cell>1084</cell><cell>282.7</cell><cell>1011</cell><cell>1157.8</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>50.0</cell><cell>1056</cell><cell>134.5</cell><cell>996</cell><cell>449.2</cell><cell>968</cell><cell>1089.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>47.5</cell><cell>1014</cell><cell>112.8</cell><cell>995</cell><cell>427.1</cell><cell>913</cell><cell>1032.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>45.0</cell><cell>977</cell><cell>111.9</cell><cell>932</cell><cell>324.8</cell><cell>891</cell><cell>967.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>42.5</cell><cell>910</cell><cell>78.5</cell><cell>895</cell><cell>313.3</cell><cell>807</cell><cell>897.0</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>40.0</cell><cell>875</cell><cell>96.2</cell><cell>847</cell><cell>116.3</cell><cell>773</cell><cell>839.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>37.5</cell><cell>819</cell><cell>80.9</cell><cell>770</cell><cell>208.1</cell><cell>714</cell><cell>752.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>35.0</cell><cell>732</cell><cell>63.8</cell><cell>697</cell><cell>197.6</cell><cell>685</cell><cell>681.5</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>32.5</cell><cell>627</cell><cell>47.3</cell><cell>641</cell><cell>82.3</cell><cell>575</cell><cell>604.2</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>554</cell><cell>31.4</cell><cell>545</cell><cell>73.3</cell><cell>504</cell><cell>509.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>27.5</cell><cell>453</cell><cell>23.7</cell><cell>460</cell><cell>16.8</cell><cell>419</cell><cell>458.9</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>315</cell><cell>11.2</cell><cell>304</cell><cell>10.3</cell><cell>299</cell><cell>396.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>22.5</cell><cell>182</cell><cell>3.2</cell><cell>182</cell><cell>4.8</cell><cell>181</cell><cell>334.1</cell><cell></cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>38</cell><cell>1.4</cell><cell>38</cell><cell>0.1</cell><cell>38</cell><cell>270.5</cell><cell></cell></row><row><cell></cell><cell>3</cell><cell>80.0</cell><cell>1288</cell><cell>241.1</cell><cell>1285</cell><cell>239.8</cell><cell>1185</cell><cell>1563.0</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>76.7</cell><cell>1282</cell><cell>317.4</cell><cell>1239</cell><cell>361.8</cell><cell>1192</cell><cell>1509.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>73.3</cell><cell>1265</cell><cell>220.9</cell><cell>1225</cell><cell>467.9</cell><cell>1168</cell><cell>1451.6</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>70.0</cell><cell>1249</cell><cell>210.9</cell><cell>1222</cell><cell>707.3</cell><cell>1139</cell><cell>1384.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>66.7</cell><cell>1218</cell><cell>296.2</cell><cell>1115</cell><cell>424.9</cell><cell>1054</cell><cell>1310.8</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>63.3</cell><cell>1151</cell><cell>193.7</cell><cell>1078</cell><cell>434.1</cell><cell>1028</cell><cell>1244.0</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>60.0</cell><cell>1119</cell><cell>143.9</cell><cell>1018</cell><cell>425.6</cell><cell>1000</cell><cell>1173.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>56.7</cell><cell>1005</cell><cell>167.3</cell><cell>956</cell><cell>485.8</cell><cell>912</cell><cell>1102.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>53.3</cell><cell>951</cell><cell>137.0</cell><cell>946</cell><cell>482.7</cell><cell>899</cell><cell>1039.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>50.0</cell><cell>906</cell><cell>164.9</cell><cell>889</cell><cell>310.3</cell><cell>840</cell><cell>967.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>46.7</cell><cell>860</cell><cell>169.4</cell><cell>829</cell><cell>305.6</cell><cell>808</cell><cell>902.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>43.3</cell><cell>785</cell><cell>92.3</cell><cell>798</cell><cell>360.1</cell><cell>725</cell><cell>822.9</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>40.0</cell><cell>709</cell><cell>134.1</cell><cell>717</cell><cell>205.7</cell><cell>673</cell><cell>756.4</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>36.7</cell><cell>646</cell><cell>50.8</cell><cell>623</cell><cell>145.0</cell><cell>598</cell><cell>661.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>33.3</cell><cell>579</cell><cell>43.2</cell><cell>552</cell><cell>161.2</cell><cell>516</cell><cell>566.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>465</cell><cell>56.5</cell><cell>432</cell><cell>65.5</cell><cell>418</cell><cell>473.6</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>26.7</cell><cell>333</cell><cell>22.3</cell><cell>333</cell><cell>25.0</cell><cell>292</cell><cell>384.0</cell><cell></cell></row><row><cell></cell><cell></cell><cell>23.3</cell><cell>192</cell><cell>15.3</cell><cell>191</cell><cell>6.1</cell><cell>192</cell><cell>341.6</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>38</cell><cell>1.4</cell><cell>38</cell><cell>0.1</cell><cell>38</cell><cell>270.6</cell><cell></cell></row><row><cell></cell><cell>2</cell><cell>120.0</cell><cell>1306</cell><cell>457.1</cell><cell>1299</cell><cell>504.2</cell><cell>1218</cell><cell>1748.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>115.0</cell><cell>1294</cell><cell>796.7</cell><cell>1286</cell><cell>669.9</cell><cell>1209</cell><cell>1717.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>110.0</cell><cell>1277</cell><cell>579.3</cell><cell>1199</cell><cell>237.1</cell><cell>1190</cell><cell>1652.6</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>105.0</cell><cell>1255</cell><cell>766.9</cell><cell>1242</cell><cell>633.0</cell><cell>1161</cell><cell>1603.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>100.0</cell><cell>1208</cell><cell>650.3</cell><cell>1199</cell><cell>639.2</cell><cell>1154</cell><cell>1538.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>95.0</cell><cell>1175</cell><cell>384.2</cell><cell>1147</cell><cell>899.2</cell><cell>1127</cell><cell>1477.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>90.0</cell><cell>1150</cell><cell>317.1</cell><cell>1112</cell><cell>934.8</cell><cell>1073</cell><cell>1413.1</cell><cell>+</cell></row></table><note><p><p><p>a DEC Alpha XP1000 Computer (S). b SUN 4/370 Workstation (s,</p><ref type="bibr" target="#b1">[2]</ref></p>).</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6</head><label>6</label><figDesc></figDesc><table><row><cell cols="3">Results for data set 5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu</cell><cell></cell><cell>CGW</cell><cell></cell><cell>TSA</cell><cell></cell><cell>Tabu vs.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c.p.u. a</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>CGW</cell></row><row><cell>66</cell><cell>4</cell><cell>32.5</cell><cell>1575</cell><cell>12.5</cell><cell>1545</cell><cell>137.8</cell><cell>1495</cell><cell>454.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>31.2</cell><cell>1520</cell><cell>22.6</cell><cell>1490</cell><cell>113.1</cell><cell>1445</cell><cell>437.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>1410</cell><cell>13.3</cell><cell>1420</cell><cell>96.7</cell><cell>1410</cell><cell>421.7</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>28.8</cell><cell>1380</cell><cell>14.1</cell><cell>1380</cell><cell>141.2</cell><cell>1330</cell><cell>401.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>27.5</cell><cell>1310</cell><cell>19.1</cell><cell>1310</cell><cell>116.4</cell><cell>1310</cell><cell>378.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>26.2</cell><cell>1275</cell><cell>13.1</cell><cell>1260</cell><cell>93.3</cell><cell>1255</cell><cell>369.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>1100</cell><cell>7.9</cell><cell>1160</cell><cell>73.8</cell><cell>1100</cell><cell>336.9</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>23.8</cell><cell>1000</cell><cell>14.6</cell><cell>1020</cell><cell>69.0</cell><cell>995</cell><cell>323.8</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>22.5</cell><cell>960</cell><cell>8.5</cell><cell>950</cell><cell>84.2</cell><cell>890</cell><cell>289.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>21.2</cell><cell>860</cell><cell>7.4</cell><cell>860</cell><cell>69.9</cell><cell>795</cell><cell>275.1</cell><cell></cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>760</cell><cell>6.8</cell><cell>750</cell><cell>102.4</cell><cell>715</cell><cell>256.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>18.8</cell><cell>680</cell><cell>5.9</cell><cell>675</cell><cell>80.4</cell><cell>655</cell><cell>235.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>17.5</cell><cell>620</cell><cell>5.7</cell><cell>620</cell><cell>48.6</cell><cell>585</cell><cell>220.4</cell><cell></cell></row><row><cell></cell><cell></cell><cell>16.2</cell><cell>555</cell><cell>5.9</cell><cell>495</cell><cell>47.4</cell><cell>525</cell><cell>194.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>430</cell><cell>4.9</cell><cell>430</cell><cell>43.4</cell><cell>410</cell><cell>170.5</cell><cell></cell></row><row><cell></cell><cell></cell><cell>13.8</cell><cell>340</cell><cell>5.0</cell><cell>340</cell><cell>25.7</cell><cell>335</cell><cell>161.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>12.5</cell><cell>340</cell><cell>2.9</cell><cell>340</cell><cell>4.5</cell><cell>315</cell><cell>149.0</cell><cell></cell></row><row><cell></cell><cell></cell><cell>11.2</cell><cell>240</cell><cell>2.3</cell><cell>240</cell><cell>31.0</cell><cell>210</cell><cell>129.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>10.0</cell><cell>140</cell><cell>1.8</cell><cell>140</cell><cell>17.9</cell><cell>140</cell><cell>129.8</cell><cell></cell></row><row><cell></cell><cell></cell><cell>8.8</cell><cell>140</cell><cell>1.6</cell><cell>140</cell><cell>2.7</cell><cell>140</cell><cell>123.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>7.5</cell><cell>80</cell><cell>1.4</cell><cell>80</cell><cell>30.8</cell><cell>80</cell><cell>108.6</cell><cell></cell></row><row><cell></cell><cell></cell><cell>6.2</cell><cell>20</cell><cell>0.1</cell><cell>20</cell><cell>0.1</cell><cell>20</cell><cell>87.1</cell><cell></cell></row><row><cell></cell><cell></cell><cell>5.0</cell><cell>20</cell><cell>0.1</cell><cell>20</cell><cell>0.1</cell><cell>20</cell><cell>87.2</cell><cell></cell></row><row><cell></cell><cell></cell><cell>3.8</cell><cell>20</cell><cell>0.3</cell><cell>20</cell><cell>0.1</cell><cell>20</cell><cell>87.2</cell><cell></cell></row><row><cell></cell><cell>3</cell><cell>43.3</cell><cell>1635</cell><cell>51.7</cell><cell>1635</cell><cell>140.3</cell><cell>1595</cell><cell>516.1</cell><cell></cell></row><row><cell></cell><cell></cell><cell>41.7</cell><cell>1580</cell><cell>29.2</cell><cell>1570</cell><cell>157.8</cell><cell>1550</cell><cell>501.7</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>40.0</cell><cell>1530</cell><cell>26.0</cell><cell>1530</cell><cell>117.0</cell><cell>1485</cell><cell>488.9</cell><cell></cell></row><row><cell></cell><cell></cell><cell>38.3</cell><cell>1465</cell><cell>26.8</cell><cell>1450</cell><cell>135.9</cell><cell>1430</cell><cell>461.3</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>36.7</cell><cell>1410</cell><cell>26.0</cell><cell>1400</cell><cell>141.9</cell><cell>1385</cell><cell>457.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>35.0</cell><cell>1330</cell><cell>39.1</cell><cell>1330</cell><cell>133.5</cell><cell>1305</cell><cell>427.4</cell><cell></cell></row><row><cell></cell><cell></cell><cell>33.3</cell><cell>1240</cell><cell>19.9</cell><cell>1250</cell><cell>144.0</cell><cell>1235</cell><cell>396.8</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>31.7</cell><cell>1175</cell><cell>19.5</cell><cell>1175</cell><cell>139.7</cell><cell>1175</cell><cell>386.5</cell><cell></cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>1115</cell><cell>25.0</cell><cell>1105</cell><cell>132.6</cell><cell>1105</cell><cell>355.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>28.3</cell><cell>1065</cell><cell>17.2</cell><cell>1060</cell><cell>109.8</cell><cell>1040</cell><cell>336.1</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>26.7</cell><cell>990</cell><cell>11.5</cell><cell>990</cell><cell>101.8</cell><cell>985</cell><cell>312.2</cell><cell></cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>835</cell><cell>10.7</cell><cell>870</cell><cell>82.6</cell><cell>840</cell><cell>288.1</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>23.3</cell><cell>755</cell><cell>9.6</cell><cell>755</cell><cell>100.0</cell><cell>755</cell><cell>264.5</cell><cell></cell></row><row><cell></cell><cell></cell><cell>21.7</cell><cell>650</cell><cell>8.3</cell><cell>650</cell><cell>70.0</cell><cell>650</cell><cell>241.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>575</cell><cell>7.8</cell><cell>595</cell><cell>86.8</cell><cell>545</cell><cell>220.8</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>18.3</cell><cell>495</cell><cell>7.5</cell><cell>480</cell><cell>66.6</cell><cell>480</cell><cell>196.0</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>16.7</cell><cell>470</cell><cell>5.7</cell><cell>470</cell><cell>27.1</cell><cell>445</cell><cell>174.1</cell><cell></cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>335</cell><cell>6.3</cell><cell>335</cell><cell>36.2</cell><cell>295</cell><cell>147.3</cell><cell></cell></row><row><cell></cell><cell></cell><cell>13.3</cell><cell>260</cell><cell>6.0</cell><cell>255</cell><cell>3.6</cell><cell>255</cell><cell>139.5</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>11.7</cell><cell>185</cell><cell>8.0</cell><cell>185</cell><cell>18.8</cell><cell>175</cell><cell>118.1</cell><cell></cell></row></table><note><p><p><p>a DEC Alpha XP1000 Computer (S). b SUN 4/370 Workstation (s,</p><ref type="bibr" target="#b1">[2]</ref></p>).</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 7</head><label>7</label><figDesc>Results for data set 6</figDesc><table><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu</cell><cell></cell><cell>CGW</cell><cell></cell><cell>TSA</cell><cell></cell><cell>Tabu vs.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell>c.p.u. a</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>Reward</cell><cell>c.p.u. b</cell><cell>CGW</cell></row><row><cell>64</cell><cell>4</cell><cell>20.0</cell><cell>1068</cell><cell>8.9</cell><cell>1068</cell><cell>109.6</cell><cell>936</cell><cell>295.0</cell></row><row><cell></cell><cell></cell><cell>18.8</cell><cell>912</cell><cell>11.0</cell><cell>912</cell><cell>69.5</cell><cell>738</cell><cell>251.5</cell></row><row><cell></cell><cell></cell><cell>17.5</cell><cell>696</cell><cell>8.7</cell><cell>690</cell><cell>85.1</cell><cell>624</cell><cell>215.9</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>16.2</cell><cell>522</cell><cell>4.4</cell><cell>546</cell><cell>43.9</cell><cell>504</cell><cell>220.9</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>366</cell><cell>3.2</cell><cell>366</cell><cell>26.4</cell><cell>318</cell><cell>140.5</cell></row><row><cell></cell><cell>3</cell><cell>26.7</cell><cell>1152</cell><cell>18.6</cell><cell>1158</cell><cell>134.4</cell><cell>1086</cell><cell>336.7</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>1080</cell><cell>15.4</cell><cell>1080</cell><cell>135.7</cell><cell>954</cell><cell>309.4</cell></row><row><cell></cell><cell></cell><cell>23.3</cell><cell>990</cell><cell>14.5</cell><cell>972</cell><cell>119.6</cell><cell>888</cell><cell>271.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>21.7</cell><cell>876</cell><cell>10.8</cell><cell>894</cell><cell>79.1</cell><cell>768</cell><cell>247.7</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>828</cell><cell>10.1</cell><cell>828</cell><cell>109.8</cell><cell>732</cell><cell>235.5</cell></row><row><cell></cell><cell></cell><cell>18.3</cell><cell>612</cell><cell>15.0</cell><cell>642</cell><cell>87.1</cell><cell>594</cell><cell>232.8</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>16.7</cell><cell>444</cell><cell>7.5</cell><cell>444</cell><cell>58.9</cell><cell>396</cell><cell>154.9</cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>282</cell><cell>3.5</cell><cell>282</cell><cell>35.8</cell><cell>240</cell><cell>118.0</cell></row><row><cell></cell><cell>2</cell><cell>40.0</cell><cell>1260</cell><cell>45.7</cell><cell>1242</cell><cell>149.0</cell><cell>1158</cell><cell>420.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>37.5</cell><cell>1188</cell><cell>30.3</cell><cell>1176</cell><cell>150.1</cell><cell>1086</cell><cell>385.4</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>35.0</cell><cell>1116</cell><cell>26.3</cell><cell>1104</cell><cell>127.3</cell><cell>1020</cell><cell>354.2</cell><cell>+</cell></row><row><cell></cell><cell></cell><cell>32.5</cell><cell>1032</cell><cell>20.0</cell><cell>1032</cell><cell>137.9</cell><cell>954</cell><cell>323.9</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>936</cell><cell>17.6</cell><cell>942</cell><cell>131.6</cell><cell>852</cell><cell>279.8</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell>27.5</cell><cell>888</cell><cell>16.7</cell><cell>888</cell><cell>110.1</cell><cell>804</cell><cell>252.2</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>780</cell><cell>14.1</cell><cell>780</cell><cell>101.4</cell><cell>690</cell><cell>226.2</cell></row><row><cell></cell><cell></cell><cell>22.5</cell><cell>660</cell><cell>12.1</cell><cell>660</cell><cell>90.3</cell><cell>594</cell><cell>190.6</cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>588</cell><cell>11.1</cell><cell>588</cell><cell>59.0</cell><cell>540</cell><cell>176.9</cell></row><row><cell></cell><cell></cell><cell>17.5</cell><cell>360</cell><cell>8.3</cell><cell>360</cell><cell>43.1</cell><cell>336</cell><cell>134.6</cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>192</cell><cell>4.5</cell><cell>192</cell><cell>26.4</cell><cell>174</cell><cell>97.0</cell></row></table><note><p><p><p>a DEC Alpha XP1000 Computer (S). b SUN 4/370 Workstation (s,</p><ref type="bibr" target="#b1">[2]</ref></p>).</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 9</head><label>9</label><figDesc></figDesc><table><row><cell>(continued)</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>n</cell><cell>m</cell><cell>L</cell><cell>Tabu Best</cell><cell>Previous best</cell></row><row><cell></cell><cell></cell><cell>28.8</cell><cell>1380</cell><cell>1380</cell></row><row><cell></cell><cell></cell><cell>27.5</cell><cell>1320</cell><cell>1310</cell></row><row><cell></cell><cell>3</cell><cell>43.3</cell><cell>1635</cell><cell>1635</cell></row><row><cell></cell><cell></cell><cell>41.7</cell><cell>1590</cell><cell>1570</cell></row><row><cell></cell><cell></cell><cell>40.0</cell><cell>1555</cell><cell>1530</cell></row><row><cell></cell><cell></cell><cell>38.3</cell><cell>1465</cell><cell>1450</cell></row><row><cell></cell><cell></cell><cell>36.7</cell><cell>1420</cell><cell>1400</cell></row><row><cell></cell><cell>2</cell><cell>65.0</cell><cell>1670</cell><cell>1680</cell></row><row><cell></cell><cell></cell><cell>62.5</cell><cell>1635</cell><cell>1635</cell></row><row><cell></cell><cell></cell><cell>60.0</cell><cell>1610</cell><cell>1600</cell></row><row><cell></cell><cell></cell><cell>57.5</cell><cell>1560</cell><cell>1545</cell></row><row><cell></cell><cell></cell><cell>55.0</cell><cell>1500</cell><cell>1490</cell></row><row><cell>64</cell><cell>4</cell><cell>20.0</cell><cell>1068</cell><cell>1068</cell></row><row><cell>(Data Set 6)</cell><cell></cell><cell>18.8</cell><cell>912</cell><cell>912</cell></row><row><cell></cell><cell></cell><cell>17.5</cell><cell>696</cell><cell>690</cell></row><row><cell></cell><cell></cell><cell>16.2</cell><cell>528</cell><cell>546</cell></row><row><cell></cell><cell></cell><cell>15.0</cell><cell>366</cell><cell>366</cell></row><row><cell></cell><cell>3</cell><cell>26.7</cell><cell>1170</cell><cell>1158</cell></row><row><cell></cell><cell></cell><cell>25.0</cell><cell>1080</cell><cell>1080</cell></row><row><cell></cell><cell></cell><cell>23.3</cell><cell>990</cell><cell>972</cell></row><row><cell></cell><cell></cell><cell>21.7</cell><cell>894</cell><cell>894</cell></row><row><cell></cell><cell></cell><cell>20.0</cell><cell>828</cell><cell>828</cell></row><row><cell></cell><cell>2</cell><cell>40.0</cell><cell>1260</cell><cell>1242</cell></row><row><cell></cell><cell></cell><cell>37.5</cell><cell>1188</cell><cell>1176</cell></row><row><cell></cell><cell></cell><cell>35.0</cell><cell>1116</cell><cell>1104</cell></row><row><cell></cell><cell></cell><cell>32.5</cell><cell>1032</cell><cell>1032</cell></row><row><cell></cell><cell></cell><cell>30.0</cell><cell>942</cell><cell>942</cell></row><row><cell>102</cell><cell>4</cell><cell>100.0</cell><cell>1077</cell><cell>1066</cell></row><row><cell>(Data set 7)</cell><cell></cell><cell>95.0</cell><cell>1019</cell><cell>990</cell></row><row><cell></cell><cell></cell><cell>90.0</cell><cell>966</cell><cell>889</cell></row><row><cell></cell><cell></cell><cell>85.0</cell><cell>905</cell><cell>882</cell></row><row><cell></cell><cell></cell><cell>80.0</cell><cell>838</cell><cell>801</cell></row><row><cell></cell><cell>3</cell><cell>133.3</cell><cell>1110</cell><cell>1095</cell></row><row><cell></cell><cell></cell><cell>126.7</cell><cell>1065</cell><cell>1064</cell></row><row><cell></cell><cell></cell><cell>120.0</cell><cell>1013</cell><cell>1008</cell></row><row><cell></cell><cell></cell><cell>113.3</cell><cell>984</cell><cell>943</cell></row><row><cell></cell><cell></cell><cell>106.7</cell><cell>922</cell><cell>919</cell></row><row><cell></cell><cell>2</cell><cell>200.0</cell><cell>1170</cell><cell>1173</cell></row><row><cell></cell><cell></cell><cell>190.0</cell><cell>1123</cell><cell>1127</cell></row><row><cell></cell><cell></cell><cell>180.0</cell><cell>1072</cell><cell>1082</cell></row><row><cell></cell><cell></cell><cell>170.0</cell><cell>1036</cell><cell>1031</cell></row><row><cell></cell><cell></cell><cell>160.0</cell><cell>988</cell><cell>987</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work was supported by NSF grant CMS 9875305 and by United Technologies Research Center of United Technologies Corporation. This support is gratefully acknowledged, but implies no endorsement of the ÿndings.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The orienteering problem</title>
		<author>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vohra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Research Logistics</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="307" to="318" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The team orienteering problem</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wasil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="464" to="474" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A heuristic for the multiple tour maximum collection problem</title>
		<author>
			<persName><forename type="first">S</forename><surname>Butt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Cavalier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="101" to="111" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">MSVS: an extended computer model for transport mode selection</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ballou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chowdhury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Logistics and Transportation Review</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="325" to="338" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The distribution problem with carrier service: a dual based penalty approach</title>
		<author>
			<persName><forename type="first">M</forename><surname>Diaby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramesh</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="24" to="35" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Transportation with common carrier and private eets: system assignment and shipment frequency optimization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Racer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IIE Transactions</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="217" to="225" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Threshold accepting: a general purpose optimization algorithm appearing superior to simulated annealing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Dueck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Scheuer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">90</biblScope>
			<biblScope unit="page" from="161" to="175" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An optimal solution procedure for the multiple tour maximum collection problem using column generation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Butt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ryan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer and Operations Research</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="427" to="441" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The selective traveling salesman problem</title>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Martello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="193" to="207" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An optimal algorithm for the orienteering tour problem</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ramesh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yoon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Karwan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="155" to="165" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Solving the orienteering problem through branch-and-cut</title>
		<author>
			<persName><forename type="first">M</forename><surname>Fischetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Salazar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFORMS Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="33" to="148" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A branch-and-cut algorithm for the undirected selective traveling salesman problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Semet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="263" to="273" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Heuristic methods applied to orienteering</title>
		<author>
			<persName><forename type="first">T</forename><surname>Tsiligirides</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Operational Research Society</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="797" to="809" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Computer scheduling of vehicles from one or more depots to a number of delivery points</title>
		<author>
			<persName><forename type="first">A</forename><surname>Wren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Holliday</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operational Research Quarterly</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="333" to="344" />
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A multifaceted heuristic for the orienteering problem</title>
		<author>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Research Logistics</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="359" to="366" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An e cient four-phase heuristic for the generalized orienteering problem</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ramesh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="151" to="165" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A fast and e ective heuristic for the orienteering problem</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wasil</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="475" to="489" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A tabu search heuristic for the undirected selective traveling salesman problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Semet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="539" to="545" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">An additive approach for the optimal solution of the prize-collecting traveling salesman problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Fischetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vehicle routing: methods and studies</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Assad</surname></persName>
		</editor>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<publisher>Elsevier Science Publishers</publisher>
			<date type="published" when="1988">1988</date>
			<biblScope unit="page" from="319" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Urban operations research</title>
		<author>
			<persName><forename type="first">R</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Odoni</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981">1981</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cli s, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The impact of metaheuristics on solving the vehicle routing problem: algorithms, problem sets, and computational results</title>
		<author>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wasil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kelly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Chao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fleet management and logistics</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Crainic</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</editor>
		<meeting><address><addrLine>Dordrecht</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="33" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Metaheuristics for the capacitated VRP</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J-Y</forename><surname>Potvin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The vehicle routing problem</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="129" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Future paths for integer programming and links to artiÿcial intelligence</title>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="533" to="549" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Tabu search: part I</title>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="190" to="206" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Tabu search: part II</title>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="4" to="32" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">An adaptive memory heuristic for a class of vehicle routing problems with minmax objective</title>
		<author>
			<persName><forename type="first">B</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Taillard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="445" to="452" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Probabilistic diversiÿcation and intensiÿcation in local search for vehicle routing</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Rochat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ã</forename><forename type="middle">E</forename><surname>Taillard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Heuristics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="147" to="167" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A tabu search heuristic for the heterogeneous eet vehicle routing problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Musaraganyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ã</forename><forename type="middle">E</forename><surname>Taillard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1153" to="1173" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Adaptive memory programming: a uniÿed view of metaheuristics</title>
		<author>
			<persName><forename type="first">Ã</forename><forename type="middle">E</forename><surname>Taillard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gambardella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J-Y</forename><surname>Potvin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">135</biblScope>
			<biblScope unit="page" from="1" to="16" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Tabu search and adaptive memory programming: advances, applications and challenges</title>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in metaheuristics, optimization and stochastic modeling technologies</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Barr</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><surname>Helgason</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Kennington</surname></persName>
		</editor>
		<meeting><address><addrLine>Dordrecht</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="1" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A tabu search heuristic for the vehicle routing problem with soft time windows</title>
		<author>
			<persName><forename type="first">Ã</forename><forename type="middle">E</forename><surname>Taillard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Badeau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Guertin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J-Y</forename><surname>Potvin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transportation science</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="170" to="186" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Approximate algorithms for the traveling salesman problem</title>
		<author>
			<persName><forename type="first">D</forename><surname>Rosenkrantz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Stearns</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lewis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th annual IEEE symposium of switching and automata theory</title>
		<meeting>the 15th annual IEEE symposium of switching and automata theory</meeting>
		<imprint>
			<date type="published" when="1974">1974</date>
			<biblScope unit="page" from="33" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A tabu search heuristic for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hertz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="1276" to="1290" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A tabu search algorithm for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">G</forename><surname>Barbarosoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ozgur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="255" to="270" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">An e ective heuristic algorithm for the traveling salesman problem</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kernighan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="498" to="516" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Variable neighborhood search</title>
		<author>
			<persName><forename type="first">N</forename><surname>Mladenoviã C</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="1097" to="1110" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A route-neighborhood-based metaheuristic for vehicle routing problem with time windows</title>
		<author>
			<persName><forename type="first">F-H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S-Y</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="page" from="485" to="504" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Semi-greedy heuristics: an empirical study</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shogan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research Letters</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="107" to="114" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Using constraint programming and local search methods to solve vehicle routing problems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Shaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Maher</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J-F</forename><surname>Puget</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="page" from="417" to="431" />
			<date type="published" when="1998">1998</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
	<note>Principles and practice of constraint programming-CP98</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Algorithms and solutions to multi-level vehicle routing problems</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chao</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<pubPlace>College Park</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Maryland</orgName>
		</respStmt>
	</monogr>
	<note>PhD Dissertation</note>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Scheduling of planned maintenance tasks for otis: ÿnal report</title>
		<author>
			<persName><forename type="first">E</forename><surname>Miller-Hooks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<pubPlace>East Hartford, Connecticut</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Report to United Technologies Research Center of United Technologies Corporation</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">A heuristic column generation method for the heterogeneous eet VRP</title>
		<author>
			<persName><forename type="first">Ã</forename><forename type="middle">E</forename><surname>Taillard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Recherche-Operationnelle</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="1" to="14" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
