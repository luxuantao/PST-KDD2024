<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Parameterized Complexity and Approximation Algorithms</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012-12-20">December 20, 2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">´niel</forename><surname>Da</surname></persName>
						</author>
						<author>
							<persName><surname>Marx</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Institut fu ¨r Informatik</orgName>
								<orgName type="institution">Humboldt-Universita ¨t zu Berlin</orgName>
								<address>
									<addrLine>Unter den Linden 6</addrLine>
									<postCode>10099</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">at Fordham University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Parameterized Complexity and Approximation Algorithms</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2012-12-20">December 20, 2012</date>
						</imprint>
					</monogr>
					<idno type="MD5">63F34D175D6069FDC3E263BB179F8FF8</idno>
					<idno type="DOI">10.1093/comjnl/bxm048</idno>
					<note type="submission">Received 12 March 2006; revised 11 December 2006</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:02+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>approximation algorithms; parameterized complexity</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Approximation algorithms and parameterized complexity are usually considered to be two separate ways of dealing with hard algorithmic problems. In this paper, our aim is to investigate how these two fields can be combined to achieve better algorithms than what any of the two theories could offer. We discuss the different ways parameterized complexity can be extended to approximation algorithms, survey results of this type and propose directions for future research.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Many of the computational problems that arise in practice are optimization problems: the task is to find a solution where the cost, quality, size, profit or some other measure is as large or small as possible. The NP-hardness of an optimization problem implies that, unless P ¼ NP, there is no polynomialtime algorithm that finds the exact value of the optimum.</p><p>Of course, the unfortunate fact that we cannot find the optimum in polynomial time does not give us an excuse to ignore the problem. After all, in practice, some solution is required. If we want to design and analyze algorithms for such problems in a mathematically rigorous way, then there are several options ahead of us. The field of exact algorithms relaxes the requirement that the running time is polynomial, and here our aim is to find the algorithm with the fastest running time, which is usually exponential in the size of the input. In parameterized complexity, the running time is analyzed in finer detail: instead of expressing it as a function of the input size, one or more parameters of the instance are defined, and we investigate the effect of these parameters on the running time. The goal is to design algorithms that work efficiently if the parameters of the input instance are small (even if the size of the input is large). When designing approximation algorithms, we relax the requirement that the algorithm produces an optimum solution, and our aim is to devise a polynomial-time algorithm such that the solution it produces is not necessarily optimal, but there is some worstcase bound on the solution quality.</p><p>The motivation for studying approximation algorithms is two fold. Firstly, if we have an approximation algorithm whose error guarantee is really good (say, the maximum error is 1%), then in practice it can be as good as an optimum solution. However, for many approximation algorithms in the literature, the error guarantee is much higher (50, 100, 1000, 10000%, or even worse). In this case, we cannot argue that this approximation algorithm is almost as good as an exact algorithm. Nevertheless, such algorithms are still important from the theoretical point of view, as they allow us to better understand and classify problems and their variants.</p><p>In the literature on approximation algorithms, the goal is almost always to find a polynomial-time approximation algorithm. However, the question of approximability makes sense also in the framework of parameterized complexity. By applying ideas from both theories, we might be able to tackle problems that are intractable to both theories. There can be problems that are both inapproximable and fixed-parameter intractable, but have parameterized approximation algorithms running in fixed-parameter tractable (FPT)-time.</p><p>The aim of this survey paper is to investigate the various ways the notion of approximability can appear in parameterized complexity. We review the results on this topic from the literature, and try to interpret these results in a common framework. To motivate further research, we discuss the different directions that can be pursued. The following four main issues are identified: † Approximation with instance parameters: Consider an optimization problem, where an integer parameter k is associated with every input instance. Is it possible to find an approximation algorithm with running time f(k) . jxj O (1) ? For example, in the PARTIAL VERTEX COVER problem, the task is to cover as many edges as possible with k vertices (where k is part of the input). Is it possible to find a 2-approximation in time f(k) . jxj O (1) ?</p><p>Another example: GRAPH COLORING is fixed-parameter intractable if the parameter is the genus of the graph. However, there is a 2-approximation algorithm with running time f(g) . jxj, if g is the genus of the graph <ref type="bibr" target="#b0">[1]</ref>. † Approximation parameterized by cost: The most direct application of parameterized complexity to optimization problems is to parameterize by the optimum value. That is, we try to find an exact algorithm that solves the problem in f(OPT) . jxj O (1) time, where OPT is the value of the optimum solution. The motivation is that such an algorithm can work efficiently if the optimum value is very small compared to the size of the input, which might be a reasonable assumption in certain applications. We can investigate the analogous question for approximation algorithms as well. For example, we might be interested in the question whether there is a 2-approximation algorithm for MAXIMUM CLIQUE with running time f(OPT) . jxj O (1) . † Performance functions instead of performance ratios:</p><p>The usual aim of approximation theory is to find an algorithm such that the ratio of the optimum value and the value of the solution provided by the algorithm can be bounded. For example, in the case of a minimization problem, the aim is to ensure that the cost of the solution is at most c ! 1 times the optimum, for a constant c as small as possible. We investigate a more general notion of approximability: instead of the requirement that the value of the solution is at most c times the optimum, we require that it is at most @(OPT) times the optimum for some function @. † Quality of approximation as parameter: For certain problems, the approximation ratio can be as close to 1 as we would like: for every e ! 0, there is a polynomialtime algorithm with approximation ratio 1 þ e. A polynomial-time approximation scheme (PTAS) is an algorithm that has a parameter e in the input, and produces a (1 þ e)-approximate solution in time jxj f (<ref type="foot" target="#foot_0">1</ref>/e ) . Typically, an approximation scheme has running time such as jxj 1/e 4 or 2 1/e . jxj 2 . To investigate the dependence of the running time on e, we study the parameterized version of the problem with 1/e being the parameter. We are especially interested in the question whether 1/e can be taken out of the exponent of the input size (as in 2 1/e . jxj 2 ). These four issues are not completely separate from each other. There are many ways in which they overlap and interact. However, we would like to emphasize here that parameterized approximation is a complex field, and there are many subareas to investigate.</p><p>Section 2 reviews the basic notions of parameterized complexity and approximation algorithms. The four issues are discussed in Sections 3-6. Conclusions are given in Section 7. Most of the results presented in this paper are taken from the literature. Some of the cited results are mentioned only informally, while others are presented as theorems. To maintain the flow of the text, only those results are highlighted as theorems that are directly related to both parameterization and approximability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PRELIMINARIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Parameterized complexity</head><p>We follow <ref type="bibr" target="#b1">[2]</ref> for the standard definitions of parameterized complexity. Let S be a finite alphabet. A decision problem is represented by a set Q # S * of strings over S. A parameterization of a problem is a polynomial-time computable function k : S * ! N. A parameterized decision problem is a pair (Q, k), where Q # S * is an arbitrary decision problem and k is a parameterization. 1 Intuitively, we can imagine a parameterized problem as being a decision problem where each input instance x [ S * has a positive integer k(x) associated with it. A parameterized problem (Q, k) is FPT if there is an algorithm that decides whether x [ Q in time f(k(x)) . jxj c for some constant c and computable function f. An algorithm with such running time is called an FPT-time algorithm or simply FPT-algorithm. The theory can be extended to problems having multiple parameterizations; in this case, we say that a problem (Q, k 1 , . . . , k p ) is FPT with combined parameters k 1 , . . . , k p if it can be solved in time f(k 1 (x), . . . , k p (x)) . jxj c .</p><p>Many NP-hard problems were investigated in the parameterized complexity literature, with the goal of identifying FPT problems. It turns out that several of these problems, e.g. MINIMUM VERTEX COVER, LONGEST PATH, DISJOINT TRIANGLES, etc., are indeed FPT. There is a powerful toolbox of techniques for designing FPT-algorithms: kernelization, bounded search trees, color coding, well-quasi-ordering, just to name some of the more important ones. On the other hand, certain problems resisted every attempt at obtaining FPT-algorithms. Analogously to NP-completeness in classical complexity, the theory of W <ref type="bibr" target="#b0">[1]</ref>-hardness can be used to give strong evidence that certain problems are unlikely to be FPT. W <ref type="bibr" target="#b0">[1]</ref>-hardness is usually proved by presenting a parameterized reduction. For the technical details, the reader is referred to <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Optimization problems and approximation</head><p>For each input instance of an optimization problem, there is a set of feasible solutions associated to it, and a cost measure is defined for each feasible solution. The task is to find a feasible solution where the measure is as good as possible. Following <ref type="bibr" target="#b3">[4]</ref>, an NP optimization problem is formally defined as a 4-tuple (I, sol, cost, goal), where † I is the set of instances;</p><p>† for an instance x [ I, sol(x) is the set of feasible solutions of x. The length of each y [ sol(x) is polynomially bounded in jxj, and it can be decided in polynomial time whether y [ sol(x) holds for given x and y; † given an instance x and a feasible solution y, cost(x,y) is a polynomial-time computable positive integer; † goal is either min or max.</p><p>The goal is to find a feasible solution y that achieves the best objective value, i.e. costðx; yÞ ¼ goalfcostðx; y 0 Þ : y 0 [ solðxÞg:</p><p>The cost of the optimum solution for instance x is denoted by opt(x). If y is a solution for instance x, then the performance ratio of y is defined as </p><formula xml:id="formula_0">8 &gt; &gt; &lt; &gt; &gt; :</formula><p>Thus, R(x, y) is always at least 1; the closer it is to 1, the closer the solution is to the optimum. For a real number c . 1, we say that an algorithm is a c-approximation algorithm, if it always produces a solution with performance ratio at most c.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Approximation schemes</head><p>It is a very common situation that after finding the first constant factor approximation for some problem, improved algorithms with better and better approximation ratios are published in subsequent papers. For certain problems, an endless series of improvements is possible, as there is no 'best' approximation ratio. We say that a problem X admits a PTAS if for every e . 0, there is a polynomial-time (1 þ e)-approximation algorithm for X. More precisely, we want this to hold in a uniform way: there is one algorithm that can produce an arbitrary good approximation. That is, there is an algorithm A such that given an instance x of X and an e . 0, A produces a (1 þ e)-approximate solution in time jxj f (1/e ) for some function f. Clearly, such an algorithm runs in polynomial time for every fixed value of e. Approximation schemes are very abundant for geometric problems, but the literature contains many examples for other types of problems as well, e.g. for scheduling, packing or pattern matching problems. If e is small then the exponent of the polynomial jxj f (1/e ) can be very large. Two restricted classes of approximation schemes were defined that avoid this problem. An efficient PTAS EPTAS is a PTAS with running time of the form f(1/e) . jxj O (1) , while a fully PTAS FPTAS runs in time (1/e) O (1) . jxj O (1) .</p><p>It is possible to prove negative results on the existence of approximation schemes using APX-hardness. APX is the class of optimization problems that have constant-factor approximation algorithms. A PTAS for an APX-hard problem would imply that there is a PTAS for every problem in APX. The celebrated PCP theorem (cf. <ref type="bibr" target="#b3">[4]</ref>) states that this would also imply P ¼ NP. Consequently, for every APX-hard optimization problem there exists a constant c 0 . 1 such that there is no polynomial-time c 0 -approximation algorithm for the problem, unless P ¼ NP. Often, there is a large gap between this lower bound c 0 and the best known approximation ratio. However, for the problem MAX E3SAT, a tight bound of 8   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>7</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>À Á</head><p>is proved by Ha ˚stad <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Decision problems</head><p>In many cases, it is easier to work with decision problems than with optimization problems: most of complexity theory is developed for decision problems. There is a standard way in which an optimization problem can be turned into a more or less equivalent decision problem. If X is an optimization problem, then we define decision problem X as X Input: An instance x of X, an integer k. Decide: OPT(x) k.</p><p>The problems X ! and X ¼ can be defined analogously. If X can be solved optimally in polynomial time, then clearly all these decision problems can be solved in polynomial-time as well. The other direction is not that much clear. If we can solve X in polynomial time, then OPT(x) can be determined in polynomial time using binary search, but this does not give us a solution with optimum cost. However, for many problems, if we can determine the optimum, then we can actually find an optimum solution by repeatedly determining the optimum cost for slightly modified versions of the instance, a strategy generally known as polynomialtime self-reducibility.</p><p>In parameterized complexity, the problems X , X ! , X ¼ are studied with the parameter k. If X is a minimization (respectively, maximization) problem, then the standard parameterization of X is the problem X (respectively, X ! ) parameterized by k. If the standard parameterization is FPT, then this means that we have an efficient algorithm for determining the optimum for those instances where the optimum is small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="62">D. MARX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">APPROXIMATION WITH INSTANCE PARAMETERS</head><p>The first way of studying parameterized approximation algorithms that we discuss here is to define a parameterization of the optimization problem, and instead of looking for a polynomial-time algorithm, our goal is to find an FPT-time algorithm that produces an approximate solution. That is, we define a parameterization k that assigns a positive integer to each instance x [ I, and the approximation algorithm should run in time f(k(x)) . jxj O (1) . In this case, we say that the algorithm is an FPT-approximation algorithm with parameterization k. If the performance ratio of the algorithm is c, then we say that it is an FPT c-approximation algorithm. Hopefully, such an algorithm can achieve a better approximation ratio than traditional polynomial-time approximation algorithms, as it has more time at its disposal.</p><p>The following two results are examples of this type of parameterized approximation algorithms (definitions will be given later). † METRIC TSP WITH DEADLINES (DDLTSP) can be</p><formula xml:id="formula_1">2.5-approximated in time O(jxj 3 þ k!k),</formula><p>where k is the number of deadline vertices <ref type="bibr" target="#b5">[6]</ref>. † VERTEX COLORING can be 2-approximated in f(g) . jxj time for graphs with genus g <ref type="bibr" target="#b0">[1]</ref>.</p><p>Broadly speaking, there are two large categories of parameterizations: the parameter is either some obvious measure of the problem instance (e.g. the number of deadline vertices in DDLTSP) or it is some structural property of the input structure that describes (in some well-defined sense) how complicated the input is (e.g. tree width, genus, etc.) In both cases, it can be interesting to find approximation algorithms that are efficient for small parameter values. Sections 3.1 and 3.2 discuss results of these two types, respectively.</p><p>Parameterized approximation schemes can be defined in a similar manner. An FPT-approximation scheme (FPT-AS) with parameterization k is an algorithm whose input is an instance x [ I and an e . 0, and it produces a (1 þ e)approximate solution in time f(e,k(x)) . jxj O (1) for some computable function f. For example, Har-Peled and Mazumdar <ref type="bibr" target="#b6">[7]</ref> present an f(e,k,d) . jxj time approximation scheme for the MINIMUM k-MEDIAN problem in d dimensions, which means that the problem has an FPT-AS with combined parameters k and d. This can be considered as a generalization of EPTAS: the constant factor depends not only on e, but also on the parameters of the instance. Sections 3.1 and 3.2 review this type of approximation results as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Measure parameters</head><p>In this section, we overview parameterized approximation results where the parameter is some obvious measure of the input instance.</p><p>The traveling salesperson problem (TSP) is one of the most studied optimization problems. The input consists of n cities and a matrix describing the distances between the cities (the distances can be arbitrary nonnegative integers). The task is to start from one of the cities, visit every city in some order and then return to the starting city. We have to find an ordering of the cities such that the length of this tour is as small as possible. The problem is NP-hard, in fact, there is no c-approximation algorithm for any c ! 1 (unless P ¼ NP). The Metric TSP is a restricted version of TSP where we assume that the distance matrix satisfies the triangle inequality d(x, y) d(x, z) þ d(z, y) for any three cities x, y, z. This assumption obviously holds in applications where we know that the direct route is never longer than a route via multiple cities. Metric TSP can be 1.5-approximated using Christofides' algorithm <ref type="bibr" target="#b7">[8]</ref>, but has no PTAS, unless P ¼ NP <ref type="bibr" target="#b8">[9]</ref>.</p><p>METRIC TSP WITH DEADLINES (DDLTSP) is investigated in <ref type="bibr" target="#b5">[6]</ref>. Here we have the further restriction that some subset D of the vertices have deadlines assigned to them, and we have to visit each such vertex before its deadline. That is, each v [ D has a deadline d(v), and the length of the tour from the starting city to v must not exceed d(v). The task is to find the shortest tour that satisfies all the deadlines. The problem has no polynomial-time constant factor approximation algorithm, unless P ¼ NP. Furthermore, it is not FPT if the parameter is the number jDj of deadline vertices; in fact, it is NP-hard even if there is only one deadline vertex. Thus, neither approximation nor parameterized complexity alone can tackle this problem. However, <ref type="bibr" target="#b5">[6]</ref> presents a O(jxj 3 þ k!k) time algorithm that produces a 2.5-approximate solution, if k is the number of deadline vertices. Therefore, the combination of approximation and parameterized complexity results in an efficient approximation algorithm for small values of k. THEOREM 3.1 <ref type="bibr" target="#b5">[6]</ref>. METRIC TSP WITH DEADLINES parameterized by the number of deadline vertices has an FPT 2.5-approximation algorithm.</p><p>The VERTEX COVER problem (cover all the edges of a graph with as few vertices as possible) is well studied both in the parameterized complexity and approximation algorithms literature. VERTEX COVER is FPT (see, e.g. <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref>) and has a simple 2-approximation algorithm. However, the problem does not have a PTAS (unless P ¼ NP); in fact, some recent conjectures imply that the factor 2 is best possible <ref type="bibr" target="#b11">[12]</ref>.</p><p>PARTIAL VERTEX COVER is in some sense the dual of VERTEX COVER: given a graph G with an integer k, the task is to cover as many edges as possible with k vertices. It can be shown that this problem is W[1]-hard with parameter k <ref type="bibr" target="#b12">[13]</ref>. The straightforward greedy algorithm (repeatedly select a vertex that covers as many uncovered edges as possible) gives a 1.582-approximation <ref type="bibr" target="#b13">[14]</ref>, but the problem does not admit a PTAS <ref type="bibr" target="#b14">[15]</ref>. Here we show that the problem admits an FPT-AS.</p><p>PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS 63 THEOREM 3.2. PARTIAL VERTEX COVER admits an FPT-AS with parameter k, the number of vertices in the solution.</p><p>Proof. We present an f(e,k) . jxj O (1) time algorithm that produces a (1 þ e)-approximate solution for the problem. Let</p><formula xml:id="formula_2">D :¼ 2 k 2 À Á</formula><p>e and let v 1 , . . . , v n be the vertices of the graph ordered by non-increasing degree, i.e. d(v i ) ! d(v j ) for i , j. We consider two cases.</p><p>Case 1: d(v 1 ) ! D. In this case the algorithm outputs the set S ¼ fv 1 , . . . , v k g. These k vertices cover at least</p><formula xml:id="formula_3">P k i¼1 dðv i Þ À k 2 À Á edges: there are at most k 2 À Á edges between the vertices of S, thus at most k 2 À Á</formula><p>edges are counted twice when the degrees are summed. The value of the optimum solution cannot be larger than</p><formula xml:id="formula_4">P i¼1 k d(v i )</formula><p>, hence the value of the constructed solution S is at least</p><formula xml:id="formula_5">P k i¼1 dðv i Þ À k 2 P k i¼1 dðv i Þ ! 1 À k 2 D ¼ 1 À e 2 ! 1 1 þ e times the optimum, that is, the performance ratio is at most 1 þ e.</formula><p>Case 2: d(v 1 ) D. In this case, the optimum value is at most kD, and we are able to determine it exactly in FPT-time. For each 1 ' kD, the algorithm checks whether it is possible to cover at least ' edges with k vertices. We use the method of color coding: random colors between 1 and ' are assigned to the edges, and we try to find a solution where the ' edges covered by the vertices have distinct colors. As shown below, the existence of such a solution can be checked in FPT-time for a given coloring. If it is not possible to cover ' edges, then obviously the algorithm does not find a solution for any random coloring. On the other hand, if there is a solution, then the random coloring assigns distinct colors to the ' edges with probability at least ' 2' . Therefore, we have to repeat the algorithm on average at most ' ' times to find a solution. Note that ' ' can be bounded by a function of e and k only. The algorithm can be derandomized using standard techniques, (see [2, Section 13.3; 3, Section 8.3; 16]).</p><p>For a particular coloring, we proceed as follows. We consider every possible partition P ¼ fP 1 , . . . , P k g of the color set f1, . . . , 'g into k classes; there are at most k ' such partitions. For a given partition P, we try to find vertices u 1 , . . . , u k such that for each color c [ P i , vertex u i covers at least one edge with color c. This can easily be done in polynomial time.</p><p>A</p><p>One of the most fruitful areas for developing approximation algorithms is the field of geometric problems. The geometric nature of the problem allows us to use all sorts of approximation techniques. Very often, the problem even admits a PTAS. The computational geometry community has been doing parameterized approximation analysis for several years: the quest for obtaining approximation algorithms where certain constants do not appear in the exponent of the input size is evident in the literature.</p><p>The MINIMUM k-CENTER problem arises as a fundamental problem in many applications such as facility location, clustering and information retrieval. Given a set of points in the plane and an integer k, the task is to select k center points such that each input point is close to some selected point. More precisely, we have to minimize the maximum distance of a point to the closest selected point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MINIMUM k-CENTER</head><formula xml:id="formula_6">Input: A set S # R Â R of points, an integer k. Find: A subset C # S of size k. Goal: Minimize max s[S min c[C d(s,c).</formula><p>There are several ways of interpreting distance in the plane. Here we discuss the two most common cases, where the distance means</p><formula xml:id="formula_7">L 2 metric (d((x 1 , y 1 ), (x 2 , y 2 )) ¼ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi jx 1 2 x 2 j 2 þ jy 1 2 y 2 j 2 Þ p or L 1 metric (d((x 1 , y 1 ), (x 2 , y 2 )) ¼ maxfjx 1 2 x 2 j,jy 1 2 y 2 jg).</formula><p>In both cases, the problem can be 2-approximated in polynomial time, but there is some constant a . 2 such that it is NP-hard to find an a-approximation <ref type="bibr" target="#b16">[17]</ref>. If the number of centers is a fixed constant k, then the problem can be solved exactly in time jxj O(k) by brute force. This cannot be improved to f(k) . jxj O (1) time: parameterized by the number k of centers, the problem is W <ref type="bibr" target="#b0">[1]</ref>-hard in the L 1 metric <ref type="bibr" target="#b17">[18]</ref>. However, there are efficient approximations for every fixed value of k: <ref type="bibr" target="#b18">[19]</ref> shows that for every fixed k there is a linear-time approximation scheme, i.e. a (1 þ e)-approximate solution can be found in f(e, k) . n time. Using the terminology of parameterized approximation, this can be stated as follows. THEOREM 3.3. <ref type="bibr" target="#b18">[19]</ref>. MINIMUM k-CENTER admits an FPT-AS with parameter k.</p><p>MINIMUM k-MEDIAN is the variant of the problem where instead of minimizing the maximum distance to the closest center point, the optimization goal is to minimize the sum of these distances. Unlike MINIMUM k-CENTER, this problem admits an EPTAS in the L 2 metric (even if k is part of the input) <ref type="bibr" target="#b6">[7]</ref>.</p><p>Most geometric problems can easily be generalized to higher dimensions. If the dimension of the input can be arbitrarily large, then usually the problem becomes as hard as on any general metric, since we lose the nice geometric properties that make approximation easy (cf. <ref type="bibr" target="#b19">[20]</ref>). However, in many cases the geometric approximation schemes can be generalized to any fixed dimension d. The approximation schemes for MINIMUM k-CENTER <ref type="bibr" target="#b18">[19]</ref> and for MINIMUM k-MEDIAN <ref type="bibr" target="#b6">[7]</ref> work for an arbitrarily fixed dimension d, and the running time is f(e,k, d) . jxj O (1) and f(e,d) . jxj O (1) , respectively. THEOREM 3.4 [7, 19]. MINIMUM k-MEDIAN admits an FPT-AS with parameter d. MINIMUM k-CENTER admits an FPT-AS with combined parameters d and k.</p><p>Dimension is a very natural parameter for the study of geometric problems. In the examples above, FPT-algorithms are possible if the dimension is taken as parameter. Conceivably, there can be problems where it is possible to show that the exponent of the input size has to increase as the dimension increases. There is very little work done in the literature on proving hardness results for problems parameterized by the dimension of the space. The only such result that we are aware of is on the SUBSET CONGRUENCE problem. Given two sets of points A, B # R d , the task is to decide if there is a distance-preserving transformation that makes A equal to a subset of B. The problem is polynomial-time solvable for every fixed d, but W[1]-hard parameterized by the dimension d <ref type="bibr" target="#b20">[21]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Structural parameters</head><p>In the previous section, we discussed parameters that measure the size of some part of the input or the solution. These parameters were 'obvious.' Parameterization can be more subtle than that: it can measure arbitrary properties of the input structures. In many cases, the parameter measures how complicated the input is, in some precise, well-defined sense. The motivation is to obtain algorithms that are efficient for less complex instances, where less complex means that the parameter value is small. Such an algorithm can be useful in applications where it is a reasonable assumption that the input is not completely unstructured, and the value of this particular parameter is usually small.</p><p>Below we list some parameters that describe complexity in graphs. The list is not exhaustive; depending on the problem or application, many such parameters can be defined. † Maximum degree. The maximum degree of a graph is the maximum number of neighbors a vertex can have. † Diameter. The diameter of a graph is the maximum distance between any two vertices. † Tree width. The tree width is a parameter that describes how 'tree-like' the graph is. We omit the technical definition, see, e.g. <ref type="bibr" target="#b21">[22]</ref> for more details. In many cases, problems on graphs with small tree width can be handled with dynamic programming techniques. † Genus. The genus of a graph describes how close the graph is to being a planar graph. A graph has genus 0 if and only if it is planar (i.e. can be drawn on the sphere without crossing edges). A graph has genus at most k if it can be drawn on the sphere with k 'handles' attached to the sphere (cf. <ref type="bibr" target="#b22">[23,</ref><ref type="bibr">Appendix B]</ref>). † Distance from a class F. Let F be an arbitrary class of graphs (such as planar, bipartite, interval, etc.) The class F þ kv (respectively, F þ ke) contains those graphs that can be constructed from some G [ F with the addition of k new vertices<ref type="foot" target="#foot_4">2</ref> (respectively, edges). The classes F 2 kv and F 2 ke are similarly defined. For any problem and any class F, we can assume that the input is in, say, F þ kv for some k, and define this k to be the parameter. This line of research was initiated by Cai <ref type="bibr" target="#b23">[24]</ref>, and later pursued in, e.g. <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b25">26]</ref>.</p><p>The first problem that we investigate here is VERTEX COLOR-ING: given a graph G, find a coloring of the vertices with minimal number of colors such that adjacent vertices receive different colors. The minimum number of colors that is required to color the vertices of G is called the chromatic number of G and is denoted by x(G). Chromatic number is not approximable within jVj 12e for any e . 0, unless ZPP ¼ NP <ref type="bibr" target="#b26">[27]</ref>. The problem remains hard for planar graphs: it is NP-complete to decide whether a planar graph is 3-colorable <ref type="bibr" target="#b27">[28]</ref>. However, by the celebrated Four Color Theorem <ref type="bibr" target="#b28">[29]</ref>, four colors are sufficient for every planar graph, and there is a polynomial-time algorithm that actually finds this coloring <ref type="bibr" target="#b29">[30]</ref>. As it is easy to check whether a graph is 2-colorable, a</p><p>À Á -approximate coloring can be found in polynomial time for planar graphs.</p><p>Is there a constant factor approximation algorithm for graphs that are 'almost' planar graphs? We consider two classes of graphs that are close to being planar: bounded genus graphs and planarþkv graphs. For bounded genus graphs, the following result is implicit in <ref type="bibr" target="#b0">[1]</ref>: THEOREM 3.5 <ref type="bibr" target="#b0">[1]</ref>. VERTEX COLORING has an FPT 2approximation algorithm if the parameter is the genus of the graph.</p><p>For planarþkv graphs, an easy brute force algorithm gives a 7 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>À Á</head><p>-approximation: THEOREM 3.6. VERTEX COLORING has an FPT</p><formula xml:id="formula_9">7 3</formula><p>À Á -approximation algorithm for planarþkv graphs.</p><p>Proof. Let X ¼ fv 1 , . . . , v k g be k vertices of G such that G\X is planar (here we gloss over the question how this set is found or whether it is given in the input together with the planarþkv graph, cf. <ref type="bibr" target="#b30">[31]</ref>). We can determine x(G[X]) by trying all the k k possible colorings of G[X]. As discussed above, a 4 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>À Á</head><p>-approximate coloring of the planar graph G\X can be found in polynomial time. The coloring on G[X] and the coloring on G\X can be combined to obtain a coloring of the whole graph with</p><formula xml:id="formula_10">c ¼ x(G[X])þ 4 3 À Á . x(G\X) colors. It is easy to check that c 7 3 À Á x(G); the worst case occurs when x(G) ¼ x(G[X]) ¼ x(G\X) ¼ 3, but the algorithm produces a coloring with 3 þ 4 ¼ 7 colors. A</formula><p>Note that Theorems 3.5 and 3.6 are incomparable: bounded genus graphs might not be planarþkv for any k (e.g. large toroidal grids) and planarþ1v graphs can have unbounded genus (e.g. a grid with an additional vertex connected to every vertex).</p><p>The MAXIMUM INDEPENDENT SET problem is NP-hard for planar graphs <ref type="bibr" target="#b31">[32]</ref>, but has a linear-time approximation scheme <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34]</ref>. It follows from <ref type="bibr" target="#b34">[35]</ref> and <ref type="bibr" target="#b35">[36]</ref> that this can be generalized to bounded-genus graphs. THEOREM 3.7 <ref type="bibr" target="#b34">[35,</ref><ref type="bibr" target="#b35">36]</ref>. Maximum independent set admits a linear-time FPT-AS if the parameter is the genus of the graph.</p><p>For planarþkv graphs, a (1 þ e)-approximation of maximum independent set can be found by trying all 2 k possibilities on the k-extra vertices, and then by finding a (1 þ e)approximation on the remaining graph. In VERTEX COLORING, the goal is to minimize the number of different colors used. In other words, if we identify the set of colors with the set of positive integers, then we try to minimize the maximum of the colors assigned. In MINIMUM SUM COLORING, the optimization goal is to minimize the sum of the colors (positive integers) on the vertices. Besides its combinatorial interest, the problem is motivated by applications in scheduling and VLSI design <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b37">38]</ref>. The MINIMUM SUM EDGE COLORING problem is defined analogously. The MINIMUM SUM COLORING is linear-time solvable on bounded tree width graphs <ref type="bibr" target="#b38">[39]</ref>, but the MINIMUM SUM EDGE COLORING is one of the few problems that are polynomial-time solvable on trees <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b40">41]</ref>, but NP-hard already on graphs with tree width 2 <ref type="bibr" target="#b41">[42]</ref>. However, MINIMUM SUM EDGE COLORING has a linear-time PTAS for bounded tree width graphs (in fact, this is true even for the much more general multicoloring version). THEOREM 3.9 <ref type="bibr" target="#b42">[43]</ref>. MINIMUM SUM EDGE COLORING admits an FPT-AS if the parameter is the tree width.</p><p>Note that without parameterization we cannot obtain an approximation scheme for MINIMUM SUM EDGE COLORING, since the problem is APX-hard <ref type="bibr" target="#b41">[42]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">PARAMETERIZATION BY COST</head><p>In Section 3, our aim was to develop approximation algorithms that work efficiently if some parameter of the input is small. Perhaps the most obvious parameter of an optimization problem instance is the optimum cost. What we would like to have is an algorithm that efficiently finds an approximation of the optimum, if this optimum is small. Notice that many of the standard, well-studied problems in the parameterized complexity literature are standard parameterizations of certain optimization problems (e.g. MINIMUM VERTEX COVER, MAXIMUM CLIQUE, MINIMUM DOMINATING SET, LONGEST PATH, etc.) By studying the fixed-parameter tractability of these problems, we are investigating the possibility of having efficient exact algorithms for these problems in the case when the optimum is small. When a W[1]-hardness result shows that such an exact algorithm is unlikely to exist, then it is natural to study whether it is possible to approximate the optimum, if it is small.</p><p>Recently, at least three papers tried to extend parameterized complexity into this direction <ref type="bibr">[44 -46]</ref>. In Section 3, the definition of FPT-approximability (when the parameter is some property of the optimization instance) was a straightforward generalization of polynomial-time approximability. The definition becomes technically more delicate if we want to parameterize by cost. The first complication is that we have to decide whether we want to parameterize by the optimum cost (which is somewhat counterintuitive, since presumably the optimum cost is hard to determine), or we assume that the input contains a parameter k (the cost that should be reached), as in the standard parameterization of the problem.</p><p>Here we follow the definition proposed by Chen et al. <ref type="bibr" target="#b45">[45]</ref>. DEFINITION 4.1. Let X ¼ (I, sol, cost, goal) be an optimization problem. A standard FPT-approximation algorithm with performance ratio c for X is an algorithm that, given an input (x, k)[ S * Â N satisfying</p><formula xml:id="formula_11">OPTðxÞ k; if goal ¼ min; OPTðxÞ ! k; if goal ¼ max &amp;<label>ð1Þ</label></formula><formula xml:id="formula_12">computes a y [ sol(x) in time f(k) . jxj O(1) such that costðx; yÞ k Á c; if goal ¼ min; costðx; yÞ ! k=c; if goal ¼ max : &amp;<label>ð2Þ</label></formula><p>For inputs not satisfying condition (1), the output can be arbitrary.</p><p>The word 'standard' signifies that this is the approximation version of the standard parameterization, and distinguishes it from the case when the parameter is unrelated to the cost (as in Section 3).</p><p>Unfortunately, we do not have a good example for this form of approximability, an example where a problem is not FPT, but has a standard FPT-approximation algorithm with some performance ratio c . 1. Nevertheless, there are some examples of FPT-approximation algorithms appearing in the literature. Tree width is FPT, in fact for every k, a tree decomposition of width k can be computed in linear time if exists <ref type="bibr" target="#b47">[47]</ref>. This algorithm is quite complicated and not 66 D. MARX practical. However, there are much simpler FPT-algorithms that produce tree decompositions having width at most a constant factor larger than the optimum <ref type="bibr">[48 -57]</ref>. In the case of the rank width of graphs and branch width of matroids represented over a fixed-finite field, we have the curious situation that it can be decided in FPT-time whether the width is at most k <ref type="bibr" target="#b53">[52,</ref><ref type="bibr" target="#b54">53]</ref>, but it is not known whether a decomposition of width at most k (if it exists) can be constructed in FPT-time. However, standard FPT-approximation algorithms exist for these problems <ref type="bibr" target="#b54">[53]</ref><ref type="bibr" target="#b55">[54]</ref><ref type="bibr" target="#b56">[55]</ref>.</p><p>One might be tempted to define the notion of standard FPT-AS to capture the situation where a problem has a standard FPT-approximation algorithm for every c . 1. More precisely, we would like to have an analog of EPTAS, since approximation schemes where the exponent of input size increases as e decreases is not very interesting from the parameterized complexity point of view. Thus, the natural definition for a standard FPT-approximation scheme would be that for every e . 0, there is a standard FPT-approximation algorithm with performance ratio 1 þ e, and the running time is f(k,e) . jxj O (1) . However, this notion is not very interesting to study, since it implies fixed-parameter tractability; therefore, it does not extend the class of problems that we can call tractable. The proof is essentially the same as the proof of Proposition 6.1. PROPOSITION 4.1. Assume that there is an algorithm that has an input parameter e, and for every e . 0 it produces a (1 þ e)approximate solution for optimization problem X in time f(k,e) . jxj O (1) . Then the standard parameterization of X is in FPT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">NON-CONSTANT PERFORMANCE FUNCTIONS</head><p>When designing approximation algorithms, the usual aim is to ensure that the cost of the solution differs from the optimum by at most a constant factor. This means that the algorithm has to perform equally well regardless of whether the optimum is 'small' or 'large.' The analysis can be made more precise if the performance of the algorithm is bounded by a function of the optimum cost, rather than by an absolute constant. This is especially natural in the case of standard FPT-approximation (Section 4): if the goal is to have an algorithm that is efficient for small cost values, then it makes sense to require good performance only if the optimum is small.</p><p>Let @: N ! N be a nondecreasing function. We say that an approximation algorithm for optimization problem X has performance ratio function @(k) (or it is a @(k)-approximation algorithm) if it produces a solution with performance ratio at most @(OPT(x)) for every instance x. For example, if the solution has cost OPT(x) log OPT(x), then it is an log-approximation algorithm. Constant-factor approximability is the special case where @(k) is a constant function. The definition of parameterized FPT-approximation (Section 3) can be extended similarly. To define standard FPT-approximability with performance ratio function @(k), (2) has to be replaced with costðx; yÞ k Á @ðkÞ; if goal ¼ min; costðx; yÞ ! k=@ðkÞ; if goal ¼ max : &amp; If our goal is only to obtain an approximation algorithm with some performance function (no matter how bad it is), then in the case of maximization problems, FPT time does not give us more power than polynomial time. This surprising result was observed by Grohe and Gru ¨ber <ref type="bibr" target="#b57">[56]</ref>. THEOREM 5.1. If a maximization problem X has a standard FPT-approximation algorithm with performance ratio function @(k), then there is a polynomial-time @ 0 (k)-approximation algorithm for X, for some function @ 0 (k).</p><p>Proof. Assume that X has a standard FPT-approximation algorithm with running time f(k) . jxj O (1) and performance ratio function @(k). There is a computable nondecreasing function b(n) such that every instance of X with size at most n has optimum at most b(n). Denote by c(n) the largest i such that i n, f(i) n and f(i) can be computed in time O(n); clearly, c(n) is unbounded, nondecreasing and computable in time n O (1) .</p><p>Given an instance x, the polynomial-time approximation algorithm proceeds as follows. For every k ¼ 1,2, . . . , max(c(jxj),1), we run the assumed FPT-approximation algorithm on x, and select the best solution returned by the different runs (since we try k ¼ 1 and OPT(x) ! 1 holds, some solution is always found). From k max(c(jxj),1) it follows that the f(k) . jxj O (1) time FPT-algorithm runs in polynomial time, hence the running time of the whole procedure is polynomial in jxj.</p><p>If c(jxj) ! OPT(x), then the FPT-approximation algorithm is invoked with k ¼ OPT(x), which means that a solution of cost at least OPT(x)/@(OPT(x)) is produced. Assume therefore that c(jxj) , OPT(x). Let d(m) be the largest n such that b(n) , m. This means that jxj. d(OPT(x)) for every instance x, hence c(jxj)! c(d(OPT(x)). Thus, when the FPT-approximation algorithm is invoked with k ¼ c(d(OPT(x))) , OPT(x), then it produces a solution with value at least r(OPT(x)) :¼ c(d(OPT(x)))/@(c(d(OPT(x)))). It is easy to see that r(OPT(x)) is an unbounded computable function of OPT(x), hence the polynomial-time algorithm is an approximation algorithm with performance ratio function @ 0 (k) ¼ k/r(k).</p><p>A</p><p>We remark that the analog of Theorem 5.1 does not seem to hold for minimization problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Examples (polynomial-time)</head><p>Expressing the performance ratio of an algorithm as a function of the optimum can be interesting even in the case of polynomial-time approximation algorithms, independently of PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS 67 THE COMPUTER JOURNAL, Vol. 51 No. 1, 2008 parameterized complexity. We cite here three results of this type. Determining tree width is NP-hard <ref type="bibr" target="#b58">[57]</ref>, and no constant factor polynomial-time approximation algorithm is known (it is an important open question whether such an approximation is possible). However, the following approximation result was obtained recently by Feige et al. <ref type="bibr" target="#b59">[58]</ref>. THEOREM 5.2 <ref type="bibr" target="#b59">[58]</ref>. Given a graph with tree width k, a tree decomposition of width at most Oðk ffiffiffiffiffiffiffiffiffiffi log k p Þ can be constructed in polynomial time.</p><p>That is, tree width can be Oð ffiffiffiffiffiffiffiffiffiffi log k p Þ-approximated in polynomial time. (The previous best result was a O(log k)approximation <ref type="bibr" target="#b52">[51,</ref><ref type="bibr" target="#b60">59]</ref>.)</p><p>Whether MINIMUM DIRECTED FEEDBACK VERTEX SET is in FPT or not is one of the most important open question of parameterized complexity. In this problem, the task is to find a minimum set of vertices whose deletion makes the given directed graph acyclic. The undirected version of the problem is known to be in FPT (cf. <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b61">60]</ref>), but apparently none of the techniques go through for the directed case. It seems that a much deeper understanding of the structure of directed graphs is required before this problem can be settled. However, it is observed in <ref type="bibr" target="#b45">[45]</ref> that the results of <ref type="bibr" target="#b62">[61,</ref><ref type="bibr" target="#b63">62]</ref> imply an approximation algorithm with bounded performance ratio function. THEOREM 5.3 <ref type="bibr" target="#b45">[45]</ref>. MINIMUM DIRECTED FEEDBACK VERTEX SET has a polynomial-time approximation algorithm with performance ratio function O(log k . log log k).</p><p>In the MAXIMUM DISJOINT CYCLES problem, the task is to find k pairwise vertex disjoint cycles in a given graph. This problem is FPT (cf. [3 Section 8.1]). On the other hand, the directed version of the problem is W[1]-hard <ref type="bibr" target="#b45">[45,</ref><ref type="bibr" target="#b64">63]</ref>, but polynomial-time solvable for every fixed value of k <ref type="bibr" target="#b65">[64]</ref>. On the basis of the theoretical results proved in <ref type="bibr" target="#b65">[64]</ref>, Grohe and Gru ¨ber <ref type="bibr" target="#b57">[56]</ref> presented an FPT-approximation algorithm. By Theorem 5.1, the algorithm can be made to work in polynomial time. THEOREM 5.4 <ref type="bibr" target="#b57">[56]</ref>. There is a polynomial-time approximation algorithm for MAXIMUM DISJOINT DIRECTED CYCLES with performance ratio function @(k), for some computable function @(k).</p><p>The function @(k) is not given explicitely in <ref type="bibr" target="#b57">[56]</ref>, but k/@(k) is very slowly growing (even in the FPT-time version of the algorithm, before applying Theorem 5.1.).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Examples (FPT-time)</head><p>Graph layout problems arise in many application domains such as scheduling, VLSI design and archeology <ref type="bibr" target="#b66">[65]</ref>. A linear layout of a graph G(V, E) is a one-to-one mapping s between V and f1, . . . , jVjg. The bandwidth of a layout is max uv[E js(u) 2 s(v)j, the maximum 'length' of an edge in the layout. The cutwidth of a layout is max 1 i,jVj jfuv [ E : s(u) i and s(v) .igj, the maximum number of edges that cross the cut formed by two neighboring vertices in the layout. The bandwidth (respectively cutwidth) of a graph is the minimum bandwidth (respectively cutwidth) over all possible linear layouts of the graph. Bandwidth is W[1]-hard <ref type="bibr" target="#b67">[66]</ref>, while cutwidth is FPT <ref type="bibr" target="#b68">[67]</ref>.</p><p>Subdividing an edge with a new degree two vertex might decrease the bandwidth of the graph. Topological bandwidth is the smallest bandwidth that can be achieved by repeatedly subdividing edges. Topological bandwidth is known to be W <ref type="bibr" target="#b0">[1]</ref>-hard <ref type="bibr" target="#b69">[68]</ref>. Fellows <ref type="bibr" target="#b70">[69]</ref> observed that if tbw(G) (respectively cw(G)) is the topological bandwidth (respectively cutwidth) of graph G, then</p><formula xml:id="formula_13">tbwðGÞ cwðGÞ þ 1<label>ð3Þ</label></formula><p>and cwðGÞ , tbwðGÞ 2</p><p>holds. This means that if a graph has topological bandwidth at most k, then one can obtain a layout with cutwidth less than k 2 using the algorithm of <ref type="bibr" target="#b68">[67]</ref>. Furthermore, using (3) (whose proof is algorithmic), this layout can be turned into a layout for a subdivision of G with bandwidth at most k 2 .</p><p>THEOREM 5.5 <ref type="bibr" target="#b70">[69]</ref>. TOPOLOGICAL BANDWIDTH has a standard FPT-approximation algorithm with performance ratio function k.</p><p>The graph parameter clique width was introduced by Courcelle et al. <ref type="bibr" target="#b71">[70]</ref>. Similarly to tree width, it measures the complexity of a graph with respect to certain composition operators. A k-expression describes a way of constructing the graph using these operations; the clique width of a graph is the smallest k such that it has a k-expression. Fellows et al. <ref type="bibr" target="#b72">[71]</ref> have shown that determining clique width is NP-hard, in fact, it cannot be approximated with an absolute error guarantee, unless P ¼ NP. Oum and Seymour <ref type="bibr" target="#b55">[54]</ref> use the approximability of rank width to obtain an approximation algorithm for clique width. They show that if cw(G) is the clique width and rw(G) is the rank width of a graph G, then rwðGÞ cwðGÞ 2 rwðGÞþ1 À 1 holds. The proof is algorithmic: given a rank decomposition of width k, a (2 kþ1 2 1)-expression can be obtained in polynomial time. There is an FPT-approximation algorithm that computes a rank decomposition of width 3rw(G) þ1 <ref type="bibr" target="#b56">[55]</ref>. Therefore, clique width can be approximated by first computing an approximate rank decomposition and then turning it into a k-expression. THEOREM 5.6 <ref type="bibr" target="#b56">[55]</ref>. CLIQUE WIDTH has a standard FPT-approximation algorithm with performance ratio function (2 3kþ2 2 1)/k. The significance of Theorem 5.6 comes from the fact that certain optimization problems are linear-time solvable for every k, if a k-expression of the graph is given in the input. That is, these problems are FPT parameterized by clique width, but only if the corresponding k-expression is given in the input. Theorem 5.6 can be used to remove the requirement that the k-expression is given in the input: if we know that the graph has a k-expression, then an f(k)-expression can be obtained in FPT-time, where f(k) ¼ 2 3kþ2 2 1. Then, instead of using the algorithm for k-expressions, we can use the algorithm for f(k)-expressions: the running time might be much larger, but it is still linear with a constant depending only on k. Therefore, obtaining the approximation and then solving the problem using the f(k)-expression can be done in FPT-time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Negative results</head><p>For certain problems, it is possible to show that there is no standard FPT-approximation algorithm for any performance ratio function. Given a graph G(V, E), an independent dominating set is an independent set S # V of vertices such that for every v [ V, either v [ S, or v is a neighbor of a member of S. The MINIMUM INDEPENDENT DOMINATING SET problem is the corresponding optimization problem, where the goal is to minimize the size of the set S. Downey et al. <ref type="bibr" target="#b46">[46]</ref> prove that this problem is completely inapproximable. THEOREM 5.7 <ref type="bibr" target="#b46">[46]</ref>. If MINIMUM INDEPENDENT DOMINATING SET has a standard FPT-approximation algorithm with performance ratio function @(k) for some computable function @(k), then W[2] ¼ FPT.</p><p>Chen et al. <ref type="bibr" target="#b45">[45]</ref> presents inapproximability results for satisfiability problems. In the MIN-WSAT(CIRC) problem, a Boolean circuit is given and the task is to find a satisfying assignment of minimum weight (where the weight of an assignment is the number of true variables). THEOREM 5.8 <ref type="bibr" target="#b45">[45]</ref>. If MIN-WSAT(CIRC) has a standard FPT-approximation algorithm with performance ratio function @(k) for some computable function @(k), then W[P] ¼ FPT.</p><p>Similar results hold for other variants of the satisfiability problem and for the parameterized halting problem <ref type="bibr" target="#b45">[45]</ref>.</p><p>All the inapproximability results presented above are somewhat unsatisfying in the sense that the problems considered are not monotone. Monotone means that (in case of a minimization problem) if we extend a feasible solution with additional vertices/true variables, then it remains feasible. Clearly, this does not necessarily hold in these examples. Therefore, it can happen that the optimum is k, and every feasible solution has cost k, which makes approximation equivalent to finding an optimum solution. The inapproximability proofs in these examples tell us more about the hardness of finding exact solutions than about the hardness of approximation. It would be much more interesting (and possibly, more difficult) to have analogous inapproximability results for the monotone problems MAXIMUM CLIQUE and MINIMUM DOMINATING SET, for example.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">QUALITY OF APPROXIMATION AS PARAMETER</head><p>A PTAS can produce solutions with approximation ratio arbitrary close to 1. However, we have to pay a price for that: the running time can ridiculously be large if e is small. Table <ref type="table" target="#tab_1">1</ref> (reproduced from <ref type="bibr" target="#b73">[72]</ref>) presents the running time of some approximation schemes for e ¼ 0.2. As we can see, running times of O(jxj 1,000,000 ) or worse is not uncommon if we require that the maximum error is 20%. Obviously, such algorithms are not useful in practice. Nevertheless, these results are important from the theoretical point of view, as they show that there is no lower bound on the approximation ratio that can be achieved in polynomial time.</p><p>The notion of EPTAS tries to formalize a restricted class of approximation schemes, where the algorithm might have a chance of being useful. If the running time of the algorithm is of the form c 1/e . n, and c is not too large, then the algorithm can be efficient for, say, e ¼ 0.2. In many cases, the first approximation scheme obtained for a problem was not an EPTAS, but later it was improved to an EPTAS. For example, Arora <ref type="bibr" target="#b74">[73]</ref> presented an jxj O(1/e ) time PTAS for Euclidean TSP, which is not an EPTAS. However, in the journal version of the paper <ref type="bibr" target="#b75">[74]</ref>, the running-time of the algorithm is improved to jxj . log O(1/e ) jxj ¼ 2 O(1/e 2 ) . jxj 2 , hence the problem admits an EPTAS. Arora et al. <ref type="bibr" target="#b76">[75]</ref> presented an jxj O(1/e ) time approximation scheme for the EUCLI-DEAN k-MEDIAN problem. Later this was improved to an EPTAS with running time 2 O(1/e Álog 1/e ) . n <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b76">75]</ref>. In certain cases, the effort to obtain an EPTAS was only partially successful. For example, Hunt et al. <ref type="bibr" target="#b77">[76]</ref> show that MAXIMUM INDEPENDENT SET for unit disk graphs admits an jxj O(1/e ) time PTAS. They are unable to present an EPTAS for the problem in general, but for the special case of l-precision unit disk graphs (where the centers of the disk are not closer than l from each other) they give a 2 O(1/(el) 2 ) . n time EPTAS. If a problem resists every attempt to obtain an EPTAS, then we should consider looking for some negative evidence showing that no EPTAS is possible, i.e. that it is not possible to get 1/e out of the exponent of the input size (modulo some complexity-theoretic assumption). It is not very surprising that parameterized complexity can provide such evidence, since getting out certain parameters from the exponent is the central issue of the theory. The basic tool that can be used to prove negative results for the existence of EPTASs is the following connection, observed independently by Bazgan <ref type="bibr" target="#b78">[77]</ref> and Cesati and Trevisan <ref type="bibr">[78]</ref>. PROPOSITION 6.1. If an optimization problem X admits an EPTAS, then the standard parameterization of X is FPT.</p><p>Proof. Assume that we have an algorithm that produces a (1 þ e)-approximate solution in time f(1/e) . jxj O (1) . Given an instance (x, k) of the standard parameterization of X, we set e :¼ 1/(2k), and use the EPTAS to find a (1 þ e)-approximate solution in time f(1/e) . jxj O(1) ¼ f(2k) . jxj O (1) . Assume first that X is a minimization problem. If the optimum is at most k, then the cost of the approximate solution is at most</p><formula xml:id="formula_15">(1 þ e)k k þ 1/2 , k þ 1.</formula><p>As the cost is integer, the cost of the approximate solution is at most k. If the optimum is greater than k, then the cost of the approximate solution is also greater than k. Therefore, by checking whether the cost of the approximate solution is at most k, we can decide whether the optimum is at most k. The proof is similar in the case of maximization problems: if the optimum is at least k, then the cost of an (1 þ e)-approximate solution is at</p><formula xml:id="formula_16">least k/(1 þ e) ¼ k 2 1/(2 þ 1/k) . k 2 1.</formula><p>A</p><p>We can use the contrapositive of Proposition 6.1 to show that it is unlikely that a particular problem admits an EPTAS. COROLLARY 6.1. If the standard parameterization of an optimization problem is W[1]-hard, then the optimization problem does not have an EPTAS (unless FPT ¼ W <ref type="bibr" target="#b0">[1]</ref>).</p><p>It has to be remarked that the converse of Proposition 6.1 is not true. For example, MINIMUM VERTEX COVER is FPT, but it is APX-hard, hence it does not even have a PTAS. Therefore, Proposition has 6.1 limited applicability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Examples</head><p>Table <ref type="table" target="#tab_2">2</ref> lists problems where the existence of an EPTAS was ruled out using Proposition 6.1. The first four problems are geometric problems. For a set V of geometric objects, the intersection graph of V is a graph with vertex set V where two vertices are connected if and only if the two objects have nonempty intersection. Intersection graphs of disks, rectangles, line segments and other objects arise in applications such as facility location <ref type="bibr" target="#b80">[79]</ref>, frequency assignment <ref type="bibr" target="#b81">[80]</ref> and map labeling <ref type="bibr" target="#b82">[81]</ref>. The first four lines in Table <ref type="table" target="#tab_2">2</ref> show that if we restrict MAXIMUM INDEPENDENT SET and MINIMUM DOMINATING SET to the intersection graphs of unit-radius disks or unit-size squares, then the problem admits a PTAS <ref type="bibr" target="#b77">[76,</ref><ref type="bibr" target="#b83">82,</ref><ref type="bibr" target="#b85">83]</ref>, but does not have an EPTAS <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b86">84]</ref>. COVERING POINTS WITH SQUARES is also a geometric problem, but it is not defined in terms of intersection graphs. In this problem, n points are given in the plane, and the task is to cover all of them with at most k (axis-parallel) unit squares. The squares can be at arbitrary locations in the plane.</p><p>DISTINGUISHING SUBSTRING SELECTION and CLOSEST SUB-STRING are two pattern matching problems that are motivated by applications in computational biology. In the CLOSEST SUB-STRING problem, the task is to find a string of length L that approximately appears in each of the k input strings, where 'approximately appears' means that it appears with at most d mismatches. The goal is to minimize this number d. In the DISTINGUISHING SUBSTRING SELECTION problem the input strings are divided into 'good' strings and 'bad' strings, and we have to find a string of length L that approximately appears in each of the good strings, but does not appear (even approximately) in any of the bad strings. We do not give a more detailed description of these problems, as many variants, parameterizations and optimization goals are defined in the literature, see <ref type="bibr">[85 -89]</ref>.</p><p>Khanna et al. <ref type="bibr" target="#b93">[90]</ref> defined classes of optimization problems that have PTASs. The key to approximability in these problems is the underlying planar structure, which allows us to Given an instance of the above problems, the incidence graph is a bipartite graph defined by associating a vertex to each variable and each clause (constraint), and by connecting each variable to every clause (constraint) where it appears. Khanna and Motwani <ref type="bibr" target="#b94">[91]</ref> show that MPSAT, TMIN, TMAX, MULTIVA-LUED MAX kCSP all admit a PTAS if the incidence graph is planar. The running time is jxj O(1/e ) , hence it is not an EPTAS. Cesati and Trevisan <ref type="bibr">[78]</ref> have shown that the standard parameterization of PLANAR MULTIVALUED MAX 3CSP is W[1]-hard, hence by Proposition, 6.1 the PTAS cannot be improved to an EPTAS, unless W[1] ¼ FPT. Similar results were obtained for MPSAT, TMIN, TMAX by Cai et al. <ref type="bibr" target="#b95">[92]</ref>. THEOREM 6.1 <ref type="bibr">[78,</ref><ref type="bibr" target="#b95">92]</ref>. The planar problems MPSAT, TMIN, TMAX, PLANAR MULTIVALUED MAX 3CSP do not admit an EPTAS, unless W[1] ¼ FPT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Parameterization by 1/e</head><p>All the negative results in Table <ref type="table" target="#tab_2">2</ref> were obtained using Proposition 6.1. While this method is simple and apparently works, there is something unnatural about it. Our aim is to prove that 1/e cannot be taken out of the exponent of the input size. In order to show this, we consider the standard parameterization, and prove that k cannot be taken out of the exponent. But it could not be done somehow more directly, by defining 1/e to be the parameter? Intuitively, it is clear that what we are trying to determine is whether the problem is FPT, with 1/e being the parameter. However, it is not entirely clear what 'defining 1/e to be the parameter' means. The problem is that the parameterized complexity theory is not developed for optimization problems, and optimization problems are usually studied via the standard parameterization. In the decision version, however, it is not immediately clear what the meaning of e is, as we do not have to produce a solution. To make the idea of parameterization by 1/e technically rigorous, we introduce a 'gap' version of the standard parameterization: the input comes with a promise stating that there is a gap between the yes-instances and the no-instances. Parameterization by 1/e is parameterization by this gap size. If X is an optimization problem, then we define GAP-X An approximation scheme for optimization problem X can be used to decide GAP-X. Let X be a minimization problem (the argument for maximization problems is similar). If (x, k, e) is a yes-instance of GAP-X, then OPT(x) k, and the approximation scheme can produce a (1 þ e)-approximate solution with cost at most (1 þ e)k. On the other hand, if (x, k, e) is a no-instance, then by assumption OPT(x) . (1 þ e)k holds, thus the cost of the solution produced by the approximation scheme is strictly greater than (1 þ e)k. This means that deciding an instance (x, k, e) of GAP-X is not more difficult than obtaining a (1 þ e)-approximate solution. Therefore, we have the following proposition. PROPOSITION 6.2. If optimization problem X admits a PTAS, then GAP-X is in XP. If X admits an EPTAS, then GAP-X is in FPT.</p><p>Recall that XP is the class of parameterized problems that can be decided in polynomial time for every fixed value of the parameter. Proposition 6.2 can be used to show that a problem X does not have an EPTAS: if GAP-X is W[1]-hard, then X does not have an EPTAS unless FPT ¼ W <ref type="bibr" target="#b0">[1]</ref>. This technique is potentially more powerful than using Proposition 6.1: it might apply even to problems whose standard parameterizations are FPT, since k is not a parameter of GAP-X.</p><p>To demonstrate the use of Proposition 6.2, we re-prove a result of <ref type="bibr" target="#b95">[92]</ref> and show that PLANAR TMIN does not admit an EPTAS. The reduction is based on the framework of matrix-type reductions introduced in <ref type="bibr" target="#b86">[84]</ref>, but the presentation here is self-contained. THEOREM 6. Assume that G has n vertices f1, 2, . . . , ng. The constructed instance has 2t(t þ 1)n variables. The variables are arranged into blocks A i,j (1 i t, 0 j t) and B i,j (0 i t, 1 j t), where each block contains n variables. The variables in block A i,j (respectively, B i,j ) will be denoted by a i,j,s (respectively, b i,j,s ) for s ¼ 1, . . . , n. We construct t 2 DNFs such that f i,j (1 i, j t) contains variables only from blocks A i,j21 , A i,j , B i21, j , B i,j . As shown in Fig. <ref type="figure" target="#fig_2">1</ref>, the incidence graph is planar. The formulas are defined as </p><formula xml:id="formula_17">f i;j ¼ W n s¼1<label>ða</label></formula><formula xml:id="formula_18">least k þ 1 . (1 þe)k ¼ (1 þ 1/ (2k))k ¼ k þ 1/2.</formula><p>Therefore, the gap size requirement is satisfied.</p><p>Assume that G has a clique v 1 , . . . , v t . For every i,j, we set a i,j,v i of block A i,j and b i,j,v j of block B i,j to true. We claim that this assignment of weight 2t(t þ 1) satisfies every formula. Indeed, if i ¼ j ¼ r, then f i,j is satisfied by the term a i,j21,v r ^ai,j,v r ^bi21,j,v r ^bi,j,v r ; if i = j, then f i,j is satisfied by the term a i,j21,v i ^ai,j,v i ^bi21,j,v j ^bi,j,v j (note that (v i , v j ) is an edge of G, hence f i,j has such a term).</p><p>For the other direction, suppose that G has no clique of size t, but there is a satisfying assignment of weight at most (1 þ e)k. Notice that (1 þ e)k , k þ 1, hence the weight of the assignment is at most k. Furthermore, each block of variables has to contain at least one true variable, otherwise the adjacent formulas could not be satisfied. Therefore, the weight of the assignment is exactly k, and there is exactly one true variable in each block.</p><p>For every term of f i,j , there is an s such that the term contains both a i,j21,s and a i,j,s . This means that if f i,j is satisfied, then the true variables in blocks A i,j21 and A i,j have the same index. Furthermore, this is true for all the blocks in row i, hence there is a value v i such that a i,j,v i is true for every 1 j t. Similarly, for every column j, there is a value v 0 j such that variable b i,j,v 0 j is true. We claim that v i ¼ v 0 i for every 1 i t. Indeed, if a term of f i,i is satisfied, then both a i,i,s and b i,i,s have to be true for some s, which implies s ¼ v i ¼ v 0 i . Now the vertices v 1 , . . . , v t form a clique: if v i and v j are not connected by an edge, then none of the terms in f i,j are satisfied. This proves the correctness of the reduction. A</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Proving lower bounds</head><p>The fact that an optimization problem does not have an EPTAS (unless FPT ¼ W <ref type="bibr" target="#b0">[1]</ref>) does not rule out the possibility of having a PTAS of running time jxj O(log log log 1/e ) , for example. Such a running time would be almost as good as a polynomial-time algorithm. However, by a more careful analysis and by having a somewhat stronger complexitytheoretic assumption, we can actually prove lower bounds on the exponent of jxj.</p><p>MAXIMUM CLIQUE can be solved in jxj O(k)   n) exists. This assumption is known as the Exponential Time Hypothesis (ETH) <ref type="bibr" target="#b98">[95]</ref>, and it is equivalent to the parameterized complexity conjecture FPT = M <ref type="bibr" target="#b0">[1]</ref> (see <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b99">96]</ref>).</p><p>This lower bound on MAXIMUM CLIQUE can be transfered to other parameterized problems via reductions. Assume that a problem Q is proved W[1]-hard by a parameterized reduction from MAXIMUM CLIQUE, and the reduction constructs instances such that the parameter is at most p(k) (for some function p), where k is the parameter of the maximum clique instance. (The definition of parameterized reduction requires that such a function p(k) exists.) If Q can be solved in time f(k) . jxj g(k) , then the reduction implies that MAXIMUM CLIQUE can be solved in time f 0 (k)</p><p>. jxj g(p(k)) . Therefore, the problem Q cannot be solved in time f 00 (k) . jxj o(p 21 (k)) for any function f 00 (k), unless ETH fails. Proposition 6.1 shows that if an optimization problem admits an approximation scheme with running time f(1/e) . jxj g(1/e ) , then the standard parameterization can be solved in f(2k) . jxj g(2k) time. Therefore, a lower bound on the standard parameterization can be used to bound the efficiency of any PTAS for the problem. The W[1]-hardness results in Table <ref type="table" target="#tab_2">2</ref> are obtained by a parameterized reduction from MAXIMUM CLIQUE, and these reductions increase the parameter at most by some polynomial function p(k). Therefore, assuming ETH, for each of these problems there is an integer c such that there is no f(k) . jxj o(k 1/c ) time algorithm for the standard parameterization, which implies that there is no f(1/e) . jxj o((1/e ) 1/c ) time PTAS. The only exception is CLOSEST SUB-STRING: the reduction presented in <ref type="bibr" target="#b91">[88]</ref> increases the parameter exponentially, thus all we can prove is that there is no f(1/e) . jxj o(log 1/e ) time PTAS.</p><p>In a similar way, we can obtain lower bounds using Proposition 6.2. For example, the reduction in Theorem 6.2 constructs instances where the parameter 1/e is O(t 2 ). Therefore, we have the following corollary. COROLLARY 6.2. There is no f(1/e) . jxj oð ffiffiffiffiffiffiffi ffi 1=e p ) time PTAS for PLANAR TMIN, unless ETH fails. This result is somewhat better than the f(1/e) . jxj o((1/e ) 1/4 ) bound that follows from the proof in <ref type="bibr" target="#b95">[92]</ref>. However, there is still a gap between this lower bound and the jxj O(1/e ) upper bound given by Khanna and Motwani <ref type="bibr" target="#b94">[91]</ref>. It would be interesting to close this gap, possibly by proving stronger lower bounds. Using bidimensionality theory <ref type="bibr" target="#b100">[97,</ref><ref type="bibr" target="#b101">98]</ref>, one may show that the standard parameterization of PLANAR TMIN can be solved in time f(k) . jxj Oð</p><formula xml:id="formula_19">ffiffi ffi k p Þ</formula><p>. This means that no bound better than f(1/e)jxj Oð ffiffiffiffiffiffiffi ffi 1=e p Þ can be obtained for PLANAR TMIN using Proposition 6.1. Note that if we are using Proposition 6.2, then there is no such apparent barrier. It seems that we have to abandon Proposition 6.1 and directly parameterize by 1/e, if we want to prove tight lower bounds on the efficiency of approximation schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSIONS</head><p>We have investigated several ways in which parameterized complexity and the theory of approximation algorithms can benefit from each other. It is not clear at the moment which directions will lead to fruitful areas of research. It seems that there are many examples of FPT-approximability for parameterized instances (as discussed in Section 3), and it can be reasonably expected that many such results will follow. It is much less clear to what extent standard FPT-approximability (Section 4, 5) will be important. The relative lack of examples might be the sign that we are missing some fundamental method. Evaluating the efficiency of approximation schemes (Section 6) has become a standard technique, with results of this type steadily accumulating. Besides obtaining such results for a wider range of problems, here the challenge is to prove tight results.</p><p>There are some further connections between parameterized complexity and approximation algorithms that we have not touched upon. Kernelization of a parameterized problem is a polynomial-time preprocessing algorithm that constructs an equivalent instance such that the size of the new instance can be bounded by a function of the parameter. For example, Nemhauser and Trotter <ref type="bibr" target="#b102">[99]</ref> present a preprocessing algorithm for the MINIMUM VERTEX COVER problem that constructs an instance with at most 2k vertices (where k is the parameter of the new instance). In many cases, such a linear-size kernelization algorithm can be used to obtain a constant-factor approximation algorithm. Therefore, any PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS 73 THE COMPUTER JOURNAL, Vol. 51 No. <ref type="bibr" target="#b0">1,</ref><ref type="bibr">2008</ref> lower bound on the approximation ratio (obtained by the PCP theorems) immediately translates into a lower bound on the kernel size. (A different approach for obtaining kernelization lower bounds is proposed in <ref type="bibr" target="#b103">[100]</ref>.)</p><p>Another interesting connection appears in the use of the iterative compression technique. The main idea of iterative compression is that instead of solving the search problem 'find a solution of size k,' we solve the possibly easier compression problem 'given a solution of size k þ 1, find a solution of size k.' It turns out that for certain minimization problems if we can solve the compression problem, then we can solve the search problem as well by iteratively solving larger and larger instances <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b61">60,</ref><ref type="bibr" target="#b104">[101]</ref><ref type="bibr" target="#b105">[102]</ref><ref type="bibr" target="#b106">[103]</ref><ref type="bibr" target="#b107">[104]</ref>. Furthermore, as observed in <ref type="bibr" target="#b107">[104]</ref>, if we can solve the compression problem and have a constant-factor approximation algorithm, then the approximate solution can be compressed, and there is no need for the iterative trick. In fact, an approximation algorithm with arbitrary performance ratio function (Section 5) would be sufficient for this application.</p><p>In counting problems, the task is not only to check if there is a solution, but we have to determine the total number of solutions to the problem. The counting problem can be hard even for those problems where the existence of a solution is polynomial-time decidable. For example, checking whether a graph has a perfect matching can be done in polynomial time, but Valiant <ref type="bibr" target="#b108">[105]</ref> has shown that counting the number of perfect matching is complete for the complexity class #P. A similar increase in complexity appears in the case of parameterized problems: finding a path of length k is FPT <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b109">106,</ref><ref type="bibr" target="#b110">107]</ref>, but counting the number of these paths is #W <ref type="bibr" target="#b0">[1]</ref>-hard <ref type="bibr" target="#b111">[108]</ref>. Given the hardness of exact counting, it is very natural to investigate the possibility of approximate counting. In the parameterized complexity framework, Arvind and Raman <ref type="bibr" target="#b112">[109]</ref> present an FPT-time randomized approximation scheme for counting the number of subgraphs isomorphic to a bounded tree width graph H (thus, in particular, the algorithm can be used to approximate the number of paths of length k). Recently, Mu ¨ller <ref type="bibr" target="#b113">[110]</ref> proved a parameterized complexity analog of a classical result of Stockmeyer by showing that approximately counting the number of solutions for a problem in W[P] can be done in randomized FPT-time with a W[P] oracle.</p><p>Finally, to motivate further research, we propose four open questions, related to the four main issues discussed in the paper. † Investigate the approximability of geometric problems, parameterized by the dimension. † Find a convincing example where no FPT-time exact algorithm is known for a problem, but it has a standard FPT-approximation algorithm with constant performance ratio. † Is there a standard FPT-approximation algorithm for MAXIMUM CLIQUE or MINIMUM DOMINATING SET with some performance ratio function? † Prove tight lower bounds (assuming ETH) on the efficiency of the PTAS for some natural problem (MPSAT, TMIN, geometric problems, etc.)</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>THE COMPUTER JOURNAL, Vol. 51 No.<ref type="bibr" target="#b0">1,</ref> 2008   </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>THEOREM 3 . 8 .</head><label>38</label><figDesc>MAXIMUM INDEPENDENT SET admits a lineartime FPT-AS on planarþkv graphs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIGURE 1 .</head><label>1</label><figDesc>FIGURE 1. Structure of the instance constructed in Theorem 6.2 (n ¼ 4, t ¼ 3).</figDesc><graphic coords="13,386.93,102.05,173.38,168.89" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE 1 .</head><label>1</label><figDesc>The running time of some PTASs with 20% error.</figDesc><table><row><cell cols="2">PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Running time</cell></row><row><cell>Problem</cell><cell>Reference</cell><cell>for 20% error</cell></row><row><cell>EUCLIDEAN TSP</cell><cell>Arora [73]</cell><cell>O(jxj 15,000 )</cell></row><row><cell cols="3">MULTIPLE KNAPSACK Chekuri and Khanna [111] O(jxj 9,375,000 )</cell></row><row><cell cols="2">MAXIMUM SUBFOREST Shamir and Tsur [112]</cell><cell>O(jxj 958,267,391 )</cell></row><row><cell>MAXIMUM</cell><cell>Erlebach et al. [113]</cell><cell>O(jxj 523,804 )</cell></row><row><cell>INDEPENDENT SET for</cell><cell></cell><cell></cell></row><row><cell>disk graphs</cell><cell></cell><cell></cell></row></table><note><p><p><p>69</p>THE COMPUTER JOURNAL, Vol. 51 No.</p><ref type="bibr" target="#b0">1,</ref> 2008   </p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE 2 .</head><label>2</label><figDesc>Problems where a W<ref type="bibr" target="#b0">[1]</ref>-hardness result rules out the possibility of an EPTAS. ¼ ff 1 , . . . , f n g of DNFs.Find: An assignment c. Goal: Maximize the number of DNFs satisfied by c. TMIN Input: A collection C ¼ ff 1 , . . . , f n g of positive DNFs. Find: An assignment c that satisfies every DNF in C Goal: Minimize the weight of c. TMAX Input: A collection C ¼ ff 1 , . . . , f n g of negative DNFs. Find: An assignment c that satisfies every DNF in C. Goal: Maximize the weight of c. Let x 1 , . . . , x n be variables and let D i be the domain of variable x i . A constraint over x 1 , . . . , x n is an arbitrary relation over D 1 , . . . , D n , i.e. each possible combination of values assigned to the variables either satisfies the constraint or not. A constraint is given in the input by listing the combination of values that satisfy the constraint.MULTIVALUED MAX kCSPInput: A collection C ¼ fC 1 , . . . , C m g of constraints; each constraint is on k variables. Find: An assignment c. Goal: Maximize the number of constraints satisfied by c.</figDesc><table><row><cell>Problem</cell><cell>PTAS result</cell><cell>W[1]-hardness</cell></row><row><cell>MAXIMUM INDEPENDENT SET for</cell><cell>jxj O(1/e ) [76]</cell><cell>[18]</cell></row><row><cell>unit disks</cell><cell></cell><cell></cell></row><row><cell>MAXIMUM INDEPENDENT SET for</cell><cell>jxj O(1/e ) [76]</cell><cell>[18]</cell></row><row><cell>unit squares</cell><cell></cell><cell></cell></row><row><cell>MAXIMUM DOMINATING SET for</cell><cell>jxj O(1/e ) [76]</cell><cell>[84]</cell></row><row><cell>unit disks</cell><cell></cell><cell></cell></row><row><cell>MAXIMUM DOMINATING SET for</cell><cell>jxj O(1/e ) [76]</cell><cell>[84]</cell></row><row><cell>unit squares</cell><cell></cell><cell></cell></row><row><cell cols="3">COVERING POINTS WITH SQUARES jxj O(1/e 2 ) [114] [18]</cell></row><row><cell>DISTINGUISHING SUBSTRING</cell><cell cols="2">jxj O(1/e ) [115] [93, 116]</cell></row><row><cell>SELECTION</cell><cell></cell><cell></cell></row><row><cell>CLOSEST SUBSTRING</cell><cell>jxj O(1/e 4 ) [85]</cell><cell>[88]</cell></row><row><cell>PLANAR MPSAT</cell><cell>jxj O(1/e ) [91]</cell><cell>[92]</cell></row><row><cell>PLANAR TMIN</cell><cell>jxj O(1/e ) [91]</cell><cell>[92]</cell></row><row><cell>PLANAR TMAX</cell><cell>jxj O(1/e ) [91]</cell><cell>[92]</cell></row><row><cell cols="2">PLANAR MULTIVALUED MAX 3CSP jxj O(1/e ) [91]</cell><cell>[78]</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>The reduction is from MAXIMUM CLIQUE. Given a graph G and an integer t, we construct an instance of GAP-PLANAR-TMIN with k ¼ 2t(t þ1) and e ¼ 1/(2k) such that † if G has a clique of size t, then the constructed instance has a solution with weight at most k; † if G does not have a clique of size t, then the constructed instance does not have a solution with weight at most (1 þ e)k.</figDesc><table /><note><p><p>2. GAP-PLANAR-TMIN is W[1]-hard. Thus PLANAR TMIN does not have an EPTAS, unless FPT ¼ W[1].</p>Proof.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>time by brute force. It is believed that this is essentially best possible; in fact, Chen et al.<ref type="bibr" target="#b96">[93]</ref> show that an f(k) . jxj o(k) time algorithm would imply that 3SAT can be solved in 2 o(n) time. The fastest known algorithm for n-variable 3-SAT runs in randomized time 1.32216 n<ref type="bibr" target="#b97">[94]</ref> (improving on the 2 n brute force algorithm). It is believed the running time of every algorithm must be exponential in n, i.e. no algorithm with running time 2 o(</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Some authors (e.g.,<ref type="bibr" target="#b2">[3]</ref>) prefer to define parameterized problems such that the parameter value is not a function of the instance, but it is a number explicitly given in the instance. Each approach has its strengths and weaknesses. We prefer to define the parameter as a function, to emphasize that a problem can have many possible parameterizations.PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS61 THE COMPUTER JOURNAL, Vol. 51 No. 1</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2008" xml:id="foot_1"><p>, 2008 at Fordham University on December 20, 2012 http://comjnl.oxfordjournals.org/ Downloaded from</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>THE COMPUTER JOURNAL, Vol. 51 No. 1, 2008 at Fordham University on December 20, 2012 http://comjnl.oxfordjournals.org/ Downloaded from</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_3"><p>at Fordham University on December 20, 2012 http://comjnl.oxfordjournals.org/ Downloaded from</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_4"><p>More precisely, we add k new vertices and connect them with each other and with the old vertices arbitrarily.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_5"><p>D. MARX THE COMPUTER JOURNAL, Vol. 51 No. 1, 2008 at Fordham University on December 20, 2012 http://comjnl.oxfordjournals.org/ Downloaded from</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>I would like to thank Mike Fellows for asking me to write this survey, and for the many ideas, comments and references that were essential in compiling the material. I am grateful to Martin Grohe and Magdalena Gru ¨ber for their comments on the manuscript.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Algorithmic graph minor theory: decomposition, approximation, and coloring</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Demaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hajiaghayi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kawarabayashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 46th Annual IEEE Symp. Foundations of Computer Science (FOCS 2005)</title>
		<meeting>46th Annual IEEE Symp. Foundations of Computer Science (FOCS 2005)<address><addrLine>Pittsburgh, PA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-10-23">2005. October 23-25</date>
			<biblScope unit="page" from="637" to="646" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Parameterized Complexity Theory</title>
		<author>
			<persName><forename type="first">J</forename><surname>Flum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Grohe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Parameterized complexity</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Downey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Monographs in Computer Science</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">G</forename><surname>Ausiello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Crescenzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gambosi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Marchetti-Spaccamela</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Protasi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Complexity and Approximation Springer-Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Some optimal inapproximability results</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ha ˚stad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="798" to="859" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">On the parameterized approximability of TSP with deadlines</title>
		<author>
			<persName><forename type="first">H.-J</forename><surname>Bo ¨ckenhauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">ˇ</forename><surname>Hromkovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kneis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kupke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory Comput. Syst</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On coresets for k-means and k-median clustering</title>
		<author>
			<persName><forename type="first">S</forename><surname>Har-Peled</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mazumdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 36th Annual ACM Symp. Theory of Computing</title>
		<meeting>36th Annual ACM Symp. Theory of Computing<address><addrLine>Chicaco, IL; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="291" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Worst-case analysis of a new heuristic for the travelling salesman problem</title>
		<author>
			<persName><forename type="first">N</forename><surname>Christofides</surname></persName>
		</author>
		<idno>388</idno>
		<imprint>
			<date type="published" when="1976">1976</date>
			<pubPlace>Pittsburgh</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Graduate School of Industrial Administration, Carnegie-Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The traveling salesman problem with distances one and two</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yannakakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Vertex cover: further observations and further improvements</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">A</forename><surname>Kanj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Jia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="280" to="301" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Refined memorization for vertex cover</title>
		<author>
			<persName><forename type="first">L</forename><surname>Sunil Chandran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Grandoni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">93</biblScope>
			<biblScope unit="page" from="125" to="131" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Vertex cover might be hard to approximate to within 2 2 1</title>
		<author>
			<persName><forename type="first">S</forename><surname>Khot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Regev</surname></persName>
		</author>
		<ptr target="http://comjnl.oxfordjournals.org/" />
	</analytic>
	<monogr>
		<title level="m">Downloaded from Conference on Computational Complexity (CCC&apos;03)</title>
		<imprint>
			<date type="published" when="2003">2003. 2008. 2012</date>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="397" to="386" />
		</imprint>
	</monogr>
	<note>Proc. 18th Annual IEEE 74 D. MARX THE COMPUTER JOURNAL</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Parameterized complexity of generalized vertex cover problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wernicke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 9th Workshop on Algorithms and Data Structures (WADS&apos;05)</title>
		<title level="s">Lecture Note Series in Computer Science</title>
		<meeting>9th Workshop on Algorithms and Data Structures (WADS&apos;05)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3608</biblScope>
			<biblScope unit="page" from="36" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Analysis of the greedy approach in covering problems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Hochbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pathria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nav. Res. Q</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="615" to="627" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The hardness of approximation: gap location</title>
		<author>
			<persName><forename type="first">E</forename><surname>Petrank</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Complexity</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="133" to="157" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Finding and counting given length cycles</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Yuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Zwick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="209" to="223" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Clustering to minimize the maximum intercluster distance</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Gonzalez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="293" to="306" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Efficient approximation schemes for geometric problems?</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Annual European Symp. Algorithms (ESA 2005)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>13th Annual European Symp. Algorithms (ESA 2005)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3669</biblScope>
			<biblScope unit="page" from="448" to="459" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Exact and approximation algorithms for clustering</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">K</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Procopiuc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="201" to="226" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">When Hamming meets Euclid: the approximability of geometric TSP and Steiner tree</title>
		<author>
			<persName><forename type="first">L</forename><surname>Trevisan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="475" to="485" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On the parameterized complexity of d-dimensional point set pattern matching</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cabello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Giannopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Knauer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4169</biblScope>
			<biblScope unit="page" from="175" to="183" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A tourist guide through treewidth</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Cybern</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1" to="21" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Graph Theory</title>
		<author>
			<persName><forename type="first">R</forename><surname>Diestel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graduate Texts in Mathematics</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>rd edn</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Parameterized complexity of vertex colouring</title>
		<author>
			<persName><forename type="first">L</forename><surname>Cai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discret. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">127</biblScope>
			<biblScope unit="page" from="415" to="429" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A structural view on parameterizing problems: distance from triviality</title>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hu ¨ffner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3162</biblScope>
			<biblScope unit="page" from="162" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Parameterized coloring problems on chordal graphs</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">351</biblScope>
			<biblScope unit="page" from="407" to="424" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Zero knowledge and the chromatic number</title>
		<author>
			<persName><forename type="first">U</forename><surname>Feige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kilian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="page" from="187" to="199" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Planar 3-colorability is NP-complete</title>
		<author>
			<persName><forename type="first">L</forename><surname>Stockmeyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGACT News</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="19" to="25" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">K</forename><surname>Appel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Haken</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Every Planar Map is Four Colorable. Contemporary Mathematics</title>
		<imprint>
			<biblScope unit="volume">98</biblScope>
			<date type="published" when="1989">1989</date>
			<publisher>American Mathematical Society</publisher>
			<pubPlace>Providence, RI</pubPlace>
		</imprint>
	</monogr>
	<note>With the collaboration of J. Koch</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Efficiently four-coloring planar graphs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Sanders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Seymour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Thomas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Twenty-eighth Annual ACM Symposium on the Theory of Computing</title>
		<meeting>Twenty-eighth Annual ACM Symposium on the Theory of Computing<address><addrLine>Philadelphia, PA; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996">1996. 1996</date>
			<biblScope unit="page" from="571" to="575" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Obtaining a planar graph by vertex deletion</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Schlotter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
	<note>To appear in WG&apos;07</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Planar formulae and their uses</title>
		<author>
			<persName><forename type="first">D</forename><surname>Lichtenstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="329" to="343" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Applications of a planar separator theorem</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Lipton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Tarjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="615" to="627" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Approximation algorithms for NPcomplete problems on planar graphs</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">S</forename><surname>Baker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="153" to="180" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Local tree-width, excluded minors, and approximation algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Grohe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="613" to="632" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Equivalence of local treewidth and linear local treewidth and its algorithmic applications</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Demaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hajiaghayi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 15th Annual ACM-SIAM Symp. Discrete Algorithms (SODA 2004)</title>
		<meeting>15th Annual ACM-SIAM Symp. Discrete Algorithms (SODA 2004)<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-01-11">2004. January 11 -13</date>
			<biblScope unit="page" from="833" to="842" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Sum multicoloring of graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bar-Noy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Halldo ´rsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kortsarz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Salman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shachnai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="422" to="450" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">On the sum coloring problem on interval graphs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nicoloso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sarrafzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="109" to="126" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">The optimum cost chromatic partition problem</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Algorithms and complexity</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Algorithms and complexity<address><addrLine>Rome; Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1203</biblScope>
			<biblScope unit="page" from="25" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Edge-chromatic sum of trees and bounded cyclicity graphs</title>
		<author>
			<persName><forename type="first">K</forename><surname>Giaro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kubale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="65" to="69" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">On sum coloring of graphs</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Salavatipour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discret. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">127</biblScope>
			<biblScope unit="page" from="477" to="488" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Complexity results for minimum sum edge coloring</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
	<note>Manuscript</note>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Minimum sum multicoloring on the edges of planar graphs and partial k-trees</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd Int. Workshop on Approximation and Online Algorithms (WAOA 2004)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>2nd Int. Workshop on Approximation and Online Algorithms (WAOA 2004)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3351</biblScope>
			<biblScope unit="page" from="9" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Berlin</forename><surname>Springer</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Fixed-parameter approximation: conceptual framework and approximability results</title>
		<author>
			<persName><forename type="first">L</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4169</biblScope>
			<biblScope unit="page" from="96" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">On parameterized approximability</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Grohe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gru ¨ber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4169</biblScope>
			<biblScope unit="page" from="109" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Parameterized approximation algorithms</title>
		<author>
			<persName><forename type="first">R</forename><surname>Downey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mccartin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4169</biblScope>
			<biblScope unit="page" from="121" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">A linear-time algorithm for finding tree-decompositions of small treewidth</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1305" to="1317" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
	<note>COMPUTER JOURNAL</note>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Graph minors. XIII. The disjoint paths problem</title>
		<author>
			<persName><forename type="first">N</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">D</forename><surname>Seymour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comb. Theory Ser. B</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="65" to="110" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Finding approximate separators and computing tree width quickly</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Reed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC&apos;92: Proc. Twenty-fourth Annual ACM Symp. Theory of Computing</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Tree width and tangles: a new connectivity measure and some applications</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Reed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Surveys in combinatorics</title>
		<imprint>
			<biblScope unit="volume">241</biblScope>
			<biblScope unit="page" from="87" to="162" />
			<date type="published" when="1997">1997. 1997</date>
			<publisher>Cambridge Univ. Press</publisher>
			<pubPlace>London; Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Efficient approximation for triangulation of minimum treewidth</title>
		<author>
			<persName><forename type="first">E</forename><surname>Amir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UAI &apos;01: Proc. 17th Conf. Uncertainty in Artificial Intelligence</title>
		<meeting><address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="7" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Vertex-minors, monadic second-order logic, and a conjecture by Seese</title>
		<author>
			<persName><forename type="first">B</forename><surname>Courcelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-I</forename><surname>Oum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comb. Theory Ser. B</title>
		<imprint>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="page" from="91" to="126" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">A parametrized algorithm for matroid branch-width</title>
		<author>
			<persName><forename type="first">´</forename><surname>Hline ˇny</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="259" to="277" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Approximating cliquewidth and branch-width</title>
		<author>
			<persName><forename type="first">S.-I</forename><surname>Oum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Seymour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comb. Theory Ser. B</title>
		<imprint>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="page" from="514" to="528" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Approximating rank-width and cliquewidth quickly</title>
		<author>
			<persName><forename type="first">S.-I</forename><surname>Oum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 31st Int. Workshop on Graph-Theoretic Concepts in Computer Science</title>
		<meeting>31st Int. Workshop on Graph-Theoretic Concepts in Computer Science</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="49" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Parameterized approximability of the disjoint cycle problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Grohe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gru ¨ber</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page">7</biblScope>
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Approximating treewidth, pathwidth, frontsize, and shortest elimination tree</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hafsteinsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kloks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="238" to="255" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Improved approximation algorithms for minimum-weight vertex separators</title>
		<author>
			<persName><forename type="first">U</forename><surname>Feige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T</forename><surname>Hajiaghayi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC&apos;05: Proc. 37th Annual ACM Symp. Theory of Computing</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="563" to="572" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">The 1st Cologne-Twente Workshop on Graphs and Combinatorial Optimization</title>
		<author>
			<persName><forename type="first">´</forename><surname>Bouchitte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kratsch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mu ¨ller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Todinca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discret. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">136</biblScope>
			<biblScope unit="page" from="183" to="196" />
			<date type="published" when="2001">2004. 2001</date>
			<publisher>CTW</publisher>
		</imprint>
	</monogr>
	<note>On treewidth approximations</note>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">FPT algorithm for the undirected feedback vertex set problem</title>
		<author>
			<persName><forename type="first">F</forename><surname>Dehne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Langston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Rosamond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Stevens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Computing and Combinatorics</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Computing and Combinatorics<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3595</biblScope>
			<biblScope unit="page" from="859" to="869" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Approximating minimum feedback sets and multicuts in directed graphs</title>
		<author>
			<persName><forename type="first">G</forename><surname>Even</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Naor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Schieber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sudan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="151" to="174" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Packing directed circuits fractionally</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">D</forename><surname>Seymour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="281" to="288" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Parameterized tractability of edge-disjoint paths on directed acyclic graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Slivkins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Algorithms-ESA 2003, 11th Annual Eur. Symp</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Algorithms-ESA 2003, 11th Annual Eur. Symp<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2832</biblScope>
			<biblScope unit="page" from="482" to="493" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Packing directed circuits</title>
		<author>
			<persName><forename type="first">B</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Seymour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Thomas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="535" to="554" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">A survey of graph layout problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Dı ´az</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Petit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Serna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="313" to="356" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Beyond NP-completeness for problems of bounded width (extended abstract): hardness for the W hierarchy</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T</forename><surname>Hallett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC &apos;94: Proc. Twenty-sixth Annual ACM Symp. Theory of computing</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="449" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Constructive linear time algorithms for small cutwidth and carving-width</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Thilikos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Serna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Algorithms and Computation</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Algorithms and Computation<address><addrLine>Taipei; Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1969</biblScope>
			<biblScope unit="page" from="192" to="203" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Unpublished result</note>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Unpublished result</note>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Contextfree handle-rewriting hypergraph grammars. Graph Grammars and Their Application to Computer Science</title>
		<author>
			<persName><forename type="first">B</forename><surname>Courcelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Engelfriet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rozenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">532</biblScope>
			<biblScope unit="page" from="253" to="268" />
			<date type="published" when="1990">1991. 1990</date>
			<publisher>Springer</publisher>
			<pubPlace>Bremen; Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Clique-width minimization is NP-hard</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">A</forename><surname>Rosamond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Rotics</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Szeider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 38th Annual ACM Sym. Theory of Computing</title>
		<meeting>38th Annual ACM Sym. Theory of Computing<address><addrLine>Seattle, WA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM press</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="354" to="362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Parameterized complexity for the skeptic</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Downey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 18th IEEE Annual Conf. Computational Complexity</title>
		<meeting>18th IEEE Annual Conf. Computational Complexity</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="147" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Polynomial time approximation schemes for Euclidean TSP and other geometric problems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arora</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 39th Annual Symp. Foundations of Computer Science</title>
		<meeting>39th Annual Symp. Foundations of Computer Science</meeting>
		<imprint>
			<publisher>IEEE Comput. Soc. Press</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="2" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Polynomial time approximation schemes for Euclidean traveling salesman and other geometric problems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arora</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="753" to="782" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Approximation schemes for Euclidean k-medians and related problems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC &apos;98</title>
		<meeting><address><addrLine>Dallas, TX; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="106" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">NC-approximation schemes for NP-and PSPACE-hard problems for geometric graphs</title>
		<author>
			<persName><forename type="first">Iii</forename><surname>Hunt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Marathe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">V</forename><surname>Radhakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Rosenkrantz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Stearns</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="238" to="274" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<monogr>
		<title level="m" type="main">Sche ´mas d&apos;approximation et complexite ṕarame ´tre ´e</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bazgan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>Universite ´Paris Sud</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">On the efficiency of polynomial time approximation schemes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cesati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Trevisan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="165" to="171" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">A study on two geometric location problems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-S</forename><surname>Kuo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="281" to="286" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<title level="m" type="main">Graph-theoretical models for frequency assignment problems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Malesin ´ska</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
		<respStmt>
			<orgName>Technical University of Berlin</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD Thesis</note>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Label placement by maximum independent set in rectangles</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">K</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Van Kreveld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Suri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="209" to="218" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">A PTAS for the minimum dominating set problem in unit disk graphs</title>
		<author>
			<persName><forename type="first">T</forename><surname>Nieberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hurink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 3rd Int. 76 D. MARX Workshop on Approximation and Online Algorithms (WAOA 2005)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>3rd Int. 76 D. MARX Workshop on Approximation and Online Algorithms (WAOA 2005)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">3879</biblScope>
			<biblScope unit="page" from="296" to="306" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Berlin</forename><surname>Springer</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<monogr>
		<title level="m" type="main">New PTAS for the independent set problem in unit disk graphs. Memorandum no. 1688</title>
		<author>
			<persName><forename type="first">T</forename><surname>Nieberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hurink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Kern</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Department of Applied Mathematics, Universiteit Twente</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Parameterized complexity of independence and domination on geometric graphs</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4169</biblScope>
			<biblScope unit="page" from="154" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">On the closest string and substring problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="157" to="171" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">Fixedparameter algorithms for closest string and related problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gramm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rossmanith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="25" to="42" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">Exact solutions for closest string and related problems. ISAAC &apos;01</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gramm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rossmanith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int. Symp. Algorithms and Computation</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>12th Int. Symp. Algorithms and Computation</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2223</biblScope>
			<biblScope unit="page" from="441" to="453" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Berlin</forename><surname>Springer</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">The closest substring problem with small distances</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 46th Annual IEEE Symp. Foundations of Computer Science (FOCS&apos;05)</title>
		<meeting>46th Annual IEEE Symp. Foundations of Computer Science (FOCS&apos;05)<address><addrLine>Pittsburgh, PA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">On the parameterized intractability of motif search problems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gramm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="141" to="167" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">The approximability of constraint satisfaction problems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sudan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Trevisan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Williamson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1863" to="1920" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">Towards a syntactic characterization of PTAS</title>
		<author>
			<persName><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Motwani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Twenty-eighth Annual ACM Symp. the Theory of Computing</title>
		<meeting>Twenty-eighth Annual ACM Symp. the Theory of Computing<address><addrLine>Philadelphia, PA; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996">1996. 1996</date>
			<biblScope unit="page" from="329" to="337" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">The complexity of polynomial-time approximation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Juedes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Rosamond</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory Comput. Syst</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Linear FPT reductions and computational lower bounds</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">A</forename><surname>Kanj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 36th Annual ACM Symp. Theory of Computing</title>
		<meeting>36th Annual ACM Symp. Theory of Computing<address><addrLine>Chicago, IL; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="212" to="221" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<monogr>
		<title level="m" type="main">Improved bound for the PPSZ/Scho ¨ning-algorithm for 3-SAT</title>
		<author>
			<persName><forename type="first">D</forename><surname>Rolf</surname></persName>
			<affiliation>
				<orgName type="collaboration">Electronic Colloq. on Computational Complexity</orgName>
			</affiliation>
		</author>
		<idno>TR05-159</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Which problems have strongly exponential complexity?</title>
		<author>
			<persName><forename type="first">R</forename><surname>Impagliazzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Paturi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="512" to="530" />
			<date type="published" when="2001">2001</date>
			<pubPlace>Palo Alto, CA</pubPlace>
		</imprint>
	</monogr>
	<note>Special issue on FOCS</note>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">Cutting up is hard to do</title>
		<author>
			<persName><forename type="first">R</forename><surname>Downey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Estivill-Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Prieto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Rosamund</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Electronic Notes in Theoretical Computer Science</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Harland</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">78</biblScope>
			<date type="published" when="2003">2003</date>
			<publisher>Elsevier</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">Fast algorithms for hard graph problems: bidimensionality, minors, and local treewidth</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Demaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hajiaghayi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int. Symp. Graph Drawing (GD 2004)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>12th Int. Symp. Graph Drawing (GD 2004)<address><addrLine>Harlem, New York</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-09-29">2004. September 29 -October 2</date>
			<biblScope unit="volume">3383</biblScope>
			<biblScope unit="page" from="517" to="533" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title level="a" type="main">Subexponential parameterized algorithms on graphs of bounded-genus and H-minor-free graphs</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Demaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">V</forename><surname>Fomin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hajiaghayi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Thilikos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="866" to="893" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<analytic>
		<title level="a" type="main">Vertex packings: structural properties and algorithms</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Nemhauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jr</forename><surname>Trotter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="232" to="248" />
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<analytic>
		<title level="a" type="main">Parametric duality and kernelization: lower bounds and upper bounds on kernel size</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Fernau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">A</forename><surname>Kanj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STACS 2005</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3404</biblScope>
			<biblScope unit="page" from="269" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<analytic>
		<title level="a" type="main">Finding odd cycle transversals</title>
		<author>
			<persName><forename type="first">B</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vetta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="299" to="301" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<analytic>
		<title level="a" type="main">Chordal deletion is fixed-parameter tractable</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graph-theoretic concepts in computer science (WG 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4271</biblScope>
			<biblScope unit="page" from="37" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">Improved fixed-parameter algorithms for two feedback set problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gramm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hu ¨ffner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wernicke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 9th Workshop on Algorithms and Data Structures (WADS&apos;05)</title>
		<title level="s">Lecture Note Series in Computer Science</title>
		<meeting>9th Workshop on Algorithms and Data Structures (WADS&apos;05)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3608</biblScope>
			<biblScope unit="page" from="158" to="168" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b107">
	<analytic>
		<title level="a" type="main">Compression-based fixed-parameter algorithms for feedback vertex set and edge bipartization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gramm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hu ¨ffner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wernicke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page" from="1386" to="1396" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b108">
	<analytic>
		<title level="a" type="main">The complexity of computing the permanent</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G</forename><surname>Valiant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="189" to="201" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<analytic>
		<title level="a" type="main">Proc Analysis and design of algorithms for combinatorial problems</title>
		<author>
			<persName><forename type="first">B</forename><surname>Monien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">North-Holland Mathamatical Studies</title>
		<imprint>
			<biblScope unit="volume">109</biblScope>
			<biblScope unit="page" from="239" to="254" />
			<date type="published" when="1982">1985. 1982</date>
			<pubPlace>Udine; North-Holland, Amsterdam</pubPlace>
		</imprint>
	</monogr>
	<note>How to find long paths efficiently</note>
</biblStruct>

<biblStruct xml:id="b110">
	<analytic>
		<title level="a" type="main">Finding minimally weighted subgraphs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Plehn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Voigt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graph-theoretic concepts in computer science</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Graph-theoretic concepts in computer science<address><addrLine>Berlin; Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1990">1991. 1990</date>
			<biblScope unit="volume">484</biblScope>
			<biblScope unit="page" from="18" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b111">
	<analytic>
		<title level="a" type="main">The parameterized complexity of counting problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Flum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Grohe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="892" to="922" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b112">
	<analytic>
		<title level="a" type="main">Approximation algorithms for some parameterized counting problems</title>
		<author>
			<persName><forename type="first">Arvind</forename></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Raman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISAAC &apos;02: Proc. 13th Int. Symp. Algorithms and Computation</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2518</biblScope>
			<biblScope unit="page" from="453" to="464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b113">
	<analytic>
		<title level="a" type="main">Randomized approximations of parameterized counting problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mu ¨ller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Int. Workshop on Parameterized and Exact Computation (IWPEC 2006)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4169</biblScope>
			<biblScope unit="page" from="50" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b114">
	<analytic>
		<title level="a" type="main">A PTAS for the multiple knapsack problem</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chekuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eleventh Annual ACM-SIAM Symp. Discrete Algorithms</title>
		<meeting>Eleventh Annual ACM-SIAM Symp. Discrete Algorithms<address><addrLine>San Francisco, CA; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2000">2000. 2000</date>
			<biblScope unit="page" from="213" to="222" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b115">
	<analytic>
		<title level="a" type="main">The maximum subforest problem: approximation and exact algorithms (extended abstract)</title>
		<author>
			<persName><forename type="first">R</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tsur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Ninth Annual ACM-SIAM Symp. Discrete Algorithms</title>
		<meeting>Ninth Annual ACM-SIAM Symp. Discrete Algorithms<address><addrLine>San Francisco, CA; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="394" to="399" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b116">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">PARAMETERIZED COMPLEXITY AND APPROXIMATION ALGORITHMS</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
	<note>COMPUTER JOURNAL</note>
</biblStruct>

<biblStruct xml:id="b117">
	<analytic>
		<title level="a" type="main">Polynomial-time approximation schemes for geometric intersection graphs</title>
		<author>
			<persName><forename type="first">T</forename><surname>Erlebach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="1302" to="1323" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b118">
	<analytic>
		<title level="a" type="main">Approximation schemes for covering and packing problems in image processing and VLSI</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Hochbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Maass</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="130" to="136" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b119">
	<analytic>
		<title level="a" type="main">A PTAS for distinguishing (sub)string selection</title>
		<author>
			<persName><forename type="first">X</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 29th Int. Colloquium on Automata, Languages and Programming</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>29th Int. Colloquium on Automata, Languages and Programming<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">02</biblScope>
			<biblScope unit="page" from="740" to="751" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b120">
	<analytic>
		<title level="a" type="main">On exact and approximation algorithms for distinguishing substring selection</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gramm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Niedermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Fundamentals of Computation Theory</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>Fundamentals of Computation Theory<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2751</biblScope>
			<biblScope unit="page" from="195" to="209" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b121">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">D</forename><surname>Marx</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
