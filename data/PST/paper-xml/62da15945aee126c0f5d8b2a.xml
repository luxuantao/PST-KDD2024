<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Knowledge-enhanced Black-box Attacks for Recommendations</title>
				<funder ref="#_XSahZhj #_2f63e3M">
					<orgName type="full">National Natural Science Foundation of China</orgName>
					<orgName type="abbreviated">NSFC</orgName>
				</funder>
				<funder ref="#_TWkC2PP">
					<orgName type="full">NSFC</orgName>
				</funder>
				<funder ref="#_CCaueYY">
					<orgName type="full">Key R&amp;D Program of Jiangsu Province</orgName>
				</funder>
				<funder ref="#_3p7vRjn">
					<orgName type="full">Open Research Projects of Zhejiang Lab</orgName>
				</funder>
				<funder ref="#_JbjmHu4">
					<orgName type="full">Hong Kong Research Grants Council</orgName>
				</funder>
				<funder ref="#_Cp7Rkgx">
					<orgName type="full">CCF-Tencent Open Fund</orgName>
				</funder>
				<funder ref="#_DcaZv9G">
					<orgName type="full">APRC -CityU New Research Initiatives</orgName>
				</funder>
				<funder ref="#_z2cfqDm">
					<orgName type="full">unknown</orgName>
				</funder>
				<funder ref="#_qba2wgf">
					<orgName type="full">Natural Science Foundation of Jiangsu Province</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2022-07-21">21 Jul 2022</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jingfan</forename><surname>Chen</surname></persName>
							<email>jingfan.chen@smail.nju.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
							<email>wenqifan03@gmail.com</email>
						</author>
						<author>
							<persName><forename type="first">Guanghui</forename><surname>Zhu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Xiangyu</forename><surname>Zhao</surname></persName>
							<email>xianzhao@cityu.edu.hk</email>
						</author>
						<author>
							<persName><forename type="first">Chunfeng</forename><surname>Yuan</surname></persName>
							<email>cfyuan@nju.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yihua</forename><surname>Huang</surname></persName>
							<email>yhuang@nju.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">James</forename><surname>Cameron</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Johnny</forename><surname>Depp</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jerry</forename><surname>Bruckheimer</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="laboratory">State Key Laboratory for Novel Software Technology Nanjing University</orgName>
								<address>
									<settlement>Nanjing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">The Hong Kong Polytechnic University Hong Kong</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">State Key Laboratory for Novel Software Technology Nanjing University</orgName>
								<address>
									<settlement>Nanjing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">City University of Hong Kong Hong Kong</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="laboratory">State Key Laboratory for Novel Software Technology Nanjing University</orgName>
								<address>
									<settlement>Nanjing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="institution">The Hong Kong Polytechnic University Hong Kong</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="laboratory">State Key Laboratory for Novel Software Technology Nanjing University</orgName>
								<address>
									<settlement>Nanjing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff7">
								<orgName type="department">KDD &apos;22</orgName>
								<address>
									<addrLine>August 14-18</addrLine>
									<postCode>2022</postCode>
									<settlement>Washington</settlement>
									<region>DC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff8">
								<orgName type="department">KDD &apos;22</orgName>
								<address>
									<addrLine>August 14-18</addrLine>
									<postCode>2022</postCode>
									<settlement>Washington</settlement>
									<region>DC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Knowledge-enhanced Black-box Attacks for Recommendations</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2022-07-21">21 Jul 2022</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3534678.3539359</idno>
					<idno type="arXiv">arXiv:2207.10307v1[cs.LG]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T09:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CCS CONCEPTS</term>
					<term>Information systems ? Recommender systems</term>
					<term>? Security and privacy ? Web application security Adversarial Attacks</term>
					<term>Recommender Systems</term>
					<term>Black-box Attacks</term>
					<term>Knowledge Graph</term>
					<term>Reinforcement Learning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recent studies have shown that deep neural networks-based recommender systems are vulnerable to adversarial attacks, where attackers can inject carefully crafted fake user profiles (i.e., a set of items that fake users have interacted with) into a target recommender system to achieve malicious purposes, such as promote or demote a set of target items. Due to the security and privacy concerns, it is more practical to perform adversarial attacks under the black-box setting, where the architecture/parameters and training data of target systems cannot be easily accessed by attackers. However, generating high-quality fake user profiles under black-box setting is rather challenging with limited resources to target systems. To address this challenge, in this work, we introduce a novel strategy by leveraging items' attribute information (i.e., items' knowledge graph), which can be publicly accessible and provide rich auxiliary knowledge to enhance the generation of fake user profiles. More specifically, we propose a knowledge graph-enhanced blackbox attacking framework (KGAttack) to effectively learn attacking policies through deep reinforcement learning techniques, in which knowledge graph is seamlessly integrated into hierarchical policy networks to generate fake user profiles for performing adversarial black-box attacks. Comprehensive experiments on various realworld datasets demonstrate the effectiveness of the proposed attacking framework under the black-box setting.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Aiming to provide personalized services (e.g., a list of items) to customers, recommender systems (RecSys) have been widely used in many real-world application domains <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b37">38]</ref>, including social media (e.g., Facebook, Twitter) and e-commerce (e.g., Amazon, Taobao). Given the powerful capacity of representation learning, Deep Neural Networks (DNNs) techniques, such as Recurrent Neural Networks (RNNs) and Graph Neural Networks (GNNs), have been adopted to empower recommender systems <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b38">39]</ref>. However, recent studies have shown that most existing DNNs-based recommender systems are vulnerable to adversarial attacks <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b22">23]</ref>, in which attackers can carefully generate fake user profiles (i.e., a set of items that fake users have interacted with) and inject them into a target recommender system, so as to attack (i.e., promote or demote) a set of target items with malicious purposes.</p><p>Due to privacy and security concerns, compared with white-box and grey-box attacks which require full or partial knowledge of the target systems <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b19">20]</ref>, it is more practical to perform blackbox attacks in recommender systems, which can be achieved via query feedback to learn generation strategies of fake user profiles for attacking <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b27">28]</ref>. Although a few works have successfully attacked black-box recommender systems, they are insufficient and inapplicable to generate fake user profiles for attacking recommender systems under the black-box setting. For example, PoisonRec <ref type="bibr" target="#b27">[28]</ref> (as the very first black-box attacking method in recommender systems) proposes to generate fake user profiles from the massive item sets by querying the target systems purely, which may make it easier to yield low-quality fake user profiles.</p><p>CopyAttack <ref type="bibr" target="#b7">[8]</ref> proposes a copy mechanism to copy "real" user profiles from cross-domain systems under black-box setting, which is not applicable to general recommendations scenarios due to the lack of cross-domain knowledge in the real world.</p><p>To address the above problems, in this work, we propose to introduce rich auxiliary knowledge for improving the generation quality of fake user profiles. Recently, Knowledge Graph (KG) as comprehensive auxiliary data, which can introduce extra relations among items and real-world entities (from item attributes or external knowledge), have attracted increasing attention. In particular, KG usually contains fruitful facts and connections among items, which can be represented as a type of directed heterogeneous graph, where nodes correspond to entities (items or item attributes) and edges correspond to relations. What's more, by exploring the interlinks within KG, the connectivity among items reflects their underlying relationships (e.g., substitutes and complements), which is beneficial to integrate into the generation of fake user profiles for attacking black-box recommender systems. Taking movies recommendations as an example in Figure <ref type="figure" target="#fig_0">1</ref>, in order to attack (i.e., promote) a target movie ? 2 (i.e., "Pirates of the Caribbean V "), an attacker can take advantage of target item ? 2 's attributes (e.g., producers, actors, and genre), which are publicly available, to establish close connections between the target movie ? 2 and existing movies (e.g., item ? 1 "Pirates of the Caribbean I "). By injecting a fake user profile (? ?+1 ) which intentionally rates/interacts with these correlated movies into the target system, the target movie ? 2 is most likely to be promoted/recommended to normal users (i.e., ? 1 and ? 2 ) who are interested in item ? 1 . To the best of our knowledge, the studies to leverage the knowledge graph for attacking black-box recommender systems remain rarely explored.</p><p>In this paper, we propose a novel attacking framework (KGAttack), which employs the knowledge graph to enhance the generation of fake user profiles from the massive item sets under the blackbox setting via deep reinforcement learning. More specifically, to seamlessly integrate KG into attacking strategies learning, knowledge graph-enhanced state representation learning and knowledgeenhanced candidate selection are proposed to capture informative representations of fake user profiles and localize relevant item candidates, respectively. What's more, we introduce hierarchical policy networks to generate high-quality user profiles for attacking black-box recommender systems. The main contributions of this paper are summarized as follows:</p><p>? We introduce a principle way to enhance the generation of fake user profiles by leveraging knowledge graph for attacking black-box recommender systems. To the best of our knowledge, it is the very first attempt to introduce the knowledge graph to guide fake user profiles generation; </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Recent studies have highlighted the vulnerability of DNNs-based recommender systems to adversarial attacks <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b27">28]</ref>. Specifically, attackers typically create fake user profiles to influence recommendation results of target recommender system with malicious goals.</p><p>In general, the existing attacking methods on recommender systems can be divided into three categories based on how much knowledge the attackers are able to access <ref type="bibr" target="#b7">[8]</ref>: white-box attacks, grey-box attacks, and black-box attacks. White-box and grey-box attacks suppose that the attacker has full or partial knowledge about the target recommender systems. For example, works of <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b29">30]</ref> attempt to formulate such attacks as an optimization problem and develop gradient-based methods to learn the fake user profiles. In addition, considering that malicious users are usually different from normal ones, generative adversarial networks (GANs) are employed to generate malicious fake user profiles that are similar to real ones. In <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b21">22]</ref>, they propose GANs-based models to approximate the distribution of real users to generate fake user profiles based on estimated gradients. TripleAttack <ref type="bibr" target="#b34">[35]</ref> further extends GANs to efficiently generate fake user profiles based on TripleGAN model. However, these white-box and grey-box attacking methods require full or partial knowledge about the target system and training dataset, which are difficult to be carried over to the real world due to security and privacy concerns. Without direct accessing architecture/parameters and training data of the target recommender system, black-box attacks become an emerging trend due to their security and privacy guarantees <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b36">37]</ref>. In <ref type="bibr" target="#b36">[37]</ref>, they extract data from the black-box recommender system and then generate fake user profiles based on the extracted data. Recently, a few studies attempt to design fake user profiles heuristically on the black-box setting. For instance, PoisonRec <ref type="bibr" target="#b27">[28]</ref> proposes the very first deep reinforcement learning-based framework to attack blackbox recommender systems. To take advantage of cross-domain information, CopyAttack <ref type="bibr" target="#b7">[8]</ref> proposes a copy mechanism to copy "real" user profiles via deep reinforcement learning techniques, instead of generating fake user profiles. Despite the aforementioned success, they are insufficient and inapplicable to generate fake user profiles for attacking recommender systems under the black-box setting. To address these limitations, in this paper, we propose to leverage rich auxiliary knowledge for improving the generation quality of fake user profiles. Note that items' attributes (i.e., knowledge graphs) are rich in the real world and are publicly available <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25]</ref>. To the best of our knowledge, this is the very first effort to seamlessly integrate knowledge graphs into attacking black-box recommender systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROBLEM DEFINATION</head><p>Notations. Let ? = {? 1 , ..., ? ? } and ? = {? 1 , ..., ? ? } be the sets of users and items in target recommender system, respectively. The user-item interactions can be defined as matrix Y ? R ??? , where ? ? ? = 1 indicates that user ? ? has interacted with item ? ? (e.g., clicked and purchased), and 0 otherwise. The user profile ? ? = {? 0 , ..., ? ? -1 } is defined as ? historical items a user interacted with. In addition, in real-world application, items' external knowledge (i.e., attributes) can be accessed and formulated as knowledge graph (KG, G) comprised of entity-relation-entity triples (?, ?, ?), where ? ? R denotes the relation, and entities ?, ? ? V denote the head and tail of a triple, respectively. For instance, a triple (Avatar, film.film.director, James Cameron) states the fact that James Cameron is the director of the film Avatar. The goal of recommender system is to predict whether user ? ? will interact with an item ? ? via generating a top-? ranked potential items ? ?,&gt;? = {? <ref type="bibr" target="#b0">[1]</ref> , ..., ? [? ] }, where user ? ? is more likely to interact with ? [? ] than ? [?+1] . Goal of Attacking Black-box Recommender Systems. We define the goal of attacking black-box recommender systems (promotion attacks) is to promote a target item ? * ? ? by generating a set of fake users ? F = {? ?+? } ? ?=1 with their profiles and inject them into user-item interactions Y, where ? is the budget given to the attacker. This results in the target system having a set of polluted users ? ? = ? ? ? F and a polluted interaction matrix Y ? ? R (?+?)?? , so as to have the target item ? * appear in as many users' recommendation list as possible. Note that we consider the promotion attacks in this work only and demotion attacks as a special case of promotion attacks will be explored in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">THE PROPOSED FRAMEWORK 4.1 An Overview of the Proposed Framework</head><p>The goal of this work is to conduct black-box attacks on a target recommender system. To achieve the goal, we propose a knowledge-enhanced attacking framework (KGAttack), which adopts a deep reinforcement learning to learn attacking strategies of generating fake user profiles via query feedback. The overview framework of the proposed method KGAttack is shown in Figure <ref type="figure" target="#fig_1">2</ref>, which consists of four main components: knowledge-enhanced state representation learning (a), knowledge-enhanced candidate selection (b), hierarchical policy networks (c), and injection attack and queries (d). Knowledge-enhanced state representation learning aims to learn the representation of fake user profiles via taking advantage of KG at the current step. The component of knowledgeenhanced candidate selection is introduced to leverage the KG  The new item will be added to ? ? to obtain ? ? +1 . Once the length of the fake user profile reaches ? , it will be injected into the target recommender system to query reward for optimizing the whole framework (d).</p><p>to generate item candidates pools of the anchor item. In order to effectively generate fake user profiles in large-scale discrete action space (i.e., items) and enable efficient exploration, we propose hierarchical policy networks to decompose such actions into two steps: (1) localizing an anchor item (Anchor Item Selection Policy), and (2) picking the next item from the item candidates pool (Item Picking Policy). The last component aims to perform injection attacks and query the black-box systems to have the reward for updating the whole framework. Next, we will first detail the attacking environment of the proposed black-box reinforcement learning method.</p><p>Attacking Environment. In this paper, we model the proposed black-box attacks procedure as a Markov Decision Process (MDP), in which an attacker (agent) interacts with environment (i.e., the target recommender system) by sequentially generating fake user profiles and injecting them into the environment, so as to maximize the expected cumulative reward from the environment. Formally, the MDP is a tuple with five elements (S, A, P, R, ?) as:</p><p>? State space S: The state ? ? ? S is defined as a chronologically sorted sequence of items a fake user interacted (i.e., fake user profile) before time ?. In general, the state can be encoded as representation of fake user profile is defined as the probability of state transition from the current ? ? to next state ? ? +1 when attacker takes action ? ? . ? Reward R: After the attacker injects a fake user profile at state ? ? , the target recommender system provides immediate feedback/reward ? ? (i.e., Top-? recommended items on spy users) via query. The detailed definition can be found in section 4.5.</p><p>? Discount factor ?: Discount factor ? ? [0, 1] is to measure the importance of future rewards. ? = 0 will make the agent only consider current rewards, and ? = 1 will make the agent strive for a long-term high reward. RL Attacking Policy. The goal of attacker is to seek an optimal policy ? : S ? A which can maximize the expected cumulative reward as follows:</p><formula xml:id="formula_0">max ? E ??? [?(?)], where ?(?) = |? | ?? ? =0 ? ? ? (? ? , ? ? )<label>(1)</label></formula><p>where ? = (? 0 , ? 0 , ..., ? ? -1 , ? ? -1 ) denotes the ? -length trajectory (multiple state-action pairs) that are generated based on the policy. To achieve the goal, we utilize the Deep Reinforcement Learning (DRL) <ref type="bibr" target="#b20">[21]</ref> with neural networks to automatically learn the attack policy. E ? ? [ ? -1 ?=? ? ?-? ? ? ] from any state (i.e., expected value function ? ? ? (? ? )), where ? denotes the policy parameters and ? denotes the discount factor. To tackle the challenges of the largescale discrete action space (i.e., a huge number of items) and sparse rewards, we build the attacking policy based on the Advantage Actor-Critic (A2C) architecture, consisting of an actor network and a critic network <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b25">26]</ref>. The actor network ? ? (? ? |? ? ) (also called policy network) parameterized with ? generates the distribution over actions ? ? based on the state ? ? and its possible action space A ? . The actor network is updated based on the policy gradient. Meanwhile, the critic network ? ? (? ? ) parameterized with ? is employed to accurately estimate the contribution of each action to the rewards for better guiding the actor in the sparse reward scenario. In other words, the critic network is used to judge whether the selected action matches the current state. What's more, to reduce the variance and have better convergence properties, we calculate the advantage value ? ? (? ? ) as the actual critic judgment based on the output of the critic network <ref type="bibr" target="#b23">[24]</ref>. The critic network is updated according to the temporal difference (TD) approach <ref type="bibr" target="#b26">[27]</ref> by minimizing the following squared error as follows:</p><formula xml:id="formula_1">L ? = ?? ? ? -? ?? ?=0 ? ? ? ? +? -? ? (? ? ) 2<label>(2)</label></formula><p>Finally, based on the judgment from the critic network, the actor network optimizes its' parameters to maximize the attacking performance so as to output better actions in the next iteration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Knowledge-enhanced State Representation Learning</head><p>The detail of knowledge-enhanced state representation learning is illustrated in Figure <ref type="figure" target="#fig_3">3 (a)</ref>. With a target item ? * to be attacked (i.e., promoted), the current fake user profile at step ? can be denoted as ? ? = {? * , ? </p><formula xml:id="formula_2">L pre-train = ?? (?,?,?) ?B + ?? (? ? ,?,? ? ) ?B - [? (p+r, q)+? -? (p ? +r, q ? )] +<label>(3)</label></formula><p>where [?] + = max(0, ?). ? denotes margin between positive and negative triples. B + includes positive triples satisfying p+r ? q and B -includes negative triples having p + r ? q. ? can be either ? 1 or ? 2 norm. p, q, and r are the embeddings of entity/item or relation.</p><p>For simplicity, the initial knowledge-enhanced item representation can be denoted as e 0 ? for each interacted item ? ? in the fake user profile ? ? at step ?.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.2.2</head><p>Knowledge-enhanced Item Representation. With item representations initialized via an auxiliary knowledge embedding task, we further propose to utilize Graph Neural Networks (GNNs) to learn item representations with knowledge graph. The intuition of using GNNs is that nodes' representation can be naturally captured via node feature and topological structure on the graph under deep neural networks paradigm <ref type="bibr" target="#b18">[19]</ref>. More specifically, item representations can be enhanced via local neighbors (e.g., items or item attributes) aggregations in KG. Moreover, a relation attention ? is proposed to characterize different relationships between entities in heterogeneous KG. Mathematically, a knowledge-enhanced representation of an interacted item ? ? can be defined as follows:</p><formula xml:id="formula_3">e ? ? = W ? 1 ? e ?-1 ? + W ? 2 ? ?? ? ? ?N (? ? ) ? ? ?,? e ?-1 ? ,<label>(4)</label></formula><formula xml:id="formula_4">? ? ?,? = softmax W in ? e ?-1 ? ? W out ? e ?-1 ? / ? ?<label>(5)</label></formula><p>where e ? ? denotes the embedding of an interacted item ? ? in the fake user profile at layer ?, and N (? ? ) denotes the local neighbor entities (e.g., item or item attributes) of an item ? ? . ? denotes the neighbor size of item ? ? . W ? 1 and W ? 2 are trainable weights at layer ?. W in and W out are trainable weights shared by each layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">State Representation Learning. With knowledge-enhanced item representation e ?</head><p>? , we propose to learn the state representation (x ? ) on ? ? at state ? for policy network. Since the fake user profile contains sequential dependency among items (i.e., long and short term), we introduce to employ a Recurrent Neural Network (RNN) to encode fake user profiles. Specifically, we adopt an RNN with a gated recurrent unit (GRU) as the network cell <ref type="bibr" target="#b4">[5]</ref> to capture fake user's historical behaviors ? ? = {? * , ? 1 , ..., ? ? -1 } based on the knowledge-enhanced item representation e ? ? as follows: where z ? and u ? denote the reset gate and update gate vector respectively. ? is the Hadamard product. W * , U * and b * denote the trainable parameters. Then, the obtained hidden vector h ? is set as state representation x ? at state ?. As a result, the state representation contains rich auxiliary knowledge toward the target item ? * from item attributes.</p><formula xml:id="formula_5">z ? = ? ? W ? e ? ? + U ? h ? -1 + b ? u ? = ? ? W ? e ? ? + U ? h ? -1 + b ? ?? = ? ? W ? e ? ? + U ? (z ? ? h ? -1 ) + b ? h ? = u ? ? h ? -1 + (1 -u ? ) ? ?? (6)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Knowledge-enhanced Candidate Selection</head><p>To efficiently learn attacking strategies based on the policy network, a key challenge is how to handle the sample efficiency problem, which is caused by the large action space consisting of a large number of candidate items (i.e., actions) <ref type="bibr" target="#b39">[40]</ref>. To this end, as shown in Figure <ref type="figure" target="#fig_3">3</ref> (b), we propose knowledge-enhanced candidate selection to employ KG for localizing some relevant item candidates (i.e., item candidates pool C ? ) which share similar attributes (e.g., substitutes and complements). Specifically, given an anchor item ? anchor ? (please see section 4.4 for more details) at step ?, we generate an item candidates pool C ? by extracting the ? -hop neighbors of the anchor item ? anchor ? in KG. To achieve the goal, we first construct the ? -hop relevant entity set in KG (G) as follows:</p><formula xml:id="formula_6">E ? ? = {?|(?, ?, ?) ? G, ? ? E ?-1 ? }, ? = 1, 2, ..., ?,<label>(7)</label></formula><p>where E 0 ? = ? anchor</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>?</head><p>. Then, to construct the item candidates pool C ? , we collect a fixed size items candidates in ? -hop relevant entity set as follows:</p><formula xml:id="formula_7">C ? = {? |? ? ? ?=1 E ? ? , ? ? ? } (8)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Hierarchical Policy Networks</head><p>With the knowledge-enhanced state representation x ? , the hierarchical policy networks aim to learn attacking strategies for the generation of fake user profiles sequentially. What's more, to effectively generate fake user profiles in large-scale discrete action space (i.e., items) and enable efficient exploration, we decompose attacking strategies into hierarchical actions: anchor item selection </p><formula xml:id="formula_8">? item ? (? item ? |? ? ) = exp(W I,2 [ x? ; e ? ]) ? ? ? C ? exp(W I,2 [ x? ; e ? ])<label>(10)</label></formula><p>where ? = {W I,1 , W I,2 } are trainable parameters. e ? denotes the knowledge-enhanced representation of item ? ? in item candidate pool. [?; ?] is the concatenation operator.</p><p>Exploration-exploitation Trade-off. To fully take advantage of the target item's knowledge, a greedy strategy is to set the target item as an anchor item and pick the target item's neighbors to generate fake user profiles. The main limitation of this strategy lies in its lack of exploration: if the target item's attribute knowledge is not informative enough, the generation of fake user profiles can be 'stuck' and keep choosing a sub-optimal decision forever without any chances to discover better options (i.e., items). Therefore, to achieve an exploration-exploitation trade-off, we introduce an anchor ratio ? to find a balance between the target item exploitation and the policy networks exploration for the generation of fake user profiles. More specifically, at each step ?, attacker selects an anchor item from ? ? with ? probability based on policy network ? anchor ? (? anchor ? |? ? ) , while setting the target item ? * as the anchor item with 1 -? probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Injection Attack and Queries</head><p>The last component aims to inject the generated fake user profiles ? ? into the target recommender system. To access the system and get feedback for updating policies under the black-box setting, inspired by CopyAttack <ref type="bibr" target="#b7">[8]</ref>, a set of spy users was established in the target recommender system for performing query and receiving the reward to optimize the framework after injection. More specifically, Top-? recommended items on spy users are the feedback/rewards upon querying the target recommender systems as follows:</p><formula xml:id="formula_10">? ? = ? ? ? ? ? ? ? 1 | ? | | ? | ?=1 HR( ?? , ? * , ?), ? = ? -1; 0 ? = 0, ...,? -2,<label>(12)</label></formula><p>where HR( ?? , ? * , ?) returns the hit ratio for target item ? * in the top-? list of the spy user ?? ? ? . If target item ? * appears in the spy user's recommendation list, HR is set to 1, otherwise 0. Note that the set of spy users ? can be a subset of normal users who are already established in the target recommender system before the attacks. In practice, when the length of generated user profile ? ? reaches pre-defined ? , we perform injection and queries. Next, we introduce the details of the KGAttack training.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Model Training</head><p>Considering the sparse reward and expensive cost of interacting with the target recommender system, the proximal policy optimization algorithm (PPO) in DRL <ref type="bibr" target="#b25">[26]</ref> is adopted to train the proposed KGAttack for attacking black-box recommender systems. Each training iteration mainly includes two stages: trajectory generation and model parameters updating. The whole training process is detailed in Appendix A.3. In the first stage, the agent (attacker) simultaneously generates ? fake user profiles by repeatedly performing the hierarchical policy networks. Then, these ? -length fake user profiles will be injected into the target recommender system. The reward ? ? is calculated based on Equation <ref type="bibr" target="#b11">(12)</ref>. In practice, the obtained single reward is shared for ? trajectories. Finally, the agent stores the transition (? ? , ? anchor ? , ? item ? , ? ? , ? ? +1 ) into the replay memory buffer D. In the second stage, the two actor network and critic network are updated according to the transitions in the replay memory buffer D. The actor network ? anchor ? (? anchor ? |? ? ) is updated by maximizing the following surrogate clipped objective <ref type="bibr" target="#b25">[26]</ref>:</p><formula xml:id="formula_11">? New = arg max ? 1 ?? ? ?? ?=1 ? -1 ?? ? =0 min ? ? (? ? |? ? ) ? ? Old (? ? |? ? ) ? ? (? ? ), clip( ? ? (? ? |? ? ) ? ? Old (? ? |? ? ) , 1 -?, 1 + ? )? ? (? ? ) (13)</formula><p>where ? Old denotes the old parameters of the actor network. ? is the hyperparameter used to clip the probability ratio. The item picking policy network's parameter ? is updated in the same way. The critic network is updated via TD approach according to Equation (2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EXPERIMENTS</head><p>In this section, we conduct extensive experiments to demonstrate the effectiveness of the proposed framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experimental Settings</head><p>5.1.1 Datasets. We utilize the following three real-world datasets to verify the effectiveness of our proposed KGAttack:</p><p>MovieLens-1M (ML-1M) contains user-item interactions for movies recommendations on the MovieLens website. Book-Crossing records interactions between users and books in the Book-Crossing community. Last.FM is musician listening datasets from Last.FM online music system. The knowledge graphs of three datasets are extracted from Microsoft Satori and are released by <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b32">33]</ref>. The statistics of the datasets are detailed in Appendix A.1.  <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b19">20]</ref> developed for the white/grey-box setting, they cannot be easily used in black-box setting. Therefore, we select the following seven baselines: (1) RandomAttack: This baseline randomly samples items from the entire item space ? to construct the fake user profiles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Attacking Environment</head><p>(2) TargetAttack: This baseline incorporates the target item ? * in the fake user profiles and randomly samples the remaining items from the entire item space ? . (3) TargetAttack-KG: This baseline is similar to TargetAttack, while remaining items are randomly sampled from the ? -hop neighbors of the target item. (4) PoisonRec <ref type="bibr" target="#b27">[28]</ref>: This is a state-of-the-art black-box attacking method, which adopt deep reinforcement learning to generate fake user profiles. ( <ref type="formula" target="#formula_4">5</ref>) PoisonRec-KG: This method is a variant of PoisonRec. Here, we adopt knowledge graph to enhance item representations learning via GNNs and constrain the RL action search space. (6) KGAttack-Target: This method is a variant of our proposed model, which only considers the target item as the anchor item. ( <ref type="formula" target="#formula_6">7</ref>) KGAttack-Seq: This method is a variant of our model, which sets the last interacted item in each fake user profile as the anchor item.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Overall Attacking Performance Comparison</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Evasion Attack (Pinsage).</head><p>We first compare the attacking performance of different attacking methods on Pinsage recommender system under the black-box setting, as shown in Table <ref type="table" target="#tab_8">1</ref>.</p><p>We have the following main findings:</p><p>? As a naive black-box attacking method, RandomAttack does not gain any remarkable improvement compared with WithoutAttack. By contrast, the attacking performance can be significantly improved in black-box recommender systems when generating fake user profiles with the target item (i.e., TargetAttack).</p><p>Table <ref type="table" target="#tab_8">1</ref>: Performance comparison of different black-box attacks method on target recommender system Pinsage. We use bold fonts and underline to label the best performance and the best baseline performance, respectively. H@? and N@? denote HR@? and NDCG@?, respectively.</p><p>? For random sampling-based attacking method, TargetAttack-KG performs better than TargetAttack on Book-Crossing and Last.FM datasets, which can be attributed to rich auxiliary knowledge (i.e., knowledge graph) from items. However, we also can observe that TargetAttack-KG cannot perform better than TargetAttack on ML-1M dataset, which might be attributed to a large number of entities in ML-1M's knowledge graph. ? DRL-based attacking methods (e.g., PoisonRec and KGAttack) perform better than random sampling-based attacking methods (e.g., RandomAttack and TargetAttack), which indicates that the DRL-based method can learn effective strategies to perform black-box attacks via query feedback in recommender systems. ? KGAttack-Target can perform better than KGAttack-Seq, which implies that the greedy strategy to set the target item as an anchor item can exploit the target item's neighbors (i.e., knowledge graph) to generate fake user profiles. What's more, in most cases, our proposed method KGAttack can achieve the best attacking performance in black-box recommender systems under different evaluation metrics, except KGAttack-Target on HR@20 metric, which suggests that our proposed anchor item selection strategy with anchor ratio ? can achieve exploration-exploitation trade-off in most cases. These promising attacking performance on KGAttack also supports that the proposed hierarchical policy networks via anchor item selection and item picking can effectively dig out the relevant items of the target item via knowledge graph to enhance fake user profiles generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Poison Attack (KGCN and NeuMF</head><p>). We evaluate the attacking performance under different black-box recommender systems (i.e., KGCN and NeuMF) on three datasets. The experimental results are shown in Figure <ref type="figure" target="#fig_6">4</ref>. Due to the space limitation, we only present the results on two metrics HR@20 and NDCG@20.</p><p>We do not show the results on some baselines (e.g., Without Attack, RandomAttack, KGAttack-Target, and KGAttack-Seq) since similar observations as Table <ref type="table" target="#tab_8">1</ref> can be made. We can observe that the models' performance behaves differently on two target models. KG-incorporated methods (e.g., TargetAttack-KG and PoisonRec-KG) significantly improve the attacking performance on KGCN. This suggests that leveraging items' knowledge graph can help  attack black-box recommender systems. This is due to the fact that such knowledge-enhanced recommender systems fully take advantage of connectivity among item to improve recommendation performance. What's more, these experimental results indicate that the seamless integration between KG and hierarchical policy networks is beneficial to generate high-quality fake user profiles for attacking black-box systems.</p><p>In addition, we observe that our proposed KGAttack improves the attacking performance on NeuMF under the black-box setting.</p><p>Our proposed KGAttack can almost beat all baselines on these two target models, which proves the effectiveness of the hierarchical policy networks with knowledge-enhanced for the fake user profiles generation. In addition, these results also demonstrate that our proposed attacking model is applicable to attack most types of recommender systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Ablation Study</head><p>In this section, we conduct the ablation studies to study the effectiveness of different components in KGAttack. We compare our model with its four variants: (1) KGAttack (-KGE): this method removes the knowledge-enhanced item representation initialization (i.e., knowledge graph embedding), and utilizes the randomly initialized item embedding. ( <ref type="formula" target="#formula_1">2</ref>) KGAttack (-GNN): this method directly utilizes RNN to provide the state representation, which only models the temporal representation of the fake user profile without considering the knowledge-enhanced item representation.</p><p>(3) KGAttack (-Relevant): this method removes the knowledgeenhanced candidate selection, which utilizes all items in KG as the action space for item picking. ( <ref type="formula" target="#formula_3">4</ref>) KGAttack (-HPN): this method removes the hierarchical policy networks, which directly picks items from large-scale discrete action space (i.e., items) to generate the fake user profiles without anchor item selection.</p><p>The comparison results are shown in Table <ref type="table" target="#tab_4">2</ref>. Comparing either KGAttack (-KGE) or KGAttack (-GNN) with KGAttack, the attacking performance improvement indicates that the knowledge-enhanced items representations enable the fake user profile's representation learning which encodes items' semantic correlation information. The comparison between KGAttack (-Relevant) and KGAttack shows that leveraging the knowledge-enhanced candidate selection can efficiently reduce the action space and further boost the attacking performance. In addition, the performance difference between KGAttack (-HPN) and KGAttack validates that the proposed anchor item selection in hierarchical policy networks is effective to guide the selection of the item candidates, which can further enhance the generation of fake user profiles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Parameter Analysis</head><p>This subsection studies the impact of the model hyper-parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.1">Effect of anchor ratio.</head><p>In this subsection, we analyze the effect of anchor ratio ?. Note that anchor ratio ? is proposed to achieve an exploration-exploitation trade-off. The experimental results are given in Table <ref type="table" target="#tab_5">3</ref>. We can see that attacking performance can achieve better when the value of the anchor ratio is larger than 0.5. This indicates that our proposed KGAttack prefers selecting anchor item via hierarchical policy networks (i.e., anchor item selection ? anchor ? ). We also observe that encouraging the target item as the anchor item excessively will degrade the attacking  performance. Therefore, for anchor item selection, we need to carefully find a balance between policy networks exploration and the target item exploitation for the generation of fake user profiles.  <ref type="table" target="#tab_6">4</ref>. We can observe that KGAttack can achieve the best performance when ? = 3 on Book-Crossing and Last.FM datasets, while ? = 2 on ML-1M dataset. We attribute the observation to the relative richness of connectivity information among items via knowledge graph (e.g., substitutes and complements): the KG on ML-1M dataset contains more rich correlations information than that of Book-Crossing and Last.FM datasets. Thus, too large ? on ML-1M dataset may bring many noises during item picking action from the item candidates pool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.3">Effect of budget.</head><p>Here, we investigate the black-box attacking performance by varying the budget ? (i.e., the number of fake user profiles). Due to the space limitation, we show the results for Pinsage on Last.FM over NDCG@20. The experimental results are shown in Figure <ref type="figure" target="#fig_7">5</ref>. In general, we can observe that RL-based attack methods (e.g., PoisonRec and KGAttack) can gain better performance, since these methods can adjust their attacking policy to maximize the expected cumulative long-term reward. In addition, when the attacking budget is larger than 30, KGAttack can achieve the best performance in most times, which demonstrates the effectiveness of our proposed framework. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION</head><p>In this work, we propose a knowledge-enhanced attacking framework for black-box recommender systems (KGAttack), which can leverage knowledge graph to enhance the generation of fake user profiles from the massive item sets under the black-box setting via deep reinforcement learning. What's more, our framework provides advanced components to perform state representation learning and learn attacking strategies via hierarchical policy networks, so as to generate high-quality fake user profiles. Extensive experiments on three real-world datasets demonstrate the effectiveness of our proposed attacking method under the black-box setting. What's more, we conducted comprehensive experiments on different target recommender systems, such as deep recommendation method (NeuMF), GNNs based recommender system (Pinsage), and knowledge-enhanced GNNs based recommendation method (KGCN). In addition, the ablation study also demonstrates the effectiveness of the designed components in our proposed attacking framework in recommender systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A APPENDIX A.1 Statistics of Datasets</head><p>The statistics of the three datasets are summarized in Table <ref type="table">5</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Implementation Details</head><p>Our proposed framework is implemented on the basis of PyTorch. Following the common practice <ref type="bibr" target="#b28">[29]</ref>, to split the dataset, we leverage each user's last 30% interacted items as a testing set, while the remaining are left for training. To evaluate the quality of the target recommender system, we adopt two widely-used ranking metrics: Hit Ratio (HR@?) and Normalized Discounted Cumulative Gain (NDCG@?) by following the previous work <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b16">17]</ref>, where ? is set to 20 and 10. The first metric measures whether a test item is appeared in the top-? recommendation list, while the latter measures the ranking positions of the test items. We randomly sample 10 target items with less than 10 interactions for promotion attacks. To observe the attacking performance on two metrics, we randomly sample 50 spy users and 500 normal users who did not interact with the target items from testing set for KGAttack's training reward and evaluation, respectively. Following <ref type="bibr" target="#b7">[8]</ref>, for each user, we construct the test candidates set by randomly sampling 100 items that users did not interact with. Note that the target items do not interact with these users either. Then, we attack each target item and observe whether it appeared in the spy users' top-? list among these 100 test candidates after attacks. To obtain the feedback (reward) from the target recommender system, we query spy users per ? = 3 injections. The budget ? is set to 75. We set the ? = 2 for constructing item candidates pool. The size of the item candidates pool is set to 50 for Book-Crossing and Last.FM, and 200 for ML-1M according to their average item neighbors. Note that we use the same target recommender systems on all baselines fair comparison. Meanwhile, we use the 'light'/shallow target recommender systems to evaluate the final performance due to the efficiency. The hyper-parameters of KGAttack and different target recommender systems are detailed as below:</p><p>? Pinsage: Training epochs are set to 1000. The layers are set to 2. The first layer dimension is 64 for ML-1M, 32 for Book-Crossing, and 16 for Last.FM. The second layer dimension is 16 for ML-1M and Book-Crossing, and 8 for Last.FM. For attack setting, we set the fake profile length ? = 16 for ML-1M and Book-Crossing, and 4 for Last.FM. Table <ref type="table">5</ref>: Basic statistics of three datasets. "# Items in KG" indicates the number of items that appeared in both the knowledge graph and the dataset. "Avg. ? -hop NBR" denotes the average number of the ? -hop neighbors for each item. ? NeuMF: Training epochs are set to 10 for ML-1M and Last.FM, and 20 for Book-Crossing. We set the layers of NeuMF as 2 for ML-1M, 4 for Book-Crossing, and 1 for Last.FM. The layer dimension is set to 32 for all layers. For attack setting, we set the fake user profile length ? = 16 for ML-1M and Book-Crossing, and 4 for Last.FM. ? KGCN: Training epochs are set to 10 for ML-1M, and 5 for both Book-Crossing and Last.FM. We set the layers of KGCN as 2. The layer dimension is set to 16 for all layers and all datasets. For attack setting, we set the fake user profile length ? = 16 for ML-1M and Book-Crossing, and 8 for Last.FM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 Training Process of KGAttack</head><p>We summarize the training process of the proposed KGAttack in Algorithm 1.</p><p>Algorithm 1 KGAttack // (i) Trajectory Generation  Update the actor networks ? ? , ? ? by maximizing Equation (13) via stochastic gradient ascent with Adam.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>21:</head><p>Clean replay memory buffer D 22: end for</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Illustration of knowledge graph-enhanced blackbox attacks in recommender system. The goal of the attacker is to promote a target item ? 2 by injecting fake user profile (i.e., user ? ?+1 = {..., ? 2 , ? 1 , ...}) based on underlying relationships (e.g., substitutes and complements) from the knowledge graph.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: An overview of the proposal KGAttack. KGAttack first obtain the state representation based on KG (a). Then, given an anchor item, the item candidates pool will be constructed based on both KG (b). The anchor item is obtained by the anchor item selection policy to guide the generation of item candidates pool (c). Then, item picking policy picks a new item from the item candidates pool (c).The new item will be added to ? ? to obtain ? ? +1 . Once the length of the fake user profile reaches ? , it will be injected into the target recommender system to query reward for optimizing the whole framework (d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>x ? . ? Action space A: The action ? ? = (? anchor ? , ? item ? ) ? A ? is to determine two actions. The first action ? anchor ? is to determine a specific anchor item ? anchor ? for generating the item candidates pool C ? , and another one ? item ? is to pick an item from C ? for generating fake user profiles. ? Transition probability P: Transition probability ? (? ? +1 |? ? , ? ? )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: A detailed illustration of (a) knowledge-enhanced state representation learning, (b) knowledge-enhanced candidates selection, (c) hierarchical policy networks, and (d) injection attack and queries.</figDesc><graphic url="image-45.png" coords="5,55.00,79.37,237.85,173.66" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>? anchor ? and item picking ? item ? , as shown in Figure 3 (c). An anchor item ? anchor ? is first selected from the current fake user profile ? ? via ? anchor ? . Then, a new item ? ? can be generated from the item candidates pool C ? of an anchor item ? anchor ? via ? item ? , which will be added to the current fake user profile. To achieve hierarchical actions, we employ two actor networks: anchor item policy ? anchor ? (? anchor ? |? ? ) and item picking policy ? item ? (? item ? |? ? ) parameterized with ? and ?, respectively. Anchor Item Selection. Note that the size of ? anchor ? 's action space for anchor item at step ? can vary dynamically. To achieve such dynamic action space scenario, in practice, we adopt mask mechanism to mask parts of fixed output vector (i.e., ? -length) on policy ? anchor ? (? anchor ? |? ? ) to avoid sampling invalid positions. Formally, an anchor item ? anchor ? is sampled via shallow neural networks with state representation x ? as input as follows: ? anchor ? (? anchor ? |? ? ) = Softmax(W A,2 ReLU(W A,1 x ? ) + m ? ) (9) where ? = {W A,1 , W A,2 } are the learned parameters. m ? denotes the ? -length masked vector to ignore the invalid action positions due to dynamic action space scenario. Item Picking. With the selected anchor item ? anchor ? , we can generate a fixed size item candidate pool C ? for item picking action. As illustrated in the second level of the hierarchy in Figure 3 (c), we model the ? item ? by calculating the similarity score between the state representation x ? and each item in C ? : x? = ReLU(W I,1 x ? )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(a) KGCN: HR@20 (b) KGCN: NDCG@20 (c) NeuMF: HR@20 (d) NeuMF: NDCG@20</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Performance comparison of different attacking methods across two metrics HR@20 and NDCG@20 on KGCN and NeuMF.</figDesc><graphic url="image-48.png" coords="7,321.64,354.73,115.32,80.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Effect of budget (the number of injected fake user profile) on Last.FM over NDCG@20 for Pinsage.</figDesc><graphic url="image-50.png" coords="8,333.57,490.72,209.02,100.33" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>5 : 6 : 7 : 8 : 9 :</head><label>56789</label><figDesc>for fake user ? in [? + ?? + 1, ? + (? + 1)? + 1] do Initialize state ? 0 based on ? 0,? ? = {? * } for step ? in [0,? -1] do Select anchor item ? anchor ? according to ? anchor ? with anchor ratio ? 10: generate the item candidates C ?,? ? according to ? anchor</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>? 11 : 18 :</head><label>1118</label><figDesc>Pick a new item ? ? according to ? item ? and C ?,? ? 12: Obtain state ? ? +1 = {? ? , ? ? } and reward ? ? 13: Push {? ? , ? item ? , ? anchor ? , ? ? , ? ? +1 } into the memory buffer D Get transitions from replay memory buffer D 19: Update the critic network ? ? by minimizing the loss in Equation (2) 20:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Fake User Profile Item Target Item Item attribute Knowledge Graph (KG) Fake User Profile Knowledge-enhanced Candidate Selection Knowledge-enhanced State Representation Learning Hierarchical Policy Networks Anchor Item Selection Policy Item Picking Policy Item Candidates New Item Injection Attack and Queries Black- box RecSys Reward (+/-) Inject Anchor Item Next State Fake User Profile</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>1 , ..., ? ? -1 }. The goal of this component is to encode a profile ? ? and treat the learned representation x ? as current state ? ? . As items can be linked with entities in KG, the semantic and correlation information among items can provide informative signals to enhance item representation learning. Therefore, it is desirable to improve representations of fake user profiles by taking advantage of the knowledge graph. To achieve the goal, an auxiliary task in KG is introduced to initialize item (i.e., entities) representations, where TransE<ref type="bibr" target="#b1">[2]</ref>, as one of the most representative techniques for knowledge embedding techniques, is used to pre-train the representation of entities and relations in KG. More specifically, the entities' representations are optimized by minimizing a margin-based criterion as follows:</figDesc><table><row><cell>4.2.1 Knowledge-enhanced Item Representation Initializa-</cell></row><row><cell>tion.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Baselines. Though there are various attacking methods</figDesc><table><row><cell>: Target Recommender Sys-</cell></row><row><cell>tem.</cell></row><row><cell>? Evasion Attack (model testing stage): at this stage, target</cell></row><row><cell>model's parameters are frozen without any retraining on</cell></row><row><cell>polluted dataset. To achieve evasion attack, we adopt induc-</cell></row><row><cell>tive GNNs-based recommendation Pinsage [36] as target</cell></row><row><cell>recommender system to be attacked, which aims to learn the</cell></row><row><cell>user and item representations based on the user-item graph</cell></row><row><cell>via local propagation mechanism.</cell></row><row><cell>? Poison Attack (model training stage): at this stage, the</cell></row><row><cell>training data can be poisoned/changed once injecting fake</cell></row><row><cell>user profiles. Then, the target recommender is required</cell></row><row><cell>to retrain on the poisoned dataset. We adopt a general</cell></row><row><cell>deep recommendation method NeuMF [17] as the target</cell></row><row><cell>model for poison attack. What's more, to leverage item's</cell></row><row><cell>knowledge graph, we also conduct poison attacks on a</cell></row><row><cell>target system KGCN [33] (knowledge-enhanced GNNs</cell></row><row><cell>based recommendation method).</cell></row><row><cell>The implementation details (e.g., hyper-parameters of KGAttack</cell></row><row><cell>and the target recommender systems) are listed in Appendix A.2.</cell></row><row><cell>5.1.3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2 :</head><label>2</label><figDesc>Comparison between KGAttack and its variants for Pinsage. Bold fonts denotes the best performance.</figDesc><table><row><cell></cell><cell cols="4">MoveLens-1M Book-Crossing</cell><cell cols="2">Last.FM</cell></row><row><cell>Models</cell><cell cols="6">H@20 N@20 H@20 N@20 H@20 N@20</cell></row><row><cell>KGAttack (-KGE)</cell><cell>0.598</cell><cell>0.163</cell><cell>0.928</cell><cell>0.442</cell><cell>0.422</cell><cell>0.119</cell></row><row><cell>KGAttack (-GNN)</cell><cell>0.630</cell><cell>0.161</cell><cell>0.926</cell><cell>0.442</cell><cell>0.446</cell><cell>0.124</cell></row><row><cell cols="2">KGAttack (-Relevant) 0.628</cell><cell>0.163</cell><cell>0.930</cell><cell>0.427</cell><cell>0.438</cell><cell>0.123</cell></row><row><cell>KGAttack (-HPN)</cell><cell>0.532</cell><cell>0.140</cell><cell>0.926</cell><cell>0.421</cell><cell>0.430</cell><cell>0.121</cell></row><row><cell>KGAttack</cell><cell cols="6">0.672 0.183 0.934 0.459 0.460 0.130</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 :</head><label>3</label><figDesc>Effect of anchor ratio with HR@20 for Pinsage.</figDesc><table><row><cell>?</cell><cell>0.1</cell><cell>0.3</cell><cell>0.5</cell><cell>0.7</cell><cell>0.9</cell></row><row><cell cols="4">MovieLens-1M 0.582 0.534 0.620</cell><cell cols="2">0.622 0.660</cell></row><row><cell cols="4">Book-Crossing 0.916 0.920 0.934</cell><cell>0.928</cell><cell>0.930</cell></row><row><cell>Last.FM</cell><cell cols="4">0.432 0.444 0.442 0.460</cell><cell>0.448</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 4 :</head><label>4</label><figDesc>Effect of hop number for constructing item candidates pool with HR@20 for Pinsage. Effect of hop number. We vary the hop number ? for knowledge-enhanced item candidate selection in KGAttack to further investigate the changes of attacking performance. The experimental results are shown in Table</figDesc><table><row><cell>?</cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>4</cell></row><row><cell cols="5">MovieLens-1M 0.648 0.672 0.514 0.608</cell></row><row><cell cols="5">Book-Crossing 0.926 0.934 0.940 0.938</cell></row><row><cell>Last.FM</cell><cell cols="4">0.450 0.452 0.460 0.452</cell></row><row><cell>5.4.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>1 :</head><label>1</label><figDesc>Randomly initialize the Actor ? ? , ? ? and Critic ? ? with parameters ? , ? and ?. 2: Initialize replay memory buffer D 3: for episode number ? in [0, ?/? ) do</figDesc><table><row><cell>4:</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>ACKNOWLEDGMENTS</head><p><rs type="person">Jingfan Chen</rs>, <rs type="person">Guanghui Zhu</rs>, <rs type="person">Chunfeng Yuan</rs>, and <rs type="person">Yihua Huang</rs> are supported in part by the <rs type="funder">National Natural Science Foundation of China (NSFC)</rs> (No.<rs type="grantNumber">62102177</rs> and No.<rs type="grantNumber">U1811461</rs>), the <rs type="funder">Natural Science Foundation of Jiangsu Province</rs> (No.<rs type="grantNumber">BK20210181</rs>), the <rs type="funder">Key R&amp;D Program of Jiangsu Province</rs> (No.<rs type="grantNumber">BE2021729</rs>), <rs type="funder">Open Research Projects of Zhejiang Lab</rs> (No.<rs type="grantNumber">2022PG0AB07</rs>), and the <rs type="institution">Collaborative Innovation Center of Novel Software Technology and Industrialization, Jiangsu, China</rs>. <rs type="person">Wenqi Fan</rs> and <rs type="person">Qing Li</rs> are supported by <rs type="funder">NSFC</rs> (No.<rs type="grantNumber">62102335</rs>) and a <rs type="grantName">General Research Fund</rs> from the <rs type="funder">Hong Kong Research Grants Council</rs> (Project No.: <rs type="grantNumber">PolyU 15200021</rs>). Xiangyu Zhao is supported by the <rs type="funder">APRC -CityU New Research Initiatives</rs> (No.<rs type="grantNumber">9610565</rs>, the <rs type="grantName">Start-up Grant</rs> for the New Faculty of the <rs type="affiliation">City University of Hong Kong</rs>), the <rs type="grantName">SIRG -CityU Strategic Interdisciplinary Research Grant</rs> (No.<rs type="grantNumber">7020046</rs>, No.<rs type="grantNumber">7020074</rs>), and the <rs type="funder">CCF-Tencent Open Fund</rs>.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_XSahZhj">
					<idno type="grant-number">62102177</idno>
				</org>
				<org type="funding" xml:id="_2f63e3M">
					<idno type="grant-number">U1811461</idno>
				</org>
				<org type="funding" xml:id="_qba2wgf">
					<idno type="grant-number">BK20210181</idno>
				</org>
				<org type="funding" xml:id="_CCaueYY">
					<idno type="grant-number">BE2021729</idno>
				</org>
				<org type="funding" xml:id="_3p7vRjn">
					<idno type="grant-number">2022PG0AB07</idno>
				</org>
				<org type="funding" xml:id="_TWkC2PP">
					<idno type="grant-number">62102335</idno>
					<orgName type="grant-name">General Research Fund</orgName>
				</org>
				<org type="funding" xml:id="_JbjmHu4">
					<idno type="grant-number">PolyU 15200021</idno>
				</org>
				<org type="funding" xml:id="_DcaZv9G">
					<idno type="grant-number">9610565</idno>
					<orgName type="grant-name">Start-up Grant</orgName>
				</org>
				<org type="funding" xml:id="_z2cfqDm">
					<idno type="grant-number">7020046</idno>
					<orgName type="grant-name">SIRG -CityU Strategic Interdisciplinary Research Grant</orgName>
				</org>
				<org type="funding" xml:id="_Cp7Rkgx">
					<idno type="grant-number">7020074</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dataset</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MovieLens-1M (ML-1M)</head><p>Book-Crossing Last.FM H@20 H@10 N@20 N@10 H@20 H@10 N@20 N@10 H@20 H@10 N@20 N@10 </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">kgbench: A Collection of Knowledge Graph Datasets for Evaluating Relational and Multimodal Machine Learning</title>
		<author>
			<persName><forename type="first">Peter</forename><surname>Bloem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xander</forename><surname>Wilcke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lucas</forename><surname>Van Berkel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Victor</forename><surname>De Boer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eighteenth Extended Semantic Web Conference -Resources Track</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Translating embeddings for modeling multi-relational data</title>
		<author>
			<persName><forename type="first">Antoine</forename><surname>Bordes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Usunier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alberto</forename><surname>Garcia-Duran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oksana</forename><surname>Yakhnenko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NeurIPS</title>
		<imprint>
			<date type="published" when="2013">2013. 2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Huifeng Guo, and Ruiming Tang</title>
		<author>
			<persName><forename type="first">Bo</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangyu</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yejing</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2204.01390</idno>
	</analytic>
	<monogr>
		<title level="m">Machine Learning for Deep Recommender Systems: A Survey</title>
		<imprint>
			<date type="published" when="2022">2022. 2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Wide &amp; deep learning for recommender systems</title>
		<author>
			<persName><forename type="first">Heng-Tze</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Levent</forename><surname>Koc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeremiah</forename><surname>Harmsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tal</forename><surname>Shaked</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tushar</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hrishi</forename><surname>Aradhye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Glen</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Chai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mustafa</forename><surname>Ispir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st workshop on deep learning for recommender systems</title>
		<meeting>the 1st workshop on deep learning for recommender systems</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="7" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation</title>
		<author>
			<persName><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bart</forename><surname>Van Merrienboer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Caglar</forename><surname>Gulcehre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dzmitry</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fethi</forename><surname>Bougares</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Holger</forename><surname>Schwenk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Adversarial Attacks on an Oblivious Recommender</title>
		<author>
			<persName><forename type="first">Konstantina</forename><surname>Christakopoulou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arindam</forename><surname>Banerjee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RecSys</title>
		<imprint>
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Deep Adversarial Social Recommendation</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tyler</forename><surname>Derr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IJCAI</title>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1351" to="1357" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Attacking Black-box Recommendations via Copying Cross-domain User Profiles</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tyler</forename><surname>Derr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangyu</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE 2021</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaorui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Han</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xianfeng</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Suhang</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Aggarwal</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2108.03388</idno>
		<title level="m">Jointly Attacking Graph Neural Network and its Explanations</title>
		<imprint>
			<date type="published" when="2021">2021. 2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Deep modeling of social relations for recommendation</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Min</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Thirty-Second AAAI Conference on Artificial Intelligence</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Graph Trend Filtering Networks for Recommendations</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaorui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangyu</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGIR</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Graph neural networks for social recommendation</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuan</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dawei</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW 2019</title>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="417" to="426" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A graph neural network framework for social recommendations</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guoyong</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dawei</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TKDE</title>
		<imprint>
			<biblScope unit="volume">2020</biblScope>
			<date type="published" when="2020">2020. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Deep social collaborative filtering</title>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dawei</forename><surname>Yin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianping</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RecSys</title>
		<imprint>
			<date type="published" when="2019">2019. 2019</date>
			<biblScope unit="page" from="305" to="313" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Influence Function Based Data Poisoning Attacks to Top-N Recommender Systems</title>
		<author>
			<persName><forename type="first">Minghong</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Neil</forename><surname>Zhenqiang Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jia</forename><surname>Liu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note>In WWW 2020</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Poisoning Attacks to Graph-Based Recommender Systems</title>
		<author>
			<persName><forename type="first">Minghong</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guolei</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Neil</forename><surname>Zhenqiang Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jia</forename><surname>Liu</surname></persName>
		</author>
		<idno>ACSAC 2018</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Neural collaborative filtering</title>
		<author>
			<persName><forename type="first">Xiangnan</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lizi</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hanwang</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Liqiang</forename><surname>Nie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xia</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tat-Seng</forename><surname>Chua</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Data poisoning attacks to deep learning based recommender systems</title>
		<author>
			<persName><forename type="first">Hai</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiaming</forename><surname>Mu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Neil</forename><surname>Zhenqiang Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bin</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mingwei</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NDSS 2021</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Semi-Supervised Classification with Graph Convolutional Networks</title>
		<author>
			<persName><forename type="first">Thomas</forename><forename type="middle">N</forename><surname>Kipf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Max</forename><surname>Welling</surname></persName>
		</author>
		<idno>ICLR 2017</idno>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Data Poisoning Attacks on Factorization-Based Collaborative Filtering</title>
		<author>
			<persName><forename type="first">Bo</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yining</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aarti</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yevgeniy</forename><surname>Vorobeychik</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Continuous control with deep reinforcement learning</title>
		<author>
			<persName><forename type="first">Jonathan</forename><forename type="middle">J</forename><surname>Timothy P Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Hunt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Pritzel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Heess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuval</forename><surname>Erez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Tassa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daan</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><surname>Wierstra</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Attacking recommender systems with augmented user profiles</title>
		<author>
			<persName><forename type="first">Chen</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Si</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hui</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yanghua</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lianyun</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qian</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM 2020</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName><forename type="first">Haochen</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yiqi</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaorui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yaxin</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shaili</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yunhao</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anil</forename><forename type="middle">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2107.06641</idno>
		<title level="m">Trustworthy ai: A computational perspective</title>
		<imprint>
			<date type="published" when="2021">2021. 2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Asynchronous Methods for Deep Reinforcement Learning</title>
		<author>
			<persName><forename type="first">Volodymyr</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adria</forename><forename type="middle">Puigdomenech</forename><surname>Badia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mehdi</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tim</forename><surname>Harley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Leveraging Knowledge Graphs of Movies and Their Content for Web-Scale Analysis</title>
		<author>
			<persName><forename type="first">Fabrizio</forename><surname>Orlandi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeremy</forename><surname>Debattista</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Islam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Clare</forename><surname>Hassan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Majid</forename><surname>Conran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><surname>Latifi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fahim</forename><forename type="middle">A</forename><surname>Nicholson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Salim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Owen</forename><surname>Turner</surname></persName>
		</author>
		<author>
			<persName><surname>Conlan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Declan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>'sullivan</surname></persName>
		</author>
		<author>
			<persName><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SITIS</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<author>
			<persName><forename type="first">John</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Filip</forename><surname>Wolski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prafulla</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alec</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oleg</forename><surname>Klimov</surname></persName>
		</author>
		<title level="m">Proximal policy optimization algorithms</title>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
			<biblScope unit="page">6347</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Mastering the game of Go with deep neural networks and tree search</title>
		<author>
			<persName><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aja</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><forename type="middle">J</forename><surname>Maddison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arthur</forename><surname>Guez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Laurent</forename><surname>Sifre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Van Den Driessche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julian</forename><surname>Schrittwieser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioannis</forename><surname>Antonoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Veda</forename><surname>Panneershelvam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><surname>Lanctot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sander</forename><surname>Dieleman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dominik</forename><surname>Grewe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Nham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nal</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Madeleine</forename><surname>Leach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">529</biblScope>
			<biblScope unit="page" from="484" to="503" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
	<note>Thore Graepel, and Demis Hassabis</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">PoisonRec: An Adaptive Data Poisoning Framework for Attacking Black-box Recommender Systems</title>
		<author>
			<persName><forename type="first">Junshuai</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhao</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zehong</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yucheng</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhenpeng</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jun</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE 2020</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Are We Evaluating Rigorously? Benchmarking Recommendation for Reproducible Evaluation and Fair Comparison</title>
		<author>
			<persName><forename type="first">Zhu</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Di</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hui</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinghua</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cong</forename><surname>Geng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RecSys</title>
		<imprint>
			<date type="published" when="2020">2020. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Revisiting adversarially learned injection attacks against recommender systems</title>
		<author>
			<persName><forename type="first">Jiaxi</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hongyi</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ke</forename><surname>Wang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note>In RecSys 2020</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Toward Privacy-Preserving Personalized Recommendation Services</title>
		<author>
			<persName><forename type="first">Cong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yifeng</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinghua</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kui</forename><surname>Ren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Engineering</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="21" to="28" />
			<date type="published" when="2018">2018. 2018</date>
			<publisher>Cybersecurity</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Ripplenet: Propagating user preferences on the knowledge graph for recommender systems</title>
		<author>
			<persName><forename type="first">Hongwei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fuzheng</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jialin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miao</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenjie</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xing</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Minyi</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Knowledge Graph Convolutional Networks for Recommender Systems</title>
		<author>
			<persName><forename type="first">Hongwei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miao</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xing</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenjie</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Minyi</forename><surname>Guo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Neural graph collaborative filtering</title>
		<author>
			<persName><forename type="first">Xiang</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangnan</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Meng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fuli</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tat-Seng</forename><surname>Chua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd international ACM SIGIR conference on Research and development in Information Retrieval</title>
		<meeting>the 42nd international ACM SIGIR conference on Research and development in Information Retrieval</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="165" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Triple Adversarial Learning for Influence Based Poisoning Attack in Recommender Systems</title>
		<author>
			<persName><forename type="first">Chenwang</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Defu</forename><surname>Lian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yong</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhihao</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Enhong</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2021">2021</date>
			<publisher>Association for Computing Machinery</publisher>
			<biblScope unit="page" from="1830" to="1840" />
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Graph Convolutional Neural Networks for Web-Scale Recommender Systems</title>
		<author>
			<persName><forename type="first">Rex</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruining</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kaifeng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pong</forename><surname>Eksombatchai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">L</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Black-Box Attacks on Sequential Recommenders via Data-Free Model Extraction</title>
		<author>
			<persName><forename type="first">Zhenrui</forename><surname>Yue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhankui</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Huimin</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julian</forename><surname>Mcauley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RecSys</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Autoloss: Automated loss function search in recommendations</title>
		<author>
			<persName><forename type="first">Xiangyu</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haochen</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chong</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM KDD</title>
		<imprint>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="3959" to="3967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Autoemb: Automated embedding dimensionality search in streaming recommendations</title>
		<author>
			<persName><forename type="first">Xiangyu</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haochen</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenqi</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xudong</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaobing</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiwang</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDM</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="896" to="905" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Reinforcement learning to optimize long-term user engagement in recommender systems</title>
		<author>
			<persName><forename type="first">Lixin</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Long</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhuoye</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiaxing</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Weidong</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dawei</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</title>
		<meeting>the 25th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="2810" to="2818" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
