<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Hyper-heuristics and Classifier Systems for Solving 2D-Regular Cutting Stock Problems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">H</forename><surname>Terashima-Marín</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">ITESM-Center for Intelligent Systems Av. E. Garza Sada</orgName>
								<address>
									<postCode>2501, 64849</postCode>
									<settlement>Monterrey, Mexico</settlement>
									<region>NL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">E</forename><forename type="middle">J</forename><surname>Flores-Álvarez</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">ITESM-Center for Intelligent Systems Av. E. Garza Sada</orgName>
								<address>
									<postCode>2501, 64849</postCode>
									<settlement>Monterrey</settlement>
									<region>NL</region>
									<country key="MX">Mexico</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">P</forename><surname>Ross</surname></persName>
							<email>p.ross@napier.ac.uk</email>
							<affiliation key="aff2">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">Napier University</orgName>
								<address>
									<postCode>EH10 5DT</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Hyper-heuristics and Classifier Systems for Solving 2D-Regular Cutting Stock Problems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">42C2680045762008E0220C7A81AA54AA</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T06:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.2 [Computing Methodologies]: Artificial Intelligence Evolutionary Computation</term>
					<term>Hyper-heuristics</term>
					<term>Classifier Systems</term>
					<term>Optimization</term>
					<term>Cutting Stock</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a method for combining concepts of Hyper-heuristics and Learning Classifier Systems for solving 2D Cutting Stock Problems. The idea behind Hyperheuristics is to discover some combination of straightforward heuristics to solve a wide range of problems. To be worthwhile, such combination should outperform the single heuristics. In this paper, the Hyper-heuristic is formed using a XCS-type Learning Classifier System which learns a solution procedure when solving individual problems. The XCS evolves a behavior model which determines the possible actions (selection and placement heuristics) for given states of the problem. When tested with a collection of different problems, the method finds very competitive results for most of the cases. The testebed is composed of problems used in other similar studies in the literature. Some additional instances of the testbed were randomly generated.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Cutting stock is a problem widely studied because it has many applications ranging from clothing and metal to engineering and shipbuilding. The problem belongs to the class of most difficult problems known as NP-hard <ref type="bibr" target="#b10">[10]</ref>. Given a set of pieces, the problem is to generate cutting patterns from sheets of stock material, or objects, that optimize certain objectives, such as to minimize the trim loss, or the number of objects used. In this particular investigation problems involve only 2D-rectangular pieces. Since many precise requirements and constraints vary from industry to industry, many different approaches and techniques have been proposed for solving the problem <ref type="bibr" target="#b15">[15]</ref>. For small combinatorial problems, exact methods like linear programming can be applied. However, when larger and more complex problems appear, exact solutions are not an option since the search space grows exponentially, and so the time for finding the optimal solution. Various heuristic and approximate approaches have been proposed that guarantee finding near optimal solutions. However, it has not been possible to find a reliable method to solve all instances of a given problem. In general, some methods work well for particular instances, but not for all of them.</p><p>The primary purpose of this paper is to explore an idea previously developed for one-dimensional bin packing <ref type="bibr" target="#b22">[22]</ref>, and extend that idea to solve 2D-rectangular cutting stock problems. There are similarities between the two problems, so heuristics developed for bin packing can also be used in the solution process for the 2D-cutting stock problem. The model uses a learning mechanism based on what is known in the Evolutionary Computation field, as Learning Classifier Systems (LCS). In their paper and also in our research, a particular type of LCS is used, the XCS, which is based on the accuracy of the prediction, and it is used to learn a set of rules which associates features in the problem state with various heuristics. This is the concept known as hyperheuristic.</p><p>A hyper-heuristic is used to define a high-level heuristic that controls low-level heuristics <ref type="bibr" target="#b4">[4]</ref>. The hyper-heuristic should decide when and where to apply each single lowlevel heuristic, depending on the given problem state. The choice of low-level heuristics may depend on the features of the problem state, such as CPU time, expected number of solutions, values on the objective function, etcetera. Selecting a particular heuristic is dynamic, and depends on both the problem state produced by the previous heuristic applied, and the search space to be explored in that point of time. Given that the cutting problem has specific features, constraints and heuristics, this investigation introduces a method which combines the ideas explained above to tackle 2D-rectangular cutting stock problems. The method assembles a combination of single heuristics (selection and place-ment), and this combination is formed taking into account the quality of partial solutions provided by the single heuristics defined under the scheme of classifier systems. The classifiers are evolved using a Genetic Algorithm (GA), with the aim of proposing better heuristics, for solving the given cutting stock problem.</p><p>The paper is organized as follows. Section 2 describes the cutting stock problem. Section 3 presents the solution method proposed and its justification. This is followed by the experimental setup, the results, their analysis and discussion in section 4. Finally, in section 5 we include our conclusions and some ideas for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE CUTTING STOCK PROBLEM</head><p>The Cutting Stock problem (CuSP) is among the earliest problems in the literature of operational research. In 1939, Kantorovich studied obvious applications in all the industries whose products were in a flat sheet form; this research was published in 1960 <ref type="bibr" target="#b17">[17]</ref>. Since then, there have been many investigations on the problem, references of which are in different surveys that describe the CuSP's development and applications, from several points of view: an abstract description of the different solution methods which have been given to the problem <ref type="bibr" target="#b12">[12]</ref>; the evolution of the problem with the objective of maximal production <ref type="bibr" target="#b13">[13]</ref>; the applications and solutions to the CuSP problem <ref type="bibr">[7]</ref>; and the solution methods of the problem <ref type="bibr" target="#b5">[5]</ref>.</p><p>Given a set L = (a1, a2, ...an) of items to be cut, each one of size s(ai) (0, X], from a set of cutting stock sheets (objects) of size X, the problem is to find cutting patterns, in such a way that the solution minimizes the number of used objects and the trim loss. This NP-problem, can be complicated depending very much on the number of variables, such as the number of figures, their shapes, the rotation angles, the maximum number of pieces to cut in an object, number of dimensions, and color, for example. Due to the diversity of problems and applications, Dyckhoff <ref type="bibr">[7]</ref> has proposed a very complete and systematic categorization of cutting and packing problems. His survey integrates a general system of 96 problems for the Cutting Stock with four main features and their subtypes as follows: The extension of the CuSP and the objectives of this investigation restricted the problem to a Cutting Stock Problem of two dimensions <ref type="bibr" target="#b2">(2)</ref>. The dimensionality refers to the cutting action, as the cut will be done in both directions of length and width in the material. It is assumed that there are always enough resources to satisfy the demand, and there will be a total of requested figures cut in a stock material (V). The stock material will have identical shapes (I); and the experimentation will be done for rectangular shapes (C). Then our work will be limited to a 2VIC-Cutting Stock Problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SOLUTION APPROACH</head><p>In the literature one can see that Evolutionary Computation has been used in few CuSP investigations. Recently, Hopper and Turton <ref type="bibr" target="#b15">[15]</ref> have presented an empirical study on the usage of Meta-Heuristics for solving 2D Rectangular Bin Packing Problems. Evolutionary Computation usually includes several types of evolutionary algorithms <ref type="bibr" target="#b24">[24]</ref>: Genetic Algorithms <ref type="bibr" target="#b14">[14]</ref>, Evolutionary Strategies <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b23">23]</ref>, and Evolutionary Programming <ref type="bibr" target="#b1">[1,</ref><ref type="bibr" target="#b9">9]</ref>. From these types of Evolutionary Algorithms, Genetic Algorithms were developed by Holland and his associates in Michigan University between 1960 and 1970, and the first systematic and theoretical treatment is in Holland's Adaptation in Natural and Artificial Systems <ref type="bibr" target="#b14">[14]</ref>. Later Goldberg <ref type="bibr" target="#b11">[11]</ref> gave a summary of the applications done up to 1989. Recently, many sources related to the topic have been published <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b20">20]</ref>. Based on the same ideas, Holland also developed a learning model called Learning Classifier System (LCS) which is an evolutionary technique combined with reinforcement learning and other heuristics to produce adaptive systems. The technique has been applied to a wide variety of domains such as optimization, design, classification, control and many others <ref type="bibr" target="#b3">[3]</ref>. A hyper-heuristic is formed by combining a set of simple heuristics, and in this research we use a special type of LCS, called XCS <ref type="bibr" target="#b25">[25]</ref>, to perform this task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Set of Heuristics Used</head><p>In a one dimensional packing problem, the related heuristics refer to the way the pieces are selected and the bins in which they will be packed. For a two dimensional problem such as de 2VIC-CuSP, additional difficulty is introduced by defining the exact location of the figures, that is, where a particular figure should be placed inside the object. In this investigation two kinds of heuristics were considered: for selecting the figures and objects, and for placing the figures into the objects. Some of the heuristics were taken from the literature, others were adapted, and some other variations developed by us. We chose the most representative heuristics in its type, considering their individual performance presented in related studies and also in an initial experimentation on a collection of benchmark problems. The selection heuristics used in this research are:</p><p>• Next Fit (NF).-Use the current object to place the next piece, otherwise open a new one and place the piece there.</p><p>• First Fit (FF).-Consider the opened objects in increasing order and place the item in the first one where it fits.</p><p>• Best Fit (BF).-It places the item in the opened object where it best fits, that is, in the object that leaves minimum waste.</p><p>• Worst Fit (WF).-It places the item in the opened object where it worst fits (with the largest available room).</p><p>• Almost Worst Fit (AWF).-It places the item in the opened object with the second largest available room.</p><p>• First Fit Decreasing (FFD).-Sort the pieces in decreasing order, and the largest one is placed according to FF.</p><p>• Next Fit Decreasing (NFD).-Sort the pieces in decreasing order, and the largest one is placed according to NF.</p><p>• Djang and Fitch (DJD).-It places items in an object, taking items by decreasing size, until the object is at least a third full. Then, it initializes w indicating the allowed waste, and looks for combinations of one, two, or three items producing a waste w. If any combination fails, it increases w accordingly. We adapted this heuristic to consider the initial filling different to a third, and the combinations for getting the allowed waste up to five items.</p><p>Some of these heuristics are described also in Ross et al. <ref type="bibr" target="#b22">[22]</ref> and Hopper et al. <ref type="bibr" target="#b15">[15]</ref>. The placement heuristics belong to the class of bottomleft heuristics, that is, they keep the bottom-left stability in the layout. They are based on a sliding technique. The placement heuristics we used are:</p><p>• Bottom-Left (BL) <ref type="bibr" target="#b16">[16]</ref>.-It starts at the upper corner of the object, then the piece slides vertically, all the way down, until it hits another piece, it continues sliding to the left (in straight line) as far as possible. A sequence of down and left movements is repeated until the piece reaches a stable position.</p><p>• Improved-Bottom Left (BLLT) <ref type="bibr" target="#b18">[18]</ref> .-It is similar to the above heuristic, but instead of moving the piece all the way and straight to the left, it keeps sliding it over the borderline of the bottom pieces until it reaches a stable position.</p><p>Both heuristics were modified to generate two new heuristics in order to consider rotation in the piece to place. These heuristics are called BLR and BLLTR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Combining Heuristics with the XCS</head><p>This section first describes in detail the concepts of Learning Classifier Systems and Hyper-heuristics, and next our specific model combining both techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">LCS and Hyper-heuristics</head><p>Classifier Systems (of the Michigan type) evolve a set of condition-action rules or 'classifiers' and periodically use a Genetic Algorithms with the ordinary genetic operators such as selection, crossover and mutation, to breed new rules from old ones. What is obtained is a set of rules representing an adaptive system, that given a change in the environment, would react accordingly. The LCS interacts with the environment perceiving situations σ, usually coded as binary strings of length L, performing actions α, and finding scalar feedback ρ. Knowledge is represented in a population [P ] of classifiers. The population size is given by the parameter N .</p><p>The system interacts with the environment via detectors (input) and effectors (actions). The environment also provides a scalar reinforcement, also called reward. to generate new classifiers. The fitness calculation scheme provides the quantity to update the classifier's fitness depending on the classifier's accuracy relative to the accuracies of the other classifiers in the set.</p><p>The concept of hyper-heuristic is motivated by the objective to provide a more general procedure for optimization <ref type="bibr" target="#b4">[4]</ref>. Meta-heuristics methods usually solve problems by operating directly on the problem. Hyper-heuristics deal with the process to choose the right heuristic for solving the problem at hand. The idea is to discover a combination of simple heuristics that can perform well on a whole range of problems. For real applications, exhaustive methods are not a practical approach. The search space might be too large, or the number and types of constraints may generate a complex space of feasible solutions. It is common to sacrifice quality of solutions by using quick and simple heuristics to solve problems. Many heuristics have been developed for specific problems. But, is there a single heuristic for a problem that solve all instances well? The immediate answer is no. Certain problems may contain features that would make specific heuristic to work well, but those features may not be suitable for other heuristics. The idea with hyper-heuristics is to combine heuristics in such a way that a heuristic's strengths make up for the drawbacks of another.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Proposed Solution Model</head><p>The above two concepts were merged to solve 2D cutting stock problems, following previous work by Ross et al. <ref type="bibr" target="#b22">[22]</ref> for one dimensional bin packing. An XCS type classifier system was used to form the hyper-heuristics. The block diagram of the system is shown in Figure <ref type="figure">1</ref>. The XCS evolves a behavior model which determines the possible actions for all situations or states of the problem. In this particular model, the actions are given by the selection and placement heuristics to be applied in a given situation. To find the appropriate set of rules linking problem states with heuristics, the environment was coded using particular features in the problem at hand. For example, the environment informs the classifier system the size of the objects, the amount and ratio of figures to be packed. Then, each classifier associates the problem state with a selection and placement heuristic, which are applied until certain condition is met. The process continues until the problem is completely solved.</p><p>A rule determines the relationship between a condition and an action. The representation of a classifier is shown in Figure <ref type="figure" target="#fig_3">2</ref>. This represents a description of a problem state. The height, width, area, and the percentage R of items to be cut in each category is computed.</p><p>The condition segment in a classifier has the following information: Each part was coded into categories according to dimensions in the height, width, and area of objects (small, medium, and large, and we added huge for area). Each of them has a proportion of items, shown also in Table <ref type="table">1</ref>. The percentages of items remaining to be cut are shown in Table <ref type="table">2</ref>.</p><formula xml:id="formula_0">•</formula><p>The action was selected from all possible combinations of selection and placement heuristics, taking also into consideration the possibility of rotating an object by 90 degrees. Those combinations are shown in Table <ref type="table" target="#tab_0">3</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 1: Proportion of items.</head><p>Bits Proportion 0 0 0-10% 0 1 10-20% 1 0 20-50% 1 1 50-100%</p><p>The general procedure of the method has the following steps:</p><p>• The XCS generates a random population of classifiers.</p><p>• The current problem state is matched against those rules.</p><p>Table <ref type="table">2</ref>: Percentage of items left to be cut. Bits % left to be cut 0 0 0 0-14% 0 0 1 14-28% 0 1 1 28-42% 0 1 0 42-56% 1 1 0 56-70% 1 0 0 70-84% 1 1 1 84-100% • With the Matching Set and the Prediction Array an Action Set is formed from which the best classifier is taken to perform the indicated action (a combination of selection and placement heuristic). That action is carried out until an object is completely full or no other remaining piece fits in that object.</p><p>• Reward is applied depending on the selected reinforcement scheme (Single or Multi-Step). In the single-step, reward is paid after every application of the selected combination of heuristics, whereas in the multi-step, the reward is updated after a complete solution is delivered.</p><p>• Once an instance has been completely solved, the best classifiers are kept in the population and the solution process starts again for that instance.</p><p>• The procedure continues until a pre-established number of cycles is reached.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">RESULTS AND DISCUSSION</head><p>This section presents the experiments carried out during the investigation and the results obtained. These results are compared against those obtained by the individual heuristics for two kinds of problem instances: the first benchmark  set was taken from the literature (available from the OR-Library <ref type="bibr" target="#b2">[2]</ref>), and the other one is composed by a set of randomly generated problems for which an optimal solution is known. The first set is an ensemble of 16 problems (guillotineable, labeled cgcut1 to cgcut3, and gcut1 to gcut13) plus 12 problems (non-guillotineable, labeled ngcut1 to ng-cut12). They carry different features, for instance, problem cgcut1 is composed of very small pieces in comparison to the size of the objects. cgcut1 has 16 pieces, cgcut2 has 23 pieces, whereas cgcut3 has 62 pieces. These problems have been also used in other similar studies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Condition Action</head><p>Comparison tables for all problems contain the label for each problem, the number of pieces n, the continuous lower bound L0, the best solution proposed in the work by Martello and Vigo (MaVi) <ref type="bibr" target="#b19">[19]</ref>, the best result provided by the individual heuristic (BH), and the results by our approach SS and MS considering the single-step and multiple-step reward scheme in a classifier system, respectively. The continuous lower bound determines the minimum number of objects needed to satisfy the cutting of the demand of pieces, and is computed by the following formula:</p><formula xml:id="formula_1">Lo = n j=1 hj wj HW (<label>1</label></formula><formula xml:id="formula_2">)</formula><p>where H represents the object height, W is the width object, and each one of the pieces j J = 1, ..., n has a height hj ≤ H and width wj ≤ W . All possible combinations of selection and placement heuristics were run for each instance of the testbed. In the results, BH is the best result obtained by one of those combinations. It is important to emphasize that sometimes the best result is provided by more than one combination, but we do not have space here to include results on the individual combinations for each problem instance.</p><p>Table <ref type="table" target="#tab_2">4</ref> shows results for the first three problems. Prob-lems cgcut1 and cgcut2 are rather easy, so that several of the the individual heuristics, and our approach, solve both problems with the optimal number of objects. For problem cgcut3 the lower bound is not reached, but there is an improvement with respect to the results reported by Martello and Vigo, since the number of objects is decreased from 23 to 20. Results on the next 13 problems (gcut1 to gcut13) are presented in Table <ref type="table" target="#tab_3">5</ref>. It can be observed that there is a decrease in the number of objects for problems gcut4, gcut6, gcut8, and gcut10 with respect to the best heuristic. For instance, in problem gcut6, the number of objects obtained with the best heuristic is 7, while our approach reports 6. Nevertheless, the number of objects is within one from the continuous lower bound. For problems gcut5, gcut9 and gcut13, which seem easier, the continuous lower bound is reached. For the rest of the problems, results are as good as those reported by the best heuristic, and for some of the instances, a slight improvement to the results reported by Martello and Vigo.</p><p>Table <ref type="table" target="#tab_4">6</ref> shows results for the non-guillotineable problems. There is an improvement for problems ngcut2, ngcut3, ng-cut10, ngcut11, and ngcut12. For the remaining problems, our approach performs as good as the best heuristic. Additional randomly generated instances were produced to be fair in the comparison with the other methods. Three guillotineable problems were generated with 39, 79, and 120 pieces each, and continuous lower bound (which is also the optimal number of objects) of 5, 10, and 15 objects respectively. Other three non-guillotineable instances were produced with 33, 54, and 103 pieces each, and with the continuous lower bound of 5, 10, and 15 objects. Results for this collection of problems is presented in Table <ref type="table" target="#tab_5">7</ref>. For two of the non-guillotineable instances the optimal number of objects is found. Although, there is a decrease in the number of objects with respect to the best heuristic, the optimal number of objects was not reached for the rest of the problems. In general, the solution model presents a reasonable performance. The choice of using either the Single or Multi-Step Reinforcement Scheme makes no difference on the results. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Analysis on the hyper-heuristics produced</head><p>Looking at the results, it is clear in all cases, that the method to form hyper-heuristics, and the hyper-heuristics themselves are efficient, at least with respect to the number of objects used for each instance. This supports again the statement that non-direct representations for solving difficult optimization problems seems the right direction when using GAs. Direct encoding for very large problems requires long chromosomes. However, it is important to get a better feeling of the real advantages or the proposed approach, and the practical implications of using it. For example, regarding the computational cost for delivering solutions by our approach, it is slightly higher than the time used by the simple heuristics which run in just few seconds. However, we found variations in computational cost when comparing the single and multi-step rewarding mechanism. In general the single-step is faster than the multi step. For instance, for a selection of problems in the test sets, an important gap was observed. For cgcut3, single-step reports 9.4 seconds whereas multi-step takes 36 seconds. Problem cgcut12 is the case with the greatest difference since single-step takes around an hour (3613 seconds) and multi-step needs over 93 hours. For the other cases and even for the randomly generated instances, results were obtained in a matter of seconds.</p><p>By revising in detail hyper-heuristics which obtained the best result for each problem instance, it is worth pointing out that there are single heuristics that repeatedly appear in the solutions. But it is also interesting to observe that single heuristics with no very good performance when run individually, appear in good hyper-heuristics too. For instance, Figure <ref type="figure" target="#fig_4">3</ref> shows the percentage of usage for each single heuristic combination (labeled 1 to 40, and shown previously in Table <ref type="table" target="#tab_0">3</ref>) when solving problem cgcut3 with the single-step mechanism. Good individual combinations such as Filler+FFD plus BLLTR <ref type="bibr" target="#b16">(16)</ref> and NFD plus BLR <ref type="bibr" target="#b22">(22)</ref> are used very often. But all other heuristics also contribute in the solution (except combination 18). This confirms the idea behind hyper-heuristics that by exploiting the problem-specific features by means of choosing a set of heuristics which best adapt to that, a better performance can be achieved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS AND FUTURE WORK</head><p>This document has described experimental results in a model which uses a classifier system to form hyper-heuristics, which is a combination of single heuristics. For the 2Dregular cutting stock problem, combinations of selection and placement heuristics were used. Overall, the scheme identifies efficiently combinations of heuristics that solve optimally many of the test instances used.</p><p>Ideas for future work involve extending the proposed strategy to solve problems including other kinds of pieces such as polygonal, irregular, etcetera. It would be also interesting to work the approach for other multidimensional problems. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>1 . 4 .</head><label>14</label><figDesc>Dimensionality: One (1), Two (2), Three (3) or n 2. Assignation form: (a) All the larger objects and a selection of small figures (B) (b) A selection of large objects and all the small figures Assortment of small figures: (a) Few figures of different shapes (F) (b) Many figures of different shapes (M) (c) Many figures of few of different and incongruent shapes (R) (d) Congruent shapes (C)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>The module [P] represents a population of classifiers where the left side consists of the conditions, and the right side indicates the environmental actions. Given an input a match set [M] is formed by those classifiers in [P] that match their conditions with the given situation in the environment. The system then computes a prediction P (ai) for each action represented in [M]. Actions are selected from [M] to form an action set [A]. Several action-selection methods have been studied in the literature. One action is sent to the effectors and an immediate reward may be returned by the environment. The most important elements in a classifier system are the Reinforcement component, the Discovery component, and the Fitness calculation scheme. The Reinforcement component consists of updating the ρ, (error on the prediction parameter), and F (classifier's fitness) parameters of classifiers in the previous action set [A]-1. The discovery component is based on a Genetic Algorithm working in the match set [M]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Height representation -SH.-Items up to 1/3 of object height -MH.-Items from 1/3 up to 1/2 of object height -LH.-Items over 1/2 of object height • Width representation -SW.-Items up to 1/3 of object width -MW.-Items from 1/3 up to 1/2 of object width -LW.-Items over 1/2 of object width • Area representation -SA.-Items up to 1/4 of object area -MA.-Items from 1/4 up to 1/3 of object area -LA.-Items from 1/3 up to 1/2 of object area -HA.-Items over 1/2 of object area • R.-Ratio of items to be cut The action segment contains the following information: • SCH.-Selection Heuristic • PMH.-Placement Heuristic</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Structure of Classifiers.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Selected heuristics by the XCS when solving problem cgcut3 with the Single-Step Rewarding Scheme.</figDesc><graphic coords="7,51.00,54.26,244.29,179.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 3 : Representation of actions.</head><label>3</label><figDesc></figDesc><table><row><cell>Action</cell><cell>Selection Heuristic</cell><cell>Placement Heuristic</cell></row><row><cell>1</cell><cell>First Fit (FF)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>2</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>3</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>4</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>5</cell><cell>First Fit Decreasing (FFD)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>6</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>7</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>8</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>9</cell><cell>First Fit Increasing (FFI)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>10</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>11</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>12</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>13</cell><cell>Filler+FFD</cell><cell>Bottom-Left (BL)</cell></row><row><cell>14</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>15</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>16</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>17</cell><cell>Next Fit (NF)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>18</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>19</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>20</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>21</cell><cell>Next Fit Decreasing (NFD)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>22</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>23</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>24</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>25</cell><cell>Best Fit (BF)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>26</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>27</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>28</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>29</cell><cell>Best Fit Decreasing (BFD)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>30</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>31</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>32</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>33</cell><cell>Worst Fit (WF)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>34</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>35</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>36</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row><row><cell>37</cell><cell>Djang and Finch (DJD)</cell><cell>Bottom-Left (BL)</cell></row><row><cell>38</cell><cell></cell><cell>Bottom-Left Rotate (BLR)</cell></row><row><cell>39</cell><cell></cell><cell>Improved Bottom-Left(BLLT)</cell></row><row><cell>40</cell><cell></cell><cell>Improved Bottom-Left Rotate(BLLTR)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Model combining Hyper-Heuristics and the XCS Classifier System.</head><label></label><figDesc></figDesc><table><row><cell></cell><cell cols="2">Selection</cell><cell></cell><cell></cell><cell cols="2">Placement</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">Heuristics</cell><cell></cell><cell></cell><cell cols="2">Heuristics</cell><cell></cell><cell>Action</cell><cell></cell></row><row><cell cols="2">-FF -FFD -NF</cell><cell cols="2">-BF -WF -DJD</cell><cell></cell><cell>-BL -BLLT</cell><cell cols="2">-BLR -BLLTR</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>XCS</cell><cell></cell><cell></cell><cell></cell><cell>New state</cell><cell>Environment 2D Cutting</cell></row><row><cell></cell><cell cols="2">Effectors</cell><cell></cell><cell></cell><cell cols="2">Detectors</cell><cell></cell><cell></cell><cell>Stock</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Problem</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Reward</cell><cell></cell></row><row><cell></cell><cell cols="2">Action Set A</cell><cell></cell><cell>GA</cell><cell cols="2">Population P</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">Prediction</cell><cell></cell><cell></cell><cell cols="2">Match Set</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>array</cell><cell></cell><cell></cell><cell></cell><cell>M</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Figure 1: SH MH LH</cell><cell cols="2">SW</cell><cell>MW</cell><cell>LW</cell><cell>SA</cell><cell>MA</cell><cell>LA</cell><cell>HA</cell><cell>R</cell><cell>SCH PMH</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 4 : Comparison with results for 2D instances from the literature.</head><label>4</label><figDesc></figDesc><table><row><cell>Problem</cell><cell cols="3">cgcut1 cgcut2 cgcut3</cell></row><row><cell>n</cell><cell>16</cell><cell>23</cell><cell>62</cell></row><row><cell>L0</cell><cell>2</cell><cell>2</cell><cell>16</cell></row><row><cell>MaVi</cell><cell>2</cell><cell>2</cell><cell>23</cell></row><row><cell>BH</cell><cell>2</cell><cell>2</cell><cell>20</cell></row><row><cell>HH-XCS-SS</cell><cell>2</cell><cell>2</cell><cell>20</cell></row><row><cell>HH-XCS-MS</cell><cell>2</cell><cell>2</cell><cell>20</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 5 : Comparison with results for 2D instances from the literature.</head><label>5</label><figDesc></figDesc><table><row><cell>Problem</cell><cell cols="13">gc1 gc2 gc3 gc4 gc5 gc6 gc7 gc8 gc9 gc10 gc11 gc12 gc13</cell></row><row><cell>n</cell><cell>10</cell><cell>20</cell><cell>30</cell><cell>50</cell><cell>10</cell><cell>20</cell><cell>30</cell><cell>50</cell><cell>10</cell><cell>20</cell><cell>30</cell><cell>50</cell><cell>32</cell></row><row><cell>L0</cell><cell>3</cell><cell>5</cell><cell>7</cell><cell>12</cell><cell>3</cell><cell>5</cell><cell>9</cell><cell>12</cell><cell>3</cell><cell>6</cell><cell>7</cell><cell>13</cell><cell>2</cell></row><row><cell>MaVi</cell><cell>5</cell><cell>6</cell><cell>8</cell><cell>14</cell><cell>3</cell><cell>7</cell><cell>11</cell><cell>-</cell><cell>3</cell><cell>7</cell><cell>9</cell><cell>16</cell><cell>2</cell></row><row><cell>BH</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>14</cell><cell>3</cell><cell>7</cell><cell>11</cell><cell>14</cell><cell>3</cell><cell>8</cell><cell>8</cell><cell>16</cell><cell>2</cell></row><row><cell>HH-XCS-SS</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>13</cell><cell>3</cell><cell>6</cell><cell>11</cell><cell>13</cell><cell>3</cell><cell>7</cell><cell>8</cell><cell>16</cell><cell>2</cell></row><row><cell>HH-XCS-MS</cell><cell>4</cell><cell>6</cell><cell>8</cell><cell>13</cell><cell>3</cell><cell>6</cell><cell>11</cell><cell>13</cell><cell>3</cell><cell>7</cell><cell>8</cell><cell>16</cell><cell>2</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 6 : Comparison with results for 2D instances from the literature.</head><label>6</label><figDesc></figDesc><table><row><cell>Problem</cell><cell cols="12">ngc1 ngc2 ngc3 ngc4 ngc5 ngc6 ngc7 ngc8 ngc9 ngc10 ngc11 ngc12</cell></row><row><cell>n</cell><cell>50</cell><cell>17</cell><cell>21</cell><cell>7</cell><cell>14</cell><cell>15</cell><cell>8</cell><cell>13</cell><cell>18</cell><cell>13</cell><cell>15</cell><cell>22</cell></row><row><cell>L0</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>3</cell><cell>2</cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>2</cell><cell>2</cell><cell>3</cell></row><row><cell>MaVi</cell><cell>3</cell><cell>4</cell><cell>3</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>3</cell></row><row><cell>BH</cell><cell>3</cell><cell>4</cell><cell>4</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>3</cell><cell>4</cell></row><row><cell>HH-XCS-SS</cell><cell>3</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>2</cell><cell>3</cell><cell>2</cell><cell>2</cell><cell>3</cell></row><row><cell>HH-XCS-MS</cell><cell>3</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>3</cell><cell>3</cell><cell>2</cell><cell>2</cell><cell>3</cell><cell>2</cell><cell>2</cell><cell>3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 7 : Comparison with results for 2D proposed instances.</head><label>7</label><figDesc></figDesc><table><row><cell>Problem</cell><cell cols="6">G1 G2 G3 NG1 NG2 NG3</cell></row><row><cell>n</cell><cell cols="3">39 79 120</cell><cell>33</cell><cell>54</cell><cell>103</cell></row><row><cell>L0</cell><cell>5</cell><cell>10</cell><cell>15</cell><cell>5</cell><cell>10</cell><cell>15</cell></row><row><cell>BH</cell><cell>6</cell><cell>13</cell><cell>19</cell><cell>6</cell><cell>11</cell><cell>16</cell></row><row><cell>HH-XCS-SS</cell><cell>6</cell><cell cols="2">12 17</cell><cell>5</cell><cell>10</cell><cell>16</cell></row><row><cell>HH-XCS-MS</cell><cell>6</cell><cell cols="2">12 17</cell><cell>5</cell><cell>10</cell><cell>16</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ACKNOWLEDGMENTS</head><p>This research was supported in part by ITESM under the Research Chair CAT-010 and the CONACYT Project under grant 41515.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Genetic programming: An Introduction</title>
		<author>
			<persName><forename type="first">W</forename><surname>Banzhaf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Nordin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">D</forename><surname>Francone</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Morgan Kaufmann Publishers, Inc</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Beasley operations research library. Collection of problems for 2D packing and cutting</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Beasley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Applications of Learning Classifier Systems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Bull</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Hyper-heuristics: An emerging direction in modern research technolology</title>
		<author>
			<persName><forename type="first">E</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kendall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Newall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schulenburg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Metaheuristics</title>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="457" to="474" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The cutting stock problem. a survey</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Fiering</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Production Economics</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="291" to="305" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Handbook of Genetic Algorithms</title>
		<author>
			<persName><forename type="first">L</forename><surname>Davis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Van Nostrtand Reinhold</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A topology of cuting and packing problems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Dyckhoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operation Research</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="145" to="159" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Introduction to Evolutionary Computing</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Eiben</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Smith</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Springer Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Artificial Intelligence through Simulated Evolution</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Fogel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Walsh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1966">1966</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Computers and Intractability</title>
		<author>
			<persName><forename type="first">M</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
			<publisher>W.H. Freeman and Company</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Genetic Algorithms in Search, Optimization and Machine Learning</title>
		<author>
			<persName><forename type="first">D</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Adison Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Approaches to the cutting stock problem</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Golden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIIE Transactions</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="256" to="274" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The trim-loss and assortment problems: A survey</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Hinxman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EJOR</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="8" to="18" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Adaptation in Natural and Artificial Systems. The University of</title>
		<author>
			<persName><forename type="first">J</forename><surname>Holland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>Michigan Press</publisher>
			<pubPlace>Ann Arbor</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An empirical study of meta-heuristics applied to 2d rectangular bin packing</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Turton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Studia Informatica Universalis</title>
		<imprint>
			<biblScope unit="page" from="77" to="106" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">On genetic algorithms for the packing of polygons</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jakobs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operations Research</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="165" to="181" />
			<date type="published" when="1966">1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Mathematical methods of organizing and planning production</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Kantorovich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="366" to="422" />
			<date type="published" when="1960">1960</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">An improved bl-algorithm for genetic algorithm of the orthogonal packing of rectangle</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Teng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operations Research</title>
		<imprint>
			<biblScope unit="volume">112</biblScope>
			<biblScope unit="page" from="413" to="419" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Exact solution of the two-dimensional finite bin packing problem. Dipartimento di Elettronica</title>
		<author>
			<persName><forename type="first">S</forename><surname>Martello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
	<note>Informatica e Sistematica</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">An Introduction to Genetic Algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mitchell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, Massachussets</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Evolutionstrategie: Optimierung technischer systeme nach prinzipien dier biolischen evolution</title>
		<author>
			<persName><forename type="first">I</forename><surname>Rechenberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973">1973</date>
			<publisher>Frommann-Holzboog</publisher>
			<pubPlace>Stuttgart</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Hyper-heuristics: learning to combine simple heuristics in bin-packing problems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schulenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Blázquez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of GECCO 2002</title>
		<meeting>GECCO 2002</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="942" to="948" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Numerical Optimization of Computer Models</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">P</forename><surname>Schwefel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981">1981</date>
			<publisher>Wiley</publisher>
			<pubPlace>Chinchester, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">C</forename><surname>Keil</surname></persName>
		</author>
		<title level="m">The MIT Encyclopedia of the Cognitive Science</title>
		<meeting><address><addrLine>Cambridge, Massachussets</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Classifier fitness based on accuracy</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evolutionary Computation</title>
		<imprint>
			<biblScope unit="page" from="149" to="175" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
