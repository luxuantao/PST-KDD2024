<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Mobility-Oriented Scheme for Virtual Machine Migration in Cloud Data Center Network</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">B</forename><forename type="middle">O</forename><surname>Hu</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">State Key Laboratory of Networking and Switching Technology</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
								<address>
									<postCode>100876</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Shanzhi</forename><surname>Chen</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">State Key Laboratory of Wireless Mobile Communications</orgName>
								<orgName type="institution">China Academy of Telecommunications Technology</orgName>
								<address>
									<postCode>100191</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Jianye</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">State Key Laboratory of Networking and Switching Technology</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
								<address>
									<postCode>100876</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zhangfeng</forename><surname>Hu</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">State Key Laboratory of Networking and Switching Technology</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
								<address>
									<postCode>100876</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Mobility-Oriented Scheme for Virtual Machine Migration in Cloud Data Center Network</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">AA3AAA0F1EDDEB13FDD62320069164A6</idno>
					<idno type="DOI">10.1109/ACCESS.2016.2629673</idno>
					<note type="submission">Received September 29, 2016, accepted October 31, 2016, date of publication November 17, 2016, date of current version December 8, 2016.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Being a key computing element in cloud data center, virtual machines should be able to migrate from one location to another to meet the requirements of the cloud users and the defined policies of the cloud computing system. The mobility is an important issue when a virtual machine migrates across IP subnets. This paper focuses on the mobility management in cloud computing systems, and proposes a mobilityoriented cloud data center network architecture based on the identity/locator decoupling method of the mobility-driven networks. In cloud data center network, a mobile node refers to a virtual machine, and the mobility behavior mainly refers to virtual machine migration. In the proposed architecture, a virtual machine could implement live migration between IP subnets without service interruption. The evaluation shows that the proposed scheme can solve mobility issues effectively in virtual machine migration among IP subnets.</p><p>INDEX TERMS Virtual machine migration, mobility management, cloud data center network, mobility-driven networks (MDN).</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Mobility is nature in the world and has evolved into an inherent feature and a key driving force of the future network <ref type="bibr" target="#b0">[1]</ref>. Mobile Internet services are typically provided by servers in cloud data center, usually with virtualizationbased cloud computing technologies.</p><p>With the increasing popularity of mobile devices and unprecedented advancement of cloud computing technology, cloud data center has become one of the most effective ways to provide resources for computing and storage. As a new computing model, cloud computing enables flexible management on the resources of computing, storage and networking. It also requires more advanced networking technologies like flexible control over the network traffic, network virtualization, dynamical network resource management, network programmability and so forth. Inefficient resource management policies poorly exploit system resources within Cloud Data Centers <ref type="bibr" target="#b1">[2]</ref>. To better serve the mobile terminals with mobile computing services, an efficient way is to improve the capability of service provider through cloud computing technology like computing virtualization, optimal resource scheduling, service migration and so forth. As a method of reconfiguring the computing resource in cloud data center, virtual machine (VM) migration plays a very important role in cloud computing system in terms of optimal resource scheduling and service migration. The service servers running on virtual machines are potentially triggered to move to a proper position, even if across geographical distances according to the service requirements, the defined policies of the cloud data center or green communication purpose and so on without interruption <ref type="bibr" target="#b2">[3]</ref>.</p><p>Virtual machine mobility in cloud data center is very critical to both the user and the operator of the cloud data center. Virtualization is a key technology that has enabled such agility within a data center <ref type="bibr" target="#b3">[4]</ref>. Firstly, from the perspective of the user, virtual machine mobility (migration) can be used to move a service from a physical server to another for the sake of getting closer to its customers or getting more resources to better serve customers. This can improve user experience of the service, and potentially benefits the service providers by attracting more customers. Secondly, from the perspective of the operator, virtual machine mobility can be used to reschedule the computing resource in the cloud data center for the purpose of power saving or meeting user requirements. This can lower the cost of the operator and enhance the profit, and also satisfy the users of the cloud data center. A highavailability system should be active most of the time, and this is the reason why its design should consider almost zero downtime and a minimal human intervention if a recovery process is demanded.</p><p>Live virtual machine migration is to ensure continuous service provisioning to the hosted applications during the VM memory transfer process. It can be divided into two phases: VM image migration and reconnection. VM image migration is to transfer the file system, the state in memory and CPU of the VM. Generally, we can use pre-copy method or post-copy method. A pre-copy VM migration transfers entire memory image before resuming VM at the target server. On the contrary, post-copy VM migration approach captures and transfers the VM's minimum system state to the target server before the VM resume phase <ref type="bibr" target="#b4">[5]</ref>. Totally, the halt time is close to the transfer time of dirty pages. Since the scale of dirty pages is far less than the image, live virtual machine migration can save a multitude of halt time. Reconnection is to rebuild the connection between the new VM and its communicating peers. When VM migration is generally only inside of Layer 2 (L2) network, the characteristic is that IP address does not need to change. According to the updating request, the network only needs switch to update its Address Resolution Protocol (ARP) mapping table. However, if a virtual machine migrates across IP subnets, because the access point address has been changed, it brings two problems. Firstly, the data packages sent to the original address cannot be routed to the current address. Secondly, the TCP associated with the original IP address no longer works.</p><p>Consequently, when there is VM migration across IP subnets, the mobility problems will arise in the reconnection phase. Most of the state-of-the-art researches on virtual machine migration focus on live virtual machine migration optimization on bandwidth, storage, power or other performance metrics <ref type="bibr" target="#b1">[2]</ref> [5]- <ref type="bibr" target="#b6">[7]</ref>, or the strategy of virtual machine placement <ref type="bibr" target="#b7">[8]</ref>- <ref type="bibr" target="#b9">[10]</ref>. However, legacy cloud data center network cannot support service mobility (i.e. virtual machine mobility) in an easy way. Although live virtual machine migration allows resources from one physical server to be moved to another transparently with little or no interruption <ref type="bibr" target="#b5">[6]</ref>, it will face the mobility problem (i.e. the address for communication will change) when a virtual machine migrates across IP subnets. This challenge hinders the development of many new services and also restricts the flexibility of computing resource configuration in the cloud data center. There is still a lack of research on the virtual machine migration across Layer 3 (L3) networks.</p><p>The cloud data center should provide seamless and ubiquitous connectivity for humans, machines, content, and services whenever and wherever. In the MDN <ref type="bibr" target="#b0">[1]</ref>, one of the main principles is decoupling of Entity-identity and Location-identifier. Although this idea comes from wire-less mobile communication system, it can serve as a great inspiration to solve the mobility issues in cloud data center networks.</p><p>As we have discussed above, in this context, taking advantage of advanced design philosophy and methods about mobility management, we proposed a mobility-oriented scheme for virtual machine migration in cloud data center network to solve the mobility issues when a virtual machine migrates across L3 subnets.</p><p>The rest of this paper is organized as follows. Section II illustrates the motivation of the work and some related works, and Section III presents a mobility-oriented cloud data center network. In Section IV we will introduce mobility management for the proposed mobility-oriented cloud data center network. Section V gives a case study and the performance evaluation and Section VI concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORKS</head><p>Generally, in order to solve the mobility problem in virtual machine migration, there are two kinds of schemes: solving in L2 and solving in L3.</p><p>Solving in L2 is to utilize network virtualization technologies (e.g. Virtual Private LAN Service) to Shield IP address changes after a migration. This kind of scheme requires the support of switch equipment. Moreover, in essence, these schemes are to build a huge L2 network including all the nodes. To some extent, they will conflict with safety performance and management requirement.</p><p>Solving in L3 is generally to utilize IP tunnels and dynamic Domain Naming System (DNS), allowing the data packages to be transferred to the current address. However, this kind of schemes is not high-efficiency since the tunnel will bring extra costs as well as triangle routing problem.</p><p>The reference <ref type="bibr" target="#b10">[11]</ref> surveys one Internet mobility approach which uses identifiers instead of traditional IP addresses to name mobile hosts, contents, or other entities. This approach can be divided into three categories: (1) Mobile IP (MIP) and its derivatives, which uses a special IP address called the home address (HoA) to identify a mobile node. However, its major drawback is triangle routing problem. (2) Identity/Locator split designs, which points out that an IP address has both host identifier and locator semantics embedded, and a split of the two is necessary. The mobile node (MN) keeps its identifier unchanged and obtains a new IP address as its locator. And MDN falls into this category. (3) Future Internet architectures. However, the mobility mechanisms rely on the specific network architecture, thus it is hard to summarize.</p><p>A tunnel based virtual machine migration scheme across L3 networks is proposed in <ref type="bibr" target="#b11">[12]</ref> and <ref type="bibr" target="#b12">[13]</ref>. A tunnel is created between the source (where the virtual machine is currently located) and the destination (where the virtual machine is going to move) physical servers before the migration. When the migration is completed, all the packets sent to the virtual machine are tunneled to the destination physical server from the source physical server, so the upper layer communication sessions running on the virtual machine are not going to be interrupted. This kind of tunnel-based scheme is very easy to deploy, and it does not need to update the corresponding entries in DNS after migration, but it has some limitations. Firstly, the source physical server must be active and online after the migration, otherwise the migrated virtual machines cannot receive packets any longer and the upper layer communication sessions will be down. Secondly, since all the packets sent to the migrated virtual machines are forwarded by the source physical server, the routing path may not be the optimal (i.e. triangle routing), resulting in a waste of the network resources.</p><p>A MIP-based virtual machine migration method is proposed in <ref type="bibr" target="#b13">[14]</ref> and <ref type="bibr" target="#b14">[15]</ref>. A virtual machine in cloud data center is treated as a mobile host in wireless network. MIP is implemented on the virtual machine. When a virtual machine moves from one subnet to another, it gets a new IP address, and then notifies all its communicating peers of the new IP address so that all the packets can be sent to the current location. At last the virtual machine or the hypervisor should update the corresponding entries of this virtual machine in DNS with the new IP address. MIP-based virtual machine migration scheme requires the virtual machine to support MIP in the kernel, and a DNS update is needed to replace the corresponding entries with the new IP address. But in traditional DNS system, cache mechanism is widely used, which implies that it's difficult to perform dynamic DNS update in legacy DNS.</p><p>Reference <ref type="bibr" target="#b15">[16]</ref> introduces Software Defined Networking (SDN) into the virtual machine migration, and proposes a SDN-based virtual machine migration scheme. The scheme in <ref type="bibr" target="#b15">[16]</ref> shares the similar idea with <ref type="bibr" target="#b16">[17]</ref>, in which an OpenFlow-based protocol is presented to solve mobility issues. It requires the cloud data center be built upon SDN. When a virtual machine is triggered to move from one physical server to another, the SDN controller can capture this event and update the flow tables along the path to the new location, so that the packets sent to the virtual machine can also be correctly received after migration. SDN-enabled scheme has some deployment restrictions and scalability problems, e.g. it can be only used in SDN-based cloud data center. Besides, if the number of virtual machines is too huge, the network performance will be severely weakened.</p><p>Motivated by the natural features of identity/locator decoupling, a scheme for VM migration across IP subnets in expressive internet architecture (XIA), which is a future Internet architecture, is proposed in <ref type="bibr" target="#b17">[18]</ref>. Since the address format of XIA is directed acyclic graphs (DAG), the scheme utilizes rendezvous agent (RA) as the fallback path. After the migration, the packets cannot be sent to the VM because the DAG has changed. Then packets will be sent to the RA along the fallback path and RA will forward the packets to the VM according to the new DAG. And the re-connection between VM and correspondent node can be built. Although this scheme can achieve fast network re-connection, it requires the address format support the fallback function. That is, the scheme is hard to be deployed in the existing network architecture.</p><p>The scheme we propose in this paper is different from what has been proposed thus far. By deploying the proposed scheme, the cloud data center can support mobility in virtual machine migration without much cost (e.g. tunneling) and drawbacks like triangle routing. Moreover, compared to the schemes designed for the future network architecture, our scheme only needs to modify a little part of the existing protocol.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MOBILITY-ORIENTED CLOUD DATA CENTER NETWORK A. TECHNICAL OVERVIEW</head><p>The physical infrastructure of mobility-oriented cloud data center network is similar to legacy cloud data center network in topology, routing, forwarding and so on. Therefore, the proposed mobility-oriented cloud data center network can be incrementally deployed upon a traditional cloud data center network with some updates on the edge physical servers. Cloud computing allows business customers to scale up and down their resource usage based on needs <ref type="bibr" target="#b18">[19]</ref>. Figure <ref type="figure" target="#fig_0">1</ref> gives a topology of two-layered cloud data center network architecture <ref type="bibr" target="#b19">[20]</ref>- <ref type="bibr" target="#b21">[22]</ref>. Edge servers are directly connected to the Top of Rack (TOR) switches, and TOR switches are connected to Core switched in a FAT-TREE way for load balance and fault tolerance purposes. The essence of mobility in wireless network is that the location changes while the identity remains unchanged after the movement of mobile terminals. And this essence also works for the virtual machine mobility in cloud data center network. Thus the mobility management techniques can be introduced into cloud data center to support the virtual machine migration across IP subnets (virtual machine migration inside of L2 network is naturally supported).</p><p>Entity-identity/Location-identifier separation is introduced into mobility-oriented cloud data center network to potentially support virtual machine mobility flexibly. A location management system is adopted to map the Entity-identity to Location-identifier and support dynam-ical Location-identifier update whenever virtual machine migrates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. DECOUPLING OF ENTITY-IDENTITY (WHO) AND LOCATION-IDENTIFIER (WHERE)</head><p>To better serve mobility management for virtual machines in cloud data center network, decoupling of Entity-identity and Location-identifier is adopted to split the identity and the location of the virtual machine by defining separated name spaces. The two name spaces are fully overlapped, and both from the planned IP address pool of the cloud data center. It means that the Entity-identity of a virtual machine and the Location-identifier of another virtual machine could be a same value.</p><p>Entity-identity is allocated to the virtual machine in the cloud data center in a flat way, while Location-identifier is allocated according to the network topology hierarchically to the network elements and physical servers in the cloud data center. Compared to traditional Internet, the terminal protocol stack in mobility-oriented cloud data center network architecture has been changed, shown as Figure <ref type="figure" target="#fig_1">2</ref>. Entity-identity signifies the identity of the virtual machine, and the upper layer services running on virtual machine are connected by Entity-identity. Location-identifier represents the location of virtual machine, i.e. the location of service. By using this separation mechanism, service location change is transparent to upper layer services, making the virtual machine mobility in cloud data center transparent to mobile users of Internet services. Taking FreeBSD socket as an example, in mobility-oriented cloud data center network architecture, socket is established based on the quintuple as &lt;Destination Port, Source Port, Destination Entity-identity, Source Entity-identity, Protocol&gt;, instead of &lt;Destination Port, Source Port, Destination IP, Source IP, Protocol&gt; in legacy Internet. So we can see that the applications on both terminal side and server side are not needed to redevelop. What is needed is that they should use virtual machine Entityidentity instead of IP address in corresponding parameter settings. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. PACKET ENCAPSULATION AND COMMUNICATION PROCEDURE</head><p>As discussed above, Entity-identity/Location-identifier separation is adopted in mobility-oriented cloud data center network, implying that virtual machine is only aware of Entity-identity. Physical server should be responsible for encapsulating the packets sent from virtual machines with corresponding locators and sending them out through physical links of the cloud data center network. The packet format along the communication path is shown as Figure <ref type="figure" target="#fig_2">3</ref>. Obviously the communication between two virtual machines in a same subnet does not need the encapsulation.</p><p>In terms of packet format, what packets sent from virtual machine contain are very similar to traditional Internet packets. But Entity-identity substitutes for IP address in the packet header. When the packet is intercepted by the hypervisor of the physical server, locators of both source and destination are inserted into the packet as an additional header. The packet is then sent out through physical links and forwarded hop by hop until it reaches the destination physical server. The destination physical server intercepts the packet and removes the outer header which includes locators, and delivers it to the destination virtual machine.</p><p>The communication procedure between virtual machines in mobility-oriented cloud data center network architecture will be illustrated with an example as follow.</p><p>In two-layered cloud data center network architecture shown in Figure <ref type="figure" target="#fig_0">1</ref>, suppose a VM in Rock1 (here we call it VM-1) wants to talk to anther VM in Rock2 (here we call it VM-2). Rock1 and Rock2 are in different IP subnets. VM-1 encapsulates the packet with the Entity-identity of VM-1 and VM-2 and sends it out from its internal virtual interface. This packet is intercepted by Server-1 and parsed to get the Entity-identity of the destination, i.e. the Entityidentity of VM-2. Server-1 buffers this packet and queries the Location-identifier of VM-2 from the virtual machine location management system (which will be discussed in following sections). Upon receiving the query, the virtual machine location management system looks up its database to find the mapping entries for VM-2, and sends the result back to the Server-1. The Server-1 then caches the Entityidentity -to-Location-identifier mapping entry of VM-2 for future use especially after migration and the use of this cache can greatly improve the performance for locator query. The of entries is as shown in Table <ref type="table" target="#tab_0">1</ref>. A column called Requester is added in each entry to indicate who is communicating with this VM recently.</p><p>Upon receiving the Location-identifier reply from the virtual machine location management system, the Server-1 encapsulates the previously buffered packet with Locationidentifiers of VM-1 and VM-2. Then the packet can be delivered to Server-2 through the data center network hop by hop in legacy forwarding way. Upon receiving the packet, Server-2 parses the packet header to withdraw the Entity-identity-to-Location-identifier mapping of VM-1 and caches it, and then it removes the Location-identifier header from the packet, and finally passes the packet to VM-2. The packet sent back to VM-1 from VM-2 goes in the same way but without a locator query because the Location-identifier of VM-1 has been cached before.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. MOBILITY MANAGEMENT FOR MOBILITY-ORIENTED CLOUD DATA CENTER NETWORK A. OVERVIEW</head><p>Since Entity-identity/Location-identifier separation is adopted in mobility-oriented cloud data center network, location management system is needed for dynamically tracking virtual machines which potentially migrate to another place. This is very similar to location management of mobile node in wireless communication network but still has some differences. Determining when is best to reallocate VMs from an overloaded host is an aspect of dynamic VM consolidation. And this directly influences the resource utilization and quality of service (QoS) delivered by the system <ref type="bibr" target="#b22">[23]</ref>. Compared to wireless communication network, mobilityoriented cloud data center network has some obvious characteristics as shown in Table <ref type="table" target="#tab_1">2</ref>. Today's data center networks have been designed and operated with little considerations of energy efficiency. They are typically provisioned with redundant links and excessive bandwidth for accommodating peak traffic loads and potential link failures, and run well below capacity most of the time <ref type="bibr" target="#b23">[24]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) NUMBER OF MNs</head><p>In wireless communication network we refer MN to mobile host while in mobility-oriented cloud data center network we refer it to virtual machine instead. The number of MNs in a wireless communication network is often much larger than that in a mobility-oriented cloud data center network. A huge wireless communication network may contain billions of MNs, e.g. the cellular network of China Mobile, but a huge mobility-oriented cloud data center network may contain tens to hundreds of thousand physical servers which can be virtualized to millions of virtual machines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) SCALE OF NETWORK</head><p>A wireless communication network sometimes covers a very large area, and its topology is very complicated, while a mobility-oriented cloud data center network is often restricted within a limited area (e.g. in a server room) and its topology is very explicit and uniform <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b24">[25]</ref>- <ref type="bibr" target="#b26">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) MOVING SPEED OF MN</head><p>In a wireless communication network, the moving speed of MN varies in a very large range, and the faster MN moves, the more frequent handoff should be executed. But in a mobilityoriented cloud data center network, the handoff is not decided by the moving speed but decided by the user requirements and executed by a central scheduler.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4) FREQUENCY OF HANDOFF</head><p>A mobile host in a wireless communication network sometimes moves very fast, so handoff is performed very frequently, e.g. a cell phone in a moving train, while in cloud data center a virtual machine in mobility-oriented cloud data center network executes the migration at a very low frequency because the migration consumes a lot bandwidth and possibly leads to packet loss, which implies it cannot be executed too frequently. So during a long period of time a mobile host in a wireless communication network may perform many handoffs while a virtual machine in a mobility-oriented cloud data center network may execute handoff only once or twice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. LOCATION MANAGEMENT</head><p>Similar with wireless communication network, the function of location management for mobility-oriented cloud data center network can also be also divided into two parts, i.e. location query and location update, and it is responsible for keeping the current location of a virtual machine and updating it whenever it moves. In this paper Entity-identity/ VOLUME 4, 2016 Location-identifier separation is introduced into the communication between virtual machines, which means the identity of a virtual machine is indicated by Entity-identity its location is represented by Location-identifier. By this separation, we signify each virtual machine with an Entity-identity, and the location management system keeps a mapping from Entity-identity to its locator (possibly more than one). As the number of virtual machine and the scale of cloud data center network is limited, and the handoff frequency is not as high as in wireless communication network, the load of the location management system is not as high as that in wireless communication network, so it can adopt a centralized or two-layer distributed architecture. Figure <ref type="figure" target="#fig_0">1</ref> shows a twolayered distributed location management system for a data center adopting FAT-tree like network topology. L2 Location Manager is located in a rack and connected to the TOR switches, and Layer 1 (L1) Location Manager is directly connected to the core switches.</p><p>L2 Location Manager is responsible for caching the most recently and frequently used Entity-identity-to-Locationidentifier mapping entries in the rack, and L1 Location Manager stores the Entity-identity-to-Location-identifier mapping entries for all the virtual machines in the cloud data center. The mapping entries in L1 and L2 Location Manager are in the following formats, shown as Table <ref type="table" target="#tab_2">3</ref> and Table <ref type="table" target="#tab_3">4</ref> respectively.</p><p>A surprising phenomenon in Table <ref type="table" target="#tab_2">3</ref> is that the number 10.0.0.1 appears at both the Entity-identity and Locationidentifier columns. This is because Entity-identity and Location-identifier are completely separated namespaces and encapsulated in separated segments of the packet header. Suppose a mobility-oriented cloud data center network contains one million virtual machines, then the total memory needed to store the whole mapping entries on L1 Location Manager is about 8M bytes which is not a huge consumption. A TTL column is added to the entries in L2 Location Manager to indicate the duration of the entry. An entry whose TTL is 0XFFFFH means this entry is a static entry and will always exist on L2 Location Manager until manually removed.</p><p>In mobility-oriented cloud data center network the physical server is connected to the TOR switch through a physical interface, which is configured with an IP address, i.e. Location-identifier. When a virtual machine starts running, the hypervisor should firstly get an Entity-identity from the L1 Location Manager for it and register the Entity-identityto-Location-identifier mapping back into the L1 Location Manager, with the locator being the IP address of the physical interface of the physical server. It means a virtual machine uses the IP address of the physical machine to transmit data. If a virtual machine moves from one physical server to another, its locator is changed, so the hypervisor should update the corresponding entries in the L1 Location Manager with the new Location-identifier. Then the L1 Location Manager notifies this change to all the L2 Location Managers to mark the corresponding mapping entries deprecated or remove them directly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. MIGRATION MANAGEMENT</head><p>Just like handover management for wireless communication network, mobility-oriented cloud data center network also needs migration management to trigger and handle VM migration. Migration management of mobility-oriented cloud data center network consists of two functions, i.e. migration decision and migration execution. The former is to decide when to start a virtual machine migration, and the latter is to execute the actual migration behavior. The latter one is often incorporated in the hypervisor, which it is not the focus of this paper.</p><p>As is known that in wireless communication network, handover is often decided by the signal strength and policies of load balance between adjacent cells and so forth. However, factors are different in mobility-oriented cloud data center network, and the following factors should be considered for deciding a migration schedule.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) DYNAMICALLY EXPANDING RESOURCE REQUIREMENT</head><p>The tenants of the cloud data center may dynamically require more computing resource according to their service expanding. This will cause new allocation of resources and the virtual machine distribution of the tenant in the cloud data center should be optimized to meet specific requirements, e.g. virtual machines of a tenant should be located as close as possible to get high throughput. Then some virtual machines need to be moved to proper places through live migration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) NETWORK STATE CHANGE</head><p>The state of the data center network may change during runtime due to link failures or other reasons, and this may result in a situation that some virtual machines cannot get enough bandwidth they have required. In this situation, these virtual machines need to be moved to proper positions which can meet their network resource requirements. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) ROBUSTNESS CONSIDERATION</head><p>A tenant of cloud data center may require robustness for its services strictly, e.g. it requires the service servers should not be located on a same physical machine. However, several virtual machines of this tenant may be previously allocated on a same physical machine because there was not enough resource on other physical machines. Then if some resources on other physical machines is released, the virtual machines on the same machine should be distributed to different physical machines by live migration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4) NETWORK TRAFFIC OPTIMIZATION</head><p>Network traffic is decided by the traffic from virtual machines, which maybe further decided by the terminal users. If the traffic between some virtual machines change, e.g. grows greatly, then the network may be not able to allocate more bandwidth to these virtual machines from current links. To address this problem, virtual machine migration should be executed to move these virtual machines to proper places with enough bandwidth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5) ENERGY SAVING</head><p>If the number of running virtual machines on a physical machine is very small, these virtual machines be moved to other physical machines through live migration, and this physical machine can be turned off to save energy. This can greatly reduce the operating expense (OPEX) of cloud data center.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CASE STUDY AND PERFORMANCE EVALUATION A. CASE STUDY-VIRTUAL MACHINE MIGRATION ACROSS L3 SUBNETS</head><p>This section illustrates the mobility management in mobilityoriented cloud data center network through a case study, as shown in Figure <ref type="figure" target="#fig_3">4</ref>.</p><p>Suppose VM1 has created a communication session (i.e. upper layer service) with VM2 on Server3. Then VM1 is triggered to migrate from Server1 to Server2 by a scheduler (which is not included in the figure) according to some previously defined policies. The migration behavior is performed by the hypervisors on Server1 and Server2 automatically when the migration instruction is triggered on Server1. The hypervisor on Server1 collects the running mirror of VM1 and encapsulates it into packets to send to Server2. The hypervisor on Server2 receives these packets and restores the running mirror of VM1 on Server2. The cached mapping entries on Server1 should also be sent to Server2, so that the Location-identifier queries can be saved for the migrated virtual machine. Before the restoration on Server2 is finished, VM1 on Server1 is still responsible for running the upper layer service. When the restoration is finished, VM1 on Server2 takes over the job of running the upper layer service, and notifies all its communicating peers (i.e. hypervisor on Server3) of the new Location-identifier based on the cached entries copied from Server1. Then Server3 can use the new Location-identifier to encapsulate packets from VM2 and send them to Server2 correctly. Moreover, the hypervisor on Server2 should send an update message to refresh the corresponding entries in L1 Location Manager. On receiving the message, L1 Location Manager flushes this change to all L2 Location Managers in the cloud data center. Here, the communication is between Server2 and Server3, and the migration completes.</p><p>If Fully Qualified Domain Name (FQDN) is used in the communication, then when a virtual machine moves, the corresponding entries in DNS does not even need to be updated, because it only keeps the mapping of FQDN-to-Entity-identity for the virtual machine, and the Entity-identity of the virtual machine never changes.</p><p>For deployment issue, this scheme can be incrementally deployable for a specific tenant of the cloud data center, while keeping other tenants working in a traditional way. This can be realized in cooperation with the virtual machine management platform, like OpenStack, CloudStack and so on. So it provides a very flexible choice of deployment for future cloud data center.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. PERFORMANCE EVALUATION 1) PACKET ENCAPSULATION OVERHEAD</head><p>For legacy communication scheme, the total encapsulation overhead can be expressed as equation <ref type="bibr" target="#b0">(1)</ref>:</p><formula xml:id="formula_0">O encap_L = L L2 + L IP + L TU L L2 + L IP + L TU + MTU L2 -L IP -L TU = L L2 + L IP + L TU L L2 + MTU L2 (1)</formula><p>Where L L2 is the length of L2 header, L IP is the length of IP header, L TU is the length of TCP or UDP header in legacy packet. And MTU L2 means Max transmission unit (MTU) for L2 network. And the efficiency of data transmission for legacy packet can be expressed as equation ( <ref type="formula" target="#formula_1">2</ref>):</p><formula xml:id="formula_1">E data_L = MTU L2 -L IP -L TU L L2 + L IP + L TU + MTU L2 -L IP -L TU = MTU L2 -L IP -L TU L L2 + MTU L2<label>(2)</label></formula><p>In mobility-oriented cloud data center network, an Entityidentity header is introduced into the packet so the packet header overhead will be enlarged. The packet formats in legacy cloud data center and that in the proposed mobilityoriented cloud data center network are shown as Figure <ref type="figure" target="#fig_4">5</ref>(a) and Figure <ref type="figure" target="#fig_4">5</ref>(b) respectively. For mobility-oriented cloud data center network, the total encapsulation overhead is given by equation <ref type="bibr" target="#b2">(3)</ref>:  =</p><formula xml:id="formula_2">O encap_I = T L2 + T ID + T Locator + T TU T L2 +T ID +T Locator +T TU +MTU L2 -T ID -T Locator -T TU</formula><formula xml:id="formula_3">T L2 + T ID + T Locator + T TU T L2 + MTU L2 (3)</formula><p>Where T L2 is the length of L2 header, T Location-identifier is the length of Location-identifier header, T Entity-identity is the length of Entity-identity header, T TU is the length of TCP or UDP header in mobility-oriented cloud data center.</p><p>And the efficiency of data transmission for legacy packet can be expressed as equation ( <ref type="formula">4</ref>):</p><formula xml:id="formula_4">E encap_I = MTU L2 -T ID -T Locator -T TU T L2 +T ID +T Locator +T TU +MTU L2 -T ID -T Locator -T TU = MTU L2 -T ID -T Locator -T TU T L2 + MTU L2 (4)</formula><p>The data from the user service are packed into the APP Data field of the packet. From equations (1), ( <ref type="formula" target="#formula_1">2</ref>), (3), <ref type="bibr" target="#b3">(4)</ref> we can see that the packet encapsulation overhead and the packet transmission efficiency are both decided by the MTU parameter. As is known that MTU is a variable parameter, and different kinds of networks provide different MTU values, e.g. Ethernet provides 1500 bytes as its MTU.</p><p>The impacts of MTU on the packet encapsulation overhead and the packet transmission efficiency are shown as Figure <ref type="figure" target="#fig_5">6</ref>(a) and Figure <ref type="figure" target="#fig_5">6</ref>(b) respectively, and other parameter values used in the simulation are shown as Table <ref type="table">5</ref>.</p><p>The Figure <ref type="figure" target="#fig_5">6</ref>(a) illustrates that a smaller MTU causes a bigger encapsulation overhead. The packet encapsulation overhead decreases as the MTU value increases. If the MTU value is great enough the packet encapsulation overheads of legacy scheme and Entity-identity/Location-identifier separation scheme are approximately equal. So the MTU value should be set as large as possible (but allowed by the network itself) to reduce packet encapsulation overhead.</p><p>The Figure <ref type="figure" target="#fig_5">6</ref>(b) gives a similar result as Figure <ref type="figure" target="#fig_5">6</ref>(a) but in terms of the data transmission efficiency. Smaller MTU implies lower data transmission efficiency, while big MTU brings higher data transmission efficiency. The data transmission efficiency increases as the MTU increases. So a big MTU should be adopted to promote the data transmission efficiency in both legacy and Entity-identity/Location-identifier separation based communication scheme. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) SIGNALING OVERHEAD FOR MIGRATION</head><p>Performance analysis should consider a total signaling cost introduced by a mobility management scheme. In mobilityoriented cloud data center network, the virtual machine migration behavior is usually executed by the hypervisor kernel, but the migration behavior itself has nothing to do with the mobility management, so the signaling exchange between the source hypervisor and the destination hypervisor during the migration procedure is outside the scope of this paper. This paper is focused on the signaling cost of the virtual machine location management.</p><p>For analysis we use the two-layered cloud data center network architecture in Figure <ref type="figure" target="#fig_0">1</ref> as the example, and suppose each rack consists of a L2 network, and core switches are L3 switches which connect L2 networks. When a virtual machine moves, two possible results may occur, i.e. moving inside of the L2 network and moving outside of the L2 network. If it moves inside of the same L2 network, then the Location Managers do not need to update, and this movement is transparent to its communicating peers. But if it moves outside of the L2 network, then the Location Managers need to update, and all its communicating peers should be notified of this movement.</p><p>The probability of virtual migration is associated with specific virtual machine migration scheme. Thus it is hard to determine an exact migration probability. We assume that every L2 network in the cloud data center except the current one has equal probability to be the destination of a moving virtual machine. Then with P inside , the probability of still staying inside current L2 network, the probability of moving outside of the L2 network to a specific L2 subnet can be expressed as equation ( <ref type="formula" target="#formula_5">5</ref>):</p><formula xml:id="formula_5">ϕ = P outside N -1 = 1 -P inside N -1 (<label>5</label></formula><formula xml:id="formula_6">)</formula><p>Where N is the number of L2 networks in the cloud data center.</p><p>Based on the above assumption, the average signaling cost can be consequently expressed as equation ( <ref type="formula" target="#formula_7">6</ref>). We can see that the signaling cost is decided by the probability of staying inside of the same L2 network or moving out of the L2 network. We introduce C notify ij , C L1update i , C L2update i to represent the signaling cost of notifying a communicating peer j, updating L1 Location Manager, updating L2 Location Manager when a VM migrates to another L2 network j. For the sake of simplicity, we assume that the number of communicating peers M obeys normal distribution whose mean is 100 and variance is 15. Besides, we use the parameter values as shown in Table6.</p><formula xml:id="formula_7">C avg = P inside * C reroute + N -1 i=1   1 -P inside N -1 *   C reroute + C L1_update_i +C L2_update_i + M j=1 C notify_ij    <label>(6)</label></formula><p>Figure <ref type="figure" target="#fig_6">7</ref> illustrates the cumulative distributed function (CDF) of signaling cost. As we can see from Figure <ref type="figure" target="#fig_6">7</ref>, the scheme with higher P inside has lower signaling cost. Generally, the size of L2 network where the virtual machine is currently located determines P inside . However, although the signaling cost can be reduced by increasing the scale of L2 network, it cannot be reduced unlimitedly, because a large L2 network brings complex network management task and many other challenges. A compromised scale of L2 network should be adopted in real cloud data center, to maximize the value for the user and the provider. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>In this paper we concentrate on mobility issues in the cloud data center. To meet various requirements of the Internet services and provide better user experience, virtual machines should be able to migrate from one location to another. This paper focuses on resolving the challenge of IP mobility problem after a virtual machine migration across IP subnets. We propose a mobility-oriented cloud data center network architecture based on design principles of the MDN. By Entity-identity/Location-identifier decoupling, we introduce a Location Manager to map the Entityidentity to the current location of target VM. The mapping table helps to relocate the VM so that cloud data center can provide seamless service. This architecture can address mobility issues when a virtual machine migration among IP subnets.</p><p>We evaluated the performance of the proposed scheme, such as packet encapsulation overhead, packet transmission efficiency and signaling cost. The results show that the proposed scheme could effectively solve the mobility issue of VM migration in cloud data center network. Furthermore, we take a case study to demonstrate the proposed scheme, and which shows our solution is easy to deploy and has good compatibility with current IP networks. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>FIGURE 1 .</head><label>1</label><figDesc>FIGURE 1. Two-layered cloud data center network architecture.</figDesc><graphic coords="3,298.68,402.21,238.00,147.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>FIGURE 2 .</head><label>2</label><figDesc>FIGURE 2. Terminal protocol stack.</figDesc><graphic coords="4,50.68,325.83,211.50,166.44" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIGURE 3 .</head><label>3</label><figDesc>FIGURE 3. Packet encapsulation format along the communication path.</figDesc><graphic coords="4,293.64,64.43,244.61,177.62" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FIGURE 4 .</head><label>4</label><figDesc>FIGURE 4. Virtual machines migration in mobility-oriented cloud data center network.</figDesc><graphic coords="7,47.23,66.06,480.00,291.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>FIGURE 5 .</head><label>5</label><figDesc>FIGURE 5. (a). Packet format in mobility-oriented cloud data center network. (b). Packet format in legacy cloud data center.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIGURE 6 .</head><label>6</label><figDesc>FIGURE 6. (a). The impact of MTU on packet encapsulation overhead. (b). The impact of MTU on packet transmission efficiency.</figDesc><graphic coords="9,37.60,249.77,247.47,188.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>FIGURE 7 .</head><label>7</label><figDesc>FIGURE 7. The CDF of signaling cost of a moving virtual machine.</figDesc><graphic coords="10,45.78,66.06,221.99,177.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>BO HU (S'04-M'07) received the Ph.D. degree in communications and information systems from the Beijing University of Posts and Telecommunications (BUPT), Beijing, China, in 2006. He is currently an Associate Professor with the State Key Laboratory of Networking and Switching Technology, BUPT. His current research interests include future wireless mobile communications, mobile computing, and software defined networks. SHANZHI CHEN (SM'04) received the Ph.D. degree from the Beijing University of Posts and Telecommunications, China, in 1997. He joined the Datang Telecom Technology &amp; Industry Group in 1994, and has served as the CTO since 2008. He was a member of the Steering Expert Group on Information Technology, 863 Program of China, from1999 to 2011. He is currently the Director of State Key Laboratory of Wireless Mobile Communications. He devoted his works to the research and development of TD-LTE-advanced 4G since 2004. His current research interests include network architectures, 5G mobile communications, vehicular communication networks and mobile computing. He is the Board Member of Semiconductor Manufacturing International Corporation. He received the 2001 and 2012 National Awards for Science and Technology Progress, China, the 2015 National Award for Technological Invention, China, and the 2014 Distinguished Young Scholar Award of the National Natural Science Foundation, China. JIANYE CHEN received the B.E. degree from the Beijing University of Posts and Telecommunications, China, in 2015, where he is currently pursuing the master's degree with the State Key Laboratory of Networking and Switching Technology. His current research interests include mobile cloud computing and mobile Internet. ZHANGFENG HU received the Ph.D. degree from the Beijing University of Posts and Telecommunications, China, in 2014. His current research interests include mobile cloud computing and data center networks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE 1 .</head><label>1</label><figDesc>Format of cache entries on physical server.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE 2 .</head><label>2</label><figDesc>Comparisons of wireless communication network andMobility-oriented Cloud Data Center Network.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE 3 .</head><label>3</label><figDesc>Mapping entries in Layer 1 Location Manager.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE 4 .</head><label>4</label><figDesc>Mapping entries in Layer 2 Location Manager.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE</head><label></label><figDesc>The parameters and their values used in the simulation of encapsulation overhead.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE 6 .</head><label>6</label><figDesc>The parameters used in the simulation of signaling cost.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>2169-3536 2016 IEEE. Translations and content mining are permitted for academic research only.Personal use is also permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>VOLUME 4, 2016   </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8334" xml:id="foot_2"><p>  VOLUME 4, 2016   </p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the National Natural Science Foundation of China for Distinguished Young Scholar under Grant 61425012, in part by the National Science and Technology Major Projects for the New Generation of Broadband Wireless Communication Network under Grant 2016ZX03001017, and in part by the National High-Technology Program (863) of China under Grant 2014AA01A701 and Grant 2015AA01A705.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Mobility-driven networks (MDN): From evolution to visions of mobility management</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="66" to="73" />
			<date type="published" when="2014-08">Jul./Aug. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A survey on virtual machine migration and server consolidation frameworks for cloud data centers</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Ahmad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gania</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H A</forename><surname>Hamid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shiraz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Yousafzai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Netw. Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="11" to="25" />
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Seamless live migration of virtual machines over the MAN/WAN</title>
		<author>
			<persName><forename type="first">F</forename><surname>Travostino</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generat. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="901" to="907" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">CloudNet: Dynamic pooling of cloud resources by live WAN migration of virtual machines</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1568" to="1583" />
			<date type="published" when="2015-10">Oct. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A survey of migration mechanisms of virtual machines</title>
		<author>
			<persName><forename type="first">V</forename><surname>Medina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>García</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">30</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Performance metrics of virtual machine live migration</title>
		<author>
			<persName><forename type="first">M</forename><surname>Galloway</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Loewen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vrbsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE 8th Int. Conf. Cloud Comput</title>
		<meeting>IEEE 8th Int. Conf. Cloud Comput<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="637" to="644" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fast transparent migration for virtual machines</title>
		<author>
			<persName><forename type="first">M</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hutchins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. USENIX Annu. Tech. Conf</title>
		<meeting>USENIX Annu. Tech. Conf<address><addrLine>Anaheim, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="391" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Elastic virtual machine placement in cloud computing network environments</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kavvadia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sagiadinos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Oikonomou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tsioutsiouliklis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ïssa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">93</biblScope>
			<biblScope unit="page" from="435" to="447" />
			<date type="published" when="2015-12">Dec. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Network-aware virtual machine placement in cloud data centers with multiple traffic-intensive components</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Ilkhechi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Korpeoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ö</forename><surname>Ulusoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">91</biblScope>
			<biblScope unit="page" from="508" to="527" />
			<date type="published" when="2015-11">Nov. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A multi objective virtual machine placement method for reduce operational costs in cloud computing by genetic</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sookhtsaraei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Madani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kavian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Comput. Netw. Commun. Secur</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An identifier-based approach to Internet mobility: A survey</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Vasilakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="72" to="79" />
			<date type="published" when="2016-02">Jan./Feb. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Reconsidering architecture for future ubiquitous Internet</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Netw</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1319" to="1326" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Black-box and gray-box strategies for virtual machine migration</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Venkataramani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yousif</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 4th USENIX Conf. Netw. Syst. Design Implement</title>
		<meeting>4th USENIX Conf. Netw. Syst. Design Implement</meeting>
		<imprint>
			<publisher>USENIX Assoc</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page">17</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A revised mapping system design for host identity procotol</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Netw. Comput. Inf. Secur. (NCIS)</title>
		<meeting>Int. Conf. Netw. Comput. Inf. Secur. (NCIS)<address><addrLine>Guilin, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="436" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A generic and scalable mapping system for ID/locator separation based future Internet architectures</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Autom</title>
		<meeting>Int. Conf. Autom<address><addrLine>Xiamen, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="73" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">OpenFlow and Xen-based virtual network migration,&apos;&apos; in Communications Wireless in Developing Countries and Networks of the Future</title>
		<author>
			<persName><forename type="first">P</forename><surname>Pisa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="170" to="181" />
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A solution for IP mobility support in software defined networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 23rd Int. Conf. Comput. Commun. Netw. (ICCCN)</title>
		<meeting>23rd Int. Conf. Comput. Commun. Netw. (ICCCN)<address><addrLine>Shanghai, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">VM migration across subnets in future internet architecture-XIA</title>
		<author>
			<persName><forename type="first">H</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Tongxin Xuebao/J. Commun</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="107" to="116" />
			<date type="published" when="2016-03-01">Mar. 1, 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Dynamic resource allocation using virtual machines for cloud computing environment</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1107" to="1117" />
			<date type="published" when="2013-06">Jun. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Towards a next generation data center architecture: Scalability and commoditization,&apos;</title>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lahiri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sengupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">&apos; in Proc. ACM Workshop Program Routers Extensible Serv. Tomorrow</title>
		<imprint>
			<biblScope unit="page" from="57" to="62" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A scalable, commodity data center network architecture</title>
		<author>
			<persName><forename type="first">M</forename><surname>Al-Fares</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Loukissas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="63" to="74" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">PortLand: A scalable fault-tolerant layer 2 data center network fabric</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Niranjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="39" to="50" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Managing overloaded hosts for dynamic consolidation of virtual machines in cloud data centers under quality of service constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Beloglazov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1366" to="1379" />
			<date type="published" when="2013-07">Jul. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">VMPlanner: Optimizing virtual machine placement and traffic flow routing to reduce network power costs in cloud data centers</title>
		<author>
			<persName><forename type="first">W</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chiaraviglio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Xiong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="179" to="196" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">High performance virtual machine migration with RDMA over modern interconnects</title>
		<author>
			<persName><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">K</forename><surname>Panda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Cluster Comput</title>
		<meeting>IEEE Int. Conf. Cluster Comput<address><addrLine>Austin, TX, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-09">Sep. 2007</date>
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">&apos;VL2: A scalable and flexible data center network</title>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="51" to="62" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">BCube: A high performance, server-centric network architecture for modular data centers</title>
		<author>
			<persName><forename type="first">C</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="63" to="74" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
