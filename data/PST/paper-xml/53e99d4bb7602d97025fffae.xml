<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mona: Secure Multi-Owner Data Sharing for Dynamic Groups in the Cloud</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Xuefeng</forename><surname>Liu</surname></persName>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Yuqing</forename><surname>Zhang</surname></persName>
							<email>zhangyq@gucas.ac.cn</email>
						</author>
						<author>
							<persName><forename type="first">Boyang</forename><surname>Wang</surname></persName>
							<email>bywang@mail.xidian.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Jingbo</forename><surname>Yan</surname></persName>
						</author>
						<author>
							<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Misic</surname></persName>
						</author>
						<author>
							<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
						</author>
						<author>
							<persName><forename type="first">D</forename><surname>Milojicic</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Y</forename><surname>Cui</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">National Key Laboratory of Integrated Services Networks</orgName>
								<orgName type="institution">Xidian University</orgName>
								<address>
									<addrLine>No. 2, Taibai Road, Shaanxi province</addrLine>
									<postCode>710071</postCode>
									<settlement>Xı ´an city</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">National Computer Network Intrusion Protection Center</orgName>
								<orgName type="institution">Graduate University of Chinese Academy of Sciences</orgName>
								<address>
									<addrLine>No. 19, Yuquan Road</addrLine>
									<postCode>100049</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mona: Secure Multi-Owner Data Sharing for Dynamic Groups in the Cloud</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">7DCE3F21AEC5F4171811998136DB4220</idno>
					<idno type="DOI">10.1109/TPDS.2012.331</idno>
					<note type="submission">received 29 Feb. 2012; revised 1 Oct. 2012; accepted 22 Nov. 2012; published online 4 Dec. 2012.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Cloud computing</term>
					<term>data sharing</term>
					<term>privacy-preserving</term>
					<term>access control</term>
					<term>dynamic groups</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>With the character of low maintenance, cloud computing provides an economical and efficient solution for sharing group resource among cloud users. Unfortunately, sharing data in a multi-owner manner while preserving data and identity privacy from an untrusted cloud is still a challenging issue, due to the frequent change of the membership. In this paper, we propose a secure multiowner data sharing scheme, named Mona, for dynamic groups in the cloud. By leveraging group signature and dynamic broadcast encryption techniques, any cloud user can anonymously share data with others. Meanwhile, the storage overhead and encryption computation cost of our scheme are independent with the number of revoked users. In addition, we analyze the security of our scheme with rigorous proofs, and demonstrate the efficiency of our scheme in experiments.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>C LOUD computing is recognized as an alternative to traditional information technology <ref type="bibr" target="#b0">[1]</ref> due to its intrinsic resource-sharing and low-maintenance characteristics. In cloud computing, the cloud service providers (CSPs), such as Amazon, are able to deliver various services to cloud users with the help of powerful datacenters. By migrating the local data management systems into cloud servers, users can enjoy high-quality services and save significant investments on their local infrastructures.</p><p>One of the most fundamental services offered by cloud providers is data storage. Let us consider a practical data application. A company allows its staffs in the same group or department to store and share files in the cloud. By utilizing the cloud, the staffs can be completely released from the troublesome local data storage and maintenance. However, it also poses a significant risk to the confidentiality of those stored files. Specifically, the cloud servers managed by cloud providers are not fully trusted by users while the data files stored in the cloud may be sensitive and confidential, such as business plans. To preserve data privacy, a basic solution is to encrypt data files, and then upload the encrypted data into the cloud <ref type="bibr" target="#b1">[2]</ref>. Unfortunately, designing an efficient and secure data sharing scheme for groups in the cloud is not an easy task due to the following challenging issues.</p><p>First, identity privacy is one of the most significant obstacles for the wide deployment of cloud computing. Without the guarantee of identity privacy, users may be unwilling to join in cloud computing systems because their real identities could be easily disclosed to cloud providers and attackers. On the other hand, unconditional identity privacy may incur the abuse of privacy. For example, a misbehaved staff can deceive others in the company by sharing false files without being traceable. Therefore, traceability, which enables the group manager (e.g., a company manager) to reveal the real identity of a user, is also highly desirable.</p><p>Second, it is highly recommended that any member in a group should be able to fully enjoy the data storing and sharing services provided by the cloud, which is defined as the multiple-owner manner. Compared with the single-owner manner <ref type="bibr" target="#b2">[3]</ref>, where only the group manager can store and modify data in the cloud, the multiple-owner manner is more flexible in practical applications. More concretely, each user in the group is able to not only read data, but also modify his/ her part of data in the entire data file shared by the company.</p><p>Last but not least, groups are normally dynamic in practice, e.g., new staff participation and current employee revocation in a company. The changes of membership make secure data sharing extremely difficult. On one hand, the anonymous system challenges new granted users to learn the content of data files stored before their participation, because it is impossible for new granted users to contact with anonymous data owners, and obtain the corresponding decryption keys. On the other hand, an efficient membership revocation mechanism without updating the secret keys of the remaining users is also desired to minimize the complexity of key management.</p><p>Several security schemes for data sharing on untrusted servers have been proposed <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>. In these approaches, data owners store the encrypted data files in untrusted storage and distribute the corresponding decryption keys only to authorized users. Thus, unauthorized users as well as storage servers cannot learn the content of the data files because they have no knowledge of the decryption keys.</p><p>However, the complexities of user participation and revocation in these schemes are linearly increasing with the number of data owners and the number of revoked users, respectively. By setting a group with a single attribute, Lu et al. <ref type="bibr" target="#b6">[7]</ref> proposed a secure provenance scheme based on the ciphertext-policy attribute-based encryption technique <ref type="bibr" target="#b7">[8]</ref>, which allows any member in a group to share data with others. However, the issue of user revocation is not addressed in their scheme. Yu et al. <ref type="bibr" target="#b2">[3]</ref> presented a scalable and fine-grained data access control scheme in cloud computing based on the key policy attribute-based encryption (KP-ABE) technique <ref type="bibr" target="#b8">[9]</ref>. Unfortunately, the singleowner manner hinders the adoption of their scheme into the case, where any user is granted to store and share data.</p><p>Our contributions. To solve the challenges presented above, we propose Mona, a secure multi-owner data sharing scheme for dynamic groups in the cloud. The main contributions of this paper include:</p><p>1. We propose a secure multi-owner data sharing scheme. It implies that any user in the group can securely share data with others by the untrusted cloud. 2. Our proposed scheme is able to support dynamic groups efficiently. Specifically, new granted users can directly decrypt data files uploaded before their participation without contacting with data owners. User revocation can be easily achieved through a novel revocation list without updating the secret keys of the remaining users. The size and computation overhead of encryption are constant and independent with the number of revoked users. 3. We provide secure and privacy-preserving access control to users, which guarantees any member in a group to anonymously utilize the cloud resource. Moreover, the real identities of data owners can be revealed by the group manager when disputes occur. 4. We provide rigorous security analysis, and perform extensive simulations to demonstrate the efficiency of our scheme in terms of storage and computation overhead. The remainder of this paper is organized as follows: Section 2 overviews the related work. In Section 3, some preliminaries and cryptographic primitives are reviewed. In Section 4, we describe the system model and our design goals. In Section 5, the proposed scheme is presented in detail, followed by the security analysis and the performance analysis in Sections 6 and 7. Finally, we conclude the paper in Section 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>In <ref type="bibr" target="#b3">[4]</ref>, Kallahalla et al. proposed a cryptographic storage system that enables secure file sharing on untrusted servers, named Plutus. By dividing files into filegroups and encrypting each filegroup with a unique file-block key, the data owner can share the filegroups with others through delivering the corresponding lockbox key, where the lockbox key is used to encrypt the file-block keys. However, it brings about a heavy key distribution overhead for large-scale file sharing. Additionally, the file-block key needs to be updated and distributed again for a user revocation.</p><p>In <ref type="bibr" target="#b4">[5]</ref>, files stored on the untrusted server include two parts: file metadata and file data. The file metadata implies the access control information including a series of encrypted key blocks, each of which is encrypted under the public key of authorized users. Thus, the size of the file metadata is proportional to the number of authorized users. The user revocation in the scheme is an intractable issue especially for large-scale sharing, since the file metadata needs to be updated. In their extension version, the NNL construction <ref type="bibr" target="#b9">[10]</ref> is used for efficient key revocation. However, when a new user joins the group, the private key of each user in an NNL system needs to be recomputed, which may limit the application for dynamic groups. Another concern is that the computation overhead of encryption linearly increases with the sharing scale.</p><p>Ateniese et al. <ref type="bibr" target="#b5">[6]</ref> leveraged proxy reencryptions to secure distributed storage. Specifically, the data owner encrypts blocks of content with unique and symmetric content keys, which are further encrypted under a master public key. For access control, the server uses proxy cryptography to directly reencrypt the appropriate content key(s) from the master public key to a granted user's public key. Unfortunately, a collusion attack between the untrusted server and any revoked malicious user can be launched, which enables them to learn the decryption keys of all the encrypted blocks.</p><p>In <ref type="bibr" target="#b2">[3]</ref>, Yu et al. presented a scalable and fine-grained data access control scheme in cloud computing based on the KP-ABE technique. The data owner uses a random key to encrypt a file, where the random key is further encrypted with a set of attributes using KP-ABE. Then, the group manager assigns an access structure and the corresponding secret key to authorized users, such that a user can only decrypt a ciphertext if and only if the data file attributes satisfy the access structure. To achieve user revocation, the manager delegates tasks of data file reencryption and user secret key update to cloud servers. However, the singleowner manner may hinder the implementation of applications with the scenario, where any member in a group should be allowed to store and share data files with others.</p><p>Lu et al. <ref type="bibr" target="#b6">[7]</ref> proposed a secure provenance scheme, which is built upon group signatures and ciphertext-policy attribute-based encryption techniques. Particularly, the system in their scheme is set with a single attribute. Each user obtains two keys after the registration: a group signature key and an attribute key. Thus, any user is able to encrypt a data file using attribute-based encryption and others in the group can decrypt the encrypted data using their attribute keys. Meanwhile, the user signs encrypted data with her group signature key for privacy preserving and traceability. However, user revocation is not supported in their scheme.</p><p>From the above analysis, we can observe that how to securely share data files in a multiple-owner manner for dynamic groups while preserving identity privacy from an untrusted cloud remains to be a challenging issue. In this paper, we propose a novel Mona protocol for secure data sharing in cloud computing. Compared with the existing works, Mona offers unique features as follows:</p><p>1. Any user in the group can store and share data files with others by the cloud.</p><p>2. The encryption complexity and size of ciphertexts are independent with the number of revoked users in the system. 3. User revocation can be achieved without updating the private keys of the remaining users. 4. A new user can directly decrypt the files stored in the cloud before his participation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PRELIMINARIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Bilinear Maps</head><p>Let G 1 and G 2 be an additive cyclic group and a multiplicative cyclic group of the same prime order q, respectively <ref type="bibr" target="#b10">[11]</ref>. Let e : G 1 Â G 1 ! G 2 denote a bilinear map constructed with the following properties:</p><p>1. Bilinear: For all a; b 2 Z Ã q and P ; Q 2 G 1 , eðaP ; bQÞ ¼ eðP ; QÞ ab . 2. Nondegenerate: There exists a point P such that eðP ; P Þ 6 ¼ 1. 3. Computable: There is an efficient algorithm to compute eðP ; QÞ for any P ; Q 2 G 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Complexity Assumptions</head><p>Definition 1 (q-strong Diffie-Hellman (q-SDH) Assumption <ref type="bibr" target="#b11">[12]</ref>). Given ðP 1 ; P 2 ; P 2 ; 2 P 2 ; . . . ; q P 2 Þ, it is infeasible to compute 1 þx P 1 , where x 2 Z Ã q . Definition 2 (Decision linear (DL) Assumption <ref type="bibr" target="#b11">[12]</ref>). Given P 1 ; P 2 ; P 3 ; aP 1 ; bP 2 ; cP 3 , it is infeasible to decide whether a þ b ¼ c mod q.</p><p>Definition 3 (Weak Bilinear Diffie-Hellman Exponent (WBDHE) Assumption <ref type="bibr" target="#b12">[13]</ref>). For unknown a 2 Z Ã q , given Y ; aY ; a 2 Y ; ::; a l Y ; P 2 G 1 , it is infeasible to compute eðY ; PÞ 1 a .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4 ((t,n)-general Diffie-Hellman Exponent</head><p>(GDHE) Assumption <ref type="bibr" target="#b13">[14]</ref>). Let fðXÞ</p><formula xml:id="formula_0">¼ Å r i¼1 ðX þ x i Þ and gðXÞ ¼ Å nÀr i¼1 ðX þ x 0 i</formula><p>Þ be the two random univariate polynomials. For unknown k; 2 Z Ã q , given G 0 ; G 0 ; :::; tÀ1 G 0 ; fðÞG 0 ; P 0 ; :::; tÀ1 P 0 ; kgðÞH 0 2 G 1 and</p><formula xml:id="formula_1">eðG 0 ; H 0 Þ f 2 ðÞgðÞ 2 G 2 ; it is infeasible to compute eðG 0 ; H 0 Þ kfðÞgðÞ 2 G 2 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Group Signature</head><p>The concept of group signatures was first introduced in <ref type="bibr" target="#b14">[15]</ref> by Chaum and van Heyst. In general, a group signature scheme allows any member of the group to sign messages while keeping the identity secret from verifiers. Besides, the designated group manager can reveal the identity of the signature's originator when a dispute occurs, which is denoted as traceability. In this paper, a variant of the short group signature scheme <ref type="bibr" target="#b11">[12]</ref> will be used to achieve anonymous access control, as it supports efficient membership revocation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Dynamic Broadcast Encryption</head><p>Broadcast encryption <ref type="bibr" target="#b15">[16]</ref> enables a broadcaster to transmit encrypted data to a set of users so that only a privileged subset of users can decrypt the data. Besides the above characteristics, dynamic broadcast encryption also allows the group manager to dynamically include new members while preserving previously computed information, i.e., user decryption keys need not be recomputed, the morphology and size of ciphertexts are unchanged and the group encryption key requires no modification. The first formal definition and construction of dynamic broadcast encryption are introduced based on the bilinear pairing technique in <ref type="bibr" target="#b13">[14]</ref>, which will be used as the basis for file sharing in dynamic groups.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SYSTEM MODEL AND DESIGN GOALS 4.1 System Model</head><p>We consider a cloud computing architecture by combining with an example that a company uses a cloud to enable its staffs in the same group or department to share files.</p><p>The system model consists of three different entities: the cloud, a group manager (i.e., the company manager), and a large number of group members (i.e., the staffs) as illustrated in Fig. <ref type="figure" target="#fig_0">1</ref>.</p><p>Cloud is operated by CSPs and provides priced abundant storage services. However, the cloud is not fully trusted by users since the CSPs are very likely to be outside of the cloud users' trusted domain. Similar to <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b6">[7]</ref>, we assume that the cloud server is honest but curious. That is, the cloud server will not maliciously delete or modify user data due to the protection of data auditing schemes <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b17">[18]</ref>, but will try to learn the content of the stored data and the identities of cloud users.</p><p>Group manager takes charge of system parameters generation, user registration, user revocation, and revealing the real identity of a dispute data owner. In the given example, the group manager is acted by the administrator of the company. Therefore, we assume that the group manager is fully trusted by the other parties.</p><p>Group members are a set of registered users that will store their private data into the cloud server and share them with others in the group. In our example, the staffs play the role of group members. Note that, the group membership is dynamically changed, due to the staff resignation and new employee participation in the company.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Design Goals</head><p>In this section, we describe the main design goals of the proposed scheme including access control, data confidentiality, anonymity and traceability, and efficiency as follows:</p><p>Access control: The requirement of access control is twofold. First, group members are able to use the cloud resource for data operations. Second, unauthorized users cannot access the cloud resource at any time, and revoked users will be incapable of using the cloud again once they are revoked.</p><p>Data confidentiality: Data confidentiality requires that unauthorized users including the cloud are incapable of learning the content of the stored data. An important and challenging issue for data confidentiality is to maintain its availability for dynamic groups. Specifically, new users should decrypt the data stored in the cloud before their participation, and revoked users are unable to decrypt the data moved into the cloud after the revocation.</p><p>Anonymity and traceability: Anonymity guarantees that group members can access the cloud without revealing the real identity. Although anonymity represents an effective protection for user identity, it also poses a potential inside attack risk to the system. For example, an inside attacker may store and share a mendacious information to derive substantial benefit. Thus, to tackle the inside attack, the group manager should have the ability to reveal the real identities of data owners.</p><p>Efficiency: The efficiency is defined as follows: Any group member can store and share data files with others in the group by the cloud . User revocation can be achieved without involving the remaining users. That is, the remaining users do not need to update their private keys or reencryption operations. New granted users can learn all the content data files stored before his participation without contacting with the data owner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE PROPOSED SCHEME: MONA 5.1 Overview</head><p>To achieve secure data sharing for dynamic groups in the cloud, we expect to combine the group signature and dynamic broadcast encryption techniques. Specially, the group signature scheme enables users to anonymously use the cloud resources, and the dynamic broadcast encryption technique allows data owners to securely share their data files with others including new joining users.</p><p>Unfortunately, each user has to compute revocation parameters to protect the confidentiality from the revoked users in the dynamic broadcast encryption scheme, which results in that both the computation overhead of the encryption and the size of the ciphertext increase with the number of revoked users. Thus, the heavy overhead and large ciphertext size may hinder the adoption of the broadcast encryption scheme to capacity-limited users.</p><p>To tackle this challenging issue, we let the group manager compute the revocation parameters and make the result public available by migrating them into the cloud. Such a design can significantly reduce the computation overhead of users to encrypt files and the ciphertext size. Specially, the computation overhead of users for encryption operations and the ciphertext size are constant and independent of the revocation users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Scheme Description</head><p>This section describes the details of Mona including system initialization, user registration, user revocation, file generation, file deletion, file access and traceability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">System Initialization</head><p>The group manager takes charge of system initialization as follows:</p><p>. Generating a bilinear map group system S ¼ ðq; G 1 ; G 2 ; eðÁ; ÁÞÞ.</p><p>. Selecting two random elements H; H 0 2 G 1 along with two random numbers 1 ; 2 2 Z Ã q , and computing</p><formula xml:id="formula_2">U ¼ À1 1 H and V ¼ À1 2 H 2 G 1 such that 1 Á U ¼ 2 Á V ¼ H. In addition, the group manager computes H 1 ¼ 1 H 0 and H 2 ¼ 2 H 0 2 G 1 .</formula><p>. Randomly choosing two elements P ; G 2 G 1 and a number 2 Z Ã q , and computing W ¼ Á P , Y ¼ Á G and Z ¼ eðG; P Þ, respectively. . Publishing the system parameters including ðS; P ; H; H 0 ; H 1 ; H 2 ; U; V ; W; Y ; Z; f; f 1 ; EncðÞÞ, where f is a one-way hash function: f0; 1g Ã ! Z Ã q ; f 1 is hash function: f0; 1g Ã ! G 1 ; and Enc k ðÞ is a secure symmetric encryption algorithm with secret key k. In the end, the parameter ð; 1 ; 2 ; GÞ will be kept secret as the master key of the group manager.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">User Registration</head><p>For the registration of user i with identity ID i , the group manager randomly selects a number x i 2 Z Ã q and computes A i ; B i as the following equation:</p><formula xml:id="formula_3">A i ¼ 1 þ x i Á P 2 G 1 B i ¼ x i þ x i Á G 2 G 1 : 8 &gt; &lt; &gt; :<label>ð1Þ</label></formula><p>Then, the group manager adds ðA i ; x i ; ID i Þ into the group user list, which will be used in the traceability phase. After the registration, user i obtains a private key ðx i ; A i ; B i Þ, which will be used for group signature generation and file decryption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">User Revocation</head><p>User revocation is performed by the group manager via a public available revocation list ðRLÞ, based on which group members can encrypt their data files and ensure the confidentiality against the revoked users. As illustrated in Table <ref type="table">1</ref>, the revocation list is characterized by a series of time stamps (t 1 &lt; t 2 &lt;; :::; t r ). Let ID group denote the group identity. The tuple ðA i ; x i ; t i Þ represents that user i with the partial private key (A i ; x i ) is revoked at time t i . P 1 ; P 2 ; :::; P r and Z r are calculated by the group manager with the private secret as follows:</p><formula xml:id="formula_4">P 1 ¼ 1 þ x 1 Á P 2 G 1 P 2 ¼ 1 ð þ x 1 Þð þ x 2 Þ Á P 2 G 1 ÁÁ P r ¼ 1 ð þ x 1 Þð þ x 2 Þ Á Á Á ð þ x r Þ Á P 2 G 1 Z r ¼ Z 1 ð þ x 1 Þð þ x 2 Þ Á Á Á ð þ x r Þ 2 G 2 : 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; :<label>ð2Þ</label></formula><p>Motivated by the verifiable reply mechanism in <ref type="bibr" target="#b18">[19]</ref>, to guarantee that users obtain the latest version of the revocation list, we let the group manger update the revocation list each day even no user has being revoked in the day. In other words, the others can verify the freshness of the revocation list from the contained current date t RL . In addition, the revocation list is bounded by a signature sigðRLÞ to declare its validity. The signature is generated by the group manager with the BLS signature algorithm <ref type="bibr" target="#b19">[20]</ref>, i.e., sigðRLÞ ¼ f 1 ðRLÞ. Finally, the group manager migrates the revocation list into the cloud for public usage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4">File Generation</head><p>To store and share a data file in the cloud, a group member performs the following operations:</p><p>1. Getting the revocation list from the cloud. In this step, the member sends the group identity ID group as a request to the cloud. Then, the cloud responds the revocation list RL to the member. 2. Verifying the validity of the received revocation list.</p><p>First, checking whether the marked date is fresh. Second, verifying the contained signature sig ð RLÞ by the equation eðW; f 1 ðRLÞÞ ¼ eðP ; sigðRLÞÞ. If the revocation list is invalid, the data owner stops this scheme. 3. Encrypting the data file M. This encryption process can be divided into two cases according to the revocation list.</p><p>a. Case 1. There is no revoked user in the revocation list:</p><p>i. Selecting a unique data file identity ID data ;</p><p>ii. Choosing a random number k 2 Z Ã q ; iii. Computing the parameters C 1 ; C 2 ; K; C as the following equation:</p><formula xml:id="formula_5">C 1 ¼ k Á Y 2 G 1 C 2 ¼ k Á P 2 G 1 K ¼ Z k 2 G 2 C ¼ Enc K ðMÞ: 8 &gt; &gt; &lt; &gt; &gt; :<label>ð3Þ</label></formula><p>b. Case 2. There are r revoked users in the revocation list.</p><p>i. Selecting a unique data file identity ID data ;</p><p>ii. Choosing a random number k 2 Z Ã q ; iii. Computing the parameters C 1 ; C 2 ; K; C as the following equation:</p><formula xml:id="formula_6">C 1 ¼ k Á Y 2 G 1 C 2 ¼ k Á P r 2 G 1 K ¼ Z k r 2 G 2 C ¼ Enc K ðMÞ: 8 &gt; &gt; &lt; &gt; &gt; :<label>ð4Þ</label></formula><p>In (4), Z r and P r are directly obtained from the revocation list. 4. Selecting a random number and computing fðÞ.</p><p>The hash value will be used for data file deletion operation. In addition, the data owner adds ðID data ; Þ into his local storage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Constructing the uploaded data file as shown in</head><p>Table <ref type="table">2</ref>, where t data denotes the current time on the member, and is a group signature on ðID data ; C 1 ; C 2 ; C; fðÞ; t data Þ computed by the data owner through Algorithm 1 with the private key ðA; xÞ. 6. Uploading the data shown in Table <ref type="table">2</ref> into the cloud server and adding the ID data into the local shared data list maintained by the manager. On receiving the data, the cloud first invokes Algorithm 2 to check its validity. If the algorithm returns true, the group signature is valid; otherwise, the cloud abandons the data. In addition, if several users have been revoked by the group manager, the cloud also performs revocation verification by using Algorithm 3. Finally, the data file will be stored in the cloud after successful group signature and revocation verifications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.5">File Deletion</head><p>File stored in the cloud can be deleted by either the group manager or the data owner (i.e., the member who uploaded the file into the server). To delete a file ID data , the group manager computes a signature f 1 ðID data Þ and sends the signature along with ID data to the cloud. The cloud will delete the file if the equation eðf 1 ðID data Þ; P Þ ¼ eðW ; f 1 ðID data ÞÞ holds.</p><p>Algorithm <ref type="bibr" target="#b0">(1)</ref>. Signature Generation Input: Private key ðA; xÞ, system parameter ðP ; U; V ; H; W Þ and data M. Output: Generate a valid group signature on M. begin Select random numbers ; ; r ; r ; r x ; r 1 ; r 2 2 Z Ã q Set 1 ¼ x and 2 ¼ x Computes the following values </p><formula xml:id="formula_7">T 1 ¼ Á U T 2 ¼ Á V T 3 ¼ A i þ ð þ Þ Á H R 1 ¼ r Á U R 2 ¼ r Á V R 3 ¼ eðT 3 ; P Þ rx eðH; W Þ ÀrÀr eðH; P Þ Àr 1 Àr 2 R 4 ¼ r x Á T 1 À r 1 Á U R 5 ¼ r x Á T 2 À r 2 Á V 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; : . Set c ¼ fðM; T 1 ; T 2 ; T 3 ; R 1 ; R 2 ; R 3 ; R 4 ; R 5 Þ Construct the following numbers s ¼ r þ c s ¼ r þ c s x ¼ r x þ cx s 1 ¼ r 1 þ c 1 s 2 ¼ r 2 þ c 2 8 &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; : . Return ¼</formula><formula xml:id="formula_8">¼ s Á U À c Á T 1 R2 ¼ s Á V À c Á T 2 R3 ¼ ð eðT 3 ; WÞ eðP ; P Þ Þ c eðT 3 ; P Þ sx eðH; W Þ ÀsÀs eðH; P Þ Às 1 Às 2 R4 ¼ s x Á T 1 À s 1 Á U R5 ¼ s x Á T 2 À s 2 Á V 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; :</formula><p>. </p><formula xml:id="formula_9">if c ¼ fðM; T 1 ; T 2 ; T 3 ; f R 1 ; f R 2 ; f R 3 ; f R 4 ; f R 5 Þ</formula><formula xml:id="formula_10">; H 2 Þ for i ¼ 1 to n if eðT 3 À A i ; H 0 Þ ¼ temp Return Valid end if end for Return Invalid end</formula><p>In addition, Mona also allows data owners to delete their files stored in the cloud. Specially, the data owner does the following actions:</p><p>. Obtaining the tuple ðID data ; Þ from his local storage. . Invoking Algorithm 1 to compute a group signature on ðID data ; Þ. . Sending ðID data ; Þ and the signature as a deletion request to the cloud. Upon receiving the deletion request, the cloud calls Algorithms 2 and 3 to verify the group signature. After a successful group signature verification, the cloud will delete the data file if fðÞ equals to the hash value contained in the file.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.6">File Access</head><p>To learn the content of a shared file, a member does the following actions:</p><p>1. Getting the data file and the revocation list from the cloud server. In this operation, the user first adopts its private key ðA; xÞ to compute a signature u on the message ðID group ; ID data ; tÞ by using Algorithm 1, where t denote the current time, and the ID data can be obtained from the local shared file list maintained by the manager. Then, the user sends a data request containing ðID group ; ID data ; t; u Þ to the cloud server. Upon receiving the request, the cloud server employs Algorithm 2 to check the validity of the signature and performs a revocation verification with Algorithm 3 if necessary according to the revocation list. After a successful verification, the cloud server responds the corresponding data file and the revocation list to the user. 2. Checking the validity of the revocation list. This operation is similar to the step 2 of file generation phase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Verifying the validity of the file and decrypting it.</head><p>The format of the downloaded file coincides with that given in Table <ref type="table">2</ref>. This operation can be divided into three cases according to the time stamp t data and the revocation list. Suppose that there are r revoked users in the revocation list.</p><p>a. Case 1 ðt data &lt; t 1 Þ. This case indicates that there is no revoked user before the data file is uploaded i. Invoking Algorithm 2 to check the group signature . If the algorithm returns false, the user stops this protocol. ii. Using his partial private key ðA; BÞ to compute K ¼ eðC 1 ; AÞeðC 2 ; BÞ. iii. Decrypting the ciphertext C with the computed key K. Correctness:</p><formula xml:id="formula_11">K ¼ eðC 1 ; AÞeðC 2 ; BÞ ¼ e k Á Y ; 1 þ x Á P e k Á P ; x þ x Á G ¼ eðG; P Þ k þx eðP ; GÞ kx þx ¼ Z k ¼ K: b. Case 2 ðt i &lt; t data &lt; t iþ1 Þ.</formula><p>This case indicates that i revoked users have been revoked before the data file is uploaded i. Verifying the group signature by using Algorithm 2. ii. Inputting A 1 ; A 2 ; :::A i to call Algorithm 3. If the algorithm returns invalid, the user terminates this operation. iii. Computing the value</p><formula xml:id="formula_12">A i;r ¼ 1 ð þ xÞ Q i ¼1 ð þ x Þ</formula><p>P by using Algorithm 4 with the input ðA; xÞ; ðP 1 ; x 1 Þ; :::; ðP i ; x i Þ. The correctness of A i;r is due to the following relation:</p><formula xml:id="formula_13">1 x À x i P i À 1 ð þ xÞ Q iÀ1 ¼1 ð þ x Þ P ! ¼ 1 x À x i ð þ xÞ À ð þ x i Þ ð þ xÞð þ x i Þð Q iÀ1 ¼1 ð þ x ÞÞ ! P ¼ 1 ð þ xÞ Q i ¼1 ð þ x Þ P :</formula><p>iv. Calculating the decryption key K ¼ eðC 1 ; A i;r ÞeðC 2 ; BÞ. v. Decrypt the ciphertext C with the key K.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Correctness eðC</head><formula xml:id="formula_14">1 ; A i;r ÞeðC 2 ; BÞ ¼ e kY ; 1 ð þ xÞ Q i ¼1 ð þ x Þ P ! e kP i ; x þ x Á G ¼ eðP ; GÞ k ðþxÞ Q i ¼1 ðþx Þ eðP ; GÞ kx ðþxÞ Q i ¼1 ðþx Þ ¼ eðP ; GÞ kþkx ðþxÞ Q i ¼1 ðþx Þ ¼ Z k i ¼ K: c. Case 3 ðt r &lt; t data Þ.</formula><p>This case indicates that r revoked users have been revoked before the data file is uploaded i. Verifying the group signature by using Algorithm 2. ii. Inputting A 1 ; A 2 ; :::A r to call Algorithm 3. If the algorithm returns invalid, the user terminates this operation. iii. Computing the value</p><formula xml:id="formula_15">A r;r ¼ 1 ð þ xÞ Q r ¼1 ð þ x Þ</formula><p>P by using Algorithm 4 with the input ðA; xÞ; ðP 1 ; x 1 Þ; :::; ðP r ; x r Þ. iv. Calculating the decryption key K ¼ eðC 1 ;</p><p>A r;r ÞeðC 2 ; BÞ. v. Decrypting the ciphertext C with the key K.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.7">Traceability</head><p>When a data dispute occurs, the tracing operation is performed by the group manager to identify the real identity of the data owner. Given a signature ¼ ðT 1 ; T 2 ; T 3 ; c; s ; s ; s x ; s 1 ; s 2 Þ, the group manager employs his private key</p><formula xml:id="formula_16">ð 1 ; 2 Þ to compute A i ¼ T 3 À ð 1 Á T 1 þ 2 Á T 2 Þ.</formula><p>Given the parameter A i , the group manager can look up the user list to find the corresponding identity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 4. Parameters Computing</head><p>Input: The revoked user ðP 1 ; x 1 Þ; :::; ðP r ; x r Þ, and the private key ðA; xÞ.</p><formula xml:id="formula_17">Output: A r;r or NULL begin set temp ¼ A for ¼ 1 to r if x ¼ x return NULL else set temp ¼ 1 xÀx ðP À tempÞ return temp end</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">SECURITY ANALYSIS</head><p>In this section, we prove the security of Mona in terms of access control, data confidentiality, anonymity and traceability that are defined in Section 4.2.</p><p>Theorem 1. Based on the group signature technique, the proposed scheme can achieve efficient access control.</p><p>Proof. To access the cloud, a user needs to compute a group signature for his/her authentication. The employed group signature scheme can be regarded as a variant of the short group signature <ref type="bibr" target="#b11">[12]</ref>, which inherits the inherent unforgeability property, anonymous authentication, and tracking capability. The demonstration of Theorem 1 can be derived from the following three lemmas: t u Lemma 1.1. Unrevoked users are able to access the cloud.</p><p>Proof. The proof of Lemma 1.1 is equivalent to the correctness of Algorithm 2 (group signature verification).</p><formula xml:id="formula_18">R1 ¼ R 1 holds since R1 ¼ s Á U À c Á T 1 ¼ ðr þ cÞU À c Á Á U ¼ R 1 . Analogously, we can directly obtain R2 ¼ R 2 ; R4 ¼ R 4 ; R5 ¼ R 5 . R3 ¼ R 3</formula><p>holds due to the following relations:</p><formula xml:id="formula_19">R3 ¼ eðT 3 ; WÞ eðP ; P Þ c eðT 3 ; P Þ sx eðH; W Þ ÀsÀs eðH; P Þ Às 1 Às 2 ¼ eðT 3 ; WÞ eðP ; P Þ c eðT 3 ; P Þ rxþcxi eðH; W Þ ÀrÀcÀr Àc eðH; P Þ Àr 1 ÀcxiÀr 2 Àcxi ¼ eðT 3 ; WÞ eðP ; P Þ c eðT 3 ; x i P Þ c eðÀð þ ÞH; W þ x i P Þ c eðT 3 ; P Þ r x eðH; W Þ Àr Àr eðH; P Þ Àr 1 Àr 2 ¼ eðT 3 ; WÞ eðP ; P Þ c eðT 3 ; x i P Þ c eðÀð þ ÞH; W þ x i P Þ c R 3 ¼ eðT 3 ; WÞ eðP ; P Þ c eðT 3 À ð þ ÞH; W þ x i P Þ c eðT 3 ; WÞ Àc R 3 ¼ eðA i ; W þ x i P Þ eðP ; P Þ c R 3 ¼ R 3 : u t Lemma 1.2.</formula><p>Revoked users cannot utilize the cloud after their revocation.</p><p>Proof. Lemma 1.2 is equivalent to the correctness of Algorithm 3 (revocation verification). The correctness of revocation verification is based on the following relation:</p><formula xml:id="formula_20">eðT 3 À A i ; H 0 Þ ¼ eðA i þ ð þ Þ Á H À A i ; H 0 Þ ¼ eðH; H 0 ÞeðH; H 0 Þ ¼ eðU; 1 H 0 ÞeðV ; 2 H 0 Þ ¼ eðT 1 ; H 1 ÞeðT 2 ; H 2 Þ: u t Lemma 1.</formula><p>3. An attacker is unable to access the cloud server based on the assumption of the intractability of q-SDH problem in G 1 .</p><p>Proof. The brief security analysis can be shown as follows: Suppose that an attacker A succeeds to forge a valid group signature with a nonnegligible probability in polynomial time. In addition, we assume f is a random oracle. According to the Forking Lemma <ref type="bibr" target="#b20">[21]</ref>, by using the oracle replay technique, the attacker A obtains two valid signatures ðM; 0 ; c; 1 Þ and ðM; 0 ; c 0 ; 0 1 Þ as follows:</p><formula xml:id="formula_21">0 ¼ ðT 1 ; T 2 ; T 3 ; c; R 1 ; R 2 ; R 3 ; R 4 ; R 5 Þ c ¼ fðM; T 1 ; T 2 ; T 3 ; R 1 ; R 2 ; R 3 ; R 4 ; R 5 Þ c 0 ¼ f 0 ðM; T 1 ; T 2 ; T 3 ; R 1 ; R 2 ; R 3 ; R 4 ; R 5 Þ 1 ¼ ðs ; s ; s x ; s 1 ; s 2 Þ 0 1 ¼ ðs 0 ; s 0 ; s 0 x ; s 0 1 ; s 0 2 Þ 8 &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; :<label>ð5Þ</label></formula><formula xml:id="formula_22">s ¼ r þ c; s 0 ¼ r þ c 0 s ¼ r þ c; s 0 ¼ r þ c 0 s x ¼ r x þ cx; s 0 x ¼ r x þ c 0 x s 1 ¼ r 1 þ c 1 ; s 0 1 ¼ r 1 þ c 0 1 s 2 ¼ r 2 þ c 2 ; s 0 2 ¼ r 2 þ c 0 2 : 8 &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; :<label>ð6Þ</label></formula><p>Then, A can compute an SDH tuple ðx ¼ Ás x =Ác;</p><formula xml:id="formula_23">Â ¼ T 3 À ððÁs þ Ás Þ=ÁcÞ Á HÞ such that Â ¼ 1 þx and eð Â; W þ xP Þ ¼ eðP ; P Þ;</formula><p>where</p><formula xml:id="formula_24">Ás x ¼ s x À s 0 x , Ác ¼ c À c 0 , Ás ¼ s À s 0</formula><p>, and Ás ¼ s À s 0 . Obviously, this contradicts with q-SDH assumption.</p><p>t u Theorem 2. The proposed scheme supports privacy preserving and traceability.</p><p>Proof. The demonstration of this theorem is twofold. On one hand, the group manager has the ability to identify the real signer. Given a valid group signature ¼ ðT 1 ; T 2 ; T 3 ; c; s ; s ; s x ; s ; s 2 Þ and the private tuple ð 1 ; 2 Þ, the group manger can compute the private key of the signer through the equation</p><formula xml:id="formula_25">A i ¼ T 3 À ð 1 Á T 1 þ 2 Á T 2 Þ.</formula><p>The correctness of the equation holds based on the following relation:</p><formula xml:id="formula_26">T 3 À ð 1 Á T 1 þ 2 Á T 2 Þ ¼ A i þ ð þ ÞÁ H À ð 1 Á U þ 2 Á V Þ ¼ A i :</formula><p>On the other hand, other entities cannot reveal the signer's identity from a group signature. Otherwise, DL assumption will be in contradiction. Further proofs about the correctness, unforgeability, anonymity and traceability of group signatures can be found in <ref type="bibr" target="#b11">[12]</ref>.</p><p>t u Theorem 3. The proposed scheme protects data confidentiality under the hardness of the WBDHE problem and GDHE problem.</p><p>Proof. Theorem 3 can be deduced from the following two lemmas:</p><p>Lemma 3.1. The cloud server is unable to learn the content of the stored files.</p><p>Proof. To prove this lemma, we take a data file ðC 1 ; C 2 ; CÞ as an example to demonstrate the data confidentiality, where</p><formula xml:id="formula_27">C 1 ¼ k Á Y ; C 2 ¼ k Á P ; K ¼ Z k ; C ¼ Enc K<label>ðMÞ</label></formula><p>and no user has been revoked before the data file is uploaded. Suppose that the cloud server can compute K ¼ Z k , i.e., "given</p><formula xml:id="formula_28">C 1 ¼ k Á Y ; C 2 ¼ k Á P ; P , for unknown , comput- ing eðC 1 ; P Þ 1 ¼ eðG; P Þ k ¼ K."</formula><p>This contradicts with the WBDHE assumption. On the other hand, given the revocation list, the cloud server learns the partial private key of a revoked user i, i.e., ðA i ; x i Þ for a revoked user. Without the knowledge of the other part private key B i , it is also unable to compute the decryption key through the equation eðC 1 ; A i ÞeðC 2 ; B i Þ ¼ Z k . Thus, the correctness of Lemma 3.1 can be ensured.</p><p>t u Lemma 3.2. Even under the collusion with revoked users, the cloud server is also incapable of learning the content of the files stored after their revocation.</p><p>Proof. We first define two polynomial functions fðXÞ ¼</p><formula xml:id="formula_29">Å r i¼1 ðX þ x i Þ and gðXÞ ¼ Å nÀr i¼1 ðX þ x 0 i Þ.</formula><p>Let G 0 and P 0 denote two elements in group G 1 . Then, we set G ¼ fðÞG 0 and P ¼ fðÞgðÞP 0 . To maintain the confidentiality against the revoked users, the data owner computes the header information C 1 ; C 2 and the encryption key K as follows:</p><formula xml:id="formula_30">C 1 ¼ kY ¼ kfðÞ Á G 0 C 2 ¼ kP r ¼ k ð þ x 1 Þð þ x 2 Þ Á Á Á ð þ x r Þ P ¼ kgðÞP 0 K ¼ Z k r ¼ Z k ðþx 1 Þðþx 2 ÞÁÁÁðþxr Þ ¼ Z k fðÞ ¼ eðG; P Þ fðÞ ¼ eðG 0 ; H 0 Þ kfðÞgðÞ : 8 &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; :<label>ð7Þ</label></formula><p>We can observe that it is impossible for revoked users to compute the encryption key K, since "given kfðÞ Á G 0 and kgðÞP 0 , computing eðG 0 ; H 0 Þ kfðÞgðÞ " is an instance of (t,n)-GDHE problem, which has been demonstrated to be intractable in polynomial time <ref type="bibr" target="#b13">[14]</ref>. t u By the analysis above, we conclude that the proposed scheme achieves the security goals including access control, data confidentiality as well as anonymity and traceability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">PERFORMANCE EVALUATION</head><p>In this section, we first analyze the storage cost of Mona, and then perform experiments to test its computation cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Storage</head><p>Without loss of generality, we set q ¼ 160 and the elements in G 1 and G 2 to be 161 and 1,024 bit, respectively. In addition, we assume the size of the data identity is 16 bits, which yield a group capacity of 2 16 data files. Similarly, the size of user and group identity are also set as 16 bits.</p><p>Group manager. In Mona, the master private key of the group manager is ðG; ;</p><formula xml:id="formula_31">1 ; 2 Þ 2 G 1 Â Z q 3 .</formula><p>Additionally, the user list and the shared data list should be stored at the group manager. Considering an actual system with 200 users and assuming that each user share 50 files in average, the total storage of the group manager is ð80:125 þ 42:125 Ã 200 þ 2 Ã 10; 000Þ Ã 10 À3 % 28:5 Kbytes, which is very acceptable.</p><p>Group members. Essentially, each user in our scheme only needs to store its private key ðA i ; B i ; x i Þ 2 G 1 2 Â Z q , which is about 60 bytes. It is worth noting that there is a tradeoff between the storage and the computation overhead. For example, the four pairing operations including ðeðH; W Þ; eðH; P Þ; eðP ; P Þ; eðA i ; P ÞÞ 2 G 2 4 can be precomputed once and stored for the group signature generation and verification. Therefore, the total storage of each users is about 572 bytes.</p><p>The extra storage overhead in the cloud. In Mona, the format of files stored in the cloud is shown in Table <ref type="table">2</ref>. Since C 3 is the ciphertext of the file under the symmetrical encryption, the extra storage overhead to store the file is about 248 bytes, which includes ðID group ; ID data ; C 1 ; C 2 ; C 3 ; fðÞ; t data ; Þ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Simulation</head><p>To study the performance, we have simulated Mona by using C programming language with GMP Library <ref type="bibr" target="#b21">[22]</ref>, Miracl Library <ref type="bibr" target="#b22">[23]</ref>, and PBC Library <ref type="bibr" target="#b23">[24]</ref>. The simulation consists of three components: client side, manager side as well as cloud side. Both client-side and manager-side processes are conducted on a laptop with Core 2 T7250 2.0 GHz, DDR2 800 2G, Ubuntu 10.04 X86. The cloud-side process is implemented on a machine that equipped with Core 2 i3-2350 2.3 GHz, DDR3 1066 2G,Ubuntu 12.04 X64. In the simulation, we choose an elliptic curve with 160-bit group order, which provides a competitive security level with 1,024-bit RSA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.1">Client Computation Cost</head><p>In Fig. <ref type="figure" target="#fig_1">2</ref>, we list the comparison on computation cost of clients for data generation operations between Mona and the way that directly using the original dynamic broadcast encryption (ODBE) <ref type="bibr" target="#b13">[14]</ref>. It is easily observed that the computation cost in Mona is irrelevant to the number of revoked users. On the contrary, the computation cost increases with the number of revoked users in ODBE. The reason is that the parameters ðP r ; Z r Þ can be obtained from the revocation list without sacrificing the security in Mona, while several time-consuming operations including point multiplications in G 1 and exponentiations in G 2 have to be performed by clients to compute the parameters in ODBE. From Figs. <ref type="figure" target="#fig_1">2a</ref> and<ref type="figure" target="#fig_1">2b</ref>, we can find out that sharing a 10-Mbyte file and a 100-Mbyte one, cost a client about 0.2 and 1.4 seconds in our scheme, respectively, which implies that the symmetrical encryption operation domains the computation cost when the file is large.</p><p>The computation cost of clients for file access operation with the size of 10 and 100 Mbytes are illustrated in Fig. <ref type="figure" target="#fig_2">3</ref>. The computation cost in Mona increases with the number of revoked users, as clients require to perform Algorithms 3 and 4 to compute the parameter A r;r and check whether the data owner is a revoked user. Besides the above operations, P 1 ; P 2 ; :::; P r need to be computed by clients in ODBE. Therefore, Mona is still superior than ODBE in terms of computation cost. Similar to the data generation operation, the total computation cost is mainly determined by the symmetrical decryption operation if the accessed file is large, which can be verified from Figs. 3a and 3b. In addition, the file deletion for clients is about 0.075 seconds, because it only costs a group signature on a message ðID data ; Þ, where is a 160-bit number in Z Ã q .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2">Cloud Computation Cost</head><p>To evaluate the performance of the cloud in Mona, we test its computation cost to respond various client operation requests including file generation, file access, and file deletion. Assuming the sizes of requested files are 100 and 10 MB, the test results are given in Table <ref type="table" target="#tab_3">3</ref>. It can be seen that the computation cost of the cloud is deemed acceptable, even when the number of revoked users is large. This is because the cloud only involves group signature and revocation verifications to ensure the validity of the requestor for all operations. In addition, it is worth noting that the computation cost is independent with the size of the requested file for access and deletion operations, since the size of signed message is constant, e.g., ðID group ; ID data ; tÞ in file access and ðID data ; Þ in file deletion requests as described in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>In this paper, we design a secure data sharing scheme, Mona, for dynamic groups in an untrusted cloud. In Mona, a user is able to share data with others in the group without revealing identity privacy to the cloud. Additionally, Mona supports efficient user revocation and new user joining. More specially, efficient user revocation can be achieved through a public revocation list without updating the private keys of the remaining users, and new users can directly decrypt files stored in the cloud before their participation. Moreover, the storage overhead and the encryption computation cost are constant. Extensive analyses show that our proposed scheme satisfies the desired security requirements and guarantees efficiency as well.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. System model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig.2. on computation cost for file generation between Mona and ODBE<ref type="bibr" target="#b13">[14]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Comparison on computation cost for file access between Mona and ODBE [14].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE 1 Revocation List</head><label>1List</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>System parameter ðH 0 ; H 1 ; H 2 Þ, a group signature , and a set of revocation keys A 1 ; :::; A r Output: Valid or Invalid. begin set temp ¼ eðT 1 ; H 1 ÞeðT 2</figDesc><table><row><cell>Return True</cell></row><row><cell>else</cell></row><row><cell>Return False</cell></row><row><cell>end</cell></row><row><cell>Algorithm (3). Revocation Verification</cell></row><row><cell>Input:</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE 3 Computation</head><label>3</label><figDesc>Cost of the Cloud (s)</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors thank the editors and anonymous reviewers for their valuable comments to significantly improve the quality of this paper. This work was supported in part by the National Science Foundation of China under Grant Nos. 60970140, 61272481, and 61272522.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<author>
			<persName><forename type="first">M</forename><surname>Armbrust</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Griffith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Konwinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Patterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rabkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zaharia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">A View of Cloud Computing</title>
		<imprint>
			<date type="published" when="2010-04">Apr. 2010</date>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="50" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Cryptographic Cloud Storage</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kamara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lauter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Conf. Financial Cryptography and Data Security (FC)</title>
		<meeting>Int&apos;l Conf. Financial Cryptography and Data Security (FC)</meeting>
		<imprint>
			<date type="published" when="2010-01">Jan. 2010</date>
			<biblScope unit="page" from="136" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Achieving Secure, Scalable, and Fine-Grained Data Access Control in Cloud Computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="534" to="542" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Plutus: Scalable Secure File Sharing on Untrusted Storage</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kallahalla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Riedel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Swaminathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Fu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. USENIX Conf. File and Storage Technologies</title>
		<meeting>USENIX Conf. File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="29" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Sirius: Securing Remote Untrusted Storage</title>
		<author>
			<persName><forename type="first">E</forename><surname>Goh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Modadugu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Network and Distributed Systems Security Symp. (NDSS)</title>
		<meeting>Network and Distributed Systems Security Symp. (NDSS)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="131" to="145" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Improved Proxy Re-Encryption Schemes with Applications to Secure Distributed Storage</title>
		<author>
			<persName><forename type="first">G</forename><surname>Ateniese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hohenberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Network and Distributed Systems Security Symp. (NDSS)</title>
		<meeting>Network and Distributed Systems Security Symp. (NDSS)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="29" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Secure Provenance: The Essential of Bread and Butter of Data Forensics in Cloud Computing</title>
		<author>
			<persName><forename type="first">R</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Symp. Information, Computer and Comm. Security</title>
		<meeting>ACM Symp. Information, Computer and Comm. Security</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="282" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Ciphertext-Policy Attribute-Based Encryption: An Expressive, Efficient, and Provably Secure Realization</title>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
		<ptr target="http://eprint.iacr.org/2008/290.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Conf. Practice and Theory in Public Key Cryptography Conf. Public Key Cryptography</title>
		<meeting>Int&apos;l Conf. Practice and Theory in Public Key Cryptography Conf. Public Key Cryptography</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Attribute-Based Encryption for Fine-Grained Access Control of Encrypted Data</title>
		<author>
			<persName><forename type="first">V</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Pandey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Conf. Computer and Comm. Security (CCS)</title>
		<meeting>ACM Conf. Computer and Comm. Security (CCS)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="89" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Revocation and Tracing Schemes for Stateless Receivers</title>
		<author>
			<persName><forename type="first">D</forename><surname>Naor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Lotspiech</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Ann. Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</title>
		<meeting>Ann. Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="41" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Identity-Based Encryption from the Weil Pairing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</title>
		<meeting>Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="213" to="229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Short Group Signature</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</title>
		<meeting>Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="41" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Hierarchical Identity Based Encryption with Constant Size Ciphertext</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Goh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Ann. Int&apos;l Conf. Theory and Applications of Cryptographic Techniques (EUROCRYPT)</title>
		<meeting>Ann. Int&apos;l Conf. Theory and Applications of Cryptographic Techniques (EUROCRYPT)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="440" to="456" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fully Collusion Secure Dynamic Broadcast Encryption with Constant-Size Ciphertexts or Decryption Keys</title>
		<author>
			<persName><forename type="first">C</forename><surname>Delerablee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Paillier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pointcheval</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. First Int&apos;l Conf. Pairing-Based Cryptography</title>
		<meeting>First Int&apos;l Conf. Pairing-Based Cryptography</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="39" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Group Signatures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Chaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Van Heyst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Conf. Theory and Applications of Cryptographic Techniques (EUROCRYPT)</title>
		<meeting>Int&apos;l Conf. Theory and Applications of Cryptographic Techniques (EUROCRYPT)</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="257" to="265" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Broadcast Encryption</title>
		<author>
			<persName><forename type="first">A</forename><surname>Fiat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</title>
		<meeting>Int&apos;l Cryptology Conf. Advances in Cryptology (CRYPTO)</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="480" to="491" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Knox: Privacy-Preserving Auditing for Shared Data with Large Groups in the Cloud</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Int&apos;l Conf. Applied Cryptography and Network Security</title>
		<meeting>10th Int&apos;l Conf. Applied Cryptography and Network Security</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="507" to="525" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Privacy-Preserving Public Auditing for Data Storage Security in Cloud Computing</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="525" to="533" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Verifiable Privacy-Preserving Range Query in Two-Tiered Sensor Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Sheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="46" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Short Signature from the Weil Pairing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lynn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Conf. Theory and Application of Cryptology and Information Security: Advances in Cryptology</title>
		<meeting>Int&apos;l Conf. Theory and Application of Cryptology and Information Security: Advances in Cryptology</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="514" to="532" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Security Arguments for Digital Signatures and Blind Signatures</title>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stern</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Cryptology</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="361" to="396" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<ptr target="http://gmplib.org/" />
		<title level="m">The GNU Multiple Precision Arithmetic Library (GMP)</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<ptr target="http://certivox.com/" />
		<title level="m">Multiprecision Integer and Rational Arithmetic C/C++ Library (MIRACL)</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Yuqing Zhang received the BSc and MSc degrees in computer science from Xidian University, China, in 1987 and 1990, respectively. He received the PhD degree in cryptography from Xidian University in 2000</title>
		<ptr target="http://crypto.stanford.edu/pbc/howto.html" />
	</analytic>
	<monogr>
		<title level="m">His research interests focus on security and privacy issues in cloud computing, social network and network coding. Jingbo Yan received the BSc degree in information security from Xidian University</title>
		<meeting><address><addrLine>Xi&apos;an, China; China</addrLine></address></meeting>
		<imprint>
			<publisher>The Pairing-Based Cryptography Library</publisher>
			<date type="published" when="2007">2013. 2007. 2009</date>
		</imprint>
	</monogr>
	<note>He is a member of the IEEE. Boyang Wang received the BS degree in information security from Xidian University in 2007. He is currently working toward the PhD degree from Xidian University. He joined Xidian University in 2009 for the MSc and PhD degrees. His research interests include privacy, applied cryptography and computer security</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
