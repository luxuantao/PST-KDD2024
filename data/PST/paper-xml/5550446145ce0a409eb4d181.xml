<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Analysis of Anonymity in Bitcoin Using P2P Network Traffic</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Philip</forename><surname>Koshy</surname></persName>
							<email>philipkoshy@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park, State College</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Diana</forename><surname>Koshy</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park, State College</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Patrick</forename><surname>Mcdaniel</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park, State College</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">An Analysis of Anonymity in Bitcoin Using P2P Network Traffic</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">56C4DD6EE8BD72BAFE6D8240B614B4F8</idno>
					<idno type="DOI">10.1007/978-3-662-45472-5</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T02:59+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Bitcoin</term>
					<term>Anonymity</term>
					<term>CoinSeer</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Over the last 4 years, Bitcoin, a decentralized P2P cryptocurrency, has gained widespread attention. The ability to create pseudoanonymous financial transactions using bitcoins has made the currency attractive to users who value their privacy. Although previous work has analyzed the degree of anonymity Bitcoin offers using clustering and flow analysis, none have demonstrated the ability to map Bitcoin addresses directly to IP data. We propose a novel approach to creating and evaluating such mappings solely using real-time transaction traffic collected over 5 months. We developed heuristics for identifying ownership relationships between Bitcoin addresses and IP addresses. We discuss the circumstances under which these relationships become apparent and demonstrate how nearly 1,000 Bitcoin addresses can be mapped to their likely owner IPs by leveraging anomalous relaying behavior.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Bitcoin is a decentralized peer-to-peer crypto-currency first proposed and implemented by Satoshi Nakamoto, a likely pseudonym, in 2009 <ref type="bibr" target="#b0">[1]</ref>. It allows end-users to create pseudo-anonymous financial transactions; instead of disclosing personal information, users create any number of Bitcoin identities/addresses, in the form of cryptographic keys, which are used to accept and send bitcoins. We have seen the perceived anonymity provided by Bitcoin leveraged when Wikileaks was able to receive over 1,000 "anonymous" Bitcoin donations totaling over 32,000 USD; other financial institutions, such as Paypal, prevented supporters from making donations using fiat currencies due to government pressure <ref type="bibr" target="#b1">[2]</ref>. We have also seen the birth and recent death of the Silk Road, a Bitcoin marketplace once called "the Amazon.com of illegal drugs" <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>.</p><p>Previous studies (discussed in Sect.</p><p>3) showed that it may be possible to cluster Bitcoin identities into distinct entities, track the flow of their bitcoins, and in some instances deanonymize them using external information like forum posts where people divulged their Bitcoin identities intentionally. To our knowledge, there has been no work that has attempted to relate Bitcoin addresses to specific IPs. The ability to create such mappings is important since there have been cases where individuals participating in P2P networks have been identified by law enforcement after their ISPs had been subpoenaed <ref type="bibr" target="#b5">[6]</ref>. In this work, we set out to determine if real-time transaction traffic received from directly connected peers can alone be used to create Bitcoin address-to-IP mappings. This approach was inspired by a technique proposed by Dan Kaminsky during the 2011 Black Hat conference <ref type="bibr" target="#b4">[5]</ref>.</p><p>By analyzing 5 months of data we collected using our custom-built Bitcoin client, we were able to classify distinct transaction relay patterns and design heuristics for hypothesizing transaction ownership. We then demonstrated how Bitcoin address-to-IP mappings can be derived and evaluated using aggregate statistics from our transaction data. We found that even after applying conservative thresholds, several hundred high-confidence (&gt;90 %) ownership pairings could still be discovered in our data. Over 1,000 remained if we allowed thresholds to drop to 50 %. We note, however, that the majority of these were obtained from anomalously relayed transactions, and that normal transaction traffic overall proved to be very difficult to deanonymize.</p><p>The rest of this paper is organized as follows. Section 2 gives a brief background of the Bitcoin protocol, while Sect. 3 provides an overview of related work. In Sect. 4, we discuss CoinSeer, our custom-built Bitcoin client. Section 5 presents several interesting cases we discovered that inspired our later methodology. We outline our final approach in Sect. 6, discussing how to create, evaluate, and prune Bitcoin address-to-IP mappings. In conclusion, Sect. 7 discusses our results, as well as the caveats and limitations of our method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Bitcoin is a decentralized currency which requires certain participants called miners to validate financial transactions. In order to prevent people from (a) using money which does not belong to them, or (b) reusing money which they have already spent (this is called double-spending), the entire history of these transactions must be publicly available; this is to avoid a single point of centralization. The historical transaction ledger is called the block chain and can be accessed and scrutinized by anyone. Nothing is encrypted. To protect users' identities, IP information is never stored, and cryptographic keys are used instead of personal information. Bitcoins are sent to and from users' public keys, which are often referred to as Bitcoin addresses <ref type="foot" target="#foot_0">1</ref> . In this way, despite all transactions being public, the parties involved remain pseudo-anonymous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Anatomy of a Transaction</head><p>Bitcoins change hands via transactions. A transaction is a data structure that contains inputs and outputs. The sender of a transaction uses the inputs to Note that the Bitcoin address of the input must match the Bitcoin address of the referenced output. Note also that the sender of the transaction must sign it with her private key (denoted in this diagram with the superscript -). We caution that this is a simplified representation of the internals of a transaction.</p><p>claim coins he received in older transactions; he lists the recipient(s) of these coins within the transaction's outputs.</p><p>For example, if Alice wants to receive 50 bitcoins (BTC) from Bob, she creates an asymmetric key-pair and gives him her public key, A + . Bob creates a transaction and encodes Alice's public key as the recipient of his coins within one of the transaction's outputs (Fig. <ref type="figure" target="#fig_0">1</ref>, Transaction 1). The next day, Alice wants to send 20 BTC to Charlie. She creates a new transaction and claims the money she received from Bob by referencing it in one of the transaction's inputs (Fig. <ref type="figure" target="#fig_0">1</ref>, Transaction 2). An important caveat of the Bitcoin protocol is that the amount of bitcoins claimed in an input cannot be specified. In order for Alice to only send 20 BTC to Charlie, she has to create an extra output to send 30 BTC in change back to herself (Transaction 2, Output 1). She can then reference this change in later transactions. After specifying all her outputs, Alice signs the new transaction with her private key (A -) and includes this signature within the corresponding input. In this way, ownership of the referenced coins can later be verified and the transaction's integrity is protected.</p><p>In general, users are encouraged to have many Bitcoin addresses. Thus, Alice could have sent her change to a different address she owns. Additionally, if she needed to spend more than 50 BTC, she could have created additional inputs, each of which would reference older transactions. This is called a multi-input transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">P2P Relaying</head><p>Bitcoin uses a gossip protocol <ref type="bibr" target="#b6">[7]</ref> to relay messages across the network. When a user creates a transaction, he sends it to his directly connected peers. These peers assess whether the transaction is valid (discussed below). If it is, they relay it to their peers and the transaction gets propagated through the rest of the network. If it is not valid, it is simply ignored.</p><p>A transaction received from a peer must pass a series of checks before being further relayed. Besides basic sanity checks to make sure the transaction format </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Orphan</head><p>One or more of the outputs claimed by the inputs cannot be found conforms to the protocol, Table <ref type="table" target="#tab_0">1</ref> shows common reasons a peer may ignore a transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>Several academic papers have analyzed the extent of anonymity in Bitcoin. The majority of them cluster Bitcoin addresses into distinct entities, analyze the flow of bitcoins among these entities, and in some instances tie entities to identifying information through external means. To our knowledge, no one has attempted to deanonymize Bitcoin addresses at the IP level, and no other papers discuss using actual relay traffic. The original Bitcoin paper <ref type="bibr" target="#b0">[1]</ref> cautioned that although users could hide their identities behind Bitcoin addresses, the public nature of the transaction ledger could allow addresses to be linked together. Multi-input transactions, which at the time could only be created by one user, were cited as a potential means to clustering multiple Bitcoin addresses into one entity. Reid and Harrigan <ref type="bibr" target="#b7">[8]</ref> downloaded the public transaction ledger (i.e. block chain) and used this method to cluster Bitcoin addresses into "users". They created two networks, modeling the flow of bitcoins among transactions and users, and analyzed their topologies. The authors showed how these graphs, along with external information from forum posts, can be used to track a particular target (in this case, a thief). Ron and Shamir <ref type="bibr" target="#b8">[9]</ref> mirrored Reid and Harrigan's two-graph solution when analyzing the typical behavior of entities on the Bitcoin network, including how these entities acquire and spend bitcoins and how they move their funds around to protect their privacy. Androulaki et al. <ref type="bibr" target="#b9">[10]</ref> again took a similar approach, using data from a simulation of bitcoin usage in a university setting. In addition to input clustering, the authors used K-means and Hierarchical Agglomerate Clustering to tie together behavioral patterns. They also clustered inputs with outputs based on their own heuristic. Meiklejohn et al. <ref type="bibr" target="#b10">[11]</ref> also used input and output clustering to create a set of "users." They actively interacted with parties on the Bitcoin network to create a list of known Bitcoin addresses for each party, using this information to assign identities to their clusters. Finally, they used flow analysis to study interactions among users.</p><p>Other papers did not try to deanonymize Bitcoin users, but instead gave wholistic analyses of anonymity and proposed some solutions. Ober et al. <ref type="bibr" target="#b11">[12]</ref>, using the available transaction history, analyzed what increases and decreases anonymity in Bitcoin, concluding that clustering is the most important challenge the community faces. Miers et al. <ref type="bibr" target="#b12">[13]</ref>, arguing that Bitcoin is not truly anonymous, proposed an extension to the protocol that uses cryptography to make transactions fully anonymous. Barber et al. <ref type="bibr" target="#b13">[14]</ref> discussed the various vulnerabilities inherent to Bitcoin, finally proposing and outlining a trust-free mixing service. Moore and Christin <ref type="bibr" target="#b15">[15]</ref> cautioned that mixing services, exchanges, and other centralized intermediaries can pose a major risk to Bitcoin investors since they can either have a security breach or close and disappear with people's bitcoins.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CoinSeer: The Need for a Custom Bitcoin Client</head><p>Inspired by Dan Kaminsky's 2011 Black Hat presentation <ref type="bibr" target="#b4">[5]</ref>, we decided to analyze traffic patterns on the Bitcoin network to see if it was possible to create mappings from Bitcoin addresses to IPs. To increase the likelihood of receiving transactions directly from their creators in a gossip protocol, we had to connect to all listening peers. We actively collected all data, along with its IP information, being relayed on the network and stored it for offline processing.</p><p>Although numerous Bitcoin clients exist, none of them are specialized for data collection. Available clients often need to balance receiving and spending bitcoins, vetting and rejecting invalid transactions, maintaining a user's wallet, mining bitcoins, and, perhaps most detrimental to our study, disconnecting from "poorly-behaving" peers; these were precisely the peers we were interested in.</p><p>Because existing software had integrated functionality that interfered with our goals, we decided to build our own Bitcoin client called CoinSeer, which was a lean tool designed exclusively for data collection. For 5 months, between July 24, 2012 and January 2, 2013, CoinSeer created an outbound connection to every listening peer whose IP address was advertised on the Bitcoin network. We maintained that connection until either the remote peer hung up or timed out. In any given hour, we were connected to a median of 2,678 peers; for the duration of our collection period, we consistently maintained more connections than the only other Bitcoin superclient we know of -blockchain.info. This data collection effort required storing 60 GB of data per week.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discovering Anomalous Relay Patterns</head><p>When we began analyzing our collected data, we manually looked for interesting behavior. The following are specific cases that led us to believe that transaction relay behavior may be used to map Bitcoin addresses to IPs.</p><p>Case 1: On August 31, 2012, we received a transaction from a single IP that was never relayed again. This "single-relayer" transaction is highly unusual for a P2P system using a gossip protocol; we would expect to have received it from the majority of the approximately 2,500 peers we were connected to at the time. On September 3, 2012, a new transaction with the same inputs and outputs was relayed network-wide and accepted into the blockchain. Given this information, can we assume the sole relayer of the first transaction was its creator and thus owns the Bitcoin addresses inside? Case 2: On August 22, 2012, a single IP sent us 11,730 unique transactions within a 74-second window. The median rate we received transactions was only 43 per minute. Because these transactions were already in the block chain, they were not relayed by anyone else, making them "single-relayer" transactions. Using connection metadata, we saw that this large transaction dump corresponded with this user upgrading to a newer version of the Bitcoin client he was using. Could all of these belong to the single relayer? Case 3: For 52 days, beginning on July 24, 2012, we received the same transaction from a single IP approximately once every hour; no one else on the network relayed it. The peer then disconnected, only for a new IP to connect and exhibit the same behavior for the next 23 hours. This occurred again with the appearance of a third IP, finally going silent a day later. Why would a transaction be continually rerelayed, and what connection does it have to its rerelayers?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Methodology</head><p>Manually discovering instances of exploitable anomalous behavior proved to be unscalable. We attempted to generalize the patterns we observed, some of which were demonstrated by the cases in Sect. 5, in order to come up with a more algorithmic approach for mapping Bitcoin addresses to the IPs that own them. This approach requires six phases:</p><p>Phase 0 Prune transaction data to remove potential sources of noise. Phase 1 Using relay patterns we have observed for transactions, hypothesize an "owner" IP for each transaction. Phase 2 Break transactions down into their individual Bitcoin addresses. We do this to create more granular (Bitcoin address, IP) pairings Phase 3 Compute statistical metrics for our (Bitcoin address, IP) pairings. Phase 4 Identify pairings that may represent ownership relationships. Phase 5 Eliminate ownership pairings that fall below our defined thresholds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Phase 0: Pruning Transaction Data</head><p>By the end of our 5 month collection period, we had relayer information for 5,617,202 transactions. This number included some noise; there were 57,087 transactions whose hashes were advertised but which were never relayed, as well as 300 that contained a Bitcoin address we could not parse. These were removed from consideration. Additionally, we removed 114,100 transactions that exhibited relay patterns which made establishing ownership ambiguous (see Sect. 6.2, and Fig. <ref type="figure" target="#fig_3">5</ref> in particular).</p><p>Our biggest source of potential noise were multi-input transactions. In this work, we assume that each transaction has only one owner. A multi-input transaction can be created by one or multiple, unrelated entities with no way to distinguish the difference <ref type="bibr" target="#b17">[16]</ref>. Other academic works do not acknowledge this possibility. We argue that not excluding multi-input transactions could lead to incorrect assumptions being made about the ownership of a Bitcoin address. To be conservative, we removed all 1,544,509 multi-input transactions from our dataset, leaving us with 3,901,206 transactions to analyze.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Phase 1: Hypothesizing Transaction Owner IPs</head><p>Phase 1 of our approach involved hypothesizing which of each transaction's relayers is its owner. This step acts as a bridge to later mapping the Bitcoin addresses internal to each transaction to owner IPs.</p><p>We know that the creator of a single-input transaction owns the input Bitcoin address (since the transaction must be signed by the corresponding private key<ref type="foot" target="#foot_1">2</ref> ). Given that Bitcoin uses a gossip protocol and we expect multiple people to relay a single transaction, how can we determine the IP of its creator?</p><p>When a peer either creates or receives a valid transaction, he sends advertisements to all of his peers, all of whom can request and repropagate it. Since we were connected to thousands of peers, we received a typical transaction between 1,500 and 2,500 times. As demonstrated by the three cases in Sect. 5, we found that certain transactions exhibited atypical behavior; the transactions from Case 1 and 2 were relayed by only a single IP, while Case 3 demonstrated rerelaying behavior. Whereas for a typical transaction, we can only hope that the creator was its first relayer<ref type="foot" target="#foot_2">3</ref> , anomalies provide additional information that we can leverage when hypothesizing ownership.</p><p>Below, we discuss the 3 distinct relaying patterns exhibited by transactions within our collected data and the heuristics we used to hypothesize transaction ownership.</p><p>Relay Pattern 1: Multi-Relayer, Non-Rerelayed Transactions. The first and most common relay pattern involves a transaction being relayed by multiple people, each of whom relayed the transaction a single time. This is expected behavior according to the protocol and 3,671,341 (approx. 91.4 %) of our transactions exhibited this relay pattern.</p><p>We present an example in Fig. <ref type="figure">2</ref> to demonstrate ownership assignment for transactions exhibiting this relay pattern.</p><p>Relay Pattern 2: Single-Relayer Transactions. The second relay pattern involves a transaction being relayed by a single person. This includes transactions Fig. <ref type="figure">2</ref>. In the timeline at right, Tx 1 is being relayed once by each IP. Since this is normal behavior, there is no additional information to exploit. In this case, we simply choose the first relayer -IP 1 -as the "owner." relayed once, as well as transactions that were relayed multiple times by the same IP. Cases 1 and 2 from Sect. 5 fall into this category. This behavior is highly unusual for a system using a gossip protocol, and only 101,462 (approx. 2.5 %) of our transactions exhibited this relay pattern.</p><p>This behavior may arise when a peer creates an invalid transaction that its immediate peers reject. Since we attempt to be a directly connected peer of every Bitcoin node, we are able to record the transaction despite it not being relayed on the network. To demonstrate ownership assignment for transactions exhibiting this relay pattern, we present an example in Fig. <ref type="figure" target="#fig_1">3</ref>. The Bitcoin protocol states that a transaction will not be relayed twice by any node except the sender or recipient of coins in that transaction <ref type="bibr" target="#b18">[17]</ref>. By rerelaying a transaction, an IP exposes its association with at least one of the keys contained inside. Although this may appear to be a clear way of establishing ownership, we found that many transactions had multiple rerelayers, thus making ownership assignment ambiguous. Besides the transaction's creator, any number of its recipients may also choose to rerelay it. Additionally, all IPs eventually "forget" which transactions they have already relayed, leading to some transactions getting relayed by the whole network in waves.</p><p>To remain conservative when hypothesizing ownership, we decided to split the transactions exhibiting this relay pattern into the following two groups:   . This is similar to Tx 3, but there are now multiple rerelayers. This makes ownership assignment more ambiguous. Do we assign it to the first rerelayer, or the one with the most relays? To err on the side of caution, we removed transactions with more than one rerelayer from consideration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Phase 2: Creating (Bitcoin Address, IP) Pairings</head><p>In Phase 2, we pair the owner IPs assigned to each transaction in Phase 1 with the Bitcoin addresses contained within that transaction. This brings us closer to our goal of associating Bitcoin addresses with IPs and prepares our data for statistical analysis. We begin by splitting every transaction into a set of triplets which consist of:</p><p>1. a Bitcoin address from the transaction 2. the IP which we hypothesized owns the transaction, and</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">the unique transaction number we assigned to this transaction</head><p>There is a triplet for each unique Bitcoin address found within a transaction.</p><p>Because it matters whether a Bitcoin address appears as an input or an output in a transaction, we keep triplets made from input and output Bitcoin addresses separate. Figure <ref type="figure">6</ref> demonstrates how 3 transactions can be split into corresponding (Bitcoin address, IP, Tx #) triplets.</p><p>We note that at the end of Phase 1, our data consisted of 3 groups of transactions, split based on their relaying patterns. For this and subsequent Phases, the data maintains its relaying pattern split since eventual Bitcoin address-to-IP mappings obtained from anomalously relayed transactions are arguably more likely to be correct. For instance, Fig. <ref type="figure">7</ref> shows what our data looks like at the end of this phase. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Phase 3: Computing Pairing Statistics</head><p>In Phase 3, we turn our triplet data from Phase 2 into (Bitcoin address, IP) pairings by aggregating over all transactions within the corresponding dataset (from Fig. <ref type="figure">7</ref>). This step serves to identify unique (Bitcoin address, IP) pairings and compute statistics for the occurrence of each pairing within the dataset.</p><p>We can think of a transaction owned by IP i which contains Bitcoin address b as a "vote" for the pairing between b and i. We can aggregate our triplet data over these "votes" to form a set of unique (Bitcoin address, IP) pairings, each with the following metrics:</p><p>1. The number of unique transactions owned by IP i that contain Bitcoin address b within their inputs. N I (b, i)</p><p>2. The number of unique transactions owned by IP i that contain Bitcoin address b within their outputs. O (b, i)</p><p>3. The confidence (probability) that a transaction containing Bitcoin address b within its inputs is owned by IP i.</p><formula xml:id="formula_0">C I = N I (b, i) N I (b)</formula><p>4. The confidence (probability) that a transaction containing Bitcoin address b within its outputs is owned by IP i.</p><formula xml:id="formula_1">C O = N O (b, i) N O (b)</formula><p>where N I (b) and N O (b) represent the number of unique transactions that contain Bitcoin address b as an input and output, respectively. After formulating our data in this way, this problem becomes much like an evaluation of association rules of the form b → i <ref type="bibr" target="#b19">[18]</ref>, where C I and C O represent the confidence scores and N I (b, i) and N O (b, i) gauge the support counts for the rule when the Bitcoin address is either an input or an output, respectively. Table <ref type="table" target="#tab_2">2</ref> shows how the transactions from our example in Fig. <ref type="figure">6</ref> would be transformed into pairings with corresponding computed metrics, assuming those were the only transactions in the dataset being analyzed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Phase 4: Identifying Ownership Pairings</head><p>Phase 4 involves interpreting the statistics obtained in Phase 3 to figure out which pairings may indicate ownership relationships. The relationship between the Bitcoin address and the IP in a given pairing depends on the region the pairing maps to on the C I × C O plane. Figure <ref type="figure">8</ref> provides a summary of the interpretations of the different regions on this plane and we explain how we came to these conclusions below.  The low C I indicates that this is not the case for transactions drawing on funds from b (i.e. where b was an input). There are two situations that can give rise to this combination of confidence scores:</p><p>1. IP i owns Bitcoin address b, using it frequently for receiving change, its own funds (ex: if it is an offline wallet), or payments from others but rarely drawing on those funds for future payments. 2. IP i does not own Bitcoin address b but frequently sends money to the person who does own it. This could indicate a business relationship.</p><p>Without additional information to discern between the two cases, we cannot form conclusions about Region A pairings. Final Ownership Regions. In Phase 1, we assigned owner IPs to every transaction. These owners were then propagated to our (Bitcoin address, IP) pairings in Phase 2. The above interpretation only applies if our definition of "owner" was synonymous with "creator." For Relay Pattern 1 and 2, this is the case; the first or only relayer of a transaction likely created it. To find ownership mappings within Relay Patterns 1 and 2 data, we thus only keep pairings that map to Regions B and C. This makes intuitive sense since transaction creators are associated with inputs and may or may not be associated with outputs, making C I the only important variable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Region</head><p>For Relay Pattern 3 data, however, the assumption that the "owner" is the creator is not guaranteed to hold. As we described in Sect. 6.2, transactions exhibiting rerelaying behavior could have been rerelayed by either their creator or one of their recipients. Recipients are generally associated with a transaction's outputs and may or may not be associated with its inputs, thus making C O the only important variable. In the event that an IP is the recipient of its assigned transactions, the interpretations for Regions A and C in Fig. <ref type="figure">8</ref> are thus swapped. Unfortunately, there is no way to know if the IPs assigned as owners to Relay Pattern 3 transactions were creators or recipients. Since Region B is the only one where the interpretations overlap for either scenario, we only consider Region B pairings from Relay Pattern 3 data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6">Phase 5: Eliminating Insignificant Pairings</head><p>In our final Phase, we apply thresholds to the statistical metrics of our ownership pairings from Phase 4 in order to obtain final Bitcoin address-to-IP mappings. There are two types of thresholds to consider -one on support count and one on confidence. Support count tells us how statistically significant a pairing is, while confidence measures the strength of the ownership relationship between the Bitcoin address and IP.</p><p>We found that the vast majority of our (Bitcoin address, IP) pairings had a support count of 1 (see Table <ref type="table" target="#tab_3">3</ref>). These results are not surprising; to protect their anonymity, Bitcoin users are encouraged to create a new Bitcoin address for every transaction, thus decreasing the number of times they may become paired with any one address. We also note that within data obtained from anomalous transactions (Relay Pattern 2 and 3), pairings with higher support counts were slightly more common. We decided to use support count thresholds of 5 and 10. These cutoffs allow us to be very conservative since they eliminate over 97 % of our pairings. They also make sense from a practical standpoint since in the Bitcoin system, 5 or 10 transactions sent by the same IP containing the same Bitcoin address are highly infrequent.</p><p>Our confidence thresholds were determined by the ownership regions from Phase 4 (Fig. <ref type="figure">8</ref>). However, the region boundaries only provided the minimal thresholds necessary for interpretations. We were interested in seeing how many ownership pairings would remain as we increased these thresholds to progressively more conservative values. We computed statistics for 7 confidence threshold values for each support count threshold value. The following indicate the criteria a pairing had to meet in order to avoid elimination.   The thresholds are kept equal for inputs and outputs. This corresponds to pairings with a support count of at least 5 or 10 for both inputs and outputs that are found in Region B of Fig. <ref type="figure">8</ref>. Table <ref type="table" target="#tab_4">4</ref> shows the final number of ownership pairings for each of our 3 datasets as we varied the thresholds. Table <ref type="table" target="#tab_5">5</ref> shows the corresponding number of unique owner IP addresses involved within these pairings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relay</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>As we see from Table <ref type="table" target="#tab_4">4</ref>, even when applying highly conservative constraints, we were able to map between 252 and 1,162 Bitcoin addresses to the IPs that very likely owned them. From Table <ref type="table" target="#tab_5">5</ref>, we see that these mappings were not simply the result of one or two misbehaving IPs; at least 100 different "owners" were associated with Bitcoin addresses that appear to belong to them. This shows that it is indeed possible to deanonymize some subset of Bitcoin addresses simply by observing transaction relay traffic.</p><p>We note that the vast majority of our final mappings were derived from Relay Patterns 2 and 3 -anomalous transaction traffic. This implies that either (1) most users on the Bitcoin network follow the recommendation of creating a new Bitcoin address for every transaction (thus reducing the support count for any given mapping to 1), or (2) the heuristic of assigning a transaction's ownership to its first relayer is ineffective at best and invalid at worst.</p><p>There are indeed several assumptions and caveats to our method. To increase the likelihood that the creator of each transaction was among our directly connected peers, we tried to connect to all listening nodes<ref type="foot" target="#foot_3">4</ref> . However, transactions sent through proxy services such as Tor, I2P, or the tool provided in <ref type="bibr" target="#b20">[19]</ref> would still be assigned to incorrect owners since we cannot establish direct connections to their true creators. Incorrect ownership would also be assigned for transactions created by directly connected peers with slow connections, since we may receive their transactions from other peers first. Our statistical approach allows us to be tolerant of incorrect ownership assignments provided that the transactions of such peers do not always arrive through the same intermediary.</p><p>There are also several caveats when using our method in the presence of centralized Bitcoin entities such as mixing services and eWallets, which both greatly affect other work in this area that relies on flow analysis.</p><p>Mixing Services allow users to send their coins to one set of service-controlled addresses and receive them back from a set of unrelated addresses. This breaks any analysis that tries to relate entities by tracking the flow of bitcoins across transactions. Since we do not attempt to connect different users or find links between an individual user's transactions, our method is not affected by mixing services.</p><p>eWallets, much like banks, allow users to create accounts which they can use to receive and send money. Users never need to download the Bitcoin software themselves and all of a user's transactions are made on behalf of the user by the eWallet service using keys controlled by the service. We caution that using our method, Bitcoin addresses controlled by an eWallet would be paired with the eWallet despite the funds actually belonging to a different user. This is an unavoidable limitation of our approach. However, we argue that mappings involving eWallet IPs are still valuable since such services can be pressured for internal client information.</p><p>Taking these limitations and our results into account, we conclude that some degree of deanonymization is possible within the Bitcoin system and we urge users to take advantage of the many existing recommendations and services offered to them in order to protect their privacy.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. This figure demonstrates how Alice, who owns Bitcoin address A, would create a new transaction (Transaction 2) which spends bitcoins received earlier (Transaction 1).Note that the Bitcoin address of the input must match the Bitcoin address of the referenced output. Note also that the sender of the transaction must sign it with her private key (denoted in this diagram with the superscript -). We caution that this is a simplified representation of the internals of a transaction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. The timeline at right shows the advertisements of Tx 2. Since only one IP ever relayed this transaction, there is no ambiguity; we assign the single relayer -IP 3as the "owner."</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 . 2 .</head><label>42</label><figDesc>Fig.4. For Tx 3, everyone but IP 2 is exhibiting the expected behavior of sending the transaction only once. Since only the sender or recipient of coins in a transaction is supposed to rerelay that transaction, we assign the single rerelayer -IP 2 -as the "owner."</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5</head><label>5</label><figDesc>Fig.5. This is similar to Tx 3, but there are now multiple rerelayers. This makes ownership assignment more ambiguous. Do we assign it to the first rerelayer, or the one with the most relays? To err on the side of caution, we removed transactions with more than one rerelayer from consideration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .Fig. 7 .</head><label>67</label><figDesc>Fig. 6. Decomposing transactions into triplets involving their internal Bitcoin addresses.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 Fig. 8 .</head><label>68</label><figDesc>Fig. 8. Interpretations for the different regions a given (Bitcoin address, IP) pairing could map to on the CI × CO plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>B. If a pairing (b, i) maps to Region B (C I &gt; 50 % ∧ C O &gt; 50 %), we can say that the high C O and C I indicate that IP i created both the majority of transactions sending money to Bitcoin address b (i.e. where b was an output) as well as the majority of transactions spending funds tied to b. This would usually occur when a user reuses the same Bitcoin address for making payments and receiving change and thus very likely implies an ownership relationship between the IP and the Bitcoin address. Region C. If a pairing (b, i) maps to Region C (C I &gt; 50 % ∧ C O ≤ 50 %), we know due to the high C I that IP i created the majority of transactions drawing on funds from b; however, the low C O signifies that the IP did not create many transactions that involved receiving money using b. Such a combination would occur if a user often sends money from b but does not reuse it for receiving change. Thus, b would be paired as an output with anyone paying the user, but not with the user himself. We classify pairings in Region C as ownership relationships. Region D. Pairings in Region D (C I ≤ 50 % ∧ C O ≤ 50 %) do not have high C I nor C O , which implies that there may be no association between the Bitcoin addresses and IPs involved. Such pairings are likely the result of noise coming from incorrect ownership hypotheses in Phase 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Pattern 1 and 2 : 8 .Pattern 3 :</head><label>283</label><figDesc>Keep pairing (b, i) iff all the following are met: 1. N I (b, i) ≥ 5 or 10, depending on the computation being run. 2. C I &gt; threshold, where threshold is varied from 50 % to 100 %. This corresponds to pairings with a support count of at least 5 or 10 that are found in Regions A and B of Fig. Relay Keep pairing (b, i) iff all the following are met: 1. N I (b, i) ≥ 5 or 10, depending on the computation being run. 2. N O (b, i) ≥ 5 or 10, depending on the computation being run. 3. C I &gt; threshold, where threshold is varied from 50 % to 100 %. 4. C O &gt; threshold, where threshold is varied from 50 % to 100 %.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Types of ignored transactions</figDesc><table><row><cell>Type</cell><cell>Description</cell></row><row><cell>Repeated</cell><cell>The transaction has already been relayed recently</cell></row><row><cell>Old</cell><cell>The transaction is already in the main block chain</cell></row><row><cell cols="2">Double-spend The transaction attempts to claim an output already claimed by a</cell></row><row><cell></cell><cell>previous transaction</cell></row><row><cell cols="2">Bad signature The input signature(s) cannot be verified (e.g. attempting to spend</cell></row><row><cell></cell><cell>someone else's coins)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 .</head><label>2</label><figDesc>The table shows how the 3 transactions from</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 .</head><label>3</label><figDesc>We see that the vast majority of pairings found in the ownership regions (Regions B and C for Relay Patterns 1 and 2, and Region B for Relay Pattern 3) of each dataset had a support count of 1. Choosing 5 and 10 as thresholds allows us to conservatively eliminate more than 97 % of potentially erroneous pairings.</figDesc><table><row><cell>Dataset</cell><cell cols="2">Total ownership Probability of pairings</cell><cell>Probability of pairings</cell><cell>Probability of pairings</cell></row><row><cell></cell><cell>region pairings</cell><cell cols="3">with support count = 1 with support count ≥ 5 with support count ≥ 10</cell></row><row><cell cols="2">Relay pattern 1 1,678,390</cell><cell>99.411 %</cell><cell>0.012 %</cell><cell>0.004 %</cell></row><row><cell>Relay pattern 2</cell><cell>71,714</cell><cell>91.027 %</cell><cell>2.047 %</cell><cell>1.051 %</cell></row><row><cell>Relay pattern 3</cell><cell>27,708</cell><cell>76.732 %</cell><cell>3.190 %</cell><cell>1.660 %</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 .</head><label>4</label><figDesc>These tables indicate the number of pairings found in each dataset which met the criteria for ownership.</figDesc><table><row><cell>Support ≥ 5</cell><cell cols="3"># Ownership Pairings Found</cell><cell>Support ≥ 10</cell><cell cols="3"># Ownership Pairings Found</cell></row><row><cell></cell><cell>Relay</cell><cell>Relay</cell><cell>Relay</cell><cell></cell><cell>Relay</cell><cell>Relay</cell><cell>Relay</cell></row><row><cell cols="3">Confidence Pattern 1 Pattern 2</cell><cell>Pattern 3</cell><cell cols="3">Confidence Pattern 1 Pattern 2</cell><cell>Pattern 3</cell></row><row><cell cols="4">Threshold (Normal) (Anomalous) (Anomalous)</cell><cell cols="4">Threshold (Normal) (Anomalous) (Anomalous)</cell></row><row><cell>&gt; 50%</cell><cell>178</cell><cell>591</cell><cell>393</cell><cell>&gt; 50%</cell><cell>53</cell><cell>194</cell><cell>196</cell></row><row><cell>&gt; 60%</cell><cell>104</cell><cell>585</cell><cell>362</cell><cell>&gt; 60%</cell><cell>22</cell><cell>191</cell><cell>183</cell></row><row><cell>&gt; 70%</cell><cell>68</cell><cell>577</cell><cell>332</cell><cell>&gt; 70%</cell><cell>9</cell><cell>190</cell><cell>165</cell></row><row><cell>&gt; 80%</cell><cell>39</cell><cell>565</cell><cell>288</cell><cell>&gt; 80%</cell><cell>5</cell><cell>187</cell><cell>139</cell></row><row><cell>&gt; 90%</cell><cell>19</cell><cell>544</cell><cell>243</cell><cell>&gt; 90%</cell><cell>4</cell><cell>180</cell><cell>121</cell></row><row><cell>&gt; 95%</cell><cell>17</cell><cell>542</cell><cell>218</cell><cell>&gt; 95%</cell><cell>2</cell><cell>178</cell><cell>101</cell></row><row><cell>&gt; 99%</cell><cell>16</cell><cell>538</cell><cell>188</cell><cell>&gt; 99%</cell><cell>1</cell><cell>174</cell><cell>77</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5 .</head><label>5</label><figDesc>These tables indicate the number of unique owner IPs among the final ownership pairings from Table4.</figDesc><table><row><cell>Support ≥ 5</cell><cell></cell><cell cols="2"># Unique "Owners"</cell><cell>Support ≥ 10</cell><cell></cell><cell cols="2"># Unique "Owners"</cell></row><row><cell></cell><cell>Relay</cell><cell>Relay</cell><cell>Relay</cell><cell></cell><cell>Relay</cell><cell>Relay</cell><cell>Relay</cell></row><row><cell cols="3">Confidence Pattern 1 Pattern 2</cell><cell>Pattern 3</cell><cell cols="3">Confidence Pattern 1 Pattern 2</cell><cell>Pattern 3</cell></row><row><cell cols="4">Threshold (Normal) (Anomalous) (Anomalous)</cell><cell cols="4">Threshold (Normal) (Anomalous) (Anomalous)</cell></row><row><cell>&gt; 50%</cell><cell>50</cell><cell>168</cell><cell>184</cell><cell>&gt; 50%</cell><cell>17</cell><cell>89</cell><cell>120</cell></row><row><cell>&gt; 60%</cell><cell>35</cell><cell>167</cell><cell>170</cell><cell>&gt; 60%</cell><cell>10</cell><cell>88</cell><cell>108</cell></row><row><cell>&gt; 70%</cell><cell>28</cell><cell>165</cell><cell>157</cell><cell>&gt; 70%</cell><cell>6</cell><cell>88</cell><cell>99</cell></row><row><cell>&gt; 80%</cell><cell>19</cell><cell>163</cell><cell>139</cell><cell>&gt; 80%</cell><cell>4</cell><cell>87</cell><cell>83</cell></row><row><cell>&gt; 90%</cell><cell>13</cell><cell>162</cell><cell>115</cell><cell>&gt; 90%</cell><cell>4</cell><cell>87</cell><cell>72</cell></row><row><cell>&gt; 95%</cell><cell>12</cell><cell>162</cell><cell>106</cell><cell>&gt; 95%</cell><cell>2</cell><cell>87</cell><cell>63</cell></row><row><cell>&gt; 99%</cell><cell>11</cell><cell>161</cell><cell>92</cell><cell>&gt; 99%</cell><cell>1</cell><cell>86</cell><cell>50</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Omitting certain details, a Bitcoin address is simply a public key to which a number of transformations and hashes have been applied. Thus, the terms Bitcoin address and public key can be used interchangeably.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>We note that this does not mean the creator owns the funds associated with that Bitcoin address (see discussion on eWallets in Sect. 7).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>We discuss why this assumption is flawed in Sect. 7.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>We avoided inbound connections to prevent connecting to Tor/I2P nodes. A listening Bitcoin peer cannot be hidden by Tor or I2P since these technologies only protect the anonymity of people making outbound connections.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. This material is based upon work supported by the National Science Foundation Grants No. CNS-1228700 and CNS-0905447. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Bitcoin: a peer-to-peer electronic cash system</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nakamoto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">2012</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<author>
			<persName><forename type="first">J</forename><surname>Matonis</surname></persName>
		</author>
		<ptr target="http://www.forbes.com/sites/jonmatonis/2012/08/20/wikileaks-bypasses-financial-blockade-with-bitcoin/" />
	</analytic>
	<monogr>
		<title level="m">WikiLeaks bypasses financial blockade with bitcoin</title>
		<imprint>
			<date type="published" when="2012-08-20">20 Aug 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Silk road: not your father&apos;s Amazon</title>
		<author>
			<persName><surname>Npr</surname></persName>
		</author>
		<ptr target="http://www.npr.org/2011/06/12/137138008/silk-road-not-your-fathers-amazon-com" />
		<imprint>
			<date type="published" when="2011-06">Jun 2011</date>
			<biblScope unit="volume">12</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Roy</surname></persName>
		</author>
		<ptr target="http://nation.time.com/2013/10/02/alleged-silk-road-proprietor-ross-william-ulbricht-arrested-3-6m-in-bitcoin-seized/" />
		<title level="m">Feds raid online drug market silk road</title>
		<imprint>
			<date type="published" when="2013-10-02">2 Oct 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Black Ops of TCP/IP 2011</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kaminsky</surname></persName>
		</author>
		<ptr target="http://www.slideshare.net/dakami/black-ops-of-tcpip-2011-black-hat-usa-2011" />
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Black Hat USA</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">RIAA v. Verizon: applying the subpoena provision of the DMCA, Berkeley Tech</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">LJ</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page">405</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Fall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Stevens</surname></persName>
		</author>
		<title level="m">The Protocols</title>
		<meeting><address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An analysis of anonymity in the bitcoin system</title>
		<author>
			<persName><forename type="first">F</forename><surname>Reid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Harrigan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security and Privacy in Social Networks</title>
		<editor>
			<persName><forename type="first">Y</forename><surname>Altshuler</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Y</forename><surname>Elovici</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Cremers</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Aharony</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Pentland</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="197" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Quantitative analysis of the full bitcoin transaction graph</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IACR Cryptology ePrint Archive</title>
		<imprint>
			<biblScope unit="volume">2012</biblScope>
			<biblScope unit="page">584</biblScope>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Evaluating user privacy in bitcoin</title>
		<author>
			<persName><forename type="first">E</forename><surname>Androulaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Karame</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Roeschlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Scherer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Capkun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IACR Cryptology ePrint Archive</title>
		<imprint>
			<biblScope unit="volume">2012</biblScope>
			<biblScope unit="page">596</biblScope>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A fistful of bitcoins: characterizing payments among men with no names</title>
		<author>
			<persName><forename type="first">S</forename><surname>Meiklejohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pomarole</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Jordan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Levchenko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mccoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Voelker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 Conference on Internet Measurement Conference</title>
		<meeting>the 2013 Conference on Internet Measurement Conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013-10">October 2013</date>
			<biblScope unit="page" from="127" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Structure and anonymity of the bitcoin transaction graph</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ober</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Katzenbeisser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hamacher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Internet</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="237" to="250" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Zerocoin: anonymous distributed e-cash from bitcoin</title>
		<author>
			<persName><forename type="first">I</forename><surname>Miers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Rubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Security and Privacy</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Bitter to better -how to make bitcoin a better currency</title>
		<author>
			<persName><forename type="first">S</forename><surname>Barber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Uzun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FC 2012</title>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Keromytis</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">7397</biblScope>
			<biblScope unit="page" from="399" to="414" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Beware the middleman: empirical analysis of bitcoinexchange risk</title>
		<author>
			<persName><forename type="first">T</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Christin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FC 2013</title>
		<editor>
			<persName><forename type="first">A.-R</forename><surname>Sadeghi</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">7859</biblScope>
			<biblScope unit="page" from="25" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title/>
		<ptr target="https://en.bitcoin.it/wiki/RawTransactions" />
	</analytic>
	<monogr>
		<title level="j">Raw Transactions</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<ptr target="https://en.bitcoin.it/wiki/NetworkStandardRelayingSection" />
	</analytic>
	<monogr>
		<title level="j">Network</title>
		<imprint>
			<date type="published" when="2013-09-02">2 Sept 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Mining association rules between sets of items in large databases</title>
		<author>
			<persName><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Imielinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Swami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGMOD Record</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="207" to="216" />
			<date type="published" when="1993">1993</date>
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<ptr target="http://blockchain.info/pushtx" />
		<title level="m">Broadcast Transaction</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
