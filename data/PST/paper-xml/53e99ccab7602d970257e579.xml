<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Intractability of Computing the Minimum Distance of a Code</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Alexander</forename><surname>Vardy</surname></persName>
						</author>
						<title level="a" type="main">The Intractability of Computing the Minimum Distance of a Code</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8834CA444E1863FF09262FC342940654</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Complexity</term>
					<term>linear codes</term>
					<term>minimum distance</term>
					<term>NP-completeness</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>It is shown that the problem of computing the minimum distance of a binary linear code is NP-hard, and the corresponding decision problem is NP-complete. This result constitutes a proof of the conjecture of Berlekamp, McEliece, and van Tilborg, dating back to 1978. Extensions and applications of this result to other problems in coding theory are discussed.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>of would imply that computing the minimum distance of a binary linear code is NP-hard. Indeed, let be a linear code defined by the parity-check matrix , and let denote the minimum distance of If is known, then one can answer the question of by simply comparing and On the other hand, if one can solve , then one can also find by successively running an algorithm for with until the first affirmative answer is obtained.</p><p>The MINIMUM DISTANCE problem has a long and convoluted history. To the best of our knowledge, it was first mentioned by Dominic Welsh at an Oxford Conference on Combinatorial Mathematics in 1969. In the printed version <ref type="bibr" target="#b38">[39]</ref> of his paper, Welsh calls for an efficient algorithm to find the shortest cycle in a linear matroid over a field It is easy to see that for GF , this is equivalent to finding the minimum-weight codeword in a linear code over GF Hence the NP-completeness of MINIMUM DISTANCE implies that a polynomial-time algorithm for the problem posed by Welsh <ref type="bibr" target="#b38">[39]</ref> is unlikely to exist. Following the publication by Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref> of their conjecture, the MINIMUM DISTANCE problem was mentioned as open by <ref type="bibr">Garey and Johnson in [20,</ref><ref type="bibr">p. 280</ref>]. Three years later, it was posed by Johnson <ref type="bibr" target="#b22">[23]</ref> as an "open problem of the month" in his ongoing guide to NP-completeness column. The problem remained open despite repeated calls for its resolution by Johnson <ref type="bibr" target="#b23">[24]</ref> and others.</p><p>Determining whether computation of the minimum Hamming distance of a linear code is NP-hard is important not only because this is a long-standing open problem. There are several more compelling reasons. First, for a host of problems in coding theory there is an easy reduction from MINIMUM DISTANCE. A few examples of such problems are presented in Section V. Thus if MINIMUM DISTANCE is computationally intractable, then all these problems are intractable as well. Secondly, it is known that the parameters of almost all linear codes attain the Gilbert-Varshamov bound <ref type="bibr">[34, p. 77</ref>]. Hence it is easy to devise randomized algorithms that with high probability yield (long) linear codes with large distance.</p><p>If there were a polynomial-time procedure for computing the minimum distance of a linear code, these randomized algorithms could be used for code construction. It is, therefore, important to know that such a polynomial-time procedure is unlikely to exist.</p><p>Due to these and other reasons, the conjecture of Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref> sparked a remarkable amount of work, most of it unpublished. In particular, MAXIMUM-LIKELIHOOD DECODING was shown to remain hard in more general contexts: with unlimited pre-processing <ref type="bibr" target="#b11">[12]</ref>, under approximation within a given constant factor <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b32">[33]</ref>, and over an arbitrary (fixed) alphabet <ref type="bibr" target="#b6">[7]</ref>. Furthermore, in an attempt to establish the NP-completeness of MINIMUM DISTANCE, a great number of closely related problems were proved to be NPcomplete. For example, the problems of finding the maximum weight of a codeword, determining the existence of a codeword of weight , and computing the minimum weight of a codeword which is nonzero in a specified position, were shown to be NP-hard by Ntafos and Hakimi <ref type="bibr" target="#b28">[29]</ref>, Calderbank and Shor (see <ref type="bibr" target="#b12">[13]</ref>), and Lobstein and Cohen <ref type="bibr" target="#b25">[26]</ref>, respectively. A brief overview of the plurality of problems of this kind is provided, for completeness, in the next section. All these problems are tantalizingly close to MINIMUM DISTANCE. Nevertheless, the proof of the original conjecture of Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref> remained elusive for almost two decades.</p><p>Our main goal in this paper is to prove that MINIMUM DISTANCE is NP-complete. To this end, we exhibit a polynomial transformation to MINIMUM DISTANCE from MAXIMUM-LIKELIHOOD DECODING. Thus we settle the conjecture of <ref type="bibr" target="#b8">[9]</ref> in the affirmative, using a reduction from the main result of <ref type="bibr" target="#b8">[9]</ref>.</p><p>We start with some notation and overview of relevant background in Section II. We also show in Section II that MAXIMUM-LIKELIHOOD DECODING remains NP-complete under certain minor restrictions, and reformulate this problem as the finite-field version of SUBSET SUM, a well-known NP-complete problem <ref type="bibr">[20, p. 223</ref>]. In Section III, we use certain simple alternants <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b27">[28]</ref> to show that computing the minimum distance for the class of linear codes over a field of characteristic is NP-hard, and the corresponding decision problem MINIMUM DISTANCE OVER GF , in short MD , is NP-complete. Our proof is based on a polynomial transformation from MAXIMUM-LIKELIHOOD DECODING to MD This, however, does not prove that MINIMUM DISTANCE is NP-complete, since the set of possible inputs to MINIMUM DISTANCE is a small subset of the set of possible inputs to MD Therefore, in Section IV, we map the code over GF , constructed in Section III, onto a binary code , in such a way that the minimum distance of can be determined from the minimum distance of</p><p>The particular mapping used employs a simple construction of low-rate binary codes, which was pointed out to us by Noga Alon <ref type="bibr" target="#b2">[3]</ref>. Since the length of is bounded by a polynomial in the length of , and the mapping itself can be accomplished in polynomial time, this completes the proof of the NP-completeness of MINIMUM DISTANCE. We conclude the paper in Section V, by showing that MINIMUM DISTANCE is NP-complete for linear codes over an arbitrary, fixed, finite field. Furthermore, several problems are shown to be NP-hard in Section V, using a reduction from MINIMUM DISTANCE. Finally, two important problems in coding theory that are closely related to MINIMUM DISTANCE are also briefly discussed in Section V.</p><p>One last remark in this section: we point out that the hardness of MINIMUM DISTANCE can be viewed as an essentially combinatorial question. Indeed, consider the following graphtheoretic decision problem: Problem: EVEN VERTEX SET Instance: A graph and an integer Question: Is there a nonempty subset of at most vertices, such that every vertex has an even number of vertices of among its neighbors?</p><p>It is easy to see that the NP-completeness of MINIMUM DISTANCE immediately implies that EVEN VERTEX SET is NP-complete. In fact, MINIMUM DISTANCE is essentially a restriction of EVEN VERTEX SET to bipartite graphs, obtained by identifying a parity-check matrix with an adjacency matrix of a bipartite (Tanner) graph -see <ref type="bibr" target="#b15">[16]</ref> for more details. Thus it is interesting to observe that algebraic techniques deeply rooted in coding theory, such as construction of MDS codes via alternants <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b29">[30]</ref> and concatenated coding <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b18">[19]</ref>, can be employed to answer a purely combinatorial question.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PRELIMINARIES</head><p>In the next subsection, we briefly survey some of the prior work motivated by the conjecture of Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref>. In a later subsection, we consider the MAXIMUM-LIKELIHOOD DECODING problem, and show that it remains NP-complete under certain, not too restrictive, conditions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. NP-Complete Problems Related to MINIMUM DISTANCE</head><p>The following eight problems, closely related to MINIMUM DISTANCE, are known to be NP-complete. These problems are included herein for completeness. They are listed in chronological order, with appropriate references.</p><p>First, as noted in <ref type="bibr" target="#b8">[9]</ref>, MINIMUM DISTANCE is a variation of WEIGHT DISTRIBUTION, obtained by replacing the phrase "of weight " with the phrase "of weight " It is also easy to see that MINIMUM DISTANCE is a special case of MAXIMUM-LIKELIHOOD DECODING, obtained by restricting the input to and requiring that is nonzero. Thus the problem that Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref> conjectured to be NP-complete is in many ways related to the two problems that they proved are NP-complete.</p><p>Three other computational tasks, that even more closely resemble MINIMUM DISTANCE, were shown to be NP-hard by Ntafos and Hakimi <ref type="bibr" target="#b28">[29]</ref>, namely: finding a codeword of maximum weight, finding a codeword of minimum weight which is not a multiple of , and finding a codeword whose weight is in the range Formally, the problems:</p><p>Instance: A binary matrix and an integer Question: Is there a vector of weight such that ?</p><p>Instance: A binary matrix an integer and an integer Question: Is there a nonzero vector of weight such that and ?</p><p>Instance: A binary matrix , integers Question: Is there a vector such that and ? are NP-complete <ref type="bibr" target="#b28">[29]</ref>. All the three problems are variations of the WEIGHT DISTRIBUTION problem; they are all somewhat weaker than this problem, in the sense that the existence of a polynomial-time algorithm for WEIGHT DISTRIBUTION directly implies the existence of a polynomial-time algorithm for each of the three problems (of course, the converse is also true indirectly, since all these problems are NP-complete). Along similar lines, Calderbank and Shor (see Diaconis and Graham <ref type="bibr" target="#b12">[13]</ref>) showed that Instance: A binary matrix , where is a positive even integer. Question: Is there a vector of weight , such that ?</p><p>is an NP-complete problem. That is, WEIGHT DISTRIBUTION remains NP-complete even if the input is restricted to On the other hand, Lobstein and Cohen <ref type="bibr" target="#b25">[26]</ref> considered a variation of MAXIMUM-LIKELIHOOD DECODING that is deceptively close to MINIMUM DISTANCE: they showed that finding a codeword of minimum weight among all the codewords that are nonzero on the first position is NP-hard. Formally, the problem: Instance: A binary matrix and an integer Question: Is there a vector of weight , such that and ?</p><p>is NP-complete. Lobstein and Cohen <ref type="bibr" target="#b25">[26]</ref> also used a polynomial transformation from -DIMENSIONAL MATCHING (cf. <ref type="bibr">[20, p. 58]</ref>) to show that the problem:</p><p>Instance: A binary matrix an integer and an integer Question: Is there a vector of weight , such that and is NP-complete. It is pointed out in <ref type="bibr" target="#b25">[26]</ref> that all the eight problems are strikingly similar to MINIMUM DISTANCE, and hence provide further evidence to support the conjecture of <ref type="bibr" target="#b8">[9]</ref> that MINIMUM DISTANCE is NP-complete. The ensemble of all these problems, however, does not suffice to prove this conjecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Some Observations on MAXIMUM-LIKELIHOOD DECODING</head><p>As mentioned in the Introduction, our proof of the NPcompleteness of MINIMUM DISTANCE is based on a polynomial transformation from MAXIMUM-LIKELIHOOD DECODING. The particular transformation we will use places certain minor restrictions on MAXIMUM-LIKELIHOOD DECODING. Hence, our goal herein is to observe that MAXIMUM-LIKELIHOOD DECODING remains NP-complete under these restrictions.</p><p>First, we slightly modify the question of MAXIMUM-LIKELIHOOD DECODING by requiring that the solution to is nonzero. This restriction makes a difference only for , for if then obviously any solution to is nonzero. We therefore observe that the proof in <ref type="bibr" target="#b8">[9]</ref> of the NP-completeness of MAXIMUM-LIKELIHOOD DECODING, based on the transformation from THREE-DIMENSIONAL MATCHING, uses only the special case where Hence the same proof establishes that the minor variation of MAXIMUM-LIKELIHOOD DECODING discussed above is also NP-complete.</p><p>Next, as pointed out in <ref type="bibr" target="#b8">[9]</ref>, one may assume without loss of generality that the matrix at the input to MAXIMUM-LIKELIHOOD DECODING has full row rank. This implies that the columns of contain a basis for , and we may further assume w.l.o.g. that Indeed, if is full-rank and</p><p>, then the answer to the question of MAXIMUM-LIKELIHOOD DECODING is trivially "Yes."</p><p>We also assume w.l.o.g. that the columns of are distinct. If this is not so, then we can form (in polynomial time) an matrix by retaining a single representative from each set of equal columns of It is easy to see that has a solution of weight at most , if and only if so does , providing But the case may be safely excluded from the input, as discussed above. The assumption that has distinct columns further implies that These are all the assumptions that we will need.</p><p>The key idea in the transformation from MAXIMUM-LIKELIHOOD DECODING to MINIMUM DISTANCE is to regard the columns of the parity-check matrix as elements in the finite field GF</p><p>The syndrome vector may be also regarded as an element in GF With this notation, taking into account the restrictions discussed in the foregoing paragraphs, we may rephrase MAXIMUM-LIKELIHOOD DECODING as the finite-field version of SUBSET SUM (cf. According to the discussion in this subsection, the NPcompleteness of MAXIMUM-LIKELIHOOD DECODING immediately implies that FINITE-FIELD SUBSET SUM is NP-complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. NP-COMPLETENESS FOR CODES OF CHARACTERISTIC TWO</head><p>Given the input and to FINITE-FIELD SUBSET SUM, we first construct a series of matrices which may be thought of as parity-check matrices for the codes over GF These matrices are constructed in such a way (see Lemma 1 below) that the minimum distance of is equal to if for some Otherwise, the minimum distance of is equal to , and is an MDS code <ref type="bibr">[27, p. 317</ref>]. The matrix is given by <ref type="bibr" target="#b0">(1)</ref> and it is easy to see that the minimum distance of is either or , according as for some or not. In general, for the matrix is given by .</p><formula xml:id="formula_0">. . . . . . . . . . . . . . (<label>2</label></formula><formula xml:id="formula_1">)</formula><p>Notice that for all the matrix has columns and linearly independent rows. Hence the dimension of is , and its minimum distance is at most , by the Singleton bound <ref type="bibr">[27, p. 33]</ref>.</p><p>Lemma 1: Let denote the minimum distance of Then , if for some and otherwise.</p><p>Proof: Let be a square matrix consisting of some columns of If the last column of , namely, , is not among the columns of , then is a Vandermonde matrix <ref type="bibr">[27, p. 116]</ref>. Since are all distinct, is nonsingular in this case. Otherwise, assuming w.l.o.g. that is the last column of , we expand along this column to obtain   where with respect to a matrix denotes the determinant. The first determinant on the right-hand side of the above expression is again a Vandermonde determinant, while the second one is a simple first-order alternant <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b27">[28]</ref>. Alternants were studied by Muir <ref type="bibr" target="#b27">[28]</ref> and many others. In general, it is well known that</p><formula xml:id="formula_2">1 1 11 1 1 X 1 X 2 11 1 X k . . . . . . . . . . . . X j01 1 X j01 2 11 1 X j01 k X j+1 1 X j+1 2 111 X j+1 k . . . . . . . . . . . . X k 1 X k 2 11 1 X k k = S k0j (X X X) 1i &lt;i k (X i 0 X i )</formula><p>for where is the th elementary symmetric function in the indeterminates . A proof of the above expression may be found in Muir <ref type="bibr">[28,</ref>  We observe that the MDS codes discussed in Lemma 1 are of independent interest; they were studied by Roth and Lempel in <ref type="bibr" target="#b29">[30]</ref>. We also point out that the counterpart of Lemma 1 over the positive integers was proved by Khachiyan in <ref type="bibr" target="#b24">[25]</ref>.</p><p>In our context, it follows immediately from Lemma 1 that if we could find the minimum distance of a linear code over a field of characteristic in polynomial time, we could solve FINITE-FIELD SUBSET SUM in polynomial time. Formally, consider the following problem: Problem: MINIMUM DISTANCE OVER GF Instance: An integer , an matrix over GF , an integer Question: Is there a nonzero vector of length over GF , such that and ?</p><p>One might argue that the operations in MINIMUM DISTANCE over GF , in short MD , are over the finite field GF , whereas the operations in MAXIMUM-LIKELIHOOD DECODING are over GF If one were to implement the operations in GF using a table of the field, for example, then this would require exponential memory. However, if we implement the operations in GF as polynomial addition and multiplication modulo an irreducible polynomial of degree , then only linear memory is required, and each operation in GF can be carried out in polynomial time using operations in GF Proposition 2: Existence of a polynomial-time algorithm for MD implies the existence of a polynomial-time algorithm for FINITE-FIELD SUBSET SUM.</p><p>Proof: Suppose that is a polynomial-time algorithm for MD Then, given the input to FINITE-FIELD SUBSET SUM, we construct the matrices as in ( <ref type="formula">1</ref>) and ( <ref type="formula" target="#formula_0">2</ref>). We then run with and for It follows from Lemma 1 that if returns "Yes" in at least one of these queries, then the answer to the question of FINITE-FIELD SUBSET SUM is "Yes," otherwise the answer is "No."</p><p>It is also easy to see that in each of the queries, the length of the input to MD is bounded by a polynomial in the length of the input to FINITE-FIELD SUBSET SUM. If the input and to FINITE-FIELD SUBSET SUM takes bits, then the number of bits required to specify each matrix is , and the number of bits required to specify all of them is at most Furthermore, each of these matrices can be obviously constructed in time from using operations in GF</p><p>The only thing that is not entirely obvious is that GF itself, namely, an irreducible polynomial of degree that defines GF , can be constructed in deterministic polynomial time. However, Shoup <ref type="bibr" target="#b31">[32]</ref> provides a deterministic algorithm for this purpose, whose complexity is strictly less than operations in GF</p><p>The procedure used in the proof of Proposition 2 is called "Turing reduction" in Garey and Johnson <ref type="bibr" target="#b19">[20]</ref>. It uses a polynomial number (namely , in our case) of queries to an oracle for MD Loosely speaking, a polynomial transformation is different from a Turing reduction in that it allows only a single query to an oracle. Turing reduction is sufficient to show that a problem is NP-hard, but not necessarily NP-complete, at least according to how this terminology is used in Garey and Johnson <ref type="bibr" target="#b19">[20]</ref>. To prove that MD is NP-complete, we need a polynomial transformation.</p><p>There are at least two alternative ways to convert our proof of Proposition 2 into a polynomial transformation. One way is to reduce directly from THREE-DIMENSIONAL MATCHING. The key observation here is that the reduction from THREE-DIMENSIONAL MATCHING to MAXIMUM-LIKELIHOOD DECODING in Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref> holds without change if we replace the phrase "of weight " with the phrase "of weight exactly " in the question of MAXIMUM-LIKELIHOOD DECODING. This eliminates the need for multiple queries to in the proof of Proposition 2, and establishes a polynomial transformation from THREE-DIMENSIONAL MATCHING to MD However, we find some intrinsic merit in reducing to MD , and hence also to MINIMUM DISTANCE, from MAXIMUM-LIKELIHOOD DECODING rather than from THREE-DIMENSIONAL MATCHING. Therefore, we now describe a simple construction which shows that a single query to would suffice to solve FINITE-FIELD SUBSET SUM, and hence also MAXIMUM-LIKELIHOOD DECODING.</p><p>As before, given and we first construct the matrices given by ( <ref type="formula">1</ref>) and ( <ref type="formula" target="#formula_0">2</ref>), which define the codes Next, for we let denote the linear code obtained by repeating each codeword of exactly times. A parity-check matrix for is given by . . . . . .</p><p>(</p><formula xml:id="formula_3">)<label>5</label></formula><p>where is the identity matrix and blanks denote zeros. Clearly, the length of is , its dimension is , and its minimum distance is which is equal to either or by Lemma 1. The integers are defined, recursively, as follows:</p><p>Finally, we define the code over GF as the direct sum of the codes Thus a parity-check matrix for is given by . . .</p><p>where are given by ( <ref type="formula" target="#formula_3">5</ref>), and blanks again denote zeros. Clearly, the length of is its dimension is and its minimum distance is given by We now show that the number of bits required to specify is bounded by a polynomial in It is easy to see from (7) that and, therefore, Using the relation which follows from <ref type="bibr" target="#b6">(7)</ref>, it can be readily verified by (reverse) induction that for all , we have (</p><p>Substituting in ( <ref type="formula" target="#formula_6">9</ref>) yields <ref type="bibr" target="#b9">(10)</ref> where the last two inequalities follow from <ref type="bibr" target="#b5">(6)</ref>. Hence , and the number of bits required to specify is at most Since the expressions in ( <ref type="formula" target="#formula_3">5</ref>) and ( <ref type="formula" target="#formula_5">8</ref>) are straightforward, this argument is all we need to prove that can be constructed from and in polynomial time. We are now ready to prove that FINITE-FIELD SUBSET SUM can be solved using only a single query to an oracle for MD Now, suppose that the answer to the question of FINITE-FIELD SUBSET SUM is "Yes." Then it follows from Lemma 1 that for at least one Therefore, <ref type="bibr" target="#b12">(13)</ref> in view of ( <ref type="formula">11</ref>), and will necessarily return "Yes." On the other hand, suppose that the answer to the question of FINITE-FIELD SUBSET SUM is "No." Then, by Lemma 1, we have for all and <ref type="bibr" target="#b13">(14)</ref> where the third equality follows from <ref type="bibr" target="#b11">(12)</ref>, and the last inequality is precisely <ref type="bibr" target="#b9">(10)</ref>. Hence, in this case, will necessarily return "No."</p><p>Obviously, the NP-completeness of MD is a weaker result than the NP-completeness of MINIMUM DISTANCE, since the set of inputs to MINIMUM DISTANCE is a special case of the set of inputs to MD However, Theorem 3 is a useful stepping stone in the proof of the NP-completeness of MINIMUM DISTANCE, which is the subject of the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. NP-COMPLETENESS FOR BINARY CODES</head><p>Given the transformation from FINITE-FIELD SUBSET SUM to MD in Theorem 3, the NP-completeness of MINIMUM DISTANCE would follow if we could map, in polynomial time, the code constructed in (8) onto a binary linear code in such a way that the minimum distance of could be determined from the minimum distance of A mapping of this kind is exhibited in this section.</p><p>Certain simple mappings from codes over GF to binary codes are well known <ref type="bibr">[27, pp. 207-209]</ref>; however, none of these mappings is adequate for our purposes. For example, we could let be the binary subfield subcode of , as is commonly done in obtaining BCH codes from Reed-Solomon codes. In this case Alternatively, one could let be the trace code (cf. [27, p. 208]) of , in which case Yet another option is to represent each element of GF as a binary -tuple (cf. [27, p. 298]), using a fixed basis for GF over GF In this case, we again have All these mappings establish bounds on , and it can be shown that these bounds are reasonably tight. However, such mappings are not sufficient to determine the value of exactly, which is what we need in the present context.</p><p>Instead, we will employ a concatenated, or multilevel, coding scheme <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b18">[19]</ref>, using as the outer code. We let denote the binary linear code used as the inner code in the concatenation: namely, we require that and represent each element of GF by a codeword of Specifically, fix a basis for GF over GF and a generator matrix for Then each element of GF is mapped onto <ref type="bibr" target="#b14">(15)</ref> which is a binary -tuple. When this mapping is applied to , the result is a binary linear code of length and dimension It is obvious that a paritycheck matrix for can be constructed in polynomial time from a parity-check matrix for and a generator matrix for Henceforth, we let denote the minimum distance of the concatenated code constructed in this manner. We note that Lemma 4 is just a variation of the well-known Plotkin bound <ref type="bibr">[27, p. 41</ref>]. Yet, it provides exactly the kind of instrument we need for our purposes. Indeed, suppose that as in <ref type="bibr" target="#b12">(13)</ref>, where is defined by ( <ref type="formula" target="#formula_4">6</ref>) and <ref type="bibr" target="#b6">(7)</ref>. Then Lemma 4 implies that <ref type="bibr" target="#b15">(16)</ref> On the other hand, suppose that as in <ref type="bibr" target="#b13">(14)</ref>. Then, since by construction, we obviously have <ref type="bibr" target="#b16">(17)</ref> In the present context, one is more interested in the reverse interpretation of the bounds in ( <ref type="formula">16</ref>) and <ref type="bibr" target="#b16">(17)</ref>. Namely, given (say, by an oracle for MINIMUM DISTANCE), we would like to distinguish between the two possibilities for Fortunately, if</p><p>then the right-hand side of ( <ref type="formula">17</ref>) is strictly greater than the righthand side of ( <ref type="formula">16</ref>). Thus our goal can be achieved, provided the minimum distance of is sufficiently large. We observe that in of <ref type="bibr" target="#b9">(10)</ref>, and as discussed in Section II-B. Thus in order to satisfy <ref type="bibr" target="#b17">(18)</ref>, it would certainly suffice to require that <ref type="bibr" target="#b18">(19)</ref> These considerations may be translated into a specific set of conditions relating to the code used as the inner code in our construction: P1: The length of is bounded by a polynomial in , and a generator matrix for can be constructed in polynomial time. P2: The dimension of is at least (if is strictly greater than , then any subcode of will suffice for our purposes).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P3:</head><p>The ratio of the minimum distance of to its length satisfies <ref type="bibr" target="#b18">(19)</ref>.</p><p>Less formally, what we need is a sequence of binary linear codes, whose relative distance approaches the Plotkin bound , and whose rate tends to zero only polynomially fast as a function of their dimension. Furthermore, we should be able to construct each code in the sequence in polynomial time. This rules out codes that attain the Gilbert-Varshamov bound <ref type="bibr">[27, p. 557]</ref>, as well as Zyablov codes <ref type="bibr" target="#b39">[40]</ref>, since the complexity of Zyablov's construction <ref type="bibr" target="#b39">[40]</ref> becomes exponential at low rates. Nevertheless, many other known constructions of asymptotically good families of low-rate codes suffice for our purposes: concatenated binary codes constructed in <ref type="bibr" target="#b37">[38]</ref> from Drinfeld's modular curves, low-rate codes constructed in <ref type="bibr" target="#b30">[31]</ref> using a variation of Justesen's concatenation, and codes constructed using expander graphs in <ref type="bibr" target="#b3">[4]</ref> are just a few examples. As pointed out by a referee, duals of the binary BCH codes also have the required parameters, in view of the Carlitz-Uchiyama bound <ref type="bibr">[27, p. 281]</ref>. In what follows, however, we shall use a simple construction, suggested by Noga Alon <ref type="bibr" target="#b2">[3]</ref>, which is concise enough to be completely described in one paragraph.</p><p>Alon's Construction: Given an integer and a nonnegative integer , consider a concatenation of the Reed-Solomon code over GF with the binary simplex code <ref type="bibr">[27, p. 30]</ref>. The result is a binary linear code with the following parameters:</p><formula xml:id="formula_8">(20)<label>(21) (22)</label></formula><p>Alon <ref type="bibr" target="#b2">[3]</ref> notes that a generator matrix for may be specified directly as follows. The columns of this matrix are indexed by pairs , where GF and , while its rows are indexed by integer pairs , where and Let be a basis for GF over GF Then the entry in row and column is defined as where is computed in GF , and denotes the inner product of and as binary -tuples with respect to the basis .</p><p>We take and in the foregoing construction. Then trivially satisfies property P2, since Furthermore, so that also satisfies property P1. Thus the length of the concatenated code is at most Now, for our choice of and , we have where the last inequality holds for all (and follows straightforwardly from the fact that for such ). Thus also satisfies property P3. With both and at hand, we are finally ready to prove our main result.</p><p>Theorem 5: MINIMUM DISTANCE is NP-complete. Proof: Clearly, MINIMUM DISTANCE is in NP. A polynomial transformation from FINITE-FIELD SUBSET SUM to MINIMUM DISTANCE can be described as follows. Given the input GF and to FINITE-FIELD SUBSET SUM, we answer the question of FINITE-FIELD SUBSET SUM by exhaustive search if Otherwise, we construct in polynomial time a parity-check matrix for the concatenated code as described above. We then query an oracle for MINIMUM DISTANCE for the existence of a codeword of weight at most where is defined by ( <ref type="formula" target="#formula_4">6</ref>) and ( <ref type="formula">7</ref>), and By the foregoing discussion, the oracle for MINIMUM DISTANCE will return "Yes" if and only if the answer to the question of FINITE-FIELD SUBSET SUM is "Yes."</p><p>This concludes the proof of the conjecture of Berlekamp, McEliece, and van Tilborg <ref type="bibr" target="#b8">[9]</ref>. In the next section, we discuss certain extensions and consequences of this result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. FURTHER RESULTS AND CONCLUDING REMARKS</head><p>We note here that our proof of Theorem 5 can be immediately extended to codes over an arbitrary, fixed, finite field GF This is based on the observation (cf. <ref type="bibr" target="#b6">[7]</ref>) that the transformation from THREE-DIMENSIONAL MATCHING to MAXIMUM-LIKELIHOOD DECODING in <ref type="bibr" target="#b8">[9]</ref> holds without change if the input to MAXIMUM-LIKELIHOOD DECODING is an matrix over GF , rather than a binary matrix. Given the NP-completeness of MAXIMUM-LIKELIHOOD DECODING over GF , one can essentially go through the proof in Sections II-IV, replacing each instance of by There are a few intricate points along the way, that require some explanation.</p><p>First, in rephrasing MAXIMUM-LIKELIHOOD DECODING as FINITE-FIELD SUBSET SUM, one should leave the expression in the question of FINITE-FIELD SUBSET SUM as is, rather than ask whether is a linear combination of This is certainly not the question that one would be concerned with for decoding purposes, but it is legitimate in an NP-completeness proof given the specific transformation from THREE-DIMENSIONAL MATCHING to MAXIMUM-LIKELIHOOD DECODING in <ref type="bibr" target="#b8">[9]</ref>. (It is easy to see that a vector GF of weight satisfies for the incidence matrix constructed in <ref type="bibr" target="#b8">[9]</ref> only if all the nonzero positions in are equal to .) Secondly, the bound in Lemma 4 becomes and one has to modify (19) accordingly. Fortunately, Alon's construction <ref type="bibr" target="#b2">[3]</ref> works in this case as well. Here, the columns of would be indexed by GF , so that (21) remains without change, (20) becomes , and ( <ref type="formula">22</ref>) becomes <ref type="bibr" target="#b22">(23)</ref> The key observation in the proof of ( <ref type="formula">23</ref>) is as follows: if GF and , then as ranges over all the elements of GF , the inner product takes each value in GF exactly times. (Alternatively, this can be viewed as a concatenation of the Reed-Solomon code over GF with the first-order generalized Reed-Muller code over GF , see <ref type="bibr">[8, p. 362</ref>].) To complete the proof, one can again take and in this construction.</p><p>The complexity of approximation algorithms for NP-hard problems has been a subject of much research recently (see <ref type="bibr" target="#b5">[6]</ref> and references therein), and it is natural to ask whether approximating the minimum distance of a linear code is still hard. Since our proof of the NP-completeness of MINIMUM DISTANCE is based on a transformation from MAXIMUM-LIKELIHOOD DECODING and it is known <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b32">[33]</ref> that MAXIMUM-LIKELIHOOD DECODING remains NP-complete under approximation within a constant factor, it is plausible that the same should be true for MINIMUM DISTANCE. We leave a more rigorous investigation of this question as an open problem.</p><p>Another immediate consequence of our proof is that certain useful computational tasks in coding theory are NP-hard, as there is an easy transformation from MINIMUM DISTANCE to each of these tasks. There is a large number of computational problems of this kind; we will give just three examples here.</p><p>First, we observe that determining whether a given linear code is MDS is NP-complete. Formally, let be a fixed prime, and consider the following decision problem: Problem: MDS CODE Instance: Positive integers and an matrix over GF Question: Is there a nonzero vector of length over GF , such that and ?</p><p>The fact that MDS CODE is NP-hard, even for , follows directly from Lemma 1. The NP-completeness of MDS CODE then follows from the observation that the phrase "of weight " in the question of MAXIMUM-LIKELIHOOD DECODING can be changed to the phrase "of weight exactly ," as discussed in Section III.</p><p>As another example, consider the problem of determining the trellis complexity of a linear code. More precisely, the computational task is to find a coordinate permutation that minimizes (the logarithm of) the number of vertices at a given time in the minimal trellis for a binary linear code. The corresponding decision problem <ref type="bibr" target="#b20">[21]</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>?</head><p>This problem is important in the theory of block-code trellises (for more details on this, see <ref type="bibr" target="#b35">[36]</ref>). Horn and Kschischang <ref type="bibr" target="#b20">[21]</ref> recently proved that this problem is NP-complete, using an ingenious and elaborate transformation from SIMPLE MAX CUT <ref type="bibr">[20, p. 210</ref>] which spans over five pages. On the other hand, given the NP-completeness of MINIMUM DISTANCE, this result can be established in a few lines as follows. First, observe that the least integer for which rank rank rank is equal to where denote, respectively, the distance and the dual distance of the code defined by Notice that it does not matter whether is viewed as a parity-check or as a generator matrix in this problem. Now, suppose that is an binary linear code whose minimum distance we would like to determine, and let denote the dual distance of Given , we first construct a binary linear Reed-Muller code of length and order , where and Then is an self-dual code, where</p><p>We then use the well-known Kronecker product construction <ref type="bibr">[27, p. 568</ref>] to obtain a generator matrix for the product code where is the dual code of Evidently, the length of is , and its minimum distance is On the other hand, it is easy to see that the dual distance of is the minimum of the dual distances of and , namely, Hence, running a polynomial-time algorithm for PARTITION RANK with the input being a generator matrix for , we can determine in polynomial time. The foregoing Turing reduction from MINIMUM DISTANCE shows that, given a linear code , computing either the minimum distance or the minimum dual distance is NP-hard. This furthermore proves that PARTITION RANK remains NP-hard, even if the input is restricted to rank In other words, even if all we want to know is whether for some permutation, the computational task of determining this is still NP-hard. This is a somewhat stronger result than the one reported by Horn and Kschischang in <ref type="bibr" target="#b20">[21]</ref>.</p><p>Moreover, we believe that the techniques developed in the proof of NP-completeness of MINIMUM DISTANCE can be now used to show that determining the maximum trellis state-complexity of a code, namely , is also NP-complete. Indeed, Jain, Mȃndoiu, and Vazirani <ref type="bibr" target="#b21">[22]</ref> have recently employed the results of Section III of this paper to prove that computing is NP-hard for linear codes of characteristic , namely codes over GF where is variable. This result is similar in spirit to our Theorem 3, and the argument used by Jain, Mȃndoiu, and Vazirani <ref type="bibr" target="#b21">[22]</ref> is essentially a variation of Lemma 1. We point out, however, that the problem is still open for binary codes.</p><p>As a third example, we mention the problem of finding the largest subcode with a prescribed contraction index <ref type="bibr" target="#b36">[37]</ref>. Namely, given a generator matrix for a binary linear code and a positive integer , we wish to find the largest subcode which has a generator matrix with at most distinct columns. This problem is of importance in soft-decision and majority-logic decoding (see <ref type="bibr" target="#b36">[37]</ref> for an extensive treatment), and it is possible to show that it is NPhard using a transformation from MINIMUM DISTANCE. The proof of this is a bit tedious, and we omit the details.</p><p>Finally, we would like to mention two important problems in coding theory, for which we do not have a polynomial transformation from MINIMUM DISTANCE, but believe that it should be possible to find one.</p><p>The first problem is that of bounded-distance decoding of binary linear codes. While the intractability of maximumlikelihood decoding has been thoroughly studied <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b11">[12]</ref>, and <ref type="bibr" target="#b32">[33]</ref>, most of the decoders used in practice are bounded-distance decoders. It is still not known whether bounded-distance decoding is NP-hard for the general class of binary linear codes. For bounded-distance decoding up to the error-correction radius of a code, the corresponding decision problem can be formulated as follows:</p><p>Problem: BOUNDED-DISTANCE DECODING Instance: An integer , a binary matrix , such that every columns of are linearly independent, a vector , and an integer Question: Is there a vector of weight , such that ?</p><p>Notice that BOUNDED-DISTANCE DECODING is not likely to be in NP, since in view of our main result in this paper, verifying that every columns of are linearly independent is NP-hard. Hence, this is an example of a promise problem (cf. <ref type="bibr" target="#b17">[18]</ref>). Nevertheless, we could ask whether BOUNDED-DISTANCE DECODING is NP-hard. We concur with the remark of Barg <ref type="bibr" target="#b6">[7]</ref>, and conjecture that this is so. Moreover, we believe that the NP-completeness of MINIMUM DISTANCE should be instrumental in proving this conjecture.</p><p>We point out that a hardness result for bounded-distance decoding of binary linear codes in a somewhat different context was recently established in <ref type="bibr" target="#b15">[16]</ref>. Downey, Fellows, Vardy, and Whittle <ref type="bibr" target="#b15">[16]</ref> show that MAXIMUM-LIKELIHOOD DECODING is hard for the parametrized complexity class Namely, it is unlikely that there exists an algorithm which solves MAXIMUM-LIKELIHOOD DECODING in time , where is a constant independent of and is an arbitrary function. Many NP-complete problems are fixed-parametertractable. For example, VERTEX COVER, a well-known NPcomplete problem <ref type="bibr">[20, p. 53</ref>] which asks whether a graph on vertices has a vertex cover of size at most , can be solved in time Loosely speaking, the parametrized complexity hierarchy FPT introduced by Downey and Fellows <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref> distinguishes between those problems that are fixed-parameter-tractable and those that are not. The result of <ref type="bibr" target="#b15">[16]</ref> implies that boundeddistance decoding of linear codes is hard in the following sense: if a polynomial-time algorithm for this purpose exists then the parametrized complexity hierarchy collapses with FPT Nevertheless, the question whether the BOUNDED-DISTANCE DECODING problem, as defined above, is NP-hard is still open.</p><p>The second problem we would like to mention is that of finding the shortest vector (in the Euclidean norm) in a sublattice of</p><p>The overall status of computational problems for lattices is remarkably similar to the situation with linear codes. Peter van Emde Boas <ref type="bibr" target="#b34">[35]</ref> proved in 1980 that finding the nearest vector (which is equivalent to maximum-likelihood decoding) in a sublattice of is NP-hard, and conjectured that finding the shortest vector should be hard as well. Formally, van Emde Boas conjectured that the following problem:</p><p>Problem: SHORTEST VECTOR Instance: A basis for a lattice , and an integer , Question: Is there a nonzero vector in , such that ? is NP-complete. Despite a considerable amount of work, the proof of this conjecture remains elusive. Arora, Babai, Stern, and Sweedyk <ref type="bibr" target="#b4">[5]</ref> classify this as a "major open problem." Moreover, this conjecture becomes particularly significant in view of the celebrated result of Ajtai <ref type="bibr" target="#b0">[1]</ref>, who showed how to efficiently generate hard instances of certain computational problems related to integer lattices. Moreover, Ajtai <ref type="bibr" target="#b1">[2]</ref> has recently proved that the SHORTEST VECTOR problem is hard for NP under randomized reductions. This comes very close to proving the conjecture of <ref type="bibr" target="#b34">[35]</ref>.</p><p>Intuitively, finding the shortest vector in a lattice should be at least as "difficult" as finding the minimum-weight vector in a binary linear code. Thus it is reasonable to suggest that there should be a polynomial transformation from MINIMUM DISTANCE to the SHORTEST VECTOR. Specifically, we pose the following problem: given a binary linear code construct, in polynomial time, a lattice so that the minimum distance of can be determined from the minimum norm of In view of our main result, solving this problem would amount to proving that SHORTEST VECTOR is NP-complete.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>[20, p. 233]), namely: Problem: FINITE-FIELD SUBSET SUM Instance: Is there a nonempty subset of such that and ?</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Theorem 3 :</head><label>3</label><figDesc>MD is NP-complete.Proof: Clearly, MD is in NP, since given a putative solution , we can verify and in polynomial time. We exhibit a polynomial transformation from FINITE-FIELD SUBSET SUM to MD as follows. Given the input to FINITE-FIELD SUM, we construct in polynomial time the matrix in (8), and then run the oracle for</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>vol. III, ch. 5], for instance. The elementary symmetric function is defined by</figDesc><table><row><cell></cell><cell>(3)</cell></row><row><cell>and in particular</cell><cell>. In our case,</cell></row><row><cell>we indeed have</cell><cell>in (3), and the</cell></row><row><cell>preceding expression for</cell><cell>reduces to</cell></row><row><cell></cell><cell>(4)</cell></row></table><note><p><p>Since</p>are distinct, the Vandermonde factor in (4) is nonzero, which implies that if and only if Thus if no subset of exactly elements of sums up to , then every or less columns of are linearly independent. In this case, by the Singleton bound, and is MDS. On the other hand, if for some then obviously Now, deleting the last row of , we obtain the parity-check matrix which defines the code that contains as a subcode. It is easy to verify (cf. [27, p. 323]) that is an MDS code, and hence</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>The following lemma provides an upper bound on in terms of and</figDesc><table><row><cell></cell><cell></cell><cell>matrix</cell><cell>having</cell><cell>as its</cell></row><row><cell cols="2">rows. If some</cell><cell cols="2">columns of</cell><cell>correspond to a nonzero</cell></row><row><cell cols="2">position of</cell><cell cols="2">then every nonzero codeword of</cell></row><row><cell cols="3">appears exactly once in these</cell><cell>columns. It follows that the</cell></row><row><cell cols="4">weight of each nonzero column of</cell><cell>is precisely</cell><cell>, and</cell></row><row><cell cols="2">there are at most</cell><cell cols="2">such columns. Thus the total weight</cell></row><row><cell>of</cell><cell>is at most</cell><cell></cell><cell>The lemma now follows by</cell></row><row><cell cols="2">observing that</cell><cell>has</cell><cell>rows.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Lemma 4:</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Proof: Since</cell><cell>is a linear code over GF</cell><cell>, if it</cell></row><row><cell></cell><cell></cell><cell></cell><cell>contains a codeword of weight</cell><cell>, then it contains</cell></row><row><cell></cell><cell></cell><cell></cell><cell>such codewords, namely, all the multiples of by the nonzero</cell></row><row><cell></cell><cell></cell><cell></cell><cell>elements of GF</cell><cell>Let</cell><cell>denote</cell></row><row><cell></cell><cell></cell><cell></cell><cell>these</cell><cell>codewords, and consider the</cell></row><row><cell></cell><cell></cell><cell></cell><cell>matrix</cell><cell>having</cell><cell>as its rows. It is obvi-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>ous that each of the</cell><cell>nonzero columns of</cell><cell>contains</cell></row><row><cell></cell><cell></cell><cell></cell><cell>each of the</cell><cell>nonzero elements of GF</cell><cell>exactly</cell></row><row><cell></cell><cell></cell><cell></cell><cell>once. Now let</cell><cell>be the images of</cell></row><row><cell></cell><cell></cell><cell></cell><cell>under the mapping</cell><cell>and consider the</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>can be posed as:</figDesc><table><row><cell cols="2">Problem: PARTITION RANK</cell><cell></cell></row><row><cell>Instance: A binary</cell><cell cols="3">matrix , and positive integers</cell></row><row><cell>and</cell><cell></cell><cell></cell></row><row><cell cols="4">Question: Is there a column permutation that takes</cell><cell>into</cell></row><row><cell>a matrix</cell><cell></cell><cell>, such that</cell><cell>is a</cell></row><row><cell cols="2">matrix and rank</cell><cell>rank</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The author wishes to acknowledge helpful discussions with N. Alon, A. Barg, Y. Bresler, J. Bruck, I. Dumer, H. Edelsbrunner, M. R. Fellows, M. Naor, R. M. Roth, D. V. Sarwate, L. Schulman, and V. V. Vazirani. The author is especially indebted to N. Alon for referring him to the construction used in Section IV. Finally, the author would like to thank H. M. Itzkowitz for her invaluable help.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Generating hard instances of lattice problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ajtai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 28th Annu. ACM Symp. on Theory of Computing</title>
		<meeting>28th Annu. ACM Symp. on Theory of Computing<address><addrLine>Philadelphia, PA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-05">May 1996</date>
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">The shortest vector problem in L 2 is NP-hard for randomized reductions</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ajtai</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997-05">May 1997</date>
		</imprint>
	</monogr>
	<note>personal communication</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Packings with large minimum kissing numbers</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996-10">Oct. 1996</date>
		</imprint>
	</monogr>
	<note>personal communication</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Construction of asymptotically good low-rate error-correcting codes through pseudorandom graphs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bruck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Naor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="509" to="516" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The hardness of approximate optima in lattices, codes, and systems of linear equations</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Babai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Sweedyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 34th Annu. Symp. on the Foundation of Computer Science</title>
		<meeting>34th Annu. Symp. on the Foundation of Computer Science<address><addrLine>Palo Alto, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="724" to="733" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hardness of approximations</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lund</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Approximation Algorithms for NP-Hard Problems</title>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Hochbaum</surname></persName>
		</editor>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>PWS</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="399" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Some new NP-complete coding problems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Barg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Probl. Pered. Inform</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="23" to="28" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
	<note>in Russian</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Algebraic Coding Theory</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Berlekamp</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1968">1968</date>
			<publisher>McGraw-Hill</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On the inherent intractability of certain coding problems</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Berlekamp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Mceliece</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">C A</forename><surname>Van Tilborg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="384" to="386" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On MDS codes and alternants over certain rings</title>
		<author>
			<persName><forename type="first">M</forename><surname>Blaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bruck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Abstracts Amer. Math. Soc</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page">454</biblScope>
			<date type="published" when="1995-03">Mar. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">MDS array codes with independent parity symbols</title>
		<author>
			<persName><forename type="first">M</forename><surname>Blaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bruck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="529" to="542" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The hardness of decoding linear codes with preprocessing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bruck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="381" to="385" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The Radon transform on k 2</title>
		<author>
			<persName><forename type="first">P</forename><surname>Diaconis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Graham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pacific J. Math</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="page" from="176" to="185" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fixed parameter tractability and completeness: Basic theory</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Downey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="873" to="921" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fixed parameter tractability and completeness: Completeness for W [1]</title>
	</analytic>
	<monogr>
		<title level="j">Theoret. Comput. Sci. A</title>
		<imprint>
			<biblScope unit="volume">141</biblScope>
			<biblScope unit="page" from="109" to="131" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">On the parametrized complexity of certain fundamental problems for linear codes and integer lattices</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Downey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vardy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Whittle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
	<note type="report_type">preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Concatenated codes and their generalizations</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">I</forename><surname>Dumer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Coding Theory</title>
		<editor>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>Pless</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Huffman</surname></persName>
		</editor>
		<editor>
			<persName><surname>Brualdi</surname></persName>
		</editor>
		<meeting><address><addrLine>Amsterdam, The Netherlands</addrLine></address></meeting>
		<imprint>
			<publisher>Elsevier</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Cryptography and NP-completeness</title>
		<author>
			<persName><forename type="first">S</forename><surname>Even</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yacobi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes on Computer Science</title>
		<imprint>
			<biblScope unit="volume">85</biblScope>
			<biblScope unit="page" from="195" to="207" />
			<date type="published" when="1982">1982</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Concatenated Codes</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Forney</surname><genName>Jr</genName></persName>
		</author>
		<imprint>
			<date type="published" when="1966">1966</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to the Theory of NP-Completeness</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
			<publisher>Freeman</publisher>
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On the intractability of permuting a block code to minimize trellis complexity</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">B</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">R</forename><surname>Kschischang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="2042" to="2048" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The &apos;art of trellis decoding&apos; is computationally hard-for large fields</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mȃndoiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">V</forename><surname>Vazirani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint/>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The NP-completeness column: An ongoing guide</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="182" to="195" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The NP-completeness column: An ongoing guide</title>
	</analytic>
	<monogr>
		<title level="j">J. Algorithms</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="584" to="601" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On the complexity of approximating extremal determinants in matrices</title>
		<author>
			<persName><forename type="first">L</forename><surname>Khachiyan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Complexity</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="138" to="153" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Sur la complexité d&apos;un probléme de codage</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lobstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theor. Informatics Appl</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="25" to="32" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">The Theory of Error Correcting Codes</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Macwilliams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J A</forename><surname>Sloane</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977">1977</date>
			<publisher>North-Holland</publisher>
			<pubPlace>Amsterdam, The Netherlands</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Muir</surname></persName>
		</author>
		<title level="m">Treatise on the Theory of Determinants</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Dover</publisher>
			<date type="published" when="1960">1960</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">On the complexity of some coding problems</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Ntafos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">L</forename><surname>Hakimi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="794" to="796" />
			<date type="published" when="1981">1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A construction of non-Reed-Solomon type MDS codes</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lempel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="655" to="657" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A Justesen construction of binary concatenated codes that asymptotically meet the Zyablov bound for low rate</title>
		<author>
			<persName><forename type="first">B.-Z</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="239" to="242" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">New algorithms for finding irreducible polynomials over finite fields</title>
		<author>
			<persName><forename type="first">V</forename><surname>Shoup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Comput</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="435" to="447" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Approximating the number of error locations within a constant ratio is NP-complete</title>
		<author>
			<persName><forename type="first">J</forename><surname>Stern</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes on Computer Science</title>
		<imprint>
			<biblScope unit="volume">673</biblScope>
			<biblScope unit="page" from="325" to="331" />
			<date type="published" when="1993">1993</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Algebraic Geometry Codes</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Tsfasman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Vlȃduţ</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Kluwer</publisher>
			<pubPlace>The Netherlands</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Dodrecht</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Another NP-complete partition problem and the complexity of computing short vectors in a lattice</title>
		<author>
			<persName><forename type="first">P</forename><surname>Van Emde</surname></persName>
		</author>
		<author>
			<persName><surname>Boas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dept. Math., Univ. of Amsterdam</title>
		<imprint>
			<date type="published" when="1980">1980</date>
			<pubPlace>Amsterdam, The Netherlands</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. 81-04</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Trellis structure of codes</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Coding Theory</title>
		<editor>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>Pless</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Huffman</surname></persName>
		</editor>
		<editor>
			<persName><surname>Brualdi</surname></persName>
		</editor>
		<meeting><address><addrLine>Amsterdam, The Netherlands</addrLine></address></meeting>
		<imprint>
			<publisher>Elsevier</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Bounds on the dimension of codes and subcodes with prescribed contraction index</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vardy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Snyders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Be'ery</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Linear Algebra Appl</title>
		<imprint>
			<biblScope unit="volume">142</biblScope>
			<biblScope unit="page" from="237" to="261" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Modular curves and codes with polynomial complexity of construction</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Vlȃduţ</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Katsman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Tsfasman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Probl. Pered. Inform</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="47" to="55" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
	<note>in Russian</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Combinatorial problems in matroid theory</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J A</forename><surname>Welsh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Combinatorial Mathematics and its Applications</title>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">J A</forename><surname>Welsh</surname></persName>
		</editor>
		<meeting><address><addrLine>London, U.K.</addrLine></address></meeting>
		<imprint>
			<publisher>Academic</publisher>
			<date type="published" when="1971">1971</date>
			<biblScope unit="page" from="291" to="307" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">An estimate of the complexity of constructing binary linear concatenated codes</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">V</forename><surname>Zyablov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Probl. Pered. Inform</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="5" to="13" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
	<note>in Russian</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
