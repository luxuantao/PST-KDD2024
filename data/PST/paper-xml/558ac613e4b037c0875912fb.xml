<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fault Diagnosis of Electronic Systems Using Intelligent Techniques: A Review</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><roleName>Member, IEEE</roleName><forename type="first">William</forename><forename type="middle">G</forename><surname>Fenton</surname></persName>
							<email>billy_fenton@intertesttech.com</email>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">T</forename><forename type="middle">M</forename><surname>Mcginnity</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Liam</forename><forename type="middle">P</forename><surname>Maguire</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Willett</forename><forename type="middle">W G</forename><surname>Fenton</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Computing and Intelligent Systems</orgName>
								<orgName type="department" key="dep2">Faculty of Informatics</orgName>
								<orgName type="laboratory">Intelligent Systems Engineering Laboratory</orgName>
								<orgName type="institution">University of Ulster</orgName>
								<address>
									<settlement>Derry</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">School of Computing and Intelligent Systems</orgName>
								<orgName type="department" key="dep2">Faculty of Informatics</orgName>
								<orgName type="laboratory">Intelligent Systems Engi-neering Laboratory</orgName>
								<orgName type="institution">University of Ulster</orgName>
								<address>
									<settlement>Derry</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fault Diagnosis of Electronic Systems Using Intelligent Techniques: A Review</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">85E6BF0CE4F1947B3D8AFE7FFE92CB94</idno>
					<note type="submission">received November 30, 1999; revised January 4, 2001.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Artificial intelligence</term>
					<term>case-based reasoning</term>
					<term>fault diagnosis</term>
					<term>fuzzy logic</term>
					<term>machine learning</term>
					<term>model-based reasoning</term>
					<term>neural networks</term>
					<term>rule-based reasoning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In an increasingly competitive marketplace system complexity continues to grow, but time-to-market and lifecycle are reducing. The purpose of fault diagnosis is the isolation of faults on defective systems, a task requiring a high skill set. This has driven the need for automated diagnostic tools. Over the last two decades, automated diagnosis has been an active research area, but the industrial acceptance of these techniques, particularly in cost-sensitive areas, has not been high. This paper reviews this research, primarily covering rule-based, model-based, and case-based approaches and applications. Future research directions are finally examined, with a concentration on issues, which may lead to a greater acceptance of automated diagnosis.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>W ITH increasing system complexity, shorter product life- cycles, lower production costs, and changing technologies, the need for intelligent tools for all stages of product lifecycle is becoming increasingly important.</p><p>In <ref type="bibr" target="#b70">[71]</ref>, a system is defined as "any aggregation of related elements that together form an entity of sufficient complexity for which it is impractical to treat all of the elements at the lowest level of detail." Examples are automobiles, computers, or electronic circuit boards built using very large scale integrated (VLSI) components.</p><p>Fault diagnosis isolates the source(s) of a system malfunction, by collecting and analyzing information on system status using measurements, tests, and other information sources (e.g., observed symptoms). Often, it is performed by a human diagnostician, and it is an important function at all stages of the product lifecycle, but particularly during manufacture and field maintenance.</p><p>Over the last three decades, automating fault diagnosis using artificial intelligence (AI) techniques has been a major research topic. There has been much progress, but industrial acceptance, particularly in cost sensitive areas, has not been high.</p><p>In addition, with the emerging use of reconfigurable systems, in-line testing <ref type="bibr" target="#b57">[58]</ref> and intelligent diagnostics can assist in the self-maintenance of complex systems <ref type="bibr" target="#b68">[69]</ref>.</p><p>The purpose of this paper is to review system diagnosis research using AI approaches, and to examine its application, particularly in the area of electronic system diagnosis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. MOTIVATION</head><p>Fault diagnosis using intelligent techniques has been an active research area for the last two to three decades. However, its industrial acceptance has been low. Why? This paper forms the review section of the authors' investigation into this question. Additional work is on-going which will identify acceptance issues, and possible solutions to increased acceptance and deployment.</p><p>Furthermore, no single reference could be located, which covered a broad selection of approaches to intelligent diagnosis, so it was felt that this paper could fill this void.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. DIAGNOSTIC PROCESS</head><p>The purpose of fault diagnosis is to isolate the cause (component or subassembly) of a system malfunction in a timely manner.</p><p>The sequence followed to perform diagnosis can generally be summarized as follows.</p><p>1) Fault Information Generation: Information must be gathered about the nature of fault. This is achieved by fusing information from various sources including: observed symptoms, taking measurements, and running diagnostic tests. 2) Fault Hypotheses Generation: The information gathered is then used to localize the fault to a subset of components or subassemblies which are consistent with the available fault information. 3) Fault Hypothesis Discrimination: If more than one fault candidate is proposed it may be necessary to perform further tests or employ historical data (e.g., probabilities), to discriminate further. If further discrimination is not possible, experience or trial and error may be called on to determine the most appropriate repair.</p><p>Essentially the diagnostic process can be defined as fault isolation using information collected from system observations and tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. TRADITIONAL APPROACHES</head><p>A. Rule-Based Systems 1) Approach: Rule-based diagnostic systems represent the experience of skilled diagnosticians in the form of rules which generally take the form "IF symptom(s) THEN fault(s)." Representing the knowledge for a particular problem domain, may require hundreds, or even thousands of rules. Rule-based inference involves taking information about the problem domain, and invoking rules which match this information. This generates new data which is added to the problem information. This process is repeated iteratively until a solution to the problem is found <ref type="bibr" target="#b49">[50]</ref>, <ref type="bibr" target="#b61">[62]</ref>. Most intelligent diagnostic programs implemented in the 1970s and early 1980s were of this form.</p><p>2) Applications: A survey of a selection of applications in electronic engineering is described in <ref type="bibr" target="#b62">[63]</ref>. Included are applications in the diagnosis of telephone networks, disk drives, telephone switching equipment, and avionics control systems.</p><p>Even more recently, rule-based systems are continuing to be used. An Expert System for PC Repair and Maintenance (ES-PCRM) <ref type="bibr" target="#b46">[47]</ref> describes a system for diagnosing PC systems to the replaceable module level. In <ref type="bibr" target="#b63">[64]</ref>, a program for diagnosing electronic forge press faults is reported. In <ref type="bibr" target="#b1">[2]</ref>, a complex expert system employing multiple specialized rulebases for diagnosing complex PC boards is described. Finally, in <ref type="bibr" target="#b20">[21]</ref>, a diagnostic tool for server computers boards which uses a rulebase to analyze a dump of the processor's internal memory is reported.</p><p>3) Issues: The primary advantage of this approach is its intuitive simplicity.</p><p>Its disadvantages are the following. a) The difficulty of acquiring the knowledge to build the rulebase-known as the knowledge acquisition bottleneck. b) Its ability to deal with novel faults. c) System dependence, that is, a new rulebase will have to be generated for each new system type.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Fault (Decision) Trees</head><p>1) Approach: Historically, this has been the most commonly used method for documenting fault diagnosis procedures. A fault tree uses symptom(s) or test results as its starting point, followed by a branching decision tree, consisting of actions, decisions, and finally repair recommendations. Fig. <ref type="figure" target="#fig_0">1</ref> shows a simple example.</p><p>2) Applications: To assist in the navigation of large diagnostic networks, <ref type="bibr" target="#b0">[1]</ref> describes a hypermedia system for a point-and-click traversal of fault trees and other types of diagnostic information.</p><p>To simplify the generation of fault trees for complex systems, intelligent techniques have been applied to automatically generate them. In <ref type="bibr" target="#b22">[23]</ref>, automatic fault tree generation is performed by using a circuit description, fault simulation to produce the electrical effects caused by failures, quantification and classification of these effects to produce a test matrix, and finally production of the test tree by recursively searching and evaluating the test matrix. In <ref type="bibr" target="#b56">[57]</ref>, fault trees are generated using cases extracted from a case-based reasoning system. In <ref type="bibr" target="#b35">[36]</ref>, process models, fault simulation, and machine learning techniques are applied to generate fault trees. Also, fault trees have been used in various real-world intelligent applications including <ref type="bibr" target="#b22">[23]</ref> which presents a system for diagnosing automotive electronic control systems and <ref type="bibr" target="#b65">[66]</ref> which describes an expert system for color TV diagnosis.</p><p>3) Issues: The primary advantage of fault trees is simplicity and ease of use. In fact, little training is needed to use these diagnostic aids. However, for more complex systems, a full fault tree can be very large. In addition, a fault tree is system dependent and even small engineering changes can mean significant updates. Lastly, a fault tree offers no indication of the knowledge used to generate the answer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. MODEL-BASED APPROACHES</head><p>Over the last 15 years, models have superseded rule-based techniques, as one of the premier research directions for intelligent systems diagnosis. A model is an approximate representation of the actual system being diagnosed. Model-based diagnosis involves using the model to predict faults using observations and information from the real device or system.</p><p>Models are often used in a hierarchical fashion, that is initial diagnosis is performed to a subunit level using a high level model and then a more detailed model of the subunit is used to diagnose to the next level and so on.</p><p>Various types of approaches have been used including fault models, structural models, behavioral models, and diagnostic inference models. The following sections discuss these various approaches, and their associated inference mechanisms. A. Fault Models (or Fault Dictionaries) 1) Approach: This type of model anticipates the types of faults that may occur and only models these. Each of the selected fault types is inserted into each component, and using simulation, the behavior of the overall system is monitored. Each simulation produces a description of how the overall system operates when a particular part is defective in a specific way. This provides a list of fault/symptom pairs, which is used to produce a fault dictionary, which can indicate which component is defective when a particular overall symptom is present.</p><p>2) Applications: This method has primarily been applied to the diagnosis of digital circuits, where it has been used for the detection of stuck at "one" and "zero" faults, bridging (shorts) faults, and delay (timing) faults <ref type="bibr" target="#b79">[80]</ref>. For example, to test a simple digital combinational circuit a series of binary test vectors is used. Using the fault simulator the behavior of each test pattern is noted for each fault type. Fig. <ref type="figure" target="#fig_1">2</ref> illustrates an example of a fault dictionary (x indicates that this test pattern fails if the corresponding fault is present). The defective component is the gate which behaves according to the fault dictionary or model for each test pattern.</p><p>3) Issues: For combinational digital circuits, fault models can diagnose modeled faults accurately, however, they are unable to deal with unanticipated (i.e., unsimulated) faults. However, the set of simulated faults may be adequate for most diagnostic purposes and, therefore, may provide a more than adequate solution for many applications.</p><p>Fault models are less successful when used with sequential circuits. To diagnose such circuits a test sequence rather than a single vector is required, and if the state of the circuit is lost during test because of a fault, it may not be possible to complete the sequence and, therefore, the diagnosis <ref type="bibr" target="#b79">[80]</ref>, <ref type="bibr" target="#b80">[81]</ref>. Splitting the circuit into more manageable chunks, known as encapsulation, has been proposed as a possible solution <ref type="bibr" target="#b80">[81]</ref>.</p><p>Finally, for large circuits, the quantity of test vectors required can be large leading to impractical test times. Data compression approaches have been applied to this problem <ref type="bibr" target="#b79">[80]</ref>, <ref type="bibr" target="#b81">[82]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Causal Models 1) Approach:</head><p>A causal model is a directed graph where the nodes represent the variables of the modeled system and the links represent the relationships or associations between the variables. For example, in a diagnostic model, the variables often represent the symptoms and the faults, and the links represent the symptom-fault associations. The strength of each link is often defined using a numerical weight or probability. Therefore, the faults hypotheses formed are ranked or eliminated using Bayesian techniques <ref type="bibr" target="#b58">[59]</ref>, <ref type="bibr" target="#b59">[60]</ref>. Bayesian networks are a variation on this approach <ref type="bibr" target="#b36">[37]</ref>. 2) Applications: In <ref type="bibr" target="#b82">[83]</ref>, a Bayesian network is applied to the diagnosis of an integrated circuit tester. The knowledge of a domain expert regarding the probability of different tester failure modes is represented as a Bayesian network.</p><p>According to <ref type="bibr" target="#b83">[84]</ref>, rule-based systems are more prevalent than model-based approaches in industry because it is perceived that model-based systems are more difficult to build. To overcome this, a tool for converting a simple block diagram of a system to a causal model is presented.</p><p>3) Issues: Expert knowledge of the application area is needed to construct a causal model, so the "knowledge acquisition bottleneck" is its primary shortcoming.</p><p>The primary advantage is the ability to represent complex structured knowledge about physical or abstract concepts more easily than rules thus leading to greater computational efficiency. In addition, causal models are based on the firm mathematical theory of probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Models Based on Structure and Behavior</head><p>1) Approach: One of the primary research directions over the last 15 years has been the use of models based on structure and behavior. A dual representation of both structure and behavior is used. The structure representation lists all the components and their interconnections within the modeled system. The behavior representation describes the correct behavior pattern for each component. Behavior models can use various levels of abstraction including: mathematical, qualitative, or functional <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b17">[18]</ref>. Both representations are often created using logical formulae such as first order predicate calculus.</p><p>If the operation of the model does not agree with observations from the real system during a particular mode of operation, then a discrepancy has occurred and a diagnosis must be performed to find the defective component(s). Fig. <ref type="figure" target="#fig_2">3</ref> shows an example of a simple arithmetic circuit. If the inputs A through E are stimulated as shown, the outputs should measure as shown. Failure to measure these values indicates a discrepancy between the model and the real system.</p><p>Unlike fault models, this type of model is a correct model. That is, it models a working device, and theoretically, it can diagnose any fault type, not just the modeled ones.</p><p>Many of the basic techniques were proposed during the 1980s and involve the diagnosis of simple combinational digital circuits. The same basic principles apply to other device types. The process generally consists of three steps. 1) Hypothesis Generation: Generate a list of components (suspects) that might be responsible for the observed discrepancy. 2) Hypothesis Testing: Test each suspect to see if it can account for all the observations. A number of methods have been proposed for exonerating and reducing the list of suspects created during hypothesis generation. These include: constraint suspension <ref type="bibr" target="#b18">[19]</ref>, assumption-based truth maintenance <ref type="bibr" target="#b38">[39]</ref>, and fault model simulation <ref type="bibr" target="#b42">[43]</ref>. 3) Hypothesis Discrimination: If more than one suspect remains after the previous step, this action collects more information to aid in further discrimination. Additional information to discriminate can be collected using one of the following methods. -Additional Measurements: Determining the best measurement sequence is the key issue and various approaches have been investigated including the use of failure probabilities <ref type="bibr" target="#b38">[39]</ref> and the half-split method <ref type="bibr" target="#b42">[43]</ref>. -Additional Tests: Determining the next test, which will provide the best information for maximum discrimination, is the key issue <ref type="bibr" target="#b67">[68]</ref>.</p><p>2) Applications: Hypothesis testing (HT) was one of the seminal works in structural/behavioral models for diagnostic applications <ref type="bibr" target="#b18">[19]</ref>. Its application area was combinational digital circuits. To describe structure it used a subset of DECmmp Parallel Language, a VLSI design language. The representations used were hierarchical and both physical and functional descriptions were employed. Constraints were used to describe behavior, and both simulation and inference rules were used to describe the relationships between component inputs and outputs. Diagnosis was performed using candidate generation and constraint suspension.</p><p>In <ref type="bibr" target="#b27">[28]</ref>, HT is extended to deal with time variant digital circuits. Its behavioral representations are extended to deal with (value, time) pairs so that the behavior of a circuit can be described over a series of time periods. However, it concluded that unless complete state visibility (i.e., measurements being made at the end of different time periods) is available, diagnosis generation is inherently under-constrained and indiscriminate. Single stepping the circuit, so that observations could be taken at different time points, was proposed as a possible solution.</p><p>In <ref type="bibr" target="#b38">[39]</ref>, the general diagnostic engine (GDE) is introduced. GDE addressed the issue of multiple faults and became the basis for much later research in the area <ref type="bibr" target="#b38">[39]</ref>. It introduced the use of ATMS <ref type="bibr" target="#b37">[38]</ref> for diagnosis. Using constraint propagation and ATMS, it identifies minimal diagnoses, but considered all supersets of each minimal set a possible diagnosis; if a particular minimal diagnosis is exonerated all its supersets are also exonerated. To further discriminate amongst candidate diagnoses, it uses ad-ditional circuit measurements. To make an optimum set of measurements, it uses one-step look-ahead based on minimum entropy to predict the best probing sequence. Failure probabilities of individual components are needed to guide this process. Often such failure probabilities can be difficult to obtain, so an extension to GDE <ref type="bibr" target="#b40">[41]</ref>, proposes the use of crude probability estimates to guide diagnosis. It does this by assuming all components fail with equal probability and with extremely small probability. Lastly, some extensions to GDE exploit fault modes or models to provide additional diagnostic discrimination <ref type="bibr" target="#b39">[40]</ref>.</p><p>In <ref type="bibr" target="#b28">[29]</ref>, extended diagnostic engine (XDE) extends the GDE program described above, to deal with more complex circuits, including sequential ones. It uses a structural language called BASIL to provide both a physical and a functional representation of a circuit. For example, the functional representation would describe an arithmetic circuit in terms of adders and multipliers, whereas the physical description would describe the actual components used to build the circuit. The relationship between both descriptions is defined. To describe behavior, a temporal constraint propagation language called TINT is used. TINT defines rules at multiple levels of temporal abstraction to describe the operation of the circuit primarily at the functional level. Probability estimates are used to rank alternative diagnoses and to choose the next best measurement. These estimates are defined relative to a components complexity. To further refine diagnoses, fault models are employed to further adjust probability estimates. XDE has been tested on complex boards including microprocessor-based circuits.</p><p>In <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b16">[17]</ref> DEDALE, an approach for analog circuit fault diagnosis, is described. DEDALE is an ATMS-like system. Components behavior is described using qualitative models based on relative orders of magnitude. Some components, such as transistors, can have a number of correct modes of operation. Diagnosis is performed in a hierarchal fashion, starting at the device level, which is diagnosed in a functional manner, and working down to the component level, block by block. To perform inference within a defective block, the measurement at each node and its attached components are checked for consistency with a correct model for the observed measurements. An inconsistency in the behavior indicates that one of the components attached to that node is defective. Intersection with other inconsistent nodes can further isolate the defective component.</p><p>CATS is a domain independent diagnosis engine based on the GDE framework, but with extensions to process values which are imprecise and change with time. DIANA is an implementation of CATS for diagnosing analog circuits <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>. To allow for measurement imprecision, quantities are represented in CATS/DIANA using ranges or numeric intervals. Continuous signals are represented by using arrays of numeric intervals, accompanied by a triplet defining sample start instant, sampling increment, and number of samples. In order to repeat measurements the sample start instant must be synchronized in some way (e.g., clock signal). The imprecision of component parameters is also represented using numeric intervals. Component models are qualitative approximations, not suitable for accurate simulations, but adequate for troubleshooting purposes. The diagnostic engine CATS receives as input constraints from the models and measurements. Then using an ATMS-like inference mechanism it produces diagnostic candidates as outputs.</p><p>In <ref type="bibr" target="#b12">[13]</ref>, a generic model-based diagnostic system for a particular area of technical diagnosis is presented (switch-mode power supplies). A structural model based on frames, and a behavioral model based on heuristic rules which represent fault behavior in modules or components is used.</p><p>3) Issues: Models based on structure and behavior would appear to represent an ideal solution for many diagnostic problems. Theoretically, because of the use of correct models, all faults can be diagnosed; CAD data can be used to automatically generate suitable models. However, in practice, there are a number of significant limitations.</p><p>1) It is computationally intensive for complex problems <ref type="bibr" target="#b23">[24]</ref>. Focusing on the most probable failures first <ref type="bibr" target="#b41">[42]</ref> and the inclusion of fault models have been used to improve efficiency <ref type="bibr" target="#b39">[40]</ref>. 2) Representing the behavior of complex components, such as a Pentium microprocessor, is still a major research issue <ref type="bibr" target="#b19">[20]</ref>. 3) Complete and consistent models are hard to develop. Essentially, a model is only an approximate representation of a real world system. For example, a circuit bridging fault will not be represented in the structural model <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b23">[24]</ref>. 4) Information relating to the ways the system can fail is often not present. This can lead to the isolation nonsensical faults <ref type="bibr" target="#b84">[85]</ref>. 5) Unless CAD generation is possible models can be time consuming to develop and maintain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Diagnostic Inference Model 1) Approach:</head><p>The diagnostic inference model <ref type="bibr" target="#b70">[71]</ref>, <ref type="bibr" target="#b71">[72]</ref>, performs diagnosis by representing the problem to be solved via the flow of diagnostic information. Previously known as the information flow model, the name change reflects the models focus on information provided by diagnostics and inferences that can be drawn from this information.</p><p>The model consists of two basic elements: tests and conclusions. Tests consist of any source of diagnostic information including, observable symptoms, logistics history, and results from diagnostic tests. Conclusions typically represent faults or units to replace. The dependency relationship between tests and conclusions is represented using a directed graph. In addition to tests and conclusions, there are three other possible elements in a diagnostic inference model: testable input, untestable input, and No-Fault. An input represents information entering the system which may affect the health of the system. A testable input can be examined for validity, an untestable input cannot. A No-Fault is a special conclusion indicating that the test set found no fault.</p><p>Fig. <ref type="figure" target="#fig_3">4</ref> shows an example of a diagnostic inference model. Test sequencing is optimized using algorithms based on maximum test information gain. Diagnostic inference combines information from multiple tests using several logical and statistical inference techniques, including a modified form of Dempster-Shafer (D-S) evidential reasoning <ref type="bibr" target="#b49">[50]</ref> which incorporates a special conclusion, the unanticipated result. The unanticipated As with all model-based techniques conflicting diagnoses may be derived. Conflicts are caused by: test error, multiple faults, or incomplete or inaccurate models. The D-S method and certainty factors are both used as methods for reasoning with these uncertainties <ref type="bibr" target="#b71">[72]</ref>.</p><p>2) Applications: Various successful uses of the diagnostic inference model are summarized in <ref type="bibr" target="#b85">[86]</ref>. In <ref type="bibr" target="#b86">[87]</ref>, its application to radar system maintenance is outlined, and in <ref type="bibr" target="#b87">[88]</ref> its application to the diagnosis of power supplies is described.</p><p>In <ref type="bibr" target="#b60">[61]</ref>, an approach similar to the diagnostic inference model is proposed and deployed for the troubleshooting of complex PC boards to component level. Models of the tests, rather than structure or behavior are used. The test models are specified in terms of how the tests act on the device under test (e.g., does the test access memory, output to port), and each test is mapped to specific components. This is combined with information on the degree to which each component is exercised, to give a relative weighting to each diagnosis using Bayesian-like probabilistic formula. The system now forms part of the Hewlett-Packard Fault Detective product.</p><p>3) Issues: Diagnostic inference models are at their most effective if considered and implemented at the design phase of the product lifecycle. Unfortunately with many systems, design for diagnosis is still not an important consideration, so an inadequate supply of structured diagnostic information makes accurate diagnosis difficult using this approach. However, if an adequate model can be built using available diagnostic information diagnosis can be both accurate and computationally efficient <ref type="bibr" target="#b85">[86]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. MACHINE LEARNING APPROACHES</head><p>The approaches discussed in the previous sections, once implemented, will have a fixed level of performance. It is not possible to improve performance, by using the experiences of past successes and failures. Machine learning approaches exploit knowledge of previous successful or failed diagnoses to continually improve system performance or use available domain data to automatically generate knowledge.</p><p>A. Case-Based Reasoning 1) Approach: Case-based reasoning (CBR) involves storing experiences of past solutions known as cases, retrieving a suit-able case to use in a new problem situation, adapting and reusing the retrieved case to suit the new problem, revising the adapted case based on it's level of success or failure, and eventually retaining any useful learned experiences in the case memory <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref>.</p><p>A CBR solution generally consists of the following steps.</p><p>• Knowledge or Case Representation. • Case Retrieval. • Case Reuse. • Case Revision.</p><p>• Case Retainment (or learning).</p><p>Case representation, often called case memory, consists of deciding what to store in a case, selecting an appropriate structure for representing the case contents, and deciding on a suitable case indexing scheme to enable efficient retrieval.</p><p>Case retrieval consists of the following steps.</p><p>1) Identify features which sum up the current problem or case. 2) Use the features to find similar cases in the case memory.</p><p>These are ranked in order of similarity. 3) Perform final matching by analyzing in more detail the cases selected in step 2) against the current case. Select the most similar case.</p><p>Case reuse consists of finding the differences between the past and the current case, and then adapting the past case in some way to match the current case. Common forms of adaptation include substitution (substituting new values for old) and transformation (using heuristics).</p><p>Case revision involves evaluating the case solution from the reuse phase, and if necessary repairing any parts of the solution which are contributing to an inadequate solution. Evaluating involves applying the solution in a real situation, and measuring in some way its level of success. Errors in the solution are then detected and repaired using domain specific knowledge.</p><p>Finally, case retainment (or learning) adds useful information learned during the current problem solving task to the case memory. This may not only be successful new cases, but also failed cases ("don't do that again!"). Retainment can be an adjustment to an existing case(s) and its indeces or the addition of an entirely new case.</p><p>2) Applications: In <ref type="bibr" target="#b72">[73]</ref>, each case is represented using an ID number, frequency, symptoms, and actions. On retrieval it uses a possibility metric to rank cases; this is based on similarity and frequency. The problem of generating casebases for new products is discussed, and the solution of using two casebases, a generic casebase, and a product-type casebase is proposed. The generic casebase stores domain diagnostic rules based on symptom-defect causalities. The product-type casebase is generated from the generic casebase by specializing its cases and updating the frequencies.</p><p>In <ref type="bibr" target="#b13">[14]</ref>, an incremental case-based electronic fault diagnosis system is presented. A minimal case description can be used to perform initial case retrieval. The retrieved set is examined to determine tests which the operator is asked to perform and these results are used to discriminate between cases.</p><p>In <ref type="bibr" target="#b4">[5]</ref>, a circuit diagnosis support system for electronic assembly operations is described. Real-time diagnosis is required, so CBR is chosen over model-based diagnosis (MBD), as the computational overhead of MBD is considered to be too high. Initial case retrieval is performed, and additional tests are optimally selected, using dynamic programming techniques or heuristics, to refine the diagnosis. The case-base is updated after each diagnosis to reflect previously unknown faults. After five weeks of on-line use the system could diagnose 95% of defects.</p><p>3) Issues: The effectiveness of CBR depends on the availability of suitable case data, generated from historical data or simulation, and the selection of effective indexing, retrieval, and adaptation methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Explanation-Based Learning</head><p>1) Approach: Explanation-based learning (EBL) uses domain knowledge, and a single training example, to learn a new concept <ref type="bibr" target="#b49">[50]</ref>. For example, in diagnosis, a system model and an example of misdiagnosis can be used to derive an explanation of an appropriate diagnosis.</p><p>2) Applications: In <ref type="bibr" target="#b66">[67]</ref>, a diagnostic EBL system is described which improves diagnostic inference models following learning. It operates as follows. After a misdiagnosis, further testing is performed until a correct diagnosis is made; this additional knowledge is then used to modify the model so that the correct diagnosis is consistent with the testing.</p><p>3) Issues: EBL success depends on the availability of adequate domain knowledge. Therefore, for complex domains where extensive knowledge is needed to formulate new concepts, the approach may prove to be intractable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Learning Knowledge From Data</head><p>1) Approach: Another approach is the extraction of knowledge bases from existing databases or casebases. This overcomes the knowledge acquisition bottleneck and automatically generates an intelligent diagnostic system from existing resources. Obviously, it is only useful if prior data is available, so for new systems it is of little or no use.</p><p>2) Applications: In <ref type="bibr" target="#b75">[76]</ref>, knowledge base generation from General Motor's diagnostic database is described. This database contains 300 000 cases of vehicle symptoms and repair information. An extended form of the decision tree induction algorithm ID3 <ref type="bibr" target="#b49">[50]</ref> is used to extract general diagnostic rules from the database. ID3 uses database examples to generate decision trees, which are then used to classify the examples into suitable diagnostic rules. The extensions deal with the presence of inconclusive data sets, that is, when the set of examples used is not enough to specify a single conclusive outcome.</p><p>3) Issues: Using existing information to automatically generate a knowledge-based system can greatly speed development time and greatly reduces the knowledge acquisition bottleneck. However, it is only suitable where large databases of domain information are available. Therefore, it is inappropriate for new systems where actual data is not yet available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. OTHER APPROACHES</head><p>A. Fuzzy Logic 1) Approach: Fuzzy logic provides mechanisms to represent and manipulate linguistic concepts such as the following.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-</head><p>The water is very hot. -</p><p>The signal on the oscilloscope is a bit noisy.</p><p>It deals with approximates rather than exact measurements and is based on fuzzy set theory <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b76">[77]</ref>, <ref type="bibr" target="#b77">[78]</ref>, <ref type="bibr" target="#b78">[79]</ref>.</p><p>In traditional sets, membership is either true <ref type="bibr" target="#b0">[1]</ref> or false [0], and there is no concept of partial membership. In fuzzy sets, partial membership is allowed, so membership is represented by a value between 0 (definitely not a member) and 1 (definitely a member). In fuzzy set theory, a series of operators is defined, for manipulating sets. Many of these are analogous to those used in conventional sets, such as, union (OR), intersection (AND), and complement (NOT). Fuzzy reasoning consists of manipulating a series of unconditional and conditional fuzzy propositions or rules using fuzzy rules of inference.</p><p>With its concept of partial set membership, fuzzy logic provides a good alternative for reasoning with uncertain and inaccurate data.</p><p>2) Applications: Most of the research work relating to fuzzy logic and diagnosis has occurred in the area of dynamic industrial processes. In this domain, fuzzy logic has been applied primarily to the following tasks <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b31">[32]</ref>, <ref type="bibr" target="#b64">[65]</ref>. a) Fault Detection: Industrial processes are characterized by dynamic continuous variables (symptoms). Such variables are prone to measurement errors, noise, and operating conditions. Therefore, reliable measurement thresholds are difficult to define. Fuzzy logic provides a good solution to this problem, by representing signal values using overlapping linguistic variables. b) Fault Diagnosis: Fault diagnosis in dynamic processes is always approximate, as measured signal values are only known to a certain degree of accuracy. A fuzzy inference system based on fuzzy IF-THEN rules can provide a solution to this problem, and is proposed and reported by many researchers.</p><p>Applications, which apply fuzzy logic to the diagnosis of electronic systems are also reported. FLAMES is a program for troubleshooting analog circuits <ref type="bibr" target="#b52">[53]</ref>, <ref type="bibr" target="#b53">[54]</ref>. It is a GDE-like program employing ATMS. However, continuous signals and component parameters are represented using fuzzy values, and fuzzy values can be propagated across the circuit model. In <ref type="bibr" target="#b7">[8]</ref>, a similar system using possibility theory (a form of fuzzy logic) <ref type="bibr" target="#b21">[22]</ref>, to improve the accuracy of diagnosis of analog circuits is reported. In <ref type="bibr" target="#b68">[69]</ref>, a practical application, which uses fuzzy qualitative values for sensor measurements, in the development of self-maintenance photocopiers, is presented.</p><p>3) Issues: Because of it, use of linguistic variables' fuzzy logic provides a very human-like and intuitive way of representing and reasoning with incomplete and inaccurate information. It is typically combined with other approaches such as rules, models or cases, and provides a good alternative for reasoning under uncertainty.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Artificial Neural Networks 1) Approach:</head><p>The human brain is constructed of billions of interconnected cells or miniprocessors called neurons. Artificial neural networks (ANN) are inspired by the brain's neural circuitry and use the approach for complex problem solving <ref type="bibr" target="#b32">[33]</ref>.</p><p>ANNs can be considered as weighted directed graphs, the neurons being the nodes, and the connections between the nodes being weighted links. Groups of nodes are arranged in layers.  <ref type="bibr" target="#b55">[56]</ref>, an application of ANNs in the diagnosis of simple combinational digital circuits is described. A multilayer feedforward network is trained using back-propagation and is designed to detect single faults in a one bit full adder. The inputs consist of circuit inputs and outputs, and internal test points. The outputs represent the defective component and fault type (none, stuck-open, stuck-closed). It operated well on single faults. The authors checked its ability to generalize by testing it with multiple faults; it did not generalize well.</p><p>In <ref type="bibr" target="#b34">[35]</ref>, a multilayer perceptron trained using back-propagation is used for diagnosing digital circuits. The input layers accept the pass/fail status of a test vector set and the output layer equals single faults. Trained with a fault dictionary for single faults it showed 100% success for single fault diagnosis and 75% success with two faults.</p><p>In <ref type="bibr" target="#b73">[74]</ref>, the diagnosis of telephone exchange line cards using ANNs at British Telecom is described. The authors had already explored and implemented a model-based approach to the same problem, but they wished to investigate the use of an ANN trained with historical data to achieve the same task. It was felt that an ANN solution could be implemented much more rapidly if the historical data was available. A three-layer feedforward network, with circuit measurements as the inputs, and component pass/fail as the outputs, was constructed and trained using back-propagation. Comparing their experiences with model-based approaches, the authors summed up as follows. ANNs can be trained directly from data, are good with common faults, and provide rapid diagnosis. MBD can diagnose obscure faults, provides graphical support, and can explain a diagnosis.</p><p>In <ref type="bibr" target="#b50">[51]</ref>, an application for the diagnosis of multiple faults using multilayer perceptrons (MLP) is presented. The circuit is a bipolar section of an analog IC. It is stimulated using a sine wave and the magnitude of the Fourier harmonics in the spectrum of the circuit output is measured to verify and diagnose the circuit. A signature representing the output measurement is the input to the MLP, and the outputs represented the location and resistances (types of faults corresponds to technological problems of dopage of the extrinsic zones or an open contact problem before metallization) of the faults. The MLP was trained using back-propagation, to detect single, dual, and triple faults using data generated via simulation.</p><p>In <ref type="bibr" target="#b33">[34]</ref>, an ANN is designed which assists a technician in circuit diagnosis (e.g., next best node to measure). A threelayer network is used; inputs are either on or off, and represent symptom states, pins observed to be good, pins observed to be bad, and a flag indicating whether the overall circuit is good or bad; the outputs indicate the next best points to test. The input-hidden layer use an unsupervised learning paradigm to form self organizing feature maps containing knowledge about fault symptoms represented in topographical order. Once the feature maps are formed, the hidden-output layer is trained using a supervised learning paradigm based on the delta rule, to indicate the next best location to test.</p><p>As well as equipment diagnosis, ANNs have also been applied to the diagnosis of dynamic processes. In this area, ANNs have been used to process the outputs of sensors and to perform diagnoses by using symptom-fault networks <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b74">[75]</ref>.</p><p>In <ref type="bibr" target="#b70">[71]</ref>, an ANN is used to determine when enough evidence has been gathered to draw a diagnostic conclusion. The approach used, is to terminate when a pattern of certainty values indicate a conclusion can be drawn. A three-layer network with three inputs and one output is used. The inputs represent highest expected probability, second highest expected probability, and the probability of an unanticipated result. The activation level of the output determines whether or not to terminate. Training was via back-propagation and used training data collected from experts.</p><p>3) Issues: The power of ANNs is their ability to approximate and recognize patterns. In diagnostic applications they have shown great promise in areas where noise and error is present. The diagnosis of analog circuits is an example. However, their scalability to large systems and circuits is questionable, and they may best be used to assist other techniques in dealing with error and noise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. HYBRID APPROACHES</head><p>Hybrid solutions combine techniques to produce improved diagnostic solutions by capitalizing on the advantages of the individual techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Model-Based Reasoning and Case-Based Reasoning</head><p>A system which uses CBR to improve the MBD process is described in <ref type="bibr" target="#b23">[24]</ref>. Device models consist of a structural decomposition of the device, with the device at the root of the tree, modules at intermediate nodes, and the replaceable components at the leaves. Each component and submodule has a failure pattern associated with it stored in a database. This failure pattern is a combination of sensor outputs. Diagnosis consists of traversing the hierarchy based upon observations, and the output is a ranked list of diagnoses. CBR is used to further refine the MBD process. All past diagnostic scenarios are stored as cases, which are indexed from the bottom of the device structural decomposition. Both good and bad diagnoses are indexed. For bad diagnoses, the correct failure is also referenced from the stored case. Experimental results showed, that by incorporating CBR at the end of the MBD process, significant improvements in the number of correct diagnoses is achieved.</p><p>Another system which combines MBD and CBR is described in <ref type="bibr" target="#b6">[7]</ref>. Again the motivation is to improve diagnoses because of the use of incomplete and inaccurate models. Models are represented using the following. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Model-Based Reasoning (MBR) and Fuzzy Logic</head><p>A fuzzy extension to the diagnostic inference model is described in <ref type="bibr" target="#b5">[6]</ref>. It uses fuzzy logic, in its front end to deal with the uncertainty of measurements, and internally to generate membership degrees for faults, predicted by the outcomes of multiple tests. In <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b52">[53]</ref>, and <ref type="bibr" target="#b53">[54]</ref>, and extensions to the model-based ATMS architecture, employing fuzzy logic is described. Essentially, fuzzy logic is used to improve the accuracy of component modeling and measurements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Case-Based Reasoning (CBR), Artificial Neural Networks, and Fuzzy Logic</head><p>In <ref type="bibr" target="#b47">[48]</ref>, a connectionist case-based diagnostic expert system which learns incrementally, is reported. Designed for Singapore Airlines to assist technicians in troubleshooting inertial navigation systems, it consists of two parts, a connectionist module, and a flowchart module. The connectionist module is a threelayer feedforward network taking symptoms as its inputs and producing component faults as its outputs. It is trained using historical cases. The flowchart module is invoked if the ANN fails to produce a diagnosis. This consults the technician, and a new case is constructed, which is inputted to the connectionist module as a new case to perform incremental learning.</p><p>In <ref type="bibr" target="#b48">[49]</ref>, a case-based diagnostic system using fuzzy neural networks is described. The system is used to diagnose telecommunications systems. Fuzzy rules relating symptoms to faults are encoded in the network architecture. The network is a three-layer feedforward network. The input data is fed through possibility measure nodes, then through fuzzy-AND neurons in the hidden layer, and finally through fuzzy-OR neurons in the output layer. It is trained using historical data from an existing helpdesk.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Model-Based Reasoning and Genetic Algorithms</head><p>Genetic algorithms (GAs) <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b30">[31]</ref> employ the concepts of genetic evolution (chromosomes, genes, crossover breeding, and mutation), to perform search, learning, and optimization. In <ref type="bibr" target="#b29">[30]</ref>, MBD is primarily used, but GAs are used to optimize the best sequence of measurements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IX. DIAGNOSTIC STANDARDS</head><p>The importance of artificial intelligence (AI) in test and diagnosis is emphasized by the recent publication of a set of IEEE standards <ref type="bibr" target="#b88">[89]</ref> which address the use of AI systems in test and diagnostic environments. Known as AI-ESTATE ("Artificial Intelligence Exchange and Service Tie to All Test Environments"), there are two component standards. IEEE 1232.1 provides a standard representation of test and diagnostic data and knowledge and interfaces between reasoners and other functional elements of a test environment. IEEE 1232.2 defines the communications mechanisms and services between reasoners and other functional elements of a test environment.</p><p>The primary goal of AI-ESTATE is to provide a methodology for developing diagnostic systems that will be interoperable, have transportable software, and, therefore, move beyond vendor and product specific solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>X. COMMENTARY</head><p>Three broad classes of knowledge have been applied to diagnosis-heuristic, fundamental, and historical <ref type="bibr" target="#b4">[5]</ref>. Heuristic knowledge employs rules and/or procedures, which relate symptoms to faults, often with associated certainty values or probabilities. IF-THEN rules are an example. Fundamental knowledge uses the underlying physics of the device to reason from first principles. Model-based reasoning (MBR) is an example. Historical knowledge employs data or experiences recorded during previous diagnostic sessions to perform new diagnoses. CBR is an example. Each with its pros and cons is suited to different application domains, or hybrid solutions can be constructed, exploiting the combined pros and cons of each approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Rule-Based Approaches</head><p>As rule-based systems strive to encompass the knowledge of a domain expert, in the form of rules (often hundreds or thousands), development and maintenance can be complex and time consuming. Particularly, for systems with short lifecycles (many electronic systems), it may not be worth the development effort. In addition, only faults anticipated during the design phase can be diagnosed. Conversely, their intuitive simplicity makes rules easy to understand and the inference sequence used for a particular problem can easily be traced. Additionally, the technique is well proven, with many rule-based systems having been deployed in real applications <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b62">[63]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Model-Based Approaches</head><p>Models based on structure and behavior would seem to offer the ideal solution for many diagnostic applications; theoretically the models can be generated from CAD, and all defects including multiple faults can be diagnosed, without prior knowledge of the defect. However, in practice, a number of major shortcomings have become evident. 1) Full MBR becomes computationally intractable on problems with large numbers of components <ref type="bibr" target="#b41">[42]</ref>. Various solutions have been offered, including introducing fault modes, and focusing on the most likely defects first <ref type="bibr" target="#b39">[40]</ref>, <ref type="bibr" target="#b41">[42]</ref>. 2) Diagnosing complex devices with a large number of simple components (e.g., gates), although requiring much computing power, is feasible. However, finding suitable behavioral representations for more complex components (e.g., microprocessor) continues to be a serious research challenge <ref type="bibr" target="#b19">[20]</ref>.</p><p>3) It is hard to develop a complete and consistent model, which can consider all fault types. After all, a model is only an approximation of a real-world device. For example, how can a bridging fault be represented in a structural model? And the tradeoff between model completeness and speed of diagnosis must be considered, that is, a more complete model will deliver slower and more accurate diagnoses, and vice versa <ref type="bibr" target="#b19">[20]</ref>. Essentially, diagnosis is only as good as the model. 4) Knowledge of fault types is often not included, and this can lead to the diagnosis of nonsensical faults <ref type="bibr" target="#b84">[85]</ref>. 5) Development times can be long if CAD data cannot be used. The diagnostic inference model "models the information provided by a set of tests with respect to a set of desired conclusions" <ref type="bibr" target="#b71">[72]</ref>. Again results are only as good as the model, and the model is only as good as the set of available tests. However, the approach has been successfully applied to many real applications <ref type="bibr" target="#b85">[86]</ref>- <ref type="bibr" target="#b87">[88]</ref>.</p><p>A similar approach is taken in <ref type="bibr" target="#b60">[61]</ref>, where a system for diagnosing complex PC boards is described. Here, structure/behavior models are rejected as being too complex to develop, and models of diagnostic tests and their associated components are used instead. The system has been deployed and cost savings of 7 million French francs was made during year one.</p><p>In summary, models based on structure/behavior, which can be applied in real situations are difficult to develop for complex systems. Whereas, diagnostic inference models based on the many successful real applications, would seem to be more practical for complex real-world problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Case-Based Approaches</head><p>Case-based systems depend on past diagnostic experiences to perform new diagnoses. In practice, CBR has proved to be effective in real-world circuit diagnosis applications <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b13">[14]</ref>. Issues include the following.</p><p>1) The inability to diagnose until an adequate case-base becomes available. In <ref type="bibr" target="#b4">[5]</ref>, an application involving the diagnosis of consumer electronics products is described, and it is reported that the system could diagnose 90% of defects after six weeks of operation, however, the domain complexity is not apparent. Additionally, less common faults will be more difficult to diagnose due to their lack of presence in the initial casebase. 2) Compared to rule-based and model-based systems it is not always apparent how conclusions are arrived at <ref type="bibr" target="#b13">[14]</ref>, as the diagnosis is based on the overall fault pattern, rather than a logical sequence of steps. 3) In <ref type="bibr" target="#b13">[14]</ref>, development times and performance were reported to be better than an equivalent model-based solution previously reported in <ref type="bibr" target="#b12">[13]</ref>. 4) Development and maintenance is easier than for traditional solutions such as rules, as knowledge acquisition is on-line and incremental <ref type="bibr" target="#b4">[5]</ref>. 5) Efficiency may be hindered by the indexing and retrieval mechanisms used particularly as the case-base begins to grow <ref type="bibr" target="#b23">[24]</ref>. 6) How domain specific are CBR solutions? A human technician can apply troubleshooting techniques learned on one product to a different product, by extracting general purpose rules or procedures from specific experiences. Can this be applied to CBR? In <ref type="bibr" target="#b72">[73]</ref>, the casebase is divided into generic and specific knowledge. However, the generic casebase is defined by domain experts and is not incremental.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Fuzzy Logic and Neural Networks</head><p>Fuzzy logic has been used as an extension to other methods, such as rules and models, to deal with uncertainty and incompleteness. Neural networks have been applied to various diagnostic problems, but their ability to deal with complex domains is questionable. In practice, both will probably form useful additions to hybrid solutions for real-world applications domains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Hybrid Approaches</head><p>A primary research direction has been the combined use of MBR and CBR in diagnostic systems. Models are often inconsistent and incomplete resulting in inaccurate diagnoses. In addition, operators can input inaccurate information again leading to inappropriate conclusions. Supplemented by cases, irrelevant conclusions can easily be pruned from a candidate list of diagnoses. In addition, the model can be updated and improved using case data <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b23">[24]</ref>.</p><p>MBR can be too slow for real-time applications so CBR may be a better alternative <ref type="bibr" target="#b4">[5]</ref>. However, to supplement the CBR approach off-line, models can be used to verify new cases created by the adaptation process, or models can be used to initialize a case-base for a new product. And, in <ref type="bibr" target="#b69">[70]</ref>, models are generated from available case data.</p><p>Fuzzy logic has been combined with model-based reasoning, particularly in the domain of analog circuit diagnosis. Circuit measurements are represented using fuzzy values, and inferences are propagated using fuzzy techniques <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b52">[53]</ref>, <ref type="bibr" target="#b53">[54]</ref>.</p><p>Finally, in <ref type="bibr" target="#b51">[52]</ref> a proposed hybrid architecture employing models, cases, and fuzzy inference, for diagnosing microprocessor-based boards is described.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>XI. FUTURE DIRECTIONS</head><p>As electronic systems increase in complexity, the need for automated diagnostic tools has become more acute. This is exacerbated by reduced time-to-market, and shorter product lifecycles, leading to little development time being available for diagnostics. Although much research has been carried out in the area, much remains to be done, particularly in the deployment of useful tools, which save dollars, in real applications. Without a return on investment, there will be no implementation and no deployment. Some issues for future research are briefly discussed in this section.</p><p>1) Most complex electronic systems are now microprocessor or digital signal processor (DSP) driven. Most research has concentrated on hardware-only systems which consist of inputs, circuitry, and outputs. Processor-based boards involve the tight integration of hardware and software, and, therefore, present additional problems including the following. -Software test programs are generally used to test the hardware, but often these cannot be started if the board is defective. -</p><p>The test programs often only provide a pass/fail result.</p><p>What is an alternative test architecture which includes diagnosis without increasing the cost of test generation? On a manufacturing line, diagnosis is currently performed off-line using expensive debug technicians because diagnosis will often slow down the rate of production and, therefore, increase costs. 2) As product lifecycles reduce, fast deployment is a key issue <ref type="bibr" target="#b60">[61]</ref>. For example, many PC systems have a lifecycle of three months. Developing diagnostics models is time-consuming unless CAD data can be used <ref type="bibr" target="#b26">[27]</ref>.</p><p>Using cases suffers from the initial lack of suitable cases and a three to six month lifecycle does not give enough time to overcome this. 3) In <ref type="bibr" target="#b83">[84]</ref>, it is claimed that rule-based approaches are prevalent in industry and that the deployment of model-based approaches has been delayed by the perception that model-based solutions require specialized knowledge to enable implementation. To overcome this, a tool, which converts simple block diagrams of a system to a causal model is presented. Clearly, tools which simplify the development of intelligent diagnostic solutions are required and these tools must cater to the needs of engineers who may have little knowledge of AI. 4) Models based on structure and behavior have problems when scaled up to large circuits <ref type="bibr" target="#b41">[42]</ref>. Particularly, representing devices with complex behaviors (e.g., Pentium microprocessor) continues to be a problem <ref type="bibr" target="#b19">[20]</ref>. A suitable ontology <ref type="bibr" target="#b10">[11]</ref> or representation vocabulary is needed for the electronic system domain and with specific representations for particular device types. For example, in <ref type="bibr" target="#b12">[13]</ref>, a structure/behavior model-based solution with a representation vocabulary suited to the domain of switch-mode power supplies only, is deployed successfully. In comparison, the more generic MBR solutions have not been successfully applied to complex real-world circuit diagnosis to our knowledge. 5) Structure/behavior models use a correctly functioning model. What about defects which change the structure of the model (e.g., bridging fault) thus making the model incomplete <ref type="bibr" target="#b19">[20]</ref>? 6) Hybrid solutions form a continuing area of investigation, particularly the combined use of models and cases. Models suffer from the complexity versus completeness issue. If too complex, diagnosis can become intractable. If incomplete, diagnosis can be rapid but inaccurate. Conversely, CBR only becomes accurate after a period of deployment. Therefore, cases can be used to supplement and improve the diagnosis of an incomplete model and models can be used to initialize and verify cases.</p><p>However, what complexity of model supplemented by cases, will provide fast and accurate diagnosis from initial deployment, where no cases are available, but yet is simple enough to be developed within an acceptable timeframe <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b23">[24]</ref>? 7) Most CBR solutions only collect cases, which are relevant to a specific system type. A new product means starting all over again. Is it possible to collect generic cases or experiences? For example, a human technician can carry experiences learned on old products to new products. Can cases be stored in a more generalized way? 8) Collecting diagnostic information using probing, forms part of many past works on circuit diagnosis. However, with modern circuit boards, probing is becoming less of an option, as packaging densities increase. More information will have to be collected via diagnostic tests <ref type="bibr" target="#b43">[44]</ref>. 9) Design for test (DFT) has become more prominent as system test becomes more difficult. Can DFT strategies incorporate diagnosis without compromising test cost and quality? 10) Electronic systems diagnosis is an expensive activity requiring high skill. As part of manufacturing, it is performed off-line by debug technicians. Using automated techniques, can it be performed as part of an on-line test <ref type="bibr" target="#b4">[5]</ref> or can it be performed off-line by operators <ref type="bibr" target="#b60">[61]</ref>?</p><p>XII. SUMMARY Increasing costs, shorter product lifecycles, and rapid changes in technology are driving the need for automated diagnosis. Although research has been active over the last two decades, much remains to be done. Primarily, the developed techniques must be scaled up to deal with current and future technologies but with improved development times and costs. Otherwise, acceptance will be difficult, particularly in cost sensitive domains, such as PCs and consumer electronics. To date, there have been some applications, but the general use of intelligent diagnostic solutions for electronic system diagnosis has yet to happen.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Simple fault tree.</figDesc><graphic coords="2,311.10,62.28,234.24,322.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Simple fault model for a digital circuit.</figDesc><graphic coords="3,47.46,62.28,232.32,69.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Simple circuit model.</figDesc><graphic coords="3,304.50,62.28,244.32,204.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Information flow model example.</figDesc><graphic coords="5,307.38,62.28,238.56,119.76" type="bitmap" /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to acknowledge the comments and suggestions of the various reviewers which have been incorporated in this revised manuscript.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>He is also a Member of the Intelligent Systems Engineering Laboratory at the University of Ulster. His current research interests relate to the creation, design, and implementation of intelligent systems and, in particular, hybrid approaches embracing learning, reasoning, and evolving characteristics with applications in the embedded systems domain. He is the author or co-author of over 50 research papers and has contributed two book chapters in advanced texts.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Visualizing and understanding diagnoses</title>
		<author>
			<persName><forename type="first">S</forename><surname>Abu-Hakima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Can. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="4" to="8" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Agatha: An integrated expert system to test and diagnose complex personal computer boards</title>
		<author>
			<persName><forename type="first">D</forename><surname>Allred</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Innovative Applicat</title>
		<meeting>Innovative Applicat</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Radial basis function networks for analog fault isolation</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">S C</forename><surname>Babu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">C</forename><surname>Prasad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Circuits, Syst., Comput</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="643" to="655" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Evolutionary computation: Comments on history and current state</title>
		<author>
			<persName><forename type="first">T</forename><surname>Back</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Hammel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Schwefel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evolutionary Computat</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="3" to="17" />
			<date type="published" when="1997-04">Apr. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Circuit diagnosis support system for electronic assembly operations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Semmelbauer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dec. Support Syst</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="251" to="269" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fault hypothesis computations using fuzzy logic</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">M</forename><surname>Bearse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Lynch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Research Perspectives and Case Studies in System Test and Diagnosis</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Simpson</surname></persName>
		</editor>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Combining model-based and case-based expert systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ben-Bassat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Beniaminy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Joseph</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Research Perspectives and Case Studies in System Test and Diagnosis</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Simpson</surname></persName>
		</editor>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A possibilistic ATMS contribution to diagnose analog electronic circuits</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bos-Plachez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Intell. Syst</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="849" to="864" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On the application of neural networks to fault diagnosis of electronic analog circuits</title>
		<author>
			<persName><forename type="first">M</forename><surname>Catelani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Measurement</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="73" to="80" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Functional representation and causal processes</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chandrasekaran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Comput</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="73" to="143" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">What are ontologies and why do we need them?</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chandrasekaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Josephson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Benjamins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intell. Syst</title>
		<imprint>
			<biblScope unit="page" from="20" to="26" />
			<date type="published" when="1999-02">Jan./Feb. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">The Fuzzy Systems Handbook</title>
		<author>
			<persName><forename type="first">E</forename><surname>Cox</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Academic</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A case study on the use of model-based systems for electronic fault diagnosis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Cunningham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell. Eng</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="283" to="295" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An incremental retrieval mechanism for case-based electronic fault diagnosis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Cunningham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Smyth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bonzano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge-Based Syst</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="239" to="248" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Troubleshooting: When modeling is the trouble</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dague</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Raiman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Deves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Nat. Conf. Artif. Intell</title>
		<meeting>6th Nat. Conf. Artif. Intell</meeting>
		<imprint>
			<date type="published" when="1987">1987</date>
			<biblScope unit="page" from="600" to="605" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Analog systems diagnosis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dague</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 9th Euro. Conf</title>
		<meeting>9th Euro. Conf</meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="173" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Model-based diagnosis of analog electronic circuits</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dague</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Math. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="439" to="492" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Qualitative reasoning: A survey of techniques and applications</title>
	</analytic>
	<monogr>
		<title level="j">AICOM</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3-4</biblScope>
			<biblScope unit="page" from="119" to="192" />
			<date type="published" when="1995-12">Sept./Dec. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Diagnostic reasoning based on structure and behavior</title>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="347" to="410" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Model-based reasoning: Troubleshooting</title>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hamscher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Readings in Model-Based Diagnosis</title>
		<editor>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><surname>Hamscher</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">L</forename><surname>Console</surname></persName>
		</editor>
		<meeting><address><addrLine>San Mateo, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Pimtool: An expert system to troubleshoot computer hardware failures</title>
		<author>
			<persName><forename type="first">N</forename><surname>Dev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Innovative Applicat</title>
		<meeting>Innovative Applicat</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">An introduction to possibilistic and fuzzy logics</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Prade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Non-Standard Logics for Automated Reasoning</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Smets</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Academic</publisher>
			<date type="published" when="1988">1988</date>
			<biblScope unit="page" from="287" to="326" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A method to aid test-tree generation for hardware fault isolation in automotive electronic control systems</title>
		<author>
			<persName><forename type="first">O</forename><surname>Duffaut</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Castel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. TOOLDIAG Int. Conf. Fault Diagnosis</title>
		<meeting>TOOLDIAG Int. Conf. Fault Diagnosis</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="230" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Case-based reasoning in model-based diagnosis</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Feret</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">I</forename><surname>Glasgow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applicat. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="679" to="692" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fault detection and isolation in technical processes with neural networks</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Koppen-Seliger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 34th Conf. Dec. Contr</title>
		<meeting>34th Conf. Dec. Contr</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="2414" to="2419" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">New developments using AI in fault diagnosis</title>
	</analytic>
	<monogr>
		<title level="j">Eng. Applicat. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="14" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">The use of design descriptions in automated diagnosis</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Genesereth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="411" to="436" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Diagnosing circuits with state: An inherently underconstrained problem</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hamscher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 4th Nat. Conf. Artif. Intell</title>
		<meeting>4th Nat. Conf. Artif. Intell</meeting>
		<imprint>
			<date type="published" when="1984">1984</date>
			<biblScope unit="page" from="142" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Modeling digital circuits</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>Hamscher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">1-3</biblScope>
			<biblScope unit="page" from="223" to="271" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A model-based diagnosis system for identifying faulty components in digital circuits</title>
		<author>
			<persName><forename type="first">B</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-T</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Intell</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="37" to="52" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Adaptation in Natural and Artificial Systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Holland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>Univ. of Michigan Press</publisher>
			<pubPlace>Ann Arbor, MI</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">On fuzzy logic applications for automatic control, supervision, and fault diagnosis</title>
		<author>
			<persName><forename type="first">R</forename><surname>Isermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Syst., Man, Cybern. A</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="221" to="235" />
			<date type="published" when="1998-03">Mar. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Artificial neural networks: A tutorial</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="page" from="31" to="44" />
			<date type="published" when="1996-03">Mar. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A neural network model for the fault diagnosis of digital circuits</title>
		<author>
			<persName><forename type="first">O</forename><surname>Jakubowicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ramanujam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Neural Networks</title>
		<meeting>Int. Conf. Neural Networks</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="611" to="614" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Artificial neural network based multiple fault diagnosis in digital circuits</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Al-Jumah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Arslan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICCAS</title>
		<meeting>ICCAS</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="304" to="307" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Generation of diagnostic trees by means of simplified process models and machine learning</title>
		<author>
			<persName><forename type="first">D</forename><surname>Juricic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Znidarsic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fussel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="15" to="29" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
	<note type="report_type">Eng. Applicat</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Bayesian nets-A tool which makes Bayes Rule useful for diagnosis</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kirsch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Fault Diagnosis (TOOLDIAG)</title>
		<meeting>Int. Conf. Fault Diagnosis (TOOLDIAG)</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="748" to="756" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An assumption-based TMS</title>
		<author>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="127" to="162" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Multiple fault diagnosis</title>
		<author>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="163" to="196" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Diagnosis with behavioral modes</title>
	</analytic>
	<monogr>
		<title level="m">Proc. IJCAI</title>
		<meeting>IJCAI</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
			<biblScope unit="page" from="104" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Using crude probability measures to guide diagnosis</title>
		<author>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="381" to="391" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Focusing on probable diagnosis</title>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Conf. Artif. Intell</title>
		<meeting>Nat. Conf. Artif. Intell</meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="842" to="848" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Model-based diagnosis in SOPHIE III</title>
		<author>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Readings in Model-Based Diagnosis</title>
		<editor>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><surname>Hamscher</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">L</forename><surname>Console</surname></persName>
		</editor>
		<meeting><address><addrLine>San Mateo, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Trading off the costs of inference versus probing in diagnosis</title>
		<author>
			<persName><forename type="first">J</forename><surname>De Kleer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Raiman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IJCAI</title>
		<meeting>IJCAI</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="1736" to="1741" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">Case-Based Reasoning</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kolodner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Morgan Kaufmann</publisher>
			<pubPlace>San Mateo, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">A tutorial introduction to case-based reasoning</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kolodner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Leake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Case Based Reasoning: Experiences, Lessons, and Future Directions</title>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Leake</surname></persName>
		</editor>
		<meeting><address><addrLine>Menlo Park, CA</addrLine></address></meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">ESPCRM-An expert system for personal computer repair and maintenance</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">W</forename><surname>Leng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">K</forename><surname>Teen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Applicat. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="121" to="133" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">INSIDE: A connectionist-based diagnostic expert system that learns incrementally</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Lim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Joint Conf. Neural Networks</title>
		<meeting>Int. Joint Conf. Neural Networks</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1693" to="1698" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Case-based diagnostic system using fuzzy neural network</title>
		<author>
			<persName><forename type="first">Z.-Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Neural Networks</title>
		<meeting>IEEE Conf. Neural Networks</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="3107" to="3112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Artificial Intelligence: Structures and Strategies for Complex Problem Solving</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">F</forename><surname>Luger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">A</forename><surname>Stubblefield</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Diagnosis of multifaults in analogue circuits using multilayer perceptrons</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Maidon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Inst. Elect. Eng., Circuits Devices Syst</title>
		<imprint>
			<biblScope unit="volume">144</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="149" to="154" />
			<date type="published" when="1997-06">June 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Intelligent test and repair of microprocessor-based products</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">P</forename><surname>Maguire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Joint Conf. Inform. Syst</title>
		<meeting>Joint Conf. Inform. Syst</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="283" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">FLAMES: A fuzzy logic ATMS and model-based expert system for analog diagnosis</title>
		<author>
			<persName><forename type="first">F</forename><surname>Mohammed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Marzouki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Touati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Euro. Design Test Conf</title>
		<meeting>Euro. Design Test Conf</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="259" to="263" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Test and diagnosis of analog circuits: When fuzziness can lead to accuracy</title>
		<author>
			<persName><forename type="first">F</forename><surname>Mohammed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Marzouki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Electron. Testing</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="203" to="216" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Hierarchical model-based diagnois</title>
		<author>
			<persName><forename type="first">I</forename><surname>Mozetic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Man-Mach. Stud</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="329" to="362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Neural network recognition of electronic malfunctions</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Kagle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Intell. Manufact</title>
		<imprint>
			<biblScope unit="page" from="205" to="216" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Automatic fault tree generation</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Netten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Vingerhoeds</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IFAC Intell. Emerging Contr. Technol</title>
		<imprint>
			<biblScope unit="page" from="173" to="178" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">On-line testing for VLSIA-Compendium of approaches</title>
		<author>
			<persName><forename type="first">M</forename><surname>Nicolaidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zorian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Electron. Testing: Theory Applicat</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="7" to="20" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">A probabilistic causal model for diagnostic problem solving-Part I: Integrating symbolic causal inference with numeric probabilistic inference</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Reggia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="146" to="162" />
			<date type="published" when="1987-04">Mar./Apr. 1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">A probabilistic causal model for diagnostic problem solving-Part II: Diagnostic strategy</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="395" to="406" />
			<date type="published" when="1987-06">May/June 1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Deploying a model-based diagnostic system in the manufacturing test environment</title>
		<author>
			<persName><forename type="first">C</forename><surname>Preist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEE Colloq</title>
		<meeting>IEE Colloq<address><addrLine>London, U.K</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">E</forename><surname>Rich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Knight</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>McGraw-Hill</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Knowledge based systems for instrumentation diagnosis, system configuration and circuit and system design</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Rowland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Applicat. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="437" to="446" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Implementing an expert system for fault diagnosis of electronic equipment</title>
		<author>
			<persName><forename type="first">T</forename><surname>Satyanarayana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Subramanyam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Rama Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Applicat. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="355" to="364" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Fault diagnosis in systems using fuzzy logic</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sauter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. First Euro</title>
		<meeting>First Euro</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="781" to="788" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A practical expert system for color TV diagnostic and repair</title>
		<author>
			<persName><forename type="first">B.-H. Alice</forename><surname>Seng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B.-H</forename><surname>Tay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPICIS</title>
		<meeting>SPICIS</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="448" to="453" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Explanation-based learning with diagnostic models</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE AutoTestCon Conf</title>
		<meeting>IEEE AutoTestCon Conf</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="159" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Generating distinguishing tests based on hierarchical models and symptom information</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Comput. Design: VLSI in Comput</title>
		<meeting>IEEE Int. Conf. Comput. Design: VLSI in Comput</meeting>
		<imprint>
			<date type="published" when="1983">1983</date>
			<biblScope unit="page" from="455" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Development of self-maintenance photocopiers</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shimomura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AI Mag</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="41" to="53" />
			<date type="published" when="1995">1995</date>
			<pubPlace>Winter</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<monogr>
		<title level="m" type="main">in Research Perspectives and Case Studies in System Test and Diagnosis</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</author>
		<editor>J. W. Sheppard and W. R. Simpson</editor>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Kluwer</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
	<note>Inducing diagnostic inference models from case data</note>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Simpson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</author>
		<title level="m">System Test and Diagnosis</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Managing conflict in system diagnosis</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="69" to="76" />
			<date type="published" when="1998-03">Mar. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">A CBR application: Service productivity improvement by sharing experience</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sugimatsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symp. Emerging Technol. Factory Automat</title>
		<meeting>IEEE Symp. Emerging Technol. Factory Automat</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="132" to="141" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Experience in using neural networks for electronic diagnosis</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A E</forename><surname>Totton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Limb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd Int. Conf. Artif. Neural Networks</title>
		<meeting>2nd Int. Conf. Artif. Neural Networks</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="115" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Fault diagnosis in complex systems using artificial neural networks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Tzafestas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Dalianis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE 3rd Conf. Contr. Applicat</title>
		<meeting>IEEE 3rd Conf. Contr. Applicat</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="877" to="882" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Extracting knowledge from diagnostic databases</title>
		<author>
			<persName><forename type="first">R</forename><surname>Uthurusamy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Expert</title>
		<imprint>
			<biblScope unit="page" from="27" to="38" />
			<date type="published" when="1993-12">Dec. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Fuzzy sets</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Zadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Contr</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="338" to="353" />
			<date type="published" when="1965">1965</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Fuzzy algorithms</title>
	</analytic>
	<monogr>
		<title level="j">Inform. Contr</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="94" to="102" />
			<date type="published" when="1968">1968</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Outline of a new approach to the analysis of complex systems and decision making approach</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="28" to="44" />
			<date type="published" when="1973-01">Jan. 1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Abramovici</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Breuer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Friedman</surname></persName>
		</author>
		<title level="m">Digital Systems Testing and Testable Design</title>
		<meeting><address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Encapsulation and diagnosis with fault dictionaries</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Simpson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE AutoTestCon</title>
		<meeting>IEEE AutoTestCon</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="441" to="445" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Creating small fault dictionaries</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Larrabee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput.-Aided Design Integrated Circuits Syst</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="346" to="356" />
			<date type="published" when="1999-03">Mar. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Application of a Bayesian network to integrated circuit tester diagnosis</title>
		<author>
			<persName><forename type="first">D</forename><surname>Mittelstadt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Paasch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Ambrosio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. ASME</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="391" to="403" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Model-based diagnosis under real-world constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Darwiche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AI Mag</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="57" to="73" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">The consistency-based approach to automated diagnosis of devices</title>
		<author>
			<persName><forename type="first">O</forename><surname>Dressler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Struss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Principles of Knowledge Representation</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Brewka</surname></persName>
		</editor>
		<meeting><address><addrLine>Stanford, CA</addrLine></address></meeting>
		<imprint>
			<publisher>CSLI</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="267" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">System complexity and integrated diagnosis</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Simpson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Des. Test Comput</title>
		<imprint>
			<biblScope unit="page" from="16" to="30" />
			<date type="published" when="1991-09">Sept. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">An experiment in encapsulation in system diagnosis</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gartner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Simpson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. AutoTestCon</title>
		<meeting>AutoTestCon</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="468" to="472" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">An intelligent approach to automatic test equipment</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Simpson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sheppard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Test Conf</title>
		<meeting>Int. Test Conf</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="419" to="425" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<monogr>
		<title level="m" type="main">in Research Perspectives and Case Studies in System Test and Diagnosis</title>
		<author>
			<persName><forename type="first">J</forename><surname>Taylor</surname></persName>
		</author>
		<editor>J. W. Sheppard and W. R. Simpson</editor>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Kluwer</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
	<note>A standard for test and diagnosis</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
