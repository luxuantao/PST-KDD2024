<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Distributed Time Synchronization in Wireless Sensor Networks with Coupled Discrete-Time Oscillators</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">O</forename><surname>Simeone</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Wireless Communications and Signal Processing Research</orgName>
								<orgName type="institution">New Jersey Institute of Technology</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">University Heights</orgName>
								<address>
									<postCode>07102-1982</postCode>
									<settlement>Newark</settlement>
									<region>NJ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">U</forename><surname>Spagnolini</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Dipartimento di Elettronica e Informazione</orgName>
								<orgName type="institution">Politecnico di Milano</orgName>
								<address>
									<addrLine>Piazza Leonardo da Vinci 32</addrLine>
									<postCode>20133</postCode>
									<settlement>Milano</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Distributed Time Synchronization in Wireless Sensor Networks with Coupled Discrete-Time Oscillators</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D86799B49A4166DED80A80509B7C9BB5</idno>
					<idno type="DOI">10.1155/2007/57054</idno>
					<note type="submission">Received 25 September 2006; Accepted 30 March 2007 Recommended by Mischa Dohler</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:13+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In wireless sensor networks, distributed timing synchronization based on pulse-coupled oscillators at the physical layer is currently being investigated as an interesting alternative to packet synchronization. In this paper, the convergence properties of such a system are studied through algebraic graph theory, by modeling the nodes as discrete-time clocks. A general scenario where clocks may have different free-oscillation frequencies is considered, and both time-invariant and time-variant network topologies (or fading channels) are discussed. Furthermore, it is shown that the system of oscillators can be studied as a set of coupled discrete-time PLLs. Based on this observation, a generalized system design is discussed, and it is proved that known results in the context of conventional PLLs for carrier acquisition have a counterpart in distributed systems. Finally, practical details of the implementation of the distributed synchronization algorithm over a bandlimited noisy channel are covered.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Distributed timing synchronization refers to a decentralized procedure that ensures the achievement and maintenance of a common time-scale (frequency and phase) for all the nodes of the network <ref type="bibr" target="#b0">[1]</ref>. This condition enables a wide range of applications and functionalities of a sensor networks, including complex sensing tasks (distributed detection/estimation, data fusion), power saving (all nodes sleep and wake-up at coordinate times), and medium access control for communication (e.g., time division multiple access and cooperative communications).</p><p>Conventional design of distributed algorithms for timing synchronization prescribes the exchange of local time information through packets carrying a time-stamp to be appropriately elaborated by the transmitting and receiving nodes <ref type="bibr" target="#b0">[1]</ref>. Packet-based synchronization has been widely studied, especially in the context of wireline networks. However, the specific features and requirements of wireless sensor networks call for alternative methods that improve both the computational complexity (and therefore energy efficiency) and scalability. Toward this goal, physical layer-based synchronization protocols are currently being investigated that exploit the broadcast nature of radio propagation. The idea is to build distributed algorithms based on the exchange of pulses at the physical layer, thus avoiding the need to perform complex processing at the packet level.</p><p>Physical layer-based synchronization was studied in <ref type="bibr" target="#b1">[2]</ref> using a mathematical framework developed in <ref type="bibr" target="#b2">[3]</ref> in order to model the spontaneous establishment of synchronous periodic activities in biological systems, such as the flashing of fireflies. In <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref>, nodes are modeled as integrate-and-fire oscillators coupled through the transmission of pulses. Convergence is proved under the assumption of an all-to-all interconnection among the nodes. The model was later extended in <ref type="bibr" target="#b3">[4]</ref>, by explicitly including constraints on the transmission range of each node. In particular, the authors derived a bound on the velocity of convergence by using algebraic graph theory <ref type="bibr" target="#b4">[5]</ref>. An implementation of distributed synchronization on a real sensor network testbed was reported in <ref type="bibr" target="#b5">[6]</ref>. A related work is <ref type="bibr" target="#b6">[7]</ref>, where a generalization of the model in <ref type="bibr" target="#b2">[3]</ref> is proposed and the regime of an asymptotically dense network is investigated. As a final remark, it should be noted that the framework of physical layer-based timing synchronization has been recently interpreted as a means to achieve distributed estimation/detection <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> or data fusion <ref type="bibr" target="#b9">[10]</ref>.</p><p>In this paper, we reconsider physical layer-based synchronization by modeling the sensors as coupled discrete-time oscillators. Basically, each node modifies its current clock based on a weighted average of the residual differences of timing phases as measured with respect to other nodes. The synchronization algorithms proposed in <ref type="bibr" target="#b10">[11]</ref> in the context of interbase station communication and <ref type="bibr" target="#b11">[12]</ref> for intervehicle transmission can be seen as instances of this general model. The analytical framework is at the same time a generalization and an application of the literature on discrete-time consensus problems for networks of agents (see, e.g., <ref type="bibr" target="#b12">[13]</ref>). In particular, differently from <ref type="bibr" target="#b12">[13]</ref>, here we address the case of clocks with generally different free-oscillation frequencies, and account for the specific features of a wireless network, namely channel reciprocity and randomness (fading). Analysis of convergence of the synchronization process is carried out by algebraic graph theory as in <ref type="bibr" target="#b3">[4]</ref>, allowing to relate global convergence properties to the local connectivity of the network. The results are first derived for a time-invariant scenario, and then extended to the case where the network topology (or fading) varies with time, building on the results presented in <ref type="bibr" target="#b13">[14]</ref>.</p><p>A central contribution of this paper is the observation that the distributed synchronization system at hand can be modeled as a set of coupled discrete-time phase locked loops (PLLs). The system can thus be seen as a discrete-time version of the network synchronization scheme of <ref type="bibr" target="#b14">[15]</ref>, that is based on continuously-coupled analog PLLs. This fact allows us to generalize the system design by introducing the concept of loop order. Moreover, we prove that known results about the convergence of conventional PLLs for carrier acquisition have a counterpart in distributed systems. In particular, it is shown that, under appropriate conditions on the interconnections between sensors, (i) a system of first-order distributed PLLs is able to recover perfectly a phase mismatch among the clocks; (ii) in case of a frequency error, first-order loops are able to recover the frequency gap, but at the expense of an asymptotic phase mismatch; (iii) this asymptotic phase mismatch can be reduced by considering second-order loops.</p><p>Finally, the analysis is complemented by addressing the issue of a practical implementation of the distributed synchronization algorithm over a bandlimited Gaussian channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">SYSTEM MODEL AND MAIN ASSUMPTIONS</head><p>Let the wireless network be composed of K sensors, where each node, say the kth, has a discrete-time clock with period T k . If the nodes are left isolated, the timing clock of the kth sensor evolves as t k (n) = nT k +τ k (0), where 0 ≤ τ k (0) &lt; T k is an initial arbitrary phase and n = 1, 2, . . . runs over the periods of the timing signal. Two synchronization conditions are of interest. We say the K clocks are frequency synchronized if</p><formula xml:id="formula_0">t k (n + 1) -t k (n) = T (1)</formula><p>for each k and for sufficiently large n, where 1/T is the common frequency. A more strict condition requires full frequency and phase synchronization<ref type="foot" target="#foot_0">1</ref> :</p><formula xml:id="formula_1">t 1 (n) = t 2 (n) = • • • = t k (n) for n -→ ∞. (<label>2</label></formula><formula xml:id="formula_2">)</formula><p>We remark that the network is said to fractionate into, say, two clusters of synchronization if there exist a permutation function on the nodes' labels, π(i) : [1, . . . , n] → <ref type="bibr">[1, . . . , n]</ref> such that for n large enough</p><formula xml:id="formula_3">t π(1) (n) = • • • = t π(r) (n), t π(r+1) (n) = • • • = t π(K) (n),<label>(3)</label></formula><p>where the number of nodes in the two clusters is r and K -r, respectively. The definition above generalizes naturally to more than two clusters. Towards the goal of achieving synchronization, the clocks of different sensors can be coupled by letting any node radiate a timing signal as the one sketched in Figure <ref type="figure">1</ref>. A pulse<ref type="foot" target="#foot_1">2</ref> is transmitted at times t k (n) by the kth node and received through independent flat fading channels by the other sensors. It is assumed that all the nodes transmit with the same power, and that the power P ki received on the wireless link between the ith and the kth user reads</p><formula xml:id="formula_4">P ki (n) = C d γ ki (n) • G ki (n),<label>(4)</label></formula><p>where C is an appropriate constant that depends on the transmitted power (assumed here to be the same for all nodes), d ki (n) = d ik (n) is the distance between node i and node k at the nth period, G ki (n) is a random variable accounting for the fading process, and γ is the path loss exponent (γ = 2 ÷ 4). Notice that the fading channel is reciprocal (all transmissions use the same carrier frequency), which implies that G ik (n) = G ki (n) and P ik (n) = P ki (n) for i / = k <ref type="bibr" target="#b15">[16]</ref>. As detailed in the following, each node (at any period n) processes the received signal in order to estimate the time difference between its own clock t k (n) and the corresponding "firing" instant of other nodes, that is,</p><formula xml:id="formula_5">t i (n)-t k (n), i /</formula><p>= k, and, based on this measure, it updates its own clock.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">The synchronization algorithm</head><p>In this section, we consider the synchronization procedure under the ideal assumptions that any node, say the kth, is able to measure exactly the time differences t i (n) -t k (n) and the powers P ki (n) of other nodes (i / = k) based on the received signal. This model is elaborated upon in the first part of the</p><formula xml:id="formula_6">τ k (0) t k (0) T τ k (1) t k (1) 2T τ k (2) t k (2) 3T • • • τ k (n) nT t k (n) t Figure 1: Clock t k (n) of the kth node. τ k (n)</formula><p>is the timing phase in the nth period of the clock.</p><p>paper. A practical implementation of the system that alleviates the said assumptions (and in particular, does not require estimation of time of arrivals) is then discussed in Section 7.</p><p>At the nth period, the kth node updates its clock t k (n) according to a weighted sum of timing differences Δt k (n + 1)<ref type="foot" target="#foot_2">3</ref> :</p><formula xml:id="formula_7">t k (n + 1) = t k (n) + ε • Δt k (n + 1) + T k , (<label>5a</label></formula><formula xml:id="formula_8">)</formula><formula xml:id="formula_9">Δt k (n + 1) = K i=1, i / =k α ki (n) t i n) -t k (n) , (<label>5b</label></formula><formula xml:id="formula_10">)</formula><p>where ε is the step-size (0 &lt; ε &lt; 1) and the coefficients α ki (n) are selected so that α ki (n) ≥ 0 and K i=1, i / =k α ki (n) = 1. The updating rule <ref type="bibr" target="#b4">(5)</ref> generalizes the algorithms of <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref> (and the consensus algorithms, see, e.g., <ref type="bibr" target="#b12">[13]</ref>) to a frequencyasynchronous scenario. In this paper, we focus on the following choice for the coefficients α ki (n):</p><formula xml:id="formula_11">α ki (n) = P ki (n) K j=1, j / =k P k j (n) . (<label>6</label></formula><formula xml:id="formula_12">)</formula><p>The selection of the weighting coefficients ( <ref type="formula" target="#formula_11">6</ref>) is inspired by the algorithms proposed in <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>. The rationale of this design is that time differences measured over more unreliable (i.e., low-power) channels should be weighted less when updating the clock, thus rendering the algorithm robust against measurement errors over the fading channels (see also <ref type="bibr">Section 7)</ref>. Notice that by using (5b) we are implicitly neglecting the propagation delays among nodes, that are assumed to be smaller than the timing resolution. A method to handle propagation delays is described in <ref type="bibr" target="#b10">[11]</ref>. As a final remark, we notice that the dynamic system (5) updates the clock t k (n+1) as a convex combination of the times {t i (n)} K i=1 <ref type="bibr" target="#b13">[14]</ref>.</p><p>By defining the vector containing the clocks of all nodes as t(n</p><formula xml:id="formula_13">) = [t 1 (n) • • • t K (n)] T and the vector of clock periods T = [T 1 • • • T K ] T ,</formula><p>we can express (5) as the difference vector equation</p><formula xml:id="formula_14">t(n + 1) = A(n) • t(n) + T,<label>( 7 )</label></formula><p>where</p><formula xml:id="formula_15">A(n) is a K × K matrix such that we have [A(n)] ii = 1 -ε on the main diagonal and [A(n)] i j = ε • α i j (n) for i / = j.</formula><p>Notice that even though we assume channel reciprocity, matrix A(n) is not symmetric. Moreover, by construction, matrix A(n) is nonnegative and stochastic since the sum of the elements on each row sums to one, or equivalently</p><formula xml:id="formula_16">A(n) • 1 = 1.<label>(8)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">TIME-INVARIANT FREQUENCY-SYNCHRONOUS NETWORK</head><p>In this section, we study the convergence properties of the distributed synchronization algorithm (5) under the following assumptions: (i) frequency-synchronous network, that is, all the clocks share the same period</p><formula xml:id="formula_17">T = T 1 = • • • = T K ; (ii)</formula><p>the network is time-invariant, that is, P ki (n) = P ki for any n and k / = i. From assumption (i), the clock of the kth node can be expressed as</p><formula xml:id="formula_18">t k (n) = nT + τ k (n),<label>(9)</label></formula><p>where τ k (n) is the timing phase 0 ≤ τ k (n) &lt; T of the kth node in the nth period (see Figure <ref type="figure">1</ref>). Moreover, by substituting (9) into (5a) and using assumption (ii), it easily follows that the synchronization algorithm (5) can be written in terms of the phases τ k (n) as</p><formula xml:id="formula_19">τ k (n + 1) = τ k (n) + ε • Δτ k (n + 1),<label>(10a)</label></formula><formula xml:id="formula_20">Δτ k (n + 1) = K i=1, i / =k α ki τ i (n) -τ k (n)<label>(10b)</label></formula><p>with coefficients α ki :</p><formula xml:id="formula_21">α ki = P ki K j=1, j / =k P k j . (<label>11</label></formula><formula xml:id="formula_22">)</formula><p>Finally, by defining the vector containing the timings of all nodes as τ(n</p><formula xml:id="formula_23">) = [τ 1 (n) • • • τ K (n)]</formula><p>T , the vector model (7) becomes</p><formula xml:id="formula_24">τ(n + 1) = A • τ(n), (<label>12</label></formula><formula xml:id="formula_25">)</formula><p>where A is a K × K matrix such that we have [A] ii = 1 -ε on the main diagonal and [A] i j = ε • α i j for i / = j. Model <ref type="bibr" target="#b11">(12)</ref> resembles the one considered in the literature on multiagent coordination (see, e.g., <ref type="bibr" target="#b12">[13]</ref>). The goal of this section is to determine the conditions under which the system <ref type="bibr" target="#b11">(12)</ref> converges to a unique cluster or to multiple clusters of synchronization for a fixed realization of the fading variables G ki in (4), that is, matrix A is assumed to be deterministic. We will define the conditions of convergence in terms of the properties of the graph associated to the wireless network under study, or equivalently in terms of the system matrix A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">The associated graph and useful definitions</head><p>The synchronization algorithm defines a weighted directed graph G = (V, E , A) of order K on the sensor network, where V ={1, . . . , K} is the set of nodes and E ⊆ V × V is the set of edges weighted by the off-diagonal elements of the K × K adjacency matrix [A] i j = α i j . The edge connecting the ith and the jth nodes, i / = j, belongs to E if and only if α i j &gt; 0. Notice that the graph is directed (α i j / = α ji for i / = j), even though fading links are reciprocal (P i j = P ji for i / = j). Moreover, notice that the system matrix reads</p><formula xml:id="formula_26">A = I-εL, (<label>13</label></formula><formula xml:id="formula_27">)</formula><p>where L is the graph Laplacian of the network that is defined as <ref type="bibr" target="#b12">[13]</ref>: [L] ii = 1 (which is the degree of node i: j / =i α i j ) and [L] i j = -α i j for i / = j. The main result of this section (Theorem 1) relates the convergence properties of the distributed synchronization procedure in <ref type="bibr" target="#b9">(10)</ref> with the connectivity of the graph G associated to the sensor network. We need the following definitions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 1.</head><p>A graph G is said to be strongly connected if there exists a path (i.e., a collection of edges in E ) that links every pair of nodes.</p><p>It can be proved that strong connectivity of graph G is equivalent to the irreducibility of matrix A <ref type="bibr" target="#b17">[18]</ref>. Definition 2. A K × K matrix A is said to be reducible if there exists a K × K permutation matrix P and an integer r &gt; 0 such that</p><formula xml:id="formula_28">P T AP = B C 0 D , (<label>14</label></formula><formula xml:id="formula_29">)</formula><p>where</p><formula xml:id="formula_30">B is r × r, D is K -r × K -r, C is r × K -r, and the zero matrix 0 is K -r × r. A matrix A is called irreducible if it is not reducible.</formula><p>The degree of irreducibility of a matrix A, or equivalently of strong connectivity of the associated graph G, can be measured by the following quantity</p><formula xml:id="formula_31">σ = min V1,V2 i∈V1, j / ∈V1 α i j + i∈V2, j / ∈V2 α i j , (<label>15</label></formula><formula xml:id="formula_32">)</formula><p>where the minimum is taken over all nonempty proper sub-</p><formula xml:id="formula_33">sets of V, V 1 ∩ V 2 = (V 1 ∪ V 2 = V).</formula><p>It can be shown that σ = 0 if and only if the matrix A is reducible, or the associated graph G is not strongly connected <ref type="bibr" target="#b18">[19]</ref>.<ref type="foot" target="#foot_3">4</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Convergence properties</head><p>The main result of this section can be now stated as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 1. (i)</head><p>The distributed synchronization <ref type="bibr" target="#b9">(10)</ref> converges to a unique cluster of synchronized nodes,  <ref type="figure">K</ref>, where v is the normalized left eigenvector of matrix A corresponding to eigenvalue 1:</p><formula xml:id="formula_34">τ 1 (n) = • • • = τ K (n) = τ * for n → ∞, if</formula><formula xml:id="formula_35">τ(n) -→ τ * = 1 • v T τ(0), (<label>16</label></formula><formula xml:id="formula_36">)</formula><formula xml:id="formula_37">or equivalently τ k (n) → τ * k = v T τ(0) for k = 1, . . . ,</formula><formula xml:id="formula_38">A T v = v with 1 T v = 1.</formula><p>An immediate consequence of Theorem 1 is that the timing vectors converge to the average of their initial values τ(0) if and only if the system matrix A is doubly stochastic (i.e., if A T is stochastic as well). In fact, in this case A T 1 = 1 and vector v in ( <ref type="formula" target="#formula_35">16</ref>) reads v = 1/K•1. This condition occurs in balanced networks <ref type="bibr" target="#b12">[13]</ref>, where i / = j α i j = 1 = i / = j α ji . In sensor networks, this result is of interest in applications where the steady state value of synchronization is used in order to infer the status of the process monitored by the sensor <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b19">20]</ref>.</p><p>Proof. The proof of part (i) of Theorem 1 is available in the literature for applications where the graph G associated to the dynamic system ( <ref type="formula" target="#formula_24">12</ref>) is undirected <ref type="bibr" target="#b4">[5]</ref>. In the case of a directed graph, strong connectivity can generally be proved to be only a sufficient condition for synchronization. However, in a wireless fading case with reciprocal channels, the result can be proved as shown in the following. The second part (ii) of Theorem 1 follows from a result derived, among the others, in <ref type="bibr" target="#b12">[13]</ref>.</p><p>As explained above, in order to prove Theorem 1, we only need to show that strong connectivity is also a necessary condition for synchronization. As a by-product, the proposed proof brings insight into the formation of multiple clusters of synchronization <ref type="bibr" target="#b2">(3)</ref>. Let us assume that A is reducible (or equivalently the associated graph G is not strongly connected). Then, by definition, there exists a permutation matrix P and an integer r &gt; 0 such that ( <ref type="formula" target="#formula_28">14</ref>) holds. But if α i j = 0 in A, then for reciprocity P i j = P ji = 0 and then α ji = 0 (i / = j). This property is sometimes referred to as bidirectionality of the graph (i.e., α i j = 0 if and only if α ji = 0 but α i j and α ji need not to be equal <ref type="bibr" target="#b13">[14]</ref>). Therefore, the r × Kr matrix C in ( <ref type="formula" target="#formula_28">14</ref>) has all zero entries. Since the permuted matrix P T AP is nonnegative and stochastic, so are submatrices B and D. By applying the permutation function T , where P k is the kth row of matrix P, to the nodes' labels, we can write the system <ref type="bibr" target="#b11">(12)</ref> as</p><formula xml:id="formula_39">π(k) = P k [1 • • • K]</formula><formula xml:id="formula_40">τ(n + 1) = B 0 0 D τ(n), (<label>17</label></formula><formula xml:id="formula_41">)</formula><p>where τ(n) = Pτ(n). Therefore, the set of r nodes {π(1), . . . , π(r)} evolves independently from the remaining nodes {π(r + 1), . . . , π(K)}. Now, if either B or D are reducible, the reasoning above can be iterated bringing to the formation of multiple independent set of nodes evolving separately. At the end of this procedure, the system matrix can be written as a block matrix with irreducible stochastic blocks on the diagonal. Without loss of generality, let us then assume that B and D are irreducible. From the first part of the proof (see also Appendix A), it follows the two cluster of r and (K -r) nodes synchronize among themselves according to <ref type="bibr" target="#b2">(3)</ref>. Moreover, the steady state values of the timing vectors depend on the left eigenvectors of B and D according to <ref type="bibr" target="#b15">(16)</ref>:</p><formula xml:id="formula_42">τ π(i) (n) -→ v T B τ r (0), i = 1, . . . , r, (<label>18a</label></formula><formula xml:id="formula_43">)</formula><formula xml:id="formula_44">τ π(i) (n) = v T D τ K-r (0), i = r + 1, . . . , K -r, (<label>18b</label></formula><formula xml:id="formula_45">)</formula><p>where</p><formula xml:id="formula_46">B T v B = v B , D T v D = v D , τ r (n) = [τ π(1) (n) • • • τ π(r) (n)] is the r × 1 vector collecting the first r entries of τ(n) and τ K-r (n) = [τ π(r+1) (n) • • • τ π(K) (n)] is the K -r × 1 vector collecting the remaining entries.</formula><p>The convergence of the dynamic system at hand could be also studied in terms of the subdominant eigenvalue of matrix A, similarly to approach commonly adopted in the context of the analysis of Markov chains <ref type="bibr" target="#b20">[21]</ref>. In particular, the following results can be proved relating convergence to the multiplicity of eigenvalue 1.</p><p>Theorem 2. The distributed synchronization <ref type="bibr" target="#b9">(10)</ref> converges to a unique cluster of synchronized nodes as in <ref type="bibr" target="#b1">(2)</ref> if and only if the subdominant eigenvalue λ 2 / = 1.</p><p>Proof. By recalling Theorem 1, it is enough to prove that: (i) if λ 2 = 1, then the graph is not strongly connected; (ii) if the graph is not strongly connected then, λ 2 = 1. Part (i) can be proved similarly to <ref type="bibr" target="#b12">[13]</ref>; however, in Appendix A we give an alternative proof based on the measure σ in (15) of irreducibilty of A. Part (ii) does not hold in general for problems with directed graphs but it is easily shown under the reciprocity assumption similarly to Theorem 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Numerical results</head><p>Here, we present a numerical example to corroborate the analysis discussed above. A network of K = 4 nodes is considered where the nodes are divided into two groups, V 1 = {1, 2} and V 2 = {3, 4}, as in Figure <ref type="figure">2</ref>. The initial phases τ k (0) are set to τ(0)/T = [0.1 0.4 0.6 0.8] T . Fading variables G ki are equal to 1, the path loss exponent is γ = 3, D/d = 2, and ε = 0.3. Notice that, given the definition <ref type="bibr" target="#b10">(11)</ref>, the performance is not affected by the value of C in (4) and it only depends on relative distances. Figure <ref type="figure">3</ref> shows the timing vector </p><formula xml:id="formula_47">τ 1 (n)/T τ 3 (n)/T τ 2 (n)/T τ 4 (n)/T τ * = 1 4 4 k=1 τ k (0) n τ k (n) T Figure 3: Timing phases {τ k (n)} K k=1</formula><p>versus the period n for the rectangular topology in Figure <ref type="figure">2</ref> with</p><formula xml:id="formula_48">D/d = 2 (ε = 0.3, γ = 3, K = 4).</formula><p>τ(n) versus n. After a transient where the nodes tend to synchronize in pairs within the two groups, the system reaches the steady state to the average value τ * /T = 0.475, as stated in Theorem 1, since the system matrix is easily shown to be doubly stochastic for this specific example.</p><p>In order to quantify the rate of convergence, from Theorem 2, we notice that the convergence of the synchronization protocol <ref type="bibr" target="#b9">(10)</ref> depends on the subdominant eigenvalue λ 2 . In particular, as it is well known from the theory of linear difference equations, the rate of convergence is ruled by a term proportional to |λ 2 | n (see, e.g., <ref type="bibr" target="#b21">[22]</ref>). If we define a threshold λ o , we could say that the protocol reaches the steady state condition at the time instant n o for which</p><formula xml:id="formula_49">|λ 2 | no = λ o : n o = log λ o / log |λ 2 |. Therefore, we can take v = -log λ 2 (19)</formula><p>as a measure of the rate of convergence of the algorithm. Figure <ref type="figure">4</ref> shows the rate of convergence v versus the normalized distance D/d for ε = 0.3, 0.7. As expected the rate v decreases with increasing D/d and decreasing ε. Along with v, Figure <ref type="figure">4</ref> shows the measure of irreducibility (or strong connectivity) σ (15) as dashed lines. It is interesting to note that the rate of convergence v and the measure of irreducibility σ have the same behavior as a function of D/d and ε. This confirms that convergence is strictly related to the connectivity properties of the associated graph, as proved in Theorem 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Effect of fading: an example</head><p>In this section, the effect of fading on the rate of convergence v is investigated via simulation for linear, ring, and star topologies (see Figure <ref type="figure">5</ref>). Rayleigh fading is assumed, that is, the fading amplitude G ki in (4) accounts for Rayleigh fading with unit average power. Fading is assumed to be constant for any n during the evolution of the algorithm. three networks versus the number of nodes K (ε = 0.3). Notice that for K = 2 the three networks coincide and recall that only relative distances are of concern for the behavior of the system <ref type="bibr" target="#b9">(10)</ref>. As it is expected, the star topology has the largest rate of convergences whereas the linear network yields the slowest convergence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">TIME-VARYING FREQUENCY-SYNCHRONOUS NETWORK</head><p>Here, we reconsider the performance of the synchronization procedure (5) by removing the assumption of timeinvariance underlying the analysis of the previous section. However, we still assume a frequency-synchronous network. Overall, the system (5) can be written in vector form in terms of phases as (recall <ref type="bibr" target="#b11">(12)</ref>)</p><formula xml:id="formula_50">τ(n + 1) = A(n)τ(n), (<label>20</label></formula><formula xml:id="formula_51">)</formula><p>with the definition of the system matrix A(n) in Section 2.</p><p>In this case, the sensor network can be described by a sequence of directed graphs K, defined similarly to Section 3. In particular, A(n) is the adjacency matrix [A(n)] i j = α i j (n) and the edge connecting the ith and the jth nodes, i / = j, belongs to E (n) if and only if α i j (n) &gt; 0. At each time instant n, the dynamic system describing the synchronization process evolves as where A(n) = I-εL(n) with L(n) being the graph Laplacian at time n (see Section 3). Study of convergence of a family of algorithms encompassing <ref type="bibr" target="#b9">(10)</ref> has been recently attempted in a few works (see <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14]</ref> and references therein). In particular, adapting a result first presented in <ref type="bibr" target="#b13">[14]</ref> to our case, we are able to relate the convergence of dynamic system <ref type="bibr" target="#b19">(20)</ref> to the connectivity properties of the associated sequence of graphs G(n). We need the following definition. Definition 3. A sequence of graphs G(n) is said to be strongly connected across an interval</p><formula xml:id="formula_52">G(n) = (V, E (n), A(n)) of order</formula><formula xml:id="formula_53">I ⊆ {0, 1, 2, . . . } if the directed graph (V, n∈I E (n), n∈I A(n)) is strongly connected (see Definition 1).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 3. The distributed synchronization (20) in a timevarying topology converges to a unique cluster of synchronized nodes</head><formula xml:id="formula_54">, τ 1 (n) = τ 2 (n) = • • • = τ k (n) for n → ∞, if</formula><p>and only if the associated sequence of graphs G(n) is strongly connected across [n 0 , ∞) for any n 0 = 0, 1, 2, . . . . Proof. Theorem 3 can be proved by specializing the proof of <ref type="bibr" target="#b13">[14,</ref><ref type="bibr">Theorem 3]</ref> to our scenario. The basic idea is to exploit the convexity, or the contractive property, of transformation <ref type="bibr" target="#b9">(10)</ref>. An interesting remark is that reciprocity of fading plays here a key role as it did in the proof of Theorem 1 for the case of fixed topology. Reciprocity of fading translates into bidirectionality of the associated graphs (see Section 3). As proved in <ref type="bibr" target="#b13">[14]</ref>, in presence of unidirectional communication among nodes (i.e., nonreciprocal fading in our scenario), convergence of synchronization is not necessarily guaranteed if each sensor communicates to every other sensor (either directly or via intermediate nodes) in an interval [n 0 , ∞). On the contrary, in order to guarantee convergence in a unidirectional graph, a limit should be imposed on the time it takes for the graph to become strongly connected, that is, the interval in Theorem 3 should be modified as [n 0 , n 0 + T] where T ≥ 0 finite.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">FREQUENCY-ASYNCHRONOUS NETWORK</head><p>In the previous sections, it was assumed that all the nodes have the same clock period T (frequency synchronous network). However, in practice, different nodes might have different frequencies {1/T k } K k=1 , and the question arises of whether or not the physical layer-based scheme ( <ref type="formula" target="#formula_7">5</ref>) is still able to achieve synchronization on a strictly connected graph. For a time-invariant scenario (i.e., P ki (n) = P ki for any n and k / = i), it will be shown below that, in presence of a frequency mismatch, the scheme ( <ref type="formula" target="#formula_19">10</ref>) is able to synchronize the clock periods of the nodes (recall (1)), but not their timing phases, so that the full synchronization condition (2) is not achieved. In this regard, it should be noted that, while perfect synchronization ( <ref type="formula" target="#formula_1">2</ref>) is necessary for many applications, in other scenarios having nodes with synchronized frequency is the only requirement (i.e., to ensure equal sensor duty cycles).</p><p>For a frequency-asynchronous time-invariant network, the considered synchronization scheme (5) reads</p><formula xml:id="formula_55">t k (n + 1) = t k (n) + ε • Δt k (n + 1) + T k ,<label>(21a)</label></formula><formula xml:id="formula_56">Δt k (n + 1) = K i=1, i / =k α ki t i (n) -t k (n) ,<label>(21b)</label></formula><p>or, in vector form (see <ref type="bibr" target="#b6">(7)</ref>):</p><formula xml:id="formula_57">t(n + 1) = A • t(n) + T.<label>(22)</label></formula><p>Let us now denote a possible common value for the clock period of all nodes as T (to be determined) as in <ref type="bibr" target="#b0">(1)</ref>. It follows that the clock of the kth sensor can then be written for sufficiently large n as</p><formula xml:id="formula_58">t k (n) = nT + τ k (n),<label>(23)</label></formula><p>or equivalently, in vector form, as t(n</p><formula xml:id="formula_59">) = nT • 1 + τ(n) with τ(n) = [τ 1 (n) • • • τ K (n)] T .</formula><p>We are interested in determining if such common frequency 1/T exists and, if so, whether eventually the phases τ(n) converge to the same value for n → ∞. The main conclusion is summarized in the theorem below, whose proof is inspired by the analysis of the convergence of coupled analog oscillators in <ref type="bibr" target="#b22">[23]</ref>.</p><p>Theorem 4. With reference to <ref type="bibr" target="#b22">(23)</ref>, under the assumption that the graph G is strictly connected, the system (21) synchronizes the clocks of the K nodes to the common period</p><formula xml:id="formula_60">T = v T T, (<label>24</label></formula><formula xml:id="formula_61">)</formula><p>where v is the normalized left eigenvector of matrix A corresponding to eigenvalue 1:</p><formula xml:id="formula_62">A T v = v with 1 T v = 1.</formula><p>However, the timing phases τ(n) remain generally mismatched and given for n → ∞ by</p><formula xml:id="formula_63">τ(n) -→ τ * = 1•η + L † ε ΔT,<label>(25)</label></formula><p>with (•) † denoting the pseudoinverse and the definitions</p><formula xml:id="formula_64">η = v T τ(0) - L † ε ΔT , (<label>26</label></formula><formula xml:id="formula_65">) [ΔT] k = ΔT k = T k -T. (<label>27</label></formula><formula xml:id="formula_66">)</formula><p>The theorem above states that, in presence of a frequency mismatch, the algorithm ( <ref type="formula" target="#formula_55">21</ref>) is able to synchronize the frequencies of different nodes to the common clock period T in <ref type="bibr" target="#b23">(24)</ref>. However, the system does not lead to phasesynchronous clocks, and the phase error is determined by the frequency (period) mismatch ΔT according to <ref type="bibr" target="#b24">(25)</ref>. Notice that, if the network is such that the system matrix A is doubly stochastic (as in the example of Section 3.3), the eigenvector v reads 1/K and the common period T is in this case the average T = 1/K K k=1 T k . Moreover, with doubly stochastic matrix A, condition (25) simplifies as η = 1/K K k=1 τ k (0) since 1 T L † = 0 (see proof below for further details). Finally, we remark that if the frequency mismatch is ΔT = 0 (or equivalently T k = T), Theorem 4 follows from Theorem 1.</p><p>Proof. Under the assumption of a connected graph (or irreducible matrix A), according to Theorem 2 or <ref type="bibr" target="#b12">[13]</ref>, the Laplacian L is easily shown to have rank K -1, where the one-dimensional null subspaces are defined by the relationships</p><formula xml:id="formula_67">v T L = 0 T , L1 = 0. (<label>28</label></formula><formula xml:id="formula_68">)</formula><p>Using the latter equality, recalling <ref type="bibr" target="#b12">(13)</ref> and the definition of common clock period T and phases τ(n) in ( <ref type="formula" target="#formula_58">23</ref>), the vector difference equation ( <ref type="formula" target="#formula_57">22</ref>) can be written as</p><formula xml:id="formula_69">τ(n + 1) -τ(n) = -εL•τ(n) + ΔT. (<label>29</label></formula><formula xml:id="formula_70">)</formula><p>An equilibrium state τ(n + 1) = τ(n) = τ * for the difference equation (29) satisfies τ(n + 1) -τ(n) = 0, which yields the condition</p><formula xml:id="formula_71">L•τ * = ΔT ε . (<label>30</label></formula><formula xml:id="formula_72">)</formula><p>From (28), it follows that (i) in order for (30) to be feasible (i.e., for an equilibrium point to exist), the common clock period T must satisfy v T ΔT = 0 or equivalently <ref type="bibr" target="#b23">(24)</ref>; (ii) an equilibrium phase vector τ * must read τ * = (L † /ε)ΔT+η1 where η is an arbitrary constant. It remains to show that the system actually converges for n → ∞ to the equilibrium point τ * determined above, and to evaluate the constant η.</p><p>Toward the goal of studying convergence, let us define τ (n) = τ(n) -(L † /ε)ΔT. With this change of variables, the difference equation ( <ref type="formula" target="#formula_69">29</ref>) boils down to</p><formula xml:id="formula_73">τ (n + 1) = A•τ (n), (<label>31</label></formula><formula xml:id="formula_74">)</formula><p>Timing error detection Loop filter where we used the relationship LL † ΔT = ΔT, which easily follows from the definition of pseudoinverse and <ref type="bibr" target="#b23">(24)</ref>. As a consequence of (31), as per Theorem 1, we have τ (n)→ v T τ (0). This expression is equivalent to <ref type="bibr" target="#b24">(25)</ref>, thus proving the theorem. Notice that from (31) the rate of convergence is the same as in the case of no frequency mismatch.</p><formula xml:id="formula_75">Δt k (n) ε(z) i / =k α ki t i (n) - t k (n) z -1 1 -z -1 T k Voltage controlled clock</formula><p>As a final remark, we notice that the study of timevarying frequency-asynchronous networks is a challenging task and is left for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISTRIBUTED TIME SYNCHRONIZATION AS COUPLED DISCRETE-TIME PLLs</head><p>The purpose of this section is to discuss the distributed synchronization algorithm investigated throughout the paper by casting it into the framework of discrete-time phase locked loops (PLLs) <ref type="bibr" target="#b23">[24]</ref>. The discussion is not only be beneficial for a better understanding of the system, but it also allows us to generalize the system design. In order to appreciate the similarity with a discrete-time PLL, Figure <ref type="figure" target="#fig_4">7</ref> depicts the synchronization procedure ( <ref type="formula" target="#formula_7">5</ref>) carried out at each sensor as a linear dynamic feedback system. Similarly to a discrete-time PLL, the adder at the input evaluates the timing error Δt k (n), that is then multiplied by ε and then fed to a voltage controlled clock (VCC) that updates the clock according to (5a). The constant ε plays the role of the loop filter in a discrete-time PLL. The procedure (5) can then be interpreted as a firstorder discrete-time PLL since the loop filter is a trivial pure gain <ref type="bibr" target="#b24">[25]</ref>. From the discussion above, it is clear that the second or third order discrete PLLs 5 can be obtained by introducing a loop filter ε(z), with one or two poles respectively, instead of the constant ε in the synchronization system of Figure <ref type="figure" target="#fig_4">7</ref>. For instance, in the case of a second-order loop, we can introduce a pole μ in the loop by setting ε(z) = ε/(1 -μz -1 ) with 5 As discussed in <ref type="bibr" target="#b24">[25]</ref>, loops are never built with order larger than three. 0 &lt; μ &lt; 1. The corresponding update rule (5a) modifies as</p><formula xml:id="formula_76">t k (n + 1) = t k (n) + ε • Δt k (n + 1) + μ t k (n) -t k (n -1) + (1 -μ)T k . (<label>32</label></formula><formula xml:id="formula_77">)</formula><p>The updating rule (32) essentially corrects the local period T k by the estimate of the common clock period t k (n) -t k (n -1).</p><p>The convergence analysis of the second-order loop (32) can be carried out similarly to the previous section where a firstorder loop was considered. In particular, the following results hold.</p><p>Theorem 5. If the network of distributed PLL is strictly connected and the system (32) converges, then it synchronizes the clocks of the K nodes to the common period <ref type="bibr" target="#b23">(24)</ref>. However, under the same conditions, the timing phases τ(n) remain generally mismatched and given for n → ∞ by</p><formula xml:id="formula_78">τ(n) -→ τ * = 1•η + (1 -μ) L † ε ΔT,<label>(33)</label></formula><p>with (•) † denoting the pseudoinverse, and with definitions</p><formula xml:id="formula_79">η= v T τ(0) -(1 -μ) L † ε ΔT<label>(34) and (27).</label></formula><p>Proof. The proof is along the lines of the proof of Theorem 4 (see Appendix B for details).</p><p>Comparing the statement of the previous theorem with the results derived for a first-order loop (Theorem 4), it can be seen that introducing a pole μ in the loop causes a reduction in the steady state phase error by a factor 1-μ. However, this reduction comes at the expense of decreased margins of stability. In fact, convergence cannot be guaranteed for all values of 0 &lt; ε &lt; 1 and 0 &lt; μ &lt; 1. We refer to Appendix C for further analysis on this point. Here, we illustrate this issue by means of an example. Consider a network with two nodes. In this case, we have α 12 = α 21 = 1 and the graph is connected. Figure <ref type="figure">8</ref> shows the four eigenvalues of the system matrix associated with (32) (see Appendices B and C for further details):</p><formula xml:id="formula_80">A = A+μI -μI I 0 ,<label>(35)</label></formula><p>for different values of the pole μ and ε = 0.9. Notice that the system matrix (35) is 4×4 since (32) is a system of two second order difference equations <ref type="bibr" target="#b21">[22]</ref>. Moreover, one eigenvalue of A is 1 irrespective of the value of μ. The absolute value of the remaining eigenvalues tends to one for μ → 1, showing that increasing the value of the pole leads to lack of stability of the equilibrium point (33). Moreover, the value of μ at which a couple of eigenvalues acquire a nonzero imaginary part can be calculated exactly as a function of the spectrum of matrix A, as shown in Appendix C (see (C.5)).</p><p>In order to corroborate the conclusions above, Figure <ref type="figure">9</ref> shows the standard deviation ξ(n) of the timing vector t(n) versus n, where ξ 2 (n 2 , for the network in Figure <ref type="figure">2</ref> with parameters γ = 3, D/d = 2, ε = 0.9 and ΔT 1 = ΔT 4 = 0, ΔT 2 = 0.05, ΔT 3 = -0.05 with T = 1. Recall that the graph associated to this network is symmetric. Different values of the pole μ are considered showing the reduction in steady state synchronization error with increasing μ. Dashed lines correspond to the analytical result (33).</p><formula xml:id="formula_81">1 0 -1 -1 0 1 Real Im μ = 0 λ 4 μ = 0.11 λ 3 μ = 0 λ 2 μ = 1 λ 1 ≡ 1 μ = 1 μ = 1</formula><formula xml:id="formula_82">) = 1/4 • 4 k=1 (t k (n) -1/4 4 k=1 t k (n))</formula><p>To conclude, it is interesting to revisit the results of Theorems 1, 4, and 5 in the light of the analogy with conventional PLLs drawn above. It has been shown that in a strictly connected network: (i) a phase error is perfectly recovered for n → ∞ by the distributed synchronization algorithm (5) (Theorem 1); (ii) a frequency error is perfectly recovered at the expense of a phase mismatch for n → ∞ (Theorem 4); (iii) the residual phase mismatch caused by a frequency error can be reduced by introducing a pole in the control loop (Theorem 5). All these results can be read as the counterpart of known facts in the analysis of linearized PLLs, which assert that a first-order loop is indeed able to (i) recover phase errors and (ii) to achieve a constant phase error (referred to as static phase error) in case of a frequency mismatch <ref type="bibr" target="#b24">[25]</ref>. Moreover, in this second case, it is interesting to notice how the phase errors ( <ref type="formula" target="#formula_63">25</ref>) and (33) depend on the frequency mismatch ΔT exactly as the static phase error of a PLL <ref type="bibr" target="#b24">[25]</ref>. Further results on large-scale randomly deployed networks can be found in <ref type="bibr" target="#b25">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">IMPLEMENTATION OF DISTRIBUTED COUPLED DISCRETE-TIME OSCILLATORS</head><p>In the previous sections, it was assumed that each node is able to measure time differences and powers of other nodes so as to calculate the phase update Δt k (n). Here, we remove this assumption by presenting a practical scheme to implement the phase detector over a bandlimited noisy channel. Since the algorithm is based only on instantaneous power measurements by different nodes, it applies to both a time-invariant and time-variant scenario. The scheme is inspired by the proposal in <ref type="bibr" target="#b11">[12]</ref>. A carrier frequency is dedicated to the synchronization channel, where each node, say the kth, transmits a bandlimited waveform g(t) (say a square-root raised cosine pulse) centered at times t k (n) with symbol period 1/F s (i.e., the time between peak and first zero). The symbol period 1/F s defines the timing resolution of the system. Each node works in an half-duplex mode and measures the received signal on a interval of duration T k around the current timing instant t k (n). Due to the half duplex constraint and the finite switching time between transmitting and receiving mode, each sensor is not able to measure the received signal in an interval of (unilateral) size θ around the firing instant t k (n). It follows that the observation win- <ref type="figure" target="#fig_6">10</ref>(a) illustrates a block diagram of the operations performed at the receiver side by each sensor. The receiver performs baseband filtering matched to the transmitted waveform and than samples the received signal at some multiple L of the symbol frequency F s , that is, LF s with L ≥ 1. Based on the N = LF s T samples received in the nth observation window, the kth node computes the update (21a) in case a first-order loop is employed, or (32) if a second-order loop is considered. Not knowing the exact timings and powers of other nodes, t i (n) and P ki with i / = k, the kth sensor cannot directly calculate the updating term Δt k (n) from (5b) and <ref type="bibr" target="#b5">(6)</ref>. Instead, it estimates these quantities from the received samples, as explained below.  After matched filtering and sampling, the discrete-time baseband signal received by the kth node in the nth time period reads (sampling index m ranges within -N/2 &lt; m ≤ N/2 with m = 0 corresponding to the firing time t k (n) of the kth node):</p><formula xml:id="formula_83">dow reads t ∈ (t k (n) -T k /2, t k (n) -θ) (t k (n) + θ, t k (n) + T k /2]. Figure</formula><formula xml:id="formula_84">t k (n) - T k 2 g(t -t i (n)) t 4 (n) y(n, t) t k (n) t 1 (n) t 2 (n) t 3 (n) t k (n) + T k 2 t (b)</formula><formula xml:id="formula_85">y k (n, m) = K i=1,i / =k E ki • β ki • g m LF s -t i (n) -t k (n) + w(n, m),<label>(36)</label></formula><p>where the average energy per symbol reads E ki = C/(d γ ki • F s ) (recall (4)); β ki denotes the Rayleigh fading coefficient, that is a zero-mean and unit-power complex (circularly symmetric) Gaussian random variable with |β ki | 2 = G ki ; and w(n, m) is the additive Gaussian noise with zero mean and power N 0 . Notice that the sample in the interval -ΔLF s ≤ m ≤ ΔLF s is not measured (i.e., zero) due to the half-duplex constraint and the switching time between receive and transmit mode of node k. A sketch of a possible realization of the received signal (36) is provided in Figure <ref type="figure" target="#fig_6">10</ref>(b) using an arbitrary waveform g(t).</p><p>A simple estimate of ΔT k (n) can then be obtained as</p><formula xml:id="formula_86">Δt k (n + 1) = m∈J α km • m LF s , (<label>37a</label></formula><formula xml:id="formula_87">)</formula><formula xml:id="formula_88">α km = y k (n, m) 2 i∈J y k (n, i) 2 , (<label>37b</label></formula><formula xml:id="formula_89">)</formula><p>where J is the subset of time instants m ∈ (-N/2, -θLF s ) (θLF s , N/2] for which the received signal |y k (n, m)| 2 is above a given threshold as in <ref type="bibr" target="#b11">[12]</ref>. The threshold is a system parameter that can be optimized. Being based solely on instantaneous power measurements (i.e., on samples |y k (n, m)| 2 ), the practical scheme (37) has the advantage that it does not require any a priori knowledge at the nodes about network topology or average received powers. For the example of Section 3.3 with no fading (β ki = 1 for every i and k), Figure <ref type="figure" target="#fig_7">11</ref> shows the standard deviation ξ(n) of the timing vector t(n) versus n, where ξ</p><formula xml:id="formula_90">2 (n) = 1/4 • E[ 4 k=1 (t k (n) -1/4 4 k=1 t k (n)) 2 ]</formula><p>and expectation E[•] is taken with respect to noise. We are considering equal clock periods T k = T = 1 for k = 1, . . . , K. Moreover, it is assumed that all nodes transmit the same power and the signal-tonoise ratio for transmission to the closest node (e.g., from 2 to 1) is set to SNR = E 12 /N 0 = 15 dB. Other parameters are as follows: ε = 0.9; the threshold is set for simplicity to zero (see discussion below); distances satisfy D/d = 2; the normalized timing resolution is 1/F s = 0.01; the waveform g(t) is a raised cosine with roll-off δ = 0.2; the switching time is set to θ = 1/F s . <ref type="foot" target="#foot_4">6</ref> We first consider the first-order loop (21a) (or equivalently (32) with pole μ = 0) with different oversampling factors L = 1, 2, 5, 10, 15. It can be seen that the finite resolution of the system produces a performance floor for increasing n, that can be lowered by increasing the oversampling factor L. In any case, an upper bound on the accuracy of synchronization is set by the finite switching time θ = 0.01. This bound is reached for n and L sufficiently large. <ref type="foot" target="#foot_5">7</ref> Adding a pole in the loop as in (32) can increase the convergence speed as shown in Figure <ref type="figure" target="#fig_7">11</ref> for μ = 0.2, 0.4, 0.6. Notice that convergence speed could also be improved by setting an appropriately chosen threshold in (37) (not shown). Finally, Figure <ref type="figure" target="#fig_7">11</ref> shows that an upper bound on the performance of the practical implementation discussed here is set by the performance of the dynamic system <ref type="bibr" target="#b9">(10)</ref>, where the performance gap is due to noisy observations, finite resolution and finite switching time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSIONS</head><p>An increasing number of applications of sensor networks requires the availability of a common time reference to all the nodes. Aiming at scalability and complexity reduction, physical-layer based synchronization qualifies as a valid alternative to conventional packet-based synchronization. In this work, the convergence properties of such an approach have been investigated by modeling the network as a set of discrete-time coupled oscillators and relying on the analytical framework of algebraic graph theory. It has been shown that the system can be equivalently studied as a set of distributed discrete-time PLLs. This observation allowed to generalize the design of the synchronization process, and prove that well-established results on conventional PLLs extend naturally to distributed systems. Finally, practical details of the implementation of the synchronization algorithm have been discussed on a bandlimited Gaussian channel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDICES A. PROOF OF THEOREM 2</head><p>We need to prove that if λ 2 = 1, then the graph is not strongly connected. Toward this goal, we note that we have the following bound on the measure of irreducibility σ (15) <ref type="bibr" target="#b18">[19]</ref>:</p><formula xml:id="formula_91">1 -λ 2 ≥ σ 8 2K 2 + (-1) K -1 , ( A . 1 )</formula><p>from which it easily follows that if λ 2 = 1, σ = 0 and thus the graph is not strongly connected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. PROOF OF THEOREM 5</head><p>The system of difference equation (32) (k = 1, . . . , K) can be stated, similarly to <ref type="bibr" target="#b21">(22)</ref> in vector form as</p><formula xml:id="formula_92">t(n + 1)= A • t(n)+μ t(n)-t(n -1) + (1 -μ)T. (B.1)</formula><p>Following the same steps as in the proof of Theorem 4, the system ( <ref type="formula" target="#formula_57">22</ref>) can be written in terms of phases τ(n) relative to the common period T as</p><formula xml:id="formula_93">τ(n + 1)-τ(n)=-εLτ(n)+μ τ(n)-τ(n-1) +(1-μ)ΔT. (B.2)</formula><p>An equilibrium state τ * for the difference equation (B.2) satisfies τ(n + 1) = τ(n) = τ(n -1) = τ * , which yields the condition</p><formula xml:id="formula_94">Lτ * = (1 -μ) ΔT ε . (B.3)</formula><p>From (B.3), it follows that: (i) in order for (B.3) to be feasible (i.e., for an equilibrium point to exist), the common clock period T must satisfy v T ΔT = 0 or equivalently ( <ref type="formula" target="#formula_60">24</ref>);</p><p>(ii) an equilibrium phase vector τ * must read τ * = (1μ)(L † /ε)ΔT+η1 where η is an arbitrary constant. Let us define τ</p><formula xml:id="formula_95">(n) = τ(n) -(1 -μ)(L † ΔT/ε).</formula><p>With this change of variables, the difference equation (B.2) boils down to</p><formula xml:id="formula_96">τ (n + 1) = A•τ (n) + μ τ (n) -τ (n -1) . (B.4)</formula><p>The system (B.4) is a second-order vector difference equation, that can be studied by recasting it as a first-order vector difference equation in terms of vector τ(n) = [τ (n) T τ (n -1) T ] T with system matrix A (35) (see, e.g., <ref type="bibr" target="#b21">[22]</ref>). Convergence of the corresponding system τ(n) = A τ(n -1) depends on the eigenvalues of A. It is easy to see that A has an eigenvalue equal to one, with left and (normalized) right eigenvectors z = 1 and z r = 1/(1 -μ) • [v T -μv T ] T (recall that v is the right eigenvector of A corresponding to the eigenvalue λ = 1). Moreover, it will be shown in Appendix C that this eigenvalue is unique. Therefore, the system (B.4) is stable if and only if all the remaining 2K -1 eigenvalues of A have absolute value less than one (see, e.g., <ref type="bibr" target="#b12">[13]</ref>). This point is further investigated in Appendix C. Assuming that the stability condition mentioned above holds, then we have A n → z z T r for n → ∞ (see, e.g., <ref type="bibr" target="#b12">[13]</ref>) and the phases τ (n) converge as τ (n) → 1v T τ (0) (having set τ(-1) = τ(0)), which implies that the constant η in (33) is (34).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. DISCUSSION ON THE STABILITY OF SECOND-ORDER DISTRIBUTED PLLs (32)</head><p>In this section, we further investigate the stability of system (32) by studying the eigenvalues of the system matrix A (35).</p><p>As discussed in Appendix B, stability is only achieved if and only if all the 2K -1 eigenvalues of A, apart from the eigenvalue equal to one, have absolute value less than one. In the following, we show how to relate the eigenvalues of A with those of the system matrix A.</p><p>In order to evaluate the eigenvalues of A, let us consider that for λ to be an eigenvalue of A there must exist a vector w = [w T 1 w T 2 ] T such that Aw = λw. After some straightforward algebra, the latter equation becomes It follows that for every eigenvalue λ of A, we have two eigenvalues of A, given by (C.3). In order to proceed, we need to recall the following result on the eigenvalues of A. Proof. See, for example, <ref type="bibr" target="#b12">[13]</ref>.</p><p>From (C.3) and (C.4), it can be seen that the eigenvalue λ of A (with the positive sign in (C.3)) corresponding to λ = 1 equals one. Moreover, by substituting λ = 1 in (C.3), this eigenvalue is unique. In order to prove stability of the system at hand, we then need to show that all the other 2K -1 eigenvalues λ(λ, μ) different from λ = 1 are such that | λ(λ, μ)| &lt; 1. In general, it is not easy to find general conditions on ε and μ that guarantee the condition | λ(λ, μ)| &lt; 1 for any λ in (C.4) (except λ = 1). However, a numerical study can be easily carried out from (C.3) and (C.4). For illustration, consider an undirected graph G. In this case, the eigenvalues of matrix A are real and from (C.4) satisfy -1 &lt; λ &lt; 1 (recalling that 0 &lt; ε &lt; 1). The absolute value | λ(λ, μ)| (C.3) (with positive sign, similar result holds for the negative sign) is plotted versus μ and λ in Figure <ref type="figure">12</ref>. It can be seen that unless μ → 1, the stability condition is satisfied. Moreover, by studying the sign of the polynomial in (C.3), it is also possible to evaluate the value of the pole μ, say μ 0 (λ), such that for μ ≤ μ 0 (λ) the eigenvalues λ corresponding to λ are real and for μ &gt; μ 0 (λ) are complex conjugate. This value is easily found to be</p><formula xml:id="formula_97">μ 0 (λ) = 2 -λ -2 1 -λ, ( C . 5 )</formula><p>which is shown in Figure <ref type="figure">12</ref>.</p><p>As a final remark, we notice that, for μ = 1, the absolute value | λ(λ, μ)| equals one irrespective of λ, leading to an unstable system.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>2 dFigure 2 :</head><label>22</label><figDesc>Figure 2: The rectangular topology considered in the example in Section 3.3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Figure 4: Rate of convergence v (19) and the measure of irreducibility σ (15) versus D/d for the rectangular topology in Figure 2 (ε = 0.3, 0.7, γ = 3, K = 4).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Average rate of convergence E[v] for the linear, ring, and star networks in Figure 5 versus the number of nodes K (ε = 0.3, γ = 3).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Synchronization algorithm (5) as a linear dynamical feedback system: analogy with a discrete-time PLL.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>Figure8: Eigenvalues of the second-order loop system (32) in the case of two users with μ increasing from 0 to 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: (a) Block diagram of the practical implementation of the distributed synchronization scheme discussed in Section 7; (b) a sketch of the received signal (36) in the nth observation window.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Standard deviation of the timing vectors ξ(n) for the synchronization algorithm over a bandlimited Gaussian channel (37) and for the dynamic system (10) (network in Figure 2, SNR = 15 dB, D/d = 2, ε = 0.9, γ = 3, K = 4).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Aw 2 = λ 2 -μ λ + μ λ w 2 . (C. 1 )</head><label>2221</label><figDesc>Therefore, denoting as λ any of the K eigenvalues of A, we have the following relationship between the spectrum of matrices A and A:λ 2 -(μ + λ) λ + μ = 0, (C.2)or equivalentlyλ(λ, μ) = μ + λ ± μ 2 + 2μ(λ -2) + λ 2 2 . (C.3)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 12 :Lemma 1 .</head><label>121</label><figDesc>Figure 12: Absolute value of the eigenvalue λ(λ, μ) (C.3) (with positive sign) of matrix A (35) versus the eigenvalue a of matrix A and the pole μ. Also shown is the threshold value μ 0 (λ) (C.5) that discriminates the region where the eigenvalues λ(λ, μ) are real or complex conjugate.</figDesc><graphic coords="12,79.48,76.78,172.84,159.97" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>In<ref type="bibr" target="#b5">[6]</ref>, a distinction is made between synchronization (the state where nodes of the network have a common notion of time) and synchronicity (nodes agree on "firing" period and phase). In this paper, as in most part of the literature, we focus on the latter, and refer to it as either synchronization or synchronicity.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p><ref type="bibr" target="#b1">2</ref> The temporal width of the transmitted pulse (or equivalently the employed bandwidth) has to be selected so as to guarantee the desired resolution of timing synchronization (see Section 7).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>A scenario with additive noise in the update rule, that models jitter in the local clocks, could be treated by using the theory developed in<ref type="bibr" target="#b16">[17]</ref>. This issue is outside the scope of this paper and will not be further pursued here.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>Equation (15)  provides an upper bound on the second largest eigenvalue of the system matrix A (see also Appendix A).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_4"><p>Since we employ a raised cosine waveform, a more realistic choice would be θ 3 ÷ 4 • 1/F s . However, this would make the visualization of the performance as a function of the system parameters less clear.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_5"><p>This performance limit could be improved by allowing the nodes to remain in the receiving mode for an entire period T k at some (e.g., randomly selected) time-instant.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to acknowledge Matteo Cremaschi for validating some of the numerical results in Figures <ref type="figure">3,</ref><ref type="figure">4</ref>, and 6.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Time synchronization in sensor networks: a survey</title>
		<author>
			<persName><forename type="first">F</forename><surname>Sivrikaya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yener</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="45" to="50" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A scalable synchronization protocol for large scale sensor networks and its applications</title>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Scaglione</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1085" to="1099" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Synchronization of pulsecoupled biological oscillators</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Mirollo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Strogatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1645" to="1662" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Decentralized synchronization protocols with nearest neighbor communication</title>
		<author>
			<persName><forename type="first">D</forename><surname>Lucarelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I.-J</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd International Conference on Embedded Networked Sensor Systems (SenSys &apos;04)</title>
		<meeting>the 2nd International Conference on Embedded Networked Sensor Systems (SenSys &apos;04)<address><addrLine>Baltimore, Md, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-11">November 2004</date>
			<biblScope unit="page" from="62" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Algebraic Graph Theory</title>
		<author>
			<persName><forename type="first">C</forename><surname>Godsil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Royle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Springer</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Firefly-inspired sensor network synchronicity with realistic radio effects</title>
		<author>
			<persName><forename type="first">G</forename><surname>Werner-Allen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tewari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Welsh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Nagpal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd International Conference on Embedded Networked Sensor Systems (SenSys &apos;05)</title>
		<meeting>the 3rd International Conference on Embedded Networked Sensor Systems (SenSys &apos;05)<address><addrLine>San Diego, Calif, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-11">November 2005</date>
			<biblScope unit="page" from="142" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On the scalability of cooperative time synchronization in pulse-connected networks</title>
		<author>
			<persName><forename type="first">A.-S</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Servetto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2725" to="2748" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Distributed change detection in large scale sensor networks through the synchronization of pulse-coupled oscillators</title>
		<author>
			<persName><forename type="first">Y.-W</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Scaglione</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP &apos;04)</title>
		<meeting>IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP &apos;04)<address><addrLine>Montreal, Quebec, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-05">May 2004</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="869" to="872" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Self-organizing sensor networks designed as a population of mutually coupled oscillators</title>
		<author>
			<persName><forename type="first">S</forename><surname>Barbarossa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Celano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th IEEE Workshop on Signal Processing Advances in Wireless Communications (SPAWC &apos;05)</title>
		<meeting>the 6th IEEE Workshop on Signal Processing Advances in Wireless Communications (SPAWC &apos;05)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-06">June 2005</date>
			<biblScope unit="page" from="475" to="479" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Scalable and robust scheme for data fusion in sensor networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Wakamiya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Murata</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Workshop on Biologically Inspired Approaches to Advanced Information Technology (Bio-ADIT &apos;04)</title>
		<meeting>the 1st International Workshop on Biologically Inspired Approaches to Advanced Information Technology (Bio-ADIT &apos;04)<address><addrLine>Lausanne, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-01">January 2004</date>
			<biblScope unit="page" from="412" to="427" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Theoretical analysis of interbasestation synchronization systems</title>
		<author>
			<persName><forename type="first">F</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Akaiwa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Communications</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="590" to="594" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Mutual decentralized synchronization for intervehicle communications</title>
		<author>
			<persName><forename type="first">E</forename><surname>Sourour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nakagawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Vehicular Technology</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2015" to="2027" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Consensus problems in networks of agents with switching topology and time-delays</title>
		<author>
			<persName><forename type="first">R</forename><surname>Olfati-Saber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Murray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automatic Control</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1520" to="1533" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Stability of multiagent systems with timedependent communication links</title>
		<author>
			<persName><forename type="first">L</forename><surname>Moreau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automatic Control</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="169" to="182" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Network synchronization</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>Lindsey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ghazvinian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>Hagmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Dessouky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1445" to="1467" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Wireless Communications: Principles and Practice</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Rappaport</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Upper Saddle River, NJ, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Distributed average consensus with least-mean-square deviation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-J</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Parallel and Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="46" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<title level="m">Matrix Analysis</title>
		<meeting><address><addrLine>Cambridge, UK</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Upper bound for the non-maximal eigenvalues of irreducible nonnegative matrices</title>
		<author>
			<persName><forename type="first">X.-D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Czechoslovak Mathematical Journal</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="537" to="544" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Decentralized quickest change detection</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">V</forename><surname>Veeravalli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1657" to="1665" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Norris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Markov</forename><surname>Chains</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">An Introduction to Difference Equations</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">N</forename><surname>Elaydi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Springer</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Optimal decentralized estimation through self-synchronizing networks in the presence of propagation delays</title>
		<author>
			<persName><forename type="first">G</forename><surname>Scutari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Barbarossa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Pescosolido</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th IEEE Workshop on Signal Processing Advances in Wireless Communications (SPAWC &apos;06)</title>
		<meeting>the 7th IEEE Workshop on Signal Processing Advances in Wireless Communications (SPAWC &apos;06)<address><addrLine>Cannes, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-07">July 2006</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><surname>Meyr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Moeneclaey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Fechtel</surname></persName>
		</author>
		<title level="m">Digital Communication Receivers</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Gardner</surname></persName>
		</author>
		<title level="m">Phaselock Techniques</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="1966">1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Small-world&quot; effect of shadowing in pulse-couple distributed time synchronization</title>
		<author>
			<persName><forename type="first">O</forename><surname>Simeone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Spagnolini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bar-Ness</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Letters</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="282" to="284" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
