<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mining Significant Semantic Locations From GPS Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Xin</forename><surname>Cao</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Gao</forename><surname>Cong</surname></persName>
							<email>gaocong@ntu.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Christian</forename><forename type="middle">S</forename><surname>Jensen</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Aarhus University</orgName>
								<address>
									<country key="DK">Denmark</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mining Significant Semantic Locations From GPS Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">708282B41A77AABF5D9D6C9B179E1DCF</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>With the increasing deployment and use of GPS-enabled devices, massive amounts of GPS data are becoming available. We propose a general framework for the mining of semantically meaningful, significant locations, e.g., shopping malls and restaurants, from such data.</p><p>We present techniques capable of extracting semantic locations from GPS data. We capture the relationships between locations and between locations and users with a graph. Significance is then assigned to locations using random walks over the graph that propagates significance among the locations. In doing so, mutual reinforcement between location significance and user authority is exploited for determining significance, as are aspects such as the number of visits to a location, the durations of the visits, and the distances users travel to reach locations. Studies using up to 100 million GPS records from a confined spatio-temporal region demonstrate that the proposal is effective and is capable of outperforming baseline methods and an extension of an existing proposal.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Mobile devices, e.g., phones and navigation systems, with builtin GPS (Global Positioning System) receivers are capable of generating massive amounts of GPS records that capture geo-location, time, and a number of other attributes such as heading and speed.</p><p>The GPS records from a moving object approximate the object's trajectory, which is a continuous function from time to space. Trajectories capture how moving objects use geographical space. For example, they capture the locations that the objects visit along with the durations of the visits. When projecting a trajectory onto space, a route results.</p><p>This paper develops techniques that exploit massive amounts of GPS records collected from multiple users for identifying top-k significant semantic locations. In particular, the aim is to identify locations that are semantically meaningful to users, e.g., shopping malls, restaurants, or tourist attractions, rather than simply identifying raw geographical coordinates.</p><p>Automatic extraction of meaningful stay locations and assigning significance to these are fundamentally important and useful.</p><p>For example, the outcome can serve as travel recommendations that take into account location significance and the distance from the user to a location. This is somewhat analogous to web queries where web pages are ranked in terms of their inherent importance as well as their relevance to a query: location significance plays the role of web page importance, and the distance from a user to a location plays the role of the relevance of a web page to a query. Another example is that the outcome can be combined with the socalled location-aware keyword query <ref type="bibr">[6]</ref>.</p><p>Top-k hot semantic locations can be computed with regard to a specific context such as a certain user group (e.g., teens, senior citizens, tourists) or a certain time period (e.g., a vacation period or a time of day). This may be done by exploiting different GPS data for different contexts.</p><p>GPS data is already attracting attention. Scores of communitiesbased web sites, e.g., targeting hikers, bikers, and cyclists, enable users to share routes and trajectories. However, these sites simply focus on the sharing of trajectories. Some recent studies <ref type="bibr" target="#b2">[2,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b24">24]</ref> consider the extraction of locations from GPS records, but do not consider location significance.</p><p>Notably, Zheng et al. <ref type="bibr" target="#b23">[23]</ref> pioneer the extraction and ranking of locations from GPS data. We build on this work by considering semantic rather than raw locations. Semantic locations must be considered throughout to obtain the best possible results. For example, this avoids situations where different raw locations that turn out to represent the same semantic location are ranked as separate locations; and it avoids cases where a single raw location represents more than one semantic location. A post-processing step cannot fix such problems.</p><p>It is challenging to propose a model for location ranking that is capable of exploiting multiple factors. The mutual reinforcement of user authority and location significance is considered by Zheng et al. However, as their approach uses the HITS algorithm <ref type="bibr" target="#b11">[11]</ref>, improper weights may be assigned to links, as discussed by Bharat and Henzinger <ref type="bibr" target="#b5">[5]</ref> (to be explained in Section 3.3.2). Our model is able to exploit this mutual reinforcement relationship better. More significantly, our framework is capable of systematically exploiting other factors such as the relationships between locations, the distances between locations, and the durations of visits.</p><p>Our framework includes techniques for extracting semantic locations from GPS records. This problem is nontrivial because GPS records with different coordinates may represent the same semantic location. Thus, we group stay points extracted from GPS records such that each group represents a unique real-world location. We leverage existing clustering algorithms for the initial grouping, and we enhance the clustering results by taking into account the patterns of visits to the clusters and the similarity of the semantics of the clusters obtained from a reverse geocoder and yellow pages.</p><p>Next, we propose a new model for location ranking that is capable of propagating significance between locations, supports mutual reinforcement between location significance and user authority, and is capable of exploiting factors such as the number of visits to a location and the durations of the visits.</p><p>To achieve this, we model the connections between locations and also the connections between locations and users using a twolayered graph with location-location and user-location components. Intuitively, if a location, e.g., a hotel, is connected via trajectories to many other significant locations, e.g., restaurants, the hotel is also considered as significant. Further, locations visited by authoritative users are considered as more significant; and users gain authority by visiting significant locations <ref type="bibr" target="#b23">[23]</ref>.</p><p>A PageRank-like model <ref type="bibr" target="#b18">[18]</ref> can capture the location-location interactions, and a HITS-like model <ref type="bibr" target="#b11">[11]</ref> can capture the reinforcement between users and locations. However, they cannot capture both the location-location and the user-location components. We propose a new model that is able to accommodate both.</p><p>Intuitively, a location visited by a user from a place far away is more likely to be more important than a place visited from a nearby location; and the longer the durations of the stays at a location, the more important the locations is considered to be. Our model accommodates these aspects.</p><p>In summary, the paper's contributions are threefold. First, we propose new techniques for extracting semantic locations from GPS data. Second, we propose a new model for assigning significance to the extracted locations. Third, we report on empirical studies with large quantities of GPS data that suggest that the proposed framework is (i) capable of improving the abilities of the OPTICS <ref type="bibr" target="#b1">[1]</ref> and K-means clustering algorithms to extract semantic locations and is (ii) capable of significantly outperforming several baseline methods, including rank-by-visits, rank-by-durations, and an extension of an existing approach.</p><p>Section 2 states the problem addressed. Section 3 details the proposed location mining framework, including the extraction of stays and their clustering into semantic locations, the construction of the link structures connecting users and locations, and the ranking of locations using random walk models. Section 4 reports on the experimental study. Section 5 concludes and discusses research directions. An appendix contains supplementary matter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PROBLEM STATEMENT</head><p>We proceed to cover the data model used in this paper and the problem addressed. Appendix A delves into application scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Data Model</head><p>While the proposed framework applies to GPS data in general, we assume that the GPS data represents vehicle movements. For specificity, we assume a sampling frequency of one record per second when a vehicle moves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DEFINITION 1. GPS record:</head><p>A GPS record G is a five-tuple: u, t, x, y, s , where u is the ID of the user for which G is recorded, t is the timestamp, x and y are the Euclidean coordinates, and s is the vehicle's instant speed as reported by the GPS device.</p><p>An example is 1715, 2007-07-13 17:20:36, 544456, 6335497, 0 where the coordinates are given in the UTM (Universal Transverse Mercator) coordinate system.</p><p>By ordering the records from a user by the timestamp t, we obtain a representation of the user's trajectory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DEFINITION 2. Trajectory: A trajectory T R of a user is a sequence of GPS records G for the user that are ordered by the timestamp t of the records,</head><formula xml:id="formula_0">T R = G1 → • • • → Gi → • • • → Gn.</formula><p>A trajectory describes the movement of a user. The original GPS records can be seen as the set of the trajectories of all the users, denoted as ST R. From a trajectory, we can compute the sequence of locations visited by the corresponding user as well as how long the user stays in the locations.</p><p>We are interested in locations where users have stayed for longer than some predefined duration, as such locations are more likely to be interesting. We extract all such stays from ST R. DEFINITION 3. Stay point: A stay point P is a pair G, ∆t , where G is the ID of a GPS record that represents the stay and ∆t is the duration of the stay.</p><p>Each time a user stays at a location, we can obtain a corresponding stay point. Thus, a location visited multiple times by one or multiple users obtains multiple stay points. Stay points for the same real-world location almost certainly contain different coordinates, although they are close to each other. The challenge is to derive consolidated locations from a collection of stay points.</p><p>Ideally, each consolidated location corresponds to a unique realworld location, e.g., a shopping mall or a tourist attraction. DEFINITION 4. Semantic Location: A semantic location L is a cluster of stay points and is represented by a four-tuple x, y, sem, sl , where x and y are the centroid of the cluster, sem is the semantics of the location, and sl is a set of stay points associated with the semantic location. We denote the set of all extracted semantic locations as SL For example, semantic location 555122, 6321850, "Aalborg Zoo", {864, 1354, 57720, . . .} has centroid (555122, 6321850), "Aalborg Zoo" as the semantics, and {864, 1354, 57720, . . .} as GPS record identifiers that represent stay points.</p><p>We are now ready to define the location history of a user. DEFINITION 5. Location History: The location history H of a user is defined as a sequence</p><formula xml:id="formula_1">H = L1 → • • • → Li → • • • → Ln of semantic locations L.</formula><p>Given a set of GPS trajectories ST R we can build the set of all users' location histories, SH.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Problem Characterization</head><p>We aim to identify and assign significance to semantic locations based on large amounts of GPS records.</p><p>Just as web queries issued to a search engine do not have ground truth results, neither do the results for our problem. Rather, we combine a range of indicators of "interestingness" in order to obtain significant locations. Specifically, we consider the following indicators of the significance of a location: (1) the number of visits, (2) the durations of the visits, and (3) the distances users travel to visit locations.</p><p>Such indicators may be combined in various ways using location histories. Specifically, various kinds of reinforcement may be applied. Thus, locations that are visited together with significant locations may be assigned increased significance. And users who tend to visit significant locations may be assigned increased authority, which may then be used for assigning increased significance to locations visited by these users.</p><p>While a framework that is capable of taking into account many such indicators is likely to have advantages over less capable frameworks, the interpretation of a result by a user is subjective. Different users will have different interests and preferences. We thus do not distinguish among "significant," "hot," "interesting," "attractive," and "popular" as predicates of locations.</p><p>By considering location histories selectively, results with different meanings can be obtained. For example, by only considering GPS data from tourists, or international tourists, it is possible to target interesting locations at specific user groups. This filtering may be done based on demographic data about the users who contribute the data, which may be available to, e.g., rental car and insurance companies. While important, this is orthogonal to the paper's contribution.</p><p>We also note that while some trips may carry little meaning, the aggregate results obtained from very large numbers of trips are likely to be robust to such noise and thus yield meaningful results. This is analogous to the use of clicks or links for the assignment of importance to web pages.</p><p>Given a set of GPS records, we first pre-process the data to obtain the set of trajectories, ST R. We address two sub-problems:</p><p>1. Development of techniques that are capable of identifying semantically meaningful locations SL from GPS data. This involves extracting the set of semantic locations SL from the GPS trajectories ST R, and building the location history H for each user to get the location history set SH = {H1, . . . , Hm}, where m is the number of users.</p><p>2. Development of techniques capable of assigning significance to locations. We use the location histories SH, to compute the top-k semantic locations ranked according to significance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PROPOSED SOLUTION</head><p>Following a solution overview in Section 3.1, we cover the extraction of semantic locations in Section 3.2 and the ranking of locations in Section 3.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Solution Overview</head><p>We first extract stay points from the GPS records. We then group stay points such that each group represents a real-world location. We utilize street addresses, semantics, etc. to improve two existing clustering algorithms, OPTICS <ref type="bibr" target="#b1">[1]</ref> and K-means <ref type="bibr" target="#b21">[21]</ref>.</p><p>We then form location histories and use these for constructing a two-layered graph that models connections between users and locations, and connections between locations. An example of such a graph is given in Figure <ref type="figure" target="#fig_0">1</ref>. The graph has a user layer, where nodes represent users, and a location layer, where nodes represent locations. An edge exists between two locations if a user has traveled between them, and an edge exists between a user and a location if the user has visited the location. Our setting differs from the standard web setting in important respects. Specifically, 1) our graph has two levels while the web graph has one, making it resemble the location-location graph, which however, is undirected while the web graph is directed; 2) the web graph is unweighted while we use weights on the location-location edges (to capture the number of trips between locations; 3) our graph is spatial, meaning, e.g., that the willingness of a user to travel a long distance to reach a location indicates high significance; no such distance notion exists on the Internet; and 4) the user-location graph is weighted (to capture the durations of visits).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Extracting Location Histories</head><p>We cover the extraction of stay points in Appendix B and the extraction of semantic locations from stay points next.</p><p>We aim at extracting locations from stay points such that the locations are meaningful to users. One idea is to apply a reverse geocoder to the stay points. A reverse geocoder attempts to find the closest addressable location within a certain distance. The result returned for a stay point includes the street address and the coordinates of the street address. When two stay points are mapped to the same addressable location, it is likely that they represent the same semantic location.</p><p>However, the reverse geocoding of a stay point involves a call to an external API (in or case, Google Maps), which is very time consuming when there are many stay points. Additionally, even if two stay points are reverse geocoded differently, they may still represent the same semantic location. This suggests that we should exploit other information when extracting semantic locations.</p><p>We thus extract the semantic locations in two steps. We first cluster the stay points. We then enhance the clustering by taking onto account a variety of additional information, to be detailed shortly. A final cluster is expected to represent a single, unique semantic location.</p><p>For the first step, we use the existing clustering algorithms OP-TICS and K-means. For the second step, we repeatedly enhance the results obtained by utilizing the street addresses, the semantics, and the user visit patterns. We denote the resulting method as SEM-CLS (semantics-enhanced clustering). The method involves two steps: split and merge.</p><p>In the split step, we sample points from each cluster, reverse geocode them to obtain street addresses, and then obtain their semantics using a yellow pages directory; if the sample points in a cluster have different semantics, we split the cluster since it may contain multiple semantic locations.</p><p>In the merge step, we merge the clusters that may represent the same semantic location. In order to determine when to merge two clusters, we represent each cluster by a four-tuple ( lu, tas, tae, ls) of features: the user list vector lu, which contains the IDs of users who have visited the cluster together with the number of visits by each user; the average stay duration tas, which is the average duration of all the visits; the average entry time (time of a day) tae, which is the average starting time of all the visits to the cluster; and the semantic list vector ls, which contains all the semantics that may apply to the cluster.</p><p>The visitors, the stay duration, and the entry time reveal patterns of the users who have visited the location represented by a cluster. If two nearby locations exhibit similar visiting patterns, the two locations are possibly the same. We thus compute the similarity of two clusters based on the four features. First, the vector space model is used to compute the similarity between two visitor lists and also the similarity between two semantic lists. The similarity of the average stay duration is computed as the smaller one divided by the larger one, and the same is done for the average entry time. The final similarity score of two clusters is computed by a simple linear combination of the four scores. Formally, the similarity between two clusters c1 and c2 is computed as follows:</p><formula xml:id="formula_2">Sim(c1, c2) = lu1 • lu2 lu1 lu2 + ls1 • ls2 ls1 ls2 + min(tas1, tas2) max(tas1, tas2) + min(tae1, tae2) max(tae1, tae2) (1)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Ranking of Locations</head><p>We first cover the construction of the two-layered graph. We then present several baseline location ranking methods in Section 3.3.2, and we present the new location ranking models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Two-Layered Graph</head><p>The two-layered graph consists of two inter-connected sub graphs, a user-location graph and a location-location graph. DEFINITION 6. User-location graph: The user-location graph is a weighted undirected bipartite graph GUL = (U, V, EUL, WUL), where U is a set of nodes that represent users, V is a set of nodes that represent locations, EUL is a set of edges that represent visits, and the edge weights WUL describe the numbers of visits to a location by a user.</p><p>Given m users and n locations, we build an m × n adjacency matrix M for GUL.</p><formula xml:id="formula_3">Formally, M = [vij], 0 ≤ i &lt; m, 0 ≤ j &lt; n,</formula><p>where vij represents how many times the i th user has visited the j th location.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DEFINITION 7. Location-location graph:</head><p>The location-location graph is a weighted undirected graph GLL = (V, ELL, WLL), where V is as in the previous definition, ELL is the set of edges that represent trips, and the weights WLL of edges describe the numbers of transitions between locations.</p><p>Given n locations, we define an n × n adjacency matrix C for GLL. Formally, C = [cij], 0 ≤ i, j &lt; n, where cij represents the times that a user has driven between the i th and the j th location.</p><p>Let the location histories of the three users in Figure <ref type="figure" target="#fig_0">1</ref> be</p><formula xml:id="formula_4">HU 1 = {L2 → L1 → L4, L2 → L4}, HU 2 = {L5 → L2, L5 → L1, L2 → L1, }, HU 3 = {L3 → L5}, and HU 4 = {L7 → L6, L3 → L6, L2 → L7 → L6}. Then: M =    1 2 0 2 0 0 0 2 2 0 0 2 0 0 0 0 1 0 1 0 0 0 1 1 0 0 3 2    C =          0 2 0 1 1 0 0 2 0 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 2 0 1 0 0 0 2 0         </formula><p>We notice that for each user, the number of visits to the user's home may be very large. Because we aim at mining hot public locations and to preserve the users' privacy, locations such as a user's home are removed. We consider a location as a home location if it is visited frequently by the same user at night.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Baseline Methods</head><p>We consider three baseline methods, two of which are presented in Appendix C, namely rank-by-visits (which is also used as baselines in the work by Zheng et al. <ref type="bibr" target="#b23">[23]</ref>), and rank-by-durations.</p><p>The idea behind the third approach <ref type="bibr" target="#b23">[23]</ref>, which we cover as a baseline, is to take into account the authority of users instead of treating all users equally. It is thus assumed that hot locations are visited by more authoritative users, and that authoritative users visit more interesting locations. The approach applies the HITS model <ref type="bibr" target="#b11">[11]</ref> on GUL to find authoritative users and interesting locations. Using HITS, the approach computes a hub score and an authority score for each node. The hub scores of users show their travel experience, and the authority scores of locations show the significance of the locations. Additional descriptions of this baseline are given in Appendix C.</p><p>Although the approach aims to exploit user authority for location ranking, the model used in the approach limits the performance of the approach. If a location is only visited by one user, but many times, the HITS algorithm used assigns a very high authority score to the location and also a very high hub score to the user. However, a location visited only by a single user or very few users is intuitively not particularly significant. Section 4 offers empirical insight into this problem. Recall also that approach considers raw locations rather than semantic locations.</p><p>In the example graph, the final authority vector is {0.1651, 0.2676, 0.0661, 0.0935, 0.1286, 0.1675, 0.1117}, and the ranked list is {2, 6, 1, 5, 7, 4, 3}. The effect of weights can be seen more clearly in the following example: if the user U4 makes the trip L7 → L6 twice, the result becomes very different. The final authority vector becomes {0.0506, 0.1557, 0.0946, 0.0304, 0,0404, 0.3589, 0.2692}, and the ranked list becomes {6, 7, 2, 3, 1, 5, 4}. Notice that L6 and L7 have larger authority scores, and the user U4 also gains a large hub score improperly, simply because this user visits her/his preferred locations more times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3">Random Walks on GUL</head><p>This model exploits reinforcement between users' travel experiences and locations' significance while avoiding the problem of the last baseline approach. It uses the randomized HITS model, which defines a random walk on GUL.</p><p>This model is insensitive to small perturbations and thus is more stable than what is obtained by using the original HITS model. The randomized HITS model uses a normalized version of matrix M. Bharat and Henzinger <ref type="bibr" target="#b5">[5]</ref> show that mutually reinforcing relationships between nodes may assign improper weights to links; the normalization solves this problem.</p><p>We define the column vector wuser as the hub vector and the column vector w loc as the authority vector. Formally, the randomized HITS model applied to GUL can be described as follows:</p><formula xml:id="formula_5">w k+1 loc = ( M T row + (1 -)E1) • w k user w k+1 user = ( M col + (1 -)E2) • w k+1 loc , (<label>2</label></formula><formula xml:id="formula_6">)</formula><p>where k is the number of iterations, M col is the column stochastic matrix of M (M col is computed by normalizing each column in M), Mrow is the row stochastic matrix of M (Mrow is computed by normalizing each row in M), E1 is a matrix with all elements equal to 1 m , E2 is a matrix with all elements equal to 1 n , and is the "teleport probability," which represents the probability of a random surfer teleporting from a location node to a user node (resp. from a user node to a location node) instead of following the links in GUL.</p><p>We initialize wuser as ( 1 m , ..., 1 m ) and w loc as ( 1 n , ..., 1 n ), and we then use the power iteration algorithm to calculate the vectors wuser and w loc . The vector w loc is used to rank all the locations. Assume = 0.85 and consider the example graph. If user U4 makes the trip L7 → L6 twice, the final stable authority vector becomes {0.1374, 0.2148, 0.1003, 0.1003, 0.1390, 0.1730, 0.1351}, and the ranked list is {2, 6, 5, 1, 7, 3, 4}. Compared with the results of the original HITS <ref type="bibr" target="#b23">[23]</ref>, L6 and L7 have lower rankings because the weights are normalized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.4">Random Walks on GLL</head><p>Unlike the previous method, this method exploits the locationlocation links: the significance of one location is affected positively by the significance of the locations connecting to it.</p><p>Inspired by the PageRank algorithm <ref type="bibr" target="#b18">[18]</ref> that is developed for web link graphs, we perform random walks on GLL to rank locations. Our model differs from the model used in the PageRank algorithm in two respects: 1) weights are associated with our links, while the web link graph has no link weights and 2) the locationlocation graph is undirected while the web link graph is directed. We are aware that weights are also explored in other applications of the random walk model (e.g., <ref type="bibr" target="#b4">[4]</ref>) and that random walks have been applied to undirected graphs (e.g., for document summarization <ref type="bibr" target="#b17">[17]</ref>). However, no previous work performs a random walk on a spatial graph like the location-location graph.</p><p>Using a column vector w loc , the random walk model applied to GLL can be described as follows:</p><formula xml:id="formula_7">w k+1 loc = (αC T row + (1 -α)E) • w k loc , (<label>3</label></formula><formula xml:id="formula_8">)</formula><p>where Crow is the row stochastic matrix of C defined in Section 3.3.1 (Crow is computed by normalizing each row in C), E is a matrix with all elements set to 1 n , and α is the well known "damping factor" (set to 0.85, following the PageRank algorithm <ref type="bibr" target="#b18">[18]</ref>).</p><p>We initialize w loc as a uniformly distributed vector ( 1 n , ..., 1 n ) and then apply the power iteration algorithm until the vector w loc converges to a stable state.</p><p>This model takes into account the relations between locations, but ignores the effects of different users. It thus cannot distinguish between visits by more versus less authoritative users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.5">Unified Link Analysis Framework</head><p>We propose a new unified probabilistic model that takes into account both the links between users and locations and the links between locations, as captured by the two-layered graph. No existing approach is able to accommodate both aspects: the approach based on randomized HITS model (Section 3.3.3) cannot model the relations between locations, while the approach based on PageRanklike model (Section 3.3.4) cannot model the mutual reinforcement between users and locations. Additionally, the proposed unified model is able to incorporate the durations of visits and the distances between locations.</p><p>The unified model uses the structure of the two-layered graph to build a Markov chain. The proposed unified model thus can be characterized as random walks on the Markov chain built on both GUL and GLL in which the states are nodes. We first present the unified model and then explain the process of random walks.</p><p>We define three transition probabilities for the Markov chain: p(U k |Li), the transition probability to a user node U k from a location node Li; p(Li|U k ), the transition probability to a location node Li from node U k ; and p(Li|Lj, U k ), the transition probability to location node Li from Lj for user U k .</p><p>Given m users and n locations, we capture the transition probabilities (i.e., p(Li|U k )) from user nodes to location nodes in an (m × n) matrix NUL, and, similarly, the transition probabilities (i.e., p(U k |Li)) from location nodes to user nodes in an (n × m) matrix N LU . We capture the stationary distributions of the random walks for users and locations by two column vectors wuser and w loc , respectively, to rank the significance of locations. The unified model, denoted as Unified, can then be described as:</p><formula xml:id="formula_9">w k+1 loc = N LU • w k user , w k+1 user = NUL • w k+1 loc p(U k |Li) = Num(U k , Li) Num(Li) + (1 -) 1 m p(Li|U k ) = n j=1 p(Lj|U k )p(Li|Lj, U k ) p(Li|Lj, U k ) = α Num(Li, Lj, U k ) Num(Lj, U k ) + (1 -α) 1 n ,<label>(4)</label></formula><p>where is the total number of visits by U k to Lj. Parameters and α are the "teleport probability" in the random walks, and they control the effect of the constant probability 1/m and 1/n, respectively. In turn, these two are used to smooth p(U k |Li) and p(Li|Lj, U k ), respectively.</p><p>As mentioned, the unified model can be interpreted as a random walk model on both GUL and GLL. Thus, at location node Li, the random walk proceeds to user node U k with the probability p(U k |Li). Intuitively, the transition probability to a user node U k reflects the significance of the user to the location based on the user's previous behavior, i.e., the frequency of the user visiting Li. At Li the random walk can either follow a link in the graph GUL, or it can teleport to a random user node with probability 1 -. Similarly, at user node U k the random walk proceeds to location node Li with probability p(Li|U k ).</p><p>To compute p(Li|U k ), we perform random walks on GLL for each user node U k . The transition probability of the random walks on GLL from location Lj to location Li for user U k reflects the trips by the user between the two locations, and the probability is computed by p(Li|Lj, U k ) in Equation <ref type="formula" target="#formula_9">4</ref>. From the stationary distributions of the random walks, we get p(Li|U k ) for each location Li.</p><p>The unified model exploits both user-location and location-location reinforcement. In fact, the models in Sections 3.3.3 and 3.3.4 are special cases of the unified model.</p><p>Reduction to the Model in Section 3.3.3. If we disregard the location-location reinforcement, i.e., the locations are independent so that p(Li|Lj, U k ) = p(Li|U k ), we compute the conditional probabilities in Equation 4 as follows:</p><formula xml:id="formula_10">p(U k |Li) = Num(U k , Li) Num(Li) + (1 -) 1 m p(Li|U k ) = Num(U k , Li) Num(U k ) + (1 -) 1 n ,</formula><p>where and Num(U k ) is the total number of visits by U k . In Appendix F, we show that with these definitions, Equation 4 can be reduced to Equation <ref type="formula" target="#formula_5">2</ref>.</p><p>Reduction to the Model in Section 3.3.4. If we disregard the user-location reinforcement, i.e., we treat all the users equally, we can rewrite the probability p(Li|Lj, U k ) as follows:</p><formula xml:id="formula_11">p(Lj|Li) = α Num(Lj, Li) Num(Li) + (1 -α) 1 n ,</formula><p>where Num(Lj, Li) is the number of trips between Li and Lj. In Appendix F, we show that in this case, Equation 4 can be reduced to Equation <ref type="formula" target="#formula_7">3</ref>. We proceed to present an algorithm that implements the unified model. This algorithm uses the power iteration method to compute the stationary distribution of vector w loc that ranks locations. Although the ranking is done offline, we show that it is possible to reduce the unified model to a simplified model that enables a more efficient algorithm. THEOREM 1. Let P be the n×n ( n is the number of locations) transition matrix of the Markov chain on GUL and GLL. An element pij of the matrix represents the transition probability between two locations, and it is computed as:</p><formula xml:id="formula_12">pij = p(Lj|Li) = m k=1 p(U k |Li)p(Lj|Li, U k )<label>(5)</label></formula><p>The unified model in Equation <ref type="formula" target="#formula_9">4</ref>can be reduced to the following:</p><formula xml:id="formula_13">w k+1 loc = P T • w k loc (6)</formula><p>PROOF. See Appendix D. An algorithm that utilizes Equation 6 is more efficient than one that uses Equation <ref type="formula" target="#formula_9">4</ref>. The pseudocode of the proposed algorithm is in Appendix E.</p><p>Based on the unified model, we proceed to present an extended model, denoted as ST-Unified, that is able to incorporate stay durations and distances between locations.</p><p>First, each stay has a duration ∆t, and the longer the stay at a location, the more significant the location is assumed to be. To account for durations in the unified model in Equation <ref type="formula" target="#formula_12">5</ref>, we extend the conditional probabilities p(U k |Li) that so far only considered the numbers of visits:</p><formula xml:id="formula_14">p (U k |Li) = (ε Num(U k , Li) Num(Li) + (1 -ε) Dur(U k , Li) Dur(Li) ) + 1 - m</formula><p>where Dur(U k , Li) is the duration at Li of U k , Dur(Li) is the total duration of stays at Li, and ε controls the effect of the durations. Second, given several equally attractive locations, e.g., convenience stores, a user is expected to prefer to travel to the nearest one. Thus, the longer the distance a user is willing to travel to reach a location, the more significant the location is considered to be. To account for this, we extend the definition of p(Lj|Li, U k ), the probability of user U k traveling from location Li to location Lj. If there are trips between Lj and Li in the location history of U k , the definition becomes:</p><formula xml:id="formula_15">p (Lj|Li, U k ) = α(η Num(Lj, Li, U k ) Num(Li, U k ) + (1 -η) Dist(Lj, Li) h Dist(Li, L h ) ) + 1 -α n ,</formula><p>where Dist(Lj, Li) is the distance between Lj and Li. The larger this distance is, the larger the conditional probability becomes. Parameter η controls the effect of distances.</p><p>In ST-Unified, the random walks on GUL consider two factors: the stay duration and the reinforcement between visitors and locations. The random walks on GLL consider another two factors: the distances and the connection between locations.</p><p>For implementation, the transition matrix of ST-Unified is defined as P , and its element p ij is computed as:</p><formula xml:id="formula_16">p ij = m k=1 p (U k |L k )p (Lj|Li, U k )</formula><p>Column vector w loc can then be computed as:</p><formula xml:id="formula_17">w k+1 loc = P T • w k loc (<label>7</label></formula><formula xml:id="formula_18">)</formula><p>THEOREM 2. Both Unified and ST-Unified converge utilizing power iteration.</p><p>PROOF. See Appendix D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXPERIMENTAL EVALUATION</head><p>We cover the experimental settings and then the results semantic location extraction and ranking in turn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Settings and Evaluation Methods</head><p>We use GPS data collected from 119 cars driven by young drivers during the period 01/01/2007-31/03/2008. The data set contains in excess of 0.1 billion GPS records.</p><p>Following the approach in Appendix B, we obtain 159,062 stays from the data set. After data cleaning, we obtain 76,139 stay points. Details on stay extraction are given in Appendix G.1, and Figure <ref type="figure" target="#fig_2">2</ref> shows distribution of a sample of the stay points.</p><p>We also use three subsets of the whole dataset for evaluating the proposed methods. DATA1: Data restricted to the town of Nørresundby; this dataset contains 352 locations. DATA2: 1,508 locations that were visited by at least 5 users. DATA3: Using the data from DATA2, if a location is visited by a user more than 5 times, the number of visits to the location by the user is counted as 5. We create these subsets in order to obtain datasets with different properties.</p><p>All experiments are conducted on a computer with 2.3 GHz CPU and 2 GB main memory; our proposals are implemented using C#.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Extraction of Semantic Locations</head><p>Algorithms: We evaluate the performance of the enhanced method SEM-CLS (Section 3.2), comparing with the OPTICS and K-means algorithms. For OPTICS <ref type="bibr" target="#b1">[1]</ref>, we use software provided by its authors, and we use WEKA <ref type="foot" target="#foot_0">1</ref> for the K-means method. We elaborate on how to obtain the ground truth for semantic locations in Appendix G.3. Metrics: We use three metrics, namely entropy, purity <ref type="bibr" target="#b21">[21]</ref>, and normalized mutual information (NMI) <ref type="bibr" target="#b15">[15]</ref> that are used widely to evaluate the performance of clustering algorithms when a ground truth exists. The smaller the entropy, the better a clustering method performs. For the other two measures, the larger, the better.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Location Ranking</head><p>Ranking models: We evaluate the approaches presented in Section 3.3: the randomized HITS on GUL (U-L), the random walks on GLL ( L-L), the unified model on the two-layered graph (Unified), and the unified model taking into account the durations and distances (ST-Unified). We compare with the three baseline approaches <ref type="bibr" target="#b23">[23]</ref>, i.e., rank-by-visits, rank-by-durations, and the HITSbased approach. Ground truth for ranking: We compute the top-50 locations for each ranking method, combine them, and subject them to expert annotators in order to assess their significance. The locations are shown on a map, and their associated semantics are given to the annotators, who do not know which methods produced which locations.</p><p>Four individuals familiar with Nordjylland perform the annotation, applying a label from Table <ref type="table" target="#tab_1">1</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Metrics:</head><p>To capture the performance of our location significance ranking approaches, we apply three popular ranking performance metrics, namely Mean Average Precision (MAP), Precision@n, and nDCG (normalized Discounted Cumulative Gain). Precision@n is the fraction of the top-n locations retrieved that are significant. When computing MAP and Precision@n, only the locations with score above 1.5 are considered as significant. nDCG computes the relative-to-the-ideal performance <ref type="bibr" target="#b9">[9]</ref>.</p><p>Parameter selection: We use the parameters in the random walk model on GUL and α in the random walk model on GLL. Both are set to 0.85, thus following the PageRank <ref type="bibr" target="#b18">[18]</ref> and the randomized HITS <ref type="bibr" target="#b16">[16]</ref> algorithms. In ST-Unified, ε and η are set to 0.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Experimental Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Extracting Semantic Locations</head><p>To evaluate the grouping of stay points into locations by the different clustering methods, we adjust the parameters of each method to obtain a number of clusters (and thus locations) that is similar to the number of ground truth locations.</p><p>We set k to 7,100 for K-means, and the initial k mean points are selected randomly. For OPTICS, we set to 17 meters and minPts to 2 (a cluster must have at least two stay points). In the SEM-CLS method, threshold th is set to 3. As a result, K-means returns 7,056 clusters (a bit below k due to empty clusters), and OPTICS returns 7,088 clusters.</p><p>We apply SEM-CLS to enhance the results of K-means and OP-TICS. We vary the number of sampling points for each cluster from 2 to 5 for SEM-CLS. The results are shown in Tables <ref type="table" target="#tab_2">2</ref> and<ref type="table" target="#tab_3">3</ref>. The "# Samples" column gives the number of sampling points in each cluster to be reverse geocoded, and the number of generated clusters (locations) is given in the last column. We can see that OPTICS performs better than K-means, and we see that SEM-CLS, when applied to both clustering algorithms, is able to improve on them in terms of all three metrics. This suggests that the use of the semantic and visit patterns for the splitting and merging of clusters in SEM-CLS is effective.</p><p>We also observe that SEM-CLS improves as more points are sampled and reverse geocoded. However, calling an external API to perform reverse geocoding consumes substantial time. Hence, there is a tradeoff between the effectiveness and the efficiency.</p><p>Efficiency. K-means takes 12 minutes to finish, and OPTICS takes 4 minutes. The enhancement method SEM-CLS takes less than 1 second. Additional details are available in Appendix G.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Ranking the Significance of Locations</head><p>Table <ref type="table">4</ref> depicts the MAP, Precision@n, and nDCG@n results of the different ranking models on the whole dataset. Each column corresponds to an approach. ST-Unified performs the best in terms of all metrics, and Unified performs better than U-L and L-L, and these all perform better than the three baseline methods.</p><p>U-L exploits the mutual reinforcement between the authority of users and the significance of locations. L-L uses information on the number of visits, which is also used by the rank-by-visits method. It outperforms rank-by-visits because it propagates the significance between locations.</p><p>Unified improves on U-L and L-L because it combines the two graphs GUL and GLL while the latter two only consider one subgraph. ST-Unified performs better than Unified because it exploits the combined graph and also the distance between locations and stay durations.</p><p>L-L performs worse than the other proposed models. The reason may be that it does not capture the authority of users. The model is also significantly affected by the locations visited many times by very few users-such locations have large in-degree weights.</p><p>The HITS-based approach <ref type="bibr" target="#b23">[23]</ref> on GUL performs worse than the other two baselines. Another study <ref type="bibr" target="#b23">[23]</ref> shows that it performs better than rank-by-visits. This may be because the mutual reinforcement between users and locations can assign unsuitable weights to links according to the analysis of the HITS algorithm by Bharat and Henzinger <ref type="bibr" target="#b5">[5]</ref>, as discussed in Sections 3.3.2-3.3.3. For example, we find a location visited by only one user, but more than 200 times. As a result, the user has a very high hub score of 0.968, and the top-10 locations returned by the HITS-based approach are all locations visited by this user. However, none of them are significant locations. The method rank-by-durations outperforms rank-by-visits slightly by incorporating visit durations.</p><p>The top-10 results of the four proposed ranking models are given in Appendix G.5. Efficiency. The last row of Table <ref type="table">4</ref> gives the runtimes of the different methods. Unified and ST-Unified use power iteration. When using Equation <ref type="formula">6</ref>, the runtime is about 4 seconds, while it is 130 seconds wuen using Equation <ref type="formula" target="#formula_9">4</ref>. Recall that location ranking is done offline and not at query time. Pre-computed location rankings are utilized to answer top-k queries as described in Appendix A. Results on other datasets. Tables <ref type="table" target="#tab_4">5</ref><ref type="table" target="#tab_5">6</ref><ref type="table" target="#tab_6">7</ref>shows the results of the HITS-based approach <ref type="bibr" target="#b23">[23]</ref> and the proposed methods. We see that ST-Unified consistently performs the best and that Unified performs better than U-L and L-L. The results in Table <ref type="table" target="#tab_4">5</ref> on DATA1 that concerns a small region are similar to the results on the whole data, meaning that the region size does not affect the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HITS</head><p>As discussed in Section 3.3.2 and in the coverage of the results reported in Table <ref type="table">4</ref>, a possible problem of the HITS-based approach is that locations visited many times by very few users are ranked too highly. To avoid this potential problem, DATA2 does not contain locations visited by very few users.  <ref type="table">4</ref>: Ranking results using different ranking models on the whole dataset help the HITS-based approach, although the other models remain better.</p><p>In DATA2, every location has at least 5 visitors, but a user may still visit a location many times. For example, we find that in DATA2, one location is visited by one user 101 times while being visited very few times by other users. Thus both the user and the locations visited by the user obtain very high ranking scores in the HITS-based approach.</p><p>To eliminate such effects, we set for each user who visits a location more than 5 times the number of visits to 5, thus obtaining DATA3. Table <ref type="table" target="#tab_6">7</ref> shows that the performance of the HITS-based approach is then close to that of the U-L model that is based on the randomized HITS algorithm, although ST-Unified still performs the best. Parameter Study. ST-Unified uses four parameters: , α, ε, and η. The best performance is obtained when and α are in the range 0.7-0.9 and ε and η are around 0.3. Additional details are available in Appendix G.6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS AND FUTURE WORK</head><p>Motivated by the proliferation of GPS data, we propose a framework that encompasses new techniques for extracting semantically meaningful geographical locations from such data and for the ranking of these locations according to their significance.</p><p>We model the relationships between locations and also the relationships between locations and users with a two-layered graph. The ranking model we propose takes into account significance propagation among locations; mutual reinforcement between location significance and user authority; and aspects such as the number of visits to a location, the durations of the visits, the distances between locations.</p><p>An empirical study demonstrates that our proposals are capable of extracting semantic locations and of performing better rankings than several baseline methods and previous work.</p><p>Several promising directions for future work exist. First, it is of interest to study the processing of geo-context aware queries (discussed in Appendix A) based on the hot semantic locations. Second, it is of interest to mine "hot" semantic patterns from GPS trajectories.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A. APPLICATION SCENARIOS</head><p>The extracted top-k hot semantic locations can be used by a recommendation system to fulfill the following two types of recommendation queries.</p><p>The first kind of query is the location-aware top-k query. It returns a ranked list of places according to a user's location. For example, a user staying in a hotel would like to find the top-10 significant locations that are close to the hotel.</p><p>Formally, a location-aware top-k query is represented by Q = {k, ι}, where k is the number of locations requested, and ι = (x, y) is the query location. The query retrieves the top-k hot locations with regard to the query location ι.</p><p>Clearly, the popularity of locations should be taken into account to answer such queries. In addition, the interestingness of a location to a user is affected by the distance from the user's location (the query location) to the semantic location. A user is probably willing to visit a less interesting nearby location instead of slightly more interesting, but further away location.</p><p>Hence, to answer this kind of recommendation query, we take into consideration both the inherent significance of a location and its distance to the query location.</p><p>A location-aware top-k query is similar to a web query. For a web query, web pages are ranked by a combination of their inherent, relative importance (e.g., as computed by PageRank), and their relevance to the query. Here the inherent importance corresponds to the inherent significance of locations, and the relevance corresponds to the distance between locations and the query location.</p><p>In addition, the extracted hot locations can also be combined with the location-aware top-k keyword query <ref type="bibr">[6]</ref>, which takes into account both the distances of locations to the query point and the relevance of the textual descriptions of locations to the query keywords.</p><p>The second kind of query is the context-aware recommendation query. Recall that a GPS record G contains user information (the user ID u), temporal information (the timestamp t), and spatial information (the coordinates x and y). The concept of a multidimensional view of the data from multidimensional databases and data warehousing can be incorporated into hot-location recommendation. In other words, we can take into account a user dimension, a time dimension, and a spatial dimension when providing contextaware recommendations. Example queries include "find the top-30 locations visited by persons between the age 20 and 30," "find the top-10 locations in May, 2007," and "find the top-20 locations in the city center."</p><p>The context-aware recommendation query takes parameters k, us, ts, rs . It retrieves the top-k locations from the GPS data that satisfy the user-dimension predicate us, the time-dimension predicate ts, and the spatial-dimension predicate rs. Obviously, if we do not impose any context constraints, the context-aware query reduces to the problem of ranking semantic locations as defined in Section 2.2.</p><p>On the user dimension different groups of users have various interests, and the hot locations from different user groups reveal the group's preferences. On the time dimension the significance of locations may vary with the time of day since locations have different opening hours (e.g. bars are usually open at night). Another example is that the significance of locations may vary across the four seasons (e.g. outdoor tourist sites may not be visited in winter as frequently as in summer). On the spatial dimension, the significance of a location may vary with respect to different regions. If a location is mostly visited sequentially from other locations within the same region, this indicates that the location will have high local importance, but it may not be that interesting in the global view. For example, a community kiosk may display the property.</p><p>Note that the two kinds of queries are not orthogonal and can be combined. For example, a query could be "find the top-10 locations in summer near my hotel." Similar to a location-aware query, to process this query we still need to compute the popularity of locations and the influence of locations to the query location. However, the popularity of locations will be computed by a context-aware recommend query, i.e., we use only the GPS trajectories generated in summer to extract and rank hot locations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. EXTRACTING STAY POINTS</head><p>When a car is turned off, the GPS-enabled device attached to the car also stops recording. We utilize this feature to extract stay points. If the duration ∆t between two consecutive records from a user is larger than a threshold t th , the two records represent a stay. The record that is the end of the previous trip is denoted G end and the record that is the start of the next is denoted Gstart.</p><p>When a car is started, the car's GPS device needs sometime to start working. Hence the ending record best captures the location of the stay, and we define a stay as P = (G end , ∆t).</p><p>The value of the threshold t th affects the number of extracted stay points. We studied the effect of t th on number of stay points using different for on our data, and we also reverse geocode the generated stay points and measured the number of distinct street addresses. We found it useful to use a threshold of 10 minutes, which yields some 76,000 stay points and more than 7,000 street addresses for our data. This value is also used in previous work <ref type="bibr" target="#b3">[3]</ref>.</p><p>Substantial data cleaning of the raw GPS data is also needed to obtain a robust approach. A number of checks were carried out, and the approach was generally to repair or discard data when problems were identified. The specifics are left out for brevity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. DETAILS ON BASELINES</head><p>We consider three baseline methods: Rank-by-visits. This method assumes that the more a location is visited, the more significant it is. This method ranks the locations according to the number of visits by all the users. Ties are broken by the sum of durations. Rank-by-durations. This method is based on the rank-by-visits method. It takes into account the durations of visits: It ranks the locations according to the sum of durations of all visits to a location. Ties are broken by the number of visits. Zheng et al. <ref type="bibr" target="#b23">[23]</ref>. Formally, the approach utilizes the matrix M from Section 3.3.1 to compute an authority score column vector a for the locations, and a hub score column vector h for the users.</p><formula xml:id="formula_19">a k+1 = M T • h k , h k+1 = M • a k+1<label>(8)</label></formula><p>The locations are ranked by the authority score vector a. After changing the subscript, we have:</p><formula xml:id="formula_20">p(Lj|Li) = m k=1 p(U k |Li)p(Lj|Li, U k )</formula><p>This completes the proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2 Proof of Theorem 2</head><p>PROOF. Because we add a constant probability to both p(U k |Li) and p(Lj|Li, U k ), it is assured that all the elements in P and P is larger than zero. Hence both matrices are irreducible. All elements in the two matrices are transition probabilities and are thus positive. In matrix P, it can be shown that:</p><formula xml:id="formula_21">n j=1 pij = n j=1 m k=1 p(U k |Li)p(Lj|Li, U k ) = m k=1 p(U k |Li) n j=1 p(Lj|Li, U k ) = m k=1 p(U k |Li) • 1 = 1</formula><p>Therefore P is row stochastic. Similarly we can also prove that P is row stochastic.</p><p>In summary, P and P are irreducible, positive and row stochastic matrices. According to the Markov chain theorem, both the Unified and ST-Unified model will converge using the power iteration algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. ALGORITHM OF THE UNIFIED MODEL</head><p>The algorithm of the unified model is shown in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. REDUCTION OF THE UNIFIED MODEL</head><p>The unified model can be reduced to each of the two models introduced in Sections 3.3.3 and 3.3.4.</p><p>Reduction to random walk on GUL: If we disregard the locationlocation reinforcement, we have p(Li|Lj, U k ) = p(Li|U k ). We can estimate the element p(U k |Li) in NUL and the element p(Li|U k ) in N LU as:</p><formula xml:id="formula_22">p(U k |Li) = N um(U k , Li) N um(Li) + (1 -) 1 m p(Li|U k ) = N um(U k , Li) N um(U k ) + (1 -) 1 n</formula><p>Under this estimation, we can see that: </p><formula xml:id="formula_23">M[k][i] ← M[k][i] + 1 9:</formula><p>if the trip is from the jth location then 10:</p><formula xml:id="formula_24">N[k][j][i] ← N[k][j][i] +<label>1</label></formula><p>11: BuildMatrix(P, M, N) 12: do power iteration on P until w loc reaches the stationary state. 13: return w loc</p><formula xml:id="formula_25">N LU = M T row + (1 -)E1 NUL = M col + (1 -)E2</formula><p>Therefore, Equation 4 is exactly the same as Equation <ref type="formula" target="#formula_5">2</ref>. Reduction to random walk on GLL: If we disregard the userlocation reinforcement, we treat all the users' trajectories as one pseudo "user." Now we have:</p><formula xml:id="formula_26">p(Li|Lj, U k ) = p(Li|Lj) = α N um(Lj, Li) N um(Li) + (1 -α) 1 n</formula><p>Notice that p(Li|Lj) is the element of P. Hence</p><formula xml:id="formula_27">P = αCrow + (1 -α)E</formula><p>We can see that Equation 6 is equal to Equation 3. Since we have proved that Equation 6 is simplified from Equation <ref type="formula" target="#formula_9">4</ref>, Equation <ref type="formula" target="#formula_9">4</ref>can be reduced to Equation 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. ADDITIONAL EXPERIMENTAL SETTINGS AND RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.1 Extracting stays</head><p>As explained in Appendix B, we mark two consecutive GPS records as the starts and end of a stay if the time duration between them exceeds ∆t=10 minutes. This yields 159,062 stays in our data set. After data cleaning, we obtain 76,139 stay points. These points are located in the region 56 • ∼ 58 • North, 9 • ∼ 11 • East, which is the region of Nordjylland in Denmark. Figure <ref type="figure" target="#fig_2">2</ref> depicts the distribution of a sample of the stay points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.2 Reverse Geocoding and Obtaining Semantics</head><p>The Google Maps API is invoked for reverse geocoding. Given a latitude and a longitude, Google Maps returns an addressable location that is nearest to the query position. The returned information contains the street address and the coordinates. An online yellow and white pages directory in Denmark (http://www.degulesider.dk/) is used for finding the semantic of a given street address. The yellow pages service returns a list of semantic locations that are near the query street address and one of which may match exactly the given query street address.</p><p>The coordinates used in the raw GPS data are in the UTM (Universal Transverse Mercator coordinate system) format. To perform reverse geocoding, we convert the data from the UTM format to </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.3 Ground Truth of Semantic Locations</head><p>We build a ground truth of semantic locations to evaluate the clustering methods. We first reverse geocode each stay point using the Google Maps API. Given a stay point P with coordinate (x, y), Google Maps API will return the street address of the point together with the coordinate (x , y ) of this street address. We call the returned coordinate the reverse-coordinate to distinguish it from the coordinate of the stay point. Note that a street address may correspond to multiple reverse-coordinates, particularly when the returned street address does not contain a street number. We assume that a semantic location corresponds to one or several distinct reverse-coordinates.</p><p>We group stay points such that each group has a distinct reversecoordinate. We then check whether some groups should be merged to represent a semantic location: We compute the distance of all pairs of groups using their reverse-coordinates; If the distance between two groups is less than 100 meters, we ask annotators to check whether they are the same semantic location and should be merged. Finally, we obtain 7,082 semantic locations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.4 Efficiency of Semantic Location Extraction</head><p>K-means takes 12 minutes to finish, and OPTICS takes 4 minutes. The enhancement method SEM-CLS takes 390 ms when the number of sampling points is 2, and 420 ms when the number of sampling points is 5 if we assume that all the points have been reverse geocoded by calling external API beforehand. The runtime of reverse geocoding depends on the stability of network, and the availability and workload of external API service. Sometimes we have to call the external API service several times to get the result. Hence, it does not really make sense to report the runtime of the external API service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.5 Top-10 Results of Four Ranking Models</head><p>Figure <ref type="figure">3</ref> shows the top-10 results of the four ranking models proposed in Section 3.3. The harbor location is detected by the L-L model (the top right corner). It does not have a large number of visitors, but has a relative large number of visits. The hospital loca-Figure <ref type="figure">5</ref> shows the effect of varying α, and we can see that the performance is the best when α is in the range 0.7-0.9. When we set α to zero, all the transition probabilities become the same, and ST-Unified works like the U-L model; and when setting α to 1, we disregard the teleport probability in the random walk on GLL.  <ref type="figure">7</ref> shows the effect of varying η and varying ε, respectively. We can see that only if we combine the consideration of the number of visits, the durations and the distances will we achieve the best results.</p><p>When η and ε are set as zero, ST-Unified will become Unified. When ε is set to a large value, the duration plays a more important role than the visiting times in estimating the conditional probability p(Li|U k ). We can see that the performance is slightly worse. When η is set at a large value, the distance is more important for estimating p(Lj|Li, U k ). This leads to very poor performance because the distance alone is not a good indicator of the transition probability of a random surfer between two locations. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>H. ADDITIONAL RELATED WORK</head><p>Extracting locations from GPS trajectories: There has been a host of studies on extracting locations from single users' GPS trajectories <ref type="bibr" target="#b3">[3,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b13">13,</ref><ref type="bibr" target="#b20">20,</ref><ref type="bibr" target="#b24">24]</ref>. There is also recent work <ref type="bibr" target="#b23">[23]</ref> on extracting locations from multiple users' trajectories. Some works <ref type="bibr" target="#b8">[8,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b20">20]</ref> do not consider the re-occurrence of GPS readings at the same location, and thus they do not need to cluster the GPS points into locations; other works make use of clustering to group GPS records to get locations <ref type="bibr" target="#b3">[3,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>. However, no works consider the semantics of locations when extracting locations.</p><p>Liu et al. <ref type="bibr" target="#b14">[14]</ref> consider the extraction of semantic locations, but the study is based on a single user's data and does not cluster similar points. In contrast, our work handles multiple users' trajectories, and a semantics enhanced clustering method is used for extracting semantic locations.</p><p>Mining important locations: Zhou et al. <ref type="bibr" target="#b24">[24]</ref> mine personal important locations from a single user's trajectories. The importance is a personal view and is "defined" by the user, such as the home or work office of the user. They do not rank locations, but only classify locations as important or not. In contrast, we rank locations based on location histories of multiple users.</p><p>Zheng et al. <ref type="bibr" target="#b23">[23]</ref> mine interesting locations and travel sequences from GPS data, and a HITS-based inference model is used for ranking locations. Our work differs from that work in that 1) we consider semantics and use semantic to enhance the location extraction process; 2) we propose new models for ranking locations, which are capable of better exploiting the features of GPS trajectories.</p><p>Several locations recommender systems <ref type="bibr" target="#b19">[19,</ref><ref type="bibr" target="#b22">22]</ref> can recommend locations to users based on real-world data. Our proposed techniques can also serve as a location recommender system.</p><p>PageRank and HITS. These are two popular link based ranking algorithms that were originally developed for web link analysis. Both methods rank pages according to their importance and authority, estimated by the importance of pages pointing to them. They can be understood as as a Markov chain in which the states are pages and the transition probabilities are determined by the links between pages; the PageRank problem actually amounts to solving an old problem (computing the stationary vector of a Markov chain) in the context of web links <ref type="bibr" target="#b12">[12]</ref>.</p><p>We note that Ding et al. <ref type="bibr" target="#b7">[7]</ref> attempt to find a framework to unify the PageRank and HITS models. The unification is to establish a connection between the two models such that it becomes possible to use a simple count of the number of inlinks to a webpage as an approximation of its PageRank. However, the unified model works on a single-layered web link graph, not the two-layered graph in our problem.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Example two-layered graph of users and locations As discussed in Section 2.2, we use novel indicators of location significance. Specifically, we propose a new model that enables the propagation of significance among locations and the reinforcement between user authority and location significance using the two-layered graph.Our setting differs from the standard web setting in important respects. Specifically, 1) our graph has two levels while the web graph has one, making it resemble the location-location graph, which</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>1 PROOF.</head><label>1</label><figDesc>Let p(U k ) denote the kth element in wuser, and p(Li) denote the ith element in w loc . From Equation4, we know that:p(Li) = m k=1 p(U k )p(Li|U k ) = m k=1 p(U k ) n j=1 p(Lj|U k )p(Li|Lj, U k )According to the bayesian theorem, we can get:k )p(Lj|U k )p(Li|Lj, U k ) )p(U k |Lj)p(Li|Lj, U k ) k |Lj)p(Li|Lj, U k ) Since p(Li) = n j=1 p(Lj)p(Li|Lj), we can obtain: p(Li|Lj) = m k=1 p(U k |Lj)p(Li|Lj, U k )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Distribution of stays in our GPS data</figDesc><graphic coords="11,84.69,54.02,177.30,151.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :Figure 6</head><label>56</label><figDesc>Figure 4: MAP by varying</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Figure 6: MAP by varying η</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Num(U k , Li) is the number of visits to Li by U k and Num(Li) is the total number of visits to Li; p(Li|Lj, U k ) is the probability of Li being visited by U k from Lj; and Num(Li, Lj, U k ) is the number of trips between locations Lj and Li by U k , and Num(Lj, U k )</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>to each location. For each location, we use the average score from all the annotators. Annotation specification</figDesc><table><row><cell cols="2">Score Specification</cell></row><row><cell>2</cell><cell>Very interesting to most people in general and recommended</cell></row><row><cell>1</cell><cell>An OK location to most people in general</cell></row><row><cell>0</cell><cell>Neutral to most people in general</cell></row><row><cell>-1</cell><cell>Not interesting to most people in general and not recommended</cell></row><row><cell>-2</cell><cell>I have no idea of what it is</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>K-means versus SEM-CLS on K-means with different numbers of sampling points</figDesc><table><row><cell cols="3"># Samples Purity Entropy</cell><cell>NMI</cell><cell># Clusters</cell></row><row><cell>K-means</cell><cell>0.8630</cell><cell>0.4770</cell><cell>0.5909</cell><cell>7056</cell></row><row><cell>2</cell><cell>0.8743</cell><cell>0.4438</cell><cell>0.6096</cell><cell>6013</cell></row><row><cell>3</cell><cell>0.8852</cell><cell>0.4195</cell><cell>0.6236</cell><cell>6304</cell></row><row><cell>4</cell><cell>0.8990</cell><cell>0.3867</cell><cell>0.6311</cell><cell>6510</cell></row><row><cell>5</cell><cell>0.9096</cell><cell>0.3598</cell><cell>0.6375</cell><cell></cell></row><row><cell cols="3"># Samples Purity Entropy</cell><cell>NMI</cell><cell># Clusters</cell></row><row><cell>OPTICS</cell><cell>0.8699</cell><cell>0.4567</cell><cell>0.6526</cell><cell>7088</cell></row><row><cell>2</cell><cell>0.8828</cell><cell>0.4292</cell><cell>0.6682</cell><cell>6055</cell></row><row><cell>3</cell><cell>0.8979</cell><cell>0.3847</cell><cell>0.6703</cell><cell>6358</cell></row><row><cell>4</cell><cell>0.9129</cell><cell>0.3573</cell><cell>0.6724</cell><cell>6555</cell></row><row><cell>5</cell><cell>0.9259</cell><cell>0.3139</cell><cell>0.6747</cell><cell>6680</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>OPTICS versus SEM-CLS on OPTICS using different numbers of sampling points</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 :</head><label>5</label><figDesc>Ranking results using different ranking models on DATA1</figDesc><table><row><cell></cell><cell></cell><cell>U-L</cell><cell>L-L</cell><cell cols="2">Unified ST-Unified</cell></row><row><cell>MAP</cell><cell cols="4">0.5424 0.7231 0.6908 0.7664</cell><cell>0.8090</cell></row><row><cell>P@20</cell><cell>0.5</cell><cell>0.7</cell><cell>0.6</cell><cell>0.75</cell><cell>0.8</cell></row><row><cell cols="5">nDCG@20 0.8588 0.9269 0.8861 0.9302</cell><cell>0.9545</cell></row><row><cell></cell><cell>HITS</cell><cell>U-L</cell><cell>L-L</cell><cell cols="2">Unified ST-Unified</cell></row><row><cell>MAP</cell><cell cols="4">0.3982 0.6952 0.6691 0.7816</cell><cell>0.8202</cell></row><row><cell>P@20</cell><cell>0.45</cell><cell>0.7</cell><cell>0.6</cell><cell>0.75</cell><cell>0.80</cell></row><row><cell cols="5">nDCG@20 0.8092 0.9290 0.9166 0.9456</cell><cell>0.9501</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6 :</head><label>6</label><figDesc>Ranking results using different ranking models on DATA2</figDesc><table><row><cell></cell><cell>HITS</cell><cell>U-L</cell><cell>L-L</cell><cell cols="2">Unified ST-Unified</cell></row><row><cell>MAP</cell><cell cols="4">0.7008 0.7579 0.6647 0.7982</cell><cell>0.8321</cell></row><row><cell>P@20</cell><cell>0.6</cell><cell>0.7</cell><cell>0.6</cell><cell>0.75</cell><cell>0.8</cell></row><row><cell cols="5">nDCG@20 0.9202 0.9534 0.9132 0.9552</cell><cell>0.9658</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 7 :</head><label>7</label><figDesc>Ranking results using different ranking models on DATA3</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 6</head><label>6</label><figDesc></figDesc><table><row><cell>shows that DATA2 does</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head></head><label></label><figDesc>Algorithm 1 UnifiedModel (SH, m, n) Input:S H , location histories of all users, m, the number of users, n, the number of locations Output:w loc , the column vector containing ranking scores of all locations for each user's location history H k in S H do 7: if the ith location is visited by the kth user then 8:</figDesc><table><row><cell>1: M[m][n] ← NewMatrix() 2: N[m][n][n] ← NewMatrix() 3: P[n][n] ← NewMatrix() 4: initialize all the elements in w loc as 1 n 5: initialize all the elements in M[m][n] and N[m][n][n] as zero 6:</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>http://www.cs.waikato.ac.nz/ml/weka/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>http://www.ibm.com/developerworks/java/library/jcoordconvert/index.html</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors thank the anonymous reviewers for their insightful comments. The research was conducted when the authors were employed at Aalborg University, Denmark. C. S. Jensen is an Adjunct Professor at University of Agder, Norway.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>tion (in the middle) is detected by the U-L model. This is because many users have been there, but not too many times. The two unified models detect both locations. The top 10 semantic locations returned by the four methods are listed in Table <ref type="table">8</ref>.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.6 Parameter Study for the Ranking Models</head><p>There are four parameters in the ST-Unified model, i.e., , α, ε and η. ST-Unified performs the best when and α are in the range 0.7-0.9 and ε and η are around the value 0.3.</p><p>Parameters and α are used to control the effects of the constant probability (to teleport to other nodes). Parameter ε is to control the importance of the stay duration at a location, and parameter η controls the importance of the distance between two locations. They affect the effectiveness of the ST-Unified model.</p><p>Figure <ref type="figure">4</ref> shows the effect of varying . As we can see, the best ranking performance occurs when the value of is in the range 0.7-0.9. By setting to zero, we treat all the users equally, and thus ST-Unified works like the L-L model; by setting to 1, we disregard the teleport probability in the random walk on GUL. At both extremes, the performance becomes worse.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Optics: Ordering points to identify the clustering structure</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Breunig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sander</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGMOD</title>
		<meeting>SIGMOD</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="49" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Learning significant locations and predicting user movement with GPS</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ashbrook</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Starner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ISWC</title>
		<meeting>ISWC</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="101" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Using GPS to learn significant locations and predict movement across multiple users</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ashbrook</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Starner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Personal and Ubiquitous Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="275" to="286" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Objectrank: Authority-based keyword search in databases</title>
		<author>
			<persName><forename type="first">A</forename><surname>Balmin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Hristidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Papakonstantinou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="564" to="575" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Improved algorithms for topic distillation in a hyperlinked environment</title>
		<author>
			<persName><forename type="first">K</forename><surname>Bharat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Henzinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGIR</title>
		<meeting>SIGIR</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="104" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficient retrieval of the top-k most relevant spatial web objects</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Jensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PVLDB</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="337" to="348" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Pagerank: Hits and a unified framework for link analysis</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H Q</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Husbands</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">D</forename><surname>Simon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SDM</title>
		<meeting>SDM</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="249" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Project lachesis: parsing and modeling location histories</title>
		<author>
			<persName><forename type="first">R</forename><surname>Hariharan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Toyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Geographic Information Science</title>
		<meeting>Geographic Information Science</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="106" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Cumulated gain-based evaluation of IR techniques</title>
		<author>
			<persName><forename type="first">K</forename><surname>Järvelin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kekäläinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM TOIS</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="422" to="446" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Extracting places from traces of locations</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Welbourne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Stewart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mobile Computing and Communications Review</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="58" to="68" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Authoritative sources in a hyperlinked environment</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Kleinberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JACM</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="604" to="632" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Langville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Deeper inside PageRank. Internet Mathematics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="335" to="380" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Building personal maps from GPS data</title>
		<author>
			<persName><forename type="first">L</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Patterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Kautz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of the New York Academy of Sciences</title>
		<imprint>
			<biblScope unit="volume">1093</biblScope>
			<biblScope unit="page" from="249" to="265" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Extracting semantic location from outdoor positioning systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Wolfson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MDM</title>
		<meeting>MDM</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page">73</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Introduction to Information Retrieval</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schtze</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Stable algorithms for link analysis</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">X</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGIR</title>
		<meeting>SIGIR</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="258" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Using random walks for question-focused sentence retrieval</title>
		<author>
			<persName><forename type="first">J</forename><surname>Otterbacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Erkan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Radev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. HLT/EMNLP</title>
		<meeting>HLT/EMNLP</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="915" to="922" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">The PageRank citation ranking: Bringing order to the web</title>
		<author>
			<persName><forename type="first">L</forename><surname>Page</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Brin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Motwani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
		<idno>TR 1999-66</idno>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Stanford InfoLab</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Location-based recommendation system using Bayesian user&apos;s preference model in mobile devices</title>
		<author>
			<persName><forename type="first">M.-H</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-H</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-B</forename><surname>Cho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. UIC</title>
		<meeting>UIC</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="1130" to="1139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Extracting places from location data streams</title>
		<author>
			<persName><forename type="first">F</forename><surname>Schmid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-F</forename><surname>Richter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. UbiGIS</title>
		<meeting>UbiGIS</meeting>
		<imprint>
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Introduction to Data Mining</title>
		<author>
			<persName><forename type="first">P.-N</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Steinbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Addison-Wesley Longman Publishing Co</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Toss-it: Intuitive information transfer techniques for mobile devices using toss and swing actions</title>
		<author>
			<persName><forename type="first">K</forename><surname>Yatani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tamura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hiroki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sugimoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hashizume</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEICE Transactions</title>
		<imprint>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="150" to="157" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Mining interesting locations and travel sequences from GPS trajectories</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-Y</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="791" to="800" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Mining personally important places from GPS tracks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Bhatnagar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shekhar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G</forename><surname>Terveen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICDE Workshops</title>
		<meeting>ICDE Workshops</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="517" to="526" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
