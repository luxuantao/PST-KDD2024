<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Skyline Queries Against Mobile Lightweight Devices in MANETs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Zhiyong</forename><surname>Huang</surname></persName>
							<email>huangzy@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Christian</forename><forename type="middle">S</forename><surname>Jensen</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Aalborg University</orgName>
								<address>
									<country key="DK">Denmark</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hua</forename><surname>Lu</surname></persName>
							<email>luhua@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Beng</forename><forename type="middle">Chin</forename><surname>Ooi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Skyline Queries Against Mobile Lightweight Devices in MANETs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">84100685387380FA900971619E345250</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Skyline queries are well suited when retrieving data according to multiple criteria. While most previous work has assumed a centralized setting this paper considers skyline querying in a mobile and distributed setting, where each mobile device is capable of holding only a portion of the whole dataset; where devices communicate through mobile ad hoc networks; and where a query issued by a mobile user is interested only in the user's local area, although a query generally involves data stored on many mobile devices due to the storage limitations. We present techniques that aim to reduce the costs of communication among mobile devices and reduce the execution time on each single mobile device. For the former, skyline query requests are forwarded among mobile devices in a deliberate way, such that the amount of data to be transferred is reduced. For the latter, specific optimization measures are proposed for resource-constrained mobile devices. We conduct extensive experiments to show that our proposal performs efficiently in real mobile devices and simulated wireless ad hoc networks.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>With the continued advances in electronics and wireless communications, more and more mobile handsets with computing and wireless networking capabilities are being deployed. For example, mobile handsets are being equipped with infrared, Bluetooth, or even Wi-Fi capabilities. Further, positioning capabilities are becoming available on handsets, based, e.g., on GPS, the communication infrastructure, or a combination.</p><p>In particular, handsets are now being equipped with wireless peer-to-peer (P2P) capabilities. This enables handsets to become parts of self-organizing, wireless mobile ad hoc networks (MANETs) that allow seamless, low-cost, and easily deployed communications <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b9">10]</ref>. It is conceivable that ad hoc and P2P technologies will be combined to bring about wireless communications without the presence of central servers <ref type="bibr" target="#b3">[4]</ref>.</p><p>Assuming a relational setting, a skyline query <ref type="bibr" target="#b8">[9]</ref> returns tuples from a set of tuples that are not dominated by oth-ers. A tuple tp 1 is said to dominate tuple tp 2 , if tp 1 is no worse than tp 2 in any dimension and is better than tp 2 in at least one dimension. In different contexts, "better" can be "smaller" or "larger." For example, a skyline query may request the hotels that have high quality ratings and low room prices.</p><p>Most previous work on skyline queries <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b20">21</ref>] has assumed that the data is stored in a centralized fashion. This paper considers skyline querying in a mobile context with the following assumptions: 1) each mobile device only holds a portion of the entire dataset; 2) devices communicate through MANETs; 3) and mobile users posing skyline queries are only interested in data pertaining to a limited geographical area, although the queries involve data stored on many mobile devices due to the storage limitations of the devices.</p><p>Consider the example skyline query shown in Figure <ref type="figure">1</ref>. Here, M 1 , ..., M 4 , are mobile devices, each storing data corresponding to different portions of geographical space. Device M 2 is interested in the region represented by the circle, the data of which is held on all four mobile devices. Thus, the skyline query of M 2 involves all four mobile devices. To improve the efficiency of skyline queries, we consider the two most important costs: the cost of the communication among the mobile devices and the cost of query execution on the mobile devices. To reduce the former cost, a skyline query request is sent to the mobile devices involved in a deliberate way such that the amount of data to be transferred is minimized. To reduce the latter, specific optimization measures are proposed for resource-constrained mobile devices. Our experimental study shows that the proposed method is efficient in terms of both communication cost and response time.</p><p>The paper makes the following contributions: First, it captures the problem of skyline querying in MANETs. Second, it proposes distributed processing strategies that aim to reduce the data to be transferred during the processing of queries. Third, it proposes optimizations that aim to speed up the local query processing on resource-constrained devices. Fourth, it reports on extensive experiments that involve both real mobile devices and MANET simulators. The results show that the paper's proposals perform efficiently.</p><p>The remainder of this paper is organized as follows. Section 2 defines the problem to be solved. Section 3 presents the proposed skyline query processing strategies. Section 4 concerns optimization measures for resource-limited mobile devices. Section 5 experimentally evaluates the proposed techniques. Section 6 reviews the related work, followed by conclusions and future directions in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Problem Definition</head><p>We assume a setting with m mobile devices M = {M 1 , M 2 , . . . , M m }. Each device M i holds a database relation R i that contains the data that pertains to sites located in a small geographical area. All R i s on all devices conform to the same schema &lt;x, y, p 1 , p 2 , . . . , p n &gt;, where (x, y) represents the location of a site and the p i are attributes describing a site. The contents of different R i s may overlap, i.e., it is possible that R i ∩ R j = Ø for any i = j. We may also envision a global (and virtual) relation R, such that m i=1 R i = R. In this setting, a mobile device M i can ask a distributed skyline query, whose result consists of all sites s in global relation R that satisfy these conditions: (a) site s is within distance d of M i 's current position; (b) site s is in the skyline of R in terms of all attributes p i , where R is the set of all sites satisfying condition (a). Such a query can be defined as Q ds = (id , pos org , d ), where id is the identifier of the device M org issuing the query, pos org is the location of M org , and d is the distance specifying the region of interest.</p><p>Such queries are meaningful in practice. For instance, a tourist may want to know about inexpensive and highly rated restaurants within a certain range, in order to find a near-by place for dinner. However, the data on the tourist's own device does not cover the region of interest. The device thus contacts other available devices to obtain additional data. As has been pointed out <ref type="bibr" target="#b16">[17]</ref>, the wireless cellular link between a mobile phone and its base station is usually much slower than IEEE 802.11-based wireless P2P links between mobile devices. This argues for the relevance of our problem definition that does not assume a fixed base station. Alternatively, we can limit our problem to the extent of a single cell <ref type="bibr" target="#b16">[17]</ref>.</p><p>The queries we consider differ from traditional skyline queries. First, a region of interest is specified in the query, making the query a constrained skyline query. However, this query differs from those obtained by placing constraints on the dimensions involved in the skyline operation <ref type="bibr" target="#b18">[19]</ref>. In particular, we use spatial constraints that are not involved in the skyline operation. The use of spatial constraints is reasonable because usually, a mobile user is only interested in sites located in a region around the user's current position, not in the entire geographical space. Also, when within the region of interest, the specific location of a site is often not particularly important. Instead, other attributes of the sites are the important ones. Thus, a skyline query applied to those sites within the range provides the user with a relevant set of answers. Second, horizontal partitions of the global relation are distributed across different mobile devices, which is different from vertical partitioning <ref type="bibr" target="#b5">[6]</ref>. Third, mobile devices here have limited storage and processing capabilities in comparison to the computers normally assumed in skyline querying.</p><p>Together, the above features pose several challenges to our distributed skyline queries. First, the wireless communication channels between mobile devices are slow and unreliable, in comparison to wired connections. This implies that the amounts of data transferred between devices should be reduced. Second, the devices are resource-constrained. This calls for processing and energy saving techniques for use on the mobile devices. Finally, because different R i s on different mobile devices may overlap, duplicate elimination must be applied before results are returned.</p><p>In the considered environment, both communication costs and processing costs on the mobile devices are important to the overall query performance. Indeed, these two aspects determine the performance of a query. With this in mind, we provide processing methods that can reduce the amount of data to be transferred among mobile devices and speed up the query processing on a single mobile device. Symbols to be used throughout this paper are summarized in Table <ref type="table" target="#tab_0">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Skyline Queries on Mobile Devices</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Straightforward Strategy</head><p>The originator M org of a query does not need to obtain all relations from all other mobile devices-only those tuples that may potentially appear in the final skyline are needed. Based on this observation, we can reduce the amounts of data to be transferred as follows: query originator M org sends the query specification, Q ds = (id , pos org , d ), rather than simple data requests. On receiving the specification, device M i does a skyline query on its relation R i and then This method reduces the amount of data to be transferred at the cost of local computations at each M i . Suppose for relation R i on mobile device M i that the result of skyline query Q ds is SK i . Then the reduction ratio of the data transferred is</p><formula xml:id="formula_0">(|R i | -|SK i |)/(|R i |) = 1 -|SK i |/|R i |.</formula><p>Clearly, the more selective a local skyline query is, the smaller the communication cost.</p><p>Although the use of local skyline queries can reduce the amount of data sent back to the query originator, there is still a chance that a local result may contain tuples that do not belong to the final skyline. In other words, the union of the SK i is a superset of SK. The set FSK = m i=1 SK i -SK contains all those tuples that appear in one or more local skylines SK i , but not in the final skyline SK. Transmitting SK i -SK from mobile device M i to query originator M org is a waste because it does not affect the final query result. We use FSK i to represent that subset SK i -SK on each mobile device. If we can reduce each FSK i , we can also reduce the communication cost. As an extreme, if each FSK i is empty, m i=1 SK i = SK will hold, and the communication cost is at its lowest. Unfortunately, this is almost impossible in practice because it implies a very special data distribution: the final skyline SK must be perfectly partitioned among all mobile devices, and every tuple in M i not belonging to SK has at least a dominator in SK within the same local relation R i .</p><p>In distributed join processing, a smaller projection of one relation is first sent from one site to its peer site, where it is used to reduce the tuples to be sent to the first site, so that the total communication cost of joining the two relations is reduced <ref type="bibr" target="#b23">[24]</ref>. In our setting, FSK and the FSK i provide indications as to where and how to reduce the communication cost. We proceed to present a strategy that is based on the analysis above and is inspired by the join processing approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Filtering Tuple Based Strategy</head><p>Since in each local skyline SK i there may exist nonqualifying tuples for the final skyline SK, it may be helpful to identify these and prevent them from being transmitted. If a tuple tp i in SK i does not appear in SK, there must be at least one tuple tp j in SK and not in SK i that dominates tp i . If we can know tp j when doing the local skyline query on device M i , tp i can be removed from the result. We use SK i to represent SK i from which some (maybe not all) tp i s of this kind have been removed. In this way, the number of reduced tuples for transmission is</p><formula xml:id="formula_1">|SK i | -|SK i |.</formula><p>The problem is now how to get such tp j s for a mobile device M i . Such a tp j s must come from somewhere else than M i . Since we do a local skyline query on query originator M org , we can pick possible tp j s from its local result. We use SK org to represent the initial, local skyline on M org . Which tuple to choose from SK org is then of interest. To address this issue, we need to consider for a tuple tp j in SK org its ability to dominate and then remove other tuples.</p><p>For a tuple tp j (&lt;p j1 , . . . , p jn &gt;), its ability to dominate other tuples is determined by its own values and the boundaries of the data space, i.e., the hyper-rectangle whose diagonal is the line segment with tp j and the maximum corner of the data space as coordinates. Any other tuple that resides in that region is dominated by tp j and is excluded from the skyline. For this reason, we call that hyper-rectangle the dominating region of tuple tp j . Intuitively, the larger tp j s dominating region is, the more other tuples are dominated by tp j because a larger hyper-rectangle covers more tuples in the data space, especially when the tuples are distributed independently. For simplicity, we use a 2-D illustration as shown in Figure <ref type="figure">2</ref> O v e r e s t i m a t i o n </p><formula xml:id="formula_2">p 1 p 2 t p j M A X 1 M A X 2</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>U n d e r e s t i m a t i o n</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2. Example of Dominating Region</head><p>Suppose the value range on dimension</p><formula xml:id="formula_3">p k is [s k , b k ] in the virtual global relation R. Then the volume of tuple tp j s dominating region is VDR j = n k=1 (b k -p jk ).</formula><p>We choose the tuple, termed tp f lt , from SK org with the maximum VDR j value and use this tuple to filter out non-qualifying tuples. Then instead of sending only the query specification to the mobile devices, we include also tp f lt . Each device M i will then use tp f lt to prune non-qualifying tuples during its local skyline query processing.</p><p>Because we add a tuple to what we send to the mobile devices from query originator M org , the communication savings is |SK i | -|SK i | -1 for one M i . It can be seen that if tp flt fails to remove any non-qualifying tuples from SK i , the communication cost is actually increased by one tuple. However, we expect that in total, this strategy will be competitive. That is, we expect that m i=1,i =org</p><formula xml:id="formula_4">(|SK i | - |SK i | -1) = m i=1,i =org (|SK i | -|SK i |) -m + 1 &gt; 0.</formula><p>As an example, two mobile devices M 1 and M 2 hold hotel relations R 1 and R 2 , respectively, as shown in Tables 2 and 3. Assume M 2 is the query originator that   VDR value, we choose it as the filtering tuple. This tuple eliminates h 14 and h 16 from M 1 's local skyline. As a result, the amount of data transferred to M 2 is reduced by two, and the total savings are one tuple. As the cardinality of R i increases, more non-qualifying tuples can be identified from the local skyline using a filtering tuple.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Estimated Dominating Region</head><p>In the above, we have assumed that the global domain range of any attribute p j is known on mobile device M i . This ensures exact computation of the dominating region. Sometimes, the global domain range may be unknown to M i . In this case, we can compute over-estimated and underestimated dominating regions for a given tuple tp i .</p><p>Over-estimation of the dominating region for tuple tp j is achieved using formula</p><formula xml:id="formula_5">VDR o = n k=1 (max k -p jk ),</formula><p>where max k is a pre-specified value larger than the global domain upper bound b k , or the largest possible value of the attribute value type. Underestimation is done using</p><formula xml:id="formula_6">VDR u = n k=1 (h k -p jk )</formula><p>, where h k is the local maximum value of attribute p k known to M i . The estimations of the dominating region are shown in Figure <ref type="figure">2(b)</ref>. Note that neither over-nor under-estimation affect the correctness of query results. They possibly pick different filtering tuples and therefore have different filtering abilities. Section 5 explores this aspect.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Adaptation to Wireless Ad Hoc Networks</head><p>So far, we have assumed that the query originator can directly communicate with any other mobile device. In that setting, the filtering tuple decided by the originator is used for all mobile devices. In a real mobile setting, however, communication is more likely to be accomplished using multiple hops via intermediate mobile devices if source and destination cannot contact each other directly. In such a setting, we need to adapt our strategy to reduce the communication cost.</p><p>First, tp f lt is dynamically updated during the procedure of query relay to increase its pruning potential. After doing a local skyline query on mobile device M i , the tuple tp f lt with the maximum VDR value is obtained from the local skyline result SK i . Then tp f lt is compared with the current tp f lt , and the one with the larger pruning potential, i.e., the larger VDR value, will be used as the new filtering tuple for other mobile devices to which M i will forward this query.</p><p>As an example consider the three mobile devices M 1 , M  Second, a check is made in every mobile device to avoid processing the same query more than once. To support this check, a tag cnt is added to every query, which then becomes (id, cnt, pos org , d). This tag is a local count, generated by each query originator. In other words, each mobile device maintains a count for all queries it issues, and this count is attached to the corresponding query. When a mobile device M i receives a query (id, cnt, pos org , d), it will check its log to see if this query has been processed. If not, M i processes this query and forwards it to others. Otherwise, the query is ignored.</p><p>To save communication cost, this count cnt can be defined as a byte, allowing a device to generate 256 queries. After a period of time, e.g., one day, this count can be reset. The log on a device keeps for every device its last arriving query's count cnt, which is implemented simply by a hash table that maps the device identifier id to a count. On each mobile device, the worst case space cost of such a hash table is O(m), where m is the total number of mobile devices. The time cost of the check is O(1). This mechanism works well under the assumption that a mobile device is only interested in its latest query.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Optimizations on Mobile Devices</head><p>On the mobile devices, relations are stored in a manner that takes into account the limited storage space on the devices and that enables efficient local skyline query processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Dataset Storage</head><p>Because mobile devices have limited storage (sometimes both data and running programs share the same limited memory space), simply storing all tuples sequentially in so-called flat storage will either consume too much space or harm query processing performance. Several storage alternatives have been proposed for devices with limited space <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b19">20]</ref>.</p><p>We adopt a hybrid storage scheme for each relation R i stored on a mobile devices. Each R i has both both spatial and non-spatial attributes. Because different tuples are usually located at different geographic sites and thus have different spatial attributes, storing the spatial values separately from the tuples does not save storage space. Hence, we store for each tuple its spatial coordinate values directly in R i . Non-spatial attribute values are likely to be shared among multiple tuples, making it beneficial to store them separately. To facilitate skyline query processing on mobile device R i , we use ID-based storage <ref type="bibr" target="#b19">[20]</ref> for the non-spatial attributes. To support fast spatial range checks, the maximum and minimum spatial coordinates are kept as constants in x max , y max , x min and y min . These coordinates specify the minimum bounding rectangle MBR i of all sites in R i .</p><p>We do not use ring storage <ref type="bibr" target="#b7">[8]</ref>, as not every tuple has pointers to values in this scheme. Instead, all tuples with the same value for an attribute are linked by internal pointers, and only one tuple has a pointer to the shared value. This causes expensive access to tuple values, since we have to traverse the internal pointer chain to reach the unique tuple with the external pointer. This hurts skyline query processing, which needs tuple values in dominance comparisons.</p><p>Though domain storage <ref type="bibr" target="#b4">[5]</ref> has tuple-to-value pointers for each attribute of each tuple, we also do not use this scheme, as it still consumes extra time to use tuple-to-value pointers to access a tuple's attribute values from separate domains. Also, domain storage does not provide the convenience given by ID-based storage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Local Skyline Computing</head><p>In domain storage, ring storage, and ID-based storage, all domain values are stored in an array for each attribute. This arrangement can be used to facilitate local skyline query processing on a mobile device. Suppose on mobile device M i the value range of attribute p j is [l j , h j ]. Such an l j or h j value can be fetched on a mobile device in O(1) time, if we store all available values in each sorted. We assume that smaller values are preferred for each attribute p i , and all values in each attribute domain are stored in ascending order. Our hybrid storage model for local relation R i is illustrated in Figure <ref type="figure">3</ref> </p><formula xml:id="formula_7">Relation R i v k … v 1 v 0 v k … v 1 v 0 Sorted domains … p 1 p n v j … v 1 v 0 v j … v 1 v 0</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 3. Hybrid Storage Model</head><p>Inspired by the SFS algorithm <ref type="bibr" target="#b11">[12]</ref>, we also sort R i on the ID value of one attribute. This reduces the number of value comparisons in determining dominance during query processing. We choose the attribute with the largest number of distinct values as the attribute to be sorted on. For simplicity and without loss of generality, we assume that p 1 is that attribute.</p><p>With the domain information and tp f lt received from the query originator, we can determine efficiently whether we need to do a local skyline on mobile device M i . If on every attribute, we have tp f lt .p j ≤ l j , which means that the best tuple (potentially, maybe unavailable) on M i is dominated by tp f lt , no tuple in relation R i will be in the global skyline. All these comparisons cost O(n) time, where n is the number of attributes. In this case, M i needs to do nothing, but return a correct, short message to M org . Thus, local computation is saved significantly.</p><p>If the range check does not imply that all of R i is dominated by tp flt , we need to do a local skyline query. Here, the sorted storage of domains is also useful. Because the domain values of any dimension p j are ordered, the IDs in relation R i reflect the inequality between the real p j values of different tuples. For instance, suppose two tuples tp 1 and tp 2 have id j1 and id j2 , respectively, on dimension p j , and that all domain values are stored in ascending order. Then simply comparing each pair of id j1 and id j2 , instead of accessing and comparing the real domain values, is enough to determine the dominance between tp 1 and tp 2 . This has two benefits. First, access time is saved since no offset based addressing is needed to access values. Second, comparison of simple ID integers generally costs less time than that of domain values.</p><p>The algorithm for a local skyline query on mobile device M i is presented in Figure <ref type="figure" target="#fig_4">4</ref>. Initially, a spatial range check is done to see if the spatial extent covered by mobile device M i overlaps with the query region specified in Q ds . If not, the processing stops. Otherwise, each attribute domain range's lower bound is checked against the filtering tuple tp flt , to determine whether the entire local relation R i is dominated by tp flt . If not, R i is scanned sequentially to obtain the local skyline SK i , which takes advantage of the sorted attribute p 1 and checks the rest of the dimensions only. Two aspects make this procedure different from that of the SFS algorithm. First, attribute IDs are compared instead of real attribute values. Second, a spatial distance check is used to exclude tuples too far away from the query position. After getting the local skyline SK i , the filtering tuple is used again to filter out non-qualifying tuples, and a more capable filtering tuple might be found in SK i to replace the old one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Assembly on Query Originator</head><p>When receiving results back from devices, the query originator needs to combine them with its own local skyline to obtain the correct global skyline. Assembly involves two tasks. The one is to remove non-qualifying tuples from the incoming result and M org 's own local result. The other is to remove all duplicate tuples in the final skyline result. Both tasks can be done within a simple nested loop, i.e., for each tuple tp j in an incoming result SK i , every tuple tp k in the local current result SK org is checked. Duplicates can be identified by checking the x and y values only, since we assume that no two tuples represent the same geographic location. If tp j and tp k are not the same, the dominance between them is determined by checking all their non-spatial attributes. This way, SK i and SK org are merged together correctly to produce the updated SK org .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Experimental Studies</head><p>We proceed to offer insight into the properties of the methods proposed in this paper based on experimental studies. We first study the efficiency of the local optimizations, then study the performance of the distributed processing strategies in a simulated MANET environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Studies on Local Optimizations</head><p>This set of experiments is conducted on an HP iPAQ h6365 pocket PC running MS Windows Mobile 2003 with a 200MHz TI OMAP1510 processor and 64MB SDRAM (55MB user accessible). All programs are written using Su-perWaba, a Java-based open-source platform for PDA and Smartphone application development <ref type="bibr" target="#b2">[3]</ref>. The parameters used in the experiments are listed in Table <ref type="table">6</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Parameter</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 6. Parameters Used in Experiments</head><p>For tests on dataset cardinality, the datasets contain 10K to 100K points with two non-spatial attributes. For tests on non-spatial dimensionality, the datasets contain 50K points with two to five non-spatial attributes. Each non-spatial attribute is of type float and its domain is {0.0, 0.1, . . . , 0.9, 1.0, . . . , 9.0, . . . , 9.9}. Since each domain contains 100 distinct values, we use byte type IDs in the hybrid storage implementation. Synthetic datasets with both independent and anti-correlated distributed attributes are used.</p><p>For the reasons stated in Section 4.1, we only compare the hybrid storage (HS) scheme that we propose with the flat storage (FS) scheme in terms of skyline query processing time. For either scheme, we assume that no extra index is used. For the HS scheme, we use the algorithm we propose to process the local skyline query. For the FS scheme, we use the simple BNL algorithm since no multi-dimensional index or sort order is assumed to be available on a mobile device.</p><p>Figure <ref type="figure" target="#fig_6">5</ref> shows the query processing time for each scheme, where IN and AC represents the independent and anti-correlated dataset, respectively. It is not surprising that query processing needs less time on HS than on FS. This is because in HS, most comparisons are between simple IDs of type byte, whereas in FS, all comparisons are between float raw values which consume more time. In addition, HS keeps the domains and the first attribute sorted, which is also helpful in speeding up skyline computation. In  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Performance in Simulated MANETs</head><p>In this set of experiments, we test our proposed methods in a MANET environment simulated using JiST-SWANS <ref type="bibr" target="#b0">[1]</ref>, a Java-based wireless ad hoc network simulator. We consider three main performance aspects: (1) the data reduction efficiency of the distributed query processing; (2) the overall response time; and 3) the numbers of messages used to forward a query between mobile devices. The simulation experiments have been conducted on a Pentium IV desktop PC running MS Windows XP with a 2.99GHz CPU and 1GB main memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Experiment Settings</head><p>We use global relations of 100K to 1M. In each global relation, all tuples are distributed randomly within a 1000 × 1000 spatial domain. Based on a uniform grid on the spatial domain, a global relation R is divided into local relations (the R i s), each containing all the tuples within its corresponding grid cell.</p><p>We use total numbers of mobile devices (m) equal to the squares of the numbers 3 to 10, i.e., {9, 16, 25, 36, 49, 64, 81, 100}, with each device containing the data of a grid cell. The number of non-spatial attributes is varied from 2 to 5. All non-spatial attributes are of integer type in the range <ref type="bibr" target="#b0">[1,</ref><ref type="bibr">1000]</ref>, and they conform to either independent or anti-correlated distributions. The total number of mobile devices indicates that we test our methods in environments of small-scale and moderate-scale MANETs, according to a recent classification <ref type="bibr" target="#b17">[18]</ref>. All devices move within the spatial domain according to the random waypoint mobility model <ref type="bibr" target="#b9">[10]</ref>. In that model, every device moves towards its own destination with its own speed, and when it reaches that destination it will stop there for a period of time (holding time) and then move to another destination with a new random speed. The mobility and wireless settings used are listed in Table <ref type="table" target="#tab_8">7</ref>  For query forwarding, we compared two different strategies. The first is a breadth-first strategy, where initially the query originator sends its query to all its neighbors. Each neighbor processes the query locally, sends the result back to the originator and then forwards the query to its own neighbors. The same procedure is repeated on every mobile device involved. The second is a depth-first strategy, where a query is forwarded to only one neighbor to which the query has not been sent. The query result will only be returned when no further neighbor is available or all neighbors have processed it. Then the result will be forwarded back along the reversed path. Each mobile device (including the originator) on the path merges the result with its own result and then either sends the result back or sends the query to another available neighbor.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Data Reduction Efficiency</head><p>We proceed to study the efficiency of the distributed processing strategies in terms of their data reduction rate. The data reduction rate DRR is the proportion of tuples reduced by the filtering tuple to the number of tuples in the unreduced skyline. To be specific, recall from Section 3 that, for each mobile device M i (except the query originator M org ), the unreduced skyline is SK i and the reduced skyline is SK i . The data reduction rate with respect to the whole system is then defined as:</p><formula xml:id="formula_8">DRR = m i=1,i =org (|SK i | -|SK i | -1) m i=1,i =org |SK i |<label>(1)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. Pre-Tests in Static Setting</head><p>Before conducting the simulation, we test the different filtering tuple selections in a static setting where no devices move and queries are forwarded recursively from the originator to the outer neighbors in the grid. We also ignore the distance constraint and use every device M i as the query originator once. The final result is the average of a total of m × m queries for each single experiment.</p><p>The experimental results on independent global relations are shown in Figure <ref type="figure" target="#fig_7">6</ref>. The results show that different estimations of the dominating region (OVE for over-estimation, EXT for exact computation, and UNE for under-estimation) barely affect the filtering efficiency for uniform global relations. This justifies the use of estimation in a mobile device that does not require knowledge about the global bounds of each attribute.</p><p>In the experiment covered in Figure <ref type="figure" target="#fig_7">6</ref>(a), all global relations have two non-spatial attributes and are partitioned among 5 × 5 mobile devices. For the strategy using a single filtering tuple (SF), the data reduction rate grows slowly as the global cardinality increases. A fixed-size data space D becomes increasingly dense as more tuples are added, and tuple tp flt is likely to dominate more tuples. The use of a dynamic filtering tuple (DF) is attractive. The filtering tuple is dynamically changed based on its pruning capacity such that a tuple with higher pruning potential (if one exists) is picked for further processing. This dynamic adjustment also renders DF less stable.</p><p>In the experiment covered by Figure <ref type="figure" target="#fig_7">6</ref>(b), all global relations have 500K tuples and are partitioned among 5 × 5 mobile devices. For both filtering strategies, the data reduction rate decreases as the attribute dimensionality increases. In contrast to Figure <ref type="figure" target="#fig_7">6</ref>(a), the fixed-cardinality data space D becomes sparser as the dimensionality increases, meaning that a given tuple tp flt is likely to dominate fewer tuples. In the experiment reported upon in Figure <ref type="figure" target="#fig_7">6</ref>(c), all global relations have 500K tuples with two non-spatial attributes. For the SF strategy, the data reduction rate decreases slightly as the number of mobile devices increases. As the global relation is partitioned among more mobile devices, the denominator m i=1,i =org |SK i | in Formula 1 possibly increases while the single filtering tuple strategy cannot prune additional tuples, which leads to a smaller DRR value. The pruning capacity of the dynamic strategy is not affected, as the filtering tuple is dynamically changed according to the local skyline on every mobile device.</p><p>The experimental results on anti-correlated global relations are shown in Figure <ref type="figure" target="#fig_8">7</ref>. For this data, we can see that for the SF strategy, over-estimation of the dominating region exhibits the best filtering efficiency in almost all cases. Also, for every single experiment, the filtering efficiency is lower when compared to that of its counterpart for independent global relations. This is not surprising because filtering tuples are chosen based on the assumption of an independent distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. Tests in MANET Simulation</head><p>The pre-tests in the static setting suggest that the use of estimated versus exact selections leads only to slight differences, especially for uniform datasets. It is also seen that dynamic filtering of tuples yields better DRRs. Thus, we use only under-estimation of dominating regions when selecting filtering tuples in the simulation, and dynamically update them between mobile devices, if possible. The same series of datasets are used in the simulation as in the pretests. The DRR results are shown in Figures <ref type="figure">8</ref> and<ref type="figure">9</ref>, where DF (BF) is for the depth-first (breadth-first) query forwarding strategy and the integers are the distances of interest in queries.</p><p>For both distributions, DRRs are lower compared to those in the static setting. The is attributed to the MANET setting, where not all devices always participate in the query processing, thus decreasing the data reduction. The mobile characteristic also makes the DRR changes for increasing global cardinalities less stable. This is because the part(s) of the global relation that do not participate in the query processing vary. The DRR change in terms of attribute dimensionality is still pronounced, which indicates that dimensionality still plays an important role in the query processing performance in MANETs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Response Time</head><p>For the BF strategy, the response time is defined as the elapsed time from the moment that a query is issued at a mobile device M org to the moment that 80% of the other devices in the network have sent back results, since in a wireless ad hoc network, it is not ensured that all devices are always reachable and available. For the DF strategy, the response time is defined a bit differently. Here, a query ends when the originator receives the result and finds that all its neighbors have processed the query. The simulation results are shown in Figures <ref type="figure">10</ref> and<ref type="figure">11</ref>, covering independent and anti-correlated datasets, respectively. The response time consists of both the wireless transfer time and the local processing time on each device. Based on the results from Section 5.1, we estimated the local processing costs in the simulation and added them to the communication delays gained in the MANET simulator to obtain the total response time.</p><p>From the figures, we see that BF exhibits shorter response times than does DF. The most important explanation is that the BF query forwarding strategy enables parallel query processing among the mobile devices, while the DF strategy only allows each query to be processed serially along all devices involved. Another reason that leads to a marginal difference is that we only count 80% results back in computing the response time for BF, whereas DF needs to wait longer before a query stops. DF deteriorates much more quickly than does BF when the dimensionality increases, as shown in Figures <ref type="figure">10(b</ref>) and 11(b). Local skyline processing over multi-dimensional datasets is time consuming on resource-constrained mobile devices. BF offsets that effect through parallelism; in contrast, DF is only hurt by that effect because of serialization.</p><p>BF improves as the number of mobile devices increases, as shown in Figures <ref type="figure">10(c</ref>) and 11(c). This is because more devices increases the degree of parallelism of BF. The distance constraints make a more obvious difference to DF than to BF. This is also attributed to DF's serialization, which is more sensitive than parallelism to distance constraints, as larger search ranges usually involves more devices and data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4">Query Message Count</head><p>In the simulation we found that the cardinality, the dimensionality, and the distribution have little impact on the message count. Therefore, we only show in Figure <ref type="figure" target="#fig_11">12</ref> how the message count varies as the number of mobile devices increases. Although BF shows better performance than does DF in terms of response time, this gain is not for free. Parallelism generates and forwards more messages in the wireless network, which in turn consumes more wireless communication bandwidth. As a result of this effect, the im- </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Related Work</head><p>One area with related work is that of skyline querying. Borzonyi et al. <ref type="bibr" target="#b8">[9]</ref> introduce the skyline operator into database systems with algorithms Block Nested Loop (BNL) and Divide-and-Conquer (D&amp;C). Chomicki et al. <ref type="bibr" target="#b11">[12]</ref> propose a Sort-Filter-Skyline (SFS) algorithm as a variant of BNL. Tan et al. <ref type="bibr" target="#b20">[21]</ref> propose two progressive algorithms: Bitmap and Index. The former represents points in bit vectors and employs bit-wise operations, while the latter utilizes data transformation and B + -tree indexing. Kossmann et al. <ref type="bibr" target="#b14">[15]</ref> propose a Nearest Neighbor (NN) method. It identifies skyline points by recursively invoking R * -tree based depth-first NN search over different data portions. Papadias et al. <ref type="bibr" target="#b18">[19]</ref> propose a Branch-and-Bound Skyline (BBS) method based on the best-first nearest neighbor algorithm <ref type="bibr" target="#b12">[13]</ref>. All work above assume centralized data storage. In contrast, we assume that data is distributed horizontally among multiple mobile devices. This also differs from <ref type="bibr" target="#b5">[6]</ref> where different dimensions are stored at different web sites.</p><p>Another area with related work concerns mobile P2P, where P2P and MANETs are combined into a new and interesting area. Kortuem et al. <ref type="bibr" target="#b13">[14]</ref> described scenarios where mobile devices can exchange data when they encounter each other. Budiarto et al. <ref type="bibr" target="#b10">[11]</ref> mainly discuss strategies for data replication in a mobile P2P environment. Xu et al. <ref type="bibr" target="#b22">[23]</ref> cover systemic topics on data management in mobile P2P networks. The same ideas have been applied to disseminate spatio-temporal resource information in mobile P2P networks <ref type="bibr" target="#b21">[22]</ref>. Lindemann et al. <ref type="bibr" target="#b15">[16]</ref> propose a distributed document search service for applications in mobile ad hoc networks. With controlled message forwarding and local caching, their method avoids flooding messages throughout the network. For a quality presentation of the state of the art on mobile ad hoc networking, readers are referred to a recent book <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusion and Future Work</head><p>Assuming a setting with mobile devices communicating via an ad hoc network, this paper studies skyline queries that involve spatial constraints. Each mobile device contains some portion of the data against which the queries are issued. To reduce the communication cost, a distributed query processing strategy is proposed that takes advantage of the skyline dominance relationship to eliminate non-qualifying intermediate tuples, thus reducing the amount of data transmitted. On each mobile device involved, the local query processing is optimized using a hybrid storage model for the tuples, which have both spatial and non-spatial attributes. Extensive experimental studies demonstrate the efficiency of the methods, in terms of both communication cost savings and response time.</p><p>One research direction is to generalize the filtering idea, using more than one filtering tuple. Important questions include how many, and which, tuples should be used as filters, to achieve the best data reduction rate. Another direction is to extend the current strategies to retain good performance while incorporating the redistribution of local relations due to device mobility.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>4 Figure 1 .</head><label>41</label><figDesc>Figure 1. Skyline Query on Mobile Devices</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(a) in our discussion.D o m i n a t i n g R e g i o</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>}. Using the VDR definition from above, we have VDR 21 = (200 -60) * (10 -3) = 980, VDR 22 = (200 -80) * (10 -2) = 960, and VDR 23 = (200 -120) * (10 -1) = 720. Because h 21 has the largest</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Local Skyline Query on M i</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Figure 5(b) we show the average costs of both distributions because their costs are very close to each other for each dimensionality.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Local Processing Time</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. Data Reduction Rate on Independent Datasets in a Static Setting</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. Data Reduction Rate on Anti-Correlated Datasets in a Static Setting</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 .Figure 9 .</head><label>89</label><figDesc>Figure 8. Data Reduction Rate on Independent Datasets in MANET Simulation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 10 .Figure 11 .</head><label>1011</label><figDesc>Figure 10. Response Time on Independent Datasets in MANET Simulation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 .</head><label>12</label><figDesc>Figure 12. Query Message Count</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 . Symbols Used in Discussions sends</head><label>1</label><figDesc>M org the result only, not the entire R i . Device M org</figDesc><table><row><cell cols="2">Symbol Description</cell></row><row><cell>m</cell><cell>Total number of mobile devices</cell></row><row><cell>M i</cell><cell>One mobile device</cell></row><row><cell>n</cell><cell>Number of attributes of a tuple</cell></row><row><cell>p i</cell><cell>ith non-spatial attribute of a tuple</cell></row><row><cell>R i</cell><cell>Local relation on M i</cell></row><row><cell>R</cell><cell>Virtual global relation, union of all R i s</cell></row><row><cell>M org</cell><cell>The mobile device originating query Q ds</cell></row><row><cell>Q ds</cell><cell>Distributed mobile skyline query</cell></row><row><cell>pos org</cell><cell>Location of query originator M org</cell></row><row><cell>d</cell><cell>Distance of interest in query Q ds</cell></row><row><cell>SK i</cell><cell>Local skyline on M i w.r.t. Q ds</cell></row><row><cell>SK</cell><cell>Final skyline w.r.t. Q ds</cell></row><row><cell>tp flt</cell><cell>Tuple used for filtering</cell></row><row><cell cols="2">also computes a local skyline for its relation after sending</cell></row><row><cell cols="2">out the query specification. Later, it merges each result it</cell></row><row><cell cols="2">receives with the previous result in an incremental fashion,</cell></row><row><cell cols="2">while also removing the non-qualifying tuples.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Relation R 1</figDesc><table><row><cell cols="3">hotel price rating</cell><cell cols="3">hotel price rating</cell></row><row><cell>h 11</cell><cell>20</cell><cell>7</cell><cell>h 21</cell><cell>60</cell><cell>3</cell></row><row><cell>h 12</cell><cell>40</cell><cell>5</cell><cell>h 22</cell><cell>80</cell><cell>2</cell></row><row><cell>h 13</cell><cell>80</cell><cell>7</cell><cell>h 23</cell><cell>120</cell><cell>1</cell></row><row><cell>h 14</cell><cell>80</cell><cell>4</cell><cell>h 24</cell><cell>140</cell><cell>2</cell></row><row><cell>h 15</cell><cell>100</cell><cell>7</cell><cell>h 25</cell><cell>100</cell><cell>4</cell></row><row><cell>h 16</cell><cell>100</cell><cell>3</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>Relation R 2</figDesc><table /><note><p>wants information on cheap and good hotels. In both relations, each hotel tuple has attributes for the price and the rating based on recommendations. The skyline on M 2 is {h 21 , h 22 , h 23 }, whereas that on M 1 is {h 11 , h 12 , h 14 , h 16 }. If no filtering tuple is used, all four tuples in M 1 's local skyline are transferred to M 2 . To use a filtering tuple, assuming the global upper bounds of price and rating are 200 and 10, respectively. We need to pick a filtering tuple from M 2 's local skyline {h 21 , h 22 , h 23</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 .</head><label>4</label><figDesc><ref type="bibr" target="#b2">3</ref> , and M 4 , whose relations are shown in Tables 2, 4, and 5. Here, M 4 is the query originator and M 3 is Relation R 3</figDesc><table><row><cell cols="3">hotel price rating</cell><cell cols="3">hotel price rating</cell></row><row><cell>h 31</cell><cell>60</cell><cell>3</cell><cell>h 41</cell><cell>80</cell><cell>2</cell></row><row><cell>h 32</cell><cell>80</cell><cell>5</cell><cell>h 42</cell><cell>120</cell><cell>1</cell></row><row><cell>h 33</cell><cell>120</cell><cell>4</cell><cell>h 43</cell><cell>140</cell><cell>2</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 .</head><label>5</label><figDesc>Relation R 4    the intermediate in-between M 4 and M 1 . The local skyline on M 4 is {h 41 , h 42 } and that on M 3 is {h 31 }. Based on the VDR values, h 41 on M 4 is chosen as the filtering tuple and is sent to M 3 . If the filtering tuple is not dynamically adjusted, h 41 will be sent to M 1 as well, where it will eliminate h 16 only. If the filtering tuple is dynamically adjusted, h 31 on M 3 will be used as the new filtering tuple. When h 31 is sent to M 1 , it will eliminate both h 16 and h 14 . This example shows how dynamic updates of the filtering tuple can make a difference.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>.</figDesc><table><row><cell>x x</cell><cell>y y</cell><cell>p 1 p 1</cell><cell>… …</cell><cell>p n p n</cell></row><row><cell>1.331 1.331</cell><cell>103.67 103.67</cell><cell>0 0</cell><cell>… …</cell><cell>2 2</cell></row><row><cell>1.329 1.329</cell><cell>103.59 103.59</cell><cell>1 1</cell><cell>… …</cell><cell>0 0</cell></row><row><cell>1.412 1.412</cell><cell>103.77 103.77</cell><cell>2 2</cell><cell>… …</cell><cell>j j</cell></row><row><cell>… …</cell><cell>… …</cell><cell>… …</cell><cell>… …</cell><cell>… …</cell></row><row><cell>1.429 1.429</cell><cell>103.95 103.95</cell><cell>k k</cell><cell>… …</cell><cell>3 3</cell></row><row><cell cols="2">Real values</cell><cell cols="3">ID values</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>. Every mobile device issues 1 to 5 queries</figDesc><table><row><cell>Parameter</cell><cell>Setting</cell></row><row><cell>Total simulation time</cell><cell>2h</cell></row><row><cell>Speed range</cell><cell>2m/s-10m/s</cell></row><row><cell>Holding time</cell><cell>120s</cell></row><row><cell cols="2">Wireless routing protocol AODV</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 7 . Parameters Used in Simulations at</head><label>7</label><figDesc>random times during the simulation. Queries of different devices can coexist, while a single device does not issue a new query if it has one in progress.</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments This work is supported by the SpADE (A SPatio-temporal Autonomic Database Engine for location-aware services) <ref type="bibr" target="#b1">[2]</ref> project, which studies the provisioning of mobile users with location-based data, e.g., traffic data, maps, and points of interest.</p><p>Christian S. Jensen is also an adjunct professor at Agder University College, Norway.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">/</forename><surname>Jist</surname></persName>
		</author>
		<author>
			<persName><surname>Swans</surname></persName>
		</author>
		<ptr target="http://jist.ece.cornell.edu" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="http://spade.ddns.comp.nus.edu.sg/spade" />
		<title level="m">SpADE</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<ptr target="http://www.superwaba.com" />
		<title level="m">Superwaba</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m">Fusing ad hoc and P2P. Pictures of the Future (Siemens Magazine for Research and Innovation)</title>
		<meeting><address><addrLine>Spring</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Design of a memory resident DBMS</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ammann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Krishnamurthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE COMPCON</title>
		<meeting>IEEE COMPCON</meeting>
		<imprint>
			<date type="published" when="1985">1985</date>
			<biblScope unit="page" from="54" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Efficient distributed skylining for web information systems</title>
		<author>
			<persName><forename type="first">W.-T</forename><surname>Balke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Güntzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">X</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. EDBT</title>
		<meeting>EDBT</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="256" to="273" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Giordano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<title level="m">Mobile Ad Hoc Networking</title>
		<meeting><address><addrLine>New Jersey</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley-IEEE Press</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Pi-coDBMS: Scaling down database techniques for the smartcard</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bobineau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bouganim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pucheral</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Valduriez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The skyline operator</title>
		<author>
			<persName><forename type="first">S</forename><surname>Borzonyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kossmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Stocker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICDE</title>
		<meeting>IEEE ICDE</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="421" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A performance comparison of multi-hop wireless ad hoc network routing protocols</title>
		<author>
			<persName><forename type="first">J</forename><surname>Broch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jetcheva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MOBICOM</title>
		<meeting>MOBICOM</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="85" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Data management issues in mobile and peer-to-peer environments</title>
		<author>
			<persName><forename type="first">S</forename><surname>Budiarto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nishio</surname></persName>
		</author>
		<author>
			<persName><surname>Tsukamoto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Knowl. Eng</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="183" to="204" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Skyline with presorting</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chomicki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Godfrey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gryz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICDE</title>
		<meeting>IEEE ICDE</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="717" to="719" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Distance browsing in spatial database</title>
		<author>
			<persName><forename type="first">G</forename><surname>Hjaltason</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM TODS</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="265" to="318" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">When peer-to-peer comes face-toface: Collaborative peer-to-peer computing in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Kortuem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Preuitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">G C</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fickas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Segall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. P2P</title>
		<meeting>P2P</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="75" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Shooting stars in the sky: An online algorithm for skyline queries</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kossmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ramsak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rost</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="275" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A distributed search service for peer-to-peer file sharing in mobile applications</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lindemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">P</forename><surname>Waldhorst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. P2P</title>
		<meeting>P2P</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">UCAN: a unified cellular and ad-hoc network architecture</title>
		<author>
			<persName><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">E</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MOBICOM</title>
		<meeting>MOBICOM</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="353" to="367" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Mobile Ad Hoc Networking, chapter Mobile Ad Hoc Networks (MANETs): Routing Technology for Dynamic, Wireless Networking</title>
		<author>
			<persName><forename type="first">J</forename><surname>Macker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Corson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Wiley-IEEE Press</publisher>
			<pubPlace>New Jersey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">An optimal and progressive algorithm for skyline queries</title>
		<author>
			<persName><forename type="first">D</forename><surname>Papadias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Seeger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIG-MOD</title>
		<meeting>ACM SIG-MOD</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="467" to="478" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Efficient data management on lightweight computing device</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ramamritham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICDE</title>
		<meeting>IEEE ICDE</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="419" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Efficient progressive skyline computation</title>
		<author>
			<persName><forename type="first">K</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Eng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ooi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB</title>
		<meeting>VLDB</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="301" to="310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Opportunistic dissemination of spatio-temporal resource information in mobile peer-to-peer networks</title>
		<author>
			<persName><forename type="first">O</forename><surname>Wolfson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. PDMST</title>
		<meeting>PDMST</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="954" to="958" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Data management in mobile peer-topeer networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Wolfson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. DBISP2P</title>
		<meeting>DBISP2P</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="1" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Distributed query processing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Surveys</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="399" to="433" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
