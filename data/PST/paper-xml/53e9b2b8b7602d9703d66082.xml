<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Enhancing the performance of cuckoo search algorithm using orthogonal learning method</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Xiangtao</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jianan</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Minghao</forename><surname>Yin</surname></persName>
							<email>minghao.yin1@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Á</forename><forename type="middle">J</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Á</forename><forename type="middle">M</forename><surname>Yin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Neural</forename><surname>Comput</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><surname>Applic</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="institution">Northeast Normal University</orgName>
								<address>
									<postCode>130117</postCode>
									<settlement>Changchun</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Enhancing the performance of cuckoo search algorithm using orthogonal learning method</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A4A482AD15628AD44E452E8A11D6ECA3</idno>
					<idno type="DOI">10.1007/s00521-013-1354-6</idno>
					<note type="submission">Received: 20 September 2012 / Accepted: 29 January 2013 Ó Springer-Verlag London 2013</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Cuckoo search algorithm</term>
					<term>Global numerical optimization</term>
					<term>Orthogonal learning strategy</term>
					<term>Exploration</term>
					<term>Exploitation</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The cuckoo search algorithm is a simple and effective global optimization algorithm. It has been successfully applied to solve a wide range of real-world optimization problem. In this paper, we use a new search strategy based on orthogonal learning strategy to enhance the exploitation ability of the basic cuckoo search algorithm. In order to verify the performance of our approach, 23 benchmark functions are employed. Experimental results indicate that the proposed algorithm performs better than or at least comparable to state-of-the-art approaches from literature when considering the quality of the solution obtained.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Optimization problems play an important role in both industrial application fields and the scientific research world. During the past decade, we have viewed different kinds of meta-heuristic algorithms advanced to handle optimization problems. Among them, Meta-heuristic-based methods, such as genetic algorithm (GA), particle swarm optimization algorithm (PSO),estimation of distribution algorithms (EDA), ant colony optimization (ACO),simulated annealing (SA), and biogeography-based optimization (BBO), differential evolution, artificial bee colony, and cuckoo search algorithm <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref><ref type="bibr" target="#b8">[9]</ref> may be one of the most popular methods.</p><p>Among them, cuckoo search algorithm <ref type="bibr" target="#b8">[9]</ref>, CS for short, is a population-based heuristic evolutionary algorithm inspired by the interesting breeding behavior such as brood parasitism of certain species of cuckoos. In CS, each cuckoo lies on egg at a time and dumps its egg in randomly chosen nest. The best nests with high quality of eggs will carry over to the next generation. The number of available host nests is fixed, and the egg laid by a cuckoo is discovered by the host bird with a probability. In this case, the host bird can either abandon the egg away or throw the nest and build a completely new nest. In order to accelerate the convergence speed and avoid the local optima, several variations of CS have been proposed to enhance the performance of the standard CS recently. Moreover, CS has been proved to be really efficient when solving real-world problems. Yang <ref type="bibr" target="#b9">[10]</ref> proposes a new meta-heuristic optimization to solve engineering design optimization problems, including the design of springs and welded beam structures. Walton <ref type="bibr" target="#b10">[11]</ref> proposes modified cuckoo search which can be regarded as a modification of the recently developed cuckoo search is presented. The modification involves the addition of information between the top eggs or the best solutions. Gandomi et al. <ref type="bibr" target="#b11">[12]</ref> proposes the CS for solving structural optimization problems which is subsequently applied to 13 design problems reported in the specialized literature. The performance of the CS algorithm is further compared with various algorithms representative of the state-of-the-art in the area. The optimal solutions obtained by CS are better than the best solutions obtained by the existing methods. Layeb <ref type="bibr" target="#b12">[13]</ref> proposes a new inspired algorithm called quantum-inspired cuckoo search algorithm, which a new framework is relying on quantum computing principles and cuckoo search algorithm. The contribution consists in defining an appropriate representation scheme in the cuckoo search algorithm that allows applying successfully on combinatorial optimization problems some quantum computing principles like q-bit representation, superposition of states, measurement, and interference. Tuba et al. <ref type="bibr" target="#b13">[14]</ref> implement a modified version of this algorithm where the step size is determined from the sorted rather than only permuted fitness matrix. The modified algorithm is tested on eight standard benchmark functions. Comparison of the pure cuckoo search algorithm and this modified one is presented, and it shows improved results by the modification. Noghrehabadi et al. <ref type="bibr" target="#b15">[16]</ref> proposes a hybrid Power series and Cuckoo Search via Le ´vy Flights optimization algorithm (PS-CS) method is applied to solve a system of nonlinear differential equations arising from the distributed parameter model of a micro fixed-fixed switch subject to electrostatic force and fringing filed effect. The obtained results are compared with numerical results and found in good agreement. Furthermore, the present method can be easily extended to solve a wide range of boundary value problems. The detail of the cuckoo search algorithm can be found in the http://en.wikipedia.org/wiki/Cuckoo_ search. These methods seem to be difficult to simultaneously achieve the balance between exploration and exploitation of the CS. Therefore, a large number of future researches are necessary in order to develop new cuckoo search algorithm for optimization problems.</p><p>To achieve both of the goals, we proposed a rand individual based on the orthogonal design as the local search algorithm to enhance the exploitation of the new CS. The orthogonal learning strategy acts on two individuals. One of the two individual is a rand individual of CS. The other individual will be produced as a new rule in Sect. 3.2. This method can add more variation to the search space that can balance the exploration and exploitation of the CS. Experiments have been conducted on 23 benchmark functions chosen from previous literatures. Experimental results indicate that our approach is effective and efficient. Compared with other state-of-the-art approach, OLCS performs better, or at least comparably, in terms of the quality of the final solutions and the convergence rate.</p><p>The rest of this paper is organized as follows: In Sect. 2, we will review the basic CS. The orthogonal learning strategy is presented in Sect. 3, respectively. Benchmark problems and corresponding experimental results are given in Sect. 4. In the last section, we conclude this paper and point out some future research directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Cuckoo search algorithm</head><p>Cuckoo search algorithm (CS for short) is an evolutionary algorithm first introduced by Yang and Deb in <ref type="bibr" target="#b8">[9]</ref><ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref><ref type="bibr" target="#b14">[15]</ref>, inspired by the obligate brood parasitism of some cuckoo species by laying their eggs in the nests of other host birds. During the search process, there are mainly three principle rules. The first rule is that for each time, each cuckoo can only lay one egg (solution), which will be dumped in a randomly chosen nest. The second rule is that the best nests with better eggs will be retained to the next generation. The third rule is that during the whole search process, the number of available host nests is a constant number, and the host bird will find the egg laid by a cuckoo with a probability. When it happens, the laid egg will be thrown away or the host bird will abandon the nest to build a new nest. The code was based on http://www.mathworks.com/matlabcentral/ fileexchange/29809-cuckoo-search-cs-algorithm. Based on these rules, the standard cuckoo search algorithm is described as follows:</p><p>In cuckoo search, each egg can be regarded as a solution. In the initial process, each solution is generated randomly. When generating ith solution in t ? 1 generation, denoted by x tþ1 i , a le ´vy flight is performed as follows:</p><formula xml:id="formula_0">x tþ1 i ¼ x t i þ a È Le 0 vyðkÞ ð<label>1Þ</label></formula><p>where a [ 0 is real number denoting the step size, which is related to the sizes of the problem of interest, and the product È denotes entry-wise multiplications. A Le ´vy flight is a random walk where the step lengths are distributed according to a heavy-tailed probability distribution in the following form</p><formula xml:id="formula_1">Le 0 vy $ u ¼ t Àk ; ð1 ( 3Þ ð<label>2Þ</label></formula><p>which has an infinite variance with an infinite mean. Accordingly, the consecutive jumps of a cuckoo form a random walk process obeying a power law step length distribution with a heavy tail. In this way, the process of generating new solutions can be viewed as a stochastic equation for random walk which also forms a Markov chain whose next location only depends on the current location and the transition probability.</p><p>The evolution phase of the x i t begins by the donor vector t, where t = x i t . After this step, the required step size value has been computed by using the Eq. ( <ref type="formula" target="#formula_2">3</ref>)</p><formula xml:id="formula_2">Stepsize j ¼ 0:01 Á u j v j 1=k Á t À X best ð Þ ð<label>3Þ</label></formula><p>where u ¼ t Àk Â rand n½D and v ¼ rand n½D. The rand n½D function generates a Gaussian distribution between <ref type="bibr">[1, D]</ref>. Then, the donor vector t is generated randomly by using the Eq. ( <ref type="formula" target="#formula_3">4</ref>)</p><formula xml:id="formula_3">t ¼ t þ Stepsize Ã j rand n½D ð<label>4Þ</label></formula><p>After producing the new solution t i , it will be evaluated and compared to the x i . If the objective fitness of t i is smaller than the fitness of x i , then t i is accepted as a new basic solution. Otherwise, x i would be obtained.</p><p>The other part of cuckoo search is to place some nests by construct a new solution. This crossover operator is shown as follows:</p><formula xml:id="formula_4">t i ¼ X i þ rand Á ðX r1 À X r2 Þ rand i \p o X i otherwise &amp;<label>ð5Þ</label></formula><p>After producing the new solution t i , it will be evaluated and compared to the x i . If the objective fitness of t i is smaller than the fitness of x i , then t i is accepted as a new basic solution. Otherwise, x i would be obtained. Note that in the real world, a cuckoo's egg is more difficult to be found when it is more similar to a host's eggs. So the fitness is related to the difference and that is the main reason to use a random walk in a biased way with some random step sizes.</p><p>3 Our approach: OLCS Inspired by the ideas from the orthogonal design method successfully in EAs <ref type="bibr" target="#b15">[16]</ref><ref type="bibr" target="#b16">[17]</ref><ref type="bibr" target="#b17">[18]</ref><ref type="bibr" target="#b18">[19]</ref><ref type="bibr" target="#b19">[20]</ref>, in this section, we propose an improved version of CS algorithm to solve global optimization problem, which integrates orthogonal learning strategy in CS algorithm. The proposed CS algorithm is named OLCS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Orthogonal design</head><p>Orthogonal design <ref type="bibr" target="#b15">[16]</ref> is used to produce all possible combinations of levels for a complete factorial experiment. The basic idea of orthogonal design is to utilize the properties of the fractional experiment for the efficient determination of the best combination of levels. Consider a system whose cost dependents on K factors, each factor can take one of Q levels. To find the best level for each factor, experiment for the every combination of factor levels can be done. Then, we can choose the best one if K and Q are small. The number of all the combination is Q k . Therefore, it is not efficient to test all the combination of factor level when K and Q are large. The orthogonal design is one of very popular experiment design tools. It provides a series of orthogonal arrays for accommodating different numbers of factors and different levels. Constructing the orthogonal array is showed below. The algorithm constructs the basic columns and then constructs the non-basic columns.</p><p>For example, an orthogonal array L 9 (3 4 ) is depicted as follows: </p><formula xml:id="formula_5">L 9 3 4 À Á ¼ 1 1 1 1 1 2 2 2 1 3 3 3 2 1 2 3 2 2 3 1 2 3 1 2 3 1 3 2 3 2 1 3<label>3</label></formula><p>In L 9 (3 4 ), there are four factors, three levels per factor, and nine combination levels. In the first row, the four factors have levels 1, 1, 1, 1; in the second row, the four factors have levels 1, 2, 2, 2, etc. In this example, there are 81 combinations to be tested. However, the orthogonal array L 9 (3 4 ) is applied to selected nine combinations to be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Orthogonal learning (OL) strategy</head><p>Using the orthogonal array design, the original CS can be modified as an OLCS with an OL strategy to update the new search mechanism. In order to balance the exploration and exploitation of the new CS, we produce a rand individual based on the orthogonal design <ref type="bibr" target="#b15">[16]</ref> as the local search algorithm to enhance the exploitation of the new CS. The orthogonal learning strategy acts on two individuals. One of the two individual is an individual of CS. The other individual will be produced as Eq. ( <ref type="formula" target="#formula_7">7</ref>). This method can add more variation to the search and reduce the number of control parameters.</p><formula xml:id="formula_7">v i ¼ x a þ rand Ã ðx b À x c Þ ð<label>7Þ</label></formula><p>where i 2 f1; 2; . . .; NPg; a; b; c 2 f1; 2; . . .; NPg are randomly chosen indexes. It quantizes the solution space defined by these parents into a finite number of points, and then applies best orthogonal learning strategy to select the smaller individual as the new solution in current form. The brief description of the operator is shown as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Boundary constraints</head><p>The OLCS algorithm assumes that the whole population should be in an isolated and finite space. During the searching process, if there are some individuals that will move out of bounds of the space, the original algorithm stops them on the boundary. In other words, the nest will be assigned a boundary value. The disadvantage is that if there are too many individuals on the boundary, and especially when there exists some local minimum on the boundary, the algorithm will lose its population diversity to some extent. In order to tackle this problem, we proposed the following repair rule:</p><formula xml:id="formula_8">x i ¼ l i þ modððl i À x i Þ; ðu i À l i ÞÞ u i À modððx i À u i Þ; ðu i À l i ÞÞ (<label>ð8Þ</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Proposed orthogonal learning cuckoo search algorithm (OLCS)</head><p>In this section, we introduce the new proposed orthogonal learning cuckoo search algorithm to balance the exploitation and exploration. In our paper, we use a new search strategy based on orthogonal learning strategy to enhance the exploitation ability of the basic cuckoo search algorithm. In addition, The OLCS has a very simple structure and thus is easy to implement. Moreover, this algorithm can combine the stochastic exploration of the CS and the exploitation capability of orthogonal learning strategy. This method can overcome the lack of the exploration of the CS algorithm. The algorithm can be described as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experimental results</head><p>To evaluate the performance of our algorithm, we applied it to 23 standards benchmark functions. These functions have been widely used in the literature. Since we do no make any modification of these functions, they are given in Table <ref type="table" target="#tab_1">1</ref>. The five seven functions are unimodal functions. Function f06 is the step function which has one minimum and is discontinuous. Function f07 is a noisy quadratic function. The following seven functions are multimodal test functions. For these functions, the number of local minima increases exotically with the problem dimension. Then, ten multimodal functions with fix dimension which have only a few local search minima are used in our experimental study. Table <ref type="table" target="#tab_1">1</ref> shows the details of these functions. So far, these problems have been widely used as benchmarks for research with different methods by many researchers.</p><p>The algorithm is coded in MATLAB 7.0, and experiments are made on a Pentium 3.0 GHz Processor with 1.0 GB of memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Experimental setup</head><p>In order to evaluate the effectiveness and efficiency of OLCS, we have chosen a suitable set of value and have not made any effort in finding the best parameter settings. In this experiment, we set the number of individuals to be 25. The value to reach (VTR) is 10 -8 for f01-f13, and then, the valued to reach is 10 -5 for f14-f23. The maximum number of fitness function evaluations: 150000 for f1, f6, f10, f12, and f13; 200000 for f2 and f11; 900000 for f8; 300000 for f7, f9; 400000 for f15; 500000 for f3, f4, f5; 10000 for f14, f16-f19, f21, f22, f23. For all test functions, the algorithms carry out 50 independent runs. For all test functions, the algorithms carry out 50 independent runs. Three performance criteria are chosen from the literature to evaluate the performance of the algorithms. These criteria are described as follows.</p><p>Error The error of a solution X is defined as f(X)f(X * ), where the X is the best solution found by the algorithm in a run, and X* is the global optimum of the test </p><formula xml:id="formula_9">f 02 ¼ P n i¼1 x i j j þ Q n i¼1 x i j j 30 [-10,10] 0 f 03 ¼ P n i¼1 P i j¼1 x j 2 30 [-100,100] 0 f 04 ¼ max i x i j j; 1 i D f g 30 [-100,100] 0 f 05 ¼ P DÀ1 i¼1 100ðx iþ1 À x 2 i Þ 2 þ ðx i À 1Þ 2 h i 30 [-30,30] 0 f 06 ¼ P D i¼1 ½x i þ 0:5 ð Þ 2 30 [-100,100] 0 f 07 ¼ P D i¼1 ix 4 i þ random½0; 1Þ 30 [-1.28,1.28] 0 f 08 ¼ P D i¼1 Àx i sinð ffiffiffiffiffiffi x i j j p Þ 30 [-500,500] -418.9829 *n f 09 ¼ P D i¼1 ½x 2 i À 10 cosð2px i Þ þ 10 30 [-5</formula><p>.12,5.12] 0</p><formula xml:id="formula_10">f 10 ¼ À20 expðÀ0:2 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi 1 D P D i¼1 x 2 i q Þ À exp 1 D P D i¼1 cos 2px i À Á þ 20 þ e 30 [-32,32] 0 f 11 ¼ 1 400 P D i¼1 x 2 i À Q D i¼1 cos xi ffi i p þ 1 30 [-600,600] 0 f 12 ¼ p D f10 sin 2 ðpy i Þ þ X DÀ1 i¼1 ðy i À 1Þ 2 ½1 þ 10 sin 2 ðpy i þ 1Þ þ ðyD À 1Þ 2 þ X D</formula><p>i¼1 uðx i ; 10; 100; 4Þg</p><formula xml:id="formula_11">y i ¼ 1 þ xiþ1 4 uðx i ; a; k; mÞ ¼ kðx i À aÞ m 0 kðÀx i À aÞ m x i [ a Àa\x i \a x i \ À a 8 &lt; : 30 [-50,50] 0 f 13 ¼ 0:1f10 sin 2 ðpy i Þ þ P DÀ1 i¼1 ðy i À 1Þ 2 ½1 þ 10 sin 2 ðpy i þ 1Þ þ ðyD À 1Þ 2 g þ P D</formula><p>i¼1 uðx i ; 10; 100; 4Þ 30 [-50,50] 0</p><formula xml:id="formula_12">f 14 ¼ 1 500 þ P 25 j¼1 1 jþ P 2 i¼1 ðxiÀaijÞ 6 ! À1</formula><p>2 [-65.53,65.53] 0.998004</p><formula xml:id="formula_13">f 15 ¼ P 11 i¼1 ½a i À x1ðb 2 i þbixiÞ b 2 i þb1x3þx4 2 4 [-5,5]</formula><p>0.0003075</p><formula xml:id="formula_14">f 16 ¼ 4x 2 1 À 2:1x 4 i þ 1 3 x 6 1 þ x 1 x 2 À 4x 2 2 þ 4x 4 2 2 [-5,5] -1.0316285 f 17 ¼ x 2 À 5:1 4p 2 x 2 1 þ 5 p x 1 À 6 À Á 2 þ10 1 À 1 8p À Á cos x 1 þ 10 2 [-5,10]*[0,15] 0.398 f 18 ¼ 1 þ ðx 1 þ x 2 þ 1Þ 2 ð19 À 14x 1 þ 3x 2 1 À 14x 2 þ 6x 1 x 2 þ 3x 2 2 Þ h i Â ½30 þ ð2x 1 À 3x 2 Þ 2 ð18 À 32x 1 þ 12x 2 1 þ 48x 2 À 36x 1 x 2 þ 27x 2 2 Þ 2 [-5,5]<label>3</label></formula><formula xml:id="formula_15">f 19 ¼ À P 4 i¼1 c i exp À P 3 j¼1 a ij ðx j À p ij Þ 2 3 [0,1] -3.86 f 20 ¼ À P 4 i¼1 c i exp À P 6 j¼1 a ij ðx j À p ij Þ 2 6 [0,1] -3.32 f 21 ¼ À P 5 i¼1 ðX À a i ÞðX À a i Þ T þ c i Â Ã À1 4 [0,10] -10.1532 f 22 ¼ À P 7 i¼1 ½ðX À a i ÞðX À a i Þ T þ c i À1 4 [0,10] -10</formula><p>.4029</p><formula xml:id="formula_16">f 23 ¼ À P 10 i¼1 ½ðX À a i ÞðX À a i Þ T þ c i À1 4 [0,10] -10.5364</formula><p>Neural Comput &amp; Applic function. The minimum error is found when the Max_NFFEs is reach in 50 runs, and then, the average error and the standard deviation of the error value are calculated.</p><p>NFFEs The number of fitness function evaluations (NFFEs) is also recorded when the VTR is reached. The average and standard deviation of the NFFEs values are calculated.</p><p>SR A run is considered to be successful if at least one solution was discovered during the course whose fitness value is not worse than the VTR before the max_NFFEs condition terminates the trial.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Comparison of OLCS, CS</head><p>In order to examine our proposed OLCS approach to optimization problem with high dimension and fix low dimension, we compare it with the CS algorithm. In the experiment, the mean results of 50 independent runs are summarized in Table <ref type="table" target="#tab_2">2</ref>. Compared with the CS algorithm, from the Table <ref type="table" target="#tab_2">2</ref>, we can see that the OLCS is significantly better than CS on all functions. For the multimodal function with many local minimum, that is, f08-f13, it is clear that the best results are obtained by OLCS. OLCS can obtain the VTR = 10 -8 for f01-f04, f06, f09-f13, over all 50 runs within the Max_NFFEs. The OLCS can find better solutions than CS algorithm within the Max_NFFEs. This result illustrates the algorithm has better ability to escape from poor local optima and locate a good near-global optimum. From Table <ref type="table" target="#tab_3">3</ref>, we can find that OLCS requires less NFFEs to reach the VTR than CS on 15 functions. The other functions cannot reach the VTR within the Max_NFFEs.</p><p>In general, the performance of OLCS is highly competitive with CS, especially for the high-dimensional problems. For the other ten fix low-dimensional functions, all algorithms have no significant difference; we will not use these functions in the following experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Sensitivities to population size</head><p>Performance of OLCS is always sensitive to the selected population size. If the population is too small, the diversity of possible movements is poor and, then, the algorithm may be easily trapped in a local optimum. On the other To investigate the sensitivity of the proposed algorithm to variations of population size, some experiments are repeated for NP = 50, NP = 75, and NP = 100. The experimental results are given in Table <ref type="table">4</ref> for CS and OLCS at dimension D = 30. For NP = 50, the performance of OLCS is significantly superior to that of CS for all functions according to the experimental results shown in Table <ref type="table">4</ref>. For f06, f09, f10, and f11, OLCS can locate the near-global optimum over all 50 runs. For NP = 75 and NP = 100, OLCS is able to obtain significantly better performance than CS on 12 functions except f08.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Influence of problem dimensionality</head><p>In order to study the effect of problem dimension on the performance of OLCS, we carried out a scalability study comparing with the original CS algorithm. The functions were studied at D = 10, D = 50, D = 100, and D = 200. The results are listed in Table <ref type="table">5</ref> after D*10000 NFFEs. From the Table <ref type="table">5</ref>, it is interesting to note that OLCS outperforms CS on eleven out of thirteen when D = 10. For f08, the CS algorithm can provide better solution than the OLCS algorithm. For the other functions, OLCS and CS can all find the optimal solution. For D = 50, The OLCS also can obtain better solution than the CS algorithm except f08. For D = 100, The OLCS also can obtain better solution than the CS algorithm except f08. For D = 200, The OLCS also can obtain better solution than the CS algorithm for all functions. From the above comparisons, it can be noticed that OLCS is highly competitive with CS for the test functions. Note that the CS algorithm can find the optimal solution while D = 100 and D = 200. In particular, OLCS exhibits overall higher convergence speed and better robustness than the two competitors under some condition. We can conclude that the new orthogonal learning strategy can be used to enhance the ability to accelerate CS, especially for the higher dimensionality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Comparison of OLCS and CS algorithm with FEP and CEP algorithms</head><p>In the experiment, we compare the performance of OLCS and CS with FEP and CEP. The average results of 50 independent runs are summarized in Table <ref type="table" target="#tab_5">6</ref>. Result for the FEP and CEP algorithms are taken from <ref type="bibr" target="#b20">[21]</ref>. As can be seen in Table <ref type="table" target="#tab_5">6</ref>, the comparison shows that OLCS gives better results on benchmark function than FEP and CEP except f08. OLCS is able to obtain smaller standard deviations of function values than CEP and CS, OLCS algorithm performs better than CS, while CS does not perform better than FEP and CEP. It means that the solution quality of OLCS is more stable than FEP and CEP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Comparison of OLCS and CS algorithm with adaptive LEP and Best le ´vy algorithm</head><p>In this section, we will compare our algorithm with the Adaptive LEP and Best Le ´vy algorithm <ref type="bibr" target="#b21">[22]</ref>. We set the parameters as in <ref type="bibr" target="#b20">[21]</ref>, the following parameters were used in our paper: population Size = 100, dimension: 30 for f1, f3, f7, f8, f9, f10, f11, f12, f13. 2 for f16, f18. itermax: 1500 for f1, f3, f7, f8, f9, f10, f11, f12, f13, 30 for f16, f18. The experimental results are listed in Table <ref type="table" target="#tab_7">7</ref>, From the Table <ref type="table" target="#tab_7">7</ref>, for the unimodal function f1, f3, f5, the OLCS can gives the better solution than Adaptive LEP and Best Le ´vy algorithm. For multimodal functions f8-f13 with many local minima, the final results are more important because this function can reflect the algorithm's ability to escape form poor local optima and obtain the near-global optimum. The OLCS provided better solutions than other  algorithms except f08. For f08, Best Le ´vy algorithm is better than other algorithms. For f16 and f18, the dimension of the function is very small. Therefore, all the algorithms can find optimal solutions for these two functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7">Comparison of OLCS with CLPSO, CMA-ES, and GL-25</head><p>In order to evaluate the effectiveness and efficiency of OLCS, we compare its performance with CLPSO <ref type="bibr" target="#b23">[23]</ref>, CMA-ES <ref type="bibr" target="#b24">[24]</ref>, and GL-25 <ref type="bibr" target="#b25">[25]</ref>. CMA-ES is better than OLCS on 1 test functions. GL-25 performs better than OLCS on one test functions. CLPSO is better than OLCS on 1 test functions. For unimodal functions, in Function f02 and f06, OLCS provides much better results than other algorithms. For f02-f07, the OLCS algorithm can provide better solution than other algorithms. For f01, CMA-ES can perform better than the other algorithms. For multimodal functions f09-f13 with many local minima, OLCS performs significantly better than other algorithms in exploring and exploiting, and it exactly leads to finding the optimum. For f08, CLPSO can obtain the better solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.8">Comparison of OLCS with DEahcSPX and ODE</head><p>OLCS was compared with two other state-of-the-art DE variants, that is, DEahcSPX <ref type="bibr" target="#b26">[26]</ref>, ODE <ref type="bibr" target="#b16">[17]</ref>. Table <ref type="table" target="#tab_8">9</ref> summarizes the experimental results. For the unimodal function f1-f7, OLCS can obtain the better solutions than other algorithms. For multimodal functions f8-f12 with many local minima, the final results are more important 4.9 Comparison of OLCS with SaDENS, jDE OLCS was compared with three other state-of-the-art DE variants, that is, SaDENS <ref type="bibr" target="#b27">[27]</ref>, jDE <ref type="bibr" target="#b28">[28]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.10">Comparison of OLCS with OXDE</head><p>In this section, OLCS was compared with the OXDE <ref type="bibr" target="#b29">[29]</ref>, because these algorithms are both based on orthogonal design method. Wang proposes an orthogonal crossover operator, which is based on orthogonal design, can make a systematic and rational search in a region defined by the parent solutions. Then the author proposes an approach method using the orthogonal crossover in DE algorithm, namely OXDE. Extensive experiments have been carried out the effective of OXDE. The parameter of OXDE, the population size is NP = D, the scaling factor F = 0.9, and the crossover control parameter CR = 0.9 DE/rand/1/bim, and mutation and binomial crossover are used. The experimental results of 50 independent runs are summarized in Table <ref type="table" target="#tab_1">11</ref>.</p><p>From the Table <ref type="table" target="#tab_1">11</ref>, we can find OLCS is able to find the optimal or near-optimal solution with small deviations for these 12 functions. OLCS can provide the better mean function value than OXDE except f08. These results indicate orthogonal design can effectively improve the performance of the cuckoo search algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>In this paper, we propose a new cuckoo search algorithm (OLCS) based on orthogonal learning method to solve the global optimization problems with continuous variables. In   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>our paper, we use a new search strategy based on orthogonal learning strategy to enhance the exploitation ability of the basic cuckoo search algorithm. In other aspect, our algorithm has a very simple structure and thus is easy to implement. Moreover, this algorithm can combine the stochastic exploration of the cuckoo search algorithm and the exploitation capability of orthogonal learning strategy. To verify the performance of OLCS, 23 benchmark functions chosen from literature are employed. The results show that the proposed OLCS algorithm clearly</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc>Benchmark functions based in our experimental study</figDesc><table><row><cell>Test function</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc>Comparisons of CS, OLCS</figDesc><table><row><cell>F</cell><cell>Max_NFFES</cell><cell>CS</cell><cell></cell><cell></cell><cell>OLCS</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>Mean</cell><cell>SD</cell><cell>SR</cell><cell>Mean</cell><cell>SD</cell><cell>SR</cell></row><row><cell>f01</cell><cell>150000</cell><cell>1.7187e-016</cell><cell>1.9993e-016</cell><cell>50</cell><cell>1.5686e-107</cell><cell>4.5543e-107</cell><cell>50</cell></row><row><cell>f02</cell><cell>200000</cell><cell>9.8216e-012</cell><cell>4.5654e-012</cell><cell>50</cell><cell>1.4474e-088</cell><cell>3.5197e-088</cell><cell>50</cell></row><row><cell>f03</cell><cell>500000</cell><cell>3.1447e-010</cell><cell>2.3251e-010</cell><cell>NA</cell><cell>5.5768e-147</cell><cell>1.4262e-146</cell><cell>50</cell></row><row><cell>f04</cell><cell>500000</cell><cell>2.8952</cell><cell>2.4945</cell><cell>NA</cell><cell>7.3579e-107</cell><cell>1.4853e-106</cell><cell>50</cell></row><row><cell>f05</cell><cell>500000</cell><cell>0.3987</cell><cell>1.2606</cell><cell>NA</cell><cell>1.2240e-007</cell><cell>1.8668e-007</cell><cell>5</cell></row><row><cell>f06</cell><cell>150000</cell><cell>0</cell><cell>0</cell><cell>50</cell><cell>0</cell><cell>0</cell><cell>50</cell></row><row><cell>f07</cell><cell>300000</cell><cell>0.0129</cell><cell>0.0038</cell><cell>NA</cell><cell>5.0749e-005</cell><cell>3.3339e-005</cell><cell>NA</cell></row><row><cell>f08</cell><cell>900000</cell><cell>-1.2451e?004</cell><cell>1.477e?002</cell><cell>NA</cell><cell>-1.2514e?004</cell><cell>75.7934</cell><cell>NA</cell></row><row><cell>f09</cell><cell>300000</cell><cell>16.1867</cell><cell>3.666</cell><cell>NA</cell><cell>0</cell><cell>0</cell><cell>50</cell></row><row><cell>f10</cell><cell>150000</cell><cell>0.0347</cell><cell>0.1091</cell><cell>NA</cell><cell>8.8817e-016</cell><cell>0</cell><cell>50</cell></row><row><cell>f11</cell><cell>200000</cell><cell>0.0024</cell><cell>0.0053</cell><cell>50</cell><cell>0</cell><cell>0</cell><cell>50</cell></row><row><cell>f12</cell><cell>150000</cell><cell>3.6244e-004</cell><cell>7.8063e-004</cell><cell>40</cell><cell>4.7949e-019</cell><cell>7.1024e-019</cell><cell>50</cell></row><row><cell>f13</cell><cell>150000</cell><cell>1.7996e-013</cell><cell>5.0959e-013</cell><cell>50</cell><cell>3.0414e-017</cell><cell>2.89382e-017</cell><cell>50</cell></row><row><cell>f14</cell><cell>10000</cell><cell>0.9980</cell><cell>3.9071e-008</cell><cell>50</cell><cell>0.9980</cell><cell>9.1468e-010</cell><cell>50</cell></row><row><cell>f15</cell><cell>40000</cell><cell>4.4700e-004</cell><cell>9.3876e-005</cell><cell>NA</cell><cell>3.1314e-004</cell><cell>1.5007e-005</cell><cell>NA</cell></row><row><cell>f16</cell><cell>10000</cell><cell>-1.03163</cell><cell>8.3146e-010</cell><cell>50</cell><cell>-1.03163</cell><cell>1.3705e-010</cell><cell>50</cell></row><row><cell>f17</cell><cell>10000</cell><cell>0.3979</cell><cell>3.3851e-007</cell><cell>50</cell><cell>0.3979</cell><cell>4.0992e-008</cell><cell>50</cell></row><row><cell>f18</cell><cell>10000</cell><cell>3</cell><cell>8.1717e-013</cell><cell>50</cell><cell>3</cell><cell>1.8505e-014</cell><cell>50</cell></row><row><cell>f19</cell><cell>10000</cell><cell>-3.8628</cell><cell>8.3671e-009</cell><cell>50</cell><cell>-3.8628</cell><cell>2.4428e-008</cell><cell>50</cell></row><row><cell>f20</cell><cell>20000</cell><cell>-3.3220</cell><cell>3.9654e-006</cell><cell>50</cell><cell>-3.3220</cell><cell>5.1551e-005</cell><cell>40</cell></row><row><cell>f21</cell><cell>10000</cell><cell>-10.0961</cell><cell>0.0612</cell><cell>NA</cell><cell>-10.0577</cell><cell>0.0948</cell><cell>NA</cell></row><row><cell>f22</cell><cell>10000</cell><cell>-10.2665</cell><cell>0.1744</cell><cell>NA</cell><cell>-10.2776</cell><cell>0.1467</cell><cell>NA</cell></row><row><cell>f23</cell><cell>10000</cell><cell>-10.2678</cell><cell>0.3621</cell><cell>NA</cell><cell>-10.3020</cell><cell>0.2727</cell><cell>NA</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3</head><label>3</label><figDesc>Comparisons the NFFES of CS, OLCS</figDesc><table><row><cell cols="3">Neural Comput &amp; Applic</cell><cell></cell><cell></cell><cell></cell></row><row><cell>F</cell><cell cols="2">Max_NFFES CS</cell><cell></cell><cell>OLCS</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Mean</cell><cell>SD</cell><cell>SR Mean</cell><cell>SD</cell><cell>SR</cell></row><row><cell cols="2">f01 150000</cell><cell>84735</cell><cell cols="3">1179.6 50 14755.9 1222.6</cell><cell>50</cell></row><row><cell cols="2">f02 200000</cell><cell cols="4">164030 4495.3 50 20284.2 1390.3</cell><cell>50</cell></row><row><cell cols="2">f03 500000</cell><cell>NA</cell><cell>NA</cell><cell cols="2">NA 41972.6 4195.7</cell><cell>50</cell></row><row><cell cols="2">f04 500000</cell><cell>NA</cell><cell>NA</cell><cell cols="2">NA 42279.4 1630.3</cell><cell>50</cell></row><row><cell cols="2">f05 500000</cell><cell>NA</cell><cell>NA</cell><cell cols="3">NA 49519.2 12124.9 5</cell></row><row><cell cols="2">f06 150000</cell><cell>39970</cell><cell cols="2">2864.9 50 5044.5</cell><cell>836.8</cell><cell>50</cell></row><row><cell cols="2">f07 300000</cell><cell>NA</cell><cell>NA</cell><cell>NA NA</cell><cell>NA</cell><cell>NA</cell></row><row><cell cols="2">f08 900000</cell><cell>NA</cell><cell>NA</cell><cell>NA NA</cell><cell>NA</cell><cell>NA</cell></row><row><cell cols="2">f09 300000</cell><cell>NA</cell><cell>NA</cell><cell>NA 14750</cell><cell>1213.6</cell><cell>50</cell></row><row><cell cols="2">f10 150000</cell><cell>NA</cell><cell>NA</cell><cell cols="2">NA 23818.3 1363.6</cell><cell>50</cell></row><row><cell cols="2">f11 200000</cell><cell cols="4">127915 2726.2 50 15151.2 1313.1</cell><cell>50</cell></row><row><cell cols="2">f12 150000</cell><cell cols="4">148600 2202.5 40 69513.8 2791.3</cell><cell>50</cell></row><row><cell cols="2">f13 150000</cell><cell>99490</cell><cell cols="4">7723.5 50 79856.5 36207.2 50</cell></row><row><cell cols="2">f14 10000</cell><cell>5315</cell><cell cols="2">1063.3 50 4465</cell><cell>1014.3</cell><cell>50</cell></row><row><cell cols="2">f15 40000</cell><cell>NA</cell><cell>NA</cell><cell>NA NA</cell><cell>NA</cell><cell>NA</cell></row><row><cell cols="2">f16 10000</cell><cell>2945</cell><cell>583.3</cell><cell>50 2885</cell><cell>573.9</cell><cell>50</cell></row><row><cell cols="2">f17 10000</cell><cell>2650</cell><cell>637.7</cell><cell>50 1920</cell><cell>770.7</cell><cell>50</cell></row><row><cell cols="2">f18 10000</cell><cell>2315</cell><cell>958.8</cell><cell>50 2605</cell><cell>1243.7</cell><cell>50</cell></row><row><cell cols="2">f19 10000</cell><cell>2265</cell><cell>558.2</cell><cell>50 1740</cell><cell>601.7</cell><cell>50</cell></row><row><cell cols="2">f20 20000</cell><cell>8785</cell><cell cols="2">1830.4 50 8695</cell><cell>1129.6</cell><cell>40</cell></row><row><cell cols="2">f21 10000</cell><cell>NA</cell><cell>NA</cell><cell>NA NA</cell><cell>NA</cell><cell>NA</cell></row><row><cell cols="2">f22 10000</cell><cell>NA</cell><cell>NA</cell><cell>NA NA</cell><cell>NA</cell><cell>NA</cell></row><row><cell cols="2">f23 10000</cell><cell>NA</cell><cell>NA</cell><cell>NA NA</cell><cell>NA</cell><cell>NA</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Liang et al.  proposes a new particle swarm optimization-CLPSO; a particle uses the personal historical best information of all the particles to update its velocity. Hansen and Ostermeier propose a very efficient and famous evolution strategy. Garcia-Martinez et al. proposes a hybrid real-coded genetic algorithm which combines the global and local search. Each method was run 50 times on each test function. Table8summarizes the experimental results. As can be seen in Table8, OLCS significantly outperforms CLPSO, CMA-ES, and GL-25.</figDesc><table /><note><p>OLCS performs better than CLPSO, CMA-ES, and GL-25 on 12, 12, and 12 out of 13 test function, respectively.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6</head><label>6</label><figDesc>Comparisons of, FEP, CEP, CS, OLCS</figDesc><table><row><cell>F</cell><cell>Mean best</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 10</head><label>10</label><figDesc></figDesc><table><row><cell>sum-</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 7</head><label>7</label><figDesc>Comparisons of Adptive LEP, levy, CS, OLCS</figDesc><table><row><cell cols="3">Neural Comput &amp; Applic</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>F</cell><cell cols="2">Max_NFFES Mean best</cell><cell></cell><cell></cell><cell></cell><cell>SD</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>Adptive</cell><cell>Levy</cell><cell>CS</cell><cell>OLCS</cell><cell>Adptive</cell><cell>Levy</cell><cell>CS</cell><cell>OLCS</cell></row><row><cell></cell><cell></cell><cell>LEP</cell><cell></cell><cell></cell><cell></cell><cell>LEP</cell><cell></cell><cell></cell></row><row><cell cols="2">f01 150000</cell><cell>6.32e-4</cell><cell>6.59e-4</cell><cell>1.7187e-016</cell><cell>1.5686e-107</cell><cell>7.6e-5</cell><cell>6.4e-5</cell><cell cols="2">1.9993e-016 4.5543e-107</cell></row><row><cell cols="2">f03 150000</cell><cell>0.041850</cell><cell cols="2">30.628906 11.8030</cell><cell>8.4533e-041</cell><cell>0.059696</cell><cell cols="2">22.1131122 5.9672</cell><cell>2.2774e-040</cell></row><row><cell cols="2">f05 150000</cell><cell>43.40</cell><cell>57.75</cell><cell>20.5355</cell><cell>10.0003</cell><cell>31.52</cell><cell>41.60</cell><cell>5.2074</cell><cell>2.3514</cell></row><row><cell cols="2">f08 150000</cell><cell>-11469.2</cell><cell cols="2">-11898.9 -</cell><cell>-</cell><cell>58.2</cell><cell>52.2</cell><cell cols="2">3.0983e?002 2.2877e?002</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>9.9887e?003</cell><cell>9.5845e?003</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">f09 150000</cell><cell>5.85</cell><cell>12.50</cell><cell>41.1676</cell><cell>0</cell><cell>2.07</cell><cell>2.29</cell><cell>8.9191</cell><cell>0</cell></row><row><cell cols="2">f10 150000</cell><cell>1.9e-2</cell><cell>3.1e-2</cell><cell>0.0347</cell><cell>8.8818e-016</cell><cell>1.0e-3</cell><cell>2.0e-3</cell><cell>0.1091</cell><cell>0</cell></row><row><cell cols="2">f11 150000</cell><cell>2.4e-2</cell><cell>1.8e-2</cell><cell>3.3225e-007</cell><cell>0</cell><cell>2.8e-2</cell><cell>1.7e-2</cell><cell cols="2">1.0460e-006 0</cell></row><row><cell cols="2">f12 150000</cell><cell>6.0e-6</cell><cell>3.0e-5</cell><cell>3.6244e-004</cell><cell>4.7949e-019</cell><cell>1.0e-6</cell><cell>4.0e-6</cell><cell cols="2">7.8063e-004 7.1024e-019</cell></row><row><cell cols="2">f13 150000</cell><cell>9.8e-5</cell><cell>2.6e-4</cell><cell>1.7996e-013</cell><cell>3.0414e-017</cell><cell>1.2e-5</cell><cell>3.0e-5</cell><cell cols="2">5.0959e-013 2.89382e-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>017</cell></row><row><cell cols="2">f16 3000</cell><cell>-1.031</cell><cell>-1.031</cell><cell>-1.0316</cell><cell>-1.0316</cell><cell>0.0</cell><cell>0.0</cell><cell cols="2">2.7789e-005 6.4011e-006</cell></row><row><cell cols="2">f18 3000</cell><cell>3.000</cell><cell>3.000</cell><cell>3</cell><cell>3</cell><cell>0</cell><cell>0</cell><cell>1.255e-004</cell><cell>8.233e-005</cell></row><row><cell cols="2">f21 10000</cell><cell>-9.54</cell><cell>-9.95</cell><cell>-10.0961</cell><cell>-10.0577</cell><cell>0.69</cell><cell>0.99</cell><cell>0.0612</cell><cell>0.0948</cell></row><row><cell cols="2">f22 10000</cell><cell>-10.30</cell><cell>-10.40</cell><cell>-10.2665</cell><cell>-10.2776</cell><cell>0.74</cell><cell>1.0e-4</cell><cell>0.1744</cell><cell>0.1467</cell></row><row><cell cols="2">f23 10000</cell><cell>-10.54</cell><cell>-10.54</cell><cell>-10.2678</cell><cell>-10.3020</cell><cell>4.9e-5</cell><cell>3.1e-3</cell><cell>0.3621</cell><cell>0.2727</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 9</head><label>9</label><figDesc>Comparisons of DEaheSPX, ODE, OLCS</figDesc><table><row><cell>Function</cell><cell>Max_NFFES</cell><cell>DEaheSPX</cell><cell></cell><cell>ODE</cell><cell></cell><cell>OLCS</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Mean</cell><cell>SD</cell><cell>Mean</cell><cell>SD</cell><cell>Mean</cell><cell>SD</cell></row><row><cell>f01</cell><cell>150000</cell><cell>2.9e-20</cell><cell>2.28e-20</cell><cell>4.33e-25</cell><cell>1.86e-24</cell><cell>1.5686e-107</cell><cell>4.5543e-107</cell></row><row><cell>f02</cell><cell>200000</cell><cell>4.47e-16</cell><cell>3.66e-16</cell><cell>2.81e-13</cell><cell>1.74e-13</cell><cell>1.4474e-088</cell><cell>3.5197e-088</cell></row><row><cell>f03</cell><cell>500000</cell><cell>5.11e-12</cell><cell>9.27e-12</cell><cell>2.50e-11</cell><cell>3.91e-11</cell><cell>5.5768e-147</cell><cell>1.4262e-146</cell></row><row><cell>f04</cell><cell>500000</cell><cell>7.99</cell><cell>3.18</cell><cell>9.44e-02</cell><cell>2.33e-01</cell><cell>7.3579e-107</cell><cell>1.4853e-106</cell></row><row><cell>f05</cell><cell>500000</cell><cell>1.24</cell><cell>1.67</cell><cell>28</cell><cell>9.24</cell><cell>1.2240e-007</cell><cell>1.8668e-007</cell></row><row><cell>f06</cell><cell>150000</cell><cell>2.81e?04</cell><cell>1.5e?03</cell><cell>2.29e?04</cell><cell>1.81e?03</cell><cell>0</cell><cell>0</cell></row><row><cell>f07</cell><cell>300000</cell><cell>3.52e-03</cell><cell>1.2e-03</cell><cell>1.03e-03</cell><cell>3.38e-04</cell><cell>5.0749e-005</cell><cell>3.3339e-005</cell></row><row><cell>f08</cell><cell>300000</cell><cell>4.98e?02</cell><cell>8.42e?02</cell><cell>1.63e?03</cell><cell>1.27e?03</cell><cell>41.52</cell><cell>68.73</cell></row><row><cell>f09</cell><cell>300000</cell><cell>13</cell><cell>8.11</cell><cell>1.65e?01</cell><cell>1.17e?01</cell><cell>0</cell><cell>0</cell></row><row><cell>f10</cell><cell>150000</cell><cell>3.89e-11</cell><cell>1.97e-11</cell><cell>5.34e-07</cell><cell>3.77e-06</cell><cell>8.8817e-016</cell><cell>0</cell></row><row><cell>f11</cell><cell>200000</cell><cell>1.82e-03</cell><cell>5.09e-03</cell><cell>2.12e-03</cell><cell>4.66e-03</cell><cell>0</cell><cell>0</cell></row><row><cell>f12</cell><cell>150000</cell><cell>6.22e-03</cell><cell>2.49e-02</cell><cell>3.44e-18</cell><cell>1.95e-17</cell><cell>4.7949e-019</cell><cell>7.1024e-019</cell></row><row><cell>f13</cell><cell>150000</cell><cell>3.22e-02</cell><cell>2.26e-01</cell><cell>2.05e-22</cell><cell>1.44e-21</cell><cell>3.0414e-017</cell><cell>2.89382e-017</cell></row><row><cell></cell><cell>?</cell><cell>13</cell><cell>-</cell><cell>12</cell><cell>-</cell><cell></cell><cell></cell></row><row><cell></cell><cell>-</cell><cell>0</cell><cell>-</cell><cell>1</cell><cell>-</cell><cell></cell><cell></cell></row><row><cell></cell><cell>=</cell><cell>0</cell><cell>-</cell><cell>0</cell><cell>-</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 10</head><label>10</label><figDesc>Comparisons of SaDENS, jDE, OLCS Applic outperforms the basic CS. Compared with some evolution algorithms (CLPSO, CMA-ES, GL-25, SADENS, jDE, DEahcSPX, ODE, and OXDE) from literature, we find our algorithm is superior to or at least highly competitive with these algorithms.In this paper, we only consider the global optimization. The algorithm can be extended to solve other problem such as constrained optimization problems.</figDesc><table><row><cell>Function</cell><cell>Max_NFFES</cell><cell>SaDENS</cell><cell></cell><cell>jDE</cell><cell></cell><cell>OLCS</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Mean</cell><cell>SD</cell><cell>Mean</cell><cell>SD</cell><cell>Mean</cell><cell>SD</cell></row><row><cell>f01</cell><cell>150000</cell><cell>2.5784e-023</cell><cell>2.2419e-023</cell><cell>1.1537e-028</cell><cell>1.3824e-028</cell><cell>1.5686e-107</cell><cell>4.5543e-107</cell></row><row><cell>f02</cell><cell>200000</cell><cell>6.8091e-016</cell><cell>1.2814e-015</cell><cell>6.5770e-024</cell><cell>4.7816e-024</cell><cell>1.4474e-088</cell><cell>3.5197e-088</cell></row><row><cell>f03</cell><cell>500000</cell><cell>6.2955e-030</cell><cell>1.2839e-029</cell><cell>6.6121e-015</cell><cell>7.2414e-015</cell><cell>5.5768e-147</cell><cell>1.4262e-146</cell></row><row><cell>f04</cell><cell>500000</cell><cell>3.7689e-009</cell><cell>7.9579e-009</cell><cell>0.4388</cell><cell>0.9705</cell><cell>7.3579e-107</cell><cell>1.4853e-106</cell></row><row><cell>f05</cell><cell>500000</cell><cell>0.2658</cell><cell>1.0293</cell><cell>0.0053</cell><cell>0.0153</cell><cell>1.2240e-007</cell><cell>1.8668e-007</cell></row><row><cell>f06</cell><cell>150000</cell><cell>3.5055e-023</cell><cell>4.8426e-023</cell><cell>1.2687e-028</cell><cell>1.6684e-028</cell><cell>0</cell><cell>0</cell></row><row><cell>f07</cell><cell>300000</cell><cell>0.0040</cell><cell>0.0014</cell><cell>0.0030</cell><cell>8.4877e-004</cell><cell>5.0749e-005</cell><cell>3.3339e-005</cell></row><row><cell>f08</cell><cell>300000</cell><cell>-1.2569e?004</cell><cell>1.8828e-012</cell><cell>-1.2569e?004</cell><cell>4.3526e-012</cell><cell>-1.2514e?004</cell><cell>75.7934</cell></row><row><cell>f09</cell><cell>300000</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell></row><row><cell>f10</cell><cell>150000</cell><cell>1.4786e-012</cell><cell>6.4597e-013</cell><cell>7.9936e-015</cell><cell>1.3427e-015</cell><cell>8.8817e-016</cell><cell>0</cell></row><row><cell>f11</cell><cell>200000</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell></row><row><cell>f12</cell><cell>150000</cell><cell>6.2514e-023</cell><cell>8.8513e-023</cell><cell>5.5891e-030</cell><cell>6.0673e-030</cell><cell>4.7949e-019</cell><cell>7.1024e-019</cell></row><row><cell>f13</cell><cell>150000</cell><cell>2.1085e-023</cell><cell>1.9475e-023</cell><cell>4.4801e-029</cell><cell>1.9567e-029</cell><cell>3.0414e-017</cell><cell>2.89382e-017</cell></row><row><cell></cell><cell>?</cell><cell>8</cell><cell>-</cell><cell>8</cell><cell>-</cell><cell></cell><cell></cell></row><row><cell></cell><cell>_</cell><cell>3</cell><cell>-</cell><cell>3</cell><cell>-</cell><cell></cell><cell></cell></row><row><cell></cell><cell>=</cell><cell>2</cell><cell>-</cell><cell>2</cell><cell>-</cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Neural Comput &amp; Applic</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments This research is fully supported by Opening Fund of Top Key Discipline of Computer Software and Theory in Zhejiang Provincial Colleges at Zhejiang Normal University under Grant No. ZSDZZZZXK37 and the Fundamental Research Funds for the Central Universities Nos. 11CXPY010.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Study of simulated annealing based algorithms for multiobjective optimization of a constrained problem</title>
		<author>
			<persName><forename type="first">B</forename><surname>Suman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Chem Eng</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="1849" to="1871" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A niched Pareto genetic algorithm for multiobjective optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Nafpliotis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evol Comput</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="82" to="87" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">MB-GNG: addressing drawbacks in multi-objective optimization estimation of distribution algorithms</title>
		<author>
			<persName><forename type="first">´l</forename><surname>Martı</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Garcı ´a</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Berlangaa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Coello</forename><surname>Coellob</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Molin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename></persName>
		</author>
		<idno type="DOI">10.1016/j.orl.2011.01.002</idno>
	</analytic>
	<monogr>
		<title level="j">Operat Res Lett</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The particle swarm-explosion, stability, and convergence in a multidimensional complex space</title>
		<author>
			<persName><forename type="first">M</forename><surname>Clerc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="58" to="73" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The ant system: optimization by a colony of cooperating agents</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maniezzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colorni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Syst Man Cybern Part B</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="41" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Biogeography-based optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Simon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="702" to="713" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Differential evolution-a simple and efficient heuristic for global optimization over continuous space</title>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Price</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J Global Optim</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="341" to="359" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Accelerating differential evolution using an adaptive local search</title>
		<author>
			<persName><forename type="first">N</forename><surname>Noman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Iba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="107" to="125" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cuckoo search via levy flights</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Deb</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">World congress on nature &amp; biologically inspired computing</title>
		<meeting><address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Publication</publisher>
			<date type="published" when="2009">2009. NaBIC 2009</date>
			<biblScope unit="page" from="210" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Engineering optimisation by Cuckoo search</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Deb</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int J Math Modell Numer Optim</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="330" to="343" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Modified cuckoo search: a new gradient free optimisation algorithm Chaos</title>
		<author>
			<persName><forename type="first">S</forename><surname>Walton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Hassan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Morgan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Solitons Fractals</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="710" to="718" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Cuckoo search algorithm: a metaheuristic approach to solve structural optimization problems</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Gandomi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Alavi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Engineering with Computers</title>
		<imprint>
			<biblScope unit="page">27</biblScope>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A novel quantum inspired cuckoo search for knapsack problems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Layeb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int J Bio Inspired Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="297" to="305" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Modified cuckoo search algorithm for unconstrained optimization problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Tuba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Subotic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Stanarevic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th European conference on european computing conference (ECC&apos;11)</title>
		<meeting>the 5th European conference on european computing conference (ECC&apos;11)</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="263" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A hybrid power series: Cuckoo search optimization algorithm to electrostatic deflection of micro fixed-fixed actuators</title>
		<author>
			<persName><forename type="first">A</forename><surname>Goghrehabadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ghalambaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vosough</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int J Multidiscip Sci Eng</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="22" to="26" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Orthogonal genetic algorithm for multimedia multicast routing</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">W</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="53" to="62" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Enhancing the performance of differential evolution using orthogonal design method</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Y</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">H</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">X</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl Math Comput</title>
		<imprint>
			<biblScope unit="volume">206</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="56" to="69" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An orthogonal genetic algorithm with quantization for global numerical optimization</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">W</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="41" to="53" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Hybrid Taguchi-genetic algorithm for global numerical optimization</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">K</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Chou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="365" to="377" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">An evolutionary algorithm for global optimization based on level-set evolution and latin squares</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">P</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Dang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="579" to="595" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Evolutionary programming made faster</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="82" to="102" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Evolutionary programming using mutations based on the levy probability distribution</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="13" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Table 11 Comparisons of OXDE, OLCS</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Comprehensive learning particle swarm optimizer for global optimization of multimodal functions</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Baskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="281" to="295" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Completely derandomized self adaptation in evolution strategies</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ostermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evol Comput</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="159" to="195" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Global and local real-coded genetic algorithms based on parent-centric crossover operators</title>
		<author>
			<persName><forename type="first">C</forename><surname>Garcia-Martinez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lozano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Herrera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Molina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Sanchez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur J Operat Res</title>
		<imprint>
			<biblScope unit="volume">185</biblScope>
			<biblScope unit="page" from="1088" to="1113" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Oppositionbased differential evolution</title>
		<author>
			<persName><forename type="first">S</forename><surname>Rahnamayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">R</forename><surname>Tizhoosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mma</forename><surname>Salama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="64" to="79" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Self-adaptive differential evolution with neighborhood search</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2008 IEEE congress on evolutionary computation (CEC2008)</title>
		<meeting>the 2008 IEEE congress on evolutionary computation (CEC2008)<address><addrLine>Hongkong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="1110" to="1116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Self adapting control parameters in differential evolution: a comparative study on numerical benchmark problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Brest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Greiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Boskovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mernik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Zumer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Evol Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="647" to="657" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Enhancing the search ability of differential evolution through orthogonal crossover</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">X</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">F</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform Sci</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="153" to="177" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Neural Comput &amp; Applic</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
