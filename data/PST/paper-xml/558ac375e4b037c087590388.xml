<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Symbol Recognition by Error-Tolerant Subgraph Matching between Region Adjacency Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Josep</forename><surname>Llado</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Juan</forename><surname>Jose</surname></persName>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Â</forename><surname>Villanueva</surname></persName>
						</author>
						<title level="a" type="main">Symbol Recognition by Error-Tolerant Subgraph Matching between Region Adjacency Graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3FB78F631F9A3C616D57EFFDA8FCD0FC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:04+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index TermsÐGraph isomorphism</term>
					<term>subgraph isomorphism</term>
					<term>graph matching</term>
					<term>inexact graph matching</term>
					<term>graph edit distance</term>
					<term>symbol recognition</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>AbstractÐIn this paper, we propose an error-tolerant subgraph isomorphism algorithm formulated in terms of Region Adjacency Graphs (RAG). A set of edit operations to transform one RAG into another one are defined. Regions are represented by polylines and string matching techniques are used to measure their similarity. The algorithm follows a branch and bound approach driven by the RAG edit operations. This formulation allows matching computing under distorted inputs and also reachong a solution in a near polynomial time. The algorithm has been used for recognizing symbols in hand drawn diagrams.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>DUE to their representational power, attributed relational graphs are widely used to represent complex visual structures in computer vision and pattern recognition applications. In addition, graph matching is a suitable strategy for classification, detection, or comparison of such structures. Graph matching has been successfully used for matching radar images against their cartographic representation in a digital map <ref type="bibr" target="#b7">[8]</ref>, stereo and different-viewpoint correspondence <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b34">[35]</ref>, 3D object recognition <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b38">[39]</ref>, diagram interpretation <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>, character recognition <ref type="bibr" target="#b23">[24]</ref>, etc. In general, graphs may be matched by comparing vertices and edges according to their contribution to a relational distance metric <ref type="bibr" target="#b25">[26]</ref>. Following a mathematical formulation, a matching between two graphs, q I and q P , is performed by a graph isomorphism, i.e., a bijective mapping that associates the nodes of q I to the nodes of q P . The mapping must also preserve the structure so that any pair of adjacent nodes in q I are also adjacent in q P under the mapping. For attributed graphs, it is also required that both node and edge attributes be maintained by the mapping. Thus, the similarity between attributes must be considered when defining the relational distance metric and, generally, it is application-dependent. If one of the graphs involved in the matching is larger than the other, in terms of the number of nodes, then the matching is performed by a subgraph isomorphism. A subgraph isomorphism from q I to q P means finding a subgraph q Q of q P such that q I and q Q are isomorphic.</p><p>Two drawbacks can be stated for the use of graph matching in computer vision. First, is its computational complexity. This is an inherent difficulty of the graph-matching problem. A brute-force approach requires a computational cost of yn3 for a graph with n nodes. The subgraph isomorphism is proven to be NP-complete <ref type="bibr" target="#b19">[20]</ref>. However, a research effort has been made to develop computationally tractable graph-matching algorithms in particular applications. Such applications use some heuristics to cut down the computational effort to a manageable size. Graph matching can even be computed in polynomial time by using approximate algorithms under particular conditions. The second drawback is to deal with noise and distortion. The encoding of an object of an image by an attributed graph may not be perfect due to noise and errors introduced in low-level stages. In such situations, the presence of noise and distortion results in distorted graphs with different attribute values, missing or added vertices and edges, etc. This fact makes exact graph matching to be useless in many computer vision applications. The matching must incorporate an error model able to identify the distortions which make one graph a distorted version of the other. A matching between two graphs involving an error model is referred to as inexact graph matching and is computed by an error-correcting or error-tolerant (sub)graph isomorphism <ref type="bibr" target="#b3">[4]</ref>. The definition of an error model is strongly application-dependent.</p><p>A number of algorithms can be found in the literature to solve the (sub)graph isomorphism problem. Let us now overview the main approaches, summarized in Table <ref type="table">1</ref>. We also report some of the most representative references in the field of computer vision. See reference <ref type="bibr" target="#b17">[18]</ref> for a further study.</p><p>Optimal Algorithms. The classical algorithms for (sub)graph isomorphism compute an incremental vertex-to-vertex mapping consisting in a backtrack tree search procedure which, at each level, the set of candidate mappings for the current model vertex is filtered against all past instantiations. Ullman <ref type="bibr" target="#b31">[32]</ref> improved the efficiency of the algorithm including a forward checking, i.e., a lookahead procedure which rejects incompatible mappings as soon as they are available. Discrete relaxation methods <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b21">[22]</ref> are similar to forward checking procedures. They reduce the number of possible mappings from model vertices by checking local consistencies in terms of their incident edges, before a backtrack tree search is expanded. Another well-known approach is maximal clique finding in association graphs. An association graph is constructed between the two graphs such that an association vertex represents a mapping between a pair of compatible model and input vertices and an association edge joins two compatible mappings. The (sub)graph isomorphism is determined by the largest maximal cliques in the association graph. The main drawback of clique finding is its computational complexity which, in the worst case, is higher than the classical tree-based algorithms. However, under certain conditions it can be a very efficient method. For example, Pelillo et al. <ref type="bibr" target="#b22">[23]</ref> recently proposed an interesting approach to match graphs that can be organized in a hierarchical way.</p><p>Error-Tolerant Algorithms. Concerning graph matching under noise and distortion, the procedural solutions to find an optimal error-tolerant subgraph isomorphism between two graphs are based in the construction of a state-space which is then searched with branch and bound techniques. A different approach to modelize the uncertainty of structural patterns was proposed by Wong and You <ref type="bibr" target="#b37">[38]</ref>. They defined random graphs as a particular type of graphs which convey a probabilistic description of the data. Seong et al. <ref type="bibr" target="#b24">[25]</ref> developed a branch-and-bound algorithm to find the optimal isomorphism between two random graphs in terms of an entropy minimization formulation.</p><p>Approximate Algorithms. Approximate or continuous optimization algorithms for graph matching offer the advantage that they can reach a solution in polynomial time and, moreover, they can solve both the exact and the inexact graph-matching problem. However, since the similarity function which they minimize can stabilize in a local minimum they may not find the optimal solution. Perhaps, the most successful of the optimization methods for graph matching use some form of probabilistic relaxation <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b36">[37]</ref>. The idea is similar to the discrete relaxation methods; however, the compatibility constraints between vertex-to-vertex assignments do not have a binary formulation, but are defined in terms of a probability function that is iteratively updated by the relaxation procedure. Another continuous optimization approach is based on neural networks <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b27">[28]</ref>, <ref type="bibr" target="#b28">[29]</ref>. The nodes of a neural network can represent vertex-to-vertex mappings and the connection weights between two network nodes represent a measure of the compatibility between the corresponding mappings. The network is programmed in order to minimize an energy (cost) function which is defined in terms of the compatibility between mappings. The problem of neural networks is that the minimization procedure is strongly dependent on the initialization of the network. Genetic algorithms is another technique used to find the best match between two graphs <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b14">[15]</ref>. Vectors of genes are defined to represent mappings from model vertices to input vertices. These solution vectors are combined by genetic operators to find a solution. Algebraic Algorithms. Weighted graphs are a particular type of graphs which have weights assigned to their edges. A weighted graph q can be represented by an adjacency matrix eq, where a position ij contains the weight associated with the edge v i Y v j . An analytic approach can then be used to solve the matching problem. Interesting approaches based on algebraic manipulations of adjacency matrices were respectively proposed by Umeyama <ref type="bibr" target="#b32">[33]</ref> (eigendecomposition) and Almohamad and Duffuaa <ref type="bibr" target="#b1">[2]</ref> (linear programming). These methods only work when both model and input graphs have the same number of nodes.</p><p>Indexed Search. Graph matching is also used in content-based image retrieval. When image concepts can be represented by graph structures, the problem of looking in the database for an image that contains a certain object can be stated in terms of an indexed search in a graph database. Sossa and Horaud <ref type="bibr" target="#b26">[27]</ref> proposed using the second immanantal polynomial of the Laplacian matrix of a graph for hash-coding any graph. Bunke and Messmer <ref type="bibr" target="#b3">[4]</ref> proposed a decision tree approach organized in terms of the different permutations of the adjacency matrices of the graphs in the database. Indexed search usually requires an exponential complexity for the compilation of the database.</p><p>In this paper, an error-tolerant subgraph isomorphism algorithm for symbol recognition in a graphics recognition framework is described. Graphics recognition is a growing area within the document analysis field devoted to recognizing graphical entities in printed documents such as maps, plans, diagrams, engineering drawings, etc. Graph matching methods are often proposed to solve the problem of recognizing symbols in line drawings or diagrams <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>. The problem consists in finding a model graph that represents the prototype symbol as a subgraph of an input graph representing the diagram. We propose a two-level graph representation. In the first level, the vectorized document is approximated by graphs whose nodes represent characteristic points (junctions, end, or corner points) and whose edges approximate the segments between characteristic points. In the second level, data is organized in terms of Region Adjacency Graphs (RAG). The RAG nodes represent the regions, i.e., minimal closed loops of the firstlevel graphs, and the edges are the neighboring relations between loops. A given first-level graph<ref type="foot" target="#foot_0">1</ref> region (RAG node) is encoded by its shape description using an attributed cyclic string containing the sequence of graph edges defining the region. Symbols are then recognized in terms of an inexact graph-matching procedure that computes the minimum distance from a model RAG to an input RAG. This distance is considered to be the weighted sum of the costs of edit operations to transform one graph into the other. The distance between RAGs conveys also a distance computation between regions. Since region boundaries are encoded by strings, their similarity is defined in terms of a string edit distance formulation <ref type="bibr" target="#b33">[34]</ref>.</p><p>Since the matching algorithm is formulated in terms of an errortolerant subgraph isomorphism, it can also be applied to disturbed documents such as hand drawn, inaccurately vectorized, or documents scanned with an insufficient resolution. In addition, our graph-matching algorithm, proposed in the field of graphics recognition, could be extended to other object recognition frameworks whenever a previous segmentation stage is assumed, from which regions are extracted from the input image according to a homogeneity criterion such as color or texture, a Voronoi tessellation of the image plane, etc. Thus, although the low-level procedure to extract regions from the input image is applicationdependent, the graph-matching algorithm proposed in this paper is application-independent.</p><p>The remainder of the paper is organized as follows: In Section 2, we propose a RAG matching algorithm in terms of graph edit distance. Experimentation is discussed in Section 3 and, finally, Section 4 is devoted to the conclusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">A GRAPH EDIT ALGORITHM FOR SYMBOL RECOGNITION UNDER DISTORTION</head><p>In this section, we first describe how raster images are converted in RAG structures. Afterwards, the error-tolerant subgraph isomorphism algorithm between RAGs is presented. We further describe the RAG edit operations involved in the matching.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">RAG Construction</head><p>Since our algorithm is used for symbol recognition in graphic documents, raster images containing prototypes and diagrams are first vectorized and represented by an attributed graph structure.</p><p>For the sake of conciseness, we do not thoroughly discuss the vectorization phase. It is based on a well-known approach that consists in computing the medial axis of the raster image and approximates it by geometrical primitives such as segments and arcs <ref type="bibr" target="#b29">[30]</ref>. This vectorial information is organized in a graph structure whose nodes represent the characteristic points of the diagram (junctions, end points, or corner points) and the graph edges approximate the segments between characteristic points. Formally, an attributed graph q is defined as a 4-pla q Y iY v Y v i , where is the set of nodes, i Â is the set of edges, v and v i are two labeling functions defined as v X 3 AE Â e k and v i X i 3 AE i Â e l i , where AE and AE i are two sets of symbolic labels for vertices and edges, respectively, e and e i are two sets of attributes for vertices and edges, respectively, and kY l P x</p><p>x. We will denote the number of vertices in a graph by j j and the number of edges by jij.</p><p>Given a graph q Y iY v Y v i representing a vectorized line drawing, a RAG is constructed. It describes the regions (minimal closed loops) of q and their adjacency relations. The shape of every region is represented by an attributed cyclic string that stores structural and geometric information. A key point in our RAG representation is that RAG nodes (regions) are represented and compared in terms of a string-based formulation. A region (RAG node) can be seen as a polygonal shape whose boundary is represented by a cyclic string, referred to as a boundary string in this paper. This string consists of a sequence of edges of the plain graph. Being inspired by the algorithm of Maes <ref type="bibr" target="#b18">[19]</ref> to compute the similarity between polygonal shapes, we have defined the similarity between two boundary strings in terms of the classical string edit distance formulated by Wagner and Fischer <ref type="bibr" target="#b33">[34]</ref>.</p><p>Formally, given an attributed graph q Y iY v Y v i such that q is a plane graph, its corresponding Region Adjacency Graph (RAG) is defined as an attributed graph q Y iY v Y v i , where fr i g is a set of vertices such that each vertex is a region r i of the graph q, i r i Y r j , r i Y r j P is a set of edges such that an edge r i Y r j exists whenever r i and r j are adjacent regions in q, and v and v i are two labeling functions defined as v X 3 i Ã and v i X i 3 i Ã , where v returns the boundary string representing a region and v i returns the string shared by two neighboring regions. Each symbol of such strings is attributed by its length and orientation. The distance between two regions r and r H , represented by the strings v r and v r H , respectively, is computed in terms of the edit operations required to transform v r into v r H with minimum cost. The costs of the edit operations are defined as a weighted sum of an angle cost and a length cost, analogously to <ref type="bibr" target="#b30">[31]</ref>.</p><p>In this paper, plain graph and RAG notation is simplified as q Y i and q Y i instead of q Y iY v Y v i and q Y iY v Y v i , respectively, whenever there is no confusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The String Growing Algorithm</head><p>Given a model graph q w w Y i w and an input graph q s s Y i s , our algorithm finds an error-tolerant subgraph isomorphism from q w to q s in terms of an isomorphism between their corresponding RAGs q w w Y i w and q s s Y i s . The isomorphism is computed in terms of the minimum cost edit sequence that transforms one RAG into the other one. The intuitive idea of the algorithm is that, after an initial model region is mapped to an input region, their corresponding boundary strings grow in parallel in terms of the similarity of their neighborhood until the boundary string which outlines the whole model graph is reached. Because of this idea, the algorithm is called the string growing algorithm. It can be seen as a region growing algorithm in which region clustering is driven by the structural and shape similarity between the regions of the input graph and the regions of the model graph. The growing process is based on a state-space search using a branch and bound strategy. Each state in the search tree represents a partial matching from a subset of q w nodes to a subset of q s nodes. Such subsets are denoted in this paper as w and s , respectively. Each state is codified by two strings that represent, respectively, the boundary strings that outline the set of model regions ( w ) and input regions ( s ) involved in the partial matching. The generation of successor states is guided by the cost of edit operations. In an iterative process, the state with minimum cost is expanded by mapping a neighboring region of w to a neighboring region of s and, therefore, growing w and s with these new mapped regions. The cost of each mapping is computed in terms of the string edit distance between region boundary strings. Edit operations and the corresponding cost function are defined so that they preserve the similarity between the model and the input graph.</p><p>This idea is illustrated in Fig. <ref type="figure" target="#fig_0">1</ref>, where we can follow the progress of the mapping from model regions to input regions until the subgraph isomorphism is completed. The matching starts by mapping the model region e to the input region e H . In the next level of the search tree, one of the neighboring regions of e is mapped to one of the neighboring regions of e H , in the example the mapping f 3 f H is selected and is integrated in the partial matching. It means that regions e and f are merged (denoted by ef), i.e., their boundary strings are merged into a single boundary string which outlines the region ef and, analogously, the regions e H and f H are merged into a region e H f H . In Fig. <ref type="figure" target="#fig_0">1</ref>, thick lines represent the boundary strings of the partial matchings at each level. New model-to-input region mappings are gradually incorporated until the subgraph isomorphism is attained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Definition of Graph Edit Operations</head><p>Given a model RAG q w w Y i w and an input RAG q s s Y i s , we define the following edit operations to transform q w into q s . Substitution of a node r w P w by a node r s P s , denoted as r w 3 r s . The cost for this operation is computed in terms of the string edit distance between the boundary strings, i.e.,</p><formula xml:id="formula_0">r w 3 r s d v r w Y v r s Y</formula><p>where d is the cyclic edit distance between two strings <ref type="bibr" target="#b18">[19]</ref>.</p><p>Shift of a node r j s P s , adjacent to a node r l s P s , along the boundary of r l s ; denoted as r l s r j s Y , where is the substring shared by r j s and r l s and is the substring shared by r j s and r l s after being r j s shifted. The shift cost is computed in terms of the overlapping percentage between and , i.e.,</p><formula xml:id="formula_1">r j s r l s Y I À l mxl Y l Y</formula><p>where l and l are the lengths of and , respectively, and l is the length of the common substring of and . The shift operation is used to preserve the structural relationships between regions. Fig. <ref type="figure" target="#fig_1">2</ref> illustrates the meaning of that operation. An intermediate state of the search tree corresponding to a partial matching between the model regions ef and the input regions e H f H is shown. At this point, there are three possible successors depending on whether g is substituted by g H , h H , or i H . Since the substitution cost is similar in such three alternatives, the shift operation is required to select the matching that better preserves the RAG structure. The best case among the candidates, according to the shift cost, is g 3 g H . g is adjacent to ef by the substring and g H is adjacent to e H f H by the substring H H . Moreover, according to the edit sequence that transforms the boundary string of ef to the boundary string of e H f H , the substring is mapped to H H H , i.e., the region g H should be adjacent to e H f H by the substring H H H to best preserve the adjacency relationship between g and ef. Therefore, to transform the model graph to the input graph, a shift must be applied to the region g when it is substituted by g H . It is denoted as e H f H g H H H Y H H H . On the other hand, although the successor guided by the operation g 3 h H is clearly a mismatch due to the wrong orientation of h H , the shift cost e H f H h H H Y H H H is likely to be low. This suggests that, to guarantee an adjacency-preserving constraint, the shift cost should also be computed in the reverse order, i.e., h</p><formula xml:id="formula_2">H e H f H H Y s H t H u H .</formula><p>Then, the maximum between the two shift costs is taken.</p><p>Merge of two regions r I and r P , denoted as r I r P . This operation is defined to overcome a common problem in hand drawn diagrams, the presence of gaps or broken lines due to noise and innacurate strokes. Since the algorithm is based on the region similarity, a gap in the boundary edges between two regions leads them to appear joined. We introduce a particular type of edges in the first level graphs called bridges. A bridge is defined as an edge e P i that does not approximate a line in the image but joins two end points uY v P close enough under a certain threshold . When the RAG is constructed, the boundary strings can contain bridges. When two neighboring regions r I Y r P P share a bridge, they are candidates to be merged. This is illustrated in Fig. <ref type="figure" target="#fig_1">2</ref>. Let us assume that g P w is the current model region to be considered. If the candidate regions to be mapped contain bridges, the algorithm also considers the merging operation. Thus, in the example, not only operation g 3 g H is considered but also g 3 g H h H .</p><p>Following the above considerations, when a state is expanded and, thus, a new model region r w is mapped to an input region r s the cost of this state expansion is computed by the following equation:</p><formula xml:id="formula_3">r w 3 r s I r w 3 r s P mx s r s Y Y r s s Y Q w s À r w r s Y</formula><p>where I , P , and Q are three weighting factors. is the boundary substring shared by s and r s , is the substring shared by s and r s after being r s shifted around s , and is the substring shared by s and r s after being s shifted around r s . Finally, w s and rw rs denote the ratio between the areas of the mapped regions. In summary, three terms take part of the cost computation when a state of the search tree is expanded by mapping a model region r w P w to an input region r s P s : 1) Substitution cost, computed in terms of the string edit distance between the boundary strings of r w and r s . 2) Shift cost, to measure the preservation of the interregion structure. 3) Scaling cost, to preserve the scaling factor when new regions are integrated in the partial matching. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS AND DISCUSSION</head><p>In this section, we report three representative experiments in the context of symbol recognition in hand drawn documents, particularly architectural floor plans. In such examples, both the input document and the model symbol have been vectorized and represented by RAGs. Afterwards, the string growing algorithm has been applied. An inexact subgraph matching between the model graph of Fig. <ref type="figure" target="#fig_2">3a</ref> and the graph obtained by vectorizing the line drawing of Fig. <ref type="figure" target="#fig_2">3b</ref> has been computed. The instances detected are highlighted in Fig. <ref type="figure" target="#fig_2">3c</ref> and, for each instance, the edit distance is also reported. Fig. <ref type="figure">4</ref> shows two examples from the domain of architectural hand drawn documents. Figs. <ref type="figure">4a</ref> and<ref type="figure">4b</ref> show the input documents and Figs. 4c and 4d the graph-matching results. The string growing algorithm has been computed against a set of model graphs representing some symbols such as doors, tables, beds, etc. We can observe that symbols appearing more than once in the document have been detected although their different degrees of distortion. The third experiment, in Fig. <ref type="figure">5</ref>, shows some details about the use of the edit operations. Fig. <ref type="figure">5a</ref> reports the result without considering the shift operation. Notice that the adjacency between regions is not preserved. In Fig. <ref type="figure">5b</ref>, we can see that, although the presence of a gap, the symbol has been properly detected because a bridge has been added to the plain graph by the vectorization step.</p><p>Concerning the performance of the algorithm, in the worst case, its computational complexity is unavoidably combinatorial. The total number of states in the search space that can be generated by the string growing algorithm is bounded by yjjj H j jj . However, in practice, the shift operation plays the role of lookahead criterion that, at each node expansion, allows selecting only a few candidate mappings that preserve the neighborhood structure. This fact can be experimentally proven. The string growing algorithm has been tested with an evaluation data set consisting of 10 hand drawn documents and 20 prototypes. All of them have been represented by RAG structures. Fig. <ref type="figure">6</ref> summarizes the results of the experiment in terms of the number of states expanded in the search space regarding both the model and the input regions. To better asses the plot, we show the results in two views, namely, the number of states in terms of the number of model regions () and in terms of the number of input regions ( H ). In both cases, lines represent the theoretical cost function, corresponding each line to a particular value of the third parameter. The dots represent the experimental results. We show the log of the original values to better compare the theoretical against the experimental cost. Notice that, in the experiments, the cost is shown to be reduced near a polynomial bound.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSIONS</head><p>In this paper, we have proposed an error-tolerant subgraph isomorphism algorithm in terms of edit operations transforming a model graph to an input one. The algorithm has been used in a graphics recognition environment, particularly for symbol recognition in hand drawn diagrams. Two goals have been addressed, namely, to reduce the inherent computational effort of graph matching to a manageable size and to allow matching between distorted graphs. The main contribution of our work is therefore the resolution of the two above objectives. The formulation of the matching in terms of Region Adjacency Graphs (RAGs) allows drastically reducing the size of the graphs and, hence, the computation time which depends on the number of graph vertices. In our experiments, the order of magnitude is reduced from thousands of nodes and edges in the plain graphs to a few hundred regions in the RAGs. On the other hand, the distortion model involved in the isomorphism has been formulated in terms of RAG edit operations. Two edit operations have been defined for the edition of RAG nodes and edges, respectively. The RAG node edition represents region-to-region correspondences and the associated cost has been defined in terms of region shapes represented by a string codification. The RAG edge edition allows measuring the preservation of the interregion structure and has been formulated by the shift operation. A third operation, the merge operation, has also been defined to solve a common problem in hand drawn documents: The presence of gaps that result in significative mistakes in the extraction of graph regions.</p><p>From the point of view of the symbol recognition problem, two issues must be noticed. First, the method contributes to the construction of new man-machine interfaces for CAD systems in which an engineer is able to design new projects by hand drawn sketches. Second, since the algorithm performs a subgraph isomorphism, it does not require a previous symbol segmentation step, but symbols are directly searched in the input document. Some symbol recognition methods assume that symbols have been previously segmented which is not realistic in a number of applications.</p><p>The analysis of the experiments proves that the algorithm is able to perform the maching between distorted graphs in a near polynomial computation time although the theoretical complexity is exponential. In the studied cases, the algorithm finds the solution in a few seconds for model graphs with less than 10 regions and input graphs with a few hundred regions. From the point of view of the application, graph matching is a syntactic step in an image understanding process. To fully understand a graphic document and convert it from a paper-based to an electronic format, our algorithm should be complemented with the use of domain-dependent semantic information.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Example of string growing in terms of the neighboring region similarity.</figDesc><graphic coords="3,89.46,69.17,387.61,138.78" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Shift and merge operation in a partial matching.</figDesc><graphic coords="4,84.02,69.17,398.38,159.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3</head><label>3</label><figDesc>Fig. 3 consists in an introductory example to illustrate the robustness of the algorithm under distortion and its invariance to translation, rotation, and scale of the prototypes within the image.An inexact subgraph matching between the model graph of Fig.3aand the graph obtained by vectorizing the line drawing of Fig.3bhas been computed. The instances detected are highlighted in Fig.3cand, for each instance, the edit distance is also reported. Fig.4shows</figDesc><graphic coords="5,83.00,376.50,400.42,368.73" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .Fig. 4 .</head><label>34</label><figDesc>Fig. 3. (a) Model graph. (b) Hand-drawn image. (c) Results of the matching algorithm.</figDesc><graphic coords="5,102.39,69.17,361.76,177.39" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Illustration of the edit operations: (a) Mismatch obtained if the shift operation is not considered. (b) Application of the merge operation.</figDesc><graphic coords="6,154.77,69.17,256.93,117.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="2,95.41,106.02,375.70,213.79" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>In the remainder of this paper, first-level attributed graphs will be referred to as plain graphs or just graphs to avoid confusion with RAGs.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">C</forename><surname>Ah-Soon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
		<respStmt>
			<orgName>Institut Nat&apos;l Polytechnique de Lorraine</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
	<note>ªAnalyse de Plans Architecturaux</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">ªA Linear Programming Approach for the Weighted Graph Matching Problem</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Almohamad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">O</forename><surname>Duffuaa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="522" to="525" />
			<date type="published" when="1993-05">May 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">P</forename><surname>Amann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hugli</surname></persName>
		</author>
		<title level="m">ªAn Algorithm for the Inexact Matching of High Level 3D Polyhedric Representations,º Proc. SPIE Conf. Intelligent Robotic Systems</title>
		<imprint>
			<date type="published" when="1991-11">Nov. 1991</date>
			<biblScope unit="volume">1609</biblScope>
			<biblScope unit="page" from="134" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">H</forename><surname>Bunke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">T</forename><surname>Messmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in Graph Matching,º Int&apos;l J. Pattern Recognition and Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="169" to="203" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">ªStructural Matching in Computer Vision Using Probabilistic Relaxation</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Christmas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kittler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Petrou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="749" to="764" />
			<date type="published" when="1995-08">Aug. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D J</forename><surname>Cross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Hancock</surname></persName>
		</author>
		<title level="m">ªInexact Graph Matching Using Genetic Search,º Pattern Recognition</title>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="953" to="970" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">ªA Similarity Measure between Attributed Relational Graphs for Image Analysis</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Eshera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Fu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Seventh Int&apos;l Conf. Pattern Recognition</title>
		<meeting>Seventh Int&apos;l Conf. Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="1984">1984</date>
			<biblScope unit="page" from="75" to="77" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Finch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Hancock</surname></persName>
		</author>
		<title level="m">ªMatching Delaunay Graphs,º Pattern Recognition</title>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="123" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">ªA Structural Graph Matching Approach to Image Understanding</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">P</forename><surname>Ford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE Conf. Intelligent Robots and Computer Vision X: Algorithms and Techniques</title>
		<meeting>SPIE Conf. Intelligent Robots and Computer Vision X: Algorithms and Techniques</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="volume">1607</biblScope>
			<biblScope unit="page" from="559" to="569" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">D Object Recognition Based on Subgraph Matching in Polynomial Time,º Structural Pattern Analysis</title>
		<author>
			<persName><forename type="first">E</forename><surname>Gmu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bunke</surname></persName>
		</author>
		<editor>R. Mohr, T.H. Pavlidis, and A. Sanfeliu</editor>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>World Scientific</publisher>
			<biblScope unit="page" from="131" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">ªA Graduated Assignment for Graph Matching</title>
		<author>
			<persName><forename type="first">S</forename><surname>Gold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rangarajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="377" to="388" />
			<date type="published" when="1996-04">Apr. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Habacha</surname></persName>
		</author>
		<title level="m">ªStructural Recognition of Disturbed Symbols Using Discrete Relaxation,º Proc. First Int&apos;l Conf. Document Analysis and Recognition</title>
		<imprint>
			<date type="published" when="1991-10">Sept.-Oct. 1991</date>
			<biblScope unit="page" from="170" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Henderson</surname></persName>
		</author>
		<title level="m">Discrete Relaxation Techniques</title>
		<imprint>
			<publisher>Oxford Univ. Press</publisher>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<author>
			<persName><forename type="first">R</forename><surname>Horaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Skordas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ªStereo Correspondence through Feature Grouping and Maximal Cliques</title>
		<imprint>
			<date type="published" when="1989-11">Nov. 1989</date>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1168" to="1180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">ªSynthesis of Representative Graphical Symbols by Computing Generalized Median Graph,º Graphics Recognition: Recent Advances</title>
		<author>
			<persName><forename type="first">X</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Munger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bunke</surname></persName>
		</author>
		<editor>A.K. Chhabra and D. Dori</editor>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="183" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">ªPattern Recognition by Graph Matching: Combinatorial versus Continuous Optimization,º Int</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kuner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ueberreiter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">l J. Pattern Recognition and Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="527" to="542" />
			<date type="published" when="1988-09">Sept. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Groen, ªTranslation-, Rotation-, and Scale-Invariant Recognition of Hand-Drawn Symbols in Schematic Diagrams,º Int</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">C A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">l J. Pattern Recognition and Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="25" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">ªCombining Graph Matching and Hough Transform for Hand-Drawn Graphical Document Analysis. Application to Architectural Drawings</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Llado</forename><surname>Âs</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">8</biblScope>
		</imprint>
		<respStmt>
			<orgName>Universitat Auto Á noma de Barcelona and Universite Â de Paris</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Maes</surname></persName>
		</author>
		<title level="m">ªPolygonal Shape Recognition Using String-Matching Techniques,º Pattern Recognition</title>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="433" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Graph Algorithms and NP-Completeness</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mehlhorn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">ªA New Algorithm for Error-Tolerant Subgraph Isomorphism Detection</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">T</forename><surname>Messmer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bunke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="493" to="504" />
			<date type="published" when="1998-05">May 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">R</forename><surname>Mohr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Henderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="225" to="233" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">ªMatching Hierarchical Structures Using Association Graphs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Pelillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Siddiqi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Zucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1105" to="1120" />
			<date type="published" when="1999-11">Nov. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Rocha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Pavlidis</surname></persName>
		</author>
		<title level="m">ªA Shape Analysis Model with Applications to a Character Recognition System,º IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="393" to="404" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">ªAn Algorithm for Optimal Isomorphism between Two Random Graphs</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Seong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">K</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">H</forename><surname>Park</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="321" to="327" />
			<date type="published" when="1994-04">Apr. 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Shapiro</surname></persName>
		</author>
		<title level="m">ªRelational Matching,º Handbook of Pattern Recognition and Image Processing: Computer Vision, T.Y. Young</title>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="475" to="496" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">ªModel Indexing: The Graph-Hashing Approach</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sossa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Horaud</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Computer Vision and Pattern Recognition</title>
		<meeting>IEEE Conf. Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="1992-06">June 1992</date>
			<biblScope unit="page" from="811" to="814" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Teoh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename></persName>
		</author>
		<title level="m">ªPattern Recognition by Graph Matching Using the Potts MFT Neural Networks,º Pattern Recognition</title>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="997" to="1009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Teoh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename></persName>
		</author>
		<title level="m">ªPattern Recognition by Homomorphic Graph Matching Using Hopfield Neural Networks,º Image and Vision Computing</title>
		<imprint>
			<date type="published" when="1995-02">Feb. 1995</date>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="45" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">ªStable and Robust Vectorization: How to Make the Right Choices,º Graphics Recognition: Recent Advances</title>
		<author>
			<persName><forename type="first">K</forename><surname>Tombre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ah-Soon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dosch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Masini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tabonne</surname></persName>
		</author>
		<editor>A.K. Chhabra and D. Dori</editor>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="3" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">ªModel-Guided Attributed String Matching by Split-and-Merge for Shape Recognition,º Int</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">T</forename><surname>Tsay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">H</forename><surname>Tsai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">l J. Pattern Recognition and Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="159" to="179" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">ªAn Algorithm for Subgraph Isomorphism</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Ullman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. for Computing Machinery</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="31" to="42" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">ªAn Eigendecomposition Approach to Weighted Graph Matching Problems</title>
		<author>
			<persName><surname>Umeyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="695" to="703" />
			<date type="published" when="1988-09">Sept. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">ªThe String-to-String Correction Problem</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Fischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. for Computing Machinery</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="168" to="173" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">ªRegion Correspondence by Inexact Attributed Planar Graph Matching</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Abe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Fifth Int&apos;l Conf. Computer Vision</title>
		<meeting>Fifth Int&apos;l Conf. Computer Vision</meeting>
		<imprint>
			<date type="published" when="1995-06">June 1995</date>
			<biblScope unit="page" from="440" to="447" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">ªThe Approximate Graph Matching Problem</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">W</forename><surname>Chirn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int&apos;l Conf. Pattern Recognition</title>
		<meeting>12th Int&apos;l Conf. Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="1994-10">Oct. 1994</date>
			<biblScope unit="page" from="284" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">ªA Bayesian Compatibility Model for Graph Matching</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Hancock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="263" to="276" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">ªEntropy and Distance of Random Graphs with Application to Structural Pattern Recognition</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>You</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="599" to="609" />
			<date type="published" when="1985-09">Sept. 1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Wong</surname></persName>
		</author>
		<title level="m">ªModel Matching in Robot Vision by Subgraph Isomorphism,º Pattern Recognition</title>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="287" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<ptr target="http://computer.org/publications/dlib" />
		<title level="m">F For more information on this or any other computing topic, please visit our Digital Library</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
