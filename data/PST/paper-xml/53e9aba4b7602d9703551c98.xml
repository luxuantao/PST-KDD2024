<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Discrete Multiscale Vector Field Decomposition</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yiying</forename><surname>Tong</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Usc</forename><surname>Santiago</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Lombeyda</forename><surname>Caltech</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Anil</forename><forename type="middle">N</forename><surname>Hirani</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Caltech</forename><surname>Mathieu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Desbrun</forename><surname>Usc</surname></persName>
						</author>
						<title level="a" type="main">Discrete Multiscale Vector Field Decomposition</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5609FA36670E06D1ADFFE2D52AEE2515</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:21+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Vector fields</term>
					<term>Variational approaches</term>
					<term>Hodge decomposition</term>
					<term>Scale-space description</term>
					<term>Animation</term>
					<term>Visualization</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Figure 1: Decomposing Vector Fields: the tangential component of a wind field interacting with an ear (left, LIC visualization [5]) reveals its curl free component (middle) and divergence-free component (right) after decomposition. In this paper, simple computational tools are introduced to produce such a decomposition, for discrete 2D and 3D vector fields defined on irregular grids, even on curved manifolds.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Discrete multivalued fields such as vector and tensor fields are ubiquitous in computational sciences. In Computer Graphics, they are used in a large number of applications ranging from fluid and deformable object simulation to the analysis of MRI data for medical prognosis. Due to the sheer complexity of these nonscalar fields, their numerical processing is most often performed on regular grids, due to a lack of simple and accurate tools for irregular grids. Yet, arbitrary grids are more efficient and flexible at discretizing 2D and 3D regions, whether they are in Euclidean spaces or on curved manifolds. The goal of this paper is to present a simple and accurate approach to vector field processing on arbitrary tetrahedral grids, to catalyze the development of algorithms and implementations of such rich data in computer graphics.</p><p>Most of the work done so far on discrete vector field analysis has tried to mimic well-known differential properties of vector fields dating back to Poincaré (1854-1912). Globus et al. <ref type="bibr" target="#b10">[11]</ref> for instance described a methodology for vector field analysis by examining the eigenvalues of the jacobian matrix of a velocity field trilinearly interpolated on curvilinear grids. They also created a discrete topology of vector fields by connecting critical points through streamlines. This notion of topology can be used to not only analyze, but also to describe vector fields, even noisy ones that can be smoothed while preserving <ref type="bibr" target="#b28">[29]</ref> or simplifying <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b13">14]</ref> their topology. An alternative for computing the singularities of three dimensional flow fields was shown in <ref type="bibr" target="#b15">[16]</ref> using Clifford algebra. It can not only find and classify point singularities, but also line and surface singularities. However, the approach is so far restricted to regular grid data; moreover, the computations involved provide topological information only, and often return false positives. This is actually a common problem: since most vector field feature detections are based on very local estimates (often using the jacobian or the winding number), inevitable noise in the data often leads to poor numerical quality of the approximants, and thus inaccurate feature detection. As we will see, we use instead a variational approach to offer a more global solution to feature detection that does not suffer from such sensitivity to noise.</p><p>Smoothing vector fields has also been proposed as an efficient way to simplify complex datasets, and render the analysis more tractable <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b3">4]</ref>: for instance, <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b8">9]</ref> use anisotropic nonlinear diffusion methods to clean "noise" (small-scale features) from 2D and 3D fluid flows. This general idea is essential when dealing with very complex data sets issued from large simulation on supercomputers: the native resolution of the data prevents any global processing without prior simplification. We will also provide, in conjunction with a vector field decomposition, a multiscale description of vector fields to allow for a multiresolution probing of the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Hodge Decomposition for Smooth Fields</head><p>For smooth data, there is a well known way to decompose a vector field into both intuitive and useful components: it is called the Helmholtz-Hodge decomposition <ref type="bibr" target="#b0">[1]</ref>. First, recall that ∇ = (∂/∂x, ∂/∂y, ∂/∂z) t is the gradient, ∇• = ∂/∂x + ∂/∂y + ∂/∂z is the divergence operator, and ∇× is the curl operator (also called rotational). With this notation, for a smooth 3D vector field ξ defined in a region T , there exists a unique decomposition satisfying the following properties:</p><formula xml:id="formula_0">ξ = ∇u + ∇×v + h (1)</formula><p>where: u is a scalar potential field; note that ∇×(∇u) = 0, v is a vector potential field; note that ∇ • (∇×v) = 0, and h is the so-called "harmonic" vector field; note that ∇ • h = 0 and ∇×h = 0. The uniqueness requires proper boundary conditions as well: ∇u must be normal to the boundary ∂T of T , while ∇×v must be tangential to it. Due to the properties of the potential fields, ∇u is called the curl-free component (∇×(∇u) = 0), while ∇×v is called the divergence-free component (∇ • (∇×v) = 0). This decomposition is particularly interesting for extraction of the features and singularities of a flow. For instance, in 2D fields, the curl-free term ∇u contains only sources and sinks, while the divergence free term ∇×v contains only vortices (see Figure <ref type="figure">3</ref>). Therefore, in addition to the intrinsic mathematical values of this decomposition, these components correspond to our intuition about what is a flow. This natural decomposition is, alas, only well defined for differential vector fields. One has to extend this smooth definition to the discrete setting for computational purposes, and this is no trivial matter as even the notion of divergence or curl needs to be properly defined for discrete data. Discrete Helmholtz-Hodge decomposition on regular grids has already been used in graphics (see <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b9">10]</ref> for instance) and is relatively straightforward to implement with a finite-difference approach. It is, however, much harder to design a practical and accurate method for arbitrary grids. Several mathematical methods have been proposed to solve this issue for piecewise-linear vector fields(see <ref type="bibr" target="#b2">[3]</ref>). Recently, Polthier and Preuß have successfully derived a technique for 2D discrete piecewise-constant vector fields in <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref> <ref type="foot" target="#foot_0">1</ref> that is particularly simple to implement, and has the attractive feature of preserving most of the continuous properties of its differential counterpart. Thus, we propose to extend this technique to 3D, as well as combine it with a multiscale decomposition to provide a complete set of convenient tools for vector fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Outline and Contributions</head><p>In this paper, we first propose in Section 2 a discrete 3D Helmholtz-Hodge decomposition for irregular 3D grids, that both extends previous work <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b24">25]</ref> and matches its well-known differential analog. Our projection of a vector field into three unique vector field components (a curl-free field, a divergence-free field and a harmonic field) preserves all the natural smooth properties in the discrete sense. In developing our discrete decomposition, we will introduce two discrete operators Div and Curl with definitions derived from a simple variational approach. These discrete versions of the smooth operators divergence and curl have intuitive physical meaning that matches their smooth counterparts. We then introduce in Section 3 a multiscale representation of the projected Figure <ref type="figure">2</ref>: Piecewise-constant Vector Fields: A 3D example of a vector field used in a scientific simulation; the vector field is assumed constant within each tetrahedron.</p><p>fields, where fine-scale details are successively suppressed while main features are preserved. Such a hierarchical decomposition is particularly interesting for visualization purposes, as complex flows can be represented at multiple scales to heighten the user's intuition and understanding of the global and local phenomena present in the data. The resulting multiscale vector field decomposition is a versatile computational tool: several applications are discussed and demonstrated in Section 4, from a vector field processing and visualization toolbox, to the animation of fluids and elastic objects on irregular grids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">3D Vector Field Decomposition</head><p>In this section, we introduce a discrete vector field decomposition that guarantees a proper and unique separation of a discrete vector field into a curl-free, a divergence-free and a harmonic field. We show that this discrete treatment closely parallels the smooth Helmholtz-Hodge decomposition (described in Section 1.1), preserving all the fundamental differential properties while resulting in a very simple implementation. Moreover, the geometric interpretations behind each of the different step of this technique are simple and intuitive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Setup and Definitions</head><p>Our basic setup is largely inspired by <ref type="bibr" target="#b22">[23]</ref>, and extended to 3D vector fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Domain</head><p>The finite domain on which the vector analysis needs to be performed is given in the form of a tetrahedralization T . We will make no assumption on the shape of the tetrahedra, or on the genus of the region: they can be arbitrary. However, for clarity's sake, we will assume in this section that our domain is a region of the "flat" 3D (Euclidean) space. It will be shown later (in Section 4.2.2) how straightforward it is to extend our discrete Helmholtz-Hodge decomposition to arbitrary embedding (for 3D volumes embedded in nD, as in space-time simulations for instance).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discrete Vector Fields</head><p>On this domain, we will assume the input discrete vector field ξ to be cell-centered: inside each tetrahedron T k of the domain, the vector field is supposed to be constant, and is represented by a vector ξ k . If the input vector field is not cellcentered (as in finite element computations for instance), the field can be averaged over each tetrahedron or simply sampled at the barycenter to create the appropriate cell-centered representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discrete Potential Fields</head><p>Our goal is to mimic the smooth Hodge decomposition. We thus need to define two potentials (resp. u and v) such that their derivatives (resp. gradient and curl) represent the curl-free and divergence-free components of an input field ξ. Given our choice of input vector fields, it is natural to define these potential fields as being linear on each tetrahedron of T , i.e., defined at vertices (also called nodes) of the domain and linearly interpolated within each tetrahedron. The gradient or the curl of any node-based linear function will then be constant within any given tetrahedron, defining a proper cell-centered vector field. Notice that this is reminiscent of the staggered grid approach commonly used for regular grids <ref type="bibr" target="#b24">[25]</ref> due to its superior numerical qualities: the vector field and the potentials are not collocated, but instead, live on dual grids. In our case, the primal potential field defined using linear finite elements naturally induces a dual vector field, constant in each grid cell. This is also the traditional setup of what is sometimes called the mixed finite-volume/finite-element method <ref type="bibr" target="#b16">[17]</ref>.</p><p>Definitions In order to avoid confusion, we will always use the index i to refer to a node of the tetrahedralization T at a spatial position x i and use the index k for a tetrahedron T k ∈ T . We now define the function spaces we will be working with.</p><p>We will call L the (primal) space of piecewise-linear potential fields. A potential (scalar or vector) field f ∈ L is expressed as:</p><formula xml:id="formula_1">f (x) = ∑ i φ i (x) f i ,</formula><p>with φ i being the piecewise-linear basis function valued 1 at node x i , and 0 at all other nodes of T , and f i being the value of f at x i . Due to the local support of the basis functions φ i , the value of f within a tetrahedron defined by</p><formula xml:id="formula_2">(x i 1 , x i 2 , x i 3 , x i 4 ) is simply: f = φ i 1 f i 1 + φ i 2 f i 2 + φ i 3 f i 3 + φ i 4 f i 4 .</formula><p>We will also use the notation φ ik to refer to the function φ i restricted to tetrahedron T k .</p><p>We will call C the (dual) space of piecewise-constant vector fields. A vector field w ∈ C can expressed as: w(x) = ∑ k ψ k (x)w k , with ψ k being the piecewise-constant basis function valued 1 inside tetrahedron T k and 0 anywhere else. The vector field w is therefore valued w k inside the tetrahedron T k . Notice that both the gradient (resp. the curl) of a primal scalar (resp. vector) potential field in L is a dual vector field, i.e., a member of C , since a piecewise-linear field has piecewise-constant first derivatives. The discrete vector field decomposition we present next can therefore be formulated as follows:</p><p>For a vector field ξ ∈ C , find the two potential fields u ∈ L and v ∈ L, and the vector field h ∈ C , such that a Hodgetype decomposition (Eq. 1) can be formulated for ξ.</p><p>Next, we define the discrete notions of divergence-free and curlfree components of a vector field, and propose a discrete decomposition that satisfies the uniqueness property for proper boundary conditions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Curl-free Component</head><p>Using the smooth Hodge decomposition as a guide, we wish to find a piecewise-linear function u such that its spatial gradient ∇u captures the curl-free part of the original vector field ξ. In the smooth case, this component corresponds to the L 2 projection of ξ onto the space of curl-free fields <ref type="bibr" target="#b0">[1]</ref>. Therefore a natural, globally-optimal field u satisfying this property can be defined as minimizing the following quadratic functional <ref type="bibr" target="#b22">[23]</ref>:</p><formula xml:id="formula_3">F(u) = 1 2 T (∇u -ξ) 2 dV (2)</formula><p>A necessary condition for a potential u to be a minimizer of this function is to satisfy, for each node i, the linear equation ∂F(u)/∂u i = 0. In the Appendix A, we show that these linear equations can be expressed as:</p><formula xml:id="formula_4">∀i, T ∇φ i • ∇u dV = T ∇φ i • ξ dV.</formula><p>(3)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Solving for the Potential</head><p>The optimality conditions being linear, it is straightforward to find the potential u by solving the linear system in Eq. 3, which can be rewritten at each node as a simple sum over the neighboring tets:</p><formula xml:id="formula_5">∀i, ∑ T k ∈N (i) ∇φ ik • (∇u) k |T k | = ∑ T k ∈N (i) ∇φ ik • ξ k |T k | (4)</formula><p>where N (i) is the set of all tetrahedra immediately adjacent to the node i, and |T k | is the volume of tetrahedron T k . The locality of these conditions leads to a sparse matrix. Forming this matrix is a simple matter of computing the non-zero coefficients involved; rewriting (∇u) k as a function of the local basis functions indicates that these coefficients are of the form ∇φ ik • ∇φ jk . To facilitate the implementation, we note that ∇φ ik is simply the vector orthogonal to the face f ik opposite to i in the tet T k , pointing towards i and with a magnitude of</p><formula xml:id="formula_6">|∇φ ik | = area( f ik ) 3 |T k | .</formula><p>Using this geometric definition Figure <ref type="figure">3</ref>: Vector Field Decomposition (visualized using LIC <ref type="bibr" target="#b4">[5]</ref>): a 2D field (top, left) is decomposed into its curl-free part (middle, left) and its divergence-free part (bottom, left). Right: the same decomposition after a non-linear smoothing of the potentials. Notice that only the small vortices have disappeared as can be seen from the superimposed features (top).</p><p>of the terms involved, the coefficients of the matrix of this linear system can then be computed easily.</p><p>To guarantee uniqueness we also need to specify boundary conditions. We choose to set u| ∂T = 0: this results in ∇u being orthogonal to each face on the boundary which is a required condition for uniqueness in the smooth Hodge decomposition <ref type="bibr" target="#b0">[1]</ref>. Notice that any other constant value at the boundary could be used, reflecting the fact that the potential u is defined up to a constant. Given these boundary conditions the sparse linear system can now be solved efficiently using a conventional conjugate gradient technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Discrete Divergence</head><p>Eq. (3) suggests the introduction of a discrete operator Div. For a vector field w ∈ C and a node x i , we define:</p><formula xml:id="formula_7">(Div w)(x i ) = ∑ T k ∈N (i) ∇φ ik • w |T k | . (<label>5</label></formula><formula xml:id="formula_8">)</formula><p>Indeed, with this definition, Eq. 4 can be directly expressed as a discrete equivalent of the Poisson equation:</p><formula xml:id="formula_9">Div(∇u) = Div ξ. (<label>6</label></formula><formula xml:id="formula_10">)</formula><p>Notice that in the smooth case, u satisfies the same Poisson equation, but with the smooth divergence operator ∇•, as can be seen by applying ∇• to both sides of Eq. 1. Note also that Div(∇u) is the discrete Laplacian defined for 2D in <ref type="bibr" target="#b19">[20]</ref>, and for 3D in <ref type="bibr" target="#b17">[18]</ref>: our operator is therefore in agreement with previous work, as already noticed for the 2D case in <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b20">21]</ref>. The Div operator defined in Eq. ( <ref type="formula" target="#formula_7">5</ref>) has a very natural physical interpretation, similar to the 2D formula found in <ref type="bibr" target="#b22">[23]</ref>: since the gradient inside a tet of a node's linear basis function is orthogonal to the opposite face (see Section 2.2.1), this operator simply sums the "flux" of the vector field through the one-ring region around a vertex. Additionally, in Appendix C we prove that Div(∇×w) = 0 for any vector field w ∈ L. Thus Div satisfies an identity analogous to a vector calculus identity satisfied by the usual divergence operator. All these analogies with the differential divergence operator justify the name Div for this discrete operator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Divergence-free Component</head><p>Still keeping the smooth Hodge decomposition in mind for guidance, we now wish to find a piecewise-linear node-based vector field v such that its curl captures the divergence-free part of the original vector field ξ. Following the differential definition of ∇×v as being the L 2 projection of ξ onto the space of divergence-free fields, we define an energy G as:</p><formula xml:id="formula_11">G(v) = 2 T (∇×v -ξ) 2 dV (7)</formula><p>The divergence-free component ∇×v of ξ can now be defined as the minimizer of this quadratic functional. The global critical point of G must satisfy the following linear equations, as proven in Appendix B: ∀i,</p><formula xml:id="formula_12">T ∇φ i × (∇×v) dV = T ∇φ i × ξ dV (8)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Solving for the Potential</head><p>The above optimality conditions can, once again, be written as a local sum over neighboring tetrahedra. Therefore, solving for v amounts to solve the sparse, linear system defined by:</p><formula xml:id="formula_13">∀i, ∑ T k ∈N (i) ∇φ ik × (∇×v) k |T k | = ∑ T k ∈N (i) ∇φ ik × ξ k |T k |. (9) Since ∇×(∑ i φ i v i ) = ∑ i (∇φ i × v i )</formula><p>, the non-zero coefficients of the matrix of this linear system are now related to the cross products ∇φ ik × ∇φ jk . Their evaluation is simple to perform using the geometric interpretation of ∇φ ik (see Section 2.2.1): it will reduce to a scaled version of the cross product between normals to two adjacent faces.</p><p>In the smooth case a sufficient boundary condition to ensure uniqueness of the Hodge decomposition is that the divergence-free part be tangential to the boundary. In our discrete setting, a sufficient condition to ensure this condition is that v| ∂T = 0 which ensures that ∇×w is tangential to the boundary. Given these boundary conditions the sparse linear system can be solved efficiently using a conventional conjugate gradient technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Discrete Curl</head><p>The condition in Eq. 9 suggests the definition of a discrete Curl operator. For every w ∈ C and a given node x i , we define:</p><formula xml:id="formula_14">(Curl w)(x i ) = ∑ T k ∈N (i) (∇φ ik × w k ) |T k | (10)</formula><p>Therefore, the critical point v of G satisfies the condition Curl(∇× v) = Curl ξ as in the smooth case. Notice, that, here again, this discrete equation is valid in the differential case: it corresponds to Eq. ( <ref type="formula">1</ref>) after we apply the curl operator to each side of the equality.</p><p>This discrete Curl operator at a node x i is the volume-weighted sum of intuitive terms: each cross product within a tetrahedron represents the vorticity of the component of the input vector field tangent to the face opposite to x i . This vorticity indicates the direction and magnitude of a small paddle wheel that would create this vector field locally. Finally, we prove in Appendix C that Curl(∇u) = 0 for any scalar field u ∈ L. Again, this is the discrete analog of the corresponding identity from vector calculus, further justifying the name Curl for the discrete operator just defined.</p><p>Figure <ref type="figure">4</ref>: 3D Vector Field Decomposition: A 3D field (left, hedgehog visualization) reveals very simple curl-free (middle) and divergence-free (right, line vortex) fields after processed by our discrete decomposition; in this particular case, the harmonic part is a large, almost constant vector field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Complete Decomposition</head><p>Once the divergence-free part and the curl-free part have been uniquely defined, the original field can be uniquely rewritten as a sum of three components: ξ = ∇u + ∇×v + h, matching the smooth Helmholtz-Hodge decomposition (Eq. 1). The last cell-centered vector field h is easily found by subtracting ∇u and ∇×v from the initial field ξ on a per-tetrahedron basis. This field h is traditionally called harmonic in the smooth case, as it is both divergence and curl free. Interestingly, this discrete vector field is also divergencefree and curl-free in the discrete sense. Indeed, if we apply our Div operator to Eq. 1, we obtain Div ξ = Div(∇u) + Div(h) since Div is linear and the discrete divergence of a rotational field is null as shown in Appendix C. Since u satisfies Eq. 6 at every node of the domain T , we conclude that Div h = 0. Similarly, by applying Curl to Eq. 1, we obtain: Curl h = 0. Thus, our decomposition satisfies all the fundamental properties of the smooth Helmholtz-Hodge decomposition: our discrete operators are consistent with their smooth counterparts.</p><p>This discrete harmonic term h contains the non-integrable component of the field, i.e., the part that can not be expressed as deriving from potential fields: this corresponds to an incompressible, irrotational flow, and is often in practice a small or near constant vector field when fluid flows issued from fluid mechanics simulations are used. Notice however that this term can be rather large for flows on high-genus volumes.</p><p>Notice finally that our 3D results can also be used for 2D flows, but it then reduces to the 2D decomposition method proposed in <ref type="bibr" target="#b22">[23]</ref>, where the curl operator is particularly simpler (the curl is just a scalar in 2D, while it is a vector in 3D). We use this 2D decomposition in some of our figures to exemplify the characteristics of our decomposition, as it provides a much simpler visual understanding.</p><p>Limitations Although the implementation of our method within a tet mesh library is straightforward, it is not without limitations. First, our decomposition requires solving a global, linear system. Conjugate gradient solvers with good preconditioners being readily available, this is not a numerical issue in practice (although the condition number of our linear system increases if the tets are degenerated) as it only takes less than a second for a datasize of several thousand nodes. Nevertheless, this is more computationally intensive than a purely local method such as <ref type="bibr" target="#b10">[11]</ref>. As already pointed out Figure <ref type="figure">5</ref>: Feature Detection and Smoothing. The leftmost vector field (visualized with LIC) is filtered linearly (middle): the small features do disappear, but the remaining ones have been significantly attenuated and displaced by the isotropic smoothing. On the other hand, our non-linear smoothing (right) does preserve the major features intact, while still removing the noise: this will provide a better scale-space.</p><p>for 2D vector fields <ref type="bibr" target="#b21">[22]</ref>, there is however a significant advantage in finding a varationally-motivated decomposition: the global nature of this approach makes it very robust to both the irregularity of the 3D mesh, and the vector field noise. Since all the main smooth properties are also preserved, we argue that the extra computational cost is well spent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Multiscale Vector Field Description</head><p>While breaking down a discrete vector field into intuitive, simpler components is helpful, complex flows can however be overwhelmingly intricate with phenomena happening at all scales. For an accurate analysis and visualization of such flows, as well as for an efficient handling of their inherent complexity, we need to develop adequate tools that highlight the major phenomena present in the data. In this section, we propose a simple technique to provide a multiscale description of an arbitrary vector field to remedy this situation, while being compatible with the previous decomposition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Necessity of Multiscale Description</head><p>A visual depiction of complex vector fields often fails to convey the general "trend" of the flow at first sight: multiple tiny vortices or other local phenomena creates visual noise in the visualization of what could otherwise be a fairly steady flow. Macroscopic manipulation of vector field data, for visualization for instance, can also be seriously impaired by the sheer size of data, even if extremely small-scale phenomena are often not relevant. These issues are traditionally addressed by multiscale methods in graphics. Research in vision has been also focusing on the development, based on empirical studies of our visual system, of the closely-related notion of scale space <ref type="bibr" target="#b14">[15]</ref> for object recognition and segmentation of images. In order to facilitate the analysis and visualization of complex vector fields, we present next a multiscale representation that helps separating small-scale phenomena from large-scale features. Combined with the discrete Hodge decomposition, this provides a powerful and intuitive tool for vector field analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Smoothing Potential Fields</head><p>The key idea to obtain a multiscale representation is to perform filtering of the potentials, instead of the vector field itself as was done in <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b3">4]</ref>. Indeed, if we were to smooth the potential field u, its gradient would still represent a curl-free field, where the small scale sources and sinks would have been simply eliminated. Likewise, the curl of a smoothed out field v would always represent a divergence-free field, where only the large-scale vortices remains. Thus, we are consistent with the initial decomposition all along the smoothing process, preserving the fundamental decomposition of the flow even across scales.</p><p>Several smoothing techniques can be used for both potentials u and v. A linear scale-space <ref type="bibr" target="#b14">[15]</ref> can be easily obtained by successive Laplace filtering of the potentials, as was proposed in <ref type="bibr" target="#b3">[4]</ref>. However, significant reduction of amplitude may happen due to the linearity of the smoothing operator: small vortices do disappear during filtering, but large vortices decreases in magnitude and get shifted (see Figure <ref type="figure">5</ref>). To remedy this effect, non-linear filtering can be used instead as it better preserves salient features <ref type="bibr" target="#b8">[9]</ref>. A large number of anisotropic and/or non-linear smoothing have been proposed, mostly following initial work in image processing by Perona and Malik <ref type="bibr" target="#b18">[19]</ref>. Any of these smoothing techniques can be applied in our context <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b17">18]</ref>. In the next section, we focus on the two smoothing procedures we implemented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Implementation</head><p>To create a linear scale-space, we perform independent Laplacian smoothing of both u and v, directly onto the irregular grid as in <ref type="bibr" target="#b5">[6]</ref>. This smoothing operation can be done very efficiently as we can reuse the discrete Laplacian matrix we already set up for the discrete Hodge decomposition (see Section 2.2). This amounts to a convolution of the potential fields by a Gaussian <ref type="bibr" target="#b3">[4]</ref>, eliminating the small variations of the potentials, which in turn eliminates the small features of the original field. Mathematically, we are simply integrating four diffusion equations:</p><formula xml:id="formula_15">∂u ∂t = k u ∇ 2 u ∂v x ∂t = k v ∇ 2 v x ∂v y ∂t = k v ∇ 2 v y ∂v z ∂t = k v ∇ 2 v z</formula><p>where k u and k v can be chosen independently. The boundary conditions (u| ∂T = 0 and v| ∂T = 0) are maintained during the smoothing to preserve the properties of the vector field decomposition. We also offer the option of creating a multiscale description of the flow by performing non-linear smoothing of u and v directly on the irregular grid too, using the methods developed in <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b17">18]</ref>. This can be done both in 2D and in 3D, and has the desired effect of smoothing out small-scale features fast while mostly preserving the large-scale phenomena as can be seen on Figure <ref type="figure">5</ref>. The implementation is straightforward as this technique is also based on the same discrete Laplacian operator, additionally weighted locally to make the diffusion non-linear.</p><p>In practice, having both tools available is particularly useful: Laplacian filtering can suppress small details extremely fast in most flows without severely affecting the main features; there is however a noticeable shift in the features' location due to the isotropic diffusion process, as demonstrated in Figure <ref type="figure">5</ref>. The non-linear filtering, on the other hand, is much needed when small-scale features with strong amplitude (such as small, but powerful vortices) are present, as these features may be the main interest of the flow. It is, however, more time consuming (a factor of ten is often observed). Compared to previous smoothing techniques <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b3">4]</ref>, what we presented in this section works conjunctly with the discrete decomposition, providing an enhanced tool for vector field manipulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Applications and Results</head><p>The different computational tools we presented have a large variety of applications in graphics. In this section, we show how the multiscale decomposition we propose and the discrete operators we derived are useful, with little or no extra work, for vector field processing, visualization, and even simulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Vector Field Processing Toolbox</head><p>With the multiscale decomposition described in the previous section, a vector field processing toolbox can easily be designed, by extending what was done for 3D geometry in <ref type="bibr" target="#b11">[12]</ref>. Indeed, high frequencies can be eliminated through smoothing, but could also be extracted or even amplified. For instance, if ξ is smoothed into a new field ξ, the difference ξ -ξ will represent the details of the original signal. Simple linear combinations of this sort will allow us to extract and process any range of "frequencies" from arbitrary fields. Additionally, the Helmholtz-Hodge decomposition adds more degrees of freedom in the range of possible manipulation, since we can also target more specific signal components: at each scale, we have the divergence-free and the curl-free component. It is a straightforward operation to, for example, remove the small-scale divergence-free component of a discrete vector field. Similarly, our tools allows to resample a divergence-free vector field on a different grid, while preserving its divergence-free nature. We show vector field processing in Figure <ref type="figure" target="#fig_0">6</ref> where a field is enhanced, amplifying the amount turbulence initially present in the data. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Visualization Toolbox</head><p>Visualization can be a very strong help in "understanding" a vector field: van Wijk <ref type="bibr" target="#b27">[28]</ref> for instance uses ink advection and decay to perturb an initial image according to the flow in a realtime 2D simulation/visualization, creating a very intuitive depiction of the flow characteristics. The conjunction of a multiscale description and a decomposition of the vector field that we presented makes for a very nice framework for developing additional visualization tools. In this section, we explore some basic visualization tools that we have implemented in our framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Feature Detection</head><p>A lot of work has been targeted at finding critical points of vector fields, as originally attempted in <ref type="bibr" target="#b10">[11]</ref>. These critical points are often classified depending on the eigenvalues of the matrix ∇ξ at a point in space. In our case, however, critical points of the flow can be found as critical points of the potentials as we describe next. Notice that testing for critical points on potential fields (that have been found through a global, integral equation) is much less sensitive to noise in the data. We will therefore be less likely to get false positives, a serious problem often observed in previous local methods (see <ref type="bibr" target="#b15">[16]</ref> for instance).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sink and Source Detection</head><p>A sink corresponds to a local maximum of the potential u. Following what was done for 2D fields in <ref type="bibr" target="#b21">[22]</ref>, we define a vertex of T to be a local maximum if the value of u at that vertex is larger that the neighbors' values of u. Conversely, a source is a local minimum, easy to define on a 3D irregular grid by simply exploring the 1-ring neighbors. Additionally, a larger support can be used, along with a threshold, to prune out all the minor details if needed. Figure <ref type="figure">5</ref> shows the sinks and sources for a given flow, and for its smoothed version.</p><p>Vortex Detection Each vector in the potential v represents a direction of vorticity and an amplitude of the local vorticity. Very similarly, we can also define vortices as local extrema of the scalar field ||v||. One can also detect the vortices in a given direction d by finding local maxima of the field v • d. Finally, one can track a tube vortex (a curve around which a swirl is happening) by finding a local extremum in magnitude, then using the vorticity direction to track the piecewise-linear curve of maximum vorticity.</p><p>Higher-order features One could also find more complex features, such as saddles and spiral saddles (where there is a vortex in a plane, and a source in the orthogonal direction to the plane), by finding higher-order critical points of the two potentials u and v. This idea, initially proposed by <ref type="bibr" target="#b22">[23]</ref>, can also be implemented rather simply in our context, as inflexion points and saddle points can be detected on discrete fields by local exploration again. Further work needs to be done to really provide the user with a whole catalog of features, analogous to the types defined by Abraham and Shaw <ref type="bibr" target="#b1">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Tangential 3D Vector Fields in Higher Space</head><p>Although we presented both our Helmholtz-Hodge decomposition and our multiscale representation for 3D vector fields in 3D, we can extend it to 3D vector fields living on a 3-manifold embedded in a higher dimensional space. The vector should be seen as living in the tangent space of this 3-manifold. All the derivations are still valid, as they were only using quantities intrinsic to the manifold. The only difference for the decomposition algorithm is that the boundary conditions have to changed to maintain uniqueness. However, just like in the 2D case <ref type="bibr" target="#b22">[23]</ref>, one can add the constraint that the volume integral of the potentials u and v must be zero: this ensures a unique pair of potentials, and preserves the Helmholtz-Hodge decomposition qualities even for arbitrary embedding. Figure <ref type="figure">1</ref> shows the equivalent 2D decomposition for a surface embedded in 3D. The 3D equivalent can be used for space-time simulation, for example. Notice finally that the Laplacian smoothing turns into a Laplace-Beltrami smoothing for 3D non-flat manifolds, as previously used in <ref type="bibr" target="#b6">[7]</ref>: we can therefore still build a space-scale easily even for these higher-dimensional cases. Developing feature-preserving algorithms for non-flat manifolds is however, still an active research theme. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Vector Fields for Animation</head><p>Our discrete 3D vector field decomposition also has applications in computer animation and simulation. We review a few connections we have explored so far.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fluid Animation</head><p>One of the most recognizable features of most fluid flows is the presence of intricate swirls and complex turbulence. Fluid mechanics and recent work in computer graphics have been able to obtain very convincing simulation when simulating incompressible fluids such as water. Keeping the flow divergence-free is essential in getting all the nice vortices we are accustomed to. As mentioned early on in this paper, most simulations use a projection to get rid of the curl-free components that may appear during simulation via a finitedifference approach on regular grids <ref type="bibr" target="#b24">[25]</ref>. Similarly, preventing the damping of smoke vortices by detecting them and slightly increasing their energy has been proven important for the visual rendering of flows <ref type="bibr" target="#b9">[10]</ref>. Our approach allows to extend these routine procedures to arbitrary grids, opening the possibilities for adaptive simulation: arbitrary boundaries and arbitrary refinements can not be easily dealt with regular grids, whereas arbitrary grids offer a much needed flexibility.</p><p>The previously-mentioned vector-field processing toolbox can also be use for "flow design" in animation: a given wind field can be edited and tweaked as wished using our computational tools. An animator can for instance sketch a vector field roughly, and our machinery can turn this coarse field description into a purely vorticial field, even adding small details if necessary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Animation of Deformable Objects</head><p>Linear elasticity is often used as a particularly simple model for deformable object simulation. Internal forces are derived from the deformation field, that is, from the displacements from the reference shape. In particular, in Debunne et al. <ref type="bibr" target="#b5">[6]</ref> for instance, Hooke's law is expressed as a linear combination of the Laplacian of the deformation field ∇ 2 d, representing the propagation of deformation (pure compression), and of the gradient of the divergence of the deformation field, ∇(∇ • d), representing a volume-preserving force. The numerical discretization of the Laplacian was exactly similar to our discrete Laplacian (see Section 2.2). A derivation of the second operator was also proposed, but the numerical quality was far below threshold compared to the Laplacian. Our novel operators introduced in this paper result in another discretization, fully compatible with the Laplacian, therefore guaranteeing better numerical quality. Indeed, in the smooth as well as in the discrete case, the following identity holds:</p><formula xml:id="formula_16">∇(∇ • w) = ∇×(∇×w) + ∇ 2 w</formula><p>This means that the volume preservation force can be computed using the Laplacian and the Curl operator we defined, providing a coherent set of operators. Notice finally that we do not need the full-blown decomposition, but only the local discrete operators we derived. We will exploit this application of Div and Curl for elasticity in a future paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion and Discussion</head><p>In this paper, we have developed a discrete multiscale vector field decomposition, along with a number of computational tools to manipulate and analyze vector fields. The computations involved are very straightforward, and the properties exactly match the differential analog known as the Helmholtz-Hodge decomposition. Furthermore, the discrete operators developed along the way have a very intuitive justification, as well as a solid variational foundation. A scale-space can also be constructed by repeated smoothing, while preserving the initial decomposition across all scales. The result is a versatile, multi-purpose set of tools that can be used for several vector field processing applications, such as visualization, analysis, or even animation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Future Work</head><p>We plan on further exploring the visualization possibilities of our decomposition. Using such a multiscale decomposition on animated vector fields also seems like a natural continuation of our work. Finally, our decomposition is tightly related to the more general field of differential forms and exterior calculus <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b12">13]</ref>, tying in nicely with the field of Clifford Algebra. We will also explore how our new results can be used in dynamics, for Lie derivatives for instance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Divergence Operator</head><p>Below we derive the necessary conditions for a discrete, piecewise-linear scalar potential field u to be the unique minimum of the quadratic energy:</p><formula xml:id="formula_17">F(u) = 1 2 T (∇u -ξ) 2 dV</formula><p>Using basic calculus and the fact that u(x) = ∑ i φ i (x) u i , we can write: Therefore the condition for u to be a critical point of F is:</p><formula xml:id="formula_18">∂F(u) ∂u i = T ∇φ i • (∇u -ξ) dV = 0</formula><p>This integral can now be rewritten as a direct sum over the tetrahedra directly adjacent to the node i, since ∇φ i is 0 everywhere else. Since ∇u and ξ are constant inside each tetrahedron, Eq. ( <ref type="formula">3</ref>) is thus easily verified, as well as the correct expression for the discrete divergence operator Div.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Curl Operator</head><p>Now we derive the conditions for a discrete, piecewise-linear vector potential field v to be the unique minimum of the quadratic energy:</p><formula xml:id="formula_19">G(v) = 1 2 T (∇×v -ξ) 2 dV</formula><p>Using basic calculus and the fact that v(x) = ∑ i φ i (x) v i , we can write: where we also used the fact that, for any constant vector v i and for an arbitrary function φ i , ∇×(φ i v i ) = ∇φ i × v i . Finally, the necessary condition of minimality for G is simply:</p><formula xml:id="formula_20">dG(v) dv i = T ∇φ i × (∇×v -ξ) dV = 0</formula><p>Here again, since ∇φ i is 0 everywhere except on the tetrahedra adjacent to the node i, and since ∇×v and ξ are constant inside each tetrahedron, we directly get Eq. 8, which in turn leads to the natural definition of the discrete curl operator Curl.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Discrete Calculus Identities</head><p>Here we show that, away from the boundary, the discrete operators Div and Curl satisfy the following identities as in smooth vector calculus :</p><formula xml:id="formula_21">Div(∇ × v) = 0<label>( 17)</label></formula><p>Curl(∇u) = 0 <ref type="bibr" target="#b17">(18)</ref> where u ∈ L and v ∈ L are piecewise linear scalar and vector fields Now to prove <ref type="bibr" target="#b16">(17)</ref> note that for any node x p :</p><formula xml:id="formula_22">(Div(∇ × v))(x p ) = ∑ T k ∈N (p) ∇φ pk • (∇ × v) k |T k | = ∑ T k ∈N (p) ∇φ pk • ∑ i∈T k ∇φ ik × v i |T k | = ∑ T k ∈N (p) ∑ i∈T k v i • (∇φ pk × ∇φ ik ) |T k | = ∑ T k ∈N (p) ∑ i∈T k v i • e ip 6 .</formula><p>The third equality is from a basic identity about scalar triple products and the last one is from the result about tetrahedral volume derived above. This resulting sum is null. Indeed, for each vertex i neighbor of p, the oriented edges e ip are opposite to the edge ip, and they form a closed loop around the edge ip: their sum is therefore zero. To prove (18) we use similar reasoning and show that: </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Vector Field Processing: An initial flow (top left) is decomposed in divergence-free and curl-free components; these components are then enhanced (resp. bottom left and bottom right), and summed back to create a new, more turbulent flow (top right).</figDesc><graphic coords="6,54.00,553.08,239.10,123.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: 3D Vector Field Decomposition: The vector field of a 3D dataset, showing turbulence behind a moving car, has been decomposed using our technique. Left: we represent the purely divergence-free part ∇×v of the vector field, evidenced by particle tracing and a LIC cross-section of this component. Right: this time, the potential v is represented. The false color cross-sections represent the magnitudes of these fields.</figDesc><graphic coords="7,54.00,129.06,239.10,107.95" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>6 .</head><label>6</label><figDesc>T . First we need a simple result about volumes of tetrahedra. For a tetrahedron T let a,b be 2 of its vertices and let e be the edge vector that does not contain these vertices, oriented along the direction ∇φ a × ∇φ b . Then: |T | ∇φ a × ∇φ b = e To see this let f be the face opposite to a, θ e the dihedral angle at edge e, and h a ,h b the heights of vertices a and b above their respective opposite faces. Then |T | ∇φ a × ∇φ b =</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>(</head><label></label><figDesc>Curl(∇u))(x p ) = ∑ T k ∈N (p) ∇φ pk × (∇u) k |T k | = ∑ T k ∈N (p) ∑ i∈T k (∇φ pk × ∇φ ik ) u i |T k | = ∑ T k ∈N (p)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="3,318.00,54.15,244.00,360.46" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="5,106.80,53.97,398.57,133.48" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Another attempt to define such a decomposition was also proposed in<ref type="bibr" target="#b25">[26]</ref>, but in a different context.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors are extremely grateful to Peter Schröder for support, Konrad Polthier for inspiration, Rüdiger Westerman for data, John McCorquodale for feedback, and Alain Bossavit and Melvin Leok for collaboration. This work was supported in part by the NSF (CCR-0133983, DMS-0221666, DMS-0221669, EEC-9529152).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">R</forename><surname>Abraham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Marsden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ratiu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Tensor Analysis, and Applications. Applied Mathematical Sciences</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<date type="published" when="1988">1988</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Abraham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Shaw</surname></persName>
		</author>
		<title level="m">The Geometry of Behavior</title>
		<meeting><address><addrLine>Santa Cruz, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Ariel Press</publisher>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Vector Potentials in Three-Dimensional Non-smooth Domains</title>
		<author>
			<persName><forename type="first">C</forename><surname>Amrouche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bernardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dauge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Girault</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Meth. Appl. Sci</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="823" to="864" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<title level="m">Vortex Tracking in Scale-Space. Symposium on Visualization (Joint Eurographics-IEEE TVCG</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Imaging Vector Fields Using Line Integral Convolution</title>
		<author>
			<persName><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Leedom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="263" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Dynamic Real-Time Deformations Using Space &amp; Time Adaptive Sampling</title>
		<author>
			<persName><forename type="first">G</forename><surname>Debunne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M.-P</forename><surname>Cani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001-08">August 2001</date>
			<biblScope unit="page" from="31" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Implicit Fairing of Arbitrary Meshes using Diffusion and Curvature Flow</title>
		<author>
			<persName><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Schr Öder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="317" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Anisotropic Feature-Preserving Denoising of Height Fields and Bivariate Data</title>
		<author>
			<persName><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Schr Öder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="145" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Anisotropic Diffusion in Vector Field Visualization on Euclidean Domains and Surfaces</title>
		<author>
			<persName><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Preuer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Vis. and Computer Graphics</title>
		<imprint>
			<biblScope unit="page" from="139" to="149" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visual Simulation of Smoke</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">W</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="23" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Tool for Visualizing the Topology of Three-Dimensional Vector Fields</title>
		<author>
			<persName><forename type="first">A</forename><surname>Globus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Levit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lasinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="33" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Multiresolution Signal Processing for Meshes</title>
		<author>
			<persName><forename type="first">I</forename><surname>Guskov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Schr Öder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1999-08">August 1999</date>
			<biblScope unit="page" from="325" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Discrete Exterior Calculus</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Hirani</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<pubPlace>Caltech</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Collapsing Flow Topology using Area Metrics</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">C D</forename><surname>Leeuw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Liere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="349" to="354" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Scale-Space Theory: A Basic Tool for Analysing Structures at Different Scales</title>
		<author>
			<persName><forename type="first">T</forename><surname>Lindeberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Applied Statistics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="225" to="270" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Computing Singularities of 3D Vector Fields with Geometric Algebra</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rockwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="283" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Multilevel Adaptive Methods for Partial Differential Equations -Chapter 2: The Finite Volume Method</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">F</forename><surname>Mccormick</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>SIAM</publisher>
			<biblScope unit="volume">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Discrete Differential-Geometry Operators for Triangulated 2-Manifolds</title>
		<author>
			<persName><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Schr Öder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisMath</title>
		<meeting>VisMath</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Scale-space and Edge Detection using Anisotropic Diffusion</title>
		<author>
			<persName><forename type="first">P</forename><surname>Perona</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Malik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="629" to="639" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Computing Discrete Minimal Surfaces</title>
		<author>
			<persName><forename type="first">U</forename><surname>Pinkall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Polthier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Experimental Mathematics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="15" to="36" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Computational Aspects of Discrete Minimal Surfaces</title>
		<author>
			<persName><forename type="first">K</forename><surname>Polthier</surname></persName>
		</author>
		<author>
			<persName><surname>Hass</surname></persName>
		</author>
		<author>
			<persName><surname>Hoffman</surname></persName>
		</author>
		<author>
			<persName><surname>Jaffe</surname></persName>
		</author>
		<author>
			<persName><surname>Rosenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Clay Summer School on Global Theory of Minimal Surfaces</title>
		<meeting>the Clay Summer School on Global Theory of Minimal Surfaces</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Polthier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Preuss</surname></persName>
		</author>
		<title level="m">Variational Approach to Vector Field Decomposition. Scientific Visualization, Springer Verlag (Proc. of Eurographics Workshop on Scientific Visualization</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Identifying Vector Fields Singularities using a Discrete Hodge Decomposition</title>
		<author>
			<persName><forename type="first">K</forename><surname>Polthier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Preuss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization and Mathematics III</title>
		<editor>
			<persName><forename type="first">H</forename><forename type="middle">C</forename><surname>Hege</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Polthier</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Anisotropic Nonlinear Diffusion in Flow Visualization</title>
		<author>
			<persName><forename type="first">T</forename><surname>Preuer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="325" to="332" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Stable fluids</title>
		<author>
			<persName><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="121" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Linear Anisotropic Mesh Filtering</title>
		<author>
			<persName><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<idno>RC2213</idno>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. IBM Reserach Report</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A Topology Simplification Method for 2D Vector Fields</title>
		<author>
			<persName><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="359" to="366" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Image-based Flow Visualization</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="745" to="754" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A Level-set Method for Visualization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="147" to="154" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
