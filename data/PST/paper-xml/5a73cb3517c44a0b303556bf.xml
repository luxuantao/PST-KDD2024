<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">EXPLORING ARCHITECTURES, DATA AND UNITS FOR STREAMING END-TO-END SPEECH RECOGNITION WITH RNN-TRANSDUCER</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2018-01-02">2 Jan 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Kanishka</forename><surname>Rao</surname></persName>
							<email>kanishkarao@google.com</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Has ¸im Sak</orgName>
								<orgName type="institution" key="instit2">Rohit Prabhavalkar Google Inc</orgName>
								<address>
									<settlement>Mountain View</settlement>
									<region>CA</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">EXPLORING ARCHITECTURES, DATA AND UNITS FOR STREAMING END-TO-END SPEECH RECOGNITION WITH RNN-TRANSDUCER</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2018-01-02">2 Jan 2018</date>
						</imprint>
					</monogr>
					<idno type="arXiv">arXiv:1801.00841v1[cs.CL]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>ASR</term>
					<term>end-to-end</term>
					<term>sequence-to-sequence models</term>
					<term>recurrent neural networks transducer</term>
					<term>wordpiece</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We investigate training end-to-end speech recognition models with the recurrent neural network transducer (RNN-T): a streaming, all-neural, sequence-to-sequence architecture which jointly learns acoustic and language model components from transcribed acoustic data. We explore various model architectures and demonstrate how the model can be improved further if additional text or pronunciation data are available. The model consists of an 'encoder', which is initialized from a connectionist temporal classification-based (CTC) acoustic model, and a 'decoder' which is partially initialized from a recurrent neural network language model trained on text data alone. The entire neural network is trained with the RNN-T loss and directly outputs the recognized transcript as a sequence of graphemes, thus performing end-to-end speech recognition. We find that performance can be improved further through the use of sub-word units ('wordpieces') which capture longer context and significantly reduce substitution errors. The best RNN-T system, a twelve-layer LSTM encoder with a two-layer LSTM decoder trained with 30,000 wordpieces as output targets achieves a word error rate of 8.5% on voice-search and 5.2% on voice-dictation tasks and is comparable to a state-of-the-art baseline at 8.3% on voicesearch and 5.4% voice-dictation.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>The current state-of-the-art automatic speech recognition (ASR) systems break down the ASR problem into three main sub-problems: acoustic, pronunciation and language modeling. Speech recognition involves determining the most likely word sequence, W = w 1 , ..., w n , given an acoustic input sequence, x = x 1 , ..., x T , where T represents the number of frames in the utterance:</p><formula xml:id="formula_0">W * = argmax W P (W |x),<label>(1)</label></formula><p>which is typically decomposed into three separate models, as follows:</p><formula xml:id="formula_1">W * = argmax W φ P (x, φ|W )P (W )<label>(2)</label></formula><p>≈ argmax W,φ p(x|φ)P (φ|W )P (W )</p><p>The acoustic model, p(x|φ), predicts the likelihood of the acoustic input speech utterance given a phoneme sequence, φ; for conditional models that directly predict P (φ|x), the likelihood is typically replaced with a scaled likelihood obtained by dividing the posterior with the prior, P (φ), in socalled hybrid models <ref type="bibr" target="#b0">[1]</ref>. Deep recurrent neural networks with long short-term memory (LSTM) cells <ref type="bibr" target="#b1">[2]</ref> have recently been shown to be ideal for this task <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b4">5]</ref>. The pronunciation model, P (φ|W ), is typically built from pronunciation dictionaries curated by expert human linguists, with back-off to a grapheme-to-phoneme (G2P) model <ref type="bibr" target="#b5">[6]</ref> for out of dictionary words. Finally, an N-gram model trained on text data may be used as a language model, P (W ).</p><p>Recently, there has been considerable interest in training end-to-end models for ASR <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9]</ref>, which directly output word transcripts given the input audio. <ref type="foot" target="#foot_0">1</ref> Thus, these models are much simpler than conventional ASR systems as a single neural network can be used to directly recognize utterances, without requiring separately-trained acoustic, pronunciation and language model components. A particular class of architecures known as sequence-to-sequence models <ref type="bibr" target="#b9">[10]</ref> are particularly suited for end-to-end ASR as they include an encoder network which corresponds to the acoustic model of a conventional system and a decoder network which corresponds to the language model.</p><p>One drawback of typical encoder-decoder type architectures (e.g., <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b8">9]</ref>) is that the entire input sequence is encoded before the output sequence may be decoded and thus these models cannot be used for real-time streaming speech recognition. Several streaming encoder-decoder architectures have been proposed previously, including the neural transducer <ref type="bibr" target="#b10">[11]</ref>, the recurrent neural aligner (RNA) <ref type="bibr" target="#b11">[12]</ref>, and the recurrent neural network transducer (RNN-T) <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14]</ref>. In particular, these architectures allow the output to be decoded as soon as the first input is encoded, without introducing additional latency incurred when processing the entire utterance at once. In this work we only consider streaming recognition architectures, specifically the RNN-T model.</p><p>Despite recent work on end-to-end ASR, conventional systems still remain the state-of-the-art in terms of word error rate (WER) performance. For example, in our previous work <ref type="bibr" target="#b14">[15]</ref> we evaluated a number of end-to-end models including attention-based models <ref type="bibr" target="#b6">[7]</ref> and RNN-T <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14]</ref> trained on ∼12,500 hours of transcribed training data; although end-to-end approaches were found to be comparable to a state-of-the-art context-dependent phone-based baseline on dictation test sets, these models were found to be significantly worse than the baseline on voice-search test sets. End-to-end systems are typically trained using transcribed acoustic data sets, which are relatively expensive to generate and thus much smaller than text-only data sets, which are used to train LMs in a traditional speech recognizer. A deficiency of end-to-end systems appears to be in their language modeling capacity <ref type="bibr" target="#b14">[15]</ref> which may be because large text-only data are not utilized in end-to-end systems.</p><p>In this work we explore a particular sequence-to-sequence architecure, RNN-T, and show how text and pronunciation data may be included to improve end-to-end ASR performance. Another contribution of this work is to investigate the use of wordpieces <ref type="bibr" target="#b15">[16]</ref>, which have been explored previously in the context of machine translation, as a sub-word unit for end-to-end speech recognition.</p><p>The paper is organized as follows: in Section 2 we describe the RNN-T and how it may be used for streaming recognition. Section 3 describes how the RNN-T is trained including the units, architectures and pre-training parts of the model. The experimental setup including the baseline system are detailed in Section 4. Section 5 compares the word error rate performance of various RNN-T models and the baseline to show relative improvement. We find that the techniques introduced in this work mostly improve the language modeling of the RNN-T, Section 6 shows some select examples of such improved recognition. A concluding summary and acknowledgements are in Section 7 and Section 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RNN-TRANSDUCER</head><p>The RNN-T was proposed by Graves <ref type="bibr" target="#b12">[13]</ref> as an extension to the connectionist temporal classification (CTC) <ref type="bibr" target="#b16">[17]</ref> approach for sequence labeling tasks where the alignment between the input sequence, x, and the output targets y is unknown. This is accomplished in the CTC formulation by introducing a special label, called the blank label, which models the probability of outputting no label corresponding to a given input frame. CTC has been widely used in previous works to train end-toend ASR models <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b18">19]</ref>. However, a major limitation of Fig. <ref type="figure">1</ref>. The RNN-T model. The model consists of an encoder network, which maps input acoustic frames into a higher-level representation, and a prediction and joint network which together correspond to the decoder network. The decoder is conditioned on the history of previous predictions.</p><p>CTC is its assumption that model outputs at a given frame are independent of previous output labels: y t ⊥ ⊥ y j |x, for t &lt; j.</p><p>The RNN-T model, depicted in Figure <ref type="figure">1</ref>, consists of an encoder (referred to as the transcription network in <ref type="bibr" target="#b12">[13]</ref>), a prediction network and a joint network; as described in <ref type="bibr" target="#b14">[15]</ref>, the RNN-T model can be compared to other encoder-decoder architectures such as "listen, attend, and spell" <ref type="bibr" target="#b6">[7]</ref>, if we view the combination of the prediction network and the joint network as a decoder. The encoder is an RNN which converts the input acoustic frame x t into a higher-level representation, h enc t , and is analogous to a CTC-based AM in a standard speech recognizer. Thus, as in CTC, the output of the encoder network, h enc t , is conditioned on the sequence of previous acoustic frames x 0 , • • • , x t .</p><formula xml:id="formula_3">h enc t = f enc (x t ),<label>(4)</label></formula><p>The RNN-T removes the conditional independence assumption in CTC by introducing a prediction network, an RNN that is explicitly conditioned on the history of previous non-blank targets predicted by the model. Specifically, the prediction network receives as input the last non-blank label, y u−1 , to produce as output h dec u .</p><formula xml:id="formula_4">h dec u = f dec (y u−1 ).<label>(5)</label></formula><p>Finally, the joint network, is a feed-forward network that combines the outputs of the prediction network and the encoder to produce logits (z t,u ) followed by a softmax layer to produce a distribution over the next output symbol (either the blank symbol or one of the output targets).</p><formula xml:id="formula_5">z t,u = f joint (h enc t , h dec u )<label>(6)</label></formula><p>We use the same form for f joint as described in <ref type="bibr" target="#b13">[14]</ref>. The entire network is trained jointly to optimize the RNN-T loss <ref type="bibr" target="#b12">[13]</ref>, which marginalizes over all alignments of target labels with blanks as in CTC, and is computed using dynamic programming.</p><p>During each step of inference, the RNN-T model is fed the next acoustic frame x t and the previously predicted label y u−1 , from which the model produces the next output label probabilities P (y|t, u). If the predicted label, y u , is non-blank, then the prediction network is updated with that label as input to generate the next output label probabilities P (y|t, u + 1). Conversely, if a blank label is predicted then the next acoustic frame, x t+1 , is used to update the encoder while retain the same prediction network output resulting in P (y|t + 1, u). In this way the RNN-T can stream recognition results by alternating between updating the encoder and the prediction network based on if the predicted label is a blank or non-blank. Inference is terminated when blank is output at the last frame, T .</p><p>During inference, the most likely label sequence is computed using beam search as described in <ref type="bibr" target="#b12">[13]</ref>, with a minor alteration which was found to make the algorithm less computationally intensive without degrading performance: we skip summation over prefixes in pref(y) (see Algorithm 1 in <ref type="bibr" target="#b12">[13]</ref>), unless multiple hypotheses are identical.</p><p>Note that unlike other streaming encoder-decoder architectures such as RNA <ref type="bibr" target="#b11">[12]</ref> and NT <ref type="bibr" target="#b10">[11]</ref>, the prediction network is not conditioned on the encoder output. This allows for the the pre-training of the decoder as a RNN language model on text-only data as described in Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">UNITS, ARCHITECTURES AND TRAINING</head><p>We investigate the use of graphemes and sub-words (wordpieces) as output lexical units in RNN-T models. For the graphemes, we use letters (a-z), digits (0-9), special symbols (&amp;.'%/-:) and a space symbol (&lt;space&gt;). The space symbol is used for segmenting recognized grapheme sequences to word sequences.</p><p>State-of-the-art large vocabulary speech recognition systems recognize millions of different words, inference for RNN-T with that many output labels would be impractically slow. Therefore, as subword units, we use wordpieces as described in <ref type="bibr" target="#b15">[16]</ref>. We train a statistical wordpiece model with word counts obtained from text data for segmenting each word individually into subwords. An additional space symbol is included in subword units. An example segmentation for the sentence tortoise and the hare is &lt;tor&gt; &lt;to&gt; &lt;ise&gt; &lt;space&gt; &lt;and&gt; &lt;space&gt; &lt;the&gt; &lt;space&gt; &lt;ha&gt; &lt;re&gt;. Wordpieces have be shown to benefit end-to-end recognition <ref type="bibr" target="#b19">[20]</ref> since they offer a balance with longer context than graphemes and a tunable number of labels. Since the wordpiece model is based on word frequencies, more common words appear as a single label. A vocabulary of 1,000 generated wordpieces includes words like 'mall', 'remember' and 'doctor' while a vocabulary of 30,000 wordpieces also includes less common words like 'multimedia', 'tungsten' and '49er'. The wordpiece models may also output any word that the grapheme model may; we find that all the graphemes are included in the wordpiece vocabularies.</p><p>For the encoder networks in RNN-T models, we experimented with deep LSTM networks (5 to 12 layers). For the decoder networks, we used a stack of 2 layer LSTM network, a feed-forward layer and a softmax layer. In addition to training models with random initialization of parameters, we explored variations of initializing encoder and decoder network parameters from pre-trained models. It has been previously shown that initializing RNN-T encoder parameters from a model trained with the CTC loss is beneficial for the phoneme recognition task <ref type="bibr" target="#b13">[14]</ref>. We experimented with initializing encoder networks from models trained with the CTC loss and with initializing LSTM layer parameters in prediction networks from LSTM language models trained on text data. After initialization of encoder and prediction network weights from separate pre-trained models, the entire RNN-T model weights are trained with the RNN-T objective.</p><p>We show one example architecture for the RNN-T wordpiece model in Figure <ref type="figure" target="#fig_0">2</ref>. The figure also shows the pre-trained CTC LSTM acoustic model and LSTM language model architectures used to initialize the encoder and prediction network weights. The dotted arrows indicate the pre-trained layers used to initialize specific layers in the RNN-T model. The encoder networks in RNN-T models are pre-trained with the CTC loss using phonemes, graphemes and wordpieces as output units. We investigate encoder architectures with multitask training using hierarchical-CTC <ref type="bibr" target="#b20">[21]</ref> with various 'hierarchies' of CTC losses at various depths in the encoder network. With hierarchical-CTC the encoder networks are trained with multiple simultaneous CTC losses which was beneficial for grapheme recognition <ref type="bibr" target="#b21">[22]</ref>. After pre-training all CTC losses and additional weights associated with generating softmax probabilities are discarded. For the wordpiece models which have longer duration than graphemes, we employ an additional 'time-convolution' in the encoder network to reduce the sequence length of encoded activations which is similar to the pyramidal sequence length reduction in <ref type="bibr" target="#b6">[7]</ref>. For these models, we used filters covering 3 non-overlapping consecutive activation vectors, thus reducing them to a single activation vector. The LSTM layers in decoder networks are pre-trained as a language model using the graphemes or wordpieces as lexical units. The input to the network is a label (grapheme or wordpiece) in a segmented sentence represented as a one-hot vector. The target for the network is the next label in the sequence and the model is trained with the cross-entropy loss. The weights in the softmax output layer are discarded after pre-training and only the LSTM network weights are used to partially initialize the RNN-T prediction network. For wordpiece language models, we embed labels to a smaller dimension. These embedding weights are also used to initialize the RNN-T wordpiece models.  The encoder network is pre-trained as a hierarchical-CTC network simultaneously predicting phonemes, graphemes and wordpieces at 5, 10 and 12 LSTM layers respectively. A time convolutional layer reduces the encoder time sequence length by a factor of three. The decoder network is trained as a LSTM langauge model predicting wordpieces optimized with a cross-entropy loss. Finally, the RNN-T network weights are initialized from the two pre-trained models, indicated by the dashed lines, and the entire network is optimized using the RNN-T loss.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXPERIMENTAL SETUP</head><p>We compare the RNN-T end-to-end recognizer with a conventional ASR system consisting of separate acoustic, pronunciation and language models. The acoustic model is a CTC trained LSTM that predicts context-dependent (CD) phonemes first fine-tuned with sequence discriminative training as described in <ref type="bibr" target="#b4">[5]</ref> and further improved with word-level edit-based minimum Bayes risk (EMBR) proposed recently by Shannon <ref type="bibr" target="#b22">[23]</ref>. Acoustic models are trained on a set of ∼22 million hand-transcribed anonymized utterances extracted from Google US English voice traffic, which corresponds to ∼18,000 hours of training data. These include voice-search as well as voice-dictation utterances. We use 80-dimensional log mel filterbank energy features computed every 10ms stacked every 30ms to a single 240-dimensional acoustic feature vector. To achieve noise robustness acoustic training data is distorted as described in <ref type="bibr" target="#b23">[24]</ref>. The pronunciation model is a dictionary containing hundreds of thousands of human expert transcribed US English word pronunciations. Additional word pronunciations are learned from audio data using pronunciation learning techniques <ref type="bibr" target="#b24">[25]</ref>. For out-ofdictionary words a G2P model is trained using transcribed word pronunciations. A 5-gram language model is trained with a text sentence dataset which includes untranscribed anonymized speech logs: 150 million sentences each from voice-search and voice-dictation queries, and anonymized typed logs including tens of billion sentences from Google search from various sources. The language model is pruned to 100-million n-grams with a target vocabulary of 4 million and the various sources of text data are re-weighted using interpolation <ref type="bibr" target="#b25">[26]</ref> for the optimal word error rate performance. Single-pass decoding with a conventional WFST is carried out to generate recognition transcripts.</p><p>The RNN-T is trained with the same data as the baseline. The CTC encoder network is pre-trained with acoustic transcribed data and as with the baseline acoustic model the pronunciation model is used to generate phoneme transcriptions for the acoustic data. The RNN-T decoder is pre-trained on the text only data as a LSTM language model, roughly half a billion sentences from the text data are sampled according to their count and the data source interpolation weight (as optimized in the baseline). All RNN-T models are trained with LSTM networks in the tensorflow <ref type="bibr" target="#b26">[27]</ref> toolkit with asynchronous stochastic gradient descent. Models are evaluated using the RNN-T beam search algorithm with a beam of 100 for grapheme models and 25 for wordpiece models and a temperature of 1.5 on the softmax. Word error rate (WER) is re-ported on a voice-search and a voice-dictation test set with roughly 15,000 utterances each.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">RESULTS</head><p>We train and evaluate various RNN-T and incrementally show the WER impact with each improvement.</p><p>A grapheme based RNN-T is trained from scratch (no pretraining) on the acoustic data with a 5-layer LSTM encoder of 700 cells and a 2-layer LSTM decoder of 700 cells. A final 700 unit feed-forward layer and a softmax layer output grapheme label probabilities. We compare this model to a model with identical architecture but with the encoder CTC pre-trained. We find CTC pre-training to be helpful improving WER 13.9%→13.2% for voice-search and 8.4%→8.0% for voice-dictation.</p><p>A model with a deeper 8-layer encoder is also trained with a multi-CTC loss at depth 5 and depth 8 where both losses are optimized for the same grapheme targets. We found training 8-layer models without a multi-loss setup to be unstable which we acknowledge may be addressed with recent advancements in training deeper recurrent models <ref type="bibr" target="#b27">[28]</ref> but are not tested as part of this work. The deeper 8-layer encoder further improves WER 13.2%→12.0% for voice-search and 8.4%→6.9% for voice-dictation.</p><p>To incorporate the knowledge of phonemes and specifically the pronunciation dictionary data we train a 8-layer encoder with hierarchical-CTC with a phoneme target CTC at depth 5 and a grapheme target CTC at depth 8. In this way the network is forced to model phonemes and is exposed to pronunciation variants in the labels where the same word (and thus same grapheme sequence) may have different pronunciations (and thus phoneme sequences). This approach does not address including pronunciations for words that do not occur in the acoustic training data, which we leave as future work. We find that the pronunciation data improves WER 12.0%→11.4% for voice-search but with little improvement for voice-dictation. Unlike voice-search the voice-dictation test set is comprised of mostly common words, we conjecture that it may be sufficient to learn pronunciations for these words from the acoustic data alone and thus may not benefit from additional human transcribed pronunciations.</p><p>Next, to include the text data we pre-train a 2-layer LSTM with 700 cells as a language model with grapheme targets. The model is trained until word perplexity on a held-out set no longer improves, Table <ref type="table" target="#tab_1">2</ref> shows the word preplexity and sizes of the various language models that were trained. Addition of text data in this way improves WER 11.4%→10.8% for voice-search and 6.8%→6.4% for voice-dictation.</p><p>We explore modeling wordpieces, with 1k, 10k and 30k wordpieces, instead of graphemes and make several changes to the architecture. The wordpiece encoder network is a 12layer LSTM with 700 cells each, trained with hierarchical-CTC with phoneme targets at depth 5, graphemes at depth 10 and wordpieces at depth 12. Since wordpieces are longer units we include a time convolution after depth 10 reducing the sequence length by a factor of 3. We find that this time convolution does not affect WER but drastically reduces training and inference time as there are 3 times fewer encoder features that need to be processed by the decoder network. Wordpiece language models are trained similar to graphemes, since the numbers of labels are much larger an additional input embedding of size 500 is used for wordpiece models. The wordpiece language models perform much better in terms of word perplexity (Table <ref type="table" target="#tab_1">2</ref>) and the RNN-T initialized from them also see significant WER improvements (Table <ref type="table">1</ref>). The best endto-end RNN-T with 30k wordpieces achieves a WER of 8.5% for voice-search and 5.2% on voice-dictation which is on par with the state-of-the-art baseline speech recognition system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ANALYSIS</head><p>We observe that a large part of the improvements described in this work are from a reduction in substitution errors. Using wordpieces instead of graphemes results in an absolute 2.3% word error rate improvement, of this 1.5% is due to fixing substitution errors. Inclusion of pronunciation and text data improve voice-search word error rate by an absolute 0.6% and 0.6% respectively, all of these are due to improvements in word substitution errors. Many of the corrected substitution errors seem to be from improved language modeling: words which may sound similar but have different meaning given the text context. Some selected examples include improvements with proper nouns: 'barbara stanwick' recognized by a grapheme model is fixed when using wordpieces to the correct name 'barbara stanwyck'. Similar improvements are found when including pronunciation data: 'sequoia casino' to 'sycuan casino', 'where is there' to 'where is xur' and also when including text data: 'soldier boy' to 'soulja boy', 'lorenzo llamas' to 'lorenzo lamas'. We also find that wordpieces capture longer range language context than graphemes in improvements like 'tortoise and the hair' to 'tortoise and the hare'.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head><p>We train end-to-end speech recognition models using the RNN-T which predicts graphemes or wordpieces and thus directly outputs the transcript from audio. We find pre-training the RNN-T encoder with CTC results in a 5% relative WER improvement, and using a deeper 8-layer encoder instead of a 5-layer encoder further improves WER by 10% relative. We incorporate pronunciation data using a pre-training hierarchical-CTC loss which includes phoneme targets and find this improves the voice-search WER by 5% relative with little impact on the voice-dictation task. To include text-only data we pre-train the recurrent network in the decoder as LSTM language models resulting in a overall 5% relative Table <ref type="table">1</ref>. Word error performance on the voice-search and dictation tasks for various RNN-T trained with graphemes and wordpieces with various architectures and pre-training. Also shown for each model is which types of training data are included: acoustic, pronunciation or text. The baseline is a state-of-the-art conventional speech recognition system with separate acoustic, pronunciation and language models trained on all available data. The parameters for the baseline system include 20 million weights from the acoustic model network, 0.2 million for each word in the pronunciation dictionary and the 100 million n-grams in the language model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Layers</head><p>Pre </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig.2. The various stages of training a wordpiece RNN-T. The encoder network is pre-trained as a hierarchical-CTC network simultaneously predicting phonemes, graphemes and wordpieces at 5, 10 and 12 LSTM layers respectively. A time convolutional layer reduces the encoder time sequence length by a factor of three. The decoder network is trained as a LSTM langauge model predicting wordpieces optimized with a cross-entropy loss. Finally, the RNN-T network weights are initialized from the two pre-trained models, indicated by the dashed lines, and the entire network is optimized using the RNN-T loss.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>The number of parameters (in millions) and word perplexity for LSTM language model trained with different units evaluated on a held-out set. We train wordpiece RNN-Ts with 1k, 10k and 30k wordpieces targets and find that they significantly outperform the grapheme-based RNN-Ts. For comparison we use a baseline speech recognizer with individual acoustic, pronunciation and language models with state-of-the-art WERs of 8.3% on voice-search and 5.4% on voice-dictation. With a 30k wordpiece RNN-T achieving WERs of 8.5% on voicesearch and 5.2% on voice-dictation we demonstrate that a single end-to-end neural model is capable of state-of-the-art streaming speech recognition.</figDesc><table><row><cell>-trained</cell><cell>Training Data Used</cell><cell>WER(%)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">In the context of this work, we consider models that are all-neural, and directly output word transcripts from audio utterances as being end-to-end.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">ACKNOWLEDGEMENTS</head><p>The authors would like to thank our colleagues: Franc ¸oise Beaufays, Alex Graves and Leif Johnson for helpful research discussions and Mike Schuster for help with wordpiece models.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Continuous speech recognition</title>
		<author>
			<persName><forename type="first">N</forename><surname>Morgan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bourlard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Processing Magazine</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="24" to="42" />
			<date type="published" when="1995-05">May 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
			<date type="published" when="1997-11">Nov 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Framewise phoneme classification with bidirectional lstm networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Joint Conference on Neural Networks</title>
				<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Long shortterm memory based recurrent neural network architectures for large vocabulary speech recognition</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Beaufays</surname></persName>
		</author>
		<idno>abs/1402.1128</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Sequence discriminative distributed training of long short-term memory recurrent neural networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Heigold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Mcdermott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Monga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mao</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>Interspeech</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Graphemeto-phoneme conversion using long short-term memory recurrent neural networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Beaufays</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ICASSP</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Listen, attend and spell</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<idno>abs/1508.01211</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Deep speech 2: Endto-end speech recognition in english and mandarin</title>
		<author>
			<persName><forename type="first">D</forename><surname>Amodei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Anubhai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Battenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Case</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Casper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Catanzaro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chrzanowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Coates</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Diamos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
				<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">End-to-end attention-based large vocabulary speech recognition</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chorowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Serdyuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Brakel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ICASSP</title>
		<imprint>
			<biblScope unit="page" from="4945" to="4949" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sequence to sequence learning with neural networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An online sequence-to-sequence model using partial conditioning</title>
		<author>
			<persName><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sussillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Recurrent neural aligner: An encoder-decoder neural network model for sequence-to-sequence mapping</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shannon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Beaufays</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note>in Interspeech</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Sequence transduction with recurrent neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICASSP</title>
				<meeting>of ICASSP</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Speech recognition with deep recurrent neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A.-R</forename><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">&quot; in International Conference on Machine Learning: Representation Learning Workshop</title>
				<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A comparison of sequence-tosequence models for speech recognition</title>
		<author>
			<persName><forename type="first">R</forename><surname>Prabhavalkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Sainath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note>in Interspeech</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Google&apos;s neural machine translation system: Bridging the gap between human and machine translation</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Norouzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Macherey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Krikun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Macherey</surname></persName>
		</author>
		<idno>abs/1609.08144</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Connectionist temporal classification: Labeling unsegmented sequence data with recurrent neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fernández</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gomez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the International Conference on Machine Learning (ICML)</title>
				<meeting>of the International Conference on Machine Learning (ICML)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">From speech to letters-using a novel neural network architecture for grapheme based asr</title>
		<author>
			<persName><forename type="first">F</forename><surname>Eyben</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wöllmer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Schuller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Automatic Speech Recognition and Understanding (ASRU)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="376" to="380" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Towards end-to-end speech recognition with recurrent neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Latent sequence decompositions</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Quoc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Sequence labelling in structured domains with hierarchical recurrent neural networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fernández</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Joint Conference on Artificial Intelligence (IJCAI)</title>
				<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Multi-accent speech recognition with hierarchical grapheme based models</title>
		<author>
			<persName><forename type="first">K</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ICASSP</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Optimizing expected word error rate via sampling for speech recognition</title>
		<author>
			<persName><forename type="first">M</forename><surname>Shannon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Interspeech</title>
				<meeting>of Interspeech</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Fast and accurate recurrent neural network acoustic models for speech recognition</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Beaufays</surname></persName>
		</author>
		<editor>INTERSPEECH</editor>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">A more general method for pronunciation learning</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bruguier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gnanapragasam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Beaufays</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Johnson</surname></persName>
		</author>
		<editor>Interspeech</editor>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Bayesian language model interpolation for mobile speech input</title>
		<author>
			<persName><forename type="first">C</forename><surname>Allauzen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Riley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>INTER-SPEECH</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Tensorflow: Large-scale machine learning on heterogeneous distributed systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Barham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Brevdo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Citro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Devin</surname></persName>
		</author>
		<idno>abs/1603.04467</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Zilly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Koutník</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
		<idno>abs/1607.03474</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note>Recurrent highway networks,&quot; CoRR</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
