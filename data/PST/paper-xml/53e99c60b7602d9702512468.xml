<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">CASE-BASED HEURISTIC SELECTION FOR TIMETABLING PROBLEMS</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Edmund</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Sanja</forename><surname>Petrovic</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Rong</forename><surname>Qu</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Information Technology</orgName>
								<orgName type="laboratory">Automated Scheduling Optimisation and Planning Group</orgName>
								<orgName type="institution">Jubilee Campus University of Nottingham</orgName>
								<address>
									<postCode>NG8 1BB</postCode>
									<settlement>Nottingham</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science and Information Technology, Jubilee Campus</orgName>
								<orgName type="institution">University of Nottingham</orgName>
								<address>
									<postCode>NG8 1BB</postCode>
									<settlement>Nottingham</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">CASE-BASED HEURISTIC SELECTION FOR TIMETABLING PROBLEMS</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">27A3F5C9C7067214D08CEC371BE1F8AB</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>case based reasoning</term>
					<term>heuristics</term>
					<term>knowledge discovery</term>
					<term>timetabling problems</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a case-based heuristic selection approach for automated university course and exam timetabling. The method described in this paper is motivated by the goal of developing timetabling systems that are fundamentally more general than the current state of the art. Heuristics that worked well in previous similar situations are memorized in a case base and are retrieved for solving the new problem in hand. Knowledge discovery techniques are employed in two distinct scenarios. Firstly, we model the problem and the problem solving situations along with specific heuristics for those problems. Secondly, we refine the case base and discard cases which prove to be non-useful in solving new problems. Experimental results are presented and analyzed. It is shown that case based reasoning can act effectively as an intelligent approach to learn which heuristics work well for particular timetabling situations. We conclude by outlining and discussing potential research issues in this area of knowledge discovery for different difficult timetabling problems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION 1.1 Case based reasoning</head><p>Case Based Reasoning (CBR) is a knowledge-based technique that solves new problems by employing previous experiences. It is described by Leake <ref type="bibr" target="#b34">[35]</ref> as follows:</p><p>"In CBR, new solutions are generated not by chaining, but by retrieving the most relevant cases from memory and adapting them to fit new situations."</p><p>In CBR, all of the previous problems and new problems in hand are modelled as cases in certain forms such as a list of feature-value pairs. They are defined by Kolodner and Leake <ref type="bibr" target="#b32">[33]</ref> as follows:</p><p>"A case is a contextualized piece of knowledge representing an experience that teaches a lesson fundamental to achieving the goals of the reasoner."</p><p>To build a CBR system, previous problems and their good solutions (source cases) are collected and stored in a case base. The retrieval process compares the source cases with the new case in hand using a similarity measure (usually defined by a formula). The overall idea is to solve a new problem by reusing the good solutions of the source case(s) which is the most similar to the new problem.</p><p>CBR has been applied successfully in a variety of research areas including diagnosis, legal advice, health and education (e.g. <ref type="bibr" target="#b36">[37]</ref>). Such examples represent situations which are naturally easy to model by as cases using a list of features and which can be compared using a nearest neighbour approach as a similarity measure. Recent CBR research has been carried out with some success on more complex problem domains such as scheduling problems (e.g. <ref type="bibr">[8, 9, 10, 11, 14, 25, 26, 36, 39, 40, 46, 47,]</ref>). By remembering and reusing experience from previous similar problem solving, CBR is capable of providing reasonably good solutions within a limited amount of time, which is one of the most important requirements in dynamic scheduling. This has led to the situation where most applications studied in CBR for scheduling have been in the area of dynamic/reactive scheduling <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b38">39,</ref><ref type="bibr" target="#b45">46]</ref>. Other applications in scheduling employing CBR include travelling salesman problems and single machine scheduling <ref type="bibr" target="#b24">[25]</ref>, nurse rostering <ref type="bibr" target="#b46">[47]</ref> and timetabling problems <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10]</ref>. Most of this research is largely concerned with attempting to solve scheduling problems directly as compared to the work described in this paper, which is concerned with choosing the right heuristic to be employed in an attempt to raise the level of generality at which timetabling systems can operate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Timetabling problems</head><p>Timetabling problems arise in many real-world circumstances (e.g. nurse rostering <ref type="bibr" target="#b21">[22]</ref>, university timetabling problems <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b19">20]</ref>). A general timetabling problem includes scheduling a certain number of events (exams, courses, meetings, etc) into a limited number of time periods, while satisfying as many of the required constraints as possible. Constraints are usually grouped in the following way:</p><p>• HARD CONSTRAINTS cannot be violated under any circumstances. For example, two events with common resources (such as students) cannot be assigned simultaneously. A solution with no violations of hard constraints is often called a feasible solution.</p><p>• SOFT CONSTRAINTS are desirable but not essential. Examples are that two events should not be scheduled consecutively, or an event should be scheduled into a specific room if possible.</p><p>Timetabling problems have been well studied for more than 4 decades (e.g. see <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b43">44]</ref>).</p><p>Traditional approaches include graph heuristics (e.g. <ref type="bibr" target="#b11">[12]</ref>), integer linear programming (e.g. <ref type="bibr" target="#b16">[17]</ref>) and constraint logic programming (e.g. <ref type="bibr" target="#b20">[21]</ref>) Recently a large amount of successful research has been carried out which has investigated meta-heuristic approaches for a variety of timetabling problems (e.g. see <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b14">15]</ref>). These include tabu search (e.g. <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b30">31]</ref>), simulated annealing (e.g. <ref type="bibr" target="#b26">[27]</ref>) and evolutionary algorithms (e.g. <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b42">43]</ref>). Extensive work has also been carried out to study and compare different heuristics on specific timetabling problems <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b41">42]</ref>. This serves as a good starting point for employing knowledge-based techniques for timetabling problems <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b33">34]</ref> as more and more experiences are obtained and collected. This also provided us with the motivation for using CBR for directly solving university timetabling problems (e.g. <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10]</ref>) as a large amount of data and problem solving experiences are available to be studied. Note that in this paper we are not attempting to directly solve timetabling problems.</p><p>Instead we are concerned with underpinning the development of general timetabling systems by investigating CBR as a timetabling heuristic selector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Case-based heuristic selection for timetabling problems</head><p>In artificial intelligence and operational research, problems are often solved by employing a variety of heuristics to guide the problem solving towards high quality solutions in the promising regions of the search space. However, experience/knowledge for problem solving that has been gained by employing different heuristics is usually discarded afterwards. This paper investigates a case based heuristic selection approach that collects and reuses previous experience of the heuristics that were employed successfully within particular situations onto current 'similar' situations in timetabling. The aim is to avoid solving new problems from scratch and thus save a lot of effort. A further key aim is to develop intelligent systems that can 'guess' at which heuristic will work well on which problem, and thus is capable of dealing with any problems efficiently. Success in this area would underpin the development of general systems that do not need to be tailored to the particular problem in hand. Such a system would be significantly cheaper to implement than current 'problem specific' systems because they could be applied to a far wider range of problems. The motivation behind CBR is that humans often solve new problems by reemploying knowledge that has been collected from previous experience.</p><p>Most of the timetabling research approaches employ specifically tailored heuristics which are operated directly on the problem (e.g. see <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b14">15]</ref>). However, it is often the case that a specific heuristic that worked well on a particular type of problem may not work well on other problems. In our case-based heuristic selection approach, timetabling problems are solved by adaptably employing the best heuristics predicted for particular situations by utilising past experience. The idea is similar to that of a hyper-heuristic which refers to a "heuristic which chooses heuristics"(e.g. see <ref type="bibr" target="#b5">[6]</ref>). Some of the recent research on scheduling problems developes this idea in attempt to raise the level of generality. Genetic algorithms are the mostly employed technique to search for heuristics <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b37">38,</ref><ref type="bibr" target="#b44">45]</ref>.</p><p>In our proposed case based heuristic selection approach, a list of feature-value pairs is defined to create cases. A knowledge discovery process on the features to represent the cases and on the case base in the system is presented in Section 2. We are concerned with both university course timetabling and university exam timetabling, which are usually very different problems with different possible constraints and problem characteristics. In total we collected four different sets of potential features, simple features, and a combination of simple and complex features for both the course and exam timetabling problems. We study them separately in two different heuristic prediction approaches, but within a unified case based heuristic selection framework.</p><p>They are presented in Section 3, for course timetabling, and Section 4, for exam timetabling, respectively. Finally Section 5 presents some discussion on research issues concerning data preparation and source case selection on this case based heuristic selection approach together with some concluding comments and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">KNOWLEDGE DISCOVERY IN CASE-BASED HEURISTIC SELECTION</head><p>The basic assumption behind CBR is that "similar problems will have similar solutions" <ref type="bibr" target="#b34">[35]</ref>.</p><p>The retrieval is a similarity-driven process that finds the solution by assessing the similarities between source cases and new cases. The key issue in tackling the development of a case based heuristic selector for timetabling is how to model the knowledge of which specific heuristics work well for particular problems and problem solving situations. A successful method should allow us to find the most similar source cases that give good predictions of the best heuristics for the new cases. This may be obtained in two ways:</p><p>1) Proper features need to be employed to represent timetabling problems by cases so that they can be compared using the defined similarity measure to make good predictions of heuristics. That is, only those features that can affect and contribute to good selection of heuristics are needed to be used to represent cases. As the retrieval in CBR is a similarity driven process, the selection of the features to be used to access the similarity between cases thus make predictions forms the crucial part of our case-based heuristic selection approach;</p><p>2) Source cases need to be selected carefully so that the 'right' one can be retrieved for suggesting the appropriate heuristic for a specific range of new cases.</p><p>In our work we study a two-stage knowledge discovery process on the case representation and the source cases selection. Knowledge discovery is a process of "identifying valid, novel, potentially useful, and ultimately understandable patterns in data" <ref type="bibr" target="#b28">[29]</ref>. It is usually carried out within illstructured domains, which is exactly what timetabling problems are. In our approach, knowledge discovery techniques and strategies are employed to obtain the knowledge of problems modeling, comparing cases to choose heuristics and refining the case base. CBR serves as the base that stores the discovered knowledge and provides good heuristics for the problem in hand.</p><p>Particular features of the CBR system that we have developed are listed as follows:</p><p>• Cases (either overall problems or partial situations during problem solving) are represented by a list of feature-value pairs. Knowledge discovery is carried out to search for the feature list to be employed in the system.</p><p>• The case base is a database of cases with the best two heuristics from the heuristic sets (presented in Section 3 and Section 4, respectively) for them. Knowledge discovery is carried out to refine the source cases that should be retained in the case base.</p><p>• Training cases form a set of cases whose best heuristics are obtained beforehand. They are used in the knowledge discovery process to carry out the search for features and selection of source cases.</p><p>• The similarity measure presented in formula (a) employs a nearest-neighbour approach that calculates the weighted sum of differences between each pair of features within two cases being compared.</p><formula xml:id="formula_0">1 ) ( 1 ) , ( 1 2 + - × = ∑ = j i i i i t s ft fs w C C S (a)</formula><p>The notation in formula (a) is described as follows: j is the number of features employed in the case representation w i is the weight of the ith feature indicating its relevance to the comparison fs i , ft i are the values of the ith feature in the source case C s and the new case C t in hand, respectively The higher the similarity measure S(C s , C t ) is, the more similar C s and C t are. The source cases with the highest similarity are retrieved and their best heuristics are suggested for the new case.</p><p>• Retrieval uses the similarity measure to compare each source case and the new case in hand. During the knowledge discovery process, a set of training cases is used to discover the feature list and source cases. If the best heuristic of the training case obtained beforehand is within one of the best two heuristics of the retrieved source case, the retrieval will be seen as a successful retrieval. This criterion is set this way as we found that sometimes the qualities of the timetables produced by different heuristics are very close or even equal to each other. To have the best heuristic stored while still having some randomness for exploitation, we choose to store the best two heuristics for each source case.</p><p>• System performance is evaluated during the knowledge discovery process to guide the training on the features selected and the source cases retained in the system. It is defined as the percentage of successful retrievals for all of the training cases.</p><p>• We studied 5 heuristics in our case-based heuristic selection approach for both course and exam timetabling problems. We choose them because they are widely studied heuristics in timetabling research due to its easy implementation and its generality over a wide range of problem types, and require no parameters. They are described below:</p><p>1. h 1 = Largest degree first -All of the events that are not yet scheduled are scheduled one by one in the descending order of the number of constraints the event has with the others.</p><p>2. h 2 = Largest degree with tournament selection -This heuristic tries to schedule the most constrained events first but still has an element of randomness <ref type="bibr" target="#b11">[12]</ref>. Every time the most constrained event is selected from a subset of the events that are not yet scheduled (the size of the subset is 30% of the original set).</p><p>3. h 3 = Colour degree -Events that are not yet scheduled are ordered by the number of constraints they have with those that are already scheduled in the timetable. <ref type="bibr" target="#b3">4</ref>. h 4 = Saturation degree -Events that are not yet scheduled are ordered by the number of periods available for them in the timetable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">h 5 = Hill climbing -</head><p>The initial timetable is randomly constructed and improved by this method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">The first stage of knowledge discovery for case representation</head><p>A schematic diagram of the knowledge discovery process for case representation is presented in Figure <ref type="figure">1</ref>. Firstly an initial feature list with the same weights is randomly chosen. Artificial intelligent search methods (such as tabu search and hill climbing) are employed to search for the feature vector that provides the best system performance (highest number of successful retrievals for all the training cases). For each feature list selected, retrieval compares the best heuristics obtained beforehand for all of the training cases with those best heuristics for the source cases retrieved for them. The system performance upon the feature list selected will be fed back for the next step of knowledge discovery in case representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1 Schematic diagram of knowledge discovery process on features and their weights</head><p>In the search process of discovering the features and their weights, the search space includes all of the possible enumeration of features that describe the situations of timetabling problems. Possible moves include changing one of the features or their weights, removing irrelevant features and introducing new features. The fitness function is the system performance obtained (percentage of successful retrievals on all of the training cases). Our current work aims to investigate the manipulation of 'knowledge' of heuristics on solving timetabling problems with the goal of raising the generality of the timetabling system. We thus employed tabu search and hill climbing which work relatively fast in obtaining reasonable good results. In tabu search, the length of the tabu list is set as 9 based on our previous experience, experiments and the value recommended from the literature <ref type="bibr" target="#b40">[41]</ref>. This process is carried out iteratively until the stopping condition is met (here a preset time for searching). The feature vector that gives the highest system performance will be employed in the next stage of knowledge discovery on the case base.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The second stage of knowledge discovery on the case base</head><p>Source case selection is one of the key elements that contribute to the good performance of a CBR system. Irrelevant source cases may contain wrong or redundant information, which confuses the retrieval process and decreases the system performance. Knowledge discovery on the case base uses the "Leave-One-Out" strategy that removes one source case at a time from the case base and checks its effect on the system performance. If the system performance is decreased (the number of successful retrievals for all of the training cases is decreased), the removed source case will then be added back as it may contribute to a higher system performance on providing the best heuristics for certain type of timetabling cases. Otherwise, it will be removed permanently as either it contains wrong information in terms of predicting the best heuristics, or it is redundant in the system and thus is harmful to system performance. The aim is to obtain a case base of only the relevant and representative source cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">CASE-BASED HEURISTIC SELECTION FOR WHOLE COURSE TIMETABLING PROBLEMS</head><p>We firstly investigate the case-based heuristic selection approach to predict the best heuristic for solving course timetabling problems. Two sets of features are collected to represent the course timetabling problems and are employed within the knowledge discovery process: F cs includes 10 simple features (presented in Table <ref type="table" target="#tab_0">1</ref>) and F cc includes combinations of each pair of features in F cs . H c is a set which includes a selection of good timetabling heuristics. The three sets are listed below: number of hard constraints f <ref type="bibr" target="#b4">5</ref> number of soft constraints f <ref type="bibr" target="#b5">6</ref> number of the conflicts the most conflicted course has with the other courses f <ref type="bibr" target="#b6">7</ref> number of most conflicted courses f <ref type="bibr" target="#b7">8</ref> number of courses that should not be scheduled to a fixed time period f <ref type="bibr" target="#b8">9</ref> number of courses that should not be scheduled to consecutive time periods</p><formula xml:id="formula_1">• H c = {h 1 , h 2 , h 3 , h 4 , h 5 } • F cs = {f 0 , f 1 , f 2 , f 3 , f 4 , f 5 , f 6 , f 7 , f 8 , f 9 } • F cc = {f i , f m /f n }, f i , f m , f n ∈ F cs , i, m, n = 0, … 9, m ≠ n</formula><p>To guarantee the complete coverage of heuristics studied, all of the heuristics need to have at least one instance in the case base for knowledge discovery. We build up two case bases which consist of a different number of source cases with different best heuristics. They are:</p><p>• CB1 -a database of 45 source cases with 10, 15, … 50 courses (9 different sizes) in the problem. For each size there is a set of 5 cases. For each of the heuristic in H c there is one case for which this heuristic is the best. The second best heuristic of each case may be any of the other heuristics from H c .</p><p>• CB2 -a database of 90 source cases with 9 different sizes, each has a set of 10 cases. For each heuristics from H c there are two cases (in the set of 10 cases) for which this heuristic is the best. Compared with CB1 it is more likely that more knowledge may be discovered from CB2 for heuristic prediction.</p><p>So far there are no widely cited benchmark course timetabling problems with a recommended penalty function to evaluate the course timetables produced. We thus try to obtain the best feature set in the knowledge discovery process by comparing the heuristics that generate the best quality timetables with the least number of violations on all types of soft constraints.</p><p>During the training phase of the system, we handle feasible solutions where there is no violation of hard constraints. When an infeasible solution is generated, we either run the heuristics with random elements (h 2 and h 5 ) again to obtain a feasible solution, or simply discard the data tested.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Knowledge discovery on features and weights</head><p>We employ the relatively simple and fast search methods of tabu search and hill climbing, to search for the features from F cc for case representation and to study the characteristics of different search methods within the knowledge discovery process presented in Figure <ref type="figure">1</ref>. The investigation of other search methods within the knowledge discovery process for feature selection will be a future research issue.</p><p>In total 100 training cases are used to carry out the knowledge discovery on features and their weights CB1 as the case base. The best system performance (the highest number of successful retrievals on all of the training cases) on employing different number of features from feature set F cc is presented in Figure <ref type="figure" target="#fig_1">2</ref>. For each number of features, 10 runs of the system are carried out and the average system performance is obtained and presented. We can see that (not surprisingly) in general tabu search operates better than hill climbing. Both tabu search and hill climbing show that the system performs the best with 5 features in the case representation. With the 5 features obtained by tabu search, around 77 out of 100 training cases obtain the correct best heuristics from the retrieved source cases. We can also observe that the system performance is decreased when more that 5 features are employed in the case representation. We studied the similarities between the source cases and the training cases upon different numbers of features. It is observed that when there are more features being assessed in the similarity measure, the similarities between many source cases and the training case are too close to each other. The similarity measure thus may not distinguish the most similar source cases for heuristic prediction as they may have just a slightly higher similarity value than the others and thus may not be the 'right' one to be retrieved. The retrieval is thus confused with these less-relevant features that make the similarities between cases too close. In general, employing more lessrelevant features than needed decreases the system performance.</p><p>We also found that with the features chosen from a feature set (F cc ) that contains a higher number of complex features generated from simple features, the best system performance is always obtained when their weights are the same. This means that, moves that adjust the weights of the features in both tabu search and hill climbing do not contribute to better system performance. We thus test the knowledge discovery on the system with the features chosen from another feature set F cs (presented above) which contains a smaller number of 10 simple features. The weights of the features are studied to detect the effect of different features sets. Table <ref type="table" target="#tab_1">2</ref> presents the simple features and their weights discovered when the highest system performance is obtained. The third and fourth row present the weights in curly brackets for the features presented in the second row discovered by tabu search and hill climbing, respectively. </p><formula xml:id="formula_2">, f 3 , f 6 } {f 3 , f 4 , f 6 , f 7 , f 9 } {f 0 , f 1 , f 3 , f 4 , f 5 , f 6 , f 7 , f 8 } {f 0 , f 1 , f 3 , f 4 , f 5 , f 6 , f 7 , f 8 , f 9 }</formula><p>weights by tabu search {5, 8, 9} {1,</p><p>weights by hill climbing {4, 7, 7} {1,</p><p>We can see that with F cs , where there are a lower number of simple features to choose from for the case representation, the weights for features discovered by tabu search and hill climbing are different except when 5 features are employed. This may be because, with simple features, the similarity measure cannot get enough information to compare the cases, and thus the weights of these features need to be adjusted to obtain better assessments between cases during retrievals.</p><p>With more complex features from F cc , the similarity measure may have enough information for comparison and thus adjusting the weights of features does not make much contribution to better system performance. Another explanation may be that different complex features that are generated from simple features may contain the same simple features more than once in the similarity measure. For example, f i / f j and f i / f k in the feature list contribute to the weight of 2 for f i in the similarity measure. So the similarity measure may in some way be affected by the importance of certain features.</p><p>The feature list that gives the highest system performance in the first stage will be employed in the CBR system for the second stage of knowledge discovery on the case base. It is shown below:</p><formula xml:id="formula_5">F = {f 3 /f 1 , f 6 /f 1 , f 3 /f 7 , f 1 /f 0 , f 3 }</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Knowledge discovery on the case base</head><p>Knowledge discovery on the case base is carried out on the two case bases CB1 and CB2 by using the "Leave-One-Out" strategy. The system performance before and after the "Leave-One-Out" strategy is presented in Table <ref type="table" target="#tab_2">3</ref>. The number of cases left in the case bases and the corresponding system performance after the "Leave-One-Out" strategy is presented in the column of refined CB1</p><p>and refined CB2. We can see that the sizes of the refined CB1 and refined CB2 are vastly reduced but a higher system performance is obtained compared to case bases before the "Leave-One-Out" strategy (presented in the second column and the third column). This is obtained by retaining only the more relevant cases in the case base. The refined CB2 provides a better system performance than the refined CB1, as more source cases are trained in CB2 and thus more knowledge is discovered for solving more types of problems. This section presented an approach using CBR for predicting the best heuristic for course timetabling problems. Experimental results show that the feature selection is more important than feature weights in the retrieval process. This gives us an indication that the current features we are using to select from are reasonably good for case representation in timetabling problems.</p><p>Employing more less-relevant features in case representation confuses the retrieval and thus decreases the system performance. Source case selection, which removes the redundant cases and retains only the representative cases, is also a key issue in this approach.</p><p>Knowledge discovery techniques in this approach employ relatively simple methods and just a few training processes lead to satisfying results. By providing a set of reasonably good heuristics without trying to tailor particular heuristics for specific course timetabling problems, this heuristic selection framework indicates the advantages of employing knowledge discovery techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">CASE-BASED HEURISTIC SELECTION DURING EXAM TIMETABLING PROBLEM</head><p>We also investigated the case-based heuristic selection approach to suggest the heuristics to be employed for constructing the exam timetables during the problem solving process. The idea is that, by employing specific good heuristics in particular situations adaptably we can generate high quality schedules. Once again, we are motivated by the goal of developing more general timetabling systems. Cater and Laporte in 1996 <ref type="bibr" target="#b17">[18]</ref> noted that there have been hundreds of research papers on examination timetabling and probably thousands of computer programs written to solve particular problem ("variation on the theme"). Our goal is to move away from this tendency to develop methods to solve one particular problem instance.</p><p>Two sets of possible features are collected: F es that describes the characteristics of the problems and partial solutions (presented in Table <ref type="table" target="#tab_3">4</ref>), and F ec that includes the combinations of features from F es . They are listed below as: density of the conflict matrix f <ref type="bibr" target="#b4">5</ref> number of exams that are already scheduled in the partial solution f <ref type="bibr" target="#b5">6</ref> number of times that exams with common students are scheduled in consecutive time periods in the partial solution f <ref type="bibr" target="#b6">7</ref> number of times that exams with common students are scheduled one time periods apart in the partial solution f <ref type="bibr" target="#b7">8</ref> penalty of the partial solution f <ref type="bibr" target="#b8">9</ref> cost of scheduling the next exam into the partial solution f <ref type="bibr" target="#b9">10</ref> number of the most constrained exam f <ref type="bibr" target="#b10">11</ref> number of constraints with the most constrained exams</p><formula xml:id="formula_6">• F es = {f 0 , f 1 , f 2 , f 3 , f 4 , f 5 , f 6 , f 7 , f 8 , f 9 , f 10 , f 11 } • F ec = {f i , f m /f n }, f i , f m , f n , ∈ F es , i, m, n = 0, … 11, m ≠ n</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The case based reasoning system</head><p>The CBR system developed for exam timetabling problems can be characterised by the following features:</p><p>• The case-based heuristic selection approach includes 4 well-studied and well-established sequential heuristics for solving exam timetabling problems. They order the exams to be scheduled one by one into the timetable. The heuristic set H e containing these 4 heuristics is presented below:</p><p>H e = {h 1 , h 2 , h 3 , h 4 }. h 1 = largest degree, h 2 = largest degree with tournament selection, h 3 = colour degree and h 4 = saturation degree.</p><p>• Source cases are different possible partial solutions obtained during the previous problem solving using sequential heuristics from H e . For each of the partial solutions, the two heuristics that make the least violations in the next step of scheduling are stored and suggested as "good" heuristics to be employed next.</p><p>• The penalty function is defined in the same way as the fitness function that was employed in <ref type="bibr" target="#b19">[20]</ref>, where cost is given for exams with common students that are scheduled too close to each other, aiming at spreading these exams in the timetables. The penalty function of the timetable t is presented in formula (b) to evaluate the quality of solutions produced by the heuristics.</p><formula xml:id="formula_7">P(t) = ∑ = 3 , 2 , 1 s s w × S s (b)</formula><p>The notation in formula (b) is described as follows:</p><p>S s is the number of situations where students have exams scheduled s time periods apart; w s is the weight that reflects the importance of violations of soft constraints, i.e. the number of times that exams are scheduled s time periods apart. It is set as</p><formula xml:id="formula_8">w 1 = 16, w 2 = 8, w 3 = 4.</formula><p>For the purpose of comparing the quality of solutions produced by different heuristics, we do not consider the infeasible solutions with violations of hard constraints during the training stage of the system. Figure <ref type="figure">3</ref> The case based heuristic selection approach Figure <ref type="figure">3</ref> represents an overview of the case based heuristic approach to exam timetabling problems. To solve a problem that has been input into the system, in each step (where one exam is scheduled to the partial timetable) the heuristic selector chooses the specific sequential heuristics from the case base to further construct the solution. In the retrieval, the heuristic selector uses the similarity measure presented in formula (a) to compare the current partial problem solution being constructed with all cases in the case base, which are partial solutions obtained during the solving of previous problems. The best heuristic stored with the most similar case is suggested and employed in the next step of the construction of the partial solution. This process is carried out step by step and is terminated when the stopping condition is met, namely when all of the exams are scheduled.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Data preparation for knowledge discovery</head><p>In this stage of system development, we want to evaluate the system performance on as many timetabling problems as possible to give a systematic analysis of this heuristic selection framework. There are just a few real-world benchmark timetabling problems that are widely available to the scientific community (see <ref type="bibr" target="#b19">[20]</ref>). For this study, we require a large number of timetabling problems so we generated a large number of timetabling problems with as many as possible different feature values. Once we have a deeper understanding of the system performance on a variety of problems with good coverage of any possible features, more realworld timetabling data can be added into the system for further evaluation. These data sets are publicly available to the scientific community from http://www.cs.nott.ac.uk/~rxq/publications.htm.</p><p>All exam timetabling problems are generated randomly by constructing a conflict matrix that defines the hard constraints between exams. Each element marked with '1' in the matrix denotes the conflict between the exams that are indicated in the corresponding row and column. The density (which is the ratio of number of '1's to the total number of elements in the matrix) takes values from 0.65 to 0.85. The size of the problems ranges from 100 to 300 exams.</p><p>To carry out knowledge discovery, a case base is built up which consists of a set of cases with their best heuristics. All of the heuristics being studied are implemented to construct solutions step by step for the set of exam timetabling problems generated using the conflict matrix and the size of the problems as an input. At each step (to schedule one exam) during the problem solving, the heuristic that makes the least number of violations of constraints in the partial solution at that time is seen as the best heuristic for the corresponding partial solution. These particular partial solutions, modeled by a list of features, and their best heuristics are then stored as source cases. If on some partial solutions all or most of the heuristics perform the same, these cases will then not be stored in the case base as they are not good representatives for a class of specific problem solving situations. Figure <ref type="figure" target="#fig_2">4</ref> presents an example of the heuristics that work the best during the solution process for an exam timetabling problem they will be stored. We found that to construct the timetable, the best heuristic within a number of steps is always the same (usually to schedule more than 10 exams). After a number of steps the best heuristics chosen are switched from one to some other.</p><p>To keep the size of the case base reasonably small, we only sample the partial solutions after each 10 steps of timetable construction as the source cases. We also store those cases that are near to the switching points of the heuristics (indicated by S in Figure <ref type="figure" target="#fig_2">4</ref>). This is done to help the knowledge discovery process to detect the most improtant features for heuristic selection (e.g. to detect what differences in feature values make one heuristic to be bettwer than the other in a particular situation). By solving a set of 20 timetabling problems, we obtained 95 potential source cases in total to build the case base. A set of training cases with their best heuristics is also produced using the same process as that used for producing the source cases. For each partial solution generated during the solution process for this set of training cases, the best heuristic that makes the least violations of the constraints is obtained. This heuristic will be the expected one that the heuristic selector should suggest during the knowledge discovery process. In total 95 training cases are produced and used in the knowledge discovery on the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Knowledge discovery on the heuristic selector</head><p>Tabu search and hill climbing are employed (as they were for course timetabling) to discover the feature list that models the partial solutions to give the highest system performance on all of the training cases.</p><p>All of the training cases are input into the system to check the suggested heuristics that the heuristic selector makes upon the feature list used. For each of the training cases, the heuristic selector finds the most similar source case from the case base, whose best heuristic is then checked to see if it is a successful retrieval upon the particular feature list. The feature list that gives the highest system performance on all of the training cases will be used in the heuristic selector. After the knowledge discovery on feature lists, the case base is then refined by using the "Leave-One-Out" strategy to remove redundant source cases.</p><p>Another set of 195 testing cases, which are different from the training cases used for the knowledge discovery process, is generated to test the heuristic selector with the discovered feature lists. The length of the feature lists, the number of cases left in the refined case bases, the feature list discovered and the system performance on both the training cases and testing cases (percentage of successful retrievals on all of the training cases and testing cases) are presented in Table <ref type="table" target="#tab_5">5</ref>. </p><formula xml:id="formula_9">f 3 /f 2 , f 9 95 87% 3 100% f 1 , f 1 /f 2 , f 2 /f 9 93 91% 4 100% f 3 /f 0 , f 1 /f 9 , f 3 /f 2 , f 4 /f 7 93 91% 5 100% f 6 /f 1 , f 9 /f 0 , f 9 /f 6 , f 1 , f 2 /f 8 93 91% 6 92% f 4 /f 7 , f 5 , f 3 /f 7 , f 9 , f 3 /f 0 , f 4 /f 9 89 89% 7 100% f 6 /f 2 , f 1 /f 9 , f 2 /f 6 , f 1 /f 6 , f 6 /f 9 , f 1 /f 9 , f 2 93 89% 8 87% f 1 /f 0 , f 2 /f 9 , f 2 /f 1 , f 3 /f 9 , f 9 /f 8 , f 1 /f 2 , f 9 /f 0 , f 4 /f 7 95 86% 9 87% f 9 /f 2 , f 6 , f 1 /f 8 , f 6 /f 0 , f 8 /f 7 , f 7 , f 1 /f 0 , f 2 /f 0 , f 7 /f 6 95 85% 10 85% f 9 /f 7 , f 6 , f 9 , f 2 /f 7 , f 2 , f 1 /f 2 , f 9 /f 6 , f 8 /f 1 , f 5 /f 7 , f 6 /f 2 93 84%</formula><p>From the system performance on both the training cases and testing cases (presented in the second and fourth column) we can obtain similar observations to those that were drawn from Section 3. The system performs the best (almost 9 out of 10 testing cases obtain the expected heuristics) with a relatively smaller number of features in the heuristic selector (namely from 3 to 7). Less relevant features should not be employed in the case representation to get good system performance.</p><p>Compared with the system performance obtained for course timetabling problems (which is presented in Section 3), we can observe that higher system performance is obtained for the exam timetabling problems (on both the training cases and testing cases). This is due to the fact that the exam timetabling problems considered here have fewer types of constraints than the course timetabling problems presented in Section 3. Knowledge discovery on the problems with a smaller number of possible characteristics is more likely to obtain higher system performance.</p><p>Also we can see that a relatively lower number of source cases are removed from the case base for exam timetabling problems (presented in the third column in Table <ref type="table" target="#tab_5">5</ref>) compared with that of course timetabling. The reason for this may be that there is a higher number of possible problem solving situations than the possible timetabling problems. Thus more source cases need to be retained to provide knowledge of heuristics which new problem situations may require.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Case-based heuristic selection for problem solving</head><p>To test the case based heuristic selection approach for problem solving, another 100 testing exam timetabling problems with different sizes (100 to 300 exams) is generated by using conflict matrices with densities in the range from 0.65 to 0.85. These problems are solved using the approach presented in Figure <ref type="figure">3</ref>, employing the feature lists discovered on the refined case base. Due to the observation that the heuristics switch from one to other after a certain number of scheduling steps, we set each step to schedule 10 exams. This may save a lot of retrieval time during the solution process while still ensuring that high quality solutions obtained by employing the heuristics suggested from the case base. The average penalties of the solutions obtained by single sequential heuristics, and by the case based heuristic selection with feature lists of different lengths are presented in Table <ref type="table" target="#tab_6">6</ref> and Table <ref type="table">7</ref>, respectively. The results shown in Table <ref type="table">7</ref> indicate that our approach provides solutions that have better average penalties than those obtained by using only the single sequential heuristics shown in Table <ref type="table" target="#tab_6">6</ref>. Just in two cases, namely with 7 and 10 features, slightly worse solutions are obtained by the case based heuristic selection approach comparing with the best solutions obtained by single heuristics. By comparing the results with those presented in Table <ref type="table" target="#tab_5">5</ref>, we can see that roughly the higher the system performance during the knowledge discovery, the better the case based heuristic selection approach performs in the problem solving stage. By choosing good heuristics adaptably during the problem solving, better solutions can be obtained compared with those generated by using only single heuristics.</p><p>In this section, a case based heuristic selection approach for exam timetabling problem solving has been developed and tested. The knowledge of selecting the best heuristics within different problem solving situations is stored in the source cases. It is shown that, by employing this approach, better or competitive results are produced compared with the best results obtained from a set of specific heuristics on a range of exam timetabling problems. This paper is aiming at investigating the learning ability of selecting different heuristics within a general problem solving framework for a variety of possible timetabling problems. The basic idea is similar to that of the 'hyper-heuristic which is 'heuristic that selects heuristics' <ref type="bibr" target="#b5">[6]</ref>.</p><p>However, the knowledge learnt during the problem solving of hyper-heuristic is usually discarded afterward. New problems with similar problem solving situations have to be solved from scratch by searching the vast search space of heuristics. Our case-based heuristic approach aims to collect the knowledge of heuristic selection during the problem solving, avoiding searching for heuristics in the problem solving situations similar to previously encountered ones when the knowledge is available. The results obtained showed that it is capable of solving various simulated timetabling problems with different characteristics by adaptably employing appropriate heuristics using knowledge collected beforehand during the solution construction and thus naturally has higher generality than other approaches/heuristics tailored for particular timetabling problems. For real-world timetabling problems with different characteristics, although there is limited benchmarks exist in timetabling problems, collecting and training on a set of problems adapted from real-world data for training may be possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">DISCUSSIONS AND FUTURE WORK</head><p>In this paper we investigated a case based heuristic selection approach within a general problem solving framework, which aim at producing reasonably good solutions quickly for a variety of timetabling problems by reusing previous experience of good heuristics in similar problem solving situations. We studied a knowledge discovery approach to case-based heuristic selection to predict the best heuristics for course timetabling problems, and the best sequential heuristics during the solution process for exam timetabling problems. The observations obtained from the experimental results showed that the knowledge of heuristics can guide the problem solving process successfully to construct higher quality solutions. The heuristic selector developed in the approach for exam timetabling during the problem solving has the ability to use heuristics adaptably according to the problem solving situations, which is more flexible for solving a wider range of problems.</p><p>Our aim is to develop a problem solving approach which can learn from the heuristics for problem solving, thus is much more flexible in solving a wide range of timetabling problems, and can provide competitive results over a range of specifically tailored heuristics for particular problems. The current research work in timetabling is presenting different results on different problems. However, we are not aiming at competing with the best results reported in the literature by constructing special purpose specific approaches. Our goal is to generate competitive results across a wider range of problems. We are attempting to underpin the next generation of timetabling systems which are more general and not specific to certain problems or problem instances.</p><p>The knowledge discovery process employs relatively simple techniques to carry out the training on case representation and the case base. Currently we are using tabu search and hill climbing to study the performance of the knowledge discovery. More other possible meta-heuristics, of course, can be investigated. Experimental results showed that feature selection is a very important task and is more important than feature weights if the features are good enough to provide necessary information in the retrieval. More relevant features will be studied for a more precise case representation to improve the system performance. As irrelevant features in the case representation confuse the retrieval, refining the features selected is also an important task.</p><p>Source case selection is another important issue to be addressed. Our current work investigated knowledge discovery on a number of artificially produced problems in order to study the performance of the system on as many problem situations as possible. Work of collecting and studying on a higher number of real-world data is being carried out to obtain a wider range of knowledge in the timetabling domain. When we obtain a deeper understanding of the approach on a variety of types of problems, more promising results are expected on solving a wider ranger of real-world problems with competitive results.</p><p>In the knowledge discovery process for exam timetabling problems, we found that a large amount of time is needed on the data preparation and analysis. The source cases greatly affect the knowledge discovery process and problem solving, and thus should be carefully selected. Firstly, all of the cases need to be checked to remove duplicated cases. Even more cases that are similar (with close values for each feature) and have the same best heuristics are also removed. Secondly, it is found that during certain steps of solution construction, it is always the same best heuristic that is selected in the next step of scheduling. In the current system, not all of the partial solutions obtained during the data preparation are stored in the case base. Instead we sample the cases after every 10 steps of scheduling to reduce the redundancy in the case base. Also only those cases that are near to the point of switch between heuristics are chosen as the potential source cases for the knowledge discovery process. In current research, we have tested 5 simple heuristics in our case-based heuristic selection approach over a range of timetabling problems. When we get a deeper understanding of heuristic selection upon simple heuristics, more complex heuristics will be investigated.</p><p>As we know, knowledge discovery is a 'non-trivial process' and it takes significant time to process the raw data collected. Data analysis, which is a very important step in knowledge discovery, aims to obtain and organise the knowledge to allow us to select appropriate heuristics. Burke et al <ref type="bibr" target="#b3">[4]</ref> investigated similarity measures for exam timetabling by running simulated annealing on a set of benchmark exam timetabling problems with different similarities. It is shown that after removing certain redundancies (e.g. students with just one enrolment, which do not affect the end result in terms of hard constraints), two problems which originally seem similar are actually quite different, or vice versa. It was seen that some enrolments are subsets of others and thus can be excluded as far as the similarity is concerned from the point of view of determining a purely feasible solution.</p><p>More elaborate techniques, either manually or automatically, may need to be employed for source cases collection in data preparation in future work.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2</head><label>2</label><figDesc>Figure 2 System performance on different numbers of features from F cc by tabu search and hill climbing</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4</head><label>4</label><figDesc>Figure 4 Best heursitics during the solution process of a source case</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Possible features of course timetabling problems</figDesc><table><row><cell>feature ID</cell><cell>description</cell></row><row><cell>f 0</cell><cell>number of courses</cell></row><row><cell>f 1</cell><cell>number of time periods</cell></row><row><cell>f 2</cell><cell>number of constraints</cell></row><row><cell>f 3</cell><cell>density of the conflict matrix</cell></row><row><cell>f 4</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Weights discovered for features from F cs by tabu search and hill climbing</figDesc><table><row><cell>no. of features</cell><cell>3</cell><cell>5</cell><cell>7</cell><cell>9</cell></row><row><cell>features</cell><cell>{f 1</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>System performance before and after the knowledge discovery on case bases</figDesc><table><row><cell>case base</cell><cell cols="4">CB1 CB2 refined CB1 refined CB2</cell></row><row><cell>no. of source cases</cell><cell>45</cell><cell>90</cell><cell>6</cell><cell>8</cell></row><row><cell cols="3">system performance 40% 56%</cell><cell>60%</cell><cell>66%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4</head><label>4</label><figDesc>Possible features of exam timetabling problems and partial solutions during problem solving</figDesc><table><row><cell>feature ID</cell><cell>description</cell></row><row><cell>f 0</cell><cell>number of exams</cell></row><row><cell>f 1</cell><cell>number of time periods</cell></row><row><cell>f 2</cell><cell>number of hard constraints</cell></row><row><cell>f 3</cell><cell>number of rooms</cell></row><row><cell>f 4</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5</head><label>5</label><figDesc>System performance on different feature lists for training and testing cases</figDesc><table><row><cell>no. of features</cell><cell>system performance on training cases</cell><cell>feature list</cell><cell>no. of cases in the refined case base (originally 95)</cell><cell>system performance on testing cases</cell></row><row><cell>2</cell><cell>97%</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6</head><label>6</label><figDesc>Average penalties of solutions by single sequential heuristics</figDesc><table><row><cell>sequential</cell><cell>color</cell><cell></cell><cell>saturation</cell><cell></cell><cell>largest</cell><cell></cell><cell cols="3">largest degree with</cell></row><row><cell>heuristics</cell><cell>degree</cell><cell></cell><cell>degree</cell><cell></cell><cell>degree</cell><cell cols="4">tournament selection</cell></row><row><cell>penalty of solutions</cell><cell>328</cell><cell></cell><cell>202</cell><cell></cell><cell>245</cell><cell></cell><cell></cell><cell>252</cell><cell></cell></row><row><cell cols="10">Table 7 Average penalties of solutions by using case based heuristic selection with different features</cell></row><row><cell>no. of features</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>6</cell><cell>7</cell><cell>8</cell><cell>9</cell><cell>10</cell></row><row><cell cols="10">penalty of solutions 182 199 193 195 196 203 197 200 203</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We would like to acknowledge the support of EPSRC for the research carried out in this paper (grant number GR/N36837/01).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A hybrid genetic algorithm for the vehicle routing problem with windows and itinerary constraints</title>
		<author>
			<persName><forename type="first">J</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sassi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Salois</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Genetic and Evolutionary Computation Conference</title>
		<meeting>the Genetic and Evolutionary Computation Conference<address><addrLine>Orlando, Florida USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-07-13">1999. July 13-17, 1999</date>
			<biblScope unit="page" from="44" to="51" />
		</imprint>
	</monogr>
	<note>GECCO-99</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">The Second International Conference on the Practice and Theory of Automated Timetabling</title>
		<title level="s">Lecture Notes In Computer Science</title>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Carter</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1408</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">Proceedings of The Forth International Conference on the Practice and Theory of Automated Timetabling. KaHo St.-Lieven</title>
		<title level="s">Lecture Notes In Computer Science</title>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>De Causmaecker</surname></persName>
		</editor>
		<meeting>The Forth International Conference on the Practice and Theory of Automated Timetabling. KaHo St.-Lieven<address><addrLine>Gent, Belgium</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002-08">August 2002. 2003</date>
			<biblScope unit="volume">2740</biblScope>
			<biblScope unit="page" from="21" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Similarity measure for exam timetabling problem</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Eckersley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Mccollum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>ASAP Group, University of Nottingham, U.K</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">The Third International Conference on the Practice and Theory of Automated Timetabling</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><surname>Erben</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">2079</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hyper-heuristics: an emerging direction in modern search technology</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kendall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Newall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schulenburg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Meta-Heuristics</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Kochenberger</surname></persName>
		</editor>
		<imprint>
			<publisher>Kluwer</publisher>
			<biblScope unit="page" from="457" to="474" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Automated timetabling: the sate of the art</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Jackson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Kingston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Weare</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Computer Journal</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="565" to="571" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Structured Cases in Case-Based Reasoning -Re-using and Adapting Cases for Time-tabling Problems</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Maccarthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge-Based Systems</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="159" to="165" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Case-based reasoning in course timetabling: an attribute graph approach</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Maccarthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Case-Based Reasoning Research and Development. Proceedings of 4 th International Conference on Case-Based Reasoning</title>
		<title level="s">Lecture Notes in Artificial Intelligence</title>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Aha</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Watson</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="volume">2080</biblScope>
			<biblScope unit="page" from="90" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Multiple-retrieval case-based reasoning for course timetabling problems</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Maccarthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
		<idno>NOTTCS-TR-2001-7</idno>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
		<respStmt>
			<orgName>ASAP Group, University of Nottingham, U.K</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Knowledge discovery in hyper-heuristic using case-based reasoning on course timetabling</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Maccarthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="90" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A simple heuristically guided search for the timetabling problem</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Newall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Weare</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International ICSC Symposium on Engineering of Intelligent Systems (EIS&apos;98)</title>
		<meeting>the International ICSC Symposium on Engineering of Intelligent Systems (EIS&apos;98)</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="574" to="579" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Recent research directions in automated timetabling</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EJOR</title>
		<imprint>
			<biblScope unit="volume">140</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="266" to="280" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Case-based heuristic selection for examination timetabling</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ICONIP&apos;02-SEAL&apos;02-FSKD&apos;02</title>
		<meeting>the ICONIP&apos;02-SEAL&apos;02-FSKD&apos;02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">The First International Conference on the Practice and Theory of Automated Timetabling</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">K</forename><surname>Burke</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">1153</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">A multiobjective genetic algorithm for the class/teacher timetabling problem</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Carrasco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">V</forename><surname>Pato</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="3" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A lagrangian relaxation approach to the classroom assignment problem</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Carter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IFOR</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="230" to="246" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Recent developments in practical exam timetabling</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="3" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Recent developments in practical course timetabling</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="3" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Examination timetabling: Algorithmic Strategies and Applications</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JORS</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="373" to="383" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Cyclic staff scheduling using constraint logic programming</title>
		<author>
			<persName><forename type="first">P</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Weil</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="159" to="175" />
		</imprint>
	</monogr>
	<note>In: [3</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Nurse rostering problems -a bibliographic survey</title>
		<author>
			<persName><forename type="first">B</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Radrigues</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">151</biblScope>
			<biblScope unit="page" from="447" to="460" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Metaheuristics for school timetabling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Colorni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maniezzo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Optimisation and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="277" to="298" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A tabu search algorithm for computing an operational timetable</title>
		<author>
			<persName><forename type="first">D</forename><surname>Costa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EJOR</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="page" from="98" to="110" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Case-based reasoning in scheduling: reusing solution components</title>
		<author>
			<persName><forename type="first">P</forename><surname>Cunningham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Smyth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The International Journal of Production Research</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="2947" to="2961" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Case-based reactive scheduling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Dorn</surname></persName>
		</author>
		<idno>CD-TR 95/75</idno>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>Vienna University of Technology, Institute for Information Systems</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Off the peg or made to measure</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Dowsland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="37" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A grouping genetic algorithm for graph coloring and exam timetabling</title>
		<author>
			<persName><forename type="first">W</forename><surname>Erben</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="132" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">U</forename><surname>Fayyad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Piatetsky-Shapiro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Smyth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uthurusamy</surname></persName>
		</author>
		<title level="m">Advances in Knowledge Discovery and Data Mining</title>
		<meeting><address><addrLine>Melo Park, CA</addrLine></address></meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">SlotManager: a microcomputer-based decision support system for university timetabling</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">R</forename><surname>Foulds</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Decision Support Systems</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="307" to="381" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Tabu search techniques for examination timetabling</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Gaspero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schaerf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="104" to="117" />
		</imprint>
	</monogr>
	<note>In: [3</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Solving a real-world problem using an evolving heuristically driven schedule</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Nelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="61" to="80" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A tutorial introduction to case-based reasoning</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Kolodner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Leake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Case-Based Reasoning: Experiences, Lessons, and Future Directions</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Leake</surname></persName>
		</editor>
		<imprint>
			<publisher>AAAI Press/The MIT Press</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="31" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A conceptual model of knowledge-based timetabling system</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">F</forename><surname>Kwok</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge-Based Systems</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="81" to="93" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Leake</surname></persName>
		</author>
		<title level="m">Case-based Reasoning: Experiences, Lessons and Future Directions</title>
		<meeting><address><addrLine>Menlo Park, CA</addrLine></address></meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Case-based reasoning in scheduling</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Maccarthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Jou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on Advanced Manufacturing Processes, Systems and Techniques (AMPST96)</title>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Khan</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Wright</surname></persName>
		</editor>
		<meeting>the Symposium on Advanced Manufacturing Processes, Systems and Techniques (AMPST96)</meeting>
		<imprint>
			<publisher>MEP Publications Ltd</publisher>
			<date type="published" when="1996">1996. 1996</date>
			<biblScope unit="page" from="211" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Case-based reasoning: an overview</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Mantaras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Plaza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AI Communications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="21" to="29" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Evolution of constraint satisfaction strategies in examination timetabling</title>
		<author>
			<persName><forename type="first">H</forename><surname>T-Marin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>V-Rendon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Genetic and Evolutionary Computation Conference</title>
		<meeting>the Genetic and Evolutionary Computation Conference<address><addrLine>Orlando, Florida USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">July 13-17, 1999</date>
			<biblScope unit="page" from="635" to="642" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">CABINS: A framework of knowledge acquisition and iterative revision for schedule improvement and reactive repair</title>
		<author>
			<persName><forename type="first">K</forename><surname>Miyashita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sycara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="page" from="377" to="426" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Storing and adapting repair experiences in employee rostering</title>
		<author>
			<persName><forename type="first">S</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Beddoe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Vanden Berghe</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>To appear in: [3</note>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Reeves</surname></persName>
		</author>
		<title level="m">Modern Heuristic Search Methods</title>
		<editor>
			<persName><forename type="first">V</forename><forename type="middle">J</forename><surname>R-Smith</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><forename type="middle">H</forename><surname>Osman</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Reeves</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Smith</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="1" to="25" />
		</imprint>
	</monogr>
	<note>Modern heuristic techniques</note>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Comparing genetic algorithms, simulated annealing, and stochastic hillclimbing on timetabling problems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Corne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Evolutionary Computation, AISB Workshop</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Goos</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Hartmanis</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Leeuwen</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename></persName>
		</editor>
		<meeting><address><addrLine>Sheffield</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">993</biblScope>
			<biblScope unit="page" from="94" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Some observations about GA based timetabling</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Corne</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="115" to="229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">A survey of automated timetabling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Schaef</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence Review</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="87" to="127" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Using constraint programming and local search methods to solve vehicle routing problems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Shaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Principles and Practice of Constraint Programming</title>
		<meeting>Principles and Practice of Constraint Programming</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="417" to="431" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Case-based reasoning for production scheduling</title>
		<author>
			<persName><forename type="first">G</forename><surname>Schmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Production Economics</title>
		<imprint>
			<biblScope unit="page" from="56" to="57" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Combining case-based reasoning and constraint logic programming techniques for packaged nurse rostering systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Simpson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third UK Case-Based Reasoning Workshop</title>
		<meeting>the Third UK Case-Based Reasoning Workshop<address><addrLine>U.K. 9</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-09">September 1997</date>
		</imprint>
		<respStmt>
			<orgName>University of Manchester</orgName>
		</respStmt>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
