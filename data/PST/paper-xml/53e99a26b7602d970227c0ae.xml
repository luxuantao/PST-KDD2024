<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fireworks Algorithm for Optimization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ying</forename><surname>Tan</surname></persName>
							<email>ytan@pku.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Yuanchun</forename><surname>Zhu</surname></persName>
							<email>ychzhu@pku.edu.cn</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Peking University Department of Machine Intelligence</orgName>
								<orgName type="laboratory">Key Laboratory of Machine Perception (MOE)</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Electronics Engineering and Computer Science</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<postCode>100871</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fireworks Algorithm for Optimization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">7CA5E29B16C366AC3C1613C01CD89210</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>natural computing</term>
					<term>swarm intelligence</term>
					<term>fireworks algorithm</term>
					<term>particle swarm optimization</term>
					<term>function optimization</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Inspired by observing fireworks explosion, a novel swarm intelligence algorithm, called Fireworks Algorithm (FA), is proposed for global optimization of complex functions. In the proposed FA, two types of explosion (search) processes are employed, and the mechanisms for keeping diversity of sparks are also well designed. In order to demonstrate the validation of the FA, a number of experiments were conducted on nine benchmark test functions to compare the FA with two variants of particle swarm optimization (PSO) algorithms, namely Standard PSO and Clonal PSO. It turns out from the results that the proposed FA clearly outperforms the two variants of the PSOs in both convergence speed and global solution accuracy.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>In recent years, Swarm Intelligence (SI) has become popular among researchers working on optimization problems all over the world <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>. SI algorithms, e.g. Particle Swarm Optimization (PSO) <ref type="bibr" target="#b2">[3]</ref>, Ant System <ref type="bibr" target="#b3">[4]</ref>, Clonal Selection Algorithm <ref type="bibr" target="#b4">[5]</ref>, and Swarm Robots <ref type="bibr" target="#b5">[6]</ref>, etc., have advantages in solving many optimization problems. Among all the SI algorithms, PSO is one of the most popular algorithm for searching optimal locations in a D-dimensional space. In 1995, <ref type="bibr">Kennedy and</ref> Eberhart proposed PSO as a powerful global optimization algorithm inspired by the behavior of bird blocks <ref type="bibr" target="#b2">[3]</ref>. Since then, the PSO has attracted the attentions of researchers around the globe, and a number of variants of PSO have been continually proposed <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>.</p><p>Like PSO, most of swarm intelligence algorithms are inspired by some intelligent colony behaviors in nature. In this paper, inspired by the emergent swarm behavior of fireworks, a novel swarm intelligence algorithm called Fireworks Algorithm (FA) is proposed for function optimization. The FA is presented and implemented by simulating the explosion process of fireworks. In the FA, two explosion (search) processes are employed and mechanisms for keeping diversity of sparks are also well designed. To validate the performance of the proposed FA, comparison experiments were conducted on nine benchmark test functions among the FA, the Standard PSO (SPSO), and the Clonal PSO (CPSO) <ref type="bibr" target="#b7">[8]</ref>. It is shown that the FA clearly outperforms the SPSO and the CPSO in both optimization accuracy and convergence speed.</p><p>The remainder of this paper is organized as follows. Section 2 describes the framework of the FA and introduces two types of search processes and mechanisms for keeping diversity. In Section 3, experimental results are presented to validate the performance of the FA. Section 4 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Fireworks Algorithm</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">FA Framework</head><p>When a firework is set off, a shower of sparks will fill the local space around the firework. In our opinion, the explosion process of a firework can be viewed as a search in the local space around a specific point where the firework is set off through the sparks generated in the explosion. When we are asked to find a point x j satisfying f (x j ) = y, we can continually set off 'fireworks' in potential space until one 'spark' targets or is fairly near the point x j . Mimicking the process of setting off fireworks, a rough framework of the FA is depicted in Fig. <ref type="figure">1</ref>.</p><p>In the FA, for each generation of explosion, we first select n locations, where n fireworks are set off. Then after explosion, the locations of sparks are obtained and evaluated. When the optimal location is found, the algorithm stops. Otherwise, n other locations are selected from the current sparks and fireworks for the next generation of explosion.</p><p>From Fig. <ref type="figure">1</ref>, it can be seen that the success of the FA lies in a good design of the explosion process and a proper method for selecting locations, which are respectively elaborated in subsection 2.2 and subsection 2. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Design of Fireworks Explosion</head><p>Through observing fireworks display, we have found two specific behavior of fireworks explosion. When fireworks are well manufactured, numerous sparks are generated, and the sparks centralize the explosion center. In this case, we enjoy the spectacular display of the fireworks. However, for a bad firework explosion, quite few sparks are generated, and the sparks scatter in the space. The two manners are depicted in Fig. <ref type="figure" target="#fig_1">2</ref>. From the standpoint of a search algorithm, a good firework denotes that the firework locates in a promising area which may be close to the optimal location. Thus, it is proper to utilize more sparks to search the local area around the firework. In the contrast, a bad firework means the optimal location may be far from where the firework locates. Then, the search radius should be larger. In the FA, more sparks are generated and the explosion amplitude is smaller for a good firework, compared to a bad one. </p><formula xml:id="formula_0">f (x) ∈ R, x min x x max ,<label>(1)</label></formula><p>where x = x 1 , x 2 , . . . , x d denotes a location in the potential space, f (x) is an objective function, and x min and x max denote the bounds of the potential space.</p><p>Then the number of sparks generated by each firework x i is defined as follows.</p><formula xml:id="formula_1">s i = m • y max -f (x i ) + ξ n i=1 (y max -f (x i )) + ξ , (<label>2</label></formula><formula xml:id="formula_2">)</formula><p>where m is a parameter controlling the total number of sparks generated by the n fireworks, y max = max(f (x i )) (i = 1, 2, . . . , n) is the maximum (worst) value of the objective function among the n fireworks, and ξ, which denotes the smallest constant in the computer, is utilized to avoid zero-division-error.</p><p>To avoid overwhelming effects of splendid fireworks, bounds are defined for s i , which is shown in Eq. 3.</p><formula xml:id="formula_3">ŝi = ⎧ ⎪ ⎨ ⎪ ⎩ round(a • m) if s i &lt; am round(b • m) if s i &gt; bm round(s i ) otherwise , a &lt; b &lt; 1 ,<label>(3)</label></formula><p>where a and b are const parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Amplitude of Explosion.</head><p>In contrast to the design of sparks number, the amplitude of a good firework explosion is smaller than that of a bad one. Amplitude of explosion for each firework is defined as follows.</p><formula xml:id="formula_4">A i = Â • f (x i ) -y min + ξ n i=1 (f (x i ) -y min ) + ξ , (<label>4</label></formula><formula xml:id="formula_5">)</formula><p>where Â denotes the maximum explosion amplitude,and</p><formula xml:id="formula_6">y min = min(f (x i )) (i = 1, 2, . . . , n)</formula><p>is the minimum (best) value of the objective function among the n fireworks.</p><p>Generating Sparks. In explosion, sparks may undergo the effects of explosion from random z directions (dimensions). In the FA, we obtain the number of the affected directions randomly as follows.</p><formula xml:id="formula_7">z = round(d • rand(0, 1)) , (<label>5</label></formula><formula xml:id="formula_8">)</formula><p>where d is the dimensionality of the location x, and rand(0, 1) is an uniform distribution over [0,1]. The location of a spark of the firework x i is obtained using Algorithm 1. Mimicking the explosion process, a spark's location xj is first generated. Then if the obtained location is found to fall out of the potential space, it is mapped to the potential space according to the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1. Obtain the location of a spark</head><p>Initialize the location of the spark:</p><formula xml:id="formula_9">xj = xi; z=round(d • rand(0, 1)); Randomly select z dimensions of xj ; Calculate the displacement: h = Ai • rand(-1, 1); for each dimension xj k ∈ {pre-selected z dimensions of xj } do xj k = xj k +h; if xj k &lt; x min k or xj k &gt; x max k then map xj k to the potential space: xj k = x min k + | xj k | %(x max k -x min k ); end if end for</formula><p>To keep the diversity of sparks, we design another way of generating sparks -Gaussian explosion, which is show in Algorithm 2. A function Gaussian(1, 1), which denotes a Gaussian distribution with mean 1 and standard deviation 1, is utilized to define the coefficient of the explosion. In our experiments, m sparks of this type are generated in each explosion generation. </p><formula xml:id="formula_10">for each dimension xj k ∈ {pre-selected z dimensions of xj } do xj k = xj k • g; if xj k &lt; x min k or xj k &gt; x max k then map xj k to the potential space: xj k = x min k + | xj k | %(x max k -x min k ); end if end for</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Selection of Locations</head><p>At the beginning of each explosion generation, n locations should be selected for the fireworks explosion. In the FA, the current best location x * , upon which the objective function f (x * ) is optimal among current locations, is always kept for the next explosion generation. After that, n -1 locations are selected based on their distance to other locations so as to keep diversity of sparks. The general distance between a location x i and other locations is defined as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>R(x</head><formula xml:id="formula_11">i ) = j∈K d(x i , x j ) = j∈K x i -x j , (<label>6</label></formula><formula xml:id="formula_12">)</formula><p>where K is the set of all current locations of both fireworks and sparks.</p><p>Then the selection probability of a location x i is defined as follows.</p><formula xml:id="formula_13">p(x i ) = R(x i ) j∈K R(x j ) . (<label>7</label></formula><formula xml:id="formula_14">)</formula><p>When calculating the distance, any distance measure can be utilized including Manhattan distance, Euclidean distance, Angle-based distance, and so on <ref type="bibr" target="#b8">[9]</ref>. When d(x i , x j ) is defined as | f (x i )f (x j ) |, the probability is equivalent to the definition of the immune density based probability in Ref. <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Summary</head><p>Algorithm 3 summarizes the framework of the FA. During each explosion generation, two types of sparks are generated respectively according to Algorithm 1 and Algorithm 2. For the first type, the number of sparks and explosion amplitude depend on the quality of the corresponding firework (f (x i )). In the contrast, the second type is generated using a Gaussian explosion process, which conducts search in a local Gaussian space around a firework. After obtaining the locations of the two types of sparks, n locations are selected for the next explosion generation. In the FA, approximate n + m + m function evaluations are done in each generation. Suppose the optimum of a function can be found in T generations, then we can deduce that the complexity of the FA is O(T * (n + m + m)).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 3. Framework of the FA</head><p>Randomly select n locations for fireworks; while stop criteria=false do Set off n fireworks respectively at the n locations: for each firework xi do Calculate the number of sparks that the firework yields: ŝi, according to Eq. 3; Obtain locations of ŝi sparks of the firework xi using Algorithm 1; end for for k=1: m do Randomly select a firework xj ; Generate a specific spark for the firework using Algorithm 2; end for Select the best location and keep it for next explosion generation; Randomly select n -1 locations from the two types of sparks and the current fireworks according to the probability given in Eq. 7; end while</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Benchmark Functions</head><p>To investigate the performance of the proposed FA, we conducted experiments on nine benchmark functions. The feasible bounds for all functions are set as [-100, 100] D . The expression of the functions, initialization intervals and dimensionalities are listed in Table <ref type="table">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 1. Nine benchmark functions utilized in our experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Function</head><p>Expression</p><formula xml:id="formula_15">Initialization D Sphere F1 = D i=1 x 2 i [30, 50] D 30 Rosenbrock F2 = D-1 i=1 (100(xi+1 -x 2 i ) 2 + (xi -1) 2 ) [30, 50] D 30 Rastrigrin F3 = D i=1 (x 2 i -10 cos(2πxi) + 10) [30, 50] D 30 Griewank F4 = 1 + D i=1 x 2 i 4000 -D i=1 cos( x i √ i ) [ 3 0 , 50] D 30 Ellipse F5 = D i=1 10 4 i-1 D-1 x 2 i [15, 30] D 30 Cigar F6 = x 2 1 + D i=2 10 4 x 2 i [15, 30] D 30 Tablet F7 = 10 4 x 2 1 + D i=2 x 2 i [15, 30] D 30 Schwefel F8 = D i=1 ((x1 -x 2 i ) 2 + (xi -1) 2 ) [ 1 5 , 30] D 30 Ackley F9 = 20 + e -20exp -0.2 1 D D i=1 x 2 i [15, 30] D 30 -exp 1 D D i=1 cos(2πx 2 i )</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Comparison Experiments among the FA, the CPSO and the SPSO</head><p>In this section, we compare the performance of the FA with the CPSO and the SPSO in terms of both convergence speed and optimization accuracy. </p><p>The parameters of both the CPSO and the SPSO are set as those in Ref. <ref type="bibr" target="#b7">[8]</ref>.</p><p>For the FA, the parameters were selected by some preliminary experiments. We found that the FA worked quite well at the setting: n = 5, m = 50, a = 0.04, b = 0.8, Â = 40, and m = 5, which is applied in all the comparison experiments. Table <ref type="table" target="#tab_0">2</ref> depicts the optimization accuracy of the three algorithms on nine benchmark functions, which are averaged over 20 independent runs. It can be seen that the proposed FA clearly outperforms both the CPSO and SPSO on all the functions. In addition, the FA can find optimal solutions on most benchmark functions in less than 10000 function evaluations, as shown in Table <ref type="table" target="#tab_1">3</ref>. However, the optimization accuracy of the CPSO and the SPSO is unacceptable within 10000 function evaluations.</p><p>Besides optimization accuracy, convergence speed is quite essential to an optimizer. To validate the convergence speed of the FA, we conducted more thorough experiments. Fig. <ref type="figure" target="#fig_3">3</ref> depicts the convergence curves of the FA, the CPSO and the SPSO on eight benchmark functions averaged over 20 independent runs. From these results, we can arrive at a conclusion that the proposed FA has a much faster speed than the CPSO and the SPSO. From Table <ref type="table" target="#tab_1">3</ref>, we can find that the FA can find excellent solutions with only 10000 times of function evaluations. This also reflects the fast convergence speed of the proposed FA.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Discussion</head><p>As shown in the experiments, the FA has a faster convergence speed and a better optimization accuracy, compared to the PSO. We consider the success of the FA lies in the following two aspects.</p><p>-In the FA, sparks suffer the power of explosion from z dimensions simultaneously, and the z dimensions are randomly selected for each spark xi . Thus, there is a probability that the differences between the firework and the target location happen to lie in these z dimensions. In this scenario, the sparks of the firework can move towards the target location from z directions simultaneously, which endues the FA with a fast convergence speed. -Two types of sparks are generated to keep the diversity of sparks, and the specific selection process for locations is a mechanism for keeping diversity. Therefore, the FA has the capability of avoiding premature convergence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>Mimicking the explosion process of fireworks, the so-called FA is proposed and implemented for function optimization. The experiments among the FA, the CPSO and the SPSO have shown that the proposed FA has a promising performance. It clearly outperforms the CPSO and the SPSO on nine benchmark functions in terms of both optimization accuracy and convergence speed, which endues the FA with a promising prospect of application and extension. In future work, we will seek a deep theoretical analysis on the FA and try to apply the FA to some practical engineering applications. Finally, we intend to discuss the relationship between the FA and other general-purpose optimization algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>3 .Fig. 1 .</head><label>31</label><figDesc>Fig. 1. Framework of fireworks algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Two types of fireworks explosion</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Algorithm 2 .</head><label>2</label><figDesc>Obtain the location of a specific spark Initialize the location of the spark: xj = xi; z=round(d • rand(0, 1)); Randomly select z dimensions of xj ; Calculate the coefficient of Gaussian explosion: g = Gaussian(1, 1);</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Convergence curves of the FA, the CPSO and the SPSO on eight benchmark functions. The function fitness are averaged over 20 independent runs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 2 .</head><label>2</label><figDesc>Statistical mean and standard deviation of solutions found by the FA, the CPSO and the SPSO on nine benchmark functions over 20 independent runs</figDesc><table><row><cell>Function</cell><cell cols="4">Function FA's mean CPSO's mean SPSO's mean evluations (StD) (StD) (StD)</cell></row><row><cell>Sphere</cell><cell>500000</cell><cell>0.000000 (0.000000)</cell><cell>0.000000 (0.000000)</cell><cell>1.909960 (2.594634)</cell></row><row><cell>Rosenbrock</cell><cell>600000</cell><cell>9.569493 (12.12829)</cell><cell>33.403191 (42.513450)</cell><cell>410.522552 (529.389139)</cell></row><row><cell>Rastrigrin</cell><cell>500000</cell><cell>0.000000 (0.000000)</cell><cell>0.053042 (0.370687)</cell><cell>167.256119 (42.912873)</cell></row><row><cell>Griewank</cell><cell>200000</cell><cell>0.000000 (0.000000)</cell><cell>0.632403 (0.327648)</cell><cell>2.177754 (0.294225)</cell></row><row><cell>Ellipse</cell><cell>500000</cell><cell>0.000000 (0.000000)</cell><cell>0.000000 (0.000000)</cell><cell>53.718807 (68.480173)</cell></row><row><cell>Cigar</cell><cell>600000</cell><cell>0.000000 (0.000000)</cell><cell>0.000000 (0.000000)</cell><cell>0.002492 (0.005194)</cell></row><row><cell>Tablet</cell><cell>500000</cell><cell>0.000000 (0.000000)</cell><cell>0.000000 (0.000000)</cell><cell>1.462832 (1.157021)</cell></row><row><cell>Schwefel</cell><cell>600000</cell><cell>0.000000 (0.000000)</cell><cell>0.095099 (0.376619)</cell><cell>0.335996 (0.775270)</cell></row><row><cell>Ackley</cell><cell>200000</cell><cell>0.000000 (0.000000)</cell><cell>1.683649 (</cell><cell>12.365417</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 3 .</head><label>3</label><figDesc>Statistical mean and standard deviation of solutions found by the FA, the CPSO and the SPSO on nine benchmark functions over 20 independent runs of 10000 function evaluations</figDesc><table><row><cell>Function</cell><cell>FA's mean (StD)</cell><cell>CPSO's mean (StD)</cell><cell>SPSO's mean (StD)</cell></row><row><cell>Sphere</cell><cell>0.000000 (0.000000)</cell><cell>11857.425781 (3305.973067)</cell><cell>24919.099609 (3383.241523)</cell></row><row><cell>Rosenbrock</cell><cell cols="3">19.38330 (11.94373) (1741747548.420642) (960421617.568024) 2750997504.000000 5571942400.000000</cell></row><row><cell>Rastrigrin</cell><cell>0.000000 (0.000000)</cell><cell>10940.148438 (3663.484331)</cell><cell>24013.001953 (4246.961530)</cell></row><row><cell>Griewank</cell><cell>0.000000 (0.000000)</cell><cell>3.457273 (0.911027)</cell><cell>7.125976 (0.965788)</cell></row><row><cell>Ellipse</cell><cell>0.000000 (0.000000)</cell><cell>2493945.500000 (1199024.648305)</cell><cell>5305106.500000 (1117954.409340)</cell></row><row><cell>Cigar</cell><cell>0.000000 (0.000000)</cell><cell>122527168.000000 (28596381.089661)</cell><cell>149600864.000000 (13093322.778560)</cell></row><row><cell>Tablet</cell><cell>0.000000 (0.000000)</cell><cell>15595.107422 (8086.792234)</cell><cell>42547.488281 (8232.221882)</cell></row><row><cell>Schwefel</cell><cell>4.353733 (1.479332)</cell><cell>8775860.000000 (1217609.288290)</cell><cell>6743699.000000 (597770.084232)</cell></row><row><cell>Ackley</cell><cell>0.000000 (0.000000)</cell><cell>15.907665 (1.196082)</cell><cell>18.423347 (0.503372)</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowlegements</head><p>. This work was supported by National Natural Science Foundation of China (NSFC), under Grant No. 60875080 and 60673020, and partially supported by the National High Technology Research and Development Program of China (863 Program), with Grant No. 2007AA01Z453. Authors appreciate Mr. Chao Rui for his facility with the early phase of the experiments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The biological principles of swarm intelligence</title>
		<author>
			<persName><forename type="first">S</forename><surname>Garnier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gautrais</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Theraulaz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Swarm Intelligence</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="31" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Swarm intelligence algorithms in bioinformatics</title>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Abraham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Konar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Studies in Computational Intelligence</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="113" to="147" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Particle swarm optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Eberhart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Conference on Neural Networks</title>
		<meeting>IEEE International Conference on Neural Networks</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1942" to="1948" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Ant system: optimization by a colony of cooperating agents</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maniezzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colorni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man, and Cybernetics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="41" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
	<note>Part B: Cybernetics</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Learning and optimization using the clonal selection principle</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>De Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Von Zuben</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="239" to="251" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Swarm intelligence in cellular robotic systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Beni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NATO Advanced Workshop on Robots and Biological Systems</title>
		<meeting>NATO Advanced Workshop on Robots and Biological Systems</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Defining a standard for particle swarm optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bratton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Swarm Intelligence Symposium</title>
		<meeting>IEEE Swarm Intelligence Symposium</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="120" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Clonal particle swarm optimization and its applications</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Congress on Evolutionary Computation</title>
		<meeting>IEEE Congress on Evolutionary Computation</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="2303" to="2309" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Distance measures for PCA-based face recognition</title>
		<author>
			<persName><forename type="first">V</forename><surname>Perlibakas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="711" to="724" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Improvement on regulating definition of antibody density of immune algorithm</title>
		<author>
			<persName><forename type="first">G</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Conference on Neural Information Processing</title>
		<meeting>the 9th International Conference on Neural Information Processing</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="2669" to="2672" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
