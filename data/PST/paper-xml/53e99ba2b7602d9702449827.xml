<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011-11-09">November 09, 2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">A</forename><surname>Colombo</surname></persName>
							<email>awcolombo@et-inf.fho-emden.de</email>
							<affiliation key="aff0">
								<orgName type="department">Deployment of Evolvable Production Systems</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Engi-neering Electrotécnica</orgName>
								<orgName type="department" key="dep2">Faculdade de Ciências e Tecnologia</orgName>
								<orgName type="institution" key="instit1">UNINOVA</orgName>
								<orgName type="institution" key="instit2">Universidade Nova de Lisboa</orgName>
								<address>
									<postCode>2829-516</postCode>
									<settlement>Caparica</settlement>
									<country key="PT">Portugal</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Department of Technology</orgName>
								<orgName type="department" key="dep2">Electrotechnic and Indus-trial Informatics</orgName>
								<orgName type="institution">University of Applied Sciences Emden-Leer</orgName>
								<address>
									<postCode>D-26723</postCode>
									<settlement>Emden</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">Schneider Electric-Corporate R&amp;D</orgName>
								<address>
									<postCode>F-38050</postCode>
									<settlement>Grenoble</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2011-11-09">November 09, 2011</date>
						</imprint>
					</monogr>
					<idno type="MD5">50653F95BD15E78DC4B4274A9D4ED5AA</idno>
					<idno type="DOI">10.1109/TII.2011.2166779</idno>
					<note type="submission">received February 28, 2011; revised June 22, 2011; accepted July 30, 2011. Date of publication September 06, 2011; date of current version</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:08+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Automation</term>
					<term>production system</term>
					<term>semantic web</term>
					<term>software tools</term>
					<term>web services</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Nowadays, Service-oriented Architecture (SOA) paradigm is becoming a broadly deployed standard for business and enterprise integration. It continuously spreads across the diverse layers of the enterprise organization and disparate domains of application envisioning a unified communication solution.</p><p>In the industrial domain, Evolvable Production System (EPS) paradigm focus on the identification of guidelines and solutions to support the design, operation, maintenance, and evolution of complete industrial infrastructures.</p><p>Similarly to several other domains, the crescent ubiquity of smart devices is raising important lifecycle concerns such as device setup, control, management, supervision and diagnosis. From initial setup and deployment to system lifecycle monitoring and evolution, each device needs to be taken into account and easily reachable.</p><p>The present work exploits the association of EPS and SOA paradigms in the pursuit of a common architectural solution to support the different phases of the device lifecycle. The result is a modular, adaptive and open infrastructure forming a complete SOA ecosystem that will make use of the embedded capabilities supported by the proposed device model. The infrastructure components are specified and it is shown how they can interact and be combined to adapt to current system specificity and requirements. Finally, a proof-of-concept prototype deployed in a real industrial production scenario is also detailed and results are presented.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>time-to-market delay <ref type="bibr" target="#b1">[2]</ref>. To cope with this new reality and achieve a competitive advantage over competitors, future productions systems must provide solutions to the following known issues.</p><p>• Long time for system design, commissioning and setup.</p><p>• Complex and time-consuming reengineering phase to trail requirements variations. • Inflexible centralized/hierarchical implementations.</p><p>• Scalability involves exponential complexity.</p><p>• No default fault-tolerance or redundancy.</p><p>• Incompatibility between different vendors equipment and legacy systems. • Shop floor isolated from higher level business Information and Communications Technologies (ICT). In reality, the world of shop floor equipment is characterized by a high degree of diversity in device functionality, form factor, network protocols, input/output features, as well as the presence of many heterogeneous hardware and software platforms. In areas with a large base of installed devices like industrial automation, this origins a patchwork of technology islands known by its poor interoperability and scalability. A big share of the total cost of a manufacturing plant during its lifecycle is spent on installation and setup. Maintenance downtime accounts for another substantial portion of the operating costs. It is then fundamental to specify a unified approach to cope with the complete system lifecycle covering all its different phases of operation.</p><p>In order to face these situations, the combination of both Evolvable Production Systems (EPS) and Service-oriented Architecture (SOA) paradigms and compliant technology promises to deliver here an important input. The next section will then present these and other adjacent concepts that support the current proposal; Section III specifies the current device model; Section IV illustrates the SOA ecosystem along with its primary components; Section V details the proof-of-concept implementation in a real production environment; and, finally, conclusions and future work are presented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. SUPPORTING CONCEPTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Evolvable Production Systems (EPS)</head><p>Evolvable Assembly Systems (EAS) paradigm <ref type="bibr" target="#b2">[3]</ref> defines a collection of principles to support the design, maintenance and evolution of future assembly systems. The goal of EAS comprises not only the system components ability to adapt accordingly to the change over production volume, type or conditions, but also the assistance in the evolution of these same com-ponents in time such that processes may become more robust and optimized. These goals are of major importance to support Small and Medium Enterprises (SMEs) lifecycle and achieve organizational sustainability in an increasingly global and competitive environment.</p><p>First, researched under the framework of EAS, EPS paradigm <ref type="bibr" target="#b3">[4]</ref> emerged as a broader approach for a wide range of specifications, design, and technical considerations with an increased focus over bioinspired mechanisms and its mapping to recent technological achievements and opportunities.</p><p>The main guidelines of EPS comprise distributed control, a modularized, intelligent and open architecture, and a comprehensive and multi dimensional methodological support that comprises a reference architecture. In EPS, there are two fundamental guiding principles as defined in <ref type="bibr" target="#b4">[5]</ref>.</p><p>• Principle 1: the most innovative product design can only be achieved if no assembly process constraints are posed. The ensuing, fully independent, process selection procedure may then result in an optimal assembly system methodology. • Principle 2: Systems under a dynamic condition need to be evolvable, i.e., they need to have an inherent capability of evolution to address the new or changing set of requirements. In order to remain competitive, dynamic systems need to be straightforwardly evolvable, i.e., they need to have an inherent capability of evolution to address a new or an updated collection of requirements.</p><p>An important ingredient in the EPS context is the domain knowledge. Retrieving and storing knowledge into an ontology mechanism allows an integrated view of the different stakeholders understanding of their domains. On one hand, product and system designers need to react to new product or throughput requirements, on the other hand, there is the system and its features and capabilities. The EPS knowledge model must then uniform the following domains.</p><p>• Product knowledge: captures the knowledge related to product specification and design to assembly tasks. In this context, adaptation will represent the ability of a system to propose an alternative layout/configuration to overcome an existing disturbance. Evolution, on the other hand, is mediated by a top level strategic decision that will result in the development of one or more suitable modules or product reengineering to, iteratively, further explore alternatives in system reconfiguration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Service-Oriented Architecture (SOA)</head><p>Nowadays, there is very little doubt that the SOA paradigm <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref> is already a major topic in many branches of technology, not exclusively in original business layer ICT. Its influence and adoption are spreading across the most disparate domains of applications, such as business platforms, telecommunications, healthcare, transportation, and building, home and, of course, industrial automation.</p><p>As defined in <ref type="bibr" target="#b7">[8]</ref>, SOA establishes an architectural model that aims to enhance the efficiency, agility, and productivity of an enterprise by positioning services as the primary means through which solution logic is represented in support of the realization of strategic goals associated with service-oriented computing.</p><p>Autonomy and interoperability are, by definition, contradictory properties of a service, however SOA manages to combine them smoothly. The service is considered autonomous since it is created and operates independently of their environment and it is self-contained. It is also interoperable through its interface, which exposes its functionality to the environment, abstracting implementation details.</p><p>As discussed in <ref type="bibr" target="#b8">[9]</ref>, the SOA essential principles for the industrial automation domain are as follows.</p><p>• The service design follows an outside-in approach, i.e., the service interface explicit how that service can fit in a larger process representing an atomic task. • Services can be composed into higher-level services.</p><p>• By default, communication is loosely coupled and with asynchronous nature. • Services abstract heterogeneous hardware and software platforms from different providers. As each service encapsulates its own complexity, scalability, manageability and maintenance become built-in features. • Entities collaborate by sharing info and resources, in a peer-to-peer manner. • It enhances genericity and reuse. In SOA, the logical and physical aspects of a resource are uncoupled, enabling a holonic approach to solve the problem. In this way, all device intricacies are hidden behind services interfaces. One of the most promising approaches is its application to the level of small intelligent devices where the usage of high-level service-based communications infrastructure enables completely innovative opportunities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. SOA as an Evolvable Brick for Production Systems</head><p>Production systems are always programmed to be predictable, however history proves that unexpected behavior arises, equipment fails, and changes on requirements imply a continuous need to reengineer. Uncertainty must be always taken into account and reengineering processes need to be sufficiently agile to cope with the evolution of production requirements.</p><p>Even though other initiatives already explored the application of SOA principles into the domain of industrial production, such as <ref type="bibr" target="#b9">[10]</ref>- <ref type="bibr" target="#b12">[13]</ref>, it is still imperative to focus over the needs at device level and explore which features and services should be made available in each element of the infrastructure to enhance EPS performance. It is important to remember that overall system agility is always limited by its least agile element. The present work will address device integration, setup and lifecycle management tasks which are known to be particularly morose and pricey.</p><p>The application of EPS has been traditionally supported by Multi-Agent Systems (MAS), however, this approach is entirely compliant with an SOA approach as discussed in <ref type="bibr" target="#b13">[14]</ref> and <ref type="bibr" target="#b14">[15]</ref>. Even if the current approach is based on SOA principles, it is still entirely compatible with a MAS approach, since it may provide the foundations upon which a more complex MAS can be built on, remaining compliant at the same time with the higher levels of the enterprise ICT infrastructure.</p><p>In a service-oriented production system, all elements expose their abilities in the form of services. These elements are able interact to share other types of data besides common service invocations. These interactions may include discovery, metadata exchange, eventing or even "heartbeat" features. Besides the need to easily deploy devices and services, there is an emergent need to assist, and even automate the process of identification, setup and management of these resources in an agile manner.</p><p>To cope with the lack of explicit semantics in the Internet domain, the Semantic Web concept was first delineated by Berners-Lee and Fischetti <ref type="bibr" target="#b15">[16]</ref>. Semantic Web, is an envisaged Internet evolution in which the meaning of online information and services is clearly characterized and linked, making it possible for the web to understand and satisfy the requests of people and machines to exploit it, as also depicted in <ref type="bibr" target="#b16">[17]</ref>. In summary, the Semantic Web is about two things: common formats for integration and combination of data drawn from diverse sources, and language for recording how the data relates to real-world objects.</p><p>Based on previous premises, the concept of semantic web services was born as complement to traditional web services technologies, as presented in <ref type="bibr" target="#b17">[18]</ref> and <ref type="bibr" target="#b18">[19]</ref>. In the current domain, research has still several issues to address to really convince industrial partners to invest on this paradigm shift, such as security, reliability, runtime performance and robustness. Although some work was already done using this approach, as in <ref type="bibr" target="#b19">[20]</ref>, it is still recommended to take a stepwise approach by specifying solutions enriched with these new concepts for a small set of well known issues, verify its feasibility and breakthrough points to then clearly exploit the results. As a first step, the semantic input must be kept in the scope of systems integrator assistance. Then, regarding runtime constraints and performance requirements, it can be envisaged to wisely automate certain common tasks to avoid the constant need of human intervention.</p><p>The present work focus over the device entity and exposes how the supporting infrastructure can benefit from new embedded SOA-compliant capabilities, as introduced in <ref type="bibr" target="#b20">[21]</ref>. A SOA-capable device gains in interoperability, autonomy and openness to be employed as an important brick over which complete application can be based on. Not only providing a common background communication technology and middleware, but also providing embedded added value over which more complex applications can be deployed faster and still remain evolvable enough to cope with dynamic system requirements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. DEVICE MODEL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Overview</head><p>In this context, a device, or more specifically a logical device, is to be seen as the main logical entity that abstracts an application element, while its hosted services represent the functionalities that a particular element allows others to exploit to accomplish their own goals. It is possible to define a logical device that can be employed whenever there is a need to abstract a particular system component not explicitly associated to a physical entity. The term physical device refers specifically to the physical apparatus comprising physical sensors and actuators. Subsequently, a physical device can be abstracted in the network as a logical device.</p><p>A service will encapsulate a function or behavior that can be discovered and used by any other network element in order to execute a certain task or provide a particular piece of information. The definition remains abstract enough to be mapped to a wide range of application domains.</p><p>This approach was firstly inspired by Devices Profile for Web Services (DPWS) specification <ref type="bibr" target="#b21">[22]</ref> and then further explored by adding extra elements and features to cope with domain specificity. DPWS is now a standard published in June 2009 by the OASIS Web Services Discovery and Web Services Devices Profile Technical Committee.</p><p>The device model shown in Fig. <ref type="figure" target="#fig_0">1</ref> represents the device itself as a real-world physical entity-a physical device. Legacy equipment can be straightforwardly integrated by applying a software wrapper that will abstract the equipment nature and abilities following the current device model. As defined in <ref type="bibr" target="#b22">[23]</ref>, a physical device will already embed some built-in services that will support the deployment of SOA-based applications but also other added-value services that will allow the integrator to discover, configure, monitor, and diagnose that particular device, for example.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Generic Services</head><p>Generic Services can be defined as a set of services considered common in a particular category of devices. These services typically offer identification, setup, monitoring and diagnosis skills, which can be seen as a preliminary contribution for embedded added-value. Moreover, there is a need to distinguish between different kinds of services available in a particular device: built-in and dynamically deployed services.</p><p>Built-in services are deployed by the device builder. This way, they are immediately available when taking a new device out from the box. A priori, they cannot be removed or modified by the end-user. The dynamic deployment service is a fundamental built-in service and it will allow the deployment of new resources, i.e., logical devices and services into that physical device. Whenever the end-user needs to deploy its own services, it would be possible to do it through the dynamic deployment service. Inclusively, it would be possible to extend the original set of mandatory generic services to handle current system requirements.</p><p>The existence of built-in services even in the smallest devices can reduce systems integration and reengineering idle times by easing and refining the means to access any device. For example, it would be possible to envisage a cross-layer interaction where a high level business application interacts with a field device without any intermediary protocol gateway, as described in <ref type="bibr" target="#b23">[24]</ref> and <ref type="bibr" target="#b24">[25]</ref>.</p><p>The process of discovering and configuring a device is crucial due to the fact that most devices relay on proprietary tools and protocols with strict configuration parameters to execute these tasks. Instead, by having generic built-in services that transparently support these same procedures, devices are now open to be addressed using any client compliant with standard web services technology. Moreover, due to the inherent separation between logical and physical layers, these processes are independent from network parameters, such as IP addresses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. User Services</head><p>User services are services that can be deployed into a physical device through the use of the dynamic deployment built-in service. These user services can be additions to the original set of built-in services, or services that will compose the current application. This approach will allow a higher level of device customization. Also, some resources can be considered generic enough and be reused in distinct applications, being deployed where and whenever they are required.</p><p>This approach promotes a distributed environment where the overall application is deployed across a large number of devices present in the shop floor environment. It will be then possible to deploy logical devices that represent the logical entities that can be observed from the current application point-of-view, exposing their hosted services as tasks that they are able to execute. An application can be composed of several of these logical devices forming several layers of increasing abstraction. A device or service can now be discovered only by searching for roles or tasks it is able to execute.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. ARCHITECTURE</head><p>The device model presented in previous section will then fit in a bigger architecture that will exploit its embedded capabilities. This potential at device level will subsequently enhance the overall system ability in terms of interoperability and agility by laying over open web standards and allowing a fast deployment of services whenever system requirements changes oblige to.</p><p>The current architecture was developed by specifying and assembling elements that can mutually interact and be combined to agile the infrastructure evolution at shop floor device level. The reason to define a distributed collection of elements is to allow a customized mold according to system requirements and constraints. An outline of the architecture with its main components is represented in Fig. <ref type="figure" target="#fig_1">2</ref>. The next section will present in more detail the different elements of this architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Architecture Elements 1) Device:</head><p>As detailed in Section III, a device can be seen as a repository of resources-logical devices and hosted services.</p><p>2) Web Service: A web service is a software component that will encapsulate a function or behavior under its interface following SOA principles of design and technology. It can be discovered and exploited by other network entity in order to exe-cute a particular task or retrieve some kind of information, as presented in Section III.</p><p>3) Application: A service-oriented application is composed by several resources that cooperate between them usually using web services technology. The control structure is not strictly predefined and can be constructed based on available building blocks-logical devices and services. The system integrator simply needs to model the interaction patterns between these in order to achieve a behavior that fits system requirements and constraints.</p><p>4) Ontology: In this context, the ontology is a knowledge model that describes the overall service-oriented production system along with its components and the relations between them. Naturally, this ontology is always evolving due to the fact that new services, metadata, specification, and relation patterns are added or modified during system lifecycle.</p><p>The ontology will act as an updated reference model upon which more intelligent behavior can be supported. The present architecture takes this into account by exposing ontology management as a set of services available in the network. As an example, the ontology can define which kind of services a particular range of devices expose as built-in generic services, or which services can be aggregated to support the execution of a more complex task. Some ontologies were already developed to characterize the scope of production systems equipment, as the one in <ref type="bibr" target="#b25">[26]</ref>.</p><p>5) Service Deployer: This element represents a service-oriented software component that will support the deployment of services into a device available in the ecosystem. This component offers this function to the network in the form of a service possible to be employed whenever there is a need to update a device role or behavior-update set of services or metadata information.</p><p>6) Semantic Assistant: This element does not only support the execution of reasoning tasks over the service-oriented shop floor ontology, but also exposes these functionalities in the network as services. These services include semantic identification of devices and services, retrieval of generic services, mapping of features and services, service translation, etc.</p><p>The Semantic Assistant is implicitly connected to the infrastructure ontology since all reasoning is based over it and conditioned by the request action input. This component can provide an important assistance to service design tools during the development of new logical devices and services by ensuring that it remains compliant with infrastructure knowledge model, system specifications and expected QoS.</p><p>The Semantic Assistant can be configured to behave according to different levels of autonomy depending on the system critical factor set by the systems integrator. As a first step, the semantic input must be kept in the scope of systems integrator assistance. Then, regarding runtime performance and results, it can be envisaged to gradually automate certain common tasks to avoid constant need of human intervention.</p><p>7) Device Explorer: This element is a software component mostly used during analysis and debug of a service-oriented application. It comprises a perceptive HMI that allows the integrator to search the network for available devices and services, check their status, visualize metadata, or test available services. Although some major operating systems, such as Microsoft Windows Vista 7, already have their own device explorer, there are also other more complex standalone explorers, such as the one depicted in <ref type="bibr" target="#b26">[27]</ref>, which already supports the above features plus search filters, discovery proxy, dynamic invocation of services, along others.</p><p>Still, in the scope of service-oriented automation systems, other features promise to deliver an important input. For example, based on device and service metadata, it would be possible to extract not only the physical network topology but also the logical view of the system only based on local information. This can be presented either by a tree map or by a more complex graphical solution to provide a representation of the different logical levels of an application; e.g., it would be possible to visualize an higher level device with all its sub devices and services under it, and so on.</p><p>Furthermore, after discovering a device or service in the network, it will be possible to map its metadata with a serviceoriented shop floor ontology to allow a faster identification, setup, and integration of that element. This will allow, for example, the retrieval of the proper set of generic services available for that particular type of device, which will then facilitate communication.</p><p>Since dynamic deployment feature becomes abstracted as a network service through the Service Deployer component, it will be possible to deploy new services from the Device Explorer itself. The device explorer simply needs to invoke the dynamic deployment service, passing the service resources to deploy and the references of the device where to deploy. Without changing of HMI, the integrator can then test if deployed services are running properly. Moreover, the Semantic Assistant can aid the integrator by advising which services should be deployed into that particular device taking into account the type of device, context, and history records.</p><p>8) Service Design: This element refers to the tool, or set of tools, chosen by systems integrator to design or reengineer the current service-oriented application. This will include not simply a graphical environment to enable the construction of the application based on available logical devices and services, but should also allow the design and development of customized components that can be then deployed using the services offered by the Service Deployer component.</p><p>Each service implementation is then hidden and abstracted by a service wrapper possible to be deployed in a standardized manner into a device available in the network. In order to provide a proper model to design a SOA application, Service-Component Architecture (SCA) <ref type="bibr" target="#b27">[28]</ref> emerges as a reference specification model. 9) Service Repository: This element can be seen as a repository of logical devices and services that can be downloaded whenever they are needed. A Service Repository can be either locally based or available online as a business web portal. The online repository can be updated with resources submitted by third-party developers and made available online. These resources may include common control functions, enhanced features for setup or access of information, particular equipment implementations, etc. This way, external developers can provide modules to handle common functionalities particular to several domains, as well as communication modules compliant to other specifications, such as OPC-UA or SAP ERPs. The integrator simply needs to search the catalogue for the ones that best fit the current application, download them to the local repository and deploy them into the appropriated shop floor devices. For example, when built-in services are not enough to handle particular system requirements, there is a need to deploy extra services that might allow a more complex control or management over the device.</p><p>This approach promises to open new business models since any developer can now create its own resources, publish them online and make it available to the community to use them either for free or by paying a fee that covers the process of development. By promoting competition between service developers, the end-user will gain with the increasing added value, robustness, performance, and availability of these. Moreover, the clear separation between hardware and software layers will allow the same service to be deployed into different physical devices while being seamlessly available in the system. Even if implementation changes due to variations on device firmware capabilities, the service interface remains the same-a service can be substituted by an equivalent one without changing anything only by keeping the service interface.</p><p>10) Access Point: The Access Point is a communication gateway for mobile devices to the existing network ecosystem. Since the complete infrastructure is based on open standards for communication, both wireless and wired resources are able to interact transparently.</p><p>In the current domain of application, wireless devices are mostly envisaged to be employed during commissioning, troubleshooting, maintenance and diagnosis phases since it will allow the mobility of the responsible entity along the shop floor to check in the local the device status or system behavior. It will be also possible to use generic tools developed by third-party entities to manage the current system using mobile devices. Whenever there is a need to interact with a particular device for configuration, maintenance, monitoring or diagnosis purposes, it can be used a device with any open web standards-compliant tools, such as a PDA or a tablet with wireless access. Device generic built-in services will then provide basic discovery, management and control operations. In the same way, the actual deployed application will be easily discoverable and directly interoperable in the network since it is deployed in the form of several logical devices distributed across different physical devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. INDUSTRIAL AUTOMATION SCENARIO</head><p>In the industrial automation domain, system integrators are used to their own processes and programming languages. IEC-61131 programming languages are still the most used within this domain, due to its simplicity, availability and runtime performance. The challenge is then how to turn this reality compatible with a complete SOA ecosystem.</p><p>The current prototype implementation puts together DPWS and WS-Management specifications in a single application that supports the dynamic deployment of services. WS-Management specification <ref type="bibr" target="#b28">[29]</ref> describes a general WS-based protocol for  managing systems such as PCs, servers, devices, web services, applications, and other manageable entities.</p><p>All the information related to devices and according hosted services available in a physical device is defined in a XML file-XML Device Configuration File (see Fig. <ref type="figure" target="#fig_2">3</ref>) that can be accessed through any WS-Management compliant client. Following the device model previously introduced, this file contains the elements that describe service classes, logical devices and hosted services-the complete collection of resources deployed and available in that particular physical device. Although defined in the same file as deployed resources, built-in services are protected from external modifications by adding a read-only tag.</p><p>The logical interdependencies between the different types of resources will sometimes constrain the lifecycle management of these same resources, as previously presented in <ref type="bibr" target="#b22">[23]</ref>. These operations will be also constrained by the available memory and processing resources existing on the current physical device.</p><p>The automation control application is developed by abstracting system components and specifying appropriate behavior using IEC-61131 programming languages. As Service Design tool, it was used a modified version of Geensys ControlBuild software that supported the use SCA models to encapsulate each component and expose it as a web service. The original IEC-61131 code is translated to PLCOpen format, being embedded in a service template that will then be deployed as a service class into the device (see Fig. <ref type="figure" target="#fig_3">4</ref>).</p><p>It should be noted that this service template is independent from particular service implementation details. The implementation will be defined in a parameter value that can be run or interpreted by device firmware. The deployment of new resources The design and development of the application is completely independent from the hardware part until the deployment phase arrives. Here, the systems integrator maps each component to the according automation device. It is possible to dynamically deploy the same application each time into a different range of devices due to the abstraction of services interface-in a logical point-of-view, the important is the availability of these service and the task they are able to execute. Since it is possible to deploy the application into several distributed devices from a single point of access, instead of physically connect to each individual device, each one with different software, this approach enables a faster reengineering phase.</p><p>Once the resource is deployed and active, it will be possible to retrieve it and its services invoked or events subscribed in the network as any other DPWS device. By using DPWS, along with common web service invocation, also discovery, identification and eventing features are already supported in a distributed manner. Still, the specification is still open to add further functionalities to enhance a particular kind of performance.</p><p>As proof-of-concept, this approach was applied to a real industrial automation scenario. The scenario represents a packaging production system filling orange and white granules in small recipients attached to pallets that run over a circular conveyor. The main focus is on the dosing area, where two dosing machines, which are connected to the transport line, fill the recipients with the appropriate type and quantity of granules depending on the information stored on each pallet RFID tag.</p><p>Services were deployed across several automation devices that communicate using DPWS middleware. As depicted in Fig. <ref type="figure" target="#fig_4">5</ref>, logical devices and services are deployed into a PLC and into some IO devices. The PLC (Schneider Electric Modicon Premium + ETY) is responsible to control the pallet indexer and the RFID system (Schneider Electric Ositrack), while IO devices (Schneider Electric FTB prototype) control both the motor and trap that together shape a Dose Maker device. Whenever a pallet tag is detected by the RFID system (PalletID WS), it will invoke an Indexer service to take the pallet from the line and position it ready to be filled in the according dosing area. Then, the Dose Maker service is invoked by the Indexer and the recipient is filled with granules of the appropriate colour and quantity. The Dose Maker is responsible for decomposing this invocation into a sequence of other service invocations to the Motor and Trap services, to then notify the original invoker when the task is finished. This way, the Indexer service receives the end of execution notification from Dose Maker, the pallet is again placed in the line and the process restarts with the next pallet in line. It is also important to note this prototype was implemented using devices that are considered low power devices-ARM STR9 processor with 512 KB of Flash memory and 96 KB of RAM.</p><p>As Device Explorer, it was used DPWS Explorer from WS4D. <ref type="foot" target="#foot_0">1</ref> Using this tool, it was possible to retrieve each device metadata values, comprising not only some catalogue parameters but also available services contract and a link to the device web server, where the user is able to define a collection of setup, monitoring and diagnostic parameters using any conventional web browser. This simple feature already represents a major input to enhance device out-of-the-box connectivity and setup-one of the biggest known customer demands.</p><p>In summary, this proof-of-concept implementation presents a collection of task-oriented entities that compose a moldable service-oriented infrastructure focusing to resolve integration intricacies in a concrete industrial setup. The ability to reconfigure system behavior and features was considered to improve when comparing with more traditional approaches in terms of speed, interoperability, and hardware abstraction while remaining compliant with shop floor domain know-how.</p><p>The prototype summarized in this section, firstly shown in SODA<ref type="foot" target="#foot_1">2</ref> project industrial demonstrator, was then further exploited in SOCRADES<ref type="foot" target="#foot_2">3</ref> project industrial pilot application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>Inspired by EPS and SOA paradigms, the current work presents a new trend to support effortless lifecycle evolution, with particular focus over shop floor device level. By laying over open web standards and focusing on interoperability, modularity, uncomplicated management and adaptation, particularly enhanced by the use of the dynamic deployment built-in service, it is possible to define a set of components that together form a customizable infrastructure. This infrastructure is modular and adaptive enough to evolve along with system specificity and requirements during its lifecycle. Each infrastructure element exposes its services in the network, which will enable a customized composition of modules and a mutual transparent interoperability.</p><p>The current device model plays a major role on the support of the overall system evolution by embedding out-of-the-box services that enable transparent discovery, identification, setup, and management and, at the same time, allow effortless device and corresponding services customization. The current work also promotes paradigm and technology compliance with the actual trends in high-level business platforms already based on SOA technologies, while ensuring the expected functionality and performance to field domain experts.</p><p>Further research work is expected to specify which built-in services must be available in which range of devices to concretely address EPS methodology. As already introduced in <ref type="bibr" target="#b29">[30]</ref>, the combination of existing specifications, such as DPWS and OPC-UA, is expected to deliver a more widespread and robust middleware solution to the domain. Another aspect relates with the security concerns that must be taken into account particularly when accessing and modifying devices configuration and ontology without compromising overall system integrity and performance.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Device model.</figDesc><graphic coords="3,303.66,66.26,246.00,136.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Service-oriented lifecycle support infrastructure.</figDesc><graphic coords="4,146.64,66.58,300.00,200.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. XML device configuration file model.</figDesc><graphic coords="6,305.16,66.82,246.00,164.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Dynamic deployment process.</figDesc><graphic coords="6,305.16,265.12,246.00,86.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Proof-of-concept scenario: dose maker.</figDesc><graphic coords="7,115.14,66.96,360.00,138.00" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>See http://ws4d.e-technik.uni-rostock.de/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>See http://www.soda-itea.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>See http://www.socrades.eu/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_3"><p>Gonçalo Cândido (M'07) received the Licentiate degree in electrotechnical and computing engineering from the Universidade Nova de Lisboa, Caparica, Portugal, in 2006. Currently, he is working towards the Ph.D. degree in robotics and integrated manufacturing at the Universidade Nova de Lisboa.He currently works as a Research Engineer under the supervision of Prof. Jos Barata at CTS-UNI-NOVA, Department de Eng. Electrotécnica, Faculdade de Ciências e Tecnologia, Universidade Nova de Lisboa. He has been involved in several European collaborative projects such as the ITEA SODA project, IST SOCRADES, and NMP Self-Learning. His research interests include service-oriented applications in automation and manufacturing, semantic web services, multiagent systems, evolvable production systems, open web standards, and energy-efficiency applications.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>. This work was supported in part by FCT-Fundação para a Ciência e Tecnologia under Project Grant PEst-OE/EEI/UI0066/2011. Paper no. TII-11-083.</p><p>G. Cândido and J. Barata are with CTS-</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>He is a Professor with the Department of Electrical Engineering, New University of Lisbon, and a Senior Researcher with the UNINOVA Institute. He has participated in more than 15 international research projects involving different programs (NMP, IST, ITEA, ESPRIT). His main research interests are in the area of intelligent manufacturing with particular focus on complex adaptive systems, involving intelligent manufacturing devices. In the last years, he has participated actively researching SOA-based approaches for the implementation of intelligent manufacturing devices (e.g. within the InLife project). He has published over 60 original papers in international journals and international conferences. He Dr. Barata is a member of the IEEE technical committees on Industrial Agents (IES), Self-Organization and Cybernetics for Informatics (SMC), and Education in Engineering and Industrial Technologies (IES). He is also a member of the IFAC technical committee 4.4 (Cost Oriented Automation).</p><p>François Jammes (M'05) has been working for Schneider Electric since 1987. He is in charge of one of the major innovation project at Schneider Electric, looking at service-oriented architecture concepts, their implementation through Web services technology, and their applications in Schneider Electric application domains. He was leading several European collaborative initiatives such as the awarded ITEA SIRENA and ITEA SODA project, he was the Technical Manager of the IST SOCRADES integrated project, and he is leading the technical investigations of the new FP7 AESOP integrated project. He was the Schneider Electric leader of the standardization and implementation of the standardized Device Profile for Web Services (DPWS) solution, bringing the SOA capability down to the device level, now released in open source (https://forge.soa4d.org/). He is a Schneider Electric Edison Senior Expert in communication networks.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The globalization of markets</title>
		<author>
			<persName><forename type="first">T</forename><surname>Levitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Marketing: Critical Perspectives on Business and Management</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page">445</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Mass Customization: The New Frontier in Business Competition</title>
		<author>
			<persName><forename type="first">B</forename><surname>Pine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Davis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Harvard Business School Pr</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Evolvable assembly systems-A new paradigm?</title>
		<author>
			<persName><forename type="first">M</forename><surname>Onori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 33rd Int. Symp. Robotics (ISR&apos;02)</title>
		<meeting>33rd Int. Symp. Robotics (ISR&apos;02)<address><addrLine>Stockholm, Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="617" to="621" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Evolvable production systems: A position paper</title>
		<author>
			<persName><forename type="first">B</forename><surname>Lindberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Onori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Semere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Swedish Prod. Symp</title>
		<meeting>Swedish Prod. Symp<address><addrLine>Gothenburg, Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Evolvable assembly systems: Developments and advances</title>
		<author>
			<persName><forename type="first">D</forename><surname>Semere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Barata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Onori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Symp. Assembly Manuf</title>
		<meeting>IEEE Int. Symp. Assembly Manuf</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="282" to="287" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Service-Oriented Architecture and Design Strategies</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rosen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lublinsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Balcer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Soa</forename><surname>Applied</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Wiley India Pvt. Ltd</publisher>
			<pubPlace>Bangalore, India</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Service-Oriented Modeling: Service Analysis, Design, and Architecture</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Service-Oriented Architecture: Concepts, Technology, and Design</title>
		<author>
			<persName><forename type="first">T</forename><surname>Erl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Upper Saddle River, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Service-oriented paradigms in industrial automation</title>
		<author>
			<persName><forename type="first">F</forename><surname>Jammes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Smit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Inform</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="62" to="70" />
			<date type="published" when="2005-02">Feb. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A real-time service-oriented architecture for industrial automation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Cucinotta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mancina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Anastasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lipari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Mangeruca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Checcozzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Rusina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Inform</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="267" to="277" />
			<date type="published" when="2009-08">Aug. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Service-oriented control architecture for reconfigurable production systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mendes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Leitão</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colombo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Restivo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Ind. Inform</title>
		<meeting>IEEE Int. Conf. Ind. Inform</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="744" to="749" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Service-oriented architecture for distributed publish/subscribe middleware in electronics production</title>
		<author>
			<persName><forename type="first">I</forename><surname>Delamer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lastra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Inform</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="281" to="294" />
			<date type="published" when="2006-11">Nov. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An agent-based service-oriented integration architecture for collaborative intelligent manufacturing</title>
		<author>
			<persName><forename type="first">W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ghenniwa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Robot. Comput.-Integr. Manuf</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="315" to="325" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Agents as web services</title>
		<author>
			<persName><forename type="first">M</forename><surname>Huhns</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Comput</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="93" to="95" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">MAS and SOA: Complementary automation paradigms</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ribeiro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Barata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mendes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Innovation in Manuf. Netw</title>
		<imprint>
			<biblScope unit="issue">266</biblScope>
			<biblScope unit="page" from="259" to="268" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Weaving the Web: The Original Design and Ultimate Destiny of the World Wide Web by Its Inventor</title>
		<author>
			<persName><forename type="first">T</forename><surname>Berners-Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fischetti</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Harper</publisher>
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The semantic web: A guide to the future of XML, web services, and knowledge</title>
		<author>
			<persName><forename type="first">M</forename><surname>Daconta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Obrst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Rev</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="778" to="779" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Semantic web services</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mcilraith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Son</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zeng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intell. Syst</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="46" to="53" />
			<date type="published" when="2001-03">Mar. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Semantic web services</title>
		<author>
			<persName><forename type="first">T</forename><surname>Payne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Lassila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intell. Syst</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="14" to="15" />
			<date type="published" when="2004-07">Jul. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Semantic web services in factory automation: Fundamental insights and research roadmap</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lastra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Delamer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Inform</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="2006-02">Feb. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Service-oriented architecture at device level to support evolvable production systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cândido</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Barata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colombo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jammes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Ind. Electron. Int. Symp. (ISIE)</title>
		<meeting>IEEE Ind. Electron. Int. Symp. (ISIE)</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="2669" to="2674" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Devices profile for web services version 1.1 specification</title>
		<author>
			<persName><surname>Oasis</surname></persName>
		</author>
		<ptr target="http://www.oasis-open.org/commit-tees/ws-dd" />
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Generic management services for DPWS-enabled devices</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cândido</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jammes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Barata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colombo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Annu. Conf. IEEE Ind. Electron. Soc., IECON&apos;09</title>
		<meeting>Annu. Conf. IEEE Ind. Electron. Soc., IECON&apos;09</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="3931" to="3936" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Vertical integration of enterprise industrial systems utilizing web services</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kalogeras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gialelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Alexakos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Georgoudakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Koubias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Inform</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="120" to="128" />
			<date type="published" when="2006-05">May 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Integration of SOA-ready networked embedded devices in enterprise systems via a cross-layered web service infrastructure</title>
		<author>
			<persName><forename type="first">S</forename><surname>Karnouskos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Baecker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">De</forename><surname>Souza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Spiess</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th IEEE Conf. Emerging Technol. Factory Autom</title>
		<meeting>12th IEEE Conf. Emerging Technol. Factory Autom</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="293" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Equipment ontology for modular reconfigurable assembly systems</title>
		<author>
			<persName><forename type="first">N</forename><surname>Lohse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hirani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ratchev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Flexible Manuf. Syst</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="301" to="314" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">WS4D: SOA-toolkits making embedded systems ready for web services</title>
		<author>
			<persName><forename type="first">E</forename><surname>Zeeb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bobek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pruter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pohl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Krumm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Luck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Golatowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Timmermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Open Source Software and Product Lines (OSSPL07)</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">1088</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Service component architecture-Building systems using service oriented architecture</title>
		<author>
			<persName><forename type="first">M</forename><surname>Beisiegel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Blohm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Booz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dubray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BEA, IBM, Interface</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<date type="published" when="2005">Whitepaper 2005</date>
			<pubPlace>IONA, Oracle, SAP, Siebel, Sybase</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Web services for management (WS-Management) specification</title>
		<author>
			<persName><surname>Dmtf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">SOA at device level in the industrial domain: Assessment of OPC UA and DPWS specifications</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cândido</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jammes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Barata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Colombo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 8th IEEE Int. Conf. Ind. Inform. (INDIN)</title>
		<meeting>8th IEEE Int. Conf. Ind. Inform. (INDIN)</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="598" to="603" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
