<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Inferring the Positions of Bodies from_ Specified Spatial Relationships&apos;</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Ambler</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Artificial Intelligence</orgName>
								<orgName type="institution">University of Edinburgh</orgName>
								<address>
									<settlement>Edinburgh</settlement>
									<country key="GB">Scotland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Popplestone</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Artificial Intelligence</orgName>
								<orgName type="institution">University of Edinburgh</orgName>
								<address>
									<settlement>Edinburgh</settlement>
									<country key="GB">Scotland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Inferring the Positions of Bodies from_ Specified Spatial Relationships&apos;</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A9AD930EFC00A3B72DF5E737B2A81E9B</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A program has been developed which takes a specification of a set of bodies and of spatial relations that are to hold between them in some goal state, and produces expressions denoting the positions of the bodies in the goal state together with residual equations linking the variables in these expressions.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The work described in this paper is motivated by the desire to construct an easily instructable robot to work in the domain of automatic assembly, Earlier work at Edinburgh <ref type="bibr" target="#b0">[1]</ref> produced a device capable of being easily taught to recognize solid bodies from a small number of viewpoints and Jn isolation, and to stack these in pi'e-determined places. It could also extract bodies from a heap and place them in isolation to recognize them. However, the ensuing assembly of the objects from their standard positions was programmed by specifying the motions of the robo~ absolutely (e,g., moveto <ref type="bibr" target="#b8">(9,</ref><ref type="bibr" target="#b6">7)</ref>; ... graspto(O);...). A much less painful way of instructing the robot is to specify spatial relations that are to be established between parts being manipulated in successive stages of the assembly process. Thus one might say "place the cylindrical face of the rod against the sloping faces of the Vee block" (see Fig, <ref type="figure">9</ref>). Even if such an English sentence had to be translated into a sort of predicate calculus form, the gain in instructability of the device would be great. In this paper we consider how to specify such an intermediate goal state, and, given such a specification, how to extract from it information about the actual position that each body in the system will have to have in the goal state. The .~patial relations we use are against and fits. against Most of the work reported in this paper was carried out by the authors when they were members of the now defunct Department of Machine Intelligence. holds between two plane faces, or between a plane face and a cylindrical shaft, fits holds between a cylindrical shaft and a hole. Mathematically, these relations can be expressed in terms of equalities and inequalities (e.g., if two plane faces are against each other, then their surfaces must be in the same plane (equality) and their outlines must overlap by a certain minimal amount (inequality)). In addition further inequalities must be derived to express the fact that two bodies cannot occupy the same space at the same time. Here we only concern ourselves with the equalities and we show that, just by considering them, we can say quite a lot about the actual positions of bodies in the goal state, in some cases even being able to say that some bodies have no degrees of freedom at all. We hope, at a later stage, to deal with tbe inequalities. The restrictions that we are able to put on the positions just using the equalities will raake the problem of the inequalities much more tractable.</p><p>To an even greater extent, this paper leaves unanswered a number of questions which have to be answered about assembly problems--clearly it is not enough to know the goal position--the machine has to plan how to grip the parts to be assembled, and has to plan a trajectory for these parts to the goal position, taking into account the likely errors in position, and has to plan how to use its sense of touch or vision to guide it in attaining its goal. These problems are the subject of future research. Suffice it to say that we believe that the techniques described in this paper provide a basis for analysing how a goal should be approached, by considering the relaxation of selected constraints.</p><p>We give the mathematical derivation of our system of obtaining expressions for the positions of bodies, and we describe the method we use for obtaining the values of some of the variables in these expressions. A program has been written to perform the required algebraic manipulations, and a few examples are given of problems run on this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Basic Mathematical Consideration</head><p>In order to study the possible configurations of a world containing rigid bodies it is necessary to he,v© some representation of those mappings from 3-space which are the product of rotations and translations and which form the afline group of that space. We shall call such a mapping a position, and denote the set of positions by ~. If Pz and P2 are positions, we write PIP2 for the functional composition ofpl and P2. Since a trmmlation is not a linear mapping of 3-space, it cannot be represented by a 3 × 3 matrix. We can represent positions using the following well-known device <ref type="bibr" target="#b10">[11]</ref> We shall write this as trans <ref type="bibr">(a, b, c)</ref>. In what follows, we shall identify points and positions with their representations--thus twix and trans will be matrixvalued functions.</p><p>Note that the product r trans(a, b~ c) is a matrix of ~the form rzi v22 rza (2.4)</p><formula xml:id="formula_0">r31 r32 ~33 • a b c</formula><p>This is the general form of a position matrix. We write the matrix o o 1 0 0 0 -l (2.5) 0 0 as M. It is a rotation about the Y-axis which brings the positive X-axis to the negative X-axis.</p><p>We also need a representation for sets of axes. Suppose O~X~, O~ Y~, O~Z~ is some set of axes. Since we are identifying vectors with their representations we can form a matrix \0111 which represents the axes. In particular, the matrix ( oo, o i) (3.2) If F is a shaft, then Wfhas its origin at the tip of the shift and the X-axis of Wf points outwards along the axis of the shaft (see Fig. <ref type="figure">2</ref>). A shoulderless shaft is described as two features--the X-axis of one being opposed to the X-axis of the other.</p><formula xml:id="formula_1">W--<label>0</label></formula><p>(3.3) If F is a hole, then Wf has its origin at the centre of the mouth of the hole, and the X-axis of Wf points outwards along the axis of the hole (see Fig. <ref type="figure">3</ref>). A hole right through a body is described as two features--the X-axis of one being opposed to the X-axis of the other. Artificial Intelligence <ref type="bibr">6 (1975)</ref>, 157-174 Fso. 2. The axes of a shaft.</p><formula xml:id="formula_2">1 t i I • 11</formula><p>Flo. 3. The axes of a hole.</p><p>We shall not consider how to make the notions of the tip of a shaft or the mouth of a hole more precise, because for the work reported in this paper the precise location of the origin of shaft or hole axes along the axis of such a feature is not of great moment.</p><p>(3.4) Naturally, when we move a body, its features move with it. Let S be some world state, and let p = posbod(B, S). Then the axes of the feature F is the state S are represented by Wfp.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Relations Betwee~ Features</head><p>The spatial relations we use are against and fits and in this paper we define the reflexive relation against to be such that:</p><p>(4.1) A face is against another face when they are coplanar, and with their normals in opposition.</p><p>(4.2) A face is against a shaft wtlen the X-axis of the shaft lies in a plane parallel to the plane of the face, and removed from it by a distance equal to the radius of the shaft.</p><p>(4.3) A shaft cannot be against a hole; a face cannot be against a hole, We define the reflexive relation fits to be such that" (4.4) A shaft fits a hole when their X-axes lie along the same line, but in opposition.</p><p>(4.5) A face cannot fit a hole; a face cannot fit a shaft. Note that these are very incomplete descriptions of against and fits because of the omission of the inequalities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>$. Expressiom for Positions of Bedim ~ Terms of Relations</head><p>Between Features</p><p>In this section we show how, when a feature of one body is related to a feature of another, the position of the one can be expressed in terms of the other.</p><p>Let us first deal with the case of a face being against a face. Suppose Bz and Bz are two bodies with faces F~ and F2. Let posfeat(Fl) -~ and posfeat(F2) = f2. Suppose 5" is some world state in which F~ is against F2. Let the bodies have positions Pl and Pz in S. The situation is depicted in Fig. <ref type="figure">4</ref>. From (3.4) we have that the face axes OIXl, O~ Y~, OtZ, and OzX2,</p><formula xml:id="formula_3">ii f t I Xl "° ! ..q Flo, 4. Face F1 against face F2.</formula><p>Oz Yz, OzZz are represented by W~p~ and W~pz. Now there is a relation between these sets of axes, namely that the X-axes of each set are in opposite directions and the origin of each lies in the YZ plane of the other. In order to formulate this relation, let us consider O~ to be a new originofcoordinates, with OxX~, Ol Y~, O~Z~ the new axes. In order to do this we have to postmultiply all vectors and axis-matrices by PI" ~f/" ~, so thatwhile Wwill be the new axis-matrix for F~, the new axis-matrix for F2 is Wf2p2P'{ If i" t. It is now clear that the relation between the axes of F~ and F~ can be expressed as  constrains the bodies. Likewise, (5.3) allows elimination of four degrees of freedom from a system of bodies.</p><p>Finally we have to consider the case of a plane face being against a shaft. The situation is shown in Fig. <ref type="figure">6</ref>. As before, let us take 01X1, 01Y~, O~ZI to be our origin and axes, and form an expression to denote the axes of Fz. We shall need the matrix XTOY which rotates the X-axis to be the Y-axis. If x, z, 0, ~ are as shown in Fig. <ref type="figure">6</ref> (5.6)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Systems of Bodies</head><p>The equations derived in Section 5 allow one, in the case where two bodies have features which bear some spatial relation to each other, to express the position of one body in terms of the position of the~other and some new variables, the x, y, z, 0, ~, ~ and ~ of equations (5.2), (5.3), (5.4) and (5.6).</p><p>Let us now examine what is needed to make a number of relations between bodies hold simultaneously. Suppose we have a set .~' of bodies, and let against and fits be relations holding between features of members of ~'. Now some members of,~' may befixed, that is, if B is fixed, then posbod(B, S) is a known constant for all states 5'. We can define a graph linking the bodies of ~t by saying that two bodies are connected iffagainst or fits holds between any features of them. We explore this graph systematically, using the equations of Section 5 to produce expressions for the positions of all the bodies in some goal state Sg in which against and fits are satisfied--i.e., we construct a function Gfrom 8' to ~ such that G(B) -posbod(B, So). Cycles in the graph give rise to alternativeexpressions for the goal positions of some of the bodies and these equalities are added to a set of equations 6'.</p><p>To explore the graph we start at some body B which is fixed, and use the relevant equations of Section 5 to define G for each of the bodies related to B. We can now consider all the bodies related to these. If we get an expression (say e~) for the position of a body (say BI) for which G is already defined, then we add el --G(B~) to 6". If none of the connected bodies are fixed, then we choose some arbitrary symbol to be the value of G for our starting body.</p><p>The equations in 6" will link some of the introduced variables. Solving these simultaneous equations will give us the values of some of these variables. We now consider how these equations can be solved. where p~ and Pz are terms denoting positions. In fact they are a formal matrix product of factors of the form (a) twix(O)for some variable 0, or Co) trans(x, y, z) where x, y and z are constants or variables, or (c) constant matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Jrtlflelal</head><p>How, intuitively, it is possible to make many inferences about ghe rotational components of the positions of the bodies without considering the translations. Algebraically this is related to the fact that the stile group is the semi-direct product ofthe group oftranslations and the group ofrotations. More explicitly, if r is a rotation and t is a translation, then there is a translation t' such that rtr "1 ~ t' and if r~ and r2 are rotations and t~ and t2 are translations, then tlr~ : t2r2 ~ tz : t~ and r~ : r 2.</p><p>We can rewrite (7.2) as rtt'r.</p><p>(7.2)</p><formula xml:id="formula_4">(7.3)<label>(7.4)</label></formula><p>together with expressing any constant matrix which can be expressed in the form twix(a) or Mtwix(a) in that form, and also using the rules of algebra of the reals, one can reduce (7.7) to the form It should be noted that we can produce (7.7) from (7.1) merely by rewritir.g constant matrices as products of rotations and translations, and then replacing all expressions denoting translations by the identity. Now, by multiplying (7.7) by the inverse of its RHS, and using the rules  since the constant matrices can be split into the product of a translation and a rotation. The equation (7.4) can be used to group the rotations together unchanged, giving t"rl.., r, = t"'rl.., r~, (7.6) from which we infer, by (7.3), that q... r. : ri... r~,.</p><p>where I is the identity matrix, the at are all constant matrices which cannot be expressed in the form twix(oO or Mtwix(u), and the I~ are linear combinations of variables and constants. By multiplying (7.12) by ai" t before and a~'+ it after, we get twix(lt) btwix(12) . . . bn_l twix(In) --¢, (7.13) where the b~ and ¢ are constant.</p><p>The system we are describing deals Only with the cases n = 1, 2 or 3. This is sufficient for many practical cases, commonly many of the shafts and holes of a body have parallel axes and these allow the use of (7.9)and (7.11) to simplify quite complicated looking linkages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">The Solution of Twix Equstioas</head><p>We shall now consider equations of the type (7.13) with n -= 1, 2 or 3. In the case n -3 we can determine values for 11,12 and 13, thus giving rise to linear equations on the 0-variables, or pronounce the equation insoluble. In the case n &lt; 3 the equations are overdetermined, again allowing us to say whether the equation is insoluble. For the purposes of this section, we need only consider rotations represented by 3 ×3 matrices--dropping the last row and column, (8.1) 7~e equation twix(O) = a. This is soluble iff a~ = I. Choose 0 so that e~°= a~2 + ia2s.  an equation of the form (8.2) in which the criterion for solubility is satisfied. Thus (8.3.7) is a necessary and sufficient condition for the solubility of (8.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">Solving the Translational Component of 8</head><p>In Section 7 we showed that an eqtmtionof the form Pl = P2 could be convetted to the form t~rt ffi t2r2 and the conditions for rt ffi r, computed. Now while it is easy to work out r~ and r~ explicitly, it is not easy to compute tt and t2 symbolically. However, we shallshowthat if0 is the vector (0 0 0 I), then rl = r2 and 0pl = 0p2 =~ pl = P2. First let us obset-ve that ift and t' are translations, then</p><p>Ot ~ Ot' ~t -t'. Ottrt -0t2r2: so 0tl -Or2 so tl = t2 (by (9.1)) so Px -Pl. Thus, having derived conditions from the rotations as in Section 7, to ~ complete the solution of.at -P2 it is sufficient to solve Op, -Op2.</p><p>To do this we formally multiply pland P2 by 0 using the rules for multiplying a symbolic vector by aconstant matrix apd also</p><formula xml:id="formula_6">~ (x y z l)trans(a,b,c)-(x+a y+b z+¢ !),<label>(9.2</label></formula><p>) (x y z l)twix(O) = (x y cos(O) -z sia(O) ysin(O) + z cos(O) 1), (9.3) and then using (x y z 1)ffi (x' y' z' 1)~ x ffi x' and y = y' and z ffi z' to derive real equations. It should be noted that (9.3) is required because the output of Section 7 will be in general linear equations onthe O's. constant coefficient. Substitute for that variable :in all the remaining equations, and delete the equation from the set of equations. .... As described in Section I 1, certain simplifications are always performed by the AlgebraSystem used:to implement the pr0gram; but in.addition equations are transformed :by the distributive law:of multiplication (x, (y + z) --, x, y + x • z)and sines: and cosines of sums and differences are expanded, r ..... ~ . ...... Thus the result of this process is to eliminate some of the variables occurring in the expressions G(B)for ,each body B, and to produce some simplified trigonometric equations finking the remainder. Typical results are to be found in Sections 12 and 13.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">The Implementation</head><p>The expeditious implementation on a computer of the symbolic manipulation described in this paper obviously requires a language in which it is easy to implement a range of data-types and with "heap" rather than stack storage control. In fact we use POP-2 (see <ref type="bibr" target="#b1">[2]</ref>). Much of the algebraic manipulation is not specified in POP-2, however, but in terms of productions which are input to an Algebra System written in POP-2. Equalities such as (7.9) are written as ALL THETA PHI; TWIX(THETA) MP TWIX(PHI) --* TWIX(THETA + PHI) meaning that anything that matches the expression to the left of the arrow is to be replaced by what is to the right. MP is an associative operator meaning matrix product. The Algebra System automatically performs certain simplifications such as working out constant subterms, the elimination of identity elements corresponding to operators, and the replacement of any subterm in which a zero of the operator occurs by the zero. The matching process ir~ applying productions ",akesaccount of associativity. If an operator is both commutative and associative, then the system automatically collects multiples of repeated subterms.</p><p>Round-off errors are dealt with in a rather ad hoc way. Namely, the algebra system regards certain near identities as being exact. Thus a number nearly zero is treated as zero, and one approximately equal to one is treated as one. Perhaps the most satisfactory procedure would be to relate the errors to normal engineering toierances, but this has not been done. Instead the system runs with tolerances related in a rough way to the arithmetic accuracy of the machine.</p><p>Artif~ial Intelligence <ref type="bibr">6 (1975)</ref>, 157-174</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.">An Example</head><p>Given a fixed block (the "world'3 of height 20, with posbod I and With a hole of depth 8 drilled into its top surface at (50, 50, 20), i.e., poz~af(hole feature) -XTOZtrans(50, 50,20), posfeat(faceat bottom of hole) = XTOZtrans(O,O, 12), put a post into the hole so that the shaft. (posfeat(shaft) = M) fits the hole, and the end face of the post is against the bottom of the hole (see Fig. <ref type="figure" target="#fig_10">7</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>!~ " ! ! </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="13.">Other Probleum</head><p>We have used the system to solve several other probler3s:</p><p>(1) Given a fixed world with a fixed wall on it, put a block down so that a particular side is against the world top and another particular side is against the wall.</p><p>(2) Given a fixed world with two fixed walls at right angles, put one block down so that specified faces are against the world top and the wallside, and put a second block down so two sI~cified face s are against the world top and the second wall, and so that a particular pair of faces of the blocks are against each other (Fig. <ref type="figure" target="#fig_11">8</ref>). This produces a situation where one block has no degrees of freedom, and the other block is only free to slide along between the wall and the first block.  (3) Given a fixed world with a fixed wall on it, put a cylindrical rod down so that it is lying on the world top with one end against the side of the wall.</p><p>(4) Given a fixed block with a "Vee" shaped groove cut into it, put a cylindrical rod down so that its cylindrical surface is against both sides of the groove (Fig. <ref type="figure">9</ref>).</p><p>(5) Given a fixed world with two holes drilled into it, fit two posts into the holes, with their ends against the bottoms, and fit a crossbar into two holes drilled into the posts, so that its ends are against the ends of the holes (Fig. <ref type="figure">10</ref>). In this case the posts have no degrees of freedom, and the crossbar can only rotate about its own axis. During the course of solving this problem Artificial Intelflgence 6 {1975), 157-174 five equations are set up, and the rotation of the posts in their holes can only be determined by considering both the. fits relations of the crossbar.</p><p>(6) Given three '~,!ocks, with holes drilled in each end, and pins fitting into the holes to join the blocks into a triangle, determine the position of two of the blocks, ~ven that one is fixed, and they are of relative lengths 3, 4 and 5. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="14.">Discussion</head><p>From the starting point of describing the position that a bodyhas in terms of a transformation of its body axes, and describing the position of a feature of a body in terms of a transformation of body~ axes to feature axes, we have shown how to derive expressions for the posRions of bodies, when they are in some specified spatial relationship. These expressions involve variables, and we produce simultaneous equations relating these variables, Artifidal InteYloence 6 (1975), 157-174 1.73.</p><p>and show how they can be (partially) solved. We intend to use this workin programming a robot to assemble objects, modelling the robot hands as bodies in the system. Other work with robotmanipulators (Paul [10], Ejiri et al. <ref type="bibr" target="#b2">[3]</ref> and Feldman <ref type="bibr" target="#b4">[5]</ref>) requires the.solution of equations of one sort or another, but usually suchequations arestereotyped, that is to say, it is required to get the manipulator to grip one block, or to put a block in a known place, and the problem of getting several bodies into some complex relationship is not considered. Nevins etal. <ref type="bibr" target="#b8">[9]</ref> have dealt: with ~the automatic production of the dynamic equations for an arbitrary manipulator whose connection graph is linear. Fikes <ref type="bibr" target="#b5">[6]</ref>, Mooreiiand ~ Foster <ref type="bibr" target="#b6">[7]</ref> have considered the solution of equations as part of a general problem solving system. Perhaps the closest piece of work to ours is the BUILD system (Fahlman <ref type="bibr" target="#b3">[4]</ref>) which plans the construction of specified structures out of rectangular blocks and wedges. The BUILD program concems itself With the high level planning problems involved in manipulating the blocks, and with space occupancy problems. The initial goal state and the final goalstate are defined by giving specific positions for blocks, inthe initial state for aH the blocks, and in the final state only .for those in the required structure, the rest being "free". In the intermediate goal states devised by the system, the relative positions of the blocks are either identical with those occurring in the initial or final state, or are derived by algorithms for finding free space or placing intermediate supports or counte/~eights. The problems involved are "placing" ones--is there room to puta block into a certain position, and when there, will the resulting structure be. stable ? The actual handling of the block involved in getting it to that l~sition is not considered. The only equation solving part, and that not a negligible one, is that which derives the forces, but this works numerically rather:than symbolically.</p><p>The work reported in this paper is intended to form part of a larger system, and one problem that will arise is that of planning sequences of actions-and this involves the frame problem. Indeed, ifwe look at just the ,'pick and place" problem of grasping a body in the hand and placing it in some position defined by spatial relations, we have to consider two world states (this is assuming that we can deal with the trajectory finding problem in a second stage of processing). It is important to observe that one cannot con~ider the pick state and then the place .~tate in isolation--the hand has to grasp the • object in such a way that it can still be grdsping the object when in the "place" position, if at all possible avoiding having to change the grip. This would be inefficient and also would just replace the one "pick and place" problem by two simpler ones. To solve the problem one has to deal with simultaneous equations whose variables are drawn from both states. In our system we can do this. This is in contradistinction to the PLANNer philosophy I j. S. Moore, a personal communication.</p><p>Artilicial Intelligence <ref type="bibr">6 (1975)</ref>, 157-174</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>. Let us choose axes O~t, 0 Y, OZ and let us represent a vector V by the rowvector v = (x y z 1) where x, y and z are the components of V along the axes OX, 0 Y, OZ. Then the orthonormal matrix Artificial Intelligence 6(1975), 157-174 by 0 about the X-axis. We shall write this as twix(O). Also, if (a, b, c) is a point of 3-space, then the translation of 3-space by (a, b, c) is represented by the matrix</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Wf2pzP'f lf~ l = WMtwix(O)trans(O, y, z), (5.1) Artificial Intelligence 6 (1975), 157-174 where y, z and 0 express the displacement and orientation of the Fz axes with respect to the FI axes, and M turns the X-axis through n radians, Since all the matrices are non,singular, (5.1) can be rewritten as an equation for P2 in the form P2 ----" ff tMtwix(O)trans(O, y, z)f~p~.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( 5 . 2 )FIG. 5 .Fl6. 6 .</head><label>5256</label><figDesc>FIG. 5. Shaft F2 fits hole Fl. Likewise, referring to Fig. 5, we see that if FI is a shaft and F2 is a hole, or conversely, we obtain the equation Pz :ff IMtwix(O)trans( x, O, O)/ip~ (5.3) for some x and O.Since an arbitrary position Pz represents 6 degrees of freedom of a system of bodies containing B2, the equation (5.2) can be regarded as a way of reducing these to three, namely those corresponding to the introduced variables y, z and O, thus expressing the fact that the against relation actually</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>, then we have the equation W.fzP2P'i lf~ ~ = Wtwix(O)XTOYtrans(x, -a, z)twix(~). (5.4) Solving for Pz we get p, _ f f l twix(O)XTO Ytrans(x, -a, z)twix(~)f ~p~. (5.5) Similarly, in the case of the shaft Fx being against the plane face Fz and taking 02X2, 02 ]'2, O,Zz to be our origin and axes, we can express pl in terms ofp~ by Pl --f F i twix(~)trans(x, y, a)XTO Ytwix(~)fzp2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Intelligence 6 (19753, 157-174 ] 65 7. Solving the Rotational Component of the FAluations g Now let us consider the set of equations of. Each equation is of the form Pl =P2, (7.1)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>a~twix(l~) a2twix(Iz) . . . ~twix(ID~,+ j = 1, (7.12) Artificial Intelligence 6 (1975), 157-174 twix(O) twix(O) --twix(O +O),</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>( 8 . 2 )( 8 . 3 ) 3 )</head><label>82833</label><figDesc>The equation twix(O) atwix(~) = b.Premultiply by j, where j -(1 0 0), jatwix(O) = jb, since jtwix(O) = j. (8.2.1) How ja = (art a~2 a~3) and jb = (bt~ b~2 b~3). Since j is a unit vector, and a and b are rotations, ja and jb are unit vectors, so that a21t+a2t2+at23 = 1 and b 2tl 1-±b212-,,±b213 = condition for asolution is a,~ ---btt. Note also that lat~l &lt; 1, since a # twix(u) for any 0c and a # M~wix(u) for any ~, for in either case we have an equation of the form (8.1).Completing the matrix multiplication, we get at2 cos(~) -als sin(~) ffi b12, a12 sin(~) + als cos(~b)-b13, This pair can be regarded as one complex equation (a~2 + ia~3)e j~ = b~2 + ib13. (8.2.3) Aroficial Intelligence 6 (1975), 157-174 Now al~ =b11, together with (8.2.2) imply that la12 +ia131 ffi Ib~2+ib~31 and la~ll &lt; 1 implies that !a12 + ia~31 ,/, 0. Thus the equation e i¢ = (blz + ibla)/(alz + iala) always has just one solution in the range (0, 2~). Thus a~ 1 = bl~ is a necessary and sufficient condition for (8.2.1) to have a solution. Now suppose a is a solution of (8.2.1) so that jatwix(a) --jb. Then j = jatwix(~)b -l. Hence for some ,8, atwix(~)b -l = twix(fl). . Thus (8.2) becomes twix(O) twix(p) = I, that is, twix(O) = twix(-p), which has the solution 0 = -/L Thus (8.2) is soluble iff ~1~ = b~ ~. The equation twix(O) atwix(~) btwix(~b) --¢. Let us pre-and post-multiply by j and its transpose. Then jatwix(~)bff ---jeff = d, where idl &lt; 1, (8.3.1) since j is a unit vector and e is a rotation. Now /biA ja -(air a,2 a,,) and bf r-~b::) and a12 and at3 are both not zero, and neither are b2: apd b3t since neither a nor b is of the form twix(u) or Mtwix(u).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>~ and rl =,'2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>10. Solving the Real Equations These equations have variables which occur either linearly or in trigonometric functions. The program as impleme_nted only eliminates linearly occurring variables. It iterates the following two steps until all the linear occurrences have been used. (a) Simplify each remaining equation. (b) Find an equation in which a variable occurs linearly and with a Artificial Intelligence 6 (1975). 157-174</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fie3. 7 .</head><label>7</label><figDesc>Post in hole, with 1 degree of freedom. Equating the position of thepost derived through the fits relation to the fixed world (M -1Mtwix(O1)trans(xl, O, O)XTOZtrans(50, 50, 20)/) with the position derived through the against relation (M-1Mtwix(O2)trans(O, yl, z l )XTOZtrans(O, O, 12)/) produces the equation ..... .... • : twix(O l)trans(xl, O, O)XTOZtrans(50, 50, 20)= -twix(O2)trans(O, yl, zl)XTOZtrans(O, O, 12) with G(post)~= twix(O2)trans(O, yl, zl)XTOZtrans(O,O, 12). Solving the rotation ~quations produces the real equation : 02-01 =0. Now substituting 02 for 01 in the equ~ttion, and solving the translation equation gives xl =-8, yl 50, zl =50, and G(post) becomes twix(O2)trwts(O, 50, 50)XTOZtrans(O, O, 12), i.e., the post fitted into the hole has only one degree of freedom--rotation about its own axis. Artificial Intelligence 6 (1975), 157-174</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>\FIo. 8 .</head><label>8</label><figDesc>Two bloc~ against two walls and each other.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>m</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>FIG.9. Rod resting against groove in Vee block.</figDesc><table><row><cell></cell><cell cols="2">Voo block</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Crossbl;~</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>....</cell><cell cols="4">/.. ,.. ~#</cell><cell></cell></row><row><cell>/1</cell><cell cols="2">I ,..-.-..,. ,, Post</cell><cell></cell><cell>I</cell><cell cols="2">Post</cell><cell cols="3">I A</cell></row><row><cell></cell><cell>I :</cell><cell>II .:.</cell><cell>,,</cell><cell>" .: •</cell><cell>Q</cell><cell>-.</cell><cell>' m i / ; / : e</cell><cell>/</cell><cell>/</cell></row><row><cell></cell><cell>elb,lb e i, O P--</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>IIIll</cell><cell></cell><cell>V</cell><cell></cell></row><row><cell cols="4">FIG. 10. Crossbar fitted into two posts in holes,</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank the Science Research Council and theDalle Molle Foundation for support.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>(Hewitt <ref type="bibr" target="#b7">[8]</ref>) where the distinction between states tends to be embedded in the control structure of the problem.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A versatile system for computer-controlled assembly</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Ambler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">G</forename><surname>Ban'ow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Burstall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Popplestone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="129" to="156" />
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Programming in POP-2</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Burstali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Popplestone</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1971">1971</date>
			<publisher>Edinburgh Univ. Press</publisher>
			<pubPlace>Edinburgh</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">ICAn intelligent robot with cognition and decision-making ability</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ejiri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Uno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yoda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Goto</surname></persName>
		</author>
		<author>
			<persName><surname>Takeyasu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Second International Joint Conference on Artificial Intelligence</title>
		<meeting>Second International Joint Conference on Artificial Intelligence<address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1971">1971</date>
			<biblScope unit="page" from="350" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A planning system for robot construction tasks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Fahlman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence S</title>
		<imprint>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="49" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The use of vision and manipulation to solve the</title>
		<author>
			<persName><forename type="first">J</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pingle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Binfird</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Paul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sproull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tenenbanm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Second lnter~1ional Joint Conference on Artificial Intelh&apos;gence, London 0971)</title>
		<meeting>Second lnter~1ional Joint Conference on Artificial Intelh&apos;gence, London 0971)</meeting>
		<imprint>
			<biblScope unit="page" from="359" to="364" />
		</imprint>
	</monogr>
	<note>Instant Insanity&quot; puzzle</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">ARF: A system for solving problems stated as procedures</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Fikes</surname></persName>
		</author>
		<author>
			<persName><surname>Ref</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence I</title>
		<imprint>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="120" />
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">The philosophy behind Abset</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Foster</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1970">1970</date>
			<pubPlace>Aberdeen</pubPlace>
		</imprint>
		<respStmt>
			<orgName>SRC Computer Research Group, Dept. of Engineering, Marischal College</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Description and theoretical analysis (using schemata) of Planner: a language for proving theo~ms and manipulating models in a robot</title>
		<author>
			<persName><forename type="first">C</forename><surname>Hewitt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1971-01">January 1971</date>
			<pubPlace>Cambridge, Mass</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Massachusetts Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">System architecture for assembly machines</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Nevins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Whitney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">N</forename><surname>Simunovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A Report in Advanced Automation R</title>
		<imprint>
			<biblScope unit="volume">764</biblScope>
			<date type="published" when="1973">1973</date>
			<pubPlace>Cambridge, Mass</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Charles Stark Draper Laboratory Inc.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Trajectory control of a computer arm</title>
		<author>
			<persName><forename type="first">R</forename><surname>Paul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ,Second International Joint Conference on Artificial Intelligence</title>
		<meeting>,Second International Joint Conference on Artificial Intelligence<address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1971">1971</date>
			<biblScope unit="page" from="38" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Machine perception of 3-dimensional solids. Optical and Electrooptical Informa!ion Processing</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G</forename><surname>Roberts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Tippet</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="157" to="174" />
			<date type="published" when="1965">1965. 1974</date>
			<publisher>Mrr Press</publisher>
			<pubPlace>Cambridge, Mass</pubPlace>
		</imprint>
	</monogr>
	<note>Received 3 April 1974; revised version received 30 September. I 975</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
