<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3D3B40DB14EBC6231EFB4824792B9AEC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:10+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Mobile Software Development</term>
					<term>Method Engineering</term>
					<term>Agile Methods</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>New Advances in mobile computer technology and the rapid growth of wireless networks in quality and quantity has introduced new applications and concerns in computer science and industry. The unique requirements and constraints associated with mobile systems have brought new challenges to software development for such environments, as it demands extensive improvements to traditional systems development methodologies in order to fulfill the special needs of this field.</p><p>We examine the challenges of developing software for mobile systems, starting by reviewing mobile systems' characteristics and investigating the status quo of mobile software development methods. It has been shown that Agile methodologies are appropriate methods for the development of such systems; based on this assumption, we identify specific requirements for a mobile software development methodology, based on which a new agile method is engineered using the Hybrid Methodology Design approach. We claim that this methodology, and the approach used for its construction, can facilitate the application of a software engineering approach to the production of mobile software systems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>EW advances in mobile computer technology are too fast in emergence for the software engineering field to keep up with. The number of mobile devices with computation capabilities incorporated (such as third-generation mobile phones and personal digital assistants) is growing all over the world, and the ever-increasing demand for specialized software for these devices has caused new concerns for software developers, as this type of software has its own unique characteristics and requirements.</p><p>Although commercial mobile systems have not been as successful as originally predicted, mobile operators and mobile value-added software providers expect that the deployment of 3G technologies would have a dramatic effect on the mobile applications industry, by expanding the vast Manuscript received <ref type="bibr">December 27, 2007</ref>. This work was supported in part by the Research Vice-Presidency of Sharif University of Technology.</p><p>Vahid Rahimian is with the Computer Engineering Department, Sharif University of Technology, Tehran, Iran (e-mail: rahimian@ce.sharif.edu).</p><p>Raman Ramsin is an Assistant Professor at the Computer Engineering Department, Sharif University of Technology, Tehran, Iran (e-mail: ramsin@sharif.edu). usage of mobile commerce applications and services. Examples of such commercial applications include: mobile information services, advertisement, content-based services, location-based services, and mobile payment applications.</p><p>Development of a mobile software system differs from traditional software development in many aspects, as mobile software should satisfy special requirements and constraints. Along with these specific constraints, software produced for mobile environments should be at a high level of quality, so that it can operate properly on different mobile devices that exist or are expected to hit the market in the future. There are numerous challenges that the designer of a software system for mobile environments has to cope with. These challenges mainly stem from ( <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>):</p><p>Wireless communication issues (considerations such as availability and disconnection, bandwidth variability, heterogeneous networks, and security risks); Mobility issues (concerns such as address migration, and management of location-dependent information);</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Portability issues;</head><p>Various standards, protocols and network technologies; Limited capabilities of terminal devices (factors pertaining to low power, risks to data integrity, smallsized user interfaces, and low storage capacities);</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Special privacy and customizability needs;</head><p>Strict time-to-market requirements. Some of these issues are due to deficiencies in current technology, but most of them are intrinsic to mobility. The design of mobile software systems is therefore much more complicated than that usually seen in software development projects, thus forcing developers to reconsider the use of traditional software development methodologies.</p><p>Despite the above-mentioned problems, research endeavors aimed at ameliorating the status quo through enhancing/devising methodologies for mobile-software systems development have been relatively few and far in between. Most of the work performed in this field has been focused on low-level (implementation-oriented) aspects of software development, while high-level (methodologyoriented) issues still remain to be properly addressed. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>N</head><p>We propose a new agile methodology developed through applying a Method Engineering (ME) approach <ref type="bibr" target="#b2">[3]</ref>. The approach applied herein, called Hybrid Methodology Design <ref type="bibr" target="#b3">[4]</ref>, is used for iterative-incremental development of methodologies based on a predefined set of requirements and the knowledge acquired from existing methodologies and process patterns/metamodels. We have elicited the high-level requirements of a mobile-software development environment through examining the available literature, and have fed it into the Hybrid process to produce the target methodology. Ideas from the ASD (Adaptive Software Development) methodology <ref type="bibr" target="#b4">[5]</ref> and New Product Development (NPD) <ref type="bibr" target="#b5">[6]</ref> were used in constructing the methodology.</p><p>The rest of the paper is structured as follows: section 2 reviews the related research so far performed on mobile software development; in section 3, the appropriateness of agile methods in software development for mobile environments is discussed; in section 4, we identify the requirements of a methodology tailored for mobile software development; in section 5, the Hybrid Methodology Design approach is used for building a new agile methodology for developing mobile software, using the general patterns followed by agile software development processes, and ideas from ASD and NPD. The final section of the paper presents the conclusions and opportunities for furthering this research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED RESEARCH</head><p>Identifying mobile computing challenges <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, adaptation of mobile software <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref>, the notion of mobile agents <ref type="bibr" target="#b10">[11]</ref>, resource sharing in mobile environments <ref type="bibr" target="#b11">[12]</ref>, abstract architectures with special quality features <ref type="bibr" target="#b12">[13]</ref>, and design patterns for developing mobile software <ref type="bibr" target="#b13">[14]</ref> are examples of the more popular, lower-level research so far performed on mobile software development, whereas research on specialized development methodologies is fairly limited. In the rest of this section, we will provide a general survey of methodology-level research conducted in the context of mobile software development.</p><p>Gerstheimer and Lupp <ref type="bibr" target="#b14">[15]</ref> take the end-user perspective to propose a need-driven system design method for developing mobile applications. Vainio et al. <ref type="bibr" target="#b15">[16]</ref> recognize the use of market elements as a leading factor in the success of a mobile software product; they recommend utilizing market-based New Product Development (NPD) for improving current methodologies for use in mobile software development.</p><p>New Product Development is a complete process for bringing a new product or service to the market <ref type="bibr" target="#b5">[6]</ref>. There are two parallel paths followed in the NPD process: one involves idea generation, product design, and detailed engineering; the other involves market research and analysis.</p><p>Vainio et al. have also analyzed the activities performed in two commonly-used methodologies and have compared them with two NPD process models. They have concluded that current process models should contain more market-oriented activities in order to be efficiently incorporated into the development of mobile software products <ref type="bibr" target="#b15">[16]</ref>.</p><p>Another major work in the field of mobile software development is that conducted by Abrahamsson et al. <ref type="bibr" target="#b16">[17]</ref>, in which a methodology called Mobile-D is proposed as an agile approach to mobile application development. The approach is based on development practices borrowed from XP (eXtreme Programming), enjoys method scalability inspired by the Crystal family of methodologies, and provides life-cycle coverage as prescribed by RUP (Rational Unified Process) <ref type="bibr" target="#b16">[17]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. AGILE DEVELOPMENT: A POTENTIAL SOLUTION FOR MOBILE SOFTWARE DEVELOPMENT</head><p>Our investigation of the problem and related research indicates that agile methods have a good level of suitability for the development of mobile applications. Although many agile methods have been introduced over the last decade, none of them has focused on the special requirements of mobile software development. Yet as discussed in the rest of this section, agile methods possess certain properties that make them applicable to the mobile software domain.</p><p>Boehm and Turner <ref type="bibr" target="#b17">[18]</ref> recognize five main factors that affect agility: operating culture, team size, criticality of the software, competence of the developers, and stability of the requirements. Boehm argues that a software development method works best when it is applied to situations with specific traits <ref type="bibr" target="#b18">[19]</ref>; he calls these situations the "home ground" of the software development method. Table <ref type="table">I</ref> compares the home grounds for agile and plan-driven methods.</p><p>Abrahamson identifies agile methods as a potential solution for mobile software development <ref type="bibr" target="#b19">[20]</ref>. Based on the home ground for agile methods, he performs a comparative analysis to prove the suitability of agile methods for development of mobile software, the results of which are shown in Table <ref type="table">II</ref>.</p><p>While it has been suggested that agile methods are the most appropriate means for mobile software development among current software development methods, the special characteristics of mobile devices and mobile networks demand some adjustments to current development methodologies. In fact, in order to fulfill the special requirements of mobile software development, new methodologies are needed.</p><p>In the next section, we elaborate on the requirements of an ideal software development methodology for mobile software development.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CHARACTERISTICS OF AN IDEAL MOBILE SOFTWARE DEVELOPMENT METHODOLOGY</head><p>In this section, we propose the traits that we believe a development method should have in order to be efficiently employed for mobile software development. Based on the properties we identify herein, a new methodology is later constructed, using the Hybrid Methodology Design approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Agility</head><p>As stated in the previous section, agile methods seem to be a good starting point for constructing a mobile software development method. Agile methodologies are believed to enhance software development flexibility and productivity, by providing means to adapt to changes in requirements and the environment, and also to learn from development experiences. To support early and quick delivery of working software, these methodologies use iterative-incremental development engines to produce artifacts tangible to the customer.</p><p>Agile characteristics of highest importance in the context of mobile software development include: iterative and incremental process (which leads to enhanced riskmanagement capabilities), test-driven development, adaptive process, continuous customer involvement, highly skilled developers, enhanced quality assurance, and continuous process-wide reviews. Furthermore, considering the competitive market for mobile software, shorter time-tomarket is a precious advantage; this could be achieved via early releases of operational software, which is itself an important feature of agile methods. Prioritization of requirements is another agile practice that can prove essential in mobile software development, since it sets the stage for and governs risk management activities, and helps ensure that features of higher value to the customer take precedence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Market Consciousness</head><p>As the current market for mobile software is biased towards relatively fine-grained software products, a general mobile development process should be mainly oriented towards product development, rather than project development. Consequently, such processes should focus on establishing the business case, thereby striving to identify the potential market.</p><p>The use of NPD practices for market analysis can enhance mobile-software development: NPD process activities utilize market information for mitigating uncertainties and risks. In a market-oriented process for mobile software development, market and customer needs should be carefully analyzed, and a strict release schedule, which meets time-to-market requirements, should be established and maintained during development. In contrast to the typical modus operandi, in which a process's main focus is on technical activities, a mobile software development process should maintain a balance between market-oriented and technical activities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Software Product Line Support</head><p>A software product line is "a set of software intensive systems sharing a common, managed set of features that satisfy the specific needs of a particular market segment or mission and that are developed from a common set of core assets in a prescribed way" <ref type="bibr" target="#b20">[21]</ref>. The special benefits of applying the product line approach to mobile software development are mainly due to the fast pace of advances in mobile technology. This makes the life-cycle of mobile software products ever shorter. Consequently, software companies tend to develop a family of mobile software products in a bid to reduce development costs.</p><p>As a result, we suggest that a mobile software development process should provide means for supporting product line engineering. Component-based development, use of reconfigurable architectures, and product scoping can help in achieving this capability. The process should also provide adequate guidance on performing quality product line design.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Architecture-Based Development</head><p>The efficiency of the software product line approach depends on the development firm's ability to invest in the development of a common platform. This necessitates the development of a general architecture for such products.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Support for Reusability</head><p>The need for using functionally equivalent components (such as message boxes in a specific language), and functionally similar components (such as security operation classes), along with tight time constraints on the development of mobile software, requires the developer to use reusable components extensively. Having to develop these components from scratch each time they are needed increases the cost of mobile software development, delays product delivery, and makes the software more error prone. Support for componentbased and layer-based development approaches is therefore essential in a mobile software development methodology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. Inclusion of Review and Learning Sessions</head><p>One of the most effective factors in a production company's success is its ability to abstract the knowledge obtained during product development. As mentioned above, today's mobile software development industry tends to be product-oriented; the methodology should therefore incorporate review sessions throughout the process to ensure product analysis, and include "lessons-learnt" sessions after delivering a working product to the market to ensure that experiences are analyzed and logged.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. Early Specification of Physical Architecture</head><p>Mobile terminals' constraints should be considered from very early stages of software design. In fact, a high degree of technical risk can be traced to mobile hosts' limitations and their differences in the implementation of basic features. Consequently, the physical architecture should be elaborated in the early stages of software development. A prototype may also be required in order to mitigate technical risk.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. BUILDING A MOBILE SOFTWARE DEVELOPMENT METHODOLOGY USING METHOD ENGINEERING TECHNIQUES</head><p>Motivated by the belief that no one methodology fits all situations, Methodology Engineering was first introduced as a discipline aimed at constructing methodologies to match given organizational settings or specific development projects <ref type="bibr" target="#b21">[22]</ref>. The discipline later came to be known as Method Engineering, with the definition broadened as: "The engineering discipline to design, construct, and adapt methods, techniques and tools for the development of information systems" <ref type="bibr" target="#b2">[3]</ref>.</p><p>There are several approaches to method engineering <ref type="bibr" target="#b22">[23]</ref>:</p><p>Ad-hoc: Constructing a new methodology from scratch;</p><p>Paradigm-based: Instantiating, abstracting or adapting an existing meta-model to produce the target methodology;</p><p>Extension-based: Enhancing an existing methodology with new concepts and properties;</p><p>Assembly-based: Constructing the methodology through assembling method fragments retrieved from a repository.</p><p>In this section, we describe our work in utilizing an approach called Hybrid Methodology Design <ref type="bibr" target="#b3">[4]</ref>, through which the target methodology has been built based on the requirements defined in the previous section and knowledge gathered from existing methodologies and process patterns/metamodels <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b23">[24]</ref>. The Hybrid Methodology Design process has been devised as a top-down iterativeincremental process consisting of the following tasks <ref type="bibr" target="#b3">[4]</ref>: Prioritization of the Requirements: performed at the start of the process and repeated at the end of each iteration. The requirements are ordered according to their relevance to the current scope and level of abstraction, focusing the design process on satisfying requirements of higher significance. At the start of the process, abstraction is at its highest level and the scope encompasses the whole lifecycle, therefore requirements with lifecycle-level impacts are given precedence; as design progresses to lower levels of abstraction, priority is gradually shifted to requirements with finer-grained aspects.</p><p>Iterative Design Engine: The following tasks are performed in each iteration:</p><p>o Selection of the design approaches to be used in the current iteration: The possible approaches to designing the target methodology include:</p><p>Instantiation: instantiating an already available process metamodel;</p><p>Artifact-oriented: devising a seamless complementary chain of artifacts and building the process around it;</p><p>Composition: using one of the already available libraries of process patterns;</p><p>Integration: integrating features, ideas and techniques from existing methodologies.</p><p>o Application of the selected design approaches aimed at defining the methodology at the current scope and level of abstraction: Special attention should be given to existing methodologies and process patterns/metamodels, thus implementing features of strength and avoiding common pitfalls. The prioritized set of requirements focuses the design effort on satisfying requirements of importance. The methodology elements designed are then integrated into the produced blueprint.</p><p>o Revision, refinement and restructuring of the methodology built so far in order to accommodate the changes made in the current iteration.</p><p>o Specification of the level of abstraction for the next iteration, and definition of the scope and intended level of detail.</p><p>o Revision and refinement of the requirements, including prioritization according to the scope and level of abstraction intended for the next iteration.</p><p>The iterative-incremental engine at the core of the design process generates the methodology in a top-down fashionfrom the general lifecycle to the details of activities -using the requirements and methodology descriptions as a basis.</p><p>Of the four design approaches used in each iteration, twoi.e. Integration and Artifact-oriented -are relatively novel in this context. The Integration approach promotes integrating ideas and techniques directly from existing methodologies, instead of first dissecting the methodologies into fragments (as is common practice in assembly-based method engineering); the intention is to preserve synergy and avoid loss of functional capacity. Different approaches of the Hybrid approach have different uses depending on the scope and abstraction level of the design activity undertaken in the current iteration: Instantiation is more useful when designing high-level aspects of the methodology, Integration and Composition are more suited to the design needs of low-level aspects, and the Artifact-oriented approach comes in between, i.e. while less useful at the general lifecycle level, it is indispensable when addressing seamlessness at the intersubprocess and intra-subprocess levels. We constructed the overall framework of the target methodology through four iterations of the Hybrid Design Engine, with the results shown in Figure <ref type="figure" target="#fig_0">1</ref>. In following the Instantiation approach, the generic software development life cycle was set as the base process, i.e. at the highest level of abstraction. It provides adequate high-level coverage of generic software development activities and supports umbrella activities, thus providing the framework needed for satisfying the requirements through further iterations of the engine.</p><p>In the first iteration, the methodology was elaborated via the use of generic patterns for risk-based, architecture-centric, and test-based development. Analysis was split into Preliminary Analysis and Detailed Analysis, in order to mitigate development risks. To achieve architecture-based development, Design was split into Architectural Design and Detailed Design, with the relevant feasibility analysis, planning and architectural design activities duly added. The Implementation and Test sub-processes were combined in order to accommodate test-based development. These patterns are frequently used in agile methodologies. Moreover, since the main focus in current mobile software development is on product development, we incorporate the Commercialization phase; this would also facilitate product line support. The design approach in this iteration was mainly instantiation, using meta-models -including SPEM <ref type="bibr" target="#b24">[25]</ref> and OPF <ref type="bibr" target="#b25">[26]</ref> and general object-oriented lifecycles -such as OOSP <ref type="bibr" target="#b26">[27]</ref>.</p><p>In the second iteration, market consciousness was focused upon through borrowing activities from New Product Development. These include Idea Generation (incorporated into the beginning phases of the process), and Market Testing (performed before commercializing the software). The design approach in the second iteration was integration, using reusable parts of the NPD process.</p><p>In the third iteration, we enhanced our process's development engine by incorporating ideas from Adaptive Software Development (ASD) <ref type="bibr" target="#b27">[28]</ref>. ASD is a componentbased agile methodology especially rich in quality assurance measures. The Speculate-Collaborate-Learn cycle that forms the basis of the ASD process provides the means to cope with the uncertainties of software development. Using the integration approach, the iteration resulted in the incorporation of review sessions into the methodology. By benefiting from component-based development practices, we have also improved our process's support for reusability.</p><p>Considering the potential technology risks in mobile software development, the last iteration was mainly concerned with adding prototyping (as a process pattern <ref type="bibr" target="#b26">[27]</ref>) to our process. Prototyping also facilitates the early specification of the physical architecture. Moreover, the process was refined through moving the Preliminary and Business Analysis activity into Project Initiation, with output artifacts based on those produced by ASD's Project Initiation phase. The design approach used was mainly composition, with integration used when reusing ideas from the ASD methodology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>We have identified the main requirements of a mobile software development methodology, based on which a highlevel methodology framework was built using the Hybrid Methodology Design approach. Our proposed methodology is an agile risk-based methodology, highly influenced by the ASD method and NPD approaches. The requirements-based nature of the Hybrid approach ensures that the requirements are properly addressed, and validating the resulting methodology against the requirements seems to confirm this.</p><p>In furthering this research, our next step would be to apply further iterations of the Hybrid Design Engine at lower levels of abstraction, thereby specifying the finer-grained tasks of the process. The methodology can then be put to test in developing commercial mobile software products; the process, and the requirements on which it is based, can thus be tuned. Another strand of research can focus on extending our work to the development of mobile software projects, rather than products; since technology advances with incredible speed, this is likely to be an industry demand in the future.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Gradual refinement of our proposed methodology during iterations of the Hybrid Methodology Design process</figDesc><graphic coords="5,96.00,379.80,417.48,360.36" type="vector_box" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Through its phases and disciplines, Mobile-D tries to merge the classic software development process (i.e. traditional plan, design, implement, test, and release activities, as mapped to Mobile-D disciplines of Phasing, Architecture Line, Test-Driven Development, Continuous Integration, Pair Programming, and Off-Site Customer) with the necessary umbrella management/support processes (i.e. project management, software configuration management, and software process improvement, as mapped to Mobile-D disciplines of Metrics, Agile Software Process Improvement,</figDesc><table /><note><p>and User-Centered Focus). Although the work of Abrahamsson et al. on mobile software development seems to be very promising, the description that they provide of their Mobile-D approach is cursory and incomplete.</p></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Challenges of Mobile Computing</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Forman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zahorjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="38" to="47" />
			<date type="published" when="1994-04">April 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Heyes</surname></persName>
		</author>
		<title level="m">Just Enough Wireless Computing</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Method engineering: engineering of information systems development methods and tools</title>
		<author>
			<persName><forename type="first">S</forename><surname>Brinkkemper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information and Software Technology</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="275" to="280" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">The Engineering of an Object-Oriented Software Engineering Methodology</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ramsin</surname></persName>
		</author>
		<ptr target="http://www.cs.york.ac.uk/ftpdir/reports/YCST-2006-12.pdf" />
		<imprint>
			<date type="published" when="2006">2006</date>
			<pubPlace>York, UK</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of York</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Adaptive Software Development: A Collaborative Approach to Managing Complex Systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Highsmith</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<pubPlace>Dorset House</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">T</forename><surname>Ulrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Eppinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Product Design and Development</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>McGraw-Hill</publisher>
		</imprint>
	</monogr>
	<note>3rd Edition</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fundamental Challenges in Mobile Computing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Fifteenth annual ACM symposium on Principles of distributed computing</title>
		<meeting>of the Fifteenth annual ACM symposium on Principles of distributed computing</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Pervasive Computing: Vision and Challenges</title>
		<author>
			<persName><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-08">August 2001</date>
			<publisher>IEEE Personal Communications</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Towards Highly Adaptive Services for Mobile Systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Agostini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bettini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Cesa-Bianchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maggiorini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Riboni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ruberi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vitali</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Working Conference on Mobile Information Systems (IFIP TC8)</title>
		<meeting>of the Working Conference on Mobile Information Systems (IFIP TC8)</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Adaptive Query Processing in Mobile Environments</title>
		<author>
			<persName><forename type="first">H</forename><surname>Grine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Delot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lecomte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 3rd international workshop on Middleware</title>
		<meeting>of the 3rd international workshop on Middleware</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Mobile Software Agents: An Overview</title>
		<author>
			<persName><forename type="first">V</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karmouch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<date type="published" when="1998-07">July 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">MobiShare, Sharing Context-Dependent Data &amp; Services from Mobile Sources</title>
		<author>
			<persName><forename type="first">E</forename><surname>Valavanis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ververidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vazirgianis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">C</forename><surname>Polyzos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Norvag</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE/WIC International Conference on Web Intelligence (WI 2003)</title>
		<meeting>of the IEEE/WIC International Conference on Web Intelligence (WI 2003)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Towards a Generic Architecture for Mobile Object-Oriented Applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Haahr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cunningham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Cahill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2000 IEEE Workshop on Service Portability and Virtual Customer Environments</title>
		<meeting>of the 2000 IEEE Workshop on Service Portability and Virtual Customer Environments</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="91" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Development and Evaluation of Emerging Design Patterns for Ubiquitous Computing</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">S</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">I</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Prabaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Landay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2004 conference on Designing interactive systems: processes, practices, methods, and techniques</title>
		<meeting>of the 2004 conference on Designing interactive systems: processes, practices, methods, and techniques</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="233" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Needs versus technology -the challenge to design third generation mobile applications</title>
		<author>
			<persName><forename type="first">O</forename><surname>Gerstheimer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lupp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Business Research</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">12</biblScope>
			<date type="published" when="2004-12">Dec. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Developing Software Products for Mobile Markets: Need for Rethinking Development Models and Practice</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Vainio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Tuunanen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abrahamsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 38th Hawaii International Conference on System Sciences (HICSS&apos;05)</title>
		<meeting>of the 38th Hawaii International Conference on System Sciences (HICSS&apos;05)</meeting>
		<imprint>
			<date type="published" when="2005-01">Jan. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Mobile-D: An Agile Approach for Mobile Application Development</title>
		<author>
			<persName><forename type="first">P</forename><surname>Abrahamsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hanhineva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hulkko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ihme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jäälinoja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Korkala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Koskela</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kyllönen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Salo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc of the OOPSLA&apos;04 Conference</title>
		<meeting>of the OOPSLA&apos;04 Conference</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Balancing agility and discipline: A guide for the perplexed</title>
		<author>
			<persName><forename type="first">B</forename><surname>Boehm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Turner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Get ready for agile methods, with care</title>
		<author>
			<persName><forename type="first">B</forename><surname>Boehm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="64" to="69" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Keynote: Mobile software development -the business opportunity of today</title>
		<author>
			<persName><forename type="first">P</forename><surname>Abrahamsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the International Conference on Software Development</title>
		<meeting>of the International Conference on Software Development</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="20" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Software Product Lines</title>
		<author>
			<persName><forename type="first">P</forename><surname>Clements</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Northrop</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Product Line Systems Program, Software Engineering Institute, Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Method Engineering: a proposal for situationspecific methodology construction</title>
		<author>
			<persName><forename type="first">K</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Welke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Systems Analysis and Design: A Research Agenda</title>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Towards a generic model for situational method engineering</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ralyté</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Deneckére</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rolland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CAiSE&apos;03 (LNCS 2681)</title>
		<meeting>of CAiSE&apos;03 (LNCS 2681)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="95" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Process-centered review of object-oriented software development methodologies</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ramsin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Paige</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="89" />
			<date type="published" when="2008-02">February. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<author>
			<persName><forename type="first">Software</forename><surname>Omg</surname></persName>
		</author>
		<title level="m">Process Engineering Metamodel Specification</title>
		<meeting>ess Engineering Metamodel Specification</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>Object Management Group (OMG)</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">The OPEN Process Framework: An Introduction</title>
		<author>
			<persName><forename type="first">D</forename><surname>Firesmith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Henderson-Sellers</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Ambler</surname></persName>
		</author>
		<title level="m">Process Patterns: Building Large-Scale Systems Using Object Technology</title>
		<meeting>ess Patterns: Building Large-Scale Systems Using Object Technology</meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Messy, exciting, and anxiety-ridden: Adaptive software development</title>
		<author>
			<persName><forename type="first">J</forename><surname>Highsmith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Programmer</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="23" to="29" />
			<date type="published" when="1997-04">April), 1997</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
