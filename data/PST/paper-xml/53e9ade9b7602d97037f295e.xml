<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On Deployment of Wireless Sensors on 3-D Terrains to Maximize Sensing Coverage by Utilizing Cat Swarm Optimization with Wavelet Transform</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Samil</forename><surname>Temel</surname></persName>
							<email>s.temel@hho.edu.tr</email>
						</author>
						<author>
							<persName><forename type="first">Numan</forename><surname>Unaldi</surname></persName>
							<email>n.unaldi@hho.edu.tr</email>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Okyay</forename><surname>Kaynak</surname></persName>
							<email>okyay.kaynak@boun.edu.tr</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Aeronautics and Space Technologies Institute</orgName>
								<orgName type="institution">Turkish Air Force Academy</orgName>
								<address>
									<postCode>34149</postCode>
									<settlement>Istanbul</settlement>
									<country key="TR">Turkey</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">Turkish Air Force Academy</orgName>
								<address>
									<postCode>34149</postCode>
									<settlement>Istanbul</settlement>
									<country key="TR">Turkey</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">Bogazici University</orgName>
								<address>
									<postCode>34342</postCode>
									<settlement>Istanbul</settlement>
									<country key="TR">Turkey</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">On Deployment of Wireless Sensors on 3-D Terrains to Maximize Sensing Coverage by Utilizing Cat Swarm Optimization with Wavelet Transform</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C7C9E622EF6C4A259E9227E032BD288B</idno>
					<idno type="DOI">10.1109/TSMCC.2013.2258336</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:11+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Cat swarm optimization (CSO)</term>
					<term>sensor deployment</term>
					<term>wavelet transformation</term>
					<term>Wireless sensor networks (WSNs)</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, a deterministic sensor deployment method based on wavelet transform (WT) is proposed. It aims to maximize the quality of coverage of a wireless sensor network while deploying a minimum number of sensors on a 3-D surface. For this purpose, a probabilistic sensing model and Bresenham's line of sight algorithm are utilized. The WT is realized by an adaptive thresholding approach for the generation of the initial population. Another novel aspect of the paper is that the method followed utilizes a Cat Swarm Optimization (CSO) algorithm, which mimics the behavior of cats. We have modified the CSO algorithm so that it can be used for sensor deployment problems on 3-D terrains. The performance of the proposed algorithm is compared with the Delaunay Triangulation and Genetic Algorithm based methods. The results reveal that CSO based sensor deployment which utilizes the wavelet transform method is a powerful and successful method for sensor deployment on 3-D terrains.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. Introduction</head><p>W IRELESS sensor networks (WSNs) have been consid- ered as one of the underlying technologies for smart environments for the last two decades. They were originally motivated by military applications such as battlefield surveillance; today such networks can be seen in many industrial and consumer applications. Today, one of the most challenging issues of WSNs arises in the deployment strategies of sensors to attain a maximum degree of coverage with a minimum number of sensors. Sensor coverage can be considered as a metric to measure the quality of detection and surveillance of a WSN; hence, many heuristic approaches have been widely used to provide acceptable sensor coverage. However, most of the studies on the subject consider deployment of sensors on 2-D flat surfaces. Since in real practice, sensor deployments take place on 3-D environments, an optimal deployment of sensors on different types of 3-D terrains is the main concern of this paper.</p><p>Data collected from the sensors in an environment is usually gathered into a base station which is usually connected to a network backbone <ref type="bibr" target="#b0">[1]</ref>. However, there are many challenges which affect the performance of a WSN, such as the number of sensors being limited, the sensing characteristics of sensors differing in many ways, determination of the location of each sensor varying on different sub-terrains within a specific terrain, etc. Hence, in order to obtain the most efficient and satisfactory coverage measures on a terrain, various deployment strategies have to be taken into consideration.</p><p>Sensor coverage is a metric to evaluate the surveillance and detection capability of a WSN which can be defined as the percentage of the sensible area on a terrain. It can be achieved either by a deterministic or a stochastic method. In a deterministic coverage method, sensors are deployed according to a predefined constraint or a shape. One such example can be seen on military fields where the more security-critical regions on a battlefield are equipped with more sensors in order to maximize the QoC. On the other hand, in a stochastic coverage method, sensors are randomly deployed with a Poisson, Gaussian etc. distribution scheme. Although there is literature that utilizes both types coverage methods in 2-D environments, evaluations on 3-D environments are scarce. In this paper, a wavelet transformation based sensor deployment (CSO-WT) method is proposed for use on 3-D environments. It is a deterministic deployment method that aims to maximize the sensor coverage. The motivation behind the use of WT is to determine the coverage cavities (the regions that are not covered) after an initial deployment phase.</p><p>The deployment of sensors to achieve the desired QoC levels is basically more challenging on 3-D terrains as compared to 2-D terrains. One such example is that wireless links exhibit varying characteristics over time and space due to obstructions and fading <ref type="bibr" target="#b0">[1]</ref>. Thus, wireless link capacity is limited and varies according to the environment. In addition, most WSN applications contain large number of sensors, which might be spread over the field. Sensors are fundamentally battery limited and consume energy on transmission, reception and sensing phases. In order to maximize the network lifetime, reliable methods for sensor deployment to reduce the energy consumption in WSN is also an essential issue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2168-2216 c 2013 IEEE</head><p>For the calculation of QoC, a line-of-sight (LOS) algorithm is needed to determine whether a point on the terrain is blocked by any obstacle or not. In this paper we have utilized Bresenham LOS algorithm owing to its faster computation, in the sense that it does not require interpolation calculations and requires less number of calculation points <ref type="bibr" target="#b1">[2]</ref>.</p><p>To address these challenges, we have, in this paper, developed the CSO-WT algorithm which is inspired by Cat Swarm Optimization (CSO). The main reason behind the choice of CSO is that it is shown in literature that it results in a better performance as compared to other well-known optimization methods <ref type="bibr" target="#b2">[3]</ref>. For example, CSO performs better with respect to computation time. Another advantage is that the number of iterations of the CSO process is found to be less than the PSO method <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref>. Furthermore, as compared to the other methods, CSO converges better and shows a better performance in finding the global best solution. As a consequence, we have considered it to be a better choice for finding optimal sensor deployment on 3-D terrains. In the approach described, every cat in the swarm is regarded to be a unique deployment scheme of sensors in the field. The movement of sensors is determined with WT and modeled in the way cats pursue a prey. In this way, a well-modeled and easy-to-understand solution to the problem is presented. To our knowledge, this is the first time that WT is utilized with CSO for sensor deployment on 3-D terrains.</p><p>The usage of wavelet transform (WT) approach for segmentation of the QoC matrix is novel and the motivation behind the choice is its ability to analyze signals with non-stationary spectra. Furthermore it gives better and faster results than other transformation methods <ref type="bibr" target="#b4">[5]</ref>.</p><p>The performance of the proposed algorithm is evaluated by utilizing a probabilistic sensing model which is used to calculate the overall QoC of a WSN. We have compared our work with a random deployment algorithm and an adapted version, the Delaunay Triangulation-Score (DT-Score) algorithm, to be used on 3-D environments which was first proposed in <ref type="bibr" target="#b5">[6]</ref>. We have also compared our method with various Genetic Algorithm (GA) methods in order to emphasize the superiority of CSO over other evolutionary methods. The results indicate that effective results can be obtained with CSO-WT on various types of terrains.</p><p>The paper is organized as follows. In Section II, related work on sensor deployment methods is reviewed. In Section III, some preliminaries and background information is presented and in Section IV, the proposed algorithm is explained. In Section V, performance evaluations and an overview of simulation results are presented. The paper is concluded in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. Related Work on 3-D Sensor Deployment</head><p>In this section we briefly describe some of the deterministic sensor deployment studies which are carried out generally on 3-D terrains. In a deterministic approach, sensors are deployed according to some given constraints such as the terrain shape, the sensor type etc. Examples of the deployment strategy can be: deploying sensors on intersections of grids on the terrain, in the middle of a Delaunay triangulation, in the middle of Voronoi polygons of sensor coordinates, etc. The deployment strategy usually determines and bounds the performance of a sensor deployment algorithm.</p><p>There are some examples in the literature which deal with the deployment of a minimum number of sensors and maximize the coverage on 3-D environments utilizing a bio-inspired algorithm <ref type="bibr" target="#b6">[7]</ref>- <ref type="bibr" target="#b8">[9]</ref>. For example in <ref type="bibr" target="#b9">[10]</ref>, Wang et al. propose a polynomial-time approximation algorithm to find a solution to the problem of deploying minimum number of sensors on a bounded 3-D field. A grid distribution and a greedy heuristic are introduced to determine the best placement of sensors. Also in <ref type="bibr" target="#b6">[7]</ref>, Kulkami et al. propose a sensor deployment strategy, which is based on bio-inspired algorithms, particle swarm optimization (PSO) and bacterial foraging algorithm (BFA), for image segmentation. Their study reveals that bioinspired algorithms perform multilevel image segmentation faster than the exhaustive search for optimal thresholds.</p><p>In another study, Turkogullari et al. propose a Lagrangean heuristic to solve a multiobjective sensor deployment approach <ref type="bibr" target="#b10">[11]</ref>. Their model can be used to concurrently decide the location, the activity, the scheduling and data routing of sensors. However, it is not clear that this model can be adopted for 3-D environments with a large number of sensors.</p><p>Topcuoglu et al. propose a model for deployment and configuration of sensors on a 3-D terrain with a hybridevolutionary algorithm in <ref type="bibr" target="#b1">[2]</ref>. The authors take into account multiple objectives such as maximizing the visibility of the given terrain, maximizing the stealth of the sensors and minimizing the number of the sensors. However, their model is based on vision sensors (cameras) which necessitate defining the conic field of view analysis of each deployed sensor. On the other hand, in our study we assume the usage of generic omni-directional sensors where the sensing region is specified as a cube. This puts our study to be a generic model for every type of sensors. In addition, in <ref type="bibr" target="#b11">[12]</ref>, Ou proposes a range-free localization scheme for WSNs using mobile anchor nodes equipped with four directional antennas. His proposed approach, removes the requirement for specific ranging hardware on the sensor nodes which avoids the need for communications between the sensor nodes.</p><p>For mitigating the coverage cavities after an initial random deployment, Ghaffari et al. <ref type="bibr" target="#b12">[13]</ref> propose a divide-and-conquer deployment algorithm based on the triangular form that is executed on three static sensors. The triangle is cut into smaller pieces that contain at least one interior angle equal to 60°which ensures full coverage. The process is repeated until the triangle is sufficiently small so that the sensors on the three nodes can fully cover the area. Although it can be regarded as a robust algorithm for sensor deployment problems, the 3-D implementation is ambiguous. <ref type="bibr">Wu et al.</ref> propose a centralized and deterministic sensor deployment algorithm, DT-Score, which bases on Delaunay triangulation to eliminate the coverage holes near the boundary of the sensing area and obstacles <ref type="bibr" target="#b5">[6]</ref>. In their study, before deploying a new sensor on the field, each candidate position is scored by a probabilistic sensor detection model. Although DT-Score algorithm is more scalable than grid based deployment approaches, its mitigating adaptation to 3-D terrain environments is needed. In another study, Wang et al. propose a dynamic deployment algorithm which is based on the virtual force (VF) directed coevolutionary particle swarm optimization (CPSO) method. The algorithm combines CPSO with the VF algorithm. Although the authors reflect that dynamic deployment in WSNs results in a better performance with respect to computation time and effectiveness, the implementation of their method on 3-D environments is missing.</p><p>In this paper, in order to mitigate the coverage cavities after the initial deployment of a number of sensors we utilized the wavelet transform to determine an initial population and form the initial deployment solution for the CSO method. Different types of synthetic 3-D terrains are used to evaluate the performance of the proposed algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. Preliminaries</head><p>The primary objective of this paper is to analyze and evaluate the performance of the proposed CSO-WT algorithm which aims to maximize the overall QoC of a WSN while deploying a minimum number of sensors on 3-D surfaces. The performance of the deployment method is first compared with a DT method. The CSO-WT algorithm is inspired from CSO and the sensor configuration is achieved by a probabilistic sensing model. In this section we briefly describe the WT, the CSO algorithm and the sensing model which are used in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Wavelet Transform</head><p>Mathematical formulation of signal expansion using wavelets gives WT pairs, which is analogous to Fourier transform (FT), in which signals are represented as a sum of sinusoids. The WT has the ability to provide both spatial (and temporal) and frequency information (i.e. space-frequency or time-frequency analysis) thus it is a suitable tool for transient, non-stationary or time varying phenomena whereas the nonlocal FT gives only frequency information. The need for simultaneous representation and localization of both time and frequency for non-stationary signals (e.g. speech and music) led toward the evolution of WT from the popular FT. WT approach is able to analyze signals with non-stationary spectra and gives better and faster results than other transformations. The WT has been investigated and applied to various signal processing problems <ref type="bibr" target="#b13">[14]</ref>.</p><p>With 2-D discrete wavelet transform (DWT), the signal I(x,y) is decomposed by</p><formula xml:id="formula_0">I(x, y) = k,l∈z a J,k,l J,k,l (x, y) + j≥J k,l∈z d h j,k,l h j,k,l (x, y) + j≥J k,l∈z d v j,k,l v j,k,l (x, y)+ j≥J k,l∈z d d j,k,l d j,k,l (x, y) (1)</formula><p>where a j,k,l are the approximation coefficients at scale J with corresponding scaling functions j,k,l (x,y), and d j,k,l are the detail coefficients at each scale with the corresponding wavelet functions ψ j,k,l (x,y). While the first term on the right-hand side of (1) represents the coarse-scale approximation to I(x,y), the second, the third, and the fourth terms represent the detail components in horizontal, vertical and diagonal directions, respectively. At each level of the standard DWT, the number of coefficients of the decomposition decreases by a factor of two, resulting in a perfectly non-redundant of O(n) representation of a given signal. The sparse representation with energy compaction makes the standard DWT widely used for signal compression.</p><p>In this paper, in order to determine the coverage cavities in the QoC matrix, we take the DWT of the QoC matrix iteratively. The overall QoC is regarded as a measure of signal level provided by the neighboring sensors in each location (pixel).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Cat Swarm Optimization</head><p>The swarm intelligence notion is developed by observing the behaviors of creatures in order to solve optimization problems. Ant Colony Optimization (ACO) and Particle Swarm Optimization (PSO) are two such examples. ACO algorithm is developed by observing the behaviors of ants and PSO algorithm is developed by examining the behaviors of gulls. Recently, a novel swarm intelligence algorithm, named CSO algorithm, has been proposed through inspecting the behaviors of felids.</p><p>In CSO, the two major behaviors of the cats are modeled into two sub-models, the seeking mode and the tracing mode. In the seeking mode the cat looks around and seeks the next position to move to. In the tracing mode, the cat tracks some targets. One of the fundamental factors in CSO is that cats spend most of their time in seeking mode. If they find a good prey, they immediately go into the tracing mode.</p><p>The CSO algorithm is simple. It starts with creating a number of cats and putting them into the seeking mode. The cats are randomly sprinkled into the M-dimensional solution space to randomly select values which are in-range of predefined values. Then a random number of cats are put into the tracing mode according to a selection criterion. In every movement, fitness values of cats are calculated and the best results are kept in memory. The algorithm loops until the termination condition is satisfied otherwise all the processes are repeated all over again.</p><p>In <ref type="bibr" target="#b2">[3]</ref>, Chu et al. explains and proves the advantages of CSO over other well-known bio-inspired algorithms such as PSO. In this paper, we evaluate the performance of CSO over various simple and steady state GA based methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Sensing Models</head><p>Wireless channels operate through electromagnetic radiation from a transmitter to a receiver. The density of obstacles between the transmitter and the receiver antennas depends very much on the physical environment because fading and shadowing affects are causes by the surrounding obstacles <ref type="bibr" target="#b14">[15]</ref>. A sensing model in WSNs is a mathematical formulation for the characterization of the sensor coverage rate as a function of distance and other environmental conditions. In this paper we have utilized two sensing models which are the binary sensing model and the probabilistic sensing model. First one indicates the ratio of the coverage of the WSN on a given terrain and the latter one is used to calculate the overall QoC of a WSN.</p><p>Binary sensing model is straightforward in the sense that if the sensed phenomenon p is within a predefined range (s r ) of a sensor s and it is not occluded by any obstacle (if there is LOS between s and p), then it is absolutely sensed. Otherwise it is not. If (s, p) denotes the 3-D Euclidian distance between p and s, the binary sensing probability O(s,p) can be expressed as follows:</p><formula xml:id="formula_1">O(s, p) = 1,( (s, p) &lt; s r ) and if LOS 0, otherwise.<label>(2)</label></formula><p>Probabilistic model allows a more realistic modeling of sensor coverage probability <ref type="bibr" target="#b15">[16]</ref>. In this model, an uncertainty sensor detection range is defined as u r where u r &lt;s r . If the sensed phenomenon p lies within (s r -u r ) and there is LOS between s and p, then it is certainly sensed. If p lies out of the range from (s r +u r ) or if there is a non-line of sight (NLOS) then it is certainly not sensed. Besides, if p lies within (s r -u r ) and (s r +u r ) and if there is LOS between s and p, then the detection probability can be expressed as exp(-α.dist β ). The sensing probability O q (s,p) of the probabilistic sensing model is expressed in</p><formula xml:id="formula_2">O q (s, p) = ⎧ ⎨ ⎩ 1, (s, p) &lt; (s r -u r ) and if LOS e -α.dist β , s r -u r ≤ (s, p) &lt; s r + u r and if LOS 0, (s, p) &gt; (s r + u r ) or if NLOS dist = (s, p, ) -(s r -u r ) 2 . (<label>3</label></formula><formula xml:id="formula_3">)</formula><p>The values of α and β reflects the environmental characteristics of a terrain. By carefully adjusting these variables, various sensor and terrain types can be defined.</p><p>Although Bresenham algorithm is often used in computer graphics for line drawing on 2-D surfaces, we have modified it to be used for LOS determination on 3-D spaces. Fig. <ref type="figure" target="#fig_0">1</ref> shows a simple LOS scenario. As shown in the figure, if the height of any corresponding pixels between a sensor S and a phenomenon P does not cut the virtual line drawn from S to P, then there is a LOS between S and P. Otherwise, it is said that there is NLOS (non-LOS) between S and P. The virtual line between S and P is drawn by Bresenham algorithm which is explained in <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. Proposed CSO-WT algorithm</head><p>In this paper we address the problem of deploying a finite number of sensors to maximize the coverage and the quality of coverage in 3-D environments. In other words, we seek to optimally locate the sensors to cover a specified region as effective as possible. The deployment strategy is a nontrivial task because different types of terrains and sub-regions of a terrain may require additional care so that they are covered with a minimum number of sensors. In this paper, we have used three different terrain types which we name as rough terrains, undulating terrains and smooth terrains. Examples of the 3-D terrains which are used in this paper are given in Fig. <ref type="figure" target="#fig_1">2</ref>. The terrain types are determined with the model described in <ref type="bibr" target="#b17">[18]</ref>, such that for each terrain the mean height value is calculated by taking the average of elevation values for all points. Our studies have revealed that when the terrain is smoother, the coverage of the sensor deployment increases. In rough terrains, deployment of sensors is more challenging because LOS between sensors and corresponding pixels becomes less.</p><p>The CSO-WT algorithm is composed of three modes which are the initialization mode, seeking mode, and the tracing mode. In addition, at the very beginning of the algorithm we initialize and set the required parameters for CSO methods. In this section we briefly describe the proposed algorithm. The pseudo code of CSO-WT algorithm is illustrated in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Initialization</head><p>At the initial population generation phase of the algorithm, we first deploy a limited number of sensors on the terrain and calculate the QoC of this deployment. We then take the DWT of the QoC matrix in order to detect the coverage cavities in the QoC matrix. The approximation coefficient matrix, which comprises the energy compaction of the given signal with a reduced dimension as compared to the QoC matrix, still provides sufficient information for the coverage cavities and it is used for determining the candidate pixel locations to deploy new sensors.</p><p>The whole process is realized by iteratively deploying sensors on locations that are determined using an adaptive thresholding approach where in each iteration, the number and the location of the approximation coefficients less than an adaptively defined threshold value is determined. For this purpose, the approximation matrix is then divided into subregions and for each region a weight W i is calculated</p><formula xml:id="formula_4">W i = N i N (<label>4</label></formula><formula xml:id="formula_5">)</formula><p>where N is the total number of coefficients that satisfy the threshold condition and N i is the number of coefficients on ith sub-region that satisfy the same condition. Also the number of the sensors to deploy in each iteration S di , (on ith region), is then determined by</p><formula xml:id="formula_6">S di = W i × N (s r -u r ) × 2 (5)</formula><p>where s r is the absolute range of a sensor and u r (u r &lt;s r ) is an uncertainty sensor detection range which is defined for Algorithm 1 Proposed CSO-WT Algorithm load terrain T ; Set Ns; % initialization mode:</p><p>Step 1: Deploy a limited number of sensors on the terrain and calculate the QoC of this deployment</p><p>Step 2: Take the DWT of the QoC matrix in order to detect the coverage cavities in the QoC matrix. Deploy remaining sensors on non-covered zones. Each deployment is named as a Dv which represents a cat.</p><p>Step 3: Calculate the fitness for this deployment and append the value to the corresponding Dv.</p><p>Step 4: Save Dv. Goto Step1 repeat k times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Repeat</head><p>Set some of the cats into tracing mode according to MR, % seeking mode:</p><p>If the cat is in seeking mode then</p><p>Step 1: Make S MP copies of the cat Dv(k).</p><p>Step 2: For each copy, according to CDC, select the Dv as a candidate for changing.</p><p>Step 3: For the Dvs, which are selected in Step2, change the position of SRD of sensors randomly. Sensors will move according to the SMR value.</p><p>Step 4: Calculate the fitness for all of the cats and append the value to the corresponding Dv.</p><p>Step 5: Select the Dv which has the highest fitness value to be a new cat. end if % tracing mode: If the cat is in tracing mode then</p><p>Step 1: For each cat of Dvs, MRT percent of sensors will be moved. This movement is calculated utilizing WT, which reveals the least covered zone (coverage hole) in the periphery of the sensor. Move the sensor toward the determined zone according to the SMR value.</p><p>Step 2: Calculate the fitness value for all of the cats and replace the corresponding Dv if the caculatedfitness value is better than the original one. end if Until termination condition satisfies. the probabilistic sensing model in <ref type="bibr" target="#b2">(3)</ref>. After detecting S di (the number of sensors to deploy on ith region) sensors are deployed randomly on the pixels corresponding to values of the approximation coefficients which are less than the threshold on each sub-region. The threshold value Th is increased adaptively at each iteration so as to prevent getting a null threshold solution set, as shown in</p><formula xml:id="formula_7">Th = k × n it . (<label>6</label></formula><formula xml:id="formula_8">)</formula><p>Hence, the increase in the QoC matrix results in an increase of the approximation coefficients in the WT of QoC.</p><p>In <ref type="bibr" target="#b5">(6)</ref>, k is a variable between 0,01 and 0,1 and n it is the iteration number. Following that, a new coverage calculation is performed for the new sensor deployment phase and the QoC matrix is recalculated. The algorithm iterates until a predefined number of sensors is reached or a target coverage percentage is achieved. In our application, we have taken two-level DWT of the QoC matrix which has a size of 64 × 64 resulting in an approximation coefficient matrix of size 16×16. We then split the approximation coefficient matrix into four sub-matrices of size 4 × 4, which are utilized to determine the weight, W i and the number of the sensors to deploy S di by equations ( <ref type="formula" target="#formula_4">4</ref>)-( <ref type="formula" target="#formula_7">6</ref>). The sensors are deployed on random pixels in an area corresponding to the approximation coefficients having a minimum value, which indicates that area bears the least energy.</p><p>After deploying all the sensors in hand, the Cartesian coordinates of the sensor locations are saved in a vector; and this process is repeated until an initial population is formed for the CSO. This assignment forms a deployment vector (Dv) which we name as a cat. As an example, if there are 32 sensors to deploy on a terrain, a Dv will be an array of 32 coordinate values which reflects a deployment scheme. The fitness values of each Dv is calculated with <ref type="bibr" target="#b6">(7)</ref> and appended to Dv(k). Initialization step iterates k times. In our studies we have used k values between 10 to 40 and our experiments have revealed that the most effective number is 20.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Seeking Mode</head><p>After the initialization step, there are k cats (Dvs). Some of these cats are set into the tracing mode and the other ones are set to the seeking mode according to MR (mixture ratio). MR can be chosen to be a value between 20% to 40%. In this paper we have chosen MR to be 25% which dictates that 25% of the cats will be in the tracing mode and 75% of the cats will be in the seeking mode. The reason behind assigning more cats to the seeking mode is to ensure that the algorithm does not get trapped into local optima.</p><p>The next step is reproduction. If a cat is in the seeking mode, then SMP (seeking memory pool) number of cats is reproduced. SMP is used to define the size of the seeking memory of each cat. Afterwards, some of these reproduced cats will seek the terrain in order to find a good place to sit which yields a better coverage. The number of cats that will be assigned to seek the terrain varies according to CDC (counts of Dvs to change). In this paper we have determined that a CDC value of 100% results in every reproduced cat seeking into the terrain. The dimension of the seeking range of the cats is determined in Step3 of the seeking mode. Only SRD (seeking range of the selected Dv) percent of the sensors in each Dv is selected to be replaced. SRD can be assigned a value between 20% and 40%. Also, the number of pixels that a sensor can move is determined with SMR (sensor movement range). In our studies, sensors can move from 1 to 4 pixels in its periphery. After the specific cats and their sensors are redeployed in the terrain, the fitness values each redeployment is calculated by <ref type="bibr" target="#b6">(7)</ref> and the cat which reproduce the highest fitness is assigned to the new cat.</p><p>The QoC reflects how well each deployment step covers the terrain, taking into account of the coverage of each sensor within a circle in its periphery. The QoC calculation can be expressed as follows:</p><formula xml:id="formula_9">QoC(i) = 1 P N j=1 P k=1 o q (s j , p k ) (<label>7</label></formula><formula xml:id="formula_10">)</formula><p>where QoC(i) denotes the overall coverage level after ith deployment step, j denotes the sensor number, p is the number of pixels in the whole map and Oq(s,p) denotes the sensing probability which is related to the distance between s and p.</p><p>Since sensor j has coverage on a few pixels in its periphery, only those pixels within the coverage range contribute to the inner summation of <ref type="bibr" target="#b6">(7)</ref>. In our implementation, if a pixel is covered by more than one sensor, only the one with the highest sensing probability is used in the calculation of QoC(i).</p><p>The QoC of a deployment is adopted from the Coverage Resolution Model (CRM) to be used for 3-D regions which is described in <ref type="bibr" target="#b15">[16]</ref>. CRM provides the QoC of a region where the set of all points in the region are shown as p j , j=1..N. Let the set of all sensors in the region be s i , i=1,...,M, where s i is the sensor number. The coverage measurement model which is used in this paper is given in</p><formula xml:id="formula_11">[C ij = O(s i , p j ) ∩ min( (P)j, s i ))] (<label>8</label></formula><formula xml:id="formula_12">)</formula><p>where C ij is the quality of the coverage value of a pixel p j which is covered by the nearest LOS sensor s i to p j . After detecting s i , the sensing probability O(s,p) is calculated with (3). After calculating the coverage probability of all the pixels in the terrain, a QoC matrix is created. Each point in the matrix corresponds to the actual Cartesian coordinates in the terrain. Since the values of QoC matrix is between 0 and 1, we can plot this matrix in a grayscale image. An example is shown in Fig. <ref type="figure" target="#fig_2">3</ref>. The black regions indicate non-covered pixels after deploying 16 sensors randomly and white regions indicate 100% covered ones. We treat the black regions as coverage cavities in the QoC and the mitigation of the coverage cavity constitutes the tracing mode of the algorithm. The tracing mode is explained in the following subsection. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Tracing Mode</head><p>Tracing mode of the algorithm is more straightforward. Simply, if a cat is assigned to be in the tracing mode, MRT (movement ratio of tracing cats) number of sensors will be moved to better positions. MRT can be assigned a value between 1% to 4%. In our studies we assigned MRT to be 3%. The movement of a sensor in tracing mode is more sophisticated than in seeking mode where in tracing mode the movement direction is determined by the method which is also explained in Section IV-A. This method is based on WT which reflects the coverage holes in the periphery of a sensor. Afterwards, the fitness value of each Dv is recalculated with <ref type="bibr" target="#b8">(9)</ref> and appended to Dv.</p><p>The location of the pixel which has the minimum energy level in the approximation matrix corresponds to an area with the least sensor coverage in that region and that area enforces the sensor to change its location toward it. This process is illustrated with an example in Fig. <ref type="figure" target="#fig_3">4</ref>. In Fig. <ref type="figure" target="#fig_3">4</ref>(a), the QoC matrix for a region of 8×8 pixels is shown. According to this figure, the sensor sits on pixel coordinate <ref type="bibr" target="#b7">(8,</ref><ref type="bibr" target="#b6">7)</ref>. In Fig. <ref type="figure" target="#fig_3">4(b)</ref>, the gray-scale representation of the QoC matrix is given. The white pixels denote the fully covered pixels and the black pixels correspond to 0% coverage. Total QoC for this region is 70% on average. The WT of the QoC matrix for a subregion is taken with two levels. The resulting approximation matrix of the WT is shown in Fig. <ref type="figure" target="#fig_3">4(c</ref>). It can be seen from the figure that the top-right pixel has the least energy level which attracts the sensor toward the corresponding area of size 4×4 pixels on that region. The sensor is then randomly moved to one of these pixel locations. The movement is made randomly in order to provide exploration and escape from local optima. In Fig. <ref type="figure" target="#fig_3">4(d)</ref> and (e), the resulting QoC matrix after the movement of a sensor in a subregion is shown where the QoC is increased to 74%.</p><p>The algorithm iterates until the termination condition is satisfied. The termination condition can be a number, exact run time or no change of the best fitness after a number of iterations. In this paperwe terminated the algorithm if there is no change in the best fitness after 200 iterations.</p><p>The summary of the parameters used in for the proposed algorithm is listed in Table <ref type="table" target="#tab_0">I</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. Performance Evaluations</head><p>In this paper, we have used a random and a DT based deployment strategy to compare our algorithm. The random deployment is straightforward that after deploying each sensor  randomly on the terrain, we calculate the coverage and the QoC percentages according to the aforementioned sensing models. After reaching the target coverage value, the number of sensors needed and the sensor positions are recorded. This scheme is repeated several times (up to 3000 iterations) and the number of sensors needed is determined by taking the average. Although a normal or a Gaussian distribution can enable equally distributed sensors in a region, random deployment is far from to be an optimal solution. This is because in 3-D environments, each subregion of a terrain may show different characteristics. For example, one subregion may exhibit highly fluctuating slopes with sharp valleys or hills. In such regions, there will be more NLOS situations that the number of sensors needed to cover the region will be high. On the other hand, a different sub-area may be less severe with mild slopes that will exhibit LOS situations and a less number of sensors will suffice.</p><p>The second deployment method that we have compared our algorithm is the DT based approach. We have adapted the DT-Score algorithm which was proposed as a state of-the-art algorithm to be used on 2-D and 3-D environments <ref type="bibr" target="#b5">[6]</ref>.</p><p>According to <ref type="bibr" target="#b12">[13]</ref>, a DT can be derived from Voronoi cells and the definition of a DT can be given as follows:</p><p>Definition 1: Let V be a set of points. For each point V i , (vi V ) the Voronoi Cell of V i , VC(V i ) is defined as the set of all points in the plane that are closer to V i than any other point in V cell. The DT of V , is a graph G = (V, ) where e = (vi, vj) E, iff (vi) and have a side (or at least a point) in common.</p><p>It is a well-known fact that Delaunay Triangulation is the dual graph of Voronoi diagram and an example of a Voronoi Diagram and its corresponding Delaunay Triangulation is given in Fig. <ref type="figure" target="#fig_4">5</ref>.</p><p>The deployment approach based on the DT is applied for placing more sensors to the uncovered regions. Before deploying a sensor, each candidate position is generated from the current sensor and a new sensor is placed into the middle of the largest empty circle in D(V). The algorithm is repeated until a sufficient number of coverage is achieved or until the number of sensors is exhausted.</p><p>The D(V) on the coordinates of the deployed sensors always results in a convex. This yields to non-covered regions on the boundaries of the terrain. In order to overcome this disadvantage, at the very beginning of the deployment algorithm we manually deploy sensors on the edges of the terrain. This ensures us to accumulate the probability of the coverage of all the pixels in the region.</p><p>In our simulations, we have utilized three different types and sizes of terrains ranging from 64 × 64 pixels to 256 × 256 pixels. Although the size of the terrain does not have an adverse effect on the deployment method, the computational time needed for the deployment increases proportionally in wider terrains. Hence, in this paper 64 × 64 pixel sized terrains are utilized. Also, the deployed sensors are assumed to be homogenous with sensing ranges s r , of six pixels. The uncertainty sensor detection range u r , is chosen to be two pixels. The values of α and β are chosen to be 1.0 and 0.5, respectively.</p><p>The first metric in our simulations reveal the minimum number of sensors needed to cover 90% of a terrain with different deployment algorithms. The comparisons are made  It can be seen on Fig. <ref type="figure" target="#fig_5">6</ref> that, in order to achieve 90% coverage on a rough terrain, 98 sensors will suffice when using CSO-WT. On the other hand, 142 and 160 sensors are needed if a DT algorithm and a random deployment algorithm are used consecutively. On an undulating terrain, 58, 62, and 85 sensors are needed when using CSO-WT, DT and random deployments respectively. On the other hand, on smooth terrains, 51, 56, and 80 sensors are needed. It can be also inferred from the figures that the number of sensors needed decrease drastically if the terrain type gets smoother. As a result, with utilizing a binary coverage model (to evaluate the total coverage), CSO-WT algorithm outperforms the DT based algorithm.</p><p>The second metric in our simulations indicate the quality of the coverage of the deployment algorithms. The QoC is calculated with the probabilistic sensing model by accumulating the QoC matrix and taking the percentage. The comparisons are also made by running a random, DT based and CSO-WT algorithm on different types of terrains and the results are shown in Fig. <ref type="figure" target="#fig_6">7</ref>. The figures indicate that when deploying 96 sensors with a random algorithm, 69%, 84%, and 87% QoC values are achieved on a rough, undulating and smooth terrain consecutively. When deploying with the DT approach, 74%, 89%, and 92% values are achieved. On the other hand, CSO-WT algorithm exhibits 77%, 93%, and 95% QoC values when on the rough, the undulating and the smooth terrains, respectively.</p><p>As an example, the QoC matrix after deploying 96 sensors on an undulating terrain is given in Fig. <ref type="figure" target="#fig_7">8</ref>. Also in Fig. <ref type="figure" target="#fig_8">9</ref>, the progress of a deployment with 64 sensors on a 64×64 pixel size 3-D terrain is illustrated as an example. In the figure, the corresponding QoC matrix after the first iteration, 1000th and 2000th iterations is shown. It can be seen from the figures that, as the algorithm progresses, QoC value increases and the black regions smoothly turn into white. The QoC matrix is plotted in gray scale where the color scale is defined as follows: white pixels indicate fully covered (100%) pixels on the corresponding terrain and black pixels indicate noncovered (0%) ones.</p><p>In order to evaluate the performance and the advantages of the proposed CSO and WT based method (CSO-WT) over other bio-inspired methods, we have also studied a simple GA (GA-S) and a steady state GA (GA-SS) method. It can be said that more-up-to date bio-inspired methods could have been chosen but as stated in Section II, the literature for sensor deployment on 3-D terrains is very scarce and we hope that our study will be appreciated as an initial but important step on the subject. In addition, we hope that our study will reveal and enlighten many of the controversial issues in the literature, guide and encourage enthusiastic researches to utilize other well known optimization techniques.</p><p>As it is well known, the performance of optimization algorithms is very much dependant on initial conditions. We therefore emphasize here that the same initial deployment scheme is chosen for both methods. The QoC of the unique initial deployment can be seen in Fig. <ref type="figure" target="#fig_8">9</ref>(a). In GA-S, the mutation is realized by assigning a sensor to a new random pixel position within its periphery (1 to 4 pixels). On the other hand with the proposed WT based deployment strategy, the sensor to be mutated is guided to a new pixel position which is determined by finding the least energy levels in its surrounding region. In Fig. <ref type="figure" target="#fig_9">10</ref>, the comparison of these three approaches is presented. The simulations are taken to deploy 64 sensors on a rough terrain. Both algorithms start with the same initial population. As apparent from the figure, nearly after 2000 iterations, the GA-S and GA-SS approaches prematurely converge to a QoC value of nearly 73.3% and 74.3% respectively. Also the maximum QoC rate after 2000 iterations, achieved with GA-SS is 74.3%. As shown in figure, our method gives better QoC results than GA methods. After 2500 iterations our method produces a QoC value of 78%. Since the movement of sensors in the proposed method is guided, the search for the best sensor locations gives improved QoC results. Ultimately, it can be inferred from the figure that CSO based sensor deployment method outperforms GA algorithms.</p><p>In addition, it can be shown that the worst case time complexity of the fitness evaluation procedure is O(n 3 ) where n represents the number of sensors to be deployed. We restate that k is the total number of cats, MR is the percentage which represents the number of cats to be set into the tracing mode, SMP represents the number of reproduced cats and CDC is the percentage of cats that will be assigned to seek the terrain. Hence, the overall worst case time complexity of the seeking mode of CSO-WT method is O(k×(1-MR)×SMP ×CDP × n3 (please contact the authors if interested in the proof).   For the GA based methods, where k represents the number of population size, at each iteration, the number of reproduced children is k. Thus, overall worst case time complexity of the GA methods is O(k × n 3 ) that presents slightly better computational time complexity compared to CSO-WT method. As a justification, throughout the evaluation process, it has been seen that GA methods present nearly four times better running times due to increased number of fitness evaluations which is also four times higher in CSO-WT compared to GA methods. It can be seen from Fig. <ref type="figure" target="#fig_9">10</ref> that 750 iterations in CSO-WT methods with a total number of 60,000 fitness evaluations correspond to 3000 iterations of GA methods, still producing better QoC values. Although the proposed method presents a slower process which can be regarded as a drawback, the running time is not the case, with the CSO-WT method, better deployment results are achieved in terms of QoC.</p><p>With increased number of sensors and wider terrains, the computational time to find optimal deployment solution increases exponentially. Hence, for our experiments we mostly worked on deploying maximum 64 sensors on 64×64 pixel sized terrains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. Conclusion</head><p>In WSNs, the deployment of sensors in order to achieve maximum coverage with a minimum number of sensors is a challenging task. The deployment of sensors to achieve desired QoC levels is basically more challenging on 3-D terrains compared to 2-D terrains. Although the literature for deploying on 2-D environments is extensive, evaluations on 3-D environments are scarce. In the scope of this paper, we have focused on the maximization of a deterministic sensor coverage method, CSO-WT, which utilizes wavelet transformation in order to determine the coverage cavities after an initial deployment phase on 3-D environments. The approach followed in this paper is inspired from CSO and the performance results reveal that the algorithm proposed outperforms the random deployment and the DT based deployment approaches. In addition, we are planning to develop another method which will also take into account the network connectivity issues. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Determination of LOS between S and P.</figDesc><graphic coords="4,56.50,53.90,240.48,122.54" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Examples of terrain types used in this paper: (a) rough terrain; (b) undulating terrain; (c) smooth terrain.</figDesc><graphic coords="5,337.73,53.98,198.72,202.46" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. QoC matrix after deployment of 16 sensors on 64×64 pixel sized rough terrain (QoC= 30%).</figDesc><graphic coords="6,394.52,53.67,89.76,78.77" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Redeployment of sensor in tracing mode. (a) QoC matrix of subregion before deployment. (b) Grayscale representation of QoC matrix. (c) Approximation matrix after WT. (d) QoC matrix of sub-region after redeployment. (e) Grayscale representation of QoC matrix after redeployment.</figDesc><graphic coords="7,71.22,53.57,205.44,217.87" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Voronoi cells and Delaunay Triangulation.</figDesc><graphic coords="7,373.23,54.31,127.20,106.13" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Comparison of minimum number of sensors needed in order to achieve 90% coverage on different types of terrains.</figDesc><graphic coords="8,73.50,53.62,205.92,120.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Comparison of QoC values that is achieved with different algorithms by deploying 96 sensors on different types of terrains.</figDesc><graphic coords="8,72.50,218.98,208.32,141.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. QoC matrix after deployment of 96 sensors on undulating terrain with CSO-WT (QoC= 93%).</figDesc><graphic coords="9,124.22,53.89,100.32,87.55" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Progress of deployment with 64 sensors on 64 × 64 pixel size 3-D terrain after (a) initial deployment for all methods (QoC=67%); (b) 1000 iterations (QoC=75%); (c) 2000 iterations (QoC=77.3%).</figDesc><graphic coords="9,59.72,185.13,228.96,84.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Comparison of CSO-WT method withg650 simple GA (GA-S) and steady state GA (GA-SS) methods.</figDesc><graphic coords="9,65.72,323.04,216.48,174.38" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Okyay</head><label></label><figDesc>Kaynak (F'03) received the Ph.D. degree from the Department of Electronic and Electrical Engineering, University of Birmingham, Birmingham, U.K., in 1972. From 1972 to 1979, he held various positions within the industry. In 1979, he joined the Department of Electrical and Electronics Engineering, Bogazici University, Istanbul, Turkey, where he is currently a Full Professor, and also the Director of the Mechatronics Research and Application Center. He has held long-term Visiting Professor/Scholar positions at various institutions in Japan, Germany, the United States, and Singapore. He has authored three books and edited five books and authored or coauthored close to 400 papers that have appeared in various journals and conference proceedings. His current research interests include the fields of intelligent control and mechatronics. Dr. Kaynak has served on the Editorial or Advisory Boards of a number of scholarly journals. Currently, he is a Co-Editor-in-Chief of the IEEE Transactions on Industrial Electronics and Editor-in-Chief-Elect of the IEEE/ASME Transactions on Mechatronics. He is active in international organizations, has served on many committees of the IEEE, and was the President of the IEEE Industrial Electronics Society from 2002 to 2003 and Vice-President (for Conferences) of Computational Intelligence Society from 2004 to 2005. He is also the UNESCO Chair on Mechatronics.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I</head><label>I</label><figDesc>List of Parameters</figDesc><table><row><cell>Symbol</cell><cell>Explanation</cell><cell>Quantity</cell></row><row><cell>Ns</cell><cell>Number of sensors</cell><cell>64</cell></row><row><cell>k</cell><cell>Number of cats</cell><cell>20</cell></row><row><cell>Dv</cell><cell>Deployment vector (a cat)</cell><cell>k</cell></row><row><cell></cell><cell>which is an array of Ns el-</cell><cell></cell></row><row><cell></cell><cell>ements</cell><cell></cell></row><row><cell>SRD</cell><cell>Seeking range of the selected</cell><cell>20 %</cell></row><row><cell></cell><cell>Dv, which reflects how many</cell><cell></cell></row><row><cell></cell><cell>sensors will be moved</cell><cell></cell></row><row><cell>CDC</cell><cell>Counts of the reproduced Dvs</cell><cell>100 %</cell></row><row><cell></cell><cell>which will be assigned to</cell><cell></cell></row><row><cell></cell><cell>seek the terrain.</cell><cell></cell></row><row><cell>SMR</cell><cell>Sensor movement range</cell><cell>1-4 pixels</cell></row><row><cell>MR</cell><cell>Mixture ratio dictates how</cell><cell>25 %</cell></row><row><cell></cell><cell>many of the cats will be in</cell><cell></cell></row><row><cell></cell><cell>tracing mode</cell><cell></cell></row><row><cell>MRT</cell><cell>Movement ratio of the tracing</cell><cell>3 %</cell></row><row><cell></cell><cell>cats</cell><cell></cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A survey on sensor networks</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyildiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Weilian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sankarasubramaniam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cayirci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="102" to="114" />
			<date type="published" when="2002-08">Aug. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Positioning and utilizing sensors on a 3-D terrain part I-Theory and modeling</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">R</forename><surname>Topcuoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ermis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sifyan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern. C, Appl. Rev</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="376" to="382" />
			<date type="published" when="2011-05">May 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Computational intelligence based on the behaviour of cats</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Tsai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Innovative Comput. Inform. Contr</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="163" to="173" />
			<date type="published" when="2007-02">Feb. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Enhancing the performance of watermarking based on cat swarm optimization method</title>
		<author>
			<persName><forename type="first">G</forename><surname>Kalaiselvan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lavanya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Natrajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICRTIT</title>
		<meeting>ICRTIT</meeting>
		<imprint>
			<date type="published" when="2011-06">Jun. 2011</date>
			<biblScope unit="page" from="1081" to="1086" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Continuous wavelet transform for time-varying motion extraction</title>
		<author>
			<persName><forename type="first">A</forename><surname>Briassouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Matsiki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Kompatsiaris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Image Process</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="271" to="282" />
			<date type="published" when="2010-08">Aug. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A Delaunay triangulation based method for wireless sensor network deployment</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">C</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Chung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Commun</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">14</biblScope>
			<biblScope unit="page" from="2744" to="2752" />
			<date type="published" when="2007-10">Oct. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Bio-inspired algorithms for autonomous deployment and localization of sensor nodes</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">K</forename><surname>Venayagamoorthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern. C, Appl. Rev</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="663" to="675" />
			<date type="published" when="2010-11">Nov. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An improved co-evolutionary particle swarm optimization for wireless sensor networks with dynamic deployment</title>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sensors</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="354" to="370" />
			<date type="published" when="2007-03">Mar. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Particle swarm optimization in wireless-sensor networks: A brief survey</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">K</forename><surname>Venayagamoorthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern. C, Appl. Rev</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="262" to="267" />
			<date type="published" when="2011-03">Mar. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Efficient point coverage in wireless sensor networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Combinatorial Optimization</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="291" to="304" />
			<date type="published" when="2006-05">May 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Optimal placement, scheduling, and routing to maximize lifetime in sensor networks</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">B</forename><surname>Türkogulları</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Aras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">İ</forename><forename type="middle">K</forename><surname>Altınel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ersoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1000" to="1012" />
			<date type="published" when="2010-06">Jun. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Localization scheme for wireless sensor networks using mobile anchors with directional antennas</title>
		<author>
			<persName><forename type="first">O</forename><surname>Chia-Ho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Sensors J</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1607" to="1616" />
			<date type="published" when="2011-07">Jul. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">On the necessity of using delaunay triangulation substrate in greedy routing based networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ghaffari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hariri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shirmohammadi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Lett</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="266" to="268" />
			<date type="published" when="2010-03">Mar. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Modeling and analysis of a wavelet network-based optical sensor for vibration monitoring</title>
		<author>
			<persName><forename type="first">Y</forename><surname>El-Ashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Dhaouadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Landolsi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Sensors J</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1657" to="1668" />
			<date type="published" when="2011-08">Aug. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Tse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Viswanath</surname></persName>
		</author>
		<title level="m">Fundamentals of Wireless Communication</title>
		<meeting><address><addrLine>Cambridge, U.K.</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Delaunay triangulation as a new coverage measurement method in wireless sensor network</title>
		<author>
			<persName><forename type="first">H</forename><surname>Chizari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hosseini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Poston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Razak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Abdullah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sensors</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="3163" to="3167" />
			<date type="published" when="2011-03">Mar. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Computer Graphics</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hearn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Baker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Prentice Hall</publisher>
			<pubPlace>Englewood Cliffs, NJ, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">He is currently pursuing the Ph.D degree in the Computer Engineering Department, TUAFA. His current research interests include directional MAC protocols, especially for FANETs and wireless sensor deployment methods on 3-D environments. Numan Unaldi received the B.Sc. degree in electronics and communication engineering from Istanbul Technical University, Istanbul, Turkey in 1999, the M.Sc. degree in electrical and electronics engineering from the Dokuz Eylül University</title>
		<author>
			<persName><forename type="first">S</forename><surname>Oktug</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Khalilov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tezcan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2005, and the Ph.D degree in electrical and computer engineering from Old Dominion University</title>
		<meeting><address><addrLine>Izmir, Turkey; Norfolk, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-10-29">27-29 Oct. 2008. 2008. 2010</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
	<note>Currently, he teaches both undergraduate and graduate courses at the Turkish Air Force Academy, Istanbul. Turkey. His current research interests include multiscale signal and image processing, computational electromagnetics, and optimization in sensor networks</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
