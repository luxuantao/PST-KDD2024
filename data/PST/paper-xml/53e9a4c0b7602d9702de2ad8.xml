<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Future Generation Computer Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2008-09-16">16 September 2008</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Marek</forename><surname>Wieczorek</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institute of Computer Science</orgName>
								<orgName type="institution">University of Innsbruck</orgName>
								<address>
									<addrLine>Technikerstraße 21a</addrLine>
									<postCode>A-6020</postCode>
									<settlement>Innsbruck</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Andreas</forename><surname>Hoheisel</surname></persName>
							<email>andreas.hoheisel@first.fraunhofer.de</email>
							<affiliation key="aff1">
								<orgName type="department">Fraunhofer FIRST</orgName>
								<address>
									<addrLine>Kekuléstraße 7</addrLine>
									<postCode>D-12489</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Radu</forename><surname>Prodan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Institute of Computer Science</orgName>
								<orgName type="institution">University of Innsbruck</orgName>
								<address>
									<addrLine>Technikerstraße 21a</addrLine>
									<postCode>A-6020</postCode>
									<settlement>Innsbruck</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Future Generation Computer Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2008-09-16">16 September 2008</date>
						</imprint>
					</monogr>
					<idno type="MD5">3285F53A718BED694A0D82703606260F</idno>
					<idno type="DOI">10.1016/j.future.2008.09.002</idno>
					<note type="submission">Received 5 June 2008 Received in revised form 28 August 2008 Accepted 1 September 2008</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Grid computing Workflow Multi-criteria scheduling Taxonomy</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Workflow scheduling on the Grid becomes more challenging when multiple scheduling criteria are considered. Existing studies provide different approaches to the multi-criteria Grid workflow scheduling problem, and address different variants of the problem. A profound understanding of the problem's nature can be an important step towards more generic scheduling approaches. Based on the related work and on our own experience, we propose several novel taxonomies of the problem, considering five facets: workflow model, scheduling criteria, scheduling process, resource model, and task model. We make a survey of the existing related work, and classify it according to the proposed taxonomies, identifying the most common use cases and the areas that have not been sufficiently explored yet.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Executing complex processes in heterogeneous distributed computing environments is a major goal in applying information and communication technologies in industry and science. Workflows are commonly used for automating the data and control flow of distributed IT processes. The term ''workflow scheduling'' refers to the resource planning, i.e., the spatial and temporal mapping of workflow tasks onto resources.</p><p>Scheduling of computational tasks and workflows on the Grid is a complex optimization problem, that often requires several scheduling criteria to be considered. In recent years, many theoretical studies on distributed and Grid systems have been realized, that schedule tasks and workflows for more than one scheduling criterion. Many of these approaches address only specific criteria -usually execution time and economic cost. Some of them also aim at increasing the Grid's utility, by considering criteria such as execution fairness, resource usage, and global efficiency (job throughput). Finally, some approaches try to address a more generic model and schedule tasks and workflows with respect to user-defined scheduling criteria. However, in a multi-dimensional parameter space, it is in general not possible to find a solution that is ''best'' with respect to all the metrics at the same time.</p><p>There are several existing approaches to the problem of multicriteria scheduling. One possibility, is to extend the definition of optimality to Pareto optimality <ref type="bibr" target="#b0">[1]</ref>, and therefore assume all solutions that are not dominated by any other solution to be optimal. Pareto optimality does not seem to be a proper optimization goal, as Pareto sets are usually very large, and include also degenerated solutions such as solutions that are optimal for one criterion only. Concerning the existing bi-criteria scheduling approaches, they are usually limited to optimizing two specific criteria <ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref>, which is a consequence of the difficulties with the development of a general multi-criteria scheduling approach. Many existing bi-criteria approaches impose some fixed constraints on one criterion (e.g., deadline or budget limitation), and try to optimize the schedule for one criterion only. Another common solution, is to optimize a linear combination of multiple scheduling criteria with a different weight value assigned to each of them. The approaches that try to optimize a linear combination of multiple criteria <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> assume that the user is able to specify the requirements in such a model, which is not always the case. Moreover, the workflow structure and the quantitative effects of multiple task scheduling decisions made within a single workflow have to be taken into consideration when scheduling a workflow. As a consequence, the scheduling techniques that do not implement any specific mechanisms to address these issues have to handle the workflow as a ''black box'' and evaluate only the complete workflow schedule, which may have a negative impact on the scheduling effectiveness and on the scheduling time. A careful analysis of different types of criteria is required in order to be able to better address the problem.</p><p>There are several other aspects of the multi-criteria Grid workflow scheduling problem, which make this problem challenging, 0167-739X/$ -see front matter © 2008 Elsevier B.V. All rights reserved. doi:10.1016/j.future.2008.09.002 and prevent researchers from developing more general scheduling approaches. For instance, many static full-graph scheduling approaches originate from cluster systems that are usually smaller, more centralized, and less dynamic systems than contemporary Grids. When applied to the Grid, the same approaches may appear to be much less efficient, due to the higher level of complexity of Grid systems. As the applications that can be executed on the Grid may come from many different domains, the characteristics of the workflows may also differ considerably. For instance, workflows can be based on different basic structures (e.g., parallel section, tree) and different processing principles (e.g., pipelined workflows), can be dynamically adjustable, and also the workflow tasks may have a different nature (e.g., moldable and malleable tasks). Scheduling for each of these types of workflows can be considered as a separate problem class. There has been much scientific effort that tried to address some of the aforementioned classes of the problem. The experience coming from all this work should be analyzed and classified, in order to support the development of more general scheduling models. Recently, several extensions to the classical resource management model have been proposed and investigated, including the concepts of advance reservation and Grid economy. How these concepts can be incorporated in workflow scheduling is still an open research problem. Finally, in the domain of scheduling, multiple terms have sometimes been invented to describe the same concept. For instance, the concepts of multiprogrammed and non-multiprogrammed tasks are often referred to as ''cumulative'' and ''disjunctive'' tasks, respectively, and the concept of full-graph scheduling is often referred to as ''global'' scheduling (as opposed to more dynamic ''local'' scheduling). The existence of a common standardized terminology would be an important factor stimulating the further progress in the domain of workflow scheduling.</p><p>The goal of the current work, is to analyze the general problem of Grid workflow scheduling, mostly for multiple scheduling criteria, by reviewing the related work and discovering regularities and irregularities between different problem classes. Rather than focusing on the solutions applied, we try to recognize the complexity of the problem itself. In our research, we use the related work as a guideline, but, in addition, we also introduce ideas coming from our own experience and analysis. Another goal of this article is to propose a uniform terminology to describe different scheduling-related concepts. Our main contribution is a set of five novel taxonomies of the workflow scheduling problem that embrace five different facets (aspects): workflow model, scheduling criteria, scheduling process, resource model, and task model. We try to answer the question of how generic we can be in developing multi-criteria scheduling approaches, and which classes of the general workflow scheduling problem could be addressed by a single generic approach. We also summarize the presented survey of the related work in several tables, where different scheduling systems are classified according to the proposed taxonomies. Finally, we try to illustrate the usefulness of our classification effort by presenting a generic bi-criteria scheduling approach <ref type="bibr" target="#b9">[10]</ref> developed by us -that is based on the presented taxonomies.</p><p>The rest of the article is organized as follows. In Section 2, we formally describe the problem which we address in this article. Section 3 gives a selective overview of the existing classification efforts in the area of Grid computing. Section 4 gives a short introduction to the taxonomies introduced by us for the workflow scheduling problem, that are subsequently described in detail in Sections 5-9. The taxonomies consider both different problem variants and different approaches used to solve the problem. Section 10 analyzes the existing work in the context of the introduced taxonomies, by identifying the problem classes that have been most commonly addressed and those that have not been explored yet. Section 11 presents an example application of the introduced taxonomies -a bi-criteria workflow scheduling approach designed for a generic criteria model, based on the taxonomy of scheduling criteria. Finally, Section 12 concludes the article and provides a short roadmap for the future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Grid workflow scheduling problem</head><p>This article focuses on workflows modeled as graphs that consist of a set of nodes and a set of edges, where nodes represent computational tasks (either single or multiple) or data transfers, and edges represent control and data dependencies (multiple data transfers can be associated with a single edge). In addition, some workflow representations applied in the related work consider special semantics assigned to the workflow tasks, such as composite sequential and parallel loops, or if/switch conditions. Examples of such representations are Petri Nets <ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref> applied in the K-WfGrid project <ref type="bibr" target="#b13">[14]</ref>, Abstract Grid Workflow Language (AGWL) <ref type="bibr" target="#b14">[15]</ref> applied in ASKALON <ref type="bibr" target="#b15">[16]</ref>, and Business Process Execution Language (BPEL) <ref type="bibr" target="#b16">[17]</ref>. In Section 5 we analyze the workflow representations more in detail. In the scheduling process, workflow tasks are mapped to services that are available in the Grid and implement these tasks. One task can be mapped to many alternative services, and one service can implement many tasks. Scheduling is defined as a function that maps each task in a workflow to a service deployed on the Grid that implements this task. The cost model for workflows is described by multiple scheduling criteria, for instance, by execution time, economic cost, and data quality. The partial cost functions defined for each scheduling criterion assign to each service deployed on the Grid its partial cost (e.g., ''execution time of 5 min'', ''economic cost of 5e'', ''data quality of 100%''). In the remainder of this article, we will sometimes refer to the cost of a service s implementing a task τ as the cost of the task τ . Similarly to the partial cost function, the total cost function assigns to a workflow scheduled by a scheduling function the total cost of the workflow that is calculated based on the partial costs of the services mapped to the workflow tasks. The optimization goal is to find for a workflow a schedule that provides the best possible total cost. As we describe in Section 6, the total costs can be evaluated in different ways.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Overview of the existing classification studies for the Grid</head><p>There has been much scientific effort in the past that aimed at classifying the existing Grid research based on certain taxonomies. The reason for creating taxonomies is to organize the knowledge in a certain domain, by finding regularities in all the research. As a primary goal, taxonomies should facilitate the understanding of the classified knowledge and what follows, they should stimulate the further research in the area.</p><p>For instance, a taxonomy of Grid resource management systems has been proposed by Krauter et al. <ref type="bibr" target="#b17">[18]</ref>, a taxonomy of data Grids and distributed data systems has been proposed by Venugopal et al. <ref type="bibr" target="#b18">[19]</ref>, and a taxonomy of Grid monitoring systems has been proposed by Zanikolas and Sakellariou <ref type="bibr" target="#b19">[20]</ref>. Different Grid economy-based systems have been classified by Yeo and Buyya <ref type="bibr" target="#b20">[21]</ref>, with respect to the market models applied in them. Plankensteiner et al. <ref type="bibr" target="#b21">[22]</ref> performed a survey by classifying and identifying faults that can be detected, recovered, and prevented by existing Grid workflow management systems. Truong et al. <ref type="bibr" target="#b22">[23]</ref> classified performance metrics that performance monitoring and analysis tools should provide during the evaluation of the performance of Grid workflows, and introduced an ontology for describing performance data of workflows. Concerning the research done on workflow models, Van der Aalst et al. <ref type="bibr" target="#b23">[24]</ref> compiled the experience coming from different workflow description languages, and proposed a set of 43 workflow patterns <ref type="bibr" target="#b24">[25]</ref> that systematically describe different types of workflow constructors that can be supported by different workflow representation languages. The studies that mostly resemble the current work have been presented by Yu and Buyya <ref type="bibr" target="#b25">[26]</ref> who classified different Grid workflow management systems, and by Casavant and Kuhl <ref type="bibr" target="#b26">[27]</ref> and by Dong and Akl <ref type="bibr" target="#b27">[28]</ref>, who made an extensive survey and classified different scheduling approaches in distributed systems.</p><p>Our current work is focused on a specific problem that is multicriteria Grid workflow scheduling, and our scientific effort is to introduce taxonomies that classify the existing and future research from this particular perspective. Our main goal is to investigate the question of how generic we can be in developing multicriteria scheduling algorithms, which classes of the problem can be approached in a generic way, and which ones require specialized methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Principles of the taxonomies</head><p>When analyzing the problem of workflow scheduling, several important facets (e.g., resource model, criteria model) of the problem have to be considered, as they may strongly influence the decision as to which scheduling approach is most appropriate in the given case. Each facet describes the scheduling problem from a different perspective. In this section, we analyze in detail five different facets of the problem:</p><formula xml:id="formula_0">• workflow model • scheduling criteria • scheduling process • resource model • task model.</formula><p>For every facet, we propose a certain taxonomy that introduces different possible classes distinguished according to different aspects of the problem. The classes are distinguished either with respect to different variants of the scheduling problem (e.g., multiple workflows, user-oriented scheduling), or with respect to the way the problem is approached (e.g., full-ahead planning, advance reservation based). We describe the classes, using the RDF <ref type="bibr" target="#b28">[29]</ref> notation subject-predicate-object, that we extend in some cases to distinguish between different sub-classes of the problem. The proposed taxonomies can by no means be considered exhaustive, as our attempt is to create a model only for a certain subset of the general workflow scheduling problem, i.e., for the multi-criteria workflow scheduling on the Grid. We illustrate the derived taxonomies by providing examples of approaches for different classes that partially come from the related work. Some of those examples are taken from a more complete analysis of the scheduling problem on the Grid presented by Dong and Akl <ref type="bibr" target="#b27">[28]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Taxonomy of workflow models</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Introduction</head><p>Workflows may vary with respect to their level of complexity, to the semantics of their components, and to the dynamics of their execution model. All these aspects should be taken into consideration when scheduling workflows, as the execution of a workflow which is based on a specific model may require a specific scheduling approach, or may simply perform better when such an approach is applied. For instance, there exist many scheduling algorithms dedicated for parameter sweep workflows, even though more general DAG scheduling algorithms would also work for this workflow model. The taxonomy depicted in Fig. <ref type="figure" target="#fig_0">1</ref> differentiates workflows with respect to their representation and behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Component model</head><p>In the literature <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b30">31]</ref>, a workflow model is usually described by applying four different perspectives: control-flow perspective, data perspective, resource perspective, and operational perspective. The control-flow (or process) perspective describes tasks and their execution ordering through different workflow constructors, such as sequence, choice, parallelism, and synchronization. The data perspective defines the flow of data between tasks in the workflow. The resource perspective defines the responsibilities of resources for executing tasks (i.e., scheduling of tasks). Finally, the operational perspective describes the elementary actions executed by tasks (i.e., task implementation). The workflow model defined by us applies the scheduling perspective. We combine some of the four aforementioned perspectives, and focus on tasks and data transfers which are atomic workflow components being subject to scheduling (i.e., ''schedulable units''). We distinguish two classes of workflow models:</p><p>• Task oriented. Tasks are represented as graph nodes. Data transfers or control preconditions are represented as graph edges.</p><p>• Task and data transfer oriented. Both tasks and data transfers are represented as graph nodes.</p><p>Business workflows often consider only the control-flow of the processes, while scientific IT workflows mostly imply data-flows together with the execution of tasks. As our main focus is on scientific IT workflows, we treat control workflows as a special case of task oriented workflows, where the edges just specify the flow of boolean tokens representing the pre-conditions of the controlflow.</p><p>The existing Grid workflow scheduling approaches are based predominantly on the task oriented model. There are only few workflow representations which support the task and data transfer oriented model (e.g., Karajan <ref type="bibr" target="#b31">[32]</ref> and Stork <ref type="bibr" target="#b32">[33]</ref>). In Vienna Grid Environment <ref type="bibr" target="#b7">[8]</ref>, the low level workflow representation denotes both tasks and data transfers as workflow nodes. However, in the high level representation used for requirement specification and scheduling, there are no separate nodes representing data transfers. The distributed query workflows considered by Gounaris et al. <ref type="bibr" target="#b33">[34]</ref> include also special workflow nodes called exchange operators that involve communication between other workflow nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Structure</head><p>Different workflow scheduling methods consider different workflow structures, varying with respect to their level of generality and designed for different specific domains. The most common workflow model is the Directed Acyclic Graph (DAG), where dependencies between workflow nodes can be organized in any way that does not cause any cycles in the graph to be created. Some existing works extend this model by allowing cycles (loops) and other workflow constructors, such as parallel loops and conditionals (if or switch). We will refer to these models as extended digraphs. Some other models are based on a simpler structure than the general DAG model, for instance, workflow applications based on a single parallel section, pipelined applications, or special tree-like structures used in certain application domains. We will distinguish the following three workflow models:</p><p>• DAG. The workflow is a Directed Acyclic Graph.</p><p>• Extended digraph. The workflow structure extends the DAG model, by allowing some additional structures, such as loops and conditionals. • Simplified DAG. The workflow structure has certain regularities, so it can be described by a well-defined subset of the DAG model.</p><p>Concerning the most common simplified DAG models that are encountered in the literature, we distinguish the following subclasses:</p><p>• Parallel section. The main computation is done in a single parallel section, where independent computations are distributed among multiple workers.</p><p>• Sequence. The workflow is a single sequence, for instance, a sequential pipelined application.</p><p>• Tree-like. The workflow graph is a tree.</p><p>• Other. Some other specific workflow structures such as Fast Fourier Transformation, Strassen algorithm, or fork-join DAGs.</p><p>In the Abstract Grid Workflow Language (AGWL) <ref type="bibr" target="#b14">[15]</ref> used in ASKALON <ref type="bibr" target="#b15">[16]</ref>, workflows are expressed by means of hierarchical embedded structures (loops, parallel loop, conditionals, etc.), which is appropriate for a broad range of scientific workflows. For scheduling purposes, the workflows expressed in AGWL are converted to the DAG model <ref type="bibr" target="#b34">[35]</ref>. The workflow representation used in the P-GRADE project <ref type="bibr" target="#b35">[36]</ref> is based on the general DAG model; this model can be extended by using some specific components called generator and collector, used to construct parameter study workflows. Other scheduling approaches that consider the general DAG model were presented, for instance, by Sakellariou and Zhao <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b37">38]</ref>, Tsiakkouri et al. <ref type="bibr" target="#b1">[2]</ref>, Mika et al. <ref type="bibr" target="#b38">[39]</ref>, and Yu et al. <ref type="bibr" target="#b2">[3]</ref>.</p><p>Many existing approaches are based on a specific workflow model. The most typical example of parallel section workflows are parameter sweeps, where all computations in the parallel section are of the same type, and each of them is executed for a different parameter value. The dynamic scheduling of parameter sweep applications considered by Ma and Buyya <ref type="bibr" target="#b39">[40]</ref> is approached by a special prioritization policy that gives higher priority to the tasks whose so-called children's ancestors have already been finished. Scheduling of parameter sweep application is addressed also in the Nimrod/G system <ref type="bibr" target="#b40">[41]</ref>. Casanova et al. <ref type="bibr" target="#b41">[42]</ref> compare several heuristics for dynamic scheduling of parameter sweep applications (Min-min, Max-min, Suffrage), and propose a new heuristic called XSuffrage. The work presented by Subhlok and Vondran <ref type="bibr" target="#b42">[43]</ref> considers a pipelined workflow model based on a sequence of data parallel tasks. The workflows used to model distributed database queries addressed by Gounaris et al. <ref type="bibr" target="#b33">[34]</ref> are based on a special tree-like structure, constructed according to certain restricted composition rules. The workflows considered in Pegasus <ref type="bibr" target="#b43">[44]</ref> also have a regular structure; the regular structure of these workflows was the motivation for introducing in Pegasus the idea of workflow partitioning that consists in converting the workflow to a sequence of subworkflows. Dynamic Data Mining workflows addressed by Luo et al. <ref type="bibr" target="#b44">[45,</ref><ref type="bibr" target="#b45">46]</ref> are also based on a specific structure, corresponding to the data mining process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.">Atomic structure dynamism</head><p>Apart from task mapping, also changing the basic workflow structure can be considered as a scheduling method. Workflow nodes (atomic workflow elements) can be added to or removed from a workflow, or can be grouped together to form new atomic elements, with the aim of increasing the profit of the user or of the Grid. We will say that an approach is designed for workflows with a tunable atomic structure, if it modifies the workflow structure (for optimization purposes) within the scheduling process, in contrast to the approaches that modify the workflow structure only as a consequence of a normal workflow execution (e.g., through loop unrolling or user interactions). We also impose an additional restriction on this group, by assuming that it contains only those approaches which add/remove/modify nodes, not those which just add/remove/modify dependencies. The reason for this is to exclude the approaches based on workflow clustering (i.e., on an auxiliary partition of the workflow to a set of non-atomic subworkflows), which is a standard scheduling approach. We introduce the following two workflow classes:</p><p>• Fixed. The atomic workflow structure is not changed during the scheduling process (some additional dependencies can be added or removed).</p><p>• Tunable. Atomic nodes can be added, removed, or modified during the scheduling process.</p><p>In K-WfGrid <ref type="bibr" target="#b13">[14]</ref>, workflows are created on demand and semantically tuned by the components called Workflow Composition Tool (WCT) <ref type="bibr" target="#b46">[47]</ref> and Automatic Application Builder (AAB) <ref type="bibr" target="#b47">[48]</ref> before the tasks are mapped to services. Also in Pegasus <ref type="bibr" target="#b43">[44]</ref>, workflows are first converted from an abstract to a concrete form. Three different restructuring techniques are involved in this process. First, data sets that are produced by workflows running in the Grid can be reused in the subsequent workflow executions, which makes the execution of some workflow tasks unnecessary. Second, the granularity of a workflow is increased by combining (clustering) several tasks and treating the result as a single unit for mapping and scheduling. The third restructuring technique consists in clustering together several tasks scheduled to multiprocessor systems, and running them together as one schedulable unit, possibly in a master/slave fashion. The last two approaches aim at decreasing the scheduling overheads. In the approaches designed for pipelined workflows (e.g., in the work by Subhlok and Vondran <ref type="bibr" target="#b42">[43]</ref>), tasks in the original sequence can be replicated (several instances of the same task may process different data sets in parallel) in order to increase the overall throughput.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.">Data processing</head><p>In this classification, we distinguish two different types of workflow processing that are addressed in different scheduling approaches. When considering the amount of data processed by an individual workflow, we can identify the following two workflow models:</p><p>• Single input. The workflow is executed once, for a single input that may consist of a single or multiple data elements.</p><p>• Pipelined. The workflow is executed many times, for multiple data inputs that are processed by the workflow as a stream.</p><p>Most of the existing Grid approaches address the first of the aforementioned classes. The second class is common in several application domains, including digital signal processing, image processing, and computer vision. The approach presented by Subhlok and Vondran <ref type="bibr" target="#b42">[43]</ref> addresses the problem of scheduling of pipelined computations with the goal of optimizing the latency and the throughput of execution. The applications consist of a sequence of data parallel tasks that can be mapped onto a parallel machine in a variety of ways, employing different combinations of task and data parallelism. Tian and Chandy <ref type="bibr" target="#b48">[49]</ref> analyze the problem of scheduling of pipelined (streaming) applications, and give several reasons why the classical scheduling algorithms are not well suited to the problem addressed by them. Although they define the problem for workflows, they provide only a solution for scheduling of single processing units. Very specific pipelined workflows used for data stream processing are considered by Schmidt <ref type="bibr" target="#b49">[50]</ref>. Pipelined workflows are also supported in the P-GRADE Grid environment <ref type="bibr" target="#b35">[36]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6.">Summary</head><p>We distinguished four different aspects of the workflow model, based on the structure and the behavior of the workflow. In the context of the related work, the classification based on component model does not seem to be of major relevance, as almost all scheduling approaches are based of the taskoriented model. However, the task and data oriented model may show some potential benefits, in particular in the systems focused on data transfer optimization. The classification based on workflow structure seems to be important, since many scheduling approaches have been dedicated for different workflow structures distinguished by us. Several scheduling approaches consider tunable workflow, however this class still shows some research potential. Finally, the classification based on data processing introduces two different problem classes that clearly need to be approached in different ways.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Taxonomy of scheduling criteria</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Introduction</head><p>The scheduling criteria may be characterized by various properties (e.g., workflow structure dependence, calculation method) that determine the optimization goal, and the way in which the total cost of a workflow is calculated for the given criterion. When scheduling workflows on the Grid, it is always important to take into consideration the type of criteria used as the optimization objectives in the given case. For instance, one scheduling algorithm will be applied when minimizing the execution time of a workflow, and another one will be applied when maximizing the quality of the results produced by a workflow. The scheduling criteria may also vary for different Grid actors (e.g., resource consumer, resource provider, environment) for whom the optimization goal is defined. The proposed taxonomy of scheduling criteria, considering both the properties of a single criterion and the joint properties of groups of criteria, is depicted in Fig. <ref type="figure" target="#fig_1">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Optimization model</head><p>Considering workflow scheduling as an optimization process, we can distinguish two different perspectives from which the criteria can be defined:</p><p>• Workflow-oriented. The optimization criterion is defined for the user who executes the workflow (e.g., execution time, economic cost).</p><p>• Grid-oriented. The optimization criterion is defined for the Grid, usually for Grid sites, Virtual Organizations, or resource providers (e.g., resource usage, fairness of execution, economic profit).</p><p>Most of the related work proposes approaches based on the former perspective. The latter perspective is common for local resource management systems (e.g., PBS [51], Grid Engine <ref type="bibr" target="#b50">[52]</ref>, LSF <ref type="bibr" target="#b51">[53]</ref>, Maui [54]), and is also applied for workflow scheduling, for instance, in the work by Zhao and Sakellariou <ref type="bibr" target="#b37">[38]</ref> where fairness of multiple workflow executions is considered as one of the optimization goals. Other Grid systems that consider Grid-oriented optimization include ASKALON <ref type="bibr" target="#b52">[55]</ref> (resource usage, fairness), UNICORE 6 / Chemomentum <ref type="bibr" target="#b53">[56]</ref> (statistical job turnaround time, resource usage), and Instant-Grid <ref type="bibr" target="#b54">[57]</ref> (a special resource quality metric). Grid-oriented scheduling criteria (different resource consumption metrics) are considered also in the work on data stream processing workflows presented by Schmidt <ref type="bibr" target="#b49">[50]</ref>. Dynamic cost models, based on Grid economy and on other negotiation-based strategies, that are described more in detail later in this section, can be used to equilibrate between the requirements of the resource consumer, the resource producer, and the Grid environment. Some research was done by Li and Yahyapour <ref type="bibr" target="#b55">[58]</ref><ref type="bibr" target="#b56">[59]</ref><ref type="bibr" target="#b57">[60]</ref> to compare the influence that different negotiation strategies have on resource utilization on the Grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Workflow structure dependence</head><p>Whereas a task batch consists of independent tasks, workflows also contain dependencies that determine a certain workflow structure. For some scheduling criteria (e.g., for execution time), the structure has to be considered when calculating the total cost, while for some others (e.g., for economic cost) the structure can be neglected. This leads us to two distinct classes of criteria:</p><p>• Structure dependent (e.g., execution time).</p><p>• Structure independent (e.g., economic cost). Most of the existing workflow scheduling approaches only optimize execution time that is a structure dependent criterion. Some multi-criteria workflow scheduling approaches (e.g., Tsiakkouri et al. <ref type="bibr" target="#b1">[2]</ref>, Yu and Buyya <ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref>, and Brandic et al. <ref type="bibr" target="#b7">[8]</ref>) also consider economic cost that is structure independent. Some other scheduling criteria can belong to either of the two classes, depending on the way the user defines them. Reliability (sometimes referred to as fault tolerance) is an example of structure independent criterion; in context of workflow scheduling, reliability was considered, for instance, by Doğan and Özgüner <ref type="bibr" target="#b5">[6]</ref>, and by Qin and Jiang <ref type="bibr" target="#b6">[7]</ref>.</p><p>Let us denote by data quality, any kind of qualitative description (for instance, expressed in percentage) of the results produced by alternative services (e.g., the quality will usually be higher for an expensive commercial application than for its open-source equivalent). The general aspect of data quality has been analyzed by Pipino et al. <ref type="bibr" target="#b58">[61]</ref>, where 16 different quality dimensions have been distinguished. Some other work focuses on more specific types of data quality. Data quality of data stream processing in tree-like workflows is the topic of the doctoral thesis presented by Schmidt <ref type="bibr" target="#b49">[50]</ref>; the doctoral thesis presented by Fleury <ref type="bibr" target="#b59">[62]</ref> is focused on data quality in image processing.</p><p>Within the class of structure dependent criteria, we can distinguish several sub-classes, depending on the way in which the partial costs are aggregated in the workflow. In the research focused on data quality, these different cost aggregation methods are sometimes referred to as data quality propagation models. The work presented by Ballou and Pazer <ref type="bibr" target="#b60">[63]</ref> proposes a general propagation model in multi-input multi-output information systems modeled as DAGs, based on four distinguished data quality dimensions: accuracy, timeliness, completeness, and consistency. Data quality is expressed there by means of errors that are propagated and altered according to the functions assigned to individual processing activities. The functions calculate the output error of the corresponding processing activity, based on the input data and on the characteristics of the activity. Other data quality propagation schemes are proposed by some more specific data-qualitybased scheduling approaches. In the simple tree-based workflow applications addressed by Schmidt <ref type="bibr" target="#b49">[50]</ref>, data quality is propagated according to the non-functional description of different types of operators. In the image processing workflows addressed by Fleury <ref type="bibr" target="#b59">[62]</ref>, data quality is propagated, based on prediction methods that use neural networks and polynomial approximations. In the current study, we apply a general cost aggregation model, based on the concept of aggregation functions.</p><p>Let us consider a common example of execution time calculation. In order to calculate the total execution time, we calculate the aggregated costs (execution times) for all tasks in a workflow, and use the maximum aggregated cost as the total cost (execution time) of the workflow. The calculation scheme for such a structure dependent criterion is depicted in Fig. <ref type="figure" target="#fig_2">3</ref>, where the aggregated cost for the task γ is calculated based on the partial cost of the task γ and on the aggregated costs of the tasks β i , 1 ≤ i ≤ n. The aggregated costs are calculated recursively, so the same scheme would also apply for the tasks β i , 1 ≤ i ≤ n. The aggregated cost function is a function that assigns to a workflow its aggregated cost.</p><p>In case of execution time, the aggregated costs of the predecessors are aggregated by taking the maximum cost among them. This type of aggregation function is called disjunctive function, as it simulates the logical OR operation and gives outputs no smaller than the largest argument. For some other criteria (e.g., for data quality), the aggregation function can calculate the mean (or weighted mean) over the arguments; such a function is called averaging function. When referring to any aggregation function, we will use the term aggregation operator. Many different aggregation operators are proposed in the literature <ref type="bibr" target="#b61">[64,</ref><ref type="bibr" target="#b62">65]</ref>. For our taxonomy, we chose four aggregation operators that seem to be most relevant from the point of view of workflow scheduling:</p><p>• Averaging. Averaging functions give outputs that lie between the greatest and the smallest element of the input (e.g., mean, weighted mean).</p><p>• Conjunctive. Conjunctive functions simulate the logical AND and give outputs no greater than the smallest element of the input (e.g., minimum).</p><p>• Disjunctive. Disjunctive functions simulate the logical OR and give outputs no smaller than the largest element of input (e.g., maximum). Example: execution time.</p><p>• Mixed. Mixed aggregation functions exhibit different behavior in different regions of the workflow (e.g., maximum for the end tasks, average for the other tasks).</p><p>This classification shows some similarities to the classification of calculation methods that is introduced later in this section. However, an aggregation operator can only be defined for a structure dependent criterion, and it applies only to a part of the cost calculation procedure (i.e., to the aggregation of the predecessor costs).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.">Optimization impact</head><p>Scheduling criteria may have different impact on the optimization process. If the goal of the process is to find the best possible cost for a certain criterion (e.g., to minimize the total cost), then we can say that the criterion has an optimization objective. If the optimization process is constrained by a constant limit imposed on a certain criterion (e.g., a budget limit or a deadline), then we can say that there is an optimization constraint assigned to the criterion. Obviously, there may exist a constraint (or multiple constraints) defined for a certain criterion that has an optimization objective. Therefore, the optimization impact of workflow scheduling criteria can be divided into two classes:</p><p>• Objective. An optimization goal to find the best possible cost for the given criterion (e.g., to minimize the execution time).</p><p>• Constraint. A restriction imposed on the results of an optimization process (e.g., a time deadline, a budget limit).</p><p>In most of the existing workflow scheduling approaches, there is an optimization objective defined for execution time (time minimization). A common way to deal with a multi-criteria scheduling <ref type="bibr" target="#b0">[1]</ref> is to define an optimization objective for one criterion, and to establish constraints for all the other criteria. The scheduling techniques presented by Yu and Buyya <ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref> and Tsiakkouri et al. <ref type="bibr" target="#b1">[2]</ref> apply this approach to the problem of bicriteria scheduling, by defining a constraint for one of the two scheduling criteria (either execution time or economic cost), and by minimizing the other one.</p><p>When considering a criterion for which an optimization objective is defined, we should also consider the optimization goal associated with the objective. For instance, when optimizing the execution time of a workflow, the goal is to minimize the total time. On the other hand, when optimizing data quality or when optimizing security or reliability of the execution, the goal is to maximize the total ''cost''. We can also imagine that the scheduling criterion is the ratio between the costs for two contradicting criteria (e.g., between the memory usage and the execution time). In such a case, the goal will be to obtain a total cost that is possibly close to a certain goal value (i.e., the optimization objective is focused on a certain goal cost). We will distinguish three different subclasses of scheduling objectives:</p><p>• Maximized. The optimization goal is to maximize the total cost (e.g., for quality of results).</p><p>• Minimized. The optimization goal is to minimize the total cost (e.g., for economic cost).</p><p>• Focused. The optimization goal is to achieve a certain total cost (e.g., for memory usage/execution time ratio). Some works (e.g., Brandic et al. <ref type="bibr" target="#b7">[8]</ref>) distinguish between global constraints and local constraints:</p><p>• Global constraint. A constraint defined for the whole workflow.</p><p>• Local constraint. A constraint defined for a single workflow task (e.g., an execution time limit for a single task imposed by the local resource manager).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.">Calculation method</head><p>Another classification can be done with respect to the operation used for cost calculation. For instance, addition is performed to combine the individual economic costs of tasks, when calculating the total workflow cost. The same operation is used to calculate the total execution time of a workflow, with the difference that the partial costs are added up taking into consideration also the structure of the workflow (see Fig. <ref type="figure" target="#fig_2">3</ref>). For many other criteria (e.g., data quality, probability of failure, availability rate, security) it is convenient to express costs as real numbers from the range [0, 1]. For these criteria, we usually multiply the partial costs of the workflow tasks to calculate the total cost of the workflow. To make the picture more complete, we also mention the class of concave criteria proposed by Xiao and Ni <ref type="bibr" target="#b63">[66]</ref>. The total cost of a concave criterion is equal to the minimal cost among all the individual costs (e.g., bandwidth in pipelined execution or in networks). Therefore, at least three important classes of criteria can be distinguished:</p><p>• Additive (e.g., economic cost, execution time).</p><p>• Multiplicative (e.g., data quality).</p><p>• Concave (e.g., bandwidth).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.">Cost model flexibility</head><p>A simple cost model assumes that the partial costs of services are a fixed input for scheduling and cannot be changed. This model is widely accepted in the Grid, so it is applied in most of the existing Grid workflow systems. However, there is an increasing interest in more adaptive flexible cost models, where the costs can be negotiated or established through some economy-based mechanisms before the application is executed. From this point of view, we distinguish the following two cost models for scheduling criteria:</p><p>• Fixed. The partial costs of services are given as a fixed input for scheduling.</p><p>• Adaptive. The partial costs of services are dynamically adjusted through certain mechanisms (e.g., auctions or negotiations). This classification is similar to the classification based on intradependence, that is introduced later in this section. The difference is that for the intradependent criteria costs are calculated internally by the scheduler, using some deterministic functions, while in case of the adaptive cost models discussed here, costs are either determined externally by a Grid broker or they result from negotiations between different actors of the Grid.</p><p>Adaptive pricing has been extensively studied in the past (although usually not in context of workflow scheduling), and different models have been proposed. An important class of such model originates from human economy, so the common name to refer to them is Grid economy. Other negotiationbased techniques are common for agent systems. The automatic negotiation techniques introduced in such systems are developed especially for computer environments, rather then originate from human economy. Therefore, we distinguish two following subclasses of the adaptive cost model:</p><p>• Grid economy. Service costs are determined by applying mechanisms originating from human economy (e.g., commodities market, auctions).</p><p>• Other negotiation-based models. Service costs are determined as a result of negotiations between different actors in the Grid (e.g., between the resource consumer and the resource manager), based on automatic negotiation models specific for computational environments.</p><p>Many Grid economy models have been reviewed and discussed by Buyya et al. <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b64">67,</ref><ref type="bibr" target="#b65">68]</ref>, and a Grid architecture realizing them has also been proposed. In the commodities market model, prices are established in a central way based on the current demand and supply rate, with the goal of achieving market equilibrium. In the tender/contract-net model, the consumer announces its requirements, and the service providers respond with their offers. Auction models support one-to-many negotiation between a service provider and many consumers. Different auction models (English auction, first-price auction, Vickrey auction, Dutch auction) are known in the literature. The other economic models mentioned by Buyya et al. <ref type="bibr" target="#b64">[67]</ref> include the posted price model, the bargaining model, the bid-based proportional resource sharing model, the community/coalition/bartering/share holders model, and the monopoly/oligarchy model.</p><p>The Grid economy models are usually applied to determine the economic cost of services or resources, where the cost can either represent real money or be applied just as a useful abstraction introduced, for instance, for the sake of a fair balance between the demands of different users of the Grid. Different types of resources are treated as individual and interchangeable commodities. The scheduling approach proposed by Tian and Chandy <ref type="bibr" target="#b48">[49]</ref> uses the commodities market model to determine the cost of resource usage in the context of non-workflow streaming applications. The approaches based on a single market and on multiple markets are compared in this work. Wolski et al. <ref type="bibr" target="#b66">[69]</ref> compare the economic model based on the commodities market with the one based on the second-price Vickrey auctions, claiming the superiority of the former approach in terms of the economic factors such as price stability, market equilibrium, consumer efficiency, and producer efficiency. The introduced market model called ''The First Bank of the G'' is an extension of the Scarf's algorithm known in economy. In the Nimrod/G system <ref type="bibr" target="#b40">[41]</ref>, the commodities market model is applied to support resource allocation for scheduling of parameter sweep applications. A real workflow scheduling approach based on an economic model is introduced by Chien et al. <ref type="bibr" target="#b67">[70]</ref>, where first-price auctions are applied. Workflows are scheduled in a fullahead manner, and scheduling is performed together with bidding for resources. The distance of an individual task from the end of the workflow (its bottom level) determines how urgent the task is; more urgent tasks are given higher prices during the auction, in order to increase the possibility of meeting the deadline defined for the workflow.</p><p>An extensive description of the problem of automatic negotiation is given by Jennings et al. <ref type="bibr" target="#b68">[71]</ref>. According to this work, a negotiation strategy can be described by the negotiation protocol, negotiation objects (objectives for which the negotiation is performed), and the decision making model (the negotiation strategy). Three groups of negotiation strategies are distinguished: the game theoretic techniques based on the extensively studied strategies known in game theory, the heuristics based on more intuitive techniques which lack solid theoretical grounds, and the argumentation-based techniques in which the negotiating parties can exchange between each other any kind of feedback rather than only simple counter-proposals. The work presented by Li and Yahyapour <ref type="bibr" target="#b55">[58]</ref><ref type="bibr" target="#b56">[59]</ref><ref type="bibr" target="#b57">[60]</ref> proposes non-workflow scheduling techniques using heuristic-based negotiation strategies. The heuristics are implemented through special utility functions that determine the behavior of the negotiating parties. For instance, some utility functions can make a negotiator ''tough'' (i.e., unwilling to change its initial proposals), while some other functions can make it ''conceding'' (i.e., apt to accept counter-proposal). The authors examine different scenarios in which job users and resource providers apply different negotiation strategies, comparing the ratio of agreements successfully created within a limited time, the achieved utility value, and the duration of the negotiation process.</p><p>The workflow scheduling approach for Distributed Data Mining workflows presented by Luo et al. <ref type="bibr" target="#b44">[45]</ref> employs sealed-bid auctions to gain information about the possible costs of executing workflows in the Grid. However, this technique is applied by the scheduler to get information truthfully declared by the external schedulers (i.e., no real negotiation takes place), which means that the cost model is not really adaptive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.7.">Intradependence</head><p>The notion of intradependence of scheduling criteria has a major impact on workflow scheduling. For some criteria, scheduling decisions made for some workflow tasks may change the costs of some other tasks. A good example of such a criterion is the economic cost in a special progressive price model. A common practice in the market is to introduce a dependence between the size of an order, and the price for an individual item (usually, the larger the order, the lower the price). If this is the case, then the scheduling decisions depend on one another within a scheduling criterion (i.e., are ''intradependent''). Also, for execution time, the scheduling decisions made for some tasks may influence the aggregated costs of some other tasks, because these tasks consume resources whose amount is limited. On the other hand, the scheduling decisions made for reliability, data quality, or the economic cost calculated in a simple price model do not seem to show any intradependence. From this point of view, we distinguish two classes of criteria:</p><p>• Intradependent (e.g., economic cost in a progressive price model, execution time).</p><p>• Non-intradependent (e.g., data quality, reliability, economic cost in a simple price model).</p><p>Workflow scheduling with respect to intradependent criteria is usually an NP-complete problem that cannot be optimally solved in an efficient way. On the other hand, a workflow schedule that is optimal with respect to a single non-intradependent criterion can usually be found in an efficient way by applying a greedy algorithm. Within the class of intradependent criteria -which is the most difficult one for scheduling -we can also distinguish two subclasses. For instance, in the aforementioned progressive price economic cost, decisions made for individual workflow tasks may influence the partial costs of some other tasks. For a change in case of execution time, a scheduling decision made for a workflow task does not usually change the execution times of other tasks, however it influences the way in which the aggregated costs are calculated. In this way, we can distinguish two types of intradependence:</p><p>• Partial cost related. The partial costs of workflow tasks are influenced by the scheduling decisions made for some other workflow tasks (e.g., economic cost in a progressive price model).</p><p>• Aggregated cost related. The aggregated costs of workflow tasks are influenced by the scheduling decisions made for some other workflow tasks (e.g., execution time).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.8.">Interdependence</head><p>When considering multiple scheduling criteria, we may observe that some of them strongly depend on others, while some others are mutually independent. For example, when optimizing the execution time of a workflow, also the availability and the reliability of services should be taken into consideration, as highly unstable resources on which a service is deployed may provide longer execution times than their more reliable counterparts. On the other hand, the economic cost of a service often does not have any influence on the execution time, so it can be considered irrelevant from the point of view of this criterion. This observation is of major importance for scheduling, since when considering a group of criteria where some criteria depend on some other ones, the multi-criteria optimization problem can often be reduced to the optimization of a single goal function. Therefore, when considering groups of criteria, we will distinguish the following two disjoint classes:</p><p>• Interdependent (e.g., execution time and availability).</p><p>• Non-interdependent (e.g., execution time and economic cost).</p><p>An interesting workflow scheduling problem that considers multiple interdependent criteria is presented by Luo et al. <ref type="bibr" target="#b44">[45]</ref>. The goal of the first scheduling phase (called external scheduling), is to minimize the cost for a special criterion called Estimate Task Response Time (ETRT). This cost for a task i executed in an ''IntraGrid'' (subgrid) j is calculated according to the formula:</p><formula xml:id="formula_1">ETRT i,j = RTRT i + Task_Data_Size i NTR k,j • AIC j</formula><p>where RTRT i is the requested task response time (an approximation of the execution time) of the task i, Task_Data_Size i is the data size of the task i, NTR k,j is the network transfer rate between two In-traGrids j and k, and AIC j is the average IntraGrid credibility (a measure of reliability) of the IntraGrid j. Another workflow scheduling approach based on the idea of interdependent criteria reduction was proposed in the Instant-Grid <ref type="bibr" target="#b54">[57]</ref>. The two criteria (number of CPUs and the last known load respective the last known number of waiting or running jobs in the corresponding queues) are used to calculate a special quality value for each resource, based on which the scheduler selects the most appropriate mapping for each workflow task (the Grid-oriented optimization perspective applied).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.9.">Summary</head><p>We presented a taxonomy of scheduling criteria, that shows seven different aspects with respect to which the criteria may differ from one another. This taxonomy seems to be of major importance from the point of view of the multi-criteria workflow scheduling problem. The two optimization models (workflow-oriented and Grid-oriented), represent two different optimization perspectives that are usually applied in two disjoint application areas: user-oriented scheduling, and Grid-oriented resource management, respectively. Objectives and constraints are two different ways in which the user may specify the requirements, and they should be used complementarily when defining a particular scheduling problem. Structure dependence and intradependence are two aspects which make the scheduling problem really challenging, and which are major obstacles to development of generic scheduling approaches. In particular, execution time is an example of a widely used scheduling criterion, which is both structure dependent and intradependent. Both the optimization goal of an objective and the cost calculation method are two aspects where different problem classes can be treated in a similar way, after applying some mathematical transformations between criteria from different classes (for example, after transforming maximized objectives to minimized objectives, or multiplicative criteria to additive criteria, see Section 11). However, few scheduling approaches apply such transformations. Adaptive cost models gained recently a lot of interest, however, they are only scarcely considered in the context of workflow scheduling. Finally, interdependence is an interesting technique, which allows to reduce the complexity of the multicriteria scheduling problem, and which has already been applied in several works.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Taxonomy of scheduling process</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.">Introduction</head><p>The workflow scheduling process can be performed in different ways, depending on the problem definition, on the optimization principles, and on the environment in which the workflows are executed. Scheduling should also be considered as a part of the whole workflow processing. For instance, the scheduling process will be different for different numbers of criteria, and it may also take advantage of the properties of the environment such as advance reservation of resources. In this section, we will show different aspects that may have a major impact on the workflow scheduling process, and distinguish different problem classes that are relevant from this point of view (see Fig. <ref type="figure" target="#fig_3">4</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">Criteria multiplicity</head><p>Criteria multiplicity is essential from the point of view of the current work. Multiple criteria make the scheduling process much more difficult, as they represent multiple and often contradicting optimization goals that require multi-objective scheduling techniques. From this point of view, the scheduling processes can be divided into two classes: • Single criterion. Optimization is done for one criterion only (usually, for execution time).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• Multiple criteria. The scheduler tries to optimize multiple scheduling criteria.</head><p>There exist several workflow scheduling approaches that consider more than one criterion (e.g., Tsiakkouri et al. <ref type="bibr" target="#b1">[2]</ref>, Yu and Buyya <ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref>, Subhlok and Vondran <ref type="bibr" target="#b42">[43]</ref>, Doğan and Özgüner <ref type="bibr" target="#b5">[6]</ref>, Qin and Jiang <ref type="bibr" target="#b6">[7]</ref>, Brandic et al. <ref type="bibr" target="#b7">[8]</ref>, and Singh et al. <ref type="bibr" target="#b69">[72]</ref>), and many of them consider the trade-off between execution time and economic cost. The scheduling approaches presented by Doğan and Özgüner <ref type="bibr" target="#b5">[6]</ref> and by Qin and Jiang <ref type="bibr" target="#b6">[7]</ref> address the tradeoff between execution time and reliability (data transfer time is considered in both studies). The work presented by Doğan and Özgüner <ref type="bibr" target="#b5">[6]</ref> introduces two scheduling algorithms; one of them is called Biobjective Dynamic Level Scheduling (BDLS) and is an extension of the classical Dynamic-Level Scheduling (DLS) algorithm <ref type="bibr" target="#b70">[73]</ref>, and the second one is called Biobjective Genetic Algorithm (BGA). The second of the aforementioned works <ref type="bibr" target="#b6">[7]</ref> is approaching the problem by task duplication, focusing mostly on the cases when some processors fail (other existing models usually assume that the processors are fault-free). A general bi-criteria scheduling algorithm called Dynamic Constraint Algorithm (DCA) <ref type="bibr" target="#b9">[10]</ref> has been implemented in the ASKALON Grid environment. The user requirements are specified in the DCA, using a so-called sliding constraint, the problem is modeled as a modification of the Multiple-Choice Knapsack Problem <ref type="bibr" target="#b71">[74]</ref>, and the algorithm applied is based on the concept of dynamic programming <ref type="bibr" target="#b72">[75]</ref>. Vienna Grid Environment <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> addresses multiple scheduling criteria (usually execution time and economic cost) by applying a general multi-criteria scheduling approach. An optimization technique based on integer programming <ref type="bibr" target="#b73">[76]</ref> is used to optimize a weighted goal function combining different criteria (Quality of Service parameters). In K-WfGrid <ref type="bibr" target="#b13">[14]</ref> a general multi-criteria scheduling approach is applied when workflows are initially scheduled based on user-defined criteria, by a semanticbased application builder called Automatic Application Builder (AAB) <ref type="bibr" target="#b47">[48]</ref>.</p><p>Some other criteria are the main focus for the Grid-oriented optimization (see Section 6.2) and for the pipelined workflows (see Section 5.5). In Instant Grid <ref type="bibr" target="#b54">[57]</ref>, a simple resource ranking based on the number of CPUs and the last known load is created dynamically in order to optimize the profit of the Grid. Subhlok and Vondran <ref type="bibr" target="#b42">[43]</ref> schedule pipelined workflows with respect to the throughput and the latency of workflow execution which are both execution time-related criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.">Workflow multiplicity</head><p>The optimization process performed by a workflow scheduler usually considers a single workflow only, but it can also attempt to optimize the execution of multiple workflows at a time, where these multiple workflows are independent (i.e., are not subworkflows of a single workflow). Therefore, we can distinguish the following two classes of workflow scheduling processes:</p><p>• Single workflow. The execution of a single workflow is optimized within a single scheduling process.</p><p>• Multiple workflows. The execution of multiple workflows can be optimized within a single scheduling process.</p><p>Only few existing scheduling approaches schedule more than one workflow at a time. Zhao and Sakellariou <ref type="bibr" target="#b37">[38]</ref> distinguish three different approaches to the problem, the first one based on a sequential scheduling of multiple graphs (DAGs), the second one that incorporates also backfilling to fill gaps in the schedule, and the third one based on an initial merging of multiple DAGs into a single DAG. The article concentrates on the third approach, and distinguishes four different merging schemes. It also proposes an approach to increase fairness of scheduling, by trying to equalize the slowdown of different DAGs being scheduled (the slowdown is defined as the difference in the expected execution time for the same DAG when scheduled together with other workflows and when scheduled alone). The work presented by Luo et al. <ref type="bibr" target="#b44">[45,</ref><ref type="bibr" target="#b45">46]</ref> focuses on scheduling of Distributed Data Mining (DDM) workflows with a regular structure, that are split in a preprocessing phase into a set of subworkflows. The subworkflows are scheduled independently in a highly decentralized agent-based environment, and so the scheduling problem addressed is referred to as dynamic scheduling for competitive DAGs, even though the ultimate scheduling objective is to minimize the execution time of a whole DDM workflow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.4.">Dynamism</head><p>Workflow scheduling is a process of preparing workflows for an actual execution. Therefore, scheduling and execution should be considered together, and the time relation between them may differ in different approaches. Deelman et al. <ref type="bibr" target="#b74">[77]</ref> distinguish three different types of workflow scheduling: full-plan-ahead, in-time local scheduling, and in-time global scheduling. The first approach is fully static, as it schedules the whole workflow before the actual execution starts. On the other extreme, the second approach can be considered as dynamic, as tasks are scheduled dynamically only when they are ready for execution. The in-time local scheduling can be considered as the approach that better suits the dynamic nature of the Grid. On the other hand, the full-plan-ahead approach enables a deeper analysis of the whole workflow structure, which may bring some benefits in terms of scheduling accuracy. The in-time global scheduling combines the two former approaches by performing full-ahead planning every time a new scheduling decision needs to be made (for instance, when some resources go down). We modified this classification by extending the category of in-time global scheduling to all hybrid approaches that combine the fully static and the fully dynamic approach, and by omitting the ambiguous words ''local'' and ''global''. We distinguish the following three classes of scheduling processes:</p><p>• Just-in-time scheduling. The scheduling decision for an individual task is postponed as long as possible, and performed before the task is ready to start (fully dynamic approach).</p><p>• Full-ahead planning. The whole workflow is scheduled before its execution starts (fully static approach).</p><p>• Hybrid. The scheduling approach combines the two aforementioned approaches.</p><p>Simple scheduling heuristics such as Min-min, Max-min, Suffrage, and XSuffrage are usually applied to make just-in-time scheduling, for example to schedule parameter sweep workflows on the Grid <ref type="bibr" target="#b41">[42]</ref>. Typical approaches which fall into the second class are presented, for instance, by Topcuouglu et al. (HEFT) <ref type="bibr" target="#b75">[78]</ref>, Sakellariou et al. <ref type="bibr" target="#b36">[37]</ref>, Sih and Lee (DLS) <ref type="bibr" target="#b70">[73]</ref>, and Yu and Buyya <ref type="bibr" target="#b3">[4]</ref>. Jugravu and Fahringer <ref type="bibr" target="#b76">[79]</ref> applied Min-min and Max-min in a full-ahead manner (and also applied the HEFT algorithm) to schedule workflows in a Grid system called JavaSymphony. In Vienna Grid Environment <ref type="bibr" target="#b7">[8]</ref>, both a full-ahead scheduling approach and a just-in-time scheduling approach are applied (referred to as static planning and dynamic planning, respectively). Static planning can be applied only if the meta data for performance prediction is known in advance. The hybrid approach proposed in Pegasus <ref type="bibr" target="#b43">[44]</ref> combines the just-in-time scheduling and the full-ahead planning by partitioning the workflow into subworkflows and by performing full-graph scheduling of the individual subworkflows in a just-in-time manner. Nimrod/G <ref type="bibr" target="#b40">[41]</ref> extends static planning by adaptive resource allocation based on dynamic resource discovery, and by applying rescheduling when the scheduled tasks fail to start execution. Another hybrid approach, presented by Yu and Shi <ref type="bibr" target="#b77">[80]</ref>, achieves the same goal by triggering rescheduling when the state of the Grid changes (i.e., when some resources appear or disappear). Rescheduling of applications is the most widely used method to make full-ahead planning more dynamic. To trigger rescheduling of an application, certain acceptance criteria defined for the application execution are required, as well as a monitoring system to control the fulfillment of these criteria. An example of such acceptance criteria are the performance contracts proposed by Vraalsen et al. <ref type="bibr" target="#b78">[81]</ref>, that define the expectation concerning the execution time of the applications, and that are applied in the GrADS system <ref type="bibr" target="#b79">[82,</ref><ref type="bibr" target="#b80">83]</ref>. The work presented by Luo et al. <ref type="bibr" target="#b44">[45,</ref><ref type="bibr" target="#b45">46]</ref> considers workflow scheduling in large Grid environments (referred to as IntraGrids) that consist of multiple InterGrids; an approach called ''task migration'' is applied to dynamically reschedule jobs between different IntraGrids, if the decisions made in the initial ''external scheduling'' appear not to be optimal. This approach should not be confused with the notion of task migration introduced later in Section 9.3, as in the aforementioned approach only the jobs that have not started yet can be migrated (i.e., this approach can be described as rescheduling rather than task migration).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.5.">Advance reservation</head><p>When scheduling a workflow, we should take into consideration the environment where the workflow will be executed. Most of the Grid environments are based on local resource managements with standard queuing systems that can give only a guarantee that a task submitted to the Grid will be executed sometime (starvation-free property). Many of the systems (e.g., Pegasus <ref type="bibr" target="#b43">[44]</ref>) process workflows by simply sending workflow tasks in an established order to local queuing systems. This simple model can be extended by applying advance reservation, that is a limited or restricted delegation of a particular resource capability over a certain time interval to a certain user. If an environment supports advance reservation, then the user can know in advance when a task may start, not relying on the best-effort policy of the local queuing system. Therefore, we can distinguish the following two types of scheduling:</p><p>• With reservation. Advance reservation is supported and considered by the scheduler.</p><p>• Without reservation. Advance reservation is not considered by the scheduler or not supported by the environment.</p><p>Different advance reservation models for Grid workflow scheduling are proposed by Singh et al. <ref type="bibr" target="#b69">[72]</ref>, Wieczorek et al. <ref type="bibr" target="#b52">[55]</ref>, and Zhao and Sakellariou <ref type="bibr" target="#b81">[84]</ref>. Singh et al. <ref type="bibr" target="#b69">[72]</ref> propose different algorithms for resource provisioning, which reserve time slots on resources based on the economic cost and the execution time criteria. The approach implemented in ASKALON <ref type="bibr" target="#b52">[55]</ref> proposes workflow scheduling based on so-called progressive reservation. The introduced approach optimizes the profit both of the user (minimal execution time) and of the environment (best possible resource usage and fairness), by imposing some limitations on the amount of resources reserved for a single user at a time, and shows some advantage over the approach based on simple attentive reservations that do not impose any fairness policy. Zhao and Sakellariou <ref type="bibr" target="#b81">[84]</ref> propose an advance reservation model based on the concept of Application Spare Time. The spare time is assigned to every workflow task based on the deadline defined by the user for the whole workflow, in order to guarantee the feasibility of the workflow execution when the actual task execution times differ to a certain extent from the predicted times. Two different approaches for spare time allocation are proposed: recursive allocation and critical-path-based allocation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.6.">Summary</head><p>We distinguished four aspects of the scheduling process, based on the variants of the problem (single-/multiple-criteria scheduling, single-/multiple-workflow scheduling), on the scheduling principles (static/dynamic scheduling), and on the special features of the Grid environment (advance reservations). We can see that there are many approaches dedicated to the problem of multicriteria scheduling, although there is still a lot to be done in this area. For instance, only few approaches are designed for a generic model of criteria. Only few works tackle the problem of multiworkflow scheduling; however, one may argue that decentralized scheduling approaches that deal with only one workflow at a time are more appropriate for the Grid than real multi-workflow approaches. Concerning the dynamism of scheduling process, we can see that there are both many fully dynamic and many fully static approaches, although most of the recent work tends towards more hybrid approaches. Finally, advance reservation in context of workflow scheduling is still a challenge that should be explored in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Taxonomy of Grid resources</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.">Introduction</head><p>Characteristics of the resources on which tasks are executed are especially important from the point of view of performanceoriented scheduling, in which the scheduling goal is to optimize the amount of useful work compared with the time and resources used (usually, the execution time or the job throughput optimization). The scheduler has to take into consideration the type of resources used for execution, and also the way in which the resources handle the execution of tasks. Note that when referring to task execution, we do not only mean purely computational tasks, but also tasks that perform other types of activity, such as database access or invocation of external services. The proposed taxonomy of Grid resources from the point of view of workflow scheduling is shown in Fig. <ref type="figure" target="#fig_4">5</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">Diversity</head><p>One of the main characteristics of the Grid resources is their heterogeneity. Therefore, most of the existing Grid environments belong to the second of the following two classes:</p><p>• Homogeneous. Multiple resources have identical static and dynamic characteristics (i.e., same type, same performance, same load, etc.).</p><p>• Heterogeneous. Multiple resources have diverse characteristics (i.e., different type, different performance, different load, etc.).</p><p>Heterogeneity can be understood as the existence of diverse characteristics (e.g., processor speed, memory size) within a group of resources of the same type (e.g., computational resources). At the extreme, we can take into consideration even the dynamic resource characteristics, and also call the identical resources with different CPU loads or different amounts of free memory heterogeneous. On the other hand, heterogeneity can be considered only as the distinction between different resource types (e.g., computational resources, network resources, storage resources). We will distinguish two types of heterogeneity:</p><p>• Single type. Resources of the same type (e.g., computational resources) differ with respect to their characteristics (e.g., CPU speed, RAM size).</p><p>• Multiple types. Resources differ with respect to their types (e.g., computational, storage, network).</p><p>The existing workflow scheduling approaches we are aware of are focused on the single type heterogeneity, and consider only computational resources. However, the description of computational resources includes sometimes <ref type="bibr" target="#b33">[34]</ref> also characteristics of some other types of resources network bandwidth, storage size).</p><p>Much effort has been put into addressing multiple types of resources on the Grid. Stork <ref type="bibr" target="#b32">[33]</ref> aims at ''making data placement a first class citizen in the Grid'', by handling data transfers tasks in a similar way as computational tasks. The concept of Open Grid Service Architecture (OGSA) <ref type="bibr" target="#b82">[85]</ref> has been introduced to describe the Grid as a service-oriented environment where heterogeneous resources are treated in a uniform way as so-called Grid Services. The MetaScheduling-Service (MSS) <ref type="bibr" target="#b83">[86]</ref> developed within the VIOLA project aims at co-allocation of different types of resources (currently, computational and network resources) in multiple administrative domains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3.">Task execution</head><p>Computational resources can be divided into two categories, according to the way they can be used by multiple tasks:</p><p>• Non-multiprogrammed. The scheduler can schedule, at most, a single task at a time to a single computational resource.</p><p>• Multiprogrammed. The scheduler can schedule multiple tasks at a time to a single computational resource. The computational resources from these two classes are sometimes referred to also as disjunctive and cumulative, respectively <ref type="bibr" target="#b84">[87]</ref>. Most of the existing Grid environments consist of parallel machines being managed by local resource managers that allow only for disjunctive access to the resources (external load on the resources can always be the case). Therefore, all the Grid workflow scheduling approaches that we are aware of address the nonmultiprogrammed resource model. Rodriguez Moreno et al. <ref type="bibr" target="#b85">[88]</ref> propose a scheduler called O-OSKAR that schedules workflows of general (not necessarily computational) activities to multiprogrammed resources. The problem is approached as a Meta-CSP (Meta-Constraint Satisfaction Problem), and solved using an algorithm called ISES <ref type="bibr" target="#b86">[89]</ref>. The project called SCOJO <ref type="bibr" target="#b87">[90]</ref> aims at exploring the benefits coming from the execution of tasks in the multiprogrammed resource model, however workflows are not covered by this work. Instant-Grid <ref type="bibr" target="#b54">[57]</ref> supports multiprogrammed resources for local resource managers based on fork, such as interactive Globus Toolkit nodes. The maximum number of tasks on one resource is determined on basis of the current CPU load.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.4.">Summary</head><p>We distinguished two aspects of Grid resources that can be meaningful from the point of view of Grid scheduling. Heterogeneity of resources is one of the most important characteristics of the Grid, and so heterogeneous resources are considered in almost all existing Grid scheduling studies. The classification based on task execution model distinguishes between two alternative execution approaches, one of which (non-multiprogrammed) is by far more widely present in the existing research. The multiprogrammed task execution model is an interesting topic for the further research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">Taxonomy of workflow tasks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.">Introduction</head><p>Workflow tasks may differ with respect to their requirements and characteristics, that have to be taken into consideration when scheduling a workflow. The classical model, in which a task has fixed resource requirements and should be scheduled, started, and executed without interruption is often extended by allowing more ''elastic'' scheduling and execution. For instance, scheduling of moldable MPI tasks is often considered as a separate research area that requires different approaches than in the case of standard rigid tasks. The proposed taxonomy of tasks is depicted in Fig. <ref type="figure" target="#fig_5">6</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.">Resource mapping</head><p>In a similar way as a single resource can be used by multiple tasks at a time (see <ref type="bibr">Section 8.3)</ref>, also a single task may require multiple resources to be used (e.g., parallel MPI and OpenMP programs). Based on the classification proposed by Feitelson and Rudolph <ref type="bibr" target="#b88">[91]</ref>, we distinguish three classes of task, with respect to their resource mapping requirements: • Rigid. A task uses a fixed number of resources (usually, one resource).</p><p>• Moldable. A task may use a variable number of Grid resources, and this number is not known a priori but determined before the execution starts.</p><p>• Malleable. A task may use a variable number of Grid resources which may be added or withdrawn according to the task requirements and to the current system state.</p><p>Feitelson and Rudolph distinguish also a fourth class of evolving tasks. The difference between evolving and malleable tasks is that for the former the number of resources assigned to a task is determined by different requirements of the task at different execution stages, while for the latter, this number is determined arbitrarily by the scheduler. As we did not find this distinction either relevant or common in the existing research on workflow scheduling, we decided to merge these two classes to one class of malleable tasks.</p><p>Most of the existing workflow scheduling approaches assume that tasks belong to the first of the aforementioned classes. The other two classes are much more difficult for scheduling, as a new dimension is added to the task allocation problem. Many of the existing algorithms for moldable and malleable tasks proceed in two steps <ref type="bibr" target="#b89">[92]</ref>: the first step aims at finding an optimal allocation for each task, and the second step determines the placement for the allocated tasks, that is the actual processor set to execute each task that minimizes the total completion time. Mixed task and data parallel application are considered often as cases of moldable and malleable tasks (e.g., Radulescu et al. <ref type="bibr" target="#b90">[93]</ref>, N'Takpé and Suter <ref type="bibr" target="#b89">[92]</ref>, Casanova et al. <ref type="bibr" target="#b91">[94]</ref>, Subhlok and Vondran <ref type="bibr" target="#b42">[43]</ref>, and Gounaris et al. <ref type="bibr" target="#b33">[34]</ref>). The work by Aida and Casanova <ref type="bibr" target="#b92">[95]</ref> addresses the problem of scheduling of such applications with advance reservation.</p><p>A typical algorithm that deals with the problem of workflow scheduling of moldable tasks in homogeneous environments is the Critical Path and Area-based algorithm (CPA) <ref type="bibr" target="#b90">[93]</ref>. This algorithm aims at finding the best compromise between the length of the critical path and the average area that measures the mean processor-time area required by the application. N'Takpé and Suter <ref type="bibr" target="#b89">[92]</ref> extend the CPA by proposing the Heterogeneous Critical Path and Area-based algorithm (HCPA) designed for heterogeneous environments. To adapt the algorithms to the heterogeneous environments, the following two modifications are introduced: (i) a novel ''virtual'' cluster methodology for handling platform heterogeneity is applied in the allocation step; (ii) a novel task placement step is introduced to determine whether the placement step of heuristics for homogeneous platforms is adapted to the heterogeneous case.</p><p>Another approach to the problem of scheduling of moldable tasks in workflows is proposed by Casanova et al. <ref type="bibr" target="#b91">[94]</ref>. The authors show a way in which a typical list scheduling algorithm for heterogeneous environment can be adjusted for moldable tasks. The authors propose a new M-HEFT algorithm that extends the Heterogeneous Earliest Finish Time (HEFT) algorithm <ref type="bibr" target="#b75">[78]</ref> with respect to the way in which the cost values (expected execution times) for different tasks are calculated. The cost values are used in the algorithm to determine the scheduling order, and to find the best mapping for each task. Since a single task may use different numbers of CPUs of a compound Grid site, the values are estimated for different configurations of different Grid sites (e.g., for different numbers of CPUs of a cluster). In the simplest version of the proposed algorithm (called M-HEFT1), the cost values are estimated for a 1-processor configuration of each site. Gounaris et al. <ref type="bibr" target="#b33">[34]</ref> address the problem of distributed database query scheduling on the Grid. The authors enumerate three common approaches to the problem based on three different kinds of parallelism: independent, pipelined, and partitioned (or intra-operator). In context of the taxonomies proposed by us, the first type of parallelism assumes that all tasks are rigid, the second type is related to the pipelined workflows (see Section 5.5), and the third type, that is addressed in the proposed approach, assumes that all tasks are moldable. Distributed queries in the problem under consideration are defined as tree-like DAGs consisting of different basic tasks (operators), that are originally described as single-node plans (where ''node'' refers to a computational node), and that are subsequently converted to multi-node plans (where individual operators can be mapped to multiple computational nodes) by the proposed algorithm. The parallelization of singlenode plans is done by incrementally increasing the number of computational nodes mapped to the costliest (i.e., most time consuming) parallelizable operators.</p><p>The problem of scheduling of malleable tasks in a parallel environment is addressed by Błażewicz et al. <ref type="bibr" target="#b93">[96]</ref>. The authors provide a theoretical analysis of the problem of scheduling of independent tasks, and propose a scheduling algorithm that solves the problem in linear time when all the processing speed functions are convex, and in polynomial time when the speed functions are concave.</p><p>The GrADS project <ref type="bibr" target="#b80">[83]</ref> applies a dynamic performance tuning of malleable tasks, by applying so-called MPI Swapping. In this approach, the resources are grouped into two sets, the active set and the inactive set, where only the first set contains resources which can be used by applications. During the execution, the resources are systematically moved between the sets, depending on the current performance measurements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.">Migration</head><p>Dynamic scheduling can be implemented more effectively in environments where preemption and migration are enabled. With respect to these properties, we will distinguish two classes of tasks:</p><p>• Migrative. Task execution can be checkpointed at a certain resource, preempted, migrated, and resumed on another resource (assuming that the operating systems on the resources support migration).</p><p>• Non-migrative. Task migration is not supported.</p><p>Task migration is rarely applied in the real Grid, due to wellknown problems with the implementation of reliable and effective task checkpointing. All existing implementations are restricted only to specific platforms, and impose strict prerequisites on the tasks that can be migrated <ref type="bibr" target="#b94">[97]</ref>. Some performance study on blocking and non-blocking coordinated checkpointing approaches for MPI applications, also in the context of Grid systems, was presented by Buntinas et al. <ref type="bibr" target="#b95">[98]</ref>. In this work, it was shown that the blocking checkpointing approach gives the best performance in high-speed networks, while the non-blocking approach seems to work more efficiently in clusters of workstations and computational Grids, due to the high cost of network synchronization to produce the checkpointing wave of the blocking protocol in such environments. The only Grid workflow system we are aware of that supports task migration is GrADS <ref type="bibr" target="#b80">[83]</ref>. Also the INFN/CNAF Workflow Management System <ref type="bibr" target="#b96">[99]</ref> claims to target task migration, however, this system is still in a development stage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.4.">Summary</head><p>We presented a taxonomy of workflow tasks, showing two aspects that are significant from the point of view of Grid scheduling: resource mapping and migration. In the classification based on resource mapping, we can see that most of the existing scheduling approaches focus on the rigid task model; two other models (in particular, malleable tasks) are considered much less frequently, although they are also very common in the Grid. Task migration still remains as a future work for Grid scheduling, mostly due to the existing implementation problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">Survey and analysis of existing scheduling approaches</head><p>In Tables 1-4 we summarize different theoretical approaches and distributed environments that deal with workflow scheduling, and classify them with respect to the taxonomies introduced in Sections 5-9. For the sake of presentation clarity, we decided to present the analysis in the following way. Firstly, we divided all the related works into two categories:</p><p>(1) Theoretical approaches and special-purpose distributed systems (Table <ref type="table">1</ref>-2); (2) General-purpose Grid systems (Table <ref type="table" target="#tab_1">3</ref>-4).</p><p>The reason for making such a distinction was to differentiate between specific methods that are more research-oriented, and usually focused on a certain class of problems, and the approaches that aim to provide complete and general solutions to the scientific and business community. From our own experience with the K-WfGrid <ref type="bibr" target="#b13">[14]</ref> and ASKALON <ref type="bibr" target="#b15">[16]</ref> projects, we think that this distinction is important, as we recognize the specific characteristics of such systems: all the scientific effort is conformed to a superior goal of having a functional system, which persuades researchers to lean towards less theoretical and more generic and pragmatic solutions. Another decision made by us, was to apply in our survey a simplified scheduling criteria taxonomy and classify the scheduling approaches with respect to the concrete scheduling criteria that are most common in the related work. Finally, in several cases we grouped multiple approaches into a single table row when the approaches were proposed by the same authors and were logically related (e.g., they were direct follow-ups, or were developed within the same project).</p><p>Tables <ref type="table">1</ref> and<ref type="table" target="#tab_1">3</ref> classify the characteristics of the aforementioned groups of approaches, and Tables <ref type="table" target="#tab_0">2</ref> and<ref type="table" target="#tab_2">4</ref> summarize the Tables <ref type="table">1</ref> and<ref type="table" target="#tab_1">3</ref>, respectively, by showing for each pair of problem classes how many times the given combination was addressed among the classified approaches. Note that by grouping together different approaches in one row in Tables <ref type="table">1</ref> and<ref type="table" target="#tab_1">3</ref> we also cumulate the problem classes addressed, which is shown in Tables <ref type="table" target="#tab_0">2</ref> and<ref type="table" target="#tab_2">4</ref>.</p><p>As we can see in these tables, almost all the studies considered by us use the task and data-oriented workflow model, which means that this model is commonly considered to be most appropriate to represent workflows. We are not aware of any theoretical approach that addresses a more complex workflow model than the general DAG. The existing systems that are based on an extended digraph model (for example ASKALON <ref type="bibr" target="#b15">[16]</ref>, and K-WfGrid <ref type="bibr" target="#b13">[14]</ref>) usually use standard DAG scheduling algorithms, for instance by applying some kind of workflow conversion before scheduling the workflow.</p><p>We encounter only few approaches that address pipelined workflows, and none of them considers the scheduling criteria such as economic cost or reliability. This could also mean some potential for research, however, we realize that the pipelined workflow model is not very common and its usage is restricted to some specific problem domains only (e.g., multimedia or signal processing).</p><p>Execution time is the most common scheduling criterion that is considered in all the scheduling approaches under consideration. Concerning other specific criteria (economic cost, reliability, data quality), they are scarcely considered by theoretic work and specific systems. The general-purpose Grid systems are more apt to apply a generic criteria model, for instance, the bi-criteria scheduling applied in ASKALON <ref type="bibr" target="#b9">[10]</ref>, the semantic application builder of K-WfGrid <ref type="bibr" target="#b47">[48]</ref>, and the linear optimization model of VGE <ref type="bibr" target="#b7">[8]</ref>.</p><p>There are few scheduling approaches dedicated for multiple workflows, in particular, we are not aware of any such approach that addresses economic cost and data quality. However, multiple workflows can often be modeled as a single disconnected workflow, and the multi-workflow scheduling problem seems to be of higher importance for Grid-oriented optimization (e.g., fairness and resource usage in a multi-user environment).</p><p>We have found no approaches that consider full-ahead or hybrid scheduling for data quality, and also no purely theoretical work that considers a generic criteria model. In our opinion, the generic approaches proposed, for instance, in ASKALON <ref type="bibr" target="#b9">[10]</ref> and VGE <ref type="bibr" target="#b7">[8]</ref> and the existing specific bi-criteria scheduling approaches can be used as a basis for a more profound theoretical analysis of the general multi-criteria scheduling problem. The lack of justin-time scheduling techniques that address economy cost and reliability is probably caused by the fact that in order to make optimization for these criteria, a more detailed full-graph analysis is required.</p><p>There are not many approaches that consider advance reservation, in particular for moldable or malleable tasks. We are only aware of the work of Aida and Casanova <ref type="bibr" target="#b92">[95]</ref> that addresses the problem of scheduling of moldable mixed-parallel applications with advance reservation. Grid-oriented scheduling approaches are more common in general-purpose Grid environments; in fact, they seem to be a common requirement for any such environment. We have found no Grid-oriented approaches that consider tunable workflows. Workflow tuning seems to be a good technique to decrease Grid load, for instance, by eliminating the redundant workflow nodes, as proposed, for instance, in Pegasus <ref type="bibr" target="#b43">[44]</ref>.</p><p>There is a definite shortage of workflow scheduling approaches based on adaptive cost models (e.g., based on Grid economy techniques), which means that more research is still needed in this area. A similar situation is with the approaches based on the multiprogrammed resource model; the experience with the systems like SCOJO <ref type="bibr" target="#b87">[90]</ref> shows some research potential related with the scheduling techniques based on such a resource model.</p><p>Finally, an unexplored area is scheduling of workflows based on the malleable task model, as well as those based on the moldable task model in combination with most of the scheduling criteria under consideration (reliability, data quality, economic cost). Task migration is barely touched in the existing workflow scheduling research, probably because of implementation and portability problems.</p><p>In our opinion, the scientific effort towards a generic multicriteria workflow scheduling approach should focus mostly on the workflow-oriented criteria, leaving the responsibility for Grid-oriented optimization to the Grid environment. This would result in a flexible layered system architecture, that could be Table <ref type="table">1</ref> Survey of theoretical workflow scheduling approaches and specialized systems easily extended by the user. Advance reservation, Service Level Agreements, and Grid economy techniques can be applied to implement such an environment. We believe that the taxonomy of scheduling criteria introduced by us will facilitate the development of scheduling approaches that cover a possibly broad range of workflow-oriented scheduling criteria. The case with multiple workflows does not seem to be relevant in the aforementioned Grid model, as the workflows submitted by a single user can be treated as a single disconnected workflow, and all the issues related with a fair execution of multiple workflows submitted by multiple users can be addressed by the environment, by applying some fairness policy. The existing scheduling approaches make a clear distinction between the rigid and the moldable and malleable tasks; a real challenge would be to develop a scheduling strategy that can cover in an efficient way all these classes at the same time. A generic scheduling approach should be based on a general DAG model, although there will always exist some specific application domains, where a more specific workflow model would be more appropriate (e.g., signal processing pipelined workflows). We believe that pipelined workflows form a separate class that requires different scheduling approaches than single input workflows. Finally, we think that a hybrid scheduling model is the most appropriate for multi-criteria workflow scheduling in a dynamic and heterogeneous Grid environment. Just-in-time models can be really successful when optimizing execution time, and full-ahead scheduling would work best for the other criteria; assuming the dynamic and unpredictable nature of the Grid, a solution that combines the advantages of these two models would provide best expected results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">Case study: Dynamic constraint algorithm</head><p>An example of a work inspired by the introduced taxonomies is the scheduling approach based on a generic bi-criteria (bi-objective) scheduling algorithm called Dynamic Constraint Algorithm (DCA) <ref type="bibr" target="#b9">[10]</ref>, developed by us in the ASKALON Grid environment. The development of this approach was preceded by a meticulous study of the taxonomy of scheduling criteria. We focused on the workflow-oriented criteria. As input, the user has to specify which criterion should be the preliminary criterion, and which one should be the secondary criterion. The goal of DCA is to find a full-graph workflow schedule with the ''best'' possible secondary criterion cost and with the primary criterion cost that is not ''worse'' than the estimated best possible cost by more than a certain sliding constraint which is a value chosen by the user. In the preliminary scheduling phase, the algorithm tries to find the schedule that is optimal for the preliminary criterion only (preliminary schedule). In the secondary scheduling phase, the algorithm is traversing the search space delimited by the sliding constraint by applying different modifications to the intermediate schedules that are kept in a special table (at the beginning, the table contains only the preliminary solution). The best solution found by the secondary scheduling is the final schedule. The computational cost of DCA is strongly dependent on careful selection of the intermediate solutions to be stored in the table, as a proper selection may considerably delimit the search space to be traversed. The optimization problem addressed in the secondary scheduling is modeled as a modification of the Multiple-Choice Knapsack Problem <ref type="bibr" target="#b71">[74]</ref>, and the algorithm applied is based on the concept of dynamic programming <ref type="bibr" target="#b72">[75]</ref>.</p><p>We figured out that in order to be able to adjust the approach for different criteria (objectives), we have to customize two operations performed by the algorithm: (1) calculation of the total workflow cost, and (2) evaluation of the cost for a criterion. The evaluation of the criterion cost means that for any criterion it should be possible to say which one of any two schedules is ''better'' and which one is ''worse'' (also, which schedule is the ''best'' one in a set). First, we decided to consider scheduling objectives with different optimization impacts. The information whether the given objective is minimized or maximized is a part of the definition of any objective, and is taken into consideration whenever two different schedules are compared with respect to this particular objective. In a similar way, the focused objectives can also be supported. Second, we decided to consider two calculation methods: additive and multiplicative. We implemented the cost calculation and schedule evaluation techniques customized for the additive criteria; if the given criterion is multiplicative, then we first transform the cost c of each service to its natural logarithm (c → ln(c)). After this transformation, the criterion can be treated as an additive criterion, which is a consequence of the well-known mathematical formula:  Third, we decided to consider both structure dependent and structure independent criteria. When calculating the total cost for a structure dependent criterion, we have to take into consideration the workflow structure and also the aggregation operator characterizing the given criterion. The evaluation of any structure dependent criterion is particularly difficult to perform, as two intermediate schedules may often have the same total cost with respect to this criterion, while one of them may in the optimization process lead to potentially better schedules (it means, one of the solutions dominates the other one). By storing too many solutions in the table that are dominated, we may risk an excessively long scheduling time. We developed a special schedule comparison method based on the concept of scheduling wavefront <ref type="bibr" target="#b9">[10]</ref>, which is able to filter out dominated solutions unless the criterion is non-intradependent. Finally, we considered also a special case of intradependent criterion which is execution time. Intradependence is the factor that may have a major impact on the scheduling model, as the number of possible intradependence schemes is potentially unlimited. For example, the resource provider may introduce any arbitrary pricing model for resources, based on some quantitative discounts. For execution time, we customized the total cost calculation method, by taking into consideration the limited number of resources, but we did not change the criterion evaluation method. We proved by experiment, that our approach is able to produce good results also in case of the execution time-based scheduling. Concerning the other classes of criteria, we decided to limit our approach to workflow oriented criteria with a fixed cost model, and we did not consider interdependence of criteria.</p><p>In the experimental study <ref type="bibr" target="#b9">[10]</ref>, we showed that the proposed scheduling algorithm provides better results than two existing bi-criteria scheduling algorithms, and that the time spent on scheduling is reasonable for medium-scale workflows. By applying a generic criteria model, we were able to apply our approach for different scheduling criteria; in our experiments, we considered four different criteria: execution time, execution cost, reliability, and data quality. We believe that based on the taxonomies introduced in the current work, it will be possible to develop other generic scheduling algorithms, and to adjust the existing algorithms to different classes of the scheduling problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.">Conclusions</head><p>In the current work, we analyzed the problem of multi-criteria Grid workflow scheduling. Based on a careful selection of the relevant work in this area and on our own experience, we identified the main aspects of the problem that have to be taken into consideration when scheduling workflows on the Grid. As the main contribution, we introduced five taxonomies of the addressed problem, with the goal of creating a solid basis for more generic scheduling approaches that can be developed in the future. We made a survey of the related works, classified them with respect to the introduced taxonomies, and identified the problem classes that have been most commonly addressed and those that present the most promising research potential. We provided some guidelines for development of a generic multi-criteria scheduling approach, pointing at the problem classes that such an approach should address. As a case study, we presented a bi-criteria workflow scheduling approach developed by us based on the taxonomy of scheduling criteria.</p><p>Our choice to distinguish between different problem classes, and to divide the related work into two groups were not always straightforward and can be subject to some further analysis and discussion. Some of the classes introduced by us seem to be scarcely addressed in the related work (e.g., task-anddata-transfer-oriented workflows), which may indicate their low relevance, but may also mean that they have not been sufficiently studied in the past. On the other hand, the multitude of the existing workflow models may imply the need to introduce some other specific classes into our taxonomy. We leave all these questions for a further analysis that may improve the proposed taxonomies. We believe that the presented work can be an inspiration to develop some generic scheduling techniques, as well as some more specialized techniques.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Taxonomy of workflow model.</figDesc><graphic coords="4,135.05,63.93,315.36,216.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Taxonomy of workflow scheduling criteria.</figDesc><graphic coords="6,136.49,63.93,312.48,388.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Recursive calculation of aggregated costs for a structure dependent criterion.</figDesc><graphic coords="7,54.29,63.93,227.52,154.44" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Taxonomy of workflow scheduling process.</figDesc><graphic coords="10,43.94,63.93,228.60,203.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Taxonomy of Grid resources.</figDesc><graphic coords="12,142.43,63.93,300.60,108.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Taxonomy of workflow tasks.</figDesc><graphic coords="13,53.75,63.93,228.60,112.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>∀c 1 ,</head><label>1</label><figDesc>. . . , c n ∈ R + : c 1 • • • • • c n = exp(ln(c 1 ) + • • • + ln(c n )).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="15,44.51,87.55,516.24,288.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="17,44.51,87.55,515.88,347.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 2</head><label>2</label><figDesc>Problem classes combinations addressed by theoretical workflow scheduling approaches and specialized systems</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 3</head><label>3</label><figDesc>Survey of general-purpose Grid workflow systems</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 4</head><label>4</label><figDesc>Problem classes combinations addressed by general-purpose Grid workflow systems</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work is supported in part by the European Union through the IST-2002-004265 Network of Excellence CoreGRID.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Prodan is currently an assistant professor at the Institute of Computer Science, University of Innsbruck. He is interested in distributed software architectures, compiler technology, performance analysis, and scheduling for parallel and Grid computing. Prodan participated in several national and European projects and is currently workpackage leader in the IST-034601 edutain@grid project. He is the author of over 40 papers, including one book, seven journal articles, and one IEEE best paper award.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">V</forename></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Billaut</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Multicriteria</forename><surname>Scheduling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Springer Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><surname>Tsiakkouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sakellariou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Dikaiakos</surname></persName>
		</author>
		<title level="m">Proceedings of the CoreGRID Workshop &apos;&apos;Integrated research in Grid Computing</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Gorlatch</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Danelutto</surname></persName>
		</editor>
		<meeting>the CoreGRID Workshop &apos;&apos;Integrated research in Grid Computing</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="347" to="357" />
		</imprint>
	</monogr>
	<note>Scheduling workflows with budget constraints</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">QoS-based scheduling of workflow applications on service Grids</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Tham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st IEEE International Conference on e-Science and Grid Computing, e-Science</title>
		<meeting>the 1st IEEE International Conference on e-Science and Grid Computing, e-Science<address><addrLine>Melbourne, Australia</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE CS Press</publisher>
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A budget constrained scheduling of workflow applications on utility Grids using genetic algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th IEEE International Symposium on High Performance Distributed Computing, HPDC 2006</title>
		<meeting>the 15th IEEE International Symposium on High Performance Distributed Computing, HPDC 2006<address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE CS Press</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Scheduling scientific workflow applications with deadline and budget constraints using genetic algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Programming</title>
		<imprint>
			<publisher>IOS Press</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="14" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Biobjective scheduling algorithms for execution timereliability trade-off in heterogeneous computing systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Doğan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Özgüner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. J</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="300" to="314" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A novel fault-tolerant scheduling algorithm for precedence constrained tasks in real-time heterogeneous systems</title>
		<author>
			<persName><forename type="first">X</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel Comput</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="331" to="356" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">I</forename><surname>Brandic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Benkner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Engelbrecht</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Schmidt</surname></persName>
		</author>
		<title level="m">QoS support for timecritical Grid workflow applications, in: E-SCIENCE&apos;05: Proceedings of the First International Conference on e-Science and Grid Computing</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="108" to="115" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Amadeus: A holistic service-oriented environment for Grid workflows</title>
		<author>
			<persName><forename type="first">I</forename><surname>Brandic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pllana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Benkner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GCCW&apos;06: Proceedings of the Fifth International Conference on Grid and Cooperative Computing Workshops</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="259" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Bi-criteria scheduling of scientific workflows for the Grid</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wieczorek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Podlipnig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prodan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Eighth IEEE International Symposium on Cluster Computing and the Grid, CCGrid</title>
		<meeting>of the Eighth IEEE International Symposium on Cluster Computing and the Grid, CCGrid<address><addrLine>Lyon, France</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Workflow-based Grid applications</title>
		<author>
			<persName><forename type="first">F</forename><surname>Neubauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hoheisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Geiler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="6" to="15" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Hoheisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Alt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Petri</forename><surname>Nets</surname></persName>
		</author>
		<title level="m">Workflows for e-Science -Scientific Workflows for Grids</title>
		<editor>
			<persName><forename type="first">Ian</forename><forename type="middle">J</forename><surname>Taylor</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Dennis</forename><forename type="middle">B</forename><surname>Gannon</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Ewa</forename><surname>Deelman</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Matthew</forename><surname>Shields</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">ISBN</biblScope>
			<biblScope unit="page" from="978" to="979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">User tools and languages for graph-based Grid workflows: Research articles</title>
		<author>
			<persName><forename type="first">A</forename><surname>Hoheisel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Concurr. Comput. Pract. Exper</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1101" to="1113" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<ptr target="http://www.kwfgrid.net" />
		<title level="m">The K-WfGrid project</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hainzer</surname></persName>
		</author>
		<title level="m">Specification of Grid workflow applications with AGWL: An Abstract Grid Workflow Language</title>
		<meeting><address><addrLine>Cardiff, UK</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
	<note>Proceedings of IEEE International Symposium on Cluster Computing and the Grid 2005</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">ASKALON: A development and grid computing environment for scientific workflows</title>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prodan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Nadeem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Nerieri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Podlipnig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Siddiqui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-L</forename><surname>Truong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Villazón</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wieczorek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workflows for e-Science</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="450" to="471" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Business process execution language for web services</title>
		<author>
			<persName><forename type="first">T</forename><surname>Andrews</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BEA Systems</title>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A taxonomy and survey of Grid resource management systems for distributed computing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Krauter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Maheswaran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Softw. Pract. Exper</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="135" to="164" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Taxonomy of data Grids for distributed data sharing, management, and processing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Venugopal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ramamohanarao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="53" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A taxonomy of Grid monitoring systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zanikolas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sakellariou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="163" to="188" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A taxonomy of market-based resource management systems for utility-driven cluster computing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Yeo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Softw. Pract. Exper</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="1381" to="1419" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Fault tolerant behaviour in state-of-the-art workflow management systems</title>
		<author>
			<persName><forename type="first">K</forename><surname>Plankensteiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prodan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kertész</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kacsuk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CoreGRID Integration Workshop</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Gorlatch</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Fragopoulou</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Priol</surname></persName>
		</editor>
		<meeting><address><addrLine>Hersonissos, Greece</addrLine></address></meeting>
		<imprint>
			<publisher>Crete University Press</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="455" to="466" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Performance metrics and ontologies for Grid workflows</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Truong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
		<ptr target="http://dblp.uni-trier.de/db/journals/fgcs/fgcs23.html#TruongDF07" />
	</analytic>
	<monogr>
		<title level="j">Future Generation Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="760" to="772" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Workflow patterns</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H M</forename><surname>Ter Hofstede</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kiepuszewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Barros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Distrib. Parallel Databases</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="5" to="51" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<ptr target="http://www.workflowpatterns.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A taxonomy of workflow management systems for Grid computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Grid Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3-4</biblScope>
			<biblScope unit="page" from="171" to="200" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A taxonomy of scheduling in general-purpose distributed computing systems</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Casavant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Kuhl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Softw. Eng</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="141" to="154" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Scheduling algorithms for Grid computing: State of the art and open problems</title>
		<author>
			<persName><forename type="first">F</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Akl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
			<publisher>School of Computing</publisher>
			<pubPlace>Kingston, Ontario</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Queen&apos;s University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Rep. 2006-504</note>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<ptr target="http://www.w3.org/RDF/" />
		<title level="m">Resource Description Framework</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Workflow management: Modeling concepts, architecture and implementation</title>
		<author>
			<persName><surname>Jablonski</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Fundamentals of control flow in workflows</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kiepuszewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H M</forename><surname>Ter Hofstede</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M P</forename><surname>Van Der Aalst</surname></persName>
		</author>
		<ptr target="http://dblp.uni-trier.de/db/journals/acta/acta39.html#KiepuszewskiHA03" />
	</analytic>
	<monogr>
		<title level="j">Acta Inform</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="143" to="209" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<ptr target="http://www.cogkit.org/current/manual/workflow.pdf" />
		<title level="m">Java CoG Kit Karajan Guide</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Stork: Making data placement a first class citizen in the Grid</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kosar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A novel approach to resource scheduling for parallel query processing on computational Grids</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gounaris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sakellariou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Paton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fernandes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Distrib. Parallel Databases</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="87" to="106" />
			<date type="published" when="1920">May. 2006. 20</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Workflow conversion and processing in the ASKALON Grid environment</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wieczorek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">nd Austrian Grid Symposium</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Multi-Grid brokering with the P-GRADE portal</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kertesz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sipos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kacsuk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2nd Austrian Grid Symposium</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Volkert</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Kranzlmuller</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><surname>Schreiner</surname></persName>
		</editor>
		<meeting><address><addrLine>Austria</addrLine></address></meeting>
		<imprint>
			<publisher>OCG Verlag</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="166" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A hybrid heuristic for DAG scheduling on heterogeneous systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sakellariou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IPDPS</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Scheduling multiple DAGs onto heterogeneous systems, in: 15th Heterogeneous Computing Workshop, HCW&apos;06</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sakellariou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>IEEE Computer Society Press</publisher>
			<pubPlace>Rhodes, Greece</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A metaheuristic approach to scheduling workflow jobs on a Grid</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mika</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Waligóra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Weglarz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Grid Res. Manag. State Art Future Trends</title>
		<imprint>
			<biblScope unit="page" from="295" to="318" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Critical-path and priority based algorithms for scheduling workflows with parameter sweep tasks on global grids</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th International Symposium on Computer Architecture and High Performance Computing, SBAC-PAD 2005</title>
		<meeting>the 17th International Symposium on Computer Architecture and High Performance Computing, SBAC-PAD 2005<address><addrLine>Rio de Janeiro, Brazil</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">A computational economy for Grid computing and its implementation in the nimrod-g resource broker</title>
		<author>
			<persName><forename type="first">D</forename><surname>Abramson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Giddy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1061" to="1074" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Heuristics for scheduling parameter sweep applications in Grid environments</title>
		<author>
			<persName><forename type="first">H</forename><surname>Casanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Legrand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zagorodnov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Berman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 9th Heterogeneous Computing Workshop</title>
		<meeting>9th Heterogeneous Computing Workshop<address><addrLine>Cancun, Mexico</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="349" to="363" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Optimal use of mixed task and data parallelism for pipelined computations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Subhlok</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Vondran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Parallel Distrib. Comput</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="297" to="319" />
			<date type="published" when="2000-03">March. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Pegasus: a Framework for mapping complex scientific workflows onto distributed systems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Deelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M.-H</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Blythe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Gil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kesselman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Vahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">B</forename><surname>Berriman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Good</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Laity</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Jacob</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sci. Programm. J</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="219" to="237" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Distributed data mining in Grid computing environments</title>
		<author>
			<persName><forename type="first">P</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lü</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="84" to="91" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<author>
			<persName><forename type="first">P</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lü</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">A heterogeneous computing system for data mining workflows in multi-agent environments</title>
		<imprint>
			<date type="published" when="2006-11">November. 2006</date>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="258" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">The Knowledge-based Workflow System for Grid Applications</title>
		<author>
			<persName><forename type="first">T</forename><surname>Gubała</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Har Ȩzlak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bubak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Malawski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Constructing abstract workflows of applications with workflow composition tool</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Bubak</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Unger</surname></persName>
		</editor>
		<meeting><address><addrLine>Krakow, Poland, in</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">October 15-18, 2006. 2007</date>
			<biblScope unit="page" from="25" to="30" />
		</imprint>
	</monogr>
	<note>Proceedings of Cracow&apos;06 Grid Workshop</note>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Automatic application builder -Tool for automatic service selection</title>
		<author>
			<persName><forename type="first">L</forename><surname>Dutka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kitowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Natanek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Cracow&apos;06 Grid Workshop</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Bubak</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Unger</surname></persName>
		</editor>
		<meeting>Cracow&apos;06 Grid Workshop<address><addrLine>Krakow, Poland, in</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">October 15-18, 2006. 2007</date>
			<biblScope unit="page" from="31" to="38" />
		</imprint>
	</monogr>
	<note>: The Knowledge-based Workflow System for Grid Applications</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Resource allocation in streaming environments</title>
		<author>
			<persName><forename type="first">L</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Chandy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 7th IEEE/ACM International Conference on Grid Computing, Grid&apos;06</title>
		<meeting>7th IEEE/ACM International Conference on Grid Computing, Grid&apos;06<address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Quality-of-service-aware data stream processing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Schmidt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<pubPlace>Dresden</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title level="m" type="main">Grid Engine</title>
		<ptr target="http://gridengine.sunsource.net/" />
		<imprint>
			<publisher>Sun Microsystems, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<ptr target="http://www.platform.com/Products/Platform.LSF.Family/" />
		<title level="m">Platform LSF</title>
		<imprint>
			<publisher>Platform Computing Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Applying advance reservation to increase predictability of workflow execution on the Grid</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wieczorek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Siddiqui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Villazon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prodan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">E-SCIENCE&apos;06: Proceedings of the Second IEEE International Conference on e-Science and Grid Computing</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page">82</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">Chemomentum -UNICORE 6 based infrastructure for complex applications in science and technology</title>
		<author>
			<persName><forename type="first">B</forename><surname>Schuller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Demuth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mix</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rasch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Romberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sild</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Maran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Del Grosso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Casalegno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Piclin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pintore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Sudholt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Baldrige</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007. 2007</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Rennes, France</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Konzept für das Scheduling von Workflow-Aktivitäten in Instant Grid</title>
		<author>
			<persName><forename type="first">A</forename><surname>Hoheisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Rose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fraunhofer Institut für Rechnerarchitektur und Softwaretechnik</title>
		<imprint>
			<date type="published" when="2006-06">June 2006</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep</note>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">A negotiation model supporting co-allocation for Grid scheduling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Yahyapour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 7th IEEE/ACM International Conference on Grid Computing, Grid&apos;06</title>
		<meeting>7th IEEE/ACM International Conference on Grid Computing, Grid&apos;06<address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Negotiation strategies for Grid scheduling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Yahyapour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The First International Conference on Grid and Pervasive Computing</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting><address><addrLine>Taiwan</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2006">2006. 2006</date>
			<biblScope unit="volume">3947</biblScope>
			<biblScope unit="page" from="42" to="52" />
		</imprint>
		<respStmt>
			<orgName>Tunghai University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Learning-based negotiation strategies for Grid scheduling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Yahyapour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Int&apos;l Symposium on Cluster Computing and the Grid, CCGrid</title>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2006">2006. 2006</date>
			<biblScope unit="page" from="567" to="583" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Data quality assessment</title>
		<author>
			<persName><forename type="first">L</forename><surname>Pipino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="211" to="218" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">Dynamic scheme selection in image coding</title>
		<author>
			<persName><forename type="first">P</forename><surname>Fleury</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<pubPlace>Lausanne</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Modeling data and process quality in multi-input, multioutput information systems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Ballou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Pazer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manag. Sci</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="150" to="162" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Techniques to aggregate the characteristics of internal quality of an IS specification language</title>
		<author>
			<persName><forename type="first">A</forename><surname>Čaplinskas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gasperovič</surname></persName>
		</author>
		<ptr target="http://www.vtex.lt/Informatica/htm/INFO614.htm" />
	</analytic>
	<monogr>
		<title level="j">Informatica, Lith. Acad. Sci</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="519" to="540" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Using fuzzy set theoretic techniques to identify preference rules from interactions in the linear model: An empirical study</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Mela</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Lehmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets Syst</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="165" to="181" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Internet QoS: A big picture</title>
		<author>
			<persName><forename type="first">X</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Ni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="8" to="18" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<monogr>
		<title level="m" type="main">Economic models for management of resources in Peer-to-Peer and Grid computing</title>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Stockinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Giddy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Abramson</surname></persName>
		</author>
		<ptr target="http://ideas.repec.org/p/wpa/wuwpco/0108001.html" />
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. 0108001, Economics Working Paper Archive at</note>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">The Grid economy</title>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Abramson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Venugopal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Parashar</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Lee</surname></persName>
		</editor>
		<meeting>the IEEE<address><addrLine>NJ, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">93</biblScope>
			<biblScope unit="page" from="698" to="714" />
		</imprint>
	</monogr>
	<note>Grid Computing. special issue</note>
</biblStruct>

<biblStruct xml:id="b66">
	<monogr>
		<title level="m" type="main">Analyzing Market-Based Resource Allocation Strategies for the Computational Grid</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wolski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Plank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Brevik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Bryan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="258" to="281" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Market-oriented multiple resource scheduling in Grid computing environments</title>
		<author>
			<persName><forename type="first">C.-H</forename><surname>Chien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename></persName>
		</author>
		<author>
			<persName><forename type="first">-M</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V.-W</forename><surname>Soo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AINA&apos;05: Proceedings of the 19th International Conference on Advanced Information Networking and Applications</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="867" to="872" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Automated negotiation: Prospects, methods and challenges</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Faratin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Lomuscio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Parsons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sierra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Woodlidge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Group Decision and Negotiation</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="199" to="215" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kesselman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Deelman</surname></persName>
		</author>
		<title level="m">Application-level resource provisioning on the Grid, e-science</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page">83</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">A compile-time scheduling heuristic for interconnectionconstrained heterogeneous processor architectures</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">C</forename><surname>Sih</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="175" to="187" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">H</forename><surname>Kellerer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Pferschy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pisinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Knapsack</forename><surname>Problems</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
			<affiliation>
				<orgName type="collaboration">Athena Scientific</orgName>
			</affiliation>
		</author>
		<title level="m">Dynamic Programming and Optimal Control</title>
		<meeting><address><addrLine>Belmont, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">I</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<monogr>
		<title level="m" type="main">Theory of Linear and Integer Programming</title>
		<author>
			<persName><forename type="first">A</forename><surname>Schrijver</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987">1987</date>
			<publisher>Ex</publisher>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Workflow management in GriPhyN</title>
		<author>
			<persName><forename type="first">E</forename><surname>Deelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Blythe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Gil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kesselman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Grid Res. Manag. State Art Future Trends</title>
		<imprint>
			<biblScope unit="page" from="99" to="116" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Performance-effective and lowcomplexity task scheduling for heterogeneous computing</title>
		<author>
			<persName><forename type="first">H</forename><surname>Topcuouglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hariri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="260" to="274" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">JavaSymphony, a programming model for the Grid</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jugravu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fahringer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Gener. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="239" to="246" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">An adaptive rescheduling strategy for Grid workflow applications</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21st IPDPS</title>
		<meeting>the 21st IPDPS<address><addrLine>Long Beach, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Performance Contracts: Predicting and Monitoring Grid Application Behavior</title>
		<author>
			<persName><forename type="first">F</forename><surname>Vraalsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Aydt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Mendes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Reed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">2242</biblScope>
			<biblScope unit="page" from="154" to="166" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">H</forename><surname>Dail</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Sievert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Berman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Casanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Yarkhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vadhiyar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dongarra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Angulo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Foster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Scheduling in the Grid Application Development Software Project</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">New Grid scheduling and rescheduling methods in the GrADS project</title>
		<author>
			<persName><forename type="first">F</forename><surname>Berman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Parallel Programm</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">21</biblScope>
			<biblScope unit="page" from="209" to="229" />
			<date type="published" when="2005-06">June. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Advance reservation policies for workflows</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sakellariou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th International Workshop on Job Scheduling Strategies for Parallel Processing</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>the 12th International Workshop on Job Scheduling Strategies for Parallel Processing<address><addrLine>Saint-Malo, France</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4376</biblScope>
			<biblScope unit="page" from="47" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">The anatomy of the Grid: Enabling scalable virtual organizations</title>
		<author>
			<persName><forename type="first">I</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kesselman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tuecke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Supercomput. Appl</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2001">2001. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<monogr>
		<title level="m" type="main">A meta-scheduling service for co-allocating arbitrary types of resources</title>
		<author>
			<persName><forename type="first">O</forename><surname>Wäldrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wieder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005-12">December 2005</date>
		</imprint>
		<respStmt>
			<orgName>Institute on Resource Management and Scheduling, CoreGRID -Network of Excellence</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Rep. TR-0010</note>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Constraint-based Scheduling: Applying Constraint Programming to Scheduling Problems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Baptiste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Le</forename><surname>Pape</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Nuijten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">International Series in Operations Research and Management Science</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<date type="published" when="2001">2001</date>
			<publisher>Kluwer Academic Publishers</publisher>
			<pubPlace>Norwell, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Rodriguez Moreno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Borrajo Millán</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Meziat</forename><surname>Luna</surname></persName>
		</author>
		<title level="m">Representing and planning tasks with time and resources</title>
		<meeting><address><addrLine>Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-12">December 2003</date>
		</imprint>
		<respStmt>
			<orgName>Universidad de Alcalá</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">A constrained-based method for project scheduling with time windows</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">O A</forename><surname>Cesta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Heuristics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="109" to="136" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Adaptive time/space sharing with SCOJO</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Sodan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. High Performance Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">5-6</biblScope>
			<biblScope unit="page" from="256" to="269" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">Towards convergence in job schedulers for parallel supercomputers</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Feitelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Rudolph</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPPS&apos;96: Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing</title>
		<meeting><address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="1" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">Critical path and area based scheduling of parallel task graphs on heterogeneous platforms</title>
		<author>
			<persName><forename type="first">T</forename><surname>N'takpé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Suter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th International Conference on Parallel and Distributed Systems, ICPADS 2006</title>
		<meeting>the 12th International Conference on Parallel and Distributed Systems, ICPADS 2006<address><addrLine>Minneapolis, MN, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<analytic>
		<title level="a" type="main">CPR: Mixed task and data parallel scheduling for distributed systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Radulescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Nicolescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J C</forename><surname>Van Gemund</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">P</forename><surname>Jonker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th International Parallel and Distributed Processing Symposium</title>
		<meeting>the 15th International Parallel and Distributed Processing Symposium<address><addrLine>San Francisco, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="39" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">From heterogeneous task scheduling to heterogeneous mixed parallel scheduling</title>
		<author>
			<persName><forename type="first">H</forename><surname>Casanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Desprez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Suter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th International Euro-Par Conference, Euro-Par&apos;04</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Danelutto</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Laforenza</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Vanneschi</surname></persName>
		</editor>
		<meeting>the 10th International Euro-Par Conference, Euro-Par&apos;04<address><addrLine>Pisa, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3149</biblScope>
			<biblScope unit="page" from="230" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">Scheduling mixed-parallel applications with advance reservations</title>
		<author>
			<persName><forename type="first">K</forename><surname>Aida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Casanova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th IEEE International Symposium on High Performance Distributed Computing, HPDC-15</title>
		<meeting>the 17th IEEE International Symposium on High Performance Distributed Computing, HPDC-15<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Scheduling malleable tasks on parallel processors to minimize the makespan: Models and algorithms for planning and scheduling problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Błazewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Machowiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Ȩglarz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kovalyov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Trystram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">129</biblScope>
			<biblScope unit="issue">16</biblScope>
			<biblScope unit="page" from="65" to="80" />
			<date type="published" when="2004-07">July. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<monogr>
		<title level="m" type="main">Checkpoint and migration of unix processes in the condor distributed processing system</title>
		<author>
			<persName><forename type="first">J</forename><surname>Basney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Litzkow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Tannenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
		<idno>1346</idno>
		<imprint>
			<date type="published" when="1997-04">April 1997</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. Technical Report</note>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">Blocking vs. non-blocking coordinated checkpointing for large-scale fault tolerant MPI Protocols</title>
		<author>
			<persName><forename type="first">D</forename><surname>Buntinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Coti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hérault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lemarinier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Pilard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rezmerita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Cappello</surname></persName>
		</author>
		<ptr target="http://dblp.uni-trier.de/db/journals/fgcs/fgcs24.html#BuntinasCHLPRRC08" />
	</analytic>
	<monogr>
		<title level="j">Future Generation Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="73" to="84" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Marek Wieczorek received his Master&apos;s degree in Computer Science from the AGH University of Science and Technology in Cracow</title>
		<author>
			<persName><forename type="first">S</forename><surname>Pellegrini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Giacomini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghiselli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Austria, where he works as Research Assistant in the Distributed and Parallel Systems group and is conducting his Ph.D. studies in Computer Science. He is interested in algorithmics, and his research is focused on scheduling of workflow applications on the Grid. He participated in several national and European projects</title>
		<meeting><address><addrLine>Dresden, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="2003">2007. 2003. 2004</date>
		</imprint>
		<respStmt>
			<orgName>Institute of Computer Science, University of Innsbruck,</orgName>
		</respStmt>
	</monogr>
	<note>CoreGRID Workshop on Grid Middleware. including the IST-2004-511385 K-WfGrid project. He is the author and co-author of over 10 scientific papers, including one journal article</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
