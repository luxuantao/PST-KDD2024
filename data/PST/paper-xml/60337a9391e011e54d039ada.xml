<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Improved Denoising Diffusion Probabilistic Models</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2021-02-18">18 Feb 2021</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Alex</forename><surname>Nichol</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Equal contribution</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">OpenAI</orgName>
								<address>
									<addrLine>San Francisco</addrLine>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Prafulla</forename><surname>Dhariwal</surname></persName>
							<email>&lt;prafulla@openai.com&gt;.</email>
							<affiliation key="aff0">
								<orgName type="department">Equal contribution</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">OpenAI</orgName>
								<address>
									<addrLine>San Francisco</addrLine>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Improved Denoising Diffusion Probabilistic Models</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2021-02-18">18 Feb 2021</date>
						</imprint>
					</monogr>
					<idno type="arXiv">arXiv:2102.09672v1[cs.LG]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T12:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Denoising diffusion probabilistic models (DDPM) are a class of generative models which have recently been shown to produce excellent samples. We show that with a few simple modifications, DDPMs can also achieve competitive loglikelihoods while maintaining high sample quality. Additionally, we find that learning variances of the reverse diffusion process allows sampling with an order of magnitude fewer forward passes with a negligible difference in sample quality, which is important for the practical deployment of these models. We additionally use precision and recall to compare how well DDPMs and GANs cover the target distribution. Finally, we show that the sample quality and likelihood of these models scale smoothly with model capacity and training compute, making them easily scalable. We release our code at https://github.com/ openai/improved-diffusion.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Sohl- <ref type="bibr" target="#b30">Dickstein et al. (2015)</ref> introduced diffusion probabilistic models, a class of generative models which match a data distribution by learning to reverse a gradual, multi-step noising process. More recently, <ref type="bibr" target="#b12">Ho et al. (2020)</ref> showed an equivalence between denoising diffusion probabilistic models (DDPM) and score based generative models <ref type="bibr" target="#b32">(Song &amp; Ermon, 2019;</ref><ref type="bibr" target="#b5">2020)</ref>, which learn a gradient of the logdensity of the data distribution using denoising score matching <ref type="bibr" target="#b13">(Hyvärinen, 2005)</ref>. It has recently been shown that this class of models can produce high-quality images <ref type="bibr" target="#b12">(Ho et al., 2020;</ref><ref type="bibr" target="#b33">Song &amp; Ermon, 2020;</ref><ref type="bibr" target="#b14">Jolicoeur-Martineau et al., 2020)</ref> and audio <ref type="bibr" target="#b3">(Chen et al., 2020b;</ref><ref type="bibr" target="#b19">Kong et al., 2020)</ref>, but it has yet to be shown that DDPMs can achieve loglikelihoods competitive with other likelihood-based models such as autoregressive models <ref type="bibr" target="#b38">(van den Oord et al., 2016c)</ref> and VAEs <ref type="bibr" target="#b18">(Kingma &amp; Welling, 2013)</ref>. This raises various questions, such as whether DDPMs are capable of capturing all the modes of a distribution. Furthermore, while <ref type="bibr" target="#b12">Ho et al. (2020)</ref> showed extremely good results on the CIFAR-10 ( <ref type="bibr" target="#b20">Krizhevsky, 2009)</ref> and LSUN <ref type="bibr" target="#b40">(Yu et al., 2015)</ref> datasets, it is unclear how well DDPMs scale to datasets with higher diversity such as ImageNet. Finally, while <ref type="bibr" target="#b3">Chen et al. (2020b)</ref> found that DDPMs can efficiently generate audio using a small number of sampling steps, it has yet to be shown that the same is true for images.</p><p>In this paper, we show that DDPMs can achieve loglikelihoods competitive with other likelihood-based models, even on high-diversity datasets like ImageNet. To more tightly optimise the variational lower-bound (VLB), we learn the reverse process variances using a simple reparameterization and a hybrid learning objective that combines the VLB with the simplified objective from <ref type="bibr" target="#b12">Ho et al. (2020)</ref>.</p><p>We find surprisingly that, with our hybrid objective, our models obtain better log-likelihoods than those obtained by optimizing the log-likelihood directly, and discover that the latter objective has much more gradient noise during training. We show that a simple importance sampling technique reduces this noise and allows us to achieve better log-likelihoods than with the hybrid objective.</p><p>After incorporating learned variances into our model, we surprisingly discovered that we could sample in fewer steps from our models with very little change in sample quality. While DDPM <ref type="bibr" target="#b12">(Ho et al., 2020)</ref> requires hundreds of forward passes to produce good samples, we can achieve good samples with as few as 50 forward passes, thus speeding up sampling for use in practical applications. In parallel to our work, <ref type="bibr" target="#b31">Song et al. (2020a)</ref> develops a different approach to fast sampling, and we compare against their approach, DDIM, in our experiments.</p><p>While likelihood is a good metric to compare against other likelihood-based models, we also wanted to compare the distribution coverage of these models with GANs. We use the improved precision and recall metrics <ref type="bibr" target="#b21">(Kynkäänniemi et al., 2019)</ref> and discover that diffusion models achieve much higher recall for similar FID, suggesting that they do indeed cover a much larger portion of the target distribution.</p><p>Finally, since we expect machine learning models to consume more computational resources in the future, we evaluate the performance of these models as we increase model size and training compute. Similar to <ref type="bibr" target="#b9">(Henighan et al., 2020)</ref>, we observe trends that suggest predictable improvements in performance as we increase training compute.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Denoising Diffusion Probabilistic Models</head><p>We briefly review the formulation of DDPMs from <ref type="bibr" target="#b12">Ho et al. (2020)</ref>. This formulation makes various simplifying assumptions, such as a fixed noising process q which adds diagonal Gaussian noise at each timestep. For a more general derivation, see <ref type="bibr" target="#b30">Sohl-Dickstein et al. (2015)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Definitions</head><p>Given a data distribution x 0 ∼ q(x 0 ), we define a forward noising process q which produces latents x 1 through x T by adding Gaussian noise at time t with variance β t ∈ (0, 1) as follows:</p><formula xml:id="formula_0">q(x 1 , ..., x T |x 0 ) := T t=1 q(x t |x t−1 )</formula><p>(1)</p><formula xml:id="formula_1">q(x t |x t−1 ) := N (x t ; 1 − β t x t−1 , β t I) (2)</formula><p>Given sufficiently large T and a well behaved schedule of β t , the latent x T is nearly an isotropic Gaussian distribution. Thus, if we know the exact reverse distribution q(x t−1 |x t ), we can sample x T ∼ N (0, I) and run the process in reverse to get a sample from q(x 0 ). However, since q(x t−1 |x t ) depends on the entire data distribution, we approximate it using a neural network as follows:</p><formula xml:id="formula_2">p θ (x t−1 |x t ) := N (x t−1 ; µ θ (x t , t), Σ θ (x t , t)) (3)</formula><p>The combination of q and p is a variational auto-encoder <ref type="bibr" target="#b18">(Kingma &amp; Welling, 2013)</ref>, and we can write the variational lower bound (VLB) as follows:</p><formula xml:id="formula_3">L vlb := L 0 + L 1 + ... + L T −1 + L T (4) L 0 := − log p θ (x 0 |x 1 ) (5) L t−1 := D KL (q(x t−1 |x t , x 0 ) || p θ (x t−1 |x t )) (6) L T := D KL (q(x T |x 0 ) || p(x T ))<label>(7)</label></formula><p>Aside from L 0 , each term of Equation 4 is a KL divergence between two Gaussians, and can thus be evaluated in closed form. To evaluate L 0 for images, we assume that each color component is divided into 256 bins, and we compute the probability of p θ (x 0 |x 1 ) landing in the correct bin (which is tractable using the CDF of the Gaussian distribution). Also note that while L T does not depend on θ, it will be close to zero if the forward noising process adequately destroys the data distribution so that q(x T |x 0 ) ≈ N (0, I).</p><p>As noted in <ref type="bibr" target="#b12">(Ho et al., 2020)</ref>, the noising process defined in Equation 2 allows us to sample an arbitrary step of the noised latents directly conditioned on the input x 0 . With α t := 1 − β t and ᾱt := t s=0 α s , we can write the marginal</p><formula xml:id="formula_4">q(x t |x 0 ) = N (x t ; √ ᾱt x 0 , (1 − ᾱt )I) (8) x t = √ ᾱt x 0 + √ 1 − ᾱt (9)</formula><p>where ∼ N (0, I). Here, 1 − ᾱt tells us the variance of the noise for an arbitrary timestep, and we could equivalently use this to define the noise schedule instead of β t .</p><p>Using Bayes theorem, one can calculate the posterior q(x t−1 |x t , x 0 ) in terms of βt and μt (x t , x 0 ) which are defined as follows:</p><formula xml:id="formula_5">βt := 1 − ᾱt−1 1 − ᾱt β t (10) μt (x t , x 0 ) := √ ᾱt−1 β t 1 − ᾱt x 0 + √ α t (1 − ᾱt−1 ) 1 − ᾱt x t (11) q(x t−1 |x t , x 0 ) = N (x t−1 ; μ(x t , x 0 ), βt I) (12)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Training in Practice</head><p>The objective in Equation 4 is a sum of independent terms L t−1 , and Equation 9 provides an efficient way to sample from an arbitrary step of the forward noising process and estimate L t−1 using the posterior (Equation <ref type="formula">12</ref>) and prior (Equation <ref type="formula">3</ref>). We can thus randomly sample t and use the expectation E t,x0, [L t−1 ] to estimate L vlb . <ref type="bibr" target="#b12">Ho et al. (2020)</ref> uniformly sample t for each image in each mini-batch.</p><p>There are many different ways to parameterize µ θ (x t , t) in the prior. The most obvious option is to predict µ θ (x t , t) directly with a neural network. Alternatively, the network could predict x 0 , and this output could be used in Equation <ref type="formula">11</ref>to produce µ θ (x t , t). The network could also predict the noise and use Equations 9 and 11 to derive</p><formula xml:id="formula_6">µ θ (x t , t) = 1 √ α t x t − β t √ 1 − ᾱt θ (x t , t)<label>(13)</label></formula><p>Ho <ref type="bibr">et al. (2020)</ref> found that predicting worked best, especially when combined with a reweighted loss function:</p><formula xml:id="formula_7">L simple = E t,x0, || − θ (x t , t)|| 2 (14)</formula><p>This objective can be seen as a reweighted form of L vlb (without the terms affecting Σ θ ). The authors found that optimizing this reweighted objective resulted in much better sample quality than optimizing L vlb directly, and explain this by drawing a connection to generative score matching <ref type="bibr" target="#b32">(Song &amp; Ermon, 2019;</ref><ref type="bibr" target="#b5">2020)</ref>.</p><p>One subtlety is that L simple provides no learning signal for Σ θ (x t , t). This is irrelevant, however, since <ref type="bibr" target="#b12">Ho et al. (2020)</ref> achieved their best results by fixing the variance to σ 2 t I rather than learning it. They found that they achieve similar sample quality using either σ 2 t = β t or σ 2 t = βt , which are the upper and lower bounds on the variance given by q(x 0 ) being either isotropic Gaussian noise or a delta function, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Improving the Log-likelihood</head><p>While <ref type="bibr" target="#b12">Ho et al. (2020)</ref> found that DDPMs can generate highfidelity samples according to FID <ref type="bibr" target="#b10">(Heusel et al., 2017)</ref> and Inception Score <ref type="bibr" target="#b28">(Salimans et al., 2016)</ref>, they were unable to achieve competitive log-likelihoods with these models. Loglikelihood is a widely used metric in generative modeling, and it is generally believed that optimizing log-likelihood forces generative models to capture all of the modes of the data distribution <ref type="bibr" target="#b26">(Razavi et al., 2019)</ref>. Additionally, recent work <ref type="bibr" target="#b9">(Henighan et al., 2020)</ref> has shown that small improvements in log-likelihood can have a dramatic impact on sample quality and learnt feature representations. Thus, it is important to explore why DDPMs seem to perform poorly on this metric, since this may suggest a fundamental shortcoming such as bad mode coverage. This section explores several modifications to the algorithm described in Section 2 that, when combined, allow DDPMs to achieve much better log-likelihoods on image datasets, suggesting that these models enjoy the same benefits as other likelihood-based generative models.</p><p>To study the effects of different modifications, we train fixed model architectures with fixed hyperparameters on the ImageNet 64 × 64 (van den <ref type="bibr" target="#b37">Oord et al., 2016b)</ref> and <ref type="bibr">CIFAR-10 (Krizhevsky, 2009)</ref> datasets. While CIFAR-10 has seen more usage for this class of models, we chose to study ImageNet 64 × 64 as well because it provides a good trade-off between diversity and resolution, allowing us to train models quickly without worrying about overfitting. Additionally, ImageNet 64×64 has been studied extensively in the context of generative modeling <ref type="bibr" target="#b38">(van den Oord et al., 2016c;</ref><ref type="bibr" target="#b23">Menick &amp; Kalchbrenner, 2018;</ref><ref type="bibr" target="#b6">Child et al., 2019;</ref><ref type="bibr" target="#b27">Roy et al., 2020)</ref>, allowing us to compare DDPMs directly to many other generative models.</p><p>The setup from <ref type="bibr" target="#b12">Ho et al. (2020)</ref> (optimizing L simple while setting σ 2 t = β t and T = 1000) achieves a log-likelihood of 3.99 (bits/dim) on ImageNet 64 × 64 after 200K training iterations. We found in early experiments that we could get a boost in log-likelihood by increasing T from 1000 to 4000; with this change, the log-likelihood improves to 3.77. For the remainder of this section, we use T = 4000, but we explore this choice in Section 4.</p><p>3.1. Learning Σ θ (x t , t)</p><p>In <ref type="bibr" target="#b12">Ho et al. (2020)</ref>, the authors set Σ θ (x t , t) = σ 2 t I, where σ t is not learned. Oddly, they found that fixing σ 2 t to β t yielded roughly the same sample quality as fixing it to βt .  Considering that β t and βt represent two opposite extremes, it is reasonable to ask why this choice doesn't affect samples. One clue is given by Figure <ref type="figure" target="#fig_0">1</ref>, which shows that β t and βt are almost equal except near t = 0, i.e. where the model is dealing with imperceptible details. Furthermore, as we increase the number of diffusion steps, β t and βt seem to remain close to one another for more of the diffusion process. This suggests that, in the limit of infinite diffusion steps, the choice of σ t might not matter at all for sample quality.</p><p>In other words, as we add more diffusion steps, the model mean µ θ (x t , t) determines the distribution much more than Σ θ (x t , t).</p><p>While the above argument suggests that fixing σ t is a reasonable choice for the sake of sample quality, it says nothing about log-likelihood. In fact, Figure <ref type="figure" target="#fig_1">2</ref> shows that the first few steps of the diffusion process contribute the most to the variational lower bound. Thus, it seems likely that we could improve log-likelihood by using a better choice of Σ θ (x t , t). To achieve this, we must learn Σ θ (x t , t) without the instabilities encountered by <ref type="bibr" target="#b12">Ho et al. (2020)</ref>.</p><p>Since Figure <ref type="figure" target="#fig_0">1</ref> shows that the reasonable range for Σ θ (x t , t) is very small, it would be hard for a neural network to predict Σ θ (x t , t) directly, even in the log domain, as observed by <ref type="bibr" target="#b12">Ho et al. (2020)</ref>. Instead, we found it better to parameterize the variance as an interpolation between β t and βt in the log domain. In particular, our model outputs a vector v containing one component per dimension, and we turn this output into variances as follows:</p><formula xml:id="formula_8">Σ θ (x t , t) = exp(v log β t + (1 − v) log βt )<label>(15)</label></formula><p>We did not apply any constraints on v, theoretically allowing the model to predict variances outside of the interpolated range. However, we did not observe the network doing this in practice, suggesting that the bounds for Σ θ (x t , t) are indeed expressive enough.</p><p>Since L simple doesn't depend on Σ θ (x t , t), we define a new hybrid objective:</p><formula xml:id="formula_9">L hybrid = L simple + λL vlb (<label>16</label></formula><formula xml:id="formula_10">)</formula><p>For our experiments, we set λ = 0.001 to prevent L vlb from overwhelming L simple . Along this same line of reasoning, we also apply a stop-gradient to the µ θ (x t , t) output for the L vlb term. This way, L vlb can guide Σ θ (x t , t) while L simple is still the main source of influence over µ θ (x t , t).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Improving the Noise Schedule</head><p>We found that while the linear noise schedule used in <ref type="bibr" target="#b12">Ho et al. (2020)</ref> worked well for high resolution images, it was sub-optimal for images of resolution 64 × 64 and 32 × 32.</p><p>In particular, the end of the forward noising process is too noisy, and so doesn't contribute very much to sample quality. This can be seen visually in Figure <ref type="figure">3</ref>. The result of this effect is studied in Figure <ref type="figure">4</ref>, where we see that a model trained with the linear schedule does not get much worse (as measured by FID) when we skip up to 20% of the reverse diffusion process.</p><p>To address this problem, we construct a different noise schedule in terms of ᾱt :</p><formula xml:id="formula_11">ᾱt = f (t) f (0) , f (t) = cos t/T + s 1 + s • π 2 2 (17)</formula><p>To go from this definition to variances β t , we note that</p><formula xml:id="formula_12">β t = 1 − ᾱt ᾱt−1 .</formula><p>In practice, we clip β t to be no larger than 0.999 to prevent singularities at the end of the diffusion process near t = T .</p><p>Our cosine schedule is designed to have a linear drop-off of ᾱt in the middle of the process, while changing very little near the extremes of t = 0 and t = T to prevent abrupt changes in noise level. Figure <ref type="figure" target="#fig_3">5</ref> shows how ᾱt progresses for both schedules. We can see that the linear schedule from <ref type="bibr" target="#b12">Ho et al. (2020)</ref> falls towards zero much faster, destroying information more quickly than necessary.</p><p>We use a small offset s to prevent β t from being too small near t = 0, since we found that having tiny amounts of noise at the beginning of the process made it hard for the network to predict accurately enough. In particular, we selected s such that √ β 0 was slightly smaller than the pixel bin size 1/127.5, which gives s = 0.008. We chose to use cos 2 in particular because it is a common mathematical function with the shape we were looking for. This choice was arbitrary, and we expect that many other functions with similar shapes would work as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Reducing Gradient Noise</head><p>We expected to achieve the best log-likelihoods by optimizing L vlb directly, rather than by optimizing L hybrid . However, we were surprised to find that L vlb was actually quite difficult to optimize in practice, at least on the diverse ImageNet 64 × 64 dataset. Figure <ref type="figure">6</ref> shows the learning curves for both L vlb and L hybrid . Both curves are noisy, but the hybrid objective clearly achieves better log-likelihoods on the training set given the same amount of training time.</p><p>We hypothesized that the gradient of L vlb was much noisier than that of L hybrid . We confirmed this by evaluating the gradient noise scales <ref type="bibr" target="#b22">(McCandlish et al., 2018)</ref> for models trained with both objectives, as shown in Figure <ref type="figure">7</ref>. Thus, we sought out a way to reduce the variance of L vlb in order to optimize directly for log-likelihood.</p><p>Noting that different terms of L vlb have greatly different magnitudes (Figure <ref type="figure" target="#fig_1">2</ref>), we hypothesized that sampling t uniformly causes unnecessary noise in the L vlb objective. To address this, we employ importance sampling: With this importance sampled objective, we are able to achieve our best log-likelihoods by optimizing L vlb . This can be seen in Figure <ref type="figure">6</ref> as the L vlb (resampled) curve. The figure also shows that the importance sampled objective is considerably less noisy than the original, uniformly sampled objective. We found that the importance sampling technique was not helpful when optimizing the less-noisy L hybrid objective directly.</p><formula xml:id="formula_13">L vlb = E t∼pt L t p t ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Results and Ablations</head><p>In this section, we ablate the changes we have made to achieve better log-likelihoods. Table <ref type="table" target="#tab_0">1</ref> summarizes the results of our ablations on ImageNet 64 × 64, and Table <ref type="table" target="#tab_1">2</ref> shows them for CIFAR-10. We also trained our best Ima-geNet 64 × 64 models for 1.5M iterations, and report these results as well. L vlb and L hybrid were trained with learned sigmas using the parameterization from Section 3.1. For L vlb , we used the resampling scheme from Section 3.3.</p><p>Based on our ablations, using L hybrid and our cosine schedule improves log-likelihood while keeping similar FID as the baseline from <ref type="bibr" target="#b12">Ho et al. (2020)</ref>. Optimizing L vlb further improves log-likelihood at the cost of a higher FID. We generally prefer to use L hybrid over L vlb as it gives a boost in likelihood without sacrificing sample quality.</p><p>In Table <ref type="table" target="#tab_2">3</ref> we compare our best likelihood models against prior work, showing that these models are competitive with the best conventional methods in terms of log-likelihood.  <ref type="bibr" target="#b11">(Ho et al., 2019)</ref> 3.69 3.08 PixelCNN (van den <ref type="bibr" target="#b38">Oord et al., 2016c)</ref> 3.57 3.14 SPN <ref type="bibr" target="#b23">(Menick &amp; Kalchbrenner, 2018)</ref> 3.52 -NVAE <ref type="bibr" target="#b35">(Vahdat &amp; Kautz, 2020)</ref> -2.91 Very Deep VAE <ref type="bibr" target="#b5">(Child, 2020)</ref> 3.52 2.87 PixelSNAIL <ref type="bibr" target="#b4">(Chen et al., 2018)</ref> 3.52 2.85 Image Transformer <ref type="bibr" target="#b24">(Parmar et al., 2018)</ref> 3.48 2.90 Sparse Transformer <ref type="bibr" target="#b6">(Child et al., 2019)</ref> 3.44 2.80 Routing Transformer <ref type="bibr" target="#b27">(Roy et al., 2020)</ref> 3.43 -DDPM <ref type="bibr" target="#b12">(Ho et al., 2020)</ref> 3.77 3.70 DDPM (cont flow) <ref type="bibr" target="#b34">(Song et al., 2020b)</ref> -2.99 Improved DDPM (ours)</p><p>3.53 2.94</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Improving Sampling Speed</head><p>All of our models were trained with 4000 diffusion steps, and thus producing a single sample takes several minutes on a modern GPU. In this section, we explore how performance scales if we reduce the steps used during sampling, and find that our pre-trained L hybrid models can produce high-quality samples with many fewer diffusion steps than they were trained with (without any fine-tuning). Reducing the steps in this way makes it possible to sample from our models in a number of seconds rather than minutes, and greatly improves the practical applicability of image DDPMs.</p><p>For a model trained with T diffusion steps, we would typically sample using the same sequence of t values (1, 2, ..., T ) as used during training. However, it is also possible to sample using an arbitrary subsequence S of t values. Given the training noise schedule ᾱt , for a given sequence S we can obtain the sampling noise schedule ᾱSt , which can be then used to obtain corresponding sampling variances</p><formula xml:id="formula_14">β St = 1 − ᾱSt ᾱSt−1 , βSt = 1 − ᾱSt−1 1 − ᾱSt β St (19)</formula><p>Now, since Σ θ (x St , S t ) is parameterized as a range between β St and βSt , it will automatically be rescaled for the shorter diffusion process. We can thus compute p(</p><formula xml:id="formula_15">x St−1 |x St ) as N (µ θ (x St , S t ), Σ θ (x St , S t )).</formula><p>To reduce the number of sampling steps from T to K, we use K evenly spaced real numbers between 1 and T (inclusive), and then round each resulting number to the nearest integer. In Figure <ref type="figure" target="#fig_5">8</ref>  steps, using 25, 50, 100, 200, 400, 1000, and 4000 sampling steps. We do this for both a fully-trained checkpoint, and a checkpoint mid-way through training. For CIFAR-10 we used 200K and 500K training iterations, and for ImageNet-64 we used 500K and 1500K training iterations. We find that the L simple models with fixed sigmas (with both the larger σ 2 t = β t and the smaller σ 2 t = βt ) suffer much more in sample quality when using a reduced number of sampling steps, whereas our L hybrid model with learnt sigmas maintains high sample quality. With this model, 100 sampling steps is sufficient to achieve near-optimal FIDs for our fully trained models.</p><p>Parallel to our work, <ref type="bibr" target="#b31">Song et al. (2020a)</ref> propose a fast sampling algorithm for DDPMs by producing a new implicit model that has the same marginal noise distributions, but deterministically maps noise to images. We include their algorithm, DDIM, in Figure <ref type="figure" target="#fig_5">8</ref>, finding that DDIM produces better samples with fewer than 50 sampling steps, but worse samples when using 50 or more steps. Interestingly, DDIM performs worse at the start of training, but closes the gap to other samplers as training continues. We found that our striding technique drastically reduced performance of DDIM, so our DDIM results instead use the constant strid-  <ref type="bibr" target="#b21">(Kynkäänniemi et al., 2019)</ref> are measured using Inception-V3 features and K = 5. We trained BigGAN-deep for 125K iterations, and did not use truncation for sampling to maximize recall for the GAN. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Comparison to GANs</head><p>While likelihood is a good proxy for mode-coverage, it is difficult to compare to GANs with this metric. Instead, we turn to precision and recall <ref type="bibr" target="#b21">(Kynkäänniemi et al., 2019)</ref>. Since it is common in the GAN literature to train classconditional models, we do the same for this experiment.</p><p>To make our models class-conditional, we inject class information through the same pathway as the timestep t. In particular, we add a class embedding v i to the timestep embedding e t , and pass this embedding to residual blocks 1 We additionally tried the quadratic stride from <ref type="bibr" target="#b31">Song et al. (2020a)</ref>, but found that it hurt sample quality when combined with our cosine schedule. throughout the model. We train using the L hybrid objective and use 250 sampling steps. We train two models: a "small" model with 100M parameters for 1.7M training steps, and a larger model with 270 million parameters for 250K iterations. We train one BigGAN-deep model with 100M parameters across the generator and discriminator.</p><p>When computing metrics for this task, we generated 50K samples (rather than 10K) to be directly comparable to other works.<ref type="foot" target="#foot_0">2</ref> This is the only ImageNet 64 × 64 FID we report that was computed using 50K samples. For FID, the reference distribution features were computed over the full training set, following <ref type="bibr" target="#b0">(Brock et al., 2018)</ref>.</p><p>Figure <ref type="figure" target="#fig_6">9</ref> shows our samples from the larger model, and Table <ref type="table" target="#tab_4">4</ref> summarizes our results. We find that BigGANdeep outperforms our smaller model in terms of FID, but struggles in terms of recall. This suggests that diffusion models are better at covering the modes of the distribution than comparable GANs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Scaling Model Size</head><p>In the previous sections, we showed algorithmic changes that improved log-likelihood and FID without changing the amount of training compute. However, a trend in modern machine learning is that larger models and more training time tend to improve model performance <ref type="bibr" target="#b15">(Kaplan et al., 2020;</ref><ref type="bibr" target="#b2">Chen et al., 2020a;</ref><ref type="bibr" target="#b1">Brown et al., 2020)</ref>. Given this observation, we investigate how FID and NLL scale as a function of training compute. Our results, while preliminary, suggest that DDPMs improve in a predictable way as training compute increases.</p><p>To measure how performance scales with training compute, we train four different models on ImageNet 64 × 64 with the L hybrid objective described in Section 3.1. To change model capacity, we apply a depth multiplier across all layers, such that the first layer has either 64, 96, 128, or 192 channels. Note that our previous experiments used 128 channels in the first layer. Since the depth of each layer affects the scale of the initial weights, we scale the Adam <ref type="bibr" target="#b16">(Kingma &amp; Ba, 2014)</ref> learning rate for each model by 1/ √ channel multiplier, such that the 128 channel model has a learning rate of 0.0001 (as in our other experiments).</p><p>Figure <ref type="figure" target="#fig_8">10</ref> shows how FID and NLL improve relative to theoretical training compute. <ref type="foot" target="#foot_1">3</ref> The FID curve looks approximately linear on a log-log plot, suggesting that FID scales according to a power law (plotted as the black dashed line). The NLL curve does not fit a power law as cleanly, suggesting that validation NLL scales in a less-favorable manner  The constant for the FID trend line was approximated using the FID of in-distribution data. For the NLL trend line, the constant was approximated by rounding down the current state-of-the-art NLL <ref type="bibr" target="#b27">(Roy et al., 2020)</ref> on this dataset.</p><p>than FID. This could be caused by a variety of factors, such as 1) an unexpectedly high irreducible loss <ref type="bibr" target="#b9">(Henighan et al., 2020)</ref> for this type of diffusion model, or 2) the model overfitting to the training distribution. We also note that these models do not achieve optimal log-likelihoods in general because they were trained with our L hybrid objective and not directly with L vlb to keep both good log-likelihoods and sample quality.  <ref type="formula">2020b</ref>) use a combination of improved schedule and L 1 loss to allow sampling with fewer steps with very little reduction in sample quality. However, compared to our unconditional image generation task, their generative task has a strong input conditioning signal provided by the melspectrograms, and we hypothesize that this makes it easier to sample with fewer diffusion steps. <ref type="bibr" target="#b14">Jolicoeur-Martineau et al. (2020)</ref> explored score matching in the image domain, and constructed an adversarial training objective to produce better x 0 predictions. However, they found that choosing a better network architecture removed the need for this adversarial objective, suggesting that the adversarial objective is not necessary for powerful generative modeling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Related Work</head><p>Parallel to our work, <ref type="bibr" target="#b31">Song et al. (2020a)</ref> and <ref type="bibr" target="#b34">Song et al. (2020b)</ref> propose fast sampling algorithms for models trained with the DDPM objective by leveraging different sampling processes. <ref type="bibr" target="#b31">Song et al. (2020a)</ref> does this by deriving an implicit generative model that has the same marginal noise distributions as DDPMs while deterministically mapping noise to images. <ref type="bibr" target="#b34">Song et al. (2020b)</ref> model the diffusion process as the discretization of a continuous SDE, and observe that there exists an ODE that corresponds to sampling from the reverse SDE. By varying the numerical precision of an ODE solver, they can sample with fewer function evaluations. However, they note that this technique obtains worse samples than ancestral sampling when used directly, and only achieves better FID when combined with Langevin corrector steps. This in turn requires hand-tuning of a signalto-noise ratio for the Langevin steps. Our method allows fast sampling directly from the ancestral process, which removes the need for extra hyperparameters. Also in parallel, <ref type="bibr" target="#b7">Gao et al. (2020)</ref> develops a diffusion model with reverse diffusion steps modeled by an energy-based model. A potential implication of this approach is that fewer diffusion steps should be needed to achieve good samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusion</head><p>We have shown that, with a few modifications, DDPMs can sample much faster and achieve better log-likelihoods with little impact on sample quality. The likelihood is improved by learning Σ θ using our parameterization and L hybrid objective. This brings the likelihood of these models much closer to other likelihood-based models. We surprisingly discover that this change also allows sampling from these models with many fewer steps.</p><p>We have also found that DDPMs can match the sample quality of GANs while achieving much better mode coverage as measured by recall. Furthermore, we have investigated how DDPMs scale with the amount of available training compute, and found that more training compute trivially leads to better sample quality and log-likelihood.</p><p>The combination of these results makes DDPMs an attractive choice for generative modeling, since they combine good log-likelihoods, high-quality samples, and reasonably fast sampling with a well-grounded, stationary training objective that scales easily with training compute. These results indicate that DDPMs are a promising direction for future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Hyperparameters</head><p>For all of our experiments, we use a UNet model architecture<ref type="foot" target="#foot_2">4</ref> similar to that used by <ref type="bibr" target="#b12">Ho et al. (2020)</ref>. We changed the attention layers to use multi-head attention <ref type="bibr" target="#b39">(Vaswani et al., 2017)</ref>, and opted to use four attention heads rather than one (while keeping the same total number of channels). We employ attention not only at the 16x16 resolution, but also at the 8x8 resolution. Additionally, we changed the way the model conditions on t. In particular, instead of computing a conditioning vector v and injecting it into hidden state h as GroupNorm(h + v), we compute conditioning vectors w and b and inject them into the hidden state as GroupNorm(h)(w + 1) + b. We found in preliminary experiments on ImageNet 64 × 64 that these modifications slightly improved FID.</p><p>For ImageNet 64 × 64 the architecture we use is described as follows. The downsampling stack performs four steps of downsampling, each with three residual blocks <ref type="bibr" target="#b8">(He et al., 2015)</ref>. The upsampling stack is setup as a mirror image of the downsampling stack. From highest to lowest resolution, the UNet stages use [C, 2C, 3C, 4C] channels, respectively. In our ImageNet 64 × 64 ablations, we set C = 128, but we experiment with scaling C in a later section. We estimate that, with C = 128, our model is comprised of 120M parameters and requires roughly 39 billion FLOPs in the forward pass.</p><p>For our CIFAR-10 experiments, we use a smaller model with three resblocks per downsampling stage and layer widths [C, 2C, 2C, 2C] with C = 128. We swept over dropout values {0.1, 0.2, 0.3} and found that 0.1 worked best for the linear schedule while 0.3 worked best for our cosine schedule. We expand upon this in Section F.</p><p>We use Adam <ref type="bibr" target="#b16">(Kingma &amp; Ba, 2014)</ref> for all of our experiments. For most experiments, we use a batch size of 128, a learning rate of 10 −4 , and an exponential moving average (EMA) over model parameters with a rate of 0.9999. For our scaling experiments, we vary the learning rate to accomodate for different model sizes. For our larger classconditional ImageNet 64 × 64 experiments, we scaled up the batch size to 2048 for faster training on more GPUs.</p><p>When using the linear noise schedule from <ref type="bibr" target="#b12">Ho et al. (2020)</ref>, we linearly interpolate from β 1 = 0.0001/4 to β 4000 = 0.02/4 to preserve the shape of ᾱt for the T = 4000 schedule.</p><p>When computing FID we produce 50K samples from our models, except for unconditional ImageNet 64 × 64 where we produce 10K samples. Using only 10K samples biases the FID to be higher, but requires much less compute for sampling and helps do large ablations. Since we mainly use FID for relative comparisons on unconditional ImageNet 64 × 64, this bias is acceptable. For computing the reference distribution statistics we follow prior work <ref type="bibr" target="#b12">(Ho et al., 2020;</ref><ref type="bibr" target="#b0">Brock et al., 2018)</ref> and use the full training set for CIFAR-10 and ImageNet, and 50K training samples for LSUN. Note that unconditional ImageNet 64 × 64 models are trained and evaluated using the official ImageNet-64 dataset <ref type="bibr" target="#b36">(van den Oord et al., 2016a)</ref>, whereas for class conditional ImageNet 64 × 64 and 256 × 256 we center crop and area downsample images <ref type="bibr" target="#b0">(Brock et al., 2018)</ref>  To test the effectiveness of our L hybrid models on a highresolution domain, we trained both L hybrid and L simple models on the LSUN bedroom <ref type="bibr" target="#b40">(Yu et al., 2015)</ref> dataset. We train two models: one with batch size 64 and learning rate 2 × 10 −5 as in <ref type="bibr" target="#b12">Ho et al. (2020)</ref>, and another with a larger batch size 128 and learning rate 10 −4 . All models were trained with 153.6M examples, which is 2.4M training iterations with batch size 64.</p><p>Our results are displayed in Figure <ref type="figure" target="#fig_10">11</ref>. We find that DDIM outperforms our L hybrid model when using fewer than 50 diffusion steps, while our L hybrid model outperforms DDIM with more than 50 diffusion steps. Interestingly, we note that DDIM benefits from a smaller learning rate and batch size, whereas our method is able to take advantage of a larger learning rate and batch size. 12.3 BigGAN <ref type="bibr" target="#b0">(Brock et al., 2018)</ref> 7.7 BigGAN-deep <ref type="bibr" target="#b0">(Brock et al., 2018)</ref> 7.0   To understand the trade-off between L hybrid and L vlb , we show in Figure <ref type="figure" target="#fig_0">13</ref> that the model resulting from L vlb (referred to as θ vlb ) is better at the start and end of the diffusion process, while the model resulting from L hybrid to as θ hybrid ) is better throughout the middle of the diffusion process. This suggests that θ vlb is focusing more on imperceptible details, hence the lower sample quality.</p><p>Given the above observation, we performed an experiment on ImageNet 64 × 64 to combine the two models by constructing an ensemble that uses θ hybrid for t ∈ [100, T −100) and θ vlb elsewhere. We found that this model achieved an FID of 19.9 and an NLL of 3.52 bits/dim. This is only slightly worse than θ hybrid in terms of FID, while being better than both models in terms of NLL.  Figures 15 plots negative log-likelihood as a function of number of sampling steps for both ImageNet 64 × 64 and CIFAR-10. In initial experiments, we found that although constant striding did not significantly affect FID, it drastically reduced log-likelihood. To address this, we use a strided subset of timesteps as for FID, but we also include every t from 1 to T /K. This requires T /K extra evaluation steps, but greatly improves log-likelihood compared to the uniformly strided schedule. We did not attempt to calculate NLL using DDIM, since <ref type="bibr" target="#b31">Song et al. (2020a)</ref> does not present NLL results or a simple way of estimating likelihood under DDIM. On CIFAR-10, we noticed all models overfit, but tended to reach similar optimal FID at some point during training. Holding dropout constant, we found that models trained with our cosine schedule tended to reach optimal performance (and then overfit) more quickly than those trained with the linear schedule (Figure <ref type="figure" target="#fig_15">16</ref>). In our experiments, we corrected for this difference by using more dropout for our cosine models than the linear models. We suspect that the overfitting from the cosine schedule is either due to 1) less noise in the cosine schedule providing less regularization, or 2) the cosine schedule making optimization, and thus overfitting, easier. Like on CIFAR-10, we surprisingly observed overfitting on class-conditional ImageNet 64 × 64, despite it being a much larger and more diverse dataset. The main observable result of this overfitting was that FID started becoming worse over the course of training. We initially tried a sweep (Figure <ref type="figure" target="#fig_16">17</ref>) over the EMA hyperparameter to make sure it was well tuned, and found that 0.9999 and 0.99995 worked best. We then tried runs with dropout 0.1 and 0.3, and found that models with a small amount of dropout improved the best attainable FID but took longer to get to the same performance and still eventually overfit. We concluded that the best way to train, given what we know, is to early stop and instead increase model size if we want to use additional training compute.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. Early stopping for FID</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>H. Samples with Varying Steps and Objectives</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure1. The ratio βt/βt for every diffusion step for diffusion processes of different lengths.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Terms of the VLB vs diffusion step. The first few terms contribute most to NLL.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .Figure 4 .</head><label>34</label><figDesc>Figure 3. Latent samples from linear (top) and cosine (bottom) schedules respectively at linearly spaced values of t from 0 to T . The latents in the last quarter of the linear schedule are almost purely noise, whereas the cosine schedule adds noise more slowly</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. ᾱt throughout diffusion in the linear schedule and our proposed cosine schedule.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 .Figure 7 .</head><label>67</label><figDesc>Figure 6. Learning curves comparing the log-likelihoods achieved by different objectives on ImageNet 64 × 64.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIDFigure 8 .</head><label>8</label><figDesc>Figure 8. FID versus number of sampling steps, for models trained on ImageNet 64 × 64 (top) and CIFAR-10 (bottom). All models were trained with 4000 diffusion steps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 .</head><label>9</label><figDesc>Figure 9. Class-conditional ImageNet 64 × 64 samples generated using 250 sampling steps from Lhybrid model (FID 2.92). The classes are 9: ostrich, 11: goldfinch, 130: flamingo, 141: redshank, 154: pekinese, 157: papillon, 97: drake and 28: spotted salamander. We see that there is a high diversity in each class, suggesting good coverage of the target distribution</figDesc><graphic url="image-2.png" coords="7,78.84,207.35,187.20,187.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 .</head><label>10</label><figDesc>Figure10. FID and validation NLL throughout training on Im-ageNet 64 × 64 for different model sizes. The constant for the FID trend line was approximated using the FID of in-distribution data. For the NLL trend line, the constant was approximated by rounding down the current state-of-the-art NLL<ref type="bibr" target="#b27">(Roy et al., 2020)</ref> on this dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc><ref type="bibr" target="#b3">Chen et al. (2020b)</ref> and<ref type="bibr" target="#b19">Kong et al. (2020)</ref> are two recent works that use DDPMs to produce high fidelity audio conditioned on mel-spectrograms. Concurrent to our work,Chen  et al. (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>FIDFigure 11 .</head><label>11</label><figDesc>Figure 11. FID vs. number of sampling steps from an LSUN 256 × 256 bedroom model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>C</head><label></label><figDesc>. Sample Quality on ImageNet 256 × 256 We trained two models on class conditional ImageNet 256 × 256. The first is a usual diffusion model that directly models the 256 × 256 images. The second model reduces compute by chaining a pretrained 64 × 64 model p(x 64 |y) with another upsampling diffusion model p(x 256 |x 64 , y) to upsample images to 256 × 256. For the upsampling model, the downsampled image x 64 is passed as extra conditioning input to the UNet. This is similar to VQ-VAE-2 (Razavi et al., 2019), which uses two stages of priors at different latent resolutions to more efficiently learn global and local features. The linear schedule worked better for 256 × 256 images, so we used that for these results. Table 5 summarizes our results. For VQ-VAE-2, we use the FIDs reported in (Ravuri &amp; Vinyals, 2019). Diffusion models still obtain the best FIDs for a likelihood-based model, and close the gap to GANs considerably. MODEL FID VQ-VAE-2 ((Razavi et al., 2019), two-stage) 38.1 Improved Diffusion (ours, single-stage) 31.5 Improved Diffusion (ours, two-stage)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 12 .Figure 13 .</head><label>1213</label><figDesc>Figure 12. Random samples from two-stage class conditional Im-ageNet 256 × 256 model. On top are random samples from the 64 × 64 model (FID 2.92), whereas on bottom are the results after upsampling them to 256 × 256 (FID 12.3). Each model uses 250 sampling steps.</figDesc><graphic url="image-4.png" coords="12,307.44,309.26,233.99,233.99" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 14 .</head><label>14</label><figDesc>Figure14. Samples from θvlb and θhybrid, as well as an ensemble produced by using θvlb for the first and last 100 diffusion steps. For these samples, the seed was fixed, allowing a comparison between models.</figDesc><graphic url="image-5.png" coords="13,55.44,311.82,234.00,99.06" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 15 .</head><label>15</label><figDesc>Figure 15. NLL versus number of evaluation steps, for models trained on ImageNet 64 × 64 (top) and CIFAR-10 (bottom). All models were trained with 4000 diffusion steps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>FFigure 16 .</head><label>16</label><figDesc>Figure16. FID (top) and NLL (bottom) over the course of training for two CIFAR-10 models, both with dropout 0.1. The model trained with the linear schedule learns more slowly, but does not overfit as quickly. When too much overfitting occurs, we observed overfitting artifacts similar to those from<ref type="bibr" target="#b29">Salimans et al. (2017)</ref>, which is reflected by increasing FID.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 17 .</head><label>17</label><figDesc>Figure 17. A sweep of dropout and EMA hyperparameters on class conditional ImageNet-64.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figures</head><label></label><figDesc>Figures 18 through 23 show unconditional ImageNet 64 × 64 samples as we reduce number of sampling steps for an L hybrid model with 4K diffusion steps trained for 1.5M training iterations. Figures 24 through 29 show unconditional CIFAR-10 samples as we reduce number of sampling steps for an L hybrid model with 4K diffusion steps trained for 500K training iterations. Figures 30 and 31 highlight the difference in sample quality between models trained with L hybrid and L vlb .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 18 .</head><label>18</label><figDesc>Figure 18. 50 sampling steps on unconditional ImageNet 64 × 64</figDesc><graphic url="image-6.png" coords="15,81.18,67.06,182.52,182.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 24 .Figure 30 .</head><label>2430</label><figDesc>Figure 24. 50 sampling steps on unconditional CIFAR-10</figDesc><graphic url="image-12.png" coords="16,81.18,67.06,182.52,182.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Figure 31 .</head><label>31</label><figDesc>Figure 31. Unconditional CIFAR-10 samples generated from Lhybrid (top) and Lvlb (bottom) models using the exact same random noise. Both models were trained for 500K iterations.</figDesc><graphic url="image-21.png" coords="17,333.18,373.68,182.52,182.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>] is unknown beforehand and may change throughout training, we maintain a history of the previous 10 values for each loss term, and update this dynamically during training. At the beginning of training, we sample t Ablating schedule and objective on ImageNet 64 × 64.</figDesc><table><row><cell>where p t ∝ E[L 2 t ] and</cell><cell>p t = 1</cell></row><row><cell></cell><cell>(18)</cell></row><row><cell>Since E[L 2 t</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Ablating schedule and objective on CIFAR-10.</figDesc><table><row><cell>Iters</cell><cell>T</cell><cell cols="4">Schedule Objective NLL FID</cell></row><row><cell cols="2">500K 1K</cell><cell>linear</cell><cell>Lsimple</cell><cell>3.73</cell><cell>3.29</cell></row><row><cell cols="2">500K 4K</cell><cell>linear</cell><cell>Lsimple</cell><cell>3.37</cell><cell>2.90</cell></row><row><cell cols="2">500K 4K</cell><cell>linear</cell><cell>Lhybrid</cell><cell>3.26</cell><cell>3.07</cell></row><row><cell cols="2">500K 4K</cell><cell>cosine</cell><cell>Lsimple</cell><cell>3.26</cell><cell>3.05</cell></row><row><cell cols="2">500K 4K</cell><cell>cosine</cell><cell>Lhybrid</cell><cell>3.17</cell><cell>3.19</cell></row><row><cell cols="2">500K 4K</cell><cell>cosine</cell><cell>Lvlb</cell><cell>2.94</cell><cell>11.47</cell></row></table><note>uniformly until we draw 10 samples for every t ∈ [0, T − 1].</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>Comparison of DDPMs to other likelihood-based models on CIFAR-10 and Unconditional ImageNet 64 × 64. NLL is reported in bits/dim. On ImageNet 64 × 64, our model is competitive with the best convolutional models, but is worse than fully transformer-based architectures.</figDesc><table><row><cell>Model</cell><cell cols="2">ImageNet CIFAR</cell></row><row><cell>Glow (Kingma &amp; Dhariwal, 2018)</cell><cell>3.81</cell><cell>3.35</cell></row><row><cell>Flow++</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>, we evaluate FIDs for an L hybrid model and an L simple model that were trained with 4000 diffusion</figDesc><table><row><cell cols="2">Lsimple (σ 2 t = βt, mid-training)</cell><cell cols="2">Lsimple (̃̃IM, mid-training)</cell></row><row><cell cols="2">Lsimple (σ 2 t = βt, fully trained) Lsimple (σ 2 t = β t, mid-training) Lsimple (σ 2 t = β t, fully trained)</cell><cell cols="2">Lsimple (̃̃IM, fully trained) Lhybrid (ours, mid-training) Lhybrid (ours, fully trained)</cell></row><row><cell>10 2</cell><cell cols="2">sampling steps</cell><cell>10 3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 .</head><label>4</label><figDesc>Sample quality comparison on class-conditional Ima-geNet 64 × 64. Precision and recall</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>.</figDesc><table><row><cell cols="2">B. Fast Sampling on LSUN 256 × 256</cell></row><row><cell>Lsimple (σ 2 t = βt, batch=64, lr=2e-5)</cell><cell>Lsimple (̃̃IM, batch=64, lr=2e-5)</cell></row><row><cell>Lsimple (σ 2 t = βt, batch=128, lr=1e-4) Lsimple (σ 2 t = β t, batch=64, lr=2e-5) Lsimple (σ 2 t = β t, batch=128, lr=1e-4)</cell><cell>Lsimple (̃̃IM, batch=128, lr=1e-4) Lhybrid (batch=64, lr=2e-5) Lhybrid (batch=128, lr=1e-4)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 5 .</head><label>5</label><figDesc>Sample</figDesc><table /><note>quality comparison on class conditional Ima-geNet 256 × 256. BigGAN FIDs are reported for the truncation that results in the best FID.</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0">We found that using more samples led to a decrease in estimated FID of roughly 2 points.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1">3 The x-axis assumes full hardware utilization</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_2">In initial experiments, we found that a ResNet-style architecture with no downsampling achieved better log-likelihoods but worse FIDs than the UNet architecture.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Large scale gan training for high fidelity natural image synthesis</title>
		<author>
			<persName><forename type="first">A</forename><surname>Brock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Donahue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Simonyan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1809.11096</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Language models are few-shot learners</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">B</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ryder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Subbiah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Neelakantan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shyam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sastry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Askell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Herbert-Voss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Krueger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Henighan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ramesh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Winter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hesse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Sigler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Litwin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Berner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mccandlish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amodei</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Luan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<ptr target="https://cdn.openai.com/papers/Generative_Pretraining_from_Pixels_V2.pdf" />
		<title level="m">Generative pretraining from pixels</title>
				<imprint>
			<date type="published" when="2020">2020a</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Norouzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><surname>Wavegrad</surname></persName>
		</author>
		<title level="m">Estimating gradients for waveform generation</title>
				<imprint>
			<date type="published" when="2020">2020b</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Pixelsnail: An improved autoregressive generative model</title>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rohaninejad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
				<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="864" to="872" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Very deep vaes generalize autoregressive models and can outperform them on images</title>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2011.10650</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Generating long sequences with sparse transformers</title>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Learning energy-based models by diffusion recovery likelihood</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Poole</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">N</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Deep residual learning for image recognition</title>
		<author>
			<persName><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Scaling laws for autoregressive generative modeling</title>
		<author>
			<persName><forename type="first">T</forename><surname>Henighan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hesse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jackson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">B</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hallacy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ramesh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ryder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amodei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mc-Candlish</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Gans trained by a two time-scale update rule converge to a local nash equilibrium</title>
		<author>
			<persName><forename type="first">M</forename><surname>Heusel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ramsauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Unterthiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Nessler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hochreiter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in Neural Information Processing Systems</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Improving flow-based generative models with variational dequantization and architecture design</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Srinivas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName><surname>Flow++</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1902.00275</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Denoising diffusion probamodels</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Estimation of non-normalized statistical models by score matching</title>
		<author>
			<persName><forename type="first">A</forename><surname>Hyvärinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="695" to="709" />
			<date type="published" when="2005-04">Apr. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Adversarial score matching and improved sampling for image generation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jolicoeur-Martineau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Piché-Taillefer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">T</forename><surname>Des Combes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mitliagkas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Scaling laws for neural language models</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mccandlish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Henighan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">B</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amodei</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">A method for stochastic optimization</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName><surname>Adam</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Glow: Generative flow with invertible 1x1 convolutions</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="10215" to="10224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Auto-encoding variational bayes</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Welling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Diffwave: A versatile diffusion model for audio synthesis</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Ping</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Catanzaro</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Learning multiple layers of features from tiny images</title>
		<author>
			<persName><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<ptr target="http://www.cs.toronto.edu/˜kriz/learning-features-2009-TR.pdf" />
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Improved precision and recall metric for assessing generative models</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kynkäänniemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Karras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Laine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lehtinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aila</forename></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">An empirical model of large-batch training</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mccandlish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amodei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">D</forename><surname>Team</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Generating high fidelity images with subscale pixel networks and multidimensional upscaling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Menick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">N</forename><surname>Parmar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vaswani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Uszkoreit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ł</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shazeer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ku</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tran</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.05751</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">Image transformer. arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Classification accuracy score for conditional generative models</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ravuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1905.10887</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Generating diverse high-fidelity images with vq-vae-2</title>
		<author>
			<persName><forename type="first">A</forename><surname>Razavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Efficient content-based sparse attention with routing transformers</title>
		<author>
			<persName><forename type="first">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Saffar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vaswani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Grangier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zaremba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<title level="m">Improved techniques for training gans</title>
				<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Pix-elcnn++: Improving the pixelcnn with discretized logistic mixture likelihood and other modifications</title>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karpathy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Deep unsupervised learning using nonequilibrium thermodynamics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sohl-Dickstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Maheswaranathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ganguli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Denoising diffusion implicit models</title>
		<author>
			<persName><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ermon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020a</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Generative modeling by estimating gradients of the data distribution</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ermon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="11918" to="11930" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Improved techniques for training score-based generative models</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ermon</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2006.09011</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Score-based generative modeling through stochastic differential equations</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sohl-Dickstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ermon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Poole</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020b</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Vahdat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kautz</surname></persName>
		</author>
		<author>
			<persName><surname>Nvae</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2007.03898</idno>
		<title level="m">A deep hierarchical variational autoencoder</title>
				<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Pixel recurrent neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016a</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Conditional image generation with pixelcnn decoders</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Espeholt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<ptr target="http://image-net.org/small/download.php" />
		<imprint>
			<date type="published" when="2016">2016b</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Conditional image generation with pixelcnn decoders</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Espeholt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016c</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Attention is all you need</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vaswani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shazeer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Parmar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Uszkoreit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Gomez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Polosukhin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Construction of a large-scale image dataset using deep learning with humans in the loop</title>
		<author>
			<persName><forename type="first">F</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Seff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><surname>Lsun</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
