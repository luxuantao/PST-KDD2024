<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Genetic algorithm-based subproblem solution procedures for a modified shifting bottleneck heuristic for complex job shops</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2006-02-02">2 February 2006</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Lars</forename><surname>Mo Â¨nch</surname></persName>
							<email>lars.moench@tu-ilmenau.de</email>
							<affiliation key="aff0">
								<orgName type="department">Institute of Information Systems</orgName>
								<orgName type="institution">Technical University of Ilmenau</orgName>
								<address>
									<postCode>98684</postCode>
									<settlement>Ilmenau</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rene</forename><surname>Schabacker</surname></persName>
							<email>rene.schabacker@tu-ilmenau.de</email>
							<affiliation key="aff0">
								<orgName type="department">Institute of Information Systems</orgName>
								<orgName type="institution">Technical University of Ilmenau</orgName>
								<address>
									<postCode>98684</postCode>
									<settlement>Ilmenau</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Detlef</forename><surname>Pabst</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Industrial Engineering</orgName>
								<orgName type="institution">Arizona State University</orgName>
								<address>
									<postCode>85287</postCode>
									<settlement>Tempe</settlement>
									<region>AZ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">John</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
							<email>john.fowler@asu.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Industrial Engineering</orgName>
								<orgName type="institution">Arizona State University</orgName>
								<address>
									<postCode>85287</postCode>
									<settlement>Tempe</settlement>
									<region>AZ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Genetic algorithm-based subproblem solution procedures for a modified shifting bottleneck heuristic for complex job shops</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2006-02-02">2 February 2006</date>
						</imprint>
					</monogr>
					<idno type="MD5">0DC38FC0CB8FC782B9D1ADF2A35F1A68</idno>
					<idno type="DOI">10.1016/j.ejor.2005.12.020</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:00+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Scheduling</term>
					<term>Genetic algorithms</term>
					<term>Complex job shops</term>
					<term>Shifting bottleneck heuristic</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we consider a modified shifting bottleneck heuristic for complex job shops. The considered job shop environment contains parallel batching machines, machines with sequence-dependent setup times and reentrant process flows. Semiconductor wafer fabrication facilities (Wafer Fabs) are typical examples for manufacturing systems with these characteristics. Our primary performance measure is total weighted tardiness (TWT). The shifting bottleneck heuristic uses a disjunctive graph to decompose the overall scheduling into scheduling problems for single tool groups. The scheduling algorithms for these scheduling problems are called subproblem solution procedures (SSPs). In previous research, only subproblem solution procedures based on dispatching rules have been considered. In this paper, we are interested in how much we can gain in terms of TWT if we apply more sophisticated subproblem solution procedures like genetic algorithms for parallel machine scheduling. We conduct simulation experiments in a dynamic job shop environment in order to assess the performance of the suggested subproblem solution procedures. It turns out that using near to optimal subproblem solution procedures leads in many situations to improved results compared to dispatching-based subproblem solution procedures.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The manufacturing of integrated circuits (IC) on silicon wafers is a production process of extremely large complexity (cf. <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b27">28]</ref>). Between 250 and 500 process steps on 50-120 different types of equipment are required to produce a chip of average complexity. A mix of different process types, i.e. batch processes and single wafer processes, sequence-dependent setup times, very expensive equipment and reentrant flows are typical for this type of production. Semiconductor wafer fabrication facilities are examples for complex job shops as introduced by Mason et al. <ref type="bibr" target="#b14">[15]</ref>. The production of application specific integrated circuits (ASIC) is additionally characterized by a wide and over time changing range of product types and the demand to achieve good delivery performance. A single product moves through the wafer fab in lots (jobs). Each lot consists of several (usually 24) wafers. The circuits are made up of layers. The recursive nature of the process flows is one of the main sources of difficulty in planning, scheduling, and controlling wafer fabs.</p><p>As indicated in <ref type="bibr" target="#b27">[28]</ref>, today it seems that better operational strategies are the main key in order to reduce costs and improve overall efficiency. New planning, scheduling and dispatching methods are required in order to reach the goal of better operational performance. The improved software and hardware capabilities have to be taken into account during the development of more sophisticated algorithms. It is now possible to solve large scale scheduling problems via decomposition methods. The shifting bottleneck heuristic may serve as the prominent example for job shop decomposition approaches. More tractable scheduling (sub) problems are a result of the decomposition approach. It seems to be worthwhile to investigate whether it makes sense to use local search methods or not for these smaller problems. However, so far little is known on using such techniques on the subproblem solution level of the shifting bottleneck heuristic for complex job shops.</p><p>The paper is organized as follows. We discuss related work in Section 2. A modified shifting bottleneck heuristic is very briefly discussed in Section 3. We describe genetic algorithm-based subproblem solution procedures for parallel batch machines in Section 4. In Section 5, we describe the simulation framework used for assessing the performance of the modified shifting bottleneck heuristic with genetic algorithmbased SSPs. We continue with presenting the experimental design and the results of computational experiments in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Previous related work</head><p>The original shifting bottleneck heuristic was developed for the JmkC max -problem <ref type="bibr" target="#b0">[1]</ref>. We use throughout the rest of the paper the ajbjc notation of Graham et al. <ref type="bibr" target="#b10">[11]</ref>. The a field describes the machine environment, the b field is used for specification of the process restrictions. Finally, the c field denotes the used performance measure. Later, the shifting bottleneck heuristic of <ref type="bibr" target="#b0">[1]</ref> was extended to other performance measures like total weighted tardiness (TWT) <ref type="bibr" target="#b24">[25]</ref> and maximum lateness (L max ) <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6]</ref>. The shifting bottleneck heuristic applied to job shops with L max performance measure is described by Demirkol et al. <ref type="bibr" target="#b4">[5]</ref>, where different type of sophisticated subproblem solution procedures are investigated. It turns out that the use of exact approaches like branch and bound leads to a significant improvement over dispatching-based subproblem solution procedures. Ovacik and Uzsoy report in <ref type="bibr" target="#b21">[22]</ref> that the shifting bottleneck heuristic applied to the test area of semiconductor wafer fabrication facilities leads to better results compared to pure dispatching approaches only if neighborhood search is included.</p><p>Mason et al. <ref type="bibr" target="#b14">[15]</ref> present a modified shifting bottleneck for complex job shops. A simulation framework that allows for the performance assessment of the heuristic in a dynamic environment via a rolling horizon approach is developed by Mo Â¨nch et al. <ref type="bibr" target="#b17">[18]</ref>. The results presented in <ref type="bibr" target="#b19">[20]</ref> demonstrate that the modified shifting bottleneck heuristic with dispatching-based subproblem solution procedures clearly outperforms pure dispatching approaches for complex job shops in a dynamic environment. However, so far only dispatching-based subproblem solution procedures have been investigated. In <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b18">19]</ref>, two of the present authors describe efficient solution procedures for the P m jr j ; M j j P w j T j and P m jr j ; batch; incompatiblej P w j T j problems, respectively. The latter scheduling problem is a batching problem for parallel machines with dynamic job arrivals and the total weighted tardiness performance measure. The performance measure total weighted tardiness is defined as P w j T j :Â¼ P w j maxÃ°0; c j Ã d j Ã, where w j denotes the weight, c j the completion time, and d j the due date of job j. This problem is more complex than the single machine problem 1k P w j T j , which is NP-hard by Lawler <ref type="bibr" target="#b12">[13]</ref>. Batching tools allow for simultaneously processing of jobs on the same tool <ref type="bibr" target="#b26">[27]</ref>. Here, jobs can only batched together if they are from the same job family, i.e. we consider incompatible job families. A time window technique is coupled with a genetic algorithm in order to form batches, assign the batches to the machines and sequence the batches on the single machines <ref type="bibr" target="#b18">[19]</ref>. The algorithm in <ref type="bibr" target="#b16">[17]</ref> is based on the idea to use the genetic algorithm (GA) to assign jobs to machines and then to use dispatching rules and local dominance rules in order to determine schedules for each single machine. The paper <ref type="bibr" target="#b9">[10]</ref> describes a genetic algorithm approach to parallel machine scheduling problems that uses the genetic algorithm to assign jobs to machines and then simple dispatching rules to sequence jobs on the machines. A recent comprehensive survey on parallel machine scheduling is presented in <ref type="bibr" target="#b23">[24]</ref>. The usage of simulated annealing for solving parallel machine schedules problems is described in <ref type="bibr" target="#b11">[12]</ref>. Branch and bound approaches combined with dominance rules are applied in <ref type="bibr" target="#b13">[14]</ref> to solve scheduling problems for parallel machines. In principle, several techniques are possible to construct heuristics for specific parallel machine scheduling problems. However, GA-based approaches allow for problem-specific hybridization and therefore may serve as a rather generic framework for a large class of parallel-machine scheduling problems. The third author describes a technique to avoid cycles in the scheduling graph on the subproblem solution level of the modified shifting bottleneck heuristic <ref type="bibr" target="#b22">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Modified shifting bottleneck heuristic</head><p>A modified shifting bottleneck heuristic is described in <ref type="bibr" target="#b14">[15]</ref>. The problem under consideration can be denoted by FJ m jr j ; s jk ; batch; incompatible; recrcj P w j T j . Here, FJ m denotes a flexible job shop <ref type="bibr" target="#b25">[26]</ref> with unequal ready times of the jobs, sequence-dependent setups, batch tool groups and reentrant process flows. Flexible job shops with these properties are called complex job shops in <ref type="bibr" target="#b14">[15]</ref>.</p><p>The main ingredient of the shifting bottleneck heuristic is a disjunctive graph that is used to capture the relations and dependencies between jobs on different tool groups. The nodes of the disjunctive graph represent the processing of operations of the jobs on certain tools or tool groups. Conjunctive arcs between the nodes are used to model the routes of a job. Disjunctive arcs are required in order to represent scheduling decisions among the jobs on a given tool group. The weights of the arcs are given by the processing time of the node that contains the arc as an outgoing arc. If batching tools occur, the graph has to be modified by including artificial batch nodes <ref type="bibr" target="#b14">[15]</ref>.</p><p>The main steps of the shifting bottleneck heuristic can be described as follows <ref type="bibr" target="#b0">[1]</ref>:</p><p>1. Denote the set of all tool groups by M. We use the notation M 0 for the set of tool groups that have already been sequenced or scheduled. Set M 0 :Â¼ Ã, initially. 2. Identify and solve the subproblems for each tool group i 2 M Ã M 0 . 3. Identify a critical tool group k 2 M Ã M 0 . 4. Sequence the critical tool group using the subproblem solution procedure obtained by Step 2. Set M 0 :Â¼ M 0 [ {k} for update purposes. 5. (Optionally) Re-optimize the schedule for each tool group m 2 M 0 Ã k by exploiting the information provided by the newly added disjunctive arcs for tool group k. 6. If M = M 0 , terminate the heuristic. Otherwise, go to Step 2.</p><p>Scheduling methods for the resulting subproblems have to be developed in Step 2. In the case of complex job shops, various process restrictions like batching tools, parallel machines, machine dedication and sequence-dependent setup times have to be taken into account during the development of subproblem solution procedures. Specific criticality measures have to be chosen in Step 3 of the shifting bottleneck heuristic.</p><p>4. Subproblem solution procedures for the modified shifting bottleneck heuristic 4.1. Cycle avoidance strategies on the subproblem solution procedure level Using longest path algorithms in the graph representation, it is possible to assign ready times and due dates to each job that is represented by a node of the disjunctive graph. Hence, it is possible to formulate tool group subproblems in the form P m jr j ; batch; incompatible; s jk j X w j T j .</p><p>During the application of the shifting bottleneck heuristic to complex job shops it turned out that the subproblem formulation based on ready time and due date constraints is not sufficient to find schedules for the subproblems that can be composed to a feasible schedule for the entire job shop. To avoid this behavior, we have to incorporate precedence constraints among the nodes of the subproblems. Therefore, we have to consider subproblems of the type P m jr j ; batch; incompatible; s jk ; precj</p><formula xml:id="formula_1">X w j T j .<label>Ã°2Ã</label></formula><p>Here, we indicate the occurrence of precedence constraints by prec.</p><p>The following availability condition from <ref type="bibr" target="#b22">[23]</ref> for each node at the time of its positioning in the schedule is necessary and sufficient for the avoidance of cycles in the graph of the shifting bottleneck heuristic: either all predecessors of the node are already scheduled or every unscheduled predecessor will not be scheduled on the same tool as the considered node. This statement can be proven by induction over the number of scheduled tool groups <ref type="bibr" target="#b22">[23]</ref>. For the research of this paper, the following statement is important. If the previous availability condition holds for all nodes at their scheduling time, then for each node of a subproblem solution procedure it holds that either all direct predecessors are already scheduled or every unscheduled predecessor will not be scheduled later on the same tool like the considered node. Moreover, as proved in <ref type="bibr" target="#b22">[23]</ref>, the next condition is necessary to avoid errors in the calculation of the availability times of the nodes and sufficient for the avoidance of cycles in the scheduling graph. For each node at the time of its positioning in the schedule it holds: all direct predecessors are already scheduled and completed. Following <ref type="bibr" target="#b22">[23]</ref>, we define a direct precedence relation between two nodes belonging to the same subproblem if each path connecting the related nodes passes only nodes that belong to other subproblems.</p><p>In order to provide the required information for the solution of the subproblems it is necessary to use an algorithm that determines all direct predecessors for a given set of jobs. A coupling with the calculation of the ready times of the operations of the jobs is useful. A depth first search algorithm is suggested by Pabst in order to solve this problem. For the details of the algorithm we refer to <ref type="bibr" target="#b22">[23]</ref>.</p><p>We continue with describing a subproblem solution procedure based on dispatching rules and a more advanced subproblem solution procedure based on genetic algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Description of subproblem solution procedures</head><p>In this paper, we consider in a slightly more general fashion subproblems of type P m jr j ; batch; incompatible; s jk ; M j ; precj</p><formula xml:id="formula_2">X w j T j .<label>Ã°3Ã</label></formula><p>Here, by using the notation M j , we indicate tool dedications, i.e. not all tools of the tool group may be capable of processing job j of a certain product. Note that we also cover the case of non-batching tools by using a maximum batch size equals to one. In this case, batch formation issues are obsolete. We consider a time window (t, t + Dt) in order to take ready times into account. Note that such a time window is typically provided by the scheduling horizon. We denote by MÃ°j; t;</p><formula xml:id="formula_3">DtÃ :Â¼ fijjr ij 6 t Ã¾ Dtg Ã°<label>4Ã</label></formula><p>the set of unscheduled jobs i belonging to family j with arrival time r ij less than the upper boundary of the time window interval. Then we derive the set e M Ã°j; t; Dt; thresÃ :Â¼ fijjij 2 MÃ°j; t; DtÃ and posÃ°ijÃ &lt; thresg: Ã°5Ã Here, we denote by I ij a criterion for evaluating the jobs and by pos(ij) the position of job ij with respect to I ij . By thres we denote the maximum number of jobs of e M Ã°j; t; Dt; thresÃ to be considered. We consider all batch combinations on the job set e M Ã°j; t; Dt; thresÃ. We define c :Â¼ cardÃ° e M Ã°j; t; Dt; thresÃÃ. If c P B (where</p><formula xml:id="formula_4">B is the maximum batch size) then we have to consider c B Ã¾ c B Ã 1 Ã¾ Ã Ã Ã Ã¾ c 1 different batches for</formula><p>the next batch to be formed. Obviously, the computational effort for evaluating all batch combinations depends strongly on the choice of the parameters Dt and thres. Our time window approach that reduces the number of jobs for forming batch combinations is similar to <ref type="bibr" target="#b20">[21]</ref> in a sequence-dependent setup minimization situation and to <ref type="bibr" target="#b3">[4]</ref>.</p><p>We continue with describing a criterion for the calculation of pos(ij). The ATC index I ij,ATC for job i belonging to family j calculated at time t is given below</p><formula xml:id="formula_5">I ij;ATC Ã°tÃ Â¼ w ij p j ! exp Ã Ã°d ij Ã p j Ã¾ Ã°r ij Ã tÃÃ Ã¾ k p ! ;<label>Ã°6Ã</label></formula><p>where w ij weight of job i of family j, p j processing time of family j, d ij due date of job i of family j, r ij release time of job i of family j, t time of decision-making.</p><p>In expression <ref type="bibr" target="#b5">(6)</ref>, k is a look-ahead parameter and p is the average processing time of the remaining unscheduled jobs. We set x + :Â¼ max(x, 0) for abbreviation. We sort the jobs of the set M(j, t, Dt) in a non-increasing order according to I ij,ATC and take the first thres of them in order to form the set e M Ã°j; t; Dt; thresÃ.</p><p>For the evaluation of a given batch combination (b j ) we consider the following priority index:</p><formula xml:id="formula_6">I bj;1 Ã°t; lÃ :Â¼ X n bj iÂ¼1 w ij p j expÃ°ÃfÃ°S ij Ã W bj Ã Ã¾ Ã¾ R bj gÃ exp Ã s bl;bj j 4 s n bj B ;<label>Ã°7Ã</label></formula><p>where we set for abbreviation</p><formula xml:id="formula_7">S ij :Â¼ Ã°d ij Ã p j Ã tÃ Ã¾ j 1 p ; W bj :Â¼ Ã°t Ã r bj Ã Ã¾ j 2 p ; R bj :Â¼ Ã°r bj Ã tÃ Ã¾ j 3 p .</formula><p>We used the following notation: j 1 scaling factor for the slack term S ij , j 2 scaling factor for the waiting time term W ij , j 3 scaling factor for the ready time term R ij , j 4 scaling factor for the setup term, n bj number of jobs contained in batch bj, r bj maximum ready time of the jobs in the batch, B maximum batch size, s bl,bj sequence-dependent set-up time that occurs if the current batch is bj and the previous one is bl, s average set-up time of all possible consecutive batches.</p><p>The rule ( <ref type="formula" target="#formula_6">7</ref>) is motivated by the fact, that if the jobs for a batch to be formed are not available then the priority should be reduced. In the rule, we therefore add the quantity R bj to (S ij Ã W bj ) + . On the other hand, if all jobs are available at time t, then there is no reason for taking the ready time into account.</p><p>As in the original ATC rule <ref type="bibr" target="#b29">[30]</ref>, the priority of the batch should be increased if the slack of the jobs that are forming the batch is small. Therefore, we incorporate the term S ij . In order to avoid situations where jobs with small weight have to wait a very long time for processing, we include the term W bj into the priority index. The second exponential term takes sequence-dependent setup times into account whereas the term n bj /B considers the fullness of the batch. Because we take the sum over all jobs in the batch the rule tries to increase the fullness of the batches. The index is called BATC index. We determine the scaling parameters j 1 , j 2 , j 3 , and j 4 by using a loop over predefined 3 4 discrete values from [0.045, 4.5] â¢ [50, 5000] â¢ [0.2, 22] â¢ [0.02, 2.0], calculate the TWT value and take the four-tuple (j 1 , j 2 , j 3 , j 4 ) that leads to minimum TWT.</p><p>We use the indices I ij,ATC and I bj,1 in order to construct two different subproblem solution procedures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1.">Dispatching-based subproblem solution procedures</head><p>The steps of a dispatching-based SSP (BATC-SSP) can be summarized as follows:</p><p>1. Determine jobs from the nodes of the shifting bottleneck graph. At time t choose a window size Dt and choose at most thres jobs from the set M(j, t, Dt). Therefore, calculate the corresponding I ij,ATC indices for each family with unscheduled jobs and sort them in non-increasing order. Thus, we obtain job sets e M Ã°j; t; D; thresÃ as a result. 2. Select the machine m with minimum ready time either less or equal to t. Note that we consider in Steps 3 and 4 cycle avoidance issues. BATC-SSP may additionally serve as a heuristic for batch formation in a genetic algorithm-based SSP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2.">Genetic algorithm-based subproblem solution procedures</head><p>In previous research <ref type="bibr" target="#b18">[19]</ref>, it was shown that for parallel batch processing machines BATC-SSP-type dispatching schemes can be outperformed by genetic-algorithm type schemes where a genetic algorithm is responsible for the assignment of jobs (or already formed batches) to machines. Genetic algorithms have been used in many combinatorial optimization problems, especially assignment and scheduling problems. Recent survey papers for using genetic algorithms in manufacturing are provided by Dimopoulos and Zalzala <ref type="bibr" target="#b6">[7]</ref>, and Aytug et al. <ref type="bibr" target="#b1">[2]</ref>. Until recently, GA methods seemed to be too costly in comparison to dispatching methods. However, with the recent dramatic increase in computer efficiency GA methods have become more competitive.</p><p>The suggested genetic algorithm is hybridized with dispatching rules as suggested in <ref type="bibr" target="#b9">[10]</ref> in order to allow for a relatively quick solution scheme.</p><p>The basic steps of a genetic algorithm-based SSP can be described as follows:</p><p>1. Initialize the jobs of the SSP by using nodes from the shifting bottleneck graph.</p><p>2. Determine a job set e M Ã°j; t; D; thresÃ as described for BATC-SSP. Consider all batch combinations from e M Ã°j; t; D; thresÃ. For batch formation, take the precedence constraints into account. Use the remaining steps from BATC-SSP in order to come up with a set of already formed batches. 3. Assign these batches via a genetic algorithm to the tools of the tool group, i.e. the parallel machines. 4. For each single element of the population of the genetic algorithm, determine a sequence of batches for each single machine. In order to calculate the start date of a certain batch take the completion times of the predecessors of the jobs of the batch into account. Calculate the TWT value. If the last generation of the genetic algorithm is reached, then go to Step 5, otherwise, go to Step 3 and repeat it again. 5. Stop.</p><p>The overall procedure including the phases batch formation, assignment and sequencing is shown in Fig. <ref type="figure">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Implementation of the genetic algorithm-based subproblem solution procedures</head><p>We use a batch based chromosome representation similar to those used in <ref type="bibr" target="#b18">[19]</ref>. Assume that we have to assign and sequence k (already formed) batches. Then we use a chromosome cr in the following way:</p><formula xml:id="formula_8">cr :Â¼ m 1 m 2 Ã Ã Ã Ã Ã Ã m kÃ1 m k Ã° Ã ;<label>Ã°8Ã</label></formula><p>where we denote by m i the machine that is assigned to batch i. We denote the set of all tools of the tool group by M. We use the standard genetic operators one-point crossover and flip mutation <ref type="bibr" target="#b15">[16]</ref> in order to perform the necessary genetic operations. A one-point crossover selects two parent chromosomes randomly and the crossover point is randomly chosen. We denote the first chromosome by</p><formula xml:id="formula_9">cr 1 :Â¼ m 11 m 12 Ã Ã Ã m 1kÃ1 m 1k Ã° Ã and the second chromosome by cr 2 :Â¼ m 21 m 22 Ã Ã Ã m 2kÃ1 m 2k Ã°</formula><p>Ã . After performing one-point crossover (with crossover point at position s) we obtain the two resulting chromosomes given by cr</p><formula xml:id="formula_10">3 Â¼ m 21 Ã Ã Ã m 1s Ã Ã Ã m 1k Ã° Ã and cr 4 Â¼ m 11 Ã Ã Ã m 2s Ã Ã Ã m 2k Ã° Ã .</formula><p>We initially define a set M i :Â¼ fm 1 i ; . . . ; m k i g M for each batch i. The set M i is used for the representation of the tools that can be used for processing batch i, i.e. for machine dedications. For mutation purposes, a gene of the chromosome is randomly changed to a different machine number (flip mutation operator) from M i according to a pre-defined probability for each gene of each of the resulting offspring. Note that the used genetic operators take care of machine dedications and produce only feasible schedules from this point of view. The suggested representation is supported by the classes GA1DarrayAlleleGenomehinti, GAAlleleSethinti, and GAAlleleSetArray from the GaLib genetic algorithm library <ref type="bibr" target="#b30">[31]</ref> that is used for efficient implementation of the genetic algorithm-based subproblem solution procedure. We use a genetic algorithm with overlapping population. The genetic algorithm terminates after a certain number of generations is reached.</p><p>We choose the parameters of the genetic algorithm based on previous research on parallel machine scheduling for a similar problem <ref type="bibr" target="#b18">[19]</ref>. Therefore, we take the parameters from Table <ref type="table">1</ref> in our experiments.</p><p>We use the genetic algorithm-based SSPs only in specific situations because genetic algorithms tend to be computationally expensive. Therefore, we describe different strategies to apply the genetic algorithm-based SSPs in Section 4.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">Application of the suggested subproblem solution procedures</head><p>We apply the genetic algorithm-based SSP (GSSP) in three different situations:</p><p>1. We apply GSSP if the number of jobs queuing in front of a certain tool group exceeds a certain threshold value. This strategy is very simple, however we expect that if the internal due dates of the queuing jobs are not tight, it is not useful to use a genetic algorithm-based subproblem solution procedure. We call this approach GSSP_queue. 2. The second strategy is more sophisticated. We use first a dispatching type subproblem solution procedure in order to obtain a schedule and a rough estimate for the minimum total weighted tardiness value. We apply GSSP if the estimated appropriately scaled total weighted tardiness value is larger than a certain threshold value. This strategy is motivated by the fact that a large total weighted tardiness value offers room for improvement by more advanced heuristics. This approach is called GSSP_twt. 3. The third strategy is based on the idea to use the genetic algorithm-based SSP only for the most critical tool groups in the shifting bottleneck heuristic. This strategy is different to the previous one because this approach allows for the incorporation of more sophisticated criticality measures <ref type="bibr" target="#b2">[3]</ref> and criticality determination schemes <ref type="bibr" target="#b5">[6]</ref>. Furthermore, no specific threshold for a criticality measure is required. We use for abbreviation the notation GSSP_crit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Framework for experimentation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Overall architecture</head><p>We use the software architecture described in <ref type="bibr" target="#b17">[18]</ref> to carry out the experiments. The center point of this architecture is a data layer that contains all the information to construct the scheduling graph and make the scheduling decisions. The data layer is between a simulation model that emulates the manufacturing process of interest and the scheduling application for the shifting bottleneck heuristic. The objects of the data layer are updated in an event driven manner by the appropriate simulation events. Calculated schedules are submitted to the simulation engine in order to use the information of the schedules in a dispatching-based manner. The architecture allows for rolling horizon type scheduling as well as for event-driven rescheduling activities. We integrated the GaLib software library <ref type="bibr" target="#b30">[31]</ref> in our overall framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Simulation models</head><p>We consider three different simulation models. The first one is a small complexity model suggested by researchers from INTEL corporation and described in <ref type="bibr" target="#b7">[8]</ref>. It contains only three tool groups and two product routes with six steps. The process flow is organized in two layers. Among the tool groups, there is a batch processing one and a tool group with sequence-dependent setup-times. The model mimics some important features of wafer fabs. We show the process flow in Fig. <ref type="figure" target="#fig_1">2</ref>. We denote this model by model A.</p><p>The second model is a reduced variant of the MIMAC Testbed Data Set 1 <ref type="bibr" target="#b8">[9]</ref>. It contains two routes with 56 and 66 steps, respectively. The process flow is highly reentrant. The lots are processed on 45 machines that are organized into 11 tool groups. Among the tools are batching tools. We denote the second model by model B.</p><p>We two times. We denote this model as model C. Therefore, it contains 24 machines and two products with 24 process steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Experimental design</head><p>Based on previous experiments with dispatching-based subproblem solution procedures we expect an influence of the scheduling interval, the additional scheduling horizon, the method of determination of internal ready times and internal due dates (for each node of the disjunctive graph) on the TWT value. Internal due dates are calculated either on a simple backward calculation from the external due dates based on the concept of longest paths in the scheduling graph or based on a backward calculation that takes the slack of the job into account. In the latter case, we assign to each process step a certain amount of waiting time. This waiting time amount is basically determined by dividing the slack of the job by the raw processing time. We use this factor to multiply the weights of the arcs that represent the processing times by this factor. Then, we perform again longest path calculations in order to obtain the ready date and due date estimates. The backward calculation starts from the maximum of the external due date and the earliest possible completion time of the job in all experiments.</p><p>Furthermore, beside the parameters of the shifting bottleneck approach, we expect a dependency of the results on the external due dates of the jobs, the weights of the lots, and the load of the complex job shop. The (external or customer) due dates of the jobs are calculated by using the flow factor concept. The flow factor FF is defined as the ratio of the cycle time and the raw process time. We set</p><formula xml:id="formula_11">d j :Â¼ FF X uj kÂ¼1 p jk Ã¾ r j ;<label>Ã°9Ã</label></formula><p>where we denote by p jk the processing time of processing step k that is required to produce job j and u j denotes the number of processing steps of j. In our experiments, we first measure the average flow factor of the manufacturing system controlled by a First In First Out (FIFO) policy. Then, we set the flow factor used for due date setting as a multiple of this average FIFO flow factor (FIFO-FF). We use two different weighting schemes for the jobs. The discrete distribution D 1 is used to mimic a situation where a large amount of jobs has small or medium weight. D 1 is given by</p><formula xml:id="formula_12">D 1 :Â¼ w ij Â¼ 1 with p 1 Â¼ 0:5; w ij Â¼ 5 with p 2 Â¼ 0:35; w ij Â¼ 10 with p 3 Â¼ 0:15. 8 &gt; &gt; &lt; &gt; &gt; :<label>Ã°10Ã</label></formula><p>The distribution D 2 describes situations where only a very small portion of jobs has an extremely large weight. D 2 is defined as follows:</p><formula xml:id="formula_13">D 2 :Â¼ w ij Â¼ 1 with p 1 Â¼ 0:5; w ij Â¼ 2 with p 2 Â¼ 0:45; w ij Â¼ 10 with p 3 Â¼ 0:05. 8 &gt; &gt; &lt; &gt; &gt; :<label>Ã°11Ã</label></formula><p>We use these two distributions in order to assign fixed weights according to the proportion given by the distributions.</p><p>We summarize the used factorial design for model A, model B, and model C in Table <ref type="table" target="#tab_1">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Overview of the results</head><p>We look at different aspects of using GSSP in complex job shops. We are interested in the influence of the used GSSP variant on the solution quality and on the run time of the shifting bottleneck heuristic. Furthermore, we also look at different scheduling horizons and scheduling frequencies of our shifting bottleneck heuristic. All results of our study are compared to a shifting bottleneck heuristic where the resulting subproblems are solved by a dispatching-based subproblem solution procedure using the BATC index from <ref type="bibr" target="#b14">[15]</ref>, i.e. we use the formula</p><formula xml:id="formula_14">I bj;2 Ã°t; lÃ :Â¼ w bj p j exp Ã Ã°d bj Ã p bj Ã¾ Ã°r bj Ã tÃÃ Ã¾ j 1 p ! exp Ã s bl;bj j 2 s n bj B<label>Ã°12Ã</label></formula><p>in order to calculate the priority of batch bj of a certain batch combination. In addition to the notation used in Section 4.2, here we denote the due date of batch bj by d bj .</p><p>The results from Tables 4, 7 and 10 are presented as ratio of the performance measure value obtained by using a shifting bottleneck heuristic with GSSP and a shifting bottleneck heuristic with pure BATC type subproblem solution procedures and the same scheduling interval and additional scheduling horizon. We are interested in the overall total weighted tardiness, i.e. we measure the total weighted tardiness of all lots that are completed within the simulation horizon. In Tables <ref type="table" target="#tab_4">5</ref> and<ref type="table">8</ref> we present the results as ratio of the TWT obtained by GSSP and by BATC dispatching-based SSP used for a fixed scheduling interval of 2 hours and a fixed additional scheduling horizon of 0 hour. In Tables <ref type="table">6</ref> and<ref type="table" target="#tab_6">9</ref> we denote the cycle time by CT and the throughput by TP. CT and TP are also presented as ratios of results achieved by GSSP with varying scheduling interval and additional horizon to results achieved by BATC with fixed interval and horizon.</p><p>In our experiments, we simulate 70 days. In order to get stochastically significant results, we perform three independent runs for each factor combination. We use the total weighted tardiness value on a tool group as criticality measure in the shifting bottleneck heuristic. Furthermore, we allow for two re-optimization steps in the shifting bottleneck heuristic. For the results in Tables 4-6 we use backward calculations as described in Section 6.1 in order to calculate internal ready times and due dates. We apply a backward calculation scheme with slack for obtaining the results of Tables 7-10.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Impact on the used variant of the subproblem solution procedure on the results</head><p>In order to evaluate the impact of the different variants of GSSP described in Section 4.4 on the total weighted tardiness, we performed a non-full factorial experiment. We use model A. We fix a scheduling interval of 2 hours, i.e. we call the shifting bottleneck heuristic in a rolling horizon manner every 2 hours. Furthermore, we use an additional scheduling horizon of 2 hours, i.e. we calculate schedules for a horizon of 4 hours. We use backward calculation starting from the external due dates or the earliest possible completion time if the jobs are late. We consider tight due dates as described in Table <ref type="table" target="#tab_1">2</ref>. We also use the weighting scheme D 1 . The concrete levels of the variants of GSSP are presented in Table <ref type="table" target="#tab_2">3</ref>. The minimum number of queuing jobs, the minimum total weighted tardiness at a tool group, and the minimum number of tool groups are model specific and chosen in such a way that variant I uses GSSP for many tool groups whereas variant III applies GSSP only on rare occasions. Variant II is between the other two variants.</p><p>We present the results in Fig. <ref type="figure" target="#fig_0">3</ref>. It turns out that GSSP_crit produces the lowest total weighted tardiness results. As expected, variant I leads to the smallest total weighted tardiness, however, the differences between the variants are not significant. GSSP_queue and GSSP_twt lead to good results if we choose threshold values that enforce a frequent application of the genetic algorithm type subproblem solution procedure. In the opposite case, GSSP_queue and GSSP_twt lead to results that are similar to the results obtained for a SSP based on BATC. It is interesting to see that GSSP_crit does not show this behavior. Even if we apply GSSP only for the most critical tool group in each iteration we obtain significantly smaller TWT as in the BATC case. Therefore, it makes sense that the decision whether to apply GSSP or not to a concrete subproblem depends on the criticality of the tool group.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.">Time required for computation</head><p>The time required for computation on a Pentium IV 2.26 GHz with 512 MB RAM PC is presented in Fig. <ref type="figure" target="#fig_3">4</ref>. We use the same setting as in Section 6.3.</p><p>As expected, the computation time increases if the frequency of the GSSP application increases. For that reason, GSSP_crit causes the highest computational burden. Variant III of GSSP_crit leads to smaller times required for computation than variant I and variant II of the same strategy. GSSP_twt, variant I also results in very high computation times but the total weighed tardiness values are slightly higher. From Figs. <ref type="figure" target="#fig_2">3</ref> and<ref type="figure" target="#fig_3">4</ref> we conclude that there is a trade-off between solution quality and time required for computation for model A. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.">Impact of the scheduling horizon on the results</head><p>We study the influence of the used scheduling horizon on the performance measures total weighted tardiness, cycle time, and throughput in this section. Therefore, we perform almost full factorial experiments based on the design in Table <ref type="table" target="#tab_1">2</ref>, i.e. we only fix a certain method for calculating the internal due dates and ready times, whereas the remaining factors are varying as described in Table <ref type="table" target="#tab_1">2</ref>. Furthermore, based on the results for the different variants of GSSP, we decide to perform the experiments only for GSSP_crit using the first variant. In Tables <ref type="table" target="#tab_3">4</ref> and<ref type="table" target="#tab_4">5</ref>, we present results for model A.</p><p>For tight due dates a scheduling interval of 6 hours and an additional scheduling horizon of 2 hours leads to TWT improvements between 13% and 9% compared to the TWT for BATC-SSPs and the same scheduling horizon. For moderate due dates a scheduling interval of 8 hours and an additional horizon of 2 hours leads to the highest improvement rates of 63% (for D 1 ) and 19% (for D 2 ). In the case of small scheduling horizons GSSP performs similar to BATC-SSP or slightly worse. This behavior is caused by the fact that we consider only two batch tools in parallel and the number of queuing jobs in front of these tools is also small. Hence, there is simply no room for improvement by optimization. In the case of a larger scheduling horizon, we have more queuing jobs. Therefore, GSSP performs better. If we consider model A with wide external due dates the TWT obtained by a pure BATC-SSP-type approach is close to zero and hence GSSP_crit finds the zero TWT very often. Therefore, the relative results for TWT are very often close to zero or equal to one. Table <ref type="table" target="#tab_4">5</ref> shows the corresponding results for a scheduling interval of 2 hours and an additional scheduling interval of 0 hour. We know from <ref type="bibr" target="#b19">[20]</ref> that this setting of the scheduling horizon outperforms in case of the shifting bottleneck heuristic with dispatching-based SSPs pure dispatching schemes. Hence, it makes sense to use the TWT(BATC-SSP 2, 0) value as a reference value. For tight due dates a scheduling interval of 6 hours and an additional scheduling horizon of 2 hours leads to TWT improvements between 36% and 41%  compared to TWT(BATC-SSP 2, 0). For moderate due dates a scheduling interval of 8 hours and an additional horizon of 2 hours leads to improvement rates between 66% and 79%. In the case of small scheduling horizons GSSP performs similar to BATC-SSP. The reason for this behavior is the same as for the results in Table <ref type="table" target="#tab_3">4</ref>. For wide due dates, we reproduce the results from Table <ref type="table" target="#tab_3">4</ref>. We found no significant difference between the performance of the shifting bottleneck heuristic for D 1 and D 2 in case of model A. From Table <ref type="table">6</ref>, we can see that the cycle time decreases slightly and the throughput increases slightly. Therefore, we do not obtain the TWT reductions at the expense of cycle time and throughput.</p><p>We study the behavior of model B in a second series of experiments. The obtained results are shown in Tables <ref type="table" target="#tab_5">7</ref> and<ref type="table">8</ref>. Note that for model B it is essential to use backward calculation with slack for the calcu- lation of internal ready and due dates in order to outperform pure dispatching schemes. From Table <ref type="table" target="#tab_5">7</ref> we see that we obtain TWT improvements in the GSSP case compared to the pure application of BATC-SSP. This is especially true for moderate external due dates. In the case of tight due dates we obtain for a weight setting according to D 2 in some cases slightly larger TWT values. This is mainly caused by the fact that as shown in <ref type="bibr" target="#b18">[19]</ref> for certain time window settings GSSP does not outperform BATC-type dispatching heuristics. Because of the similar job weights caused by D 2 , it is harder for the genetic algorithm to find good assignments. In case of D 1 , the TWT is monotone increasing with respect to the length of the scheduling horizon. In case of wide due dates both SSPs are able to find the zero TWT, hence the ratio is equal to one. Table <ref type="table">8</ref> shows the corresponding results for a scheduling interval of 2 hours and an additional scheduling horizon of zero. We see from Table <ref type="table">8</ref> that we obtain for tight due dates and a scheduling horizon of 2 hours between 14% and 20% improvement compared to the TWT value for BATC-SSP and the same scheduling horizon. For larger scheduling horizons we get larger TWT values. This behavior coincides with the results presented in <ref type="bibr" target="#b19">[20]</ref>. In the case of moderate due dates we get for a scheduling interval of 2 hours and an additional scheduling horizon of 2 hours a TWT improvement of around 58%. We reproduce the results from Table <ref type="table" target="#tab_5">7</ref> for wide due date.</p><p>As in case of model A, we obtain only very small improvements with respect to cycle time and throughput (see Table <ref type="table" target="#tab_6">9</ref>).</p><p>We show only some results for model C in Table <ref type="table">10</ref>. It turns out that we obtain TWT improvements for tight, moderate, and wide due dates compared to the TWT values obtained by BATC-SSPs as in case of model B. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusions and future work</head><p>In this paper, we investigated how much we can gain from the use of more advanced subproblem solution procedures in a shifting bottleneck heuristic for complex job shops. We developed genetic algorithmbased subproblem solution procedures for parallel batching and non-batching tools. We tested different variants of the genetic algorithm-based subproblem solution procedures. We also change the characteristics of the complex job shop in a controlled manner. We conclude that using more sophisticated subproblem solution procedures makes sense in many situations. Overall TWT reductions up to 70% are possible compared to a shifting bottleneck heuristic with pure dispatching-based SSPs. On the other hand, we have to spend very often much more time for computation.</p><p>The use of more advanced design of experiments (DOE) techniques appears as an important part of future research. Especially for models of more realistic size (like, for example the MIMAC Testbed Data Set 1 <ref type="bibr" target="#b8">[9]</ref>) the simulation time is very long. Hence it is very important to reduce the number of required simulation runs. More research is also required in order to use GSSPs that optimize the schedules obtained by the genetic algorithm by performing local exchange of jobs based on local dominance rules. Some steps into this direction are described in <ref type="bibr" target="#b16">[17]</ref>. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>3 .</head><label>3</label><figDesc>Compute the BATC index for all batch combinations in each family and select the batch b with highest BATC index. Consider only such batch combinations that do not contain jobs that are related by a precedence constraint to each other. Furthermore, only jobs with predecessors that are already included into a batch are considered. 4. Schedule the selected batch b on the machine m. Denote the time, where all predecessors are scheduled and completed with r succ,j . 5. Advance ready time of the machine m to max(t, r bj , r succ,j ) + s b + p b , where s b is the setup time that occurs before processing of batch b and p b is the processing time of the family to which batch b belongs. 6. If all jobs are scheduled go to Step 7, else go to Step 2. 7. Stop.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Process flow of the Minifab model (model A).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. TWT values for the different variants of the subproblem solution procedure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Time required for computation by the variants of the subproblem solution procedures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Experimental design for model A, model B, and model C</figDesc><table><row><cell>Factor</cell><cell>Level</cell><cell>Count</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Model A</cell><cell>Models B and C</cell></row><row><cell>Algorithm dependent</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Scheduling horizon</cell><cell>Scheduling interval:</cell><cell>4</cell><cell>3</cell></row><row><cell></cell><cell>Model A: {2 hours, 4 hours, 6 hours, 8 hours};</cell><cell></cell><cell></cell></row><row><cell></cell><cell>Models B and C: {2 hours, 4 hours, 6 hours}</cell><cell></cell><cell></cell></row><row><cell></cell><cell>Additional scheduling time:</cell><cell>3</cell><cell>2</cell></row><row><cell></cell><cell>Model A: {0 hour, 2 hours, 4 hours};</cell><cell></cell><cell></cell></row><row><cell></cell><cell>Models B and C: {0 hour, 2 hours}</cell><cell></cell><cell></cell></row><row><cell>Determination of earliest start</cell><cell>Backward; Backward and slack</cell><cell>2</cell><cell>2</cell></row><row><cell>and latest completion times</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Completion time of the jobs</cell><cell>Max (earliest possible completion</cell><cell>1</cell><cell>1</cell></row><row><cell></cell><cell>time, external due date)</cell><cell></cell><cell></cell></row><row><cell>Manufacturing system dependent</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Due date setting</cell><cell>Tight (0.75 * FIFO-FF); Moderate (0.9 * FIFO-FF);</cell><cell>3</cell><cell>3</cell></row><row><cell></cell><cell>Wide (1.2 * FIFO-FF)</cell><cell></cell><cell></cell></row><row><cell>Weighting scheme</cell><cell>D 1 , D 2</cell><cell>2</cell><cell>2</cell></row><row><cell>Load of the system</cell><cell>High</cell><cell>1</cell><cell>1</cell></row><row><cell>Total</cell><cell>-</cell><cell>144</cell><cell>72</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc></figDesc><table><row><cell>Variants of GSSP used in the experiments</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Strategy</cell><cell>Variant I</cell><cell>Variant II</cell><cell>Variant III</cell></row><row><cell>Number of queuing jobs (GSSP_queue)</cell><cell>n &gt; 10</cell><cell>n &gt; 30</cell><cell>n &gt; 50</cell></row><row><cell>Total weighted tardiness (GSSP_twt)</cell><cell>TWT &gt; 50,000 seconds</cell><cell>TWT &gt; 500,000 seconds</cell><cell>TWT &gt; 5,000,000 seconds</cell></row><row><cell>Number of critical tool group (GSSP_crit)</cell><cell>3</cell><cell>2</cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4</head><label>4</label><figDesc></figDesc><table><row><cell cols="3">TWT values for model A relative to TWT(BATC-SSP)</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>d j</cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell>Wide</cell><cell></cell></row><row><cell>w j</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>2 + 0</cell><cell>0.9960</cell><cell>1.0344</cell><cell>0.8968</cell><cell>0.8787</cell><cell>0.0000</cell><cell>0.0000</cell></row><row><cell>2 + 2</cell><cell>0.8134</cell><cell>1.0186</cell><cell>1.3610</cell><cell>0.9713</cell><cell>0.0000</cell><cell>1.0000</cell></row><row><cell>2 + 4</cell><cell>0.8894</cell><cell>0.9022</cell><cell>1.1686</cell><cell>1.3517</cell><cell>0.1564</cell><cell>0.0000</cell></row><row><cell>4 + 0</cell><cell>1.0316</cell><cell>0.9873</cell><cell>0.6417</cell><cell>1.2553</cell><cell>0.2224</cell><cell>1.0000</cell></row><row><cell>4 + 2</cell><cell>1.0276</cell><cell>0.7775</cell><cell>1.6696</cell><cell>1.0096</cell><cell>1.0000</cell><cell>0.0000</cell></row><row><cell>4 + 4</cell><cell>0.9731</cell><cell>1.1320</cell><cell>1.1420</cell><cell>1.9074</cell><cell>2.1598</cell><cell>0.1122</cell></row><row><cell>6 + 0</cell><cell>0.9401</cell><cell>1.0223</cell><cell>0.5725</cell><cell>0.9877</cell><cell>0.1074</cell><cell>0.1489</cell></row><row><cell>6 + 2</cell><cell>0.8691</cell><cell>0.9018</cell><cell>0.6817</cell><cell>3.6932</cell><cell>2.6402</cell><cell>1.0000</cell></row><row><cell>6 + 4</cell><cell>0.9527</cell><cell>0.9681</cell><cell>0.5958</cell><cell>1.9078</cell><cell>0.5511</cell><cell>1.0000</cell></row><row><cell>8 + 0</cell><cell>0.8726</cell><cell>0.9736</cell><cell>0.9529</cell><cell>0.8131</cell><cell>2.8584</cell><cell>1.8544</cell></row><row><cell>8 + 2</cell><cell>0.9740</cell><cell>0.8928</cell><cell>0.3694</cell><cell>0.8090</cell><cell>0.5780</cell><cell>2.2073</cell></row><row><cell>8 + 4</cell><cell>0.9394</cell><cell>1.0197</cell><cell>0.6060</cell><cell>1.6563</cell><cell>3.3255</cell><cell>0.2316</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5</head><label>5</label><figDesc>TWT values for model A relative to TWT(BATC-SSP 2, 0)</figDesc><table><row><cell>d j</cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell cols="2">Wide</cell></row><row><cell>w j</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell></cell><cell>D 2</cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>2 + 0</cell><cell>0.9960</cell><cell>1.0344</cell><cell>0.8968</cell><cell>0.8787</cell><cell cols="2">0.0000</cell><cell>0.0000</cell></row><row><cell>2 + 2</cell><cell>0.7057</cell><cell>0.6592</cell><cell>0.6259</cell><cell>0.1403</cell><cell cols="2">0.0000</cell><cell>1.0000</cell></row><row><cell>2 + 4</cell><cell>0.7460</cell><cell>0.5924</cell><cell>0.4794</cell><cell>0.1026</cell><cell cols="2">0.0081</cell><cell>0.0000</cell></row><row><cell>4 + 0</cell><cell>0.9252</cell><cell>0.9209</cell><cell>0.7147</cell><cell>0.8419</cell><cell cols="2">0.0161</cell><cell>1.0000</cell></row><row><cell>4 + 2</cell><cell>0.7656</cell><cell>0.5912</cell><cell>0.2355</cell><cell>0.0238</cell><cell cols="2">0.0027</cell><cell>0.0000</cell></row><row><cell>4 + 4</cell><cell>0.7228</cell><cell>0.6039</cell><cell>0.3464</cell><cell>0.3288</cell><cell cols="2">0.3880</cell><cell>1.0000</cell></row><row><cell>6 + 0</cell><cell>0.9826</cell><cell>0.9845</cell><cell>0.8269</cell><cell>0.8406</cell><cell cols="2">0.0408</cell><cell>1.0000</cell></row><row><cell>6 + 2</cell><cell>0.6327</cell><cell>0.5824</cell><cell>0.3466</cell><cell>0.3456</cell><cell cols="2">0.2392</cell><cell>1.0000</cell></row><row><cell>6 + 4</cell><cell>0.7662</cell><cell>0.6771</cell><cell>0.3091</cell><cell>0.1499</cell><cell cols="2">0.4614</cell><cell>1.0000</cell></row><row><cell>8 + 0</cell><cell>0.7595</cell><cell>0.8654</cell><cell>0.6269</cell><cell>0.4693</cell><cell cols="2">0.3249</cell><cell>1.0000</cell></row><row><cell>8 + 2</cell><cell>0.7875</cell><cell>0.7212</cell><cell>0.3371</cell><cell>0.2040</cell><cell cols="2">0.1007</cell><cell>1.0000</cell></row><row><cell>8 + 4</cell><cell>0.8322</cell><cell>0.6879</cell><cell>0.7405</cell><cell>0.4663</cell><cell cols="2">0.2639</cell><cell>1.0000</cell></row><row><cell>Table 6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">CT and TP values for model A relative to CT(BATC-SSP 2, 0) and TP(BATC-SSP 2, 0)</cell><cell></cell><cell></cell></row><row><cell>d j</cell><cell></cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell>Wide</cell></row><row><cell>w j</cell><cell></cell><cell>D 1</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell>CT</cell><cell>TP</cell><cell>CT</cell><cell>TP</cell><cell>CT</cell><cell>TP</cell></row><row><cell>2 + 0</cell><cell></cell><cell>0.9975</cell><cell>1.0000</cell><cell>1.0027</cell><cell>0.9988</cell><cell>0.9809</cell><cell>1.0000</cell></row><row><cell>2 + 2</cell><cell></cell><cell>1.0119</cell><cell>1.0024</cell><cell>0.9550</cell><cell>1.0024</cell><cell>0.9700</cell><cell>1.0000</cell></row><row><cell>2 + 4</cell><cell></cell><cell>0.9937</cell><cell>1.0024</cell><cell>0.9783</cell><cell>1.0000</cell><cell>0.9818</cell><cell>0.9988</cell></row><row><cell>4 + 0</cell><cell></cell><cell>1.0064</cell><cell>0.9976</cell><cell>1.0532</cell><cell>1.0000</cell><cell>0.9671</cell><cell>1.0000</cell></row><row><cell>4 + 2</cell><cell></cell><cell>0.9371</cell><cell>1.0000</cell><cell>0.9701</cell><cell>1.0024</cell><cell>1.0008</cell><cell>1.0000</cell></row><row><cell>4 + 4</cell><cell></cell><cell>0.9801</cell><cell>0.9988</cell><cell>1.0009</cell><cell>1.0000</cell><cell>0.9763</cell><cell>1.0000</cell></row><row><cell>6 + 0</cell><cell></cell><cell>0.9890</cell><cell>1.0012</cell><cell>1.0838</cell><cell>1.0000</cell><cell>0.9765</cell><cell>1.0000</cell></row><row><cell>6 + 2</cell><cell></cell><cell>1.0280</cell><cell>0.9976</cell><cell>1.0275</cell><cell>0.9964</cell><cell>0.9558</cell><cell>1.0000</cell></row><row><cell>6 + 4</cell><cell></cell><cell>0.9740</cell><cell>0.9976</cell><cell>1.0497</cell><cell>1.0000</cell><cell>0.9942</cell><cell>1.0000</cell></row><row><cell>8 + 0</cell><cell></cell><cell>1.0006</cell><cell>0.9988</cell><cell>1.0051</cell><cell>0.9976</cell><cell>0.9712</cell><cell>1.0000</cell></row><row><cell>8 + 2</cell><cell></cell><cell>0.9653</cell><cell>0.9976</cell><cell>1.0945</cell><cell>1.0000</cell><cell>0.9800</cell><cell>1.0012</cell></row><row><cell>8 + 4</cell><cell></cell><cell>0.9775</cell><cell>1.0000</cell><cell>1.0637</cell><cell>1.0000</cell><cell>0.9857</cell><cell>1.0000</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 7</head><label>7</label><figDesc>TWT values for model B relative to TWT(BATC-SSP)</figDesc><table><row><cell>d j</cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell>Wide</cell><cell></cell></row><row><cell>w j</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>2 + 0</cell><cell>0.7949</cell><cell>0.8604</cell><cell>0.7854</cell><cell>1.4990</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>2 + 2</cell><cell>0.8363</cell><cell>1.0361</cell><cell>0.6038</cell><cell>0.2470</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>4 + 0</cell><cell>0.8530</cell><cell>1.1908</cell><cell>0.3161</cell><cell>0.8828</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>4 + 2</cell><cell>0.8906</cell><cell>0.8726</cell><cell>0.6704</cell><cell>0.4517</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>6 + 0</cell><cell>0.9797</cell><cell>1.0062</cell><cell>0.7888</cell><cell>0.3864</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>6 + 2</cell><cell>0.9981</cell><cell>0.8923</cell><cell>0.5398</cell><cell>0.6325</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>Table 8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">TWT values for model B relative to TWT(BATC-SSP 2, 0)</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>d j</cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell>Wide</cell><cell></cell></row><row><cell>w j</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>2 + 0</cell><cell>0.7949</cell><cell>0.8604</cell><cell>0.7854</cell><cell>1.4990</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>2 + 2</cell><cell>1.0411</cell><cell>1.2535</cell><cell>0.4209</cell><cell>0.6622</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>4 + 0</cell><cell>1.2872</cell><cell>1.4817</cell><cell>0.4735</cell><cell>1.7386</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>4 + 2</cell><cell>1.6950</cell><cell>2.3173</cell><cell>0.7549</cell><cell>1.6324</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>6 + 0</cell><cell>2.0291</cell><cell>2.6211</cell><cell>2.4137</cell><cell>2.3562</cell><cell>1.0000</cell><cell>1.0000</cell></row><row><cell>6 + 2</cell><cell>2.2327</cell><cell>3.0606</cell><cell>1.5773</cell><cell>5.8719</cell><cell>1.0000</cell><cell>1.0000</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 9</head><label>9</label><figDesc>CT and TP values for model B relative to CT(BATC-SSP 2, 0) and TP(BATC-SSP 2, 0)Parts of this research were carried out while the first author was visiting the Modeling and Analysis of Semiconductor Manufacturing (MASM) Laboratory at Arizona State University, Tempe.</figDesc><table><row><cell>d j</cell><cell></cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell>Wide</cell></row><row><cell>w j</cell><cell></cell><cell>D 1</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell>CT</cell><cell>TP</cell><cell>CT</cell><cell>TP</cell><cell>CT</cell><cell>TP</cell></row><row><cell>2 + 0</cell><cell></cell><cell>1.0307</cell><cell>1.0028</cell><cell>1.0015</cell><cell>1.0014</cell><cell>0.9804</cell><cell>1.0000</cell></row><row><cell>2 + 2</cell><cell></cell><cell>1.0332</cell><cell>0.9944</cell><cell>1.0009</cell><cell>0.9986</cell><cell>0.9716</cell><cell>1.0042</cell></row><row><cell>4 + 0</cell><cell></cell><cell>1.0291</cell><cell>1.0028</cell><cell>1.0075</cell><cell>0.9986</cell><cell>0.9732</cell><cell>1.0028</cell></row><row><cell>4 + 2</cell><cell></cell><cell>1.0021</cell><cell>0.9943</cell><cell>1.0005</cell><cell>0.9986</cell><cell>0.9755</cell><cell>1.0000</cell></row><row><cell>6 + 0</cell><cell></cell><cell>0.9862</cell><cell>1.0014</cell><cell>1.0036</cell><cell>1.0014</cell><cell>0.9835</cell><cell>0.9903</cell></row><row><cell>6 + 2</cell><cell></cell><cell>0.9918</cell><cell>1.0000</cell><cell>1.0110</cell><cell>1.0042</cell><cell>0.9901</cell><cell>1.0000</cell></row><row><cell>Table 10</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">TWT values for model C relative to TWT (BATC-SSP)</cell><cell></cell><cell></cell><cell></cell></row><row><cell>d j</cell><cell>Tight</cell><cell></cell><cell>Moderate</cell><cell></cell><cell cols="2">Wide</cell></row><row><cell>w j</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell>D 2</cell><cell>D 1</cell><cell></cell><cell>D 2</cell></row><row><cell cols="2">Scheduling horizon (hour)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>2 + 0</cell><cell>0.8956</cell><cell>0.7050</cell><cell>0.3209</cell><cell>0.2679</cell><cell cols="2">0.0627</cell><cell>0.3716</cell></row><row><cell>2 + 2</cell><cell>0.6203</cell><cell>0.1852</cell><cell>0.3203</cell><cell>0.5617</cell><cell cols="2">0.0202</cell><cell>0.1670</cell></row><row><cell>4 + 0</cell><cell>0.3948</cell><cell>0.7178</cell><cell>0.5182</cell><cell>0.9441</cell><cell cols="2">0.1577</cell><cell>0.5999</cell></row><row><cell>4 + 2</cell><cell>0.6748</cell><cell>1.1311</cell><cell>0.3379</cell><cell>0.4770</cell><cell cols="2">0.3965</cell><cell>1.3428</cell></row><row><cell>6 + 0</cell><cell>0.6632</cell><cell>1.2707</cell><cell>0.6028</cell><cell>1.0051</cell><cell cols="2">0.3767</cell><cell>1.6264</cell></row><row><cell>6 + 2</cell><cell>0.7189</cell><cell>0.7861</cell><cell>0.5255</cell><cell>2.4472</cell><cell cols="2">0.8946</cell><cell>0.9143</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>L. Mo Â¨nch et al. / European Journal of Operational Research 177 (2007) 2100-2118</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>L. Mo Â¨nch et al. / European Journal of Operational Research 177 (2007) 2100-2118</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors gratefully acknowledge the support of International SEMATECH and the Semiconductor Research Corporation through the Factory Operations Research Center (FORCe) Project 2001-NJ-880.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The shifting bottleneck procedure for job shop scheduling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Adams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Balas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zawack</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="391" to="401" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Use of genetic algorithms to solve production and operations management problems: A review</title>
		<author>
			<persName><forename type="first">H</forename><surname>Aytug</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Khouja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">E</forename><surname>Vergara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Production Research</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">17</biblScope>
			<biblScope unit="page" from="3955" to="4009" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Measures of subproblem criticality in decomposition algorithms for shop scheduling</title>
		<author>
			<persName><forename type="first">H</forename><surname>Aytug</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kempf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uzsoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Production Research</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="865" to="882" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Rolling horizon procedures for the single machine deterministic total completion time scheduling problem with release dates</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Traub</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uzsoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Operations Research</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="115" to="125" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A computational study of shifting bottleneck procedures for shop scheduling problems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Demirkol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Metha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uzsoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Heuristics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="111" to="137" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Decomposition methods for reentrant flow shops with sequence dependent setup-times</title>
		<author>
			<persName><forename type="first">E</forename><surname>Demirkol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uszoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Scheduling</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="155" to="177" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Recent development in evolutionary computation for manufacturing optimization: Problems, solutions and comparisons</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dimopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M S</forename><surname>Zalzala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="93" to="113" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Hierarchical modeling and control of re-entrant semiconductor manufacturing facilities</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>El Adl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Tsakalis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th Conference on Decision and Control</title>
		<meeting>the 35th Conference on Decision and Control<address><addrLine>Kobe, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Semiconductor manufacturing testbed: Data sets</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Feigin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Leachman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>Arizona State University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A hybridized genetic algorithm to solve parallel machine scheduling problems with sequence dependent setups</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Horng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Cochran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Manufacturing Technology and Management</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="156" to="172" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Optimization and approximation in deterministic sequencing and scheduling: A survey</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Lawler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H G</forename><surname>Rinnooy Kan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Discrete Mathematics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="287" to="326" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Unrelated parallel machine scheduling with setup times using simulated annealing</title>
		<author>
			<persName><forename type="first">D.-W</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-H</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Jang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">F</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Robotics and Computer Integrated Manufacturing</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="223" to="231" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A &apos;&apos;pseudopolynomial&apos;&apos; time algorithm for sequencing jobs to minimize total weighted tardiness</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Lawler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Discrete Mathematics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="331" to="342" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Scheduling unrelated parallel machines to minimize total weighted tardiness</title>
		<author>
			<persName><forename type="first">C.-F</forename><surname>Liaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-K</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Operations Research</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1777" to="1789" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A modified shifting bottleneck heuristic for minimizing total weighted tardiness in complex job shops</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Mason</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M</forename><surname>Carlyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Scheduling</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="247" to="262" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Genetic Algorithms + Data Structures = Evolution Programs</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Michalewicz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin, Heidelberg, New York</pubPlace>
		</imprint>
	</monogr>
	<note>third ed.</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Minimizing total weighted tardiness of jobs with unequal ready times on parallel machines</title>
		<author>
			<persName><forename type="first">L</forename><surname>Mo Â¨nch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 11th Industrial Engineering Research Conference</title>
		<meeting>11th Industrial Engineering Research Conference<address><addrLine>Portland Oregon</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A simulation framework for performance assessment of shop-floor control systems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Mo Â¨nch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Rose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sturm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIMULATION: Transactions of the Society of Modeling and Computer Simulation International</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="163" to="170" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Heuristic scheduling of jobs on parallel batch machines with incompatible job families and unequal ready times</title>
		<author>
			<persName><forename type="first">L</forename><surname>Mo Â¨nch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balasubramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Pfund</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Operations Research</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="2731" to="2750" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Shifting-Bottleneck-Heuristik fu Â¨r komplexe Produktionssysteme: Softwaretechnische Realisierung und Leistungsbewertung, in: Proceedings Multi-Konferenz Wirtschaftsinformatik, Teilkonferenz, Quantitative Methoden in ERP und SCM</title>
		<author>
			<persName><forename type="first">L</forename><surname>Mo Â¨nch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Rose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DSOR Contributions to Information Systems</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="145" to="159" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Rolling horizon procedures for dynamic parallel machine scheduling with sequence dependent setup times</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">M</forename><surname>Ovacik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uzsoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Production Research</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="3173" to="3292" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Decomposition Methods for Complex Factory Scheduling Problems</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">M</forename><surname>Ovacik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Uzsoy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>Kluwer Academic Publishers</publisher>
			<pubPlace>Massachusetts</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Handling precedence constraints for the shifting bottleneck heuristic applied in a dynamic semiconductor manufacturing environment</title>
		<author>
			<persName><forename type="first">D</forename><surname>Pabst</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Universita Â¨t Wu Â¨rzburg</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master thesis</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A survey of algorithms for single and multi-objective unrelated parallel-machine deterministic scheduling problems</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Pfund</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Chinese Institute of Industrial Engineers</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="230" to="241" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A shifting bottleneck heuristic for minimizing the total weighted tardiness in a job shop</title>
		<author>
			<persName><forename type="first">M</forename><surname>Pinedo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Research Logistics</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="1" to="17" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Pinedo</surname></persName>
		</author>
		<title level="m">Scheduling: Theory, Algorithms, and Systems</title>
		<meeting><address><addrLine>Englewood Cliffs, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>second ed.</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Scheduling with batching: A review</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">N</forename><surname>Potts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">120</biblScope>
			<biblScope unit="page" from="228" to="249" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Modelling semiconductor manufacturing operations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Scho Â¨mig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Fowler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ASIM Dedicated Conference Simulation in Production and Logistics</title>
		<editor>
			<persName><forename type="first">K</forename><surname>Mertins</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Rabe</surname></persName>
		</editor>
		<meeting>the 9th ASIM Dedicated Conference Simulation in Production and Logistics</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A review of production planning and scheduling models in the semiconductor industry, Part I: System characteristics, performance evaluation and production planning</title>
		<author>
			<persName><forename type="first">R</forename><surname>Uzsoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Martin-Vega</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IIE Transactions on Scheduling and Logistics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="47" to="61" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Priority rules for job shops with weighted tardiness costs</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P J</forename><surname>Vepsalainen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">E</forename><surname>Morton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1035" to="1047" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Galib: A C++ library of genetic algorithms components</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wall</surname></persName>
		</author>
		<ptr target="&lt;http://lancet.mit.edu/ga/&gt;" />
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
