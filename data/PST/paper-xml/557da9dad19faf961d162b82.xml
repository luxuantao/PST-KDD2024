<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Coordination as Distributed Search in a Hierarchical Behavior Space</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Member, ZEEE</roleName><forename type="first">Edmund</forename><forename type="middle">H</forename><surname>Durfee</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Thomas</forename><forename type="middle">A</forename><surname>Montgomery</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering and Com-puter Science</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<postCode>48109</postCode>
									<settlement>Ann Arbor</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">IEEE Log Number</orgName>
								<address>
									<postCode>9102924</postCode>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Coordination as Distributed Search in a Hierarchical Behavior Space</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">79D4364E4EF82D6BFDDAC3B88B766F70</idno>
					<note type="submission">received November 27, 1990; revised April 10, 1991.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>It is theorized that the process of coordination is a distributed search through a hierarchical space of agent behaviors. By specifying agent activities along multiple dimensions and at different levels of abstraction, the hierarchical behavior space provides a single, rich representation that agents can use to organize, plan, and schedule their collective actions. Agents couple a distributed search protocol with local search algorithms in order to hypothesize new combinations of behaviors that satisfy performance metrics. Agents can employ control heuristics to guide their search. A computational instance of the authors' evolving theory, which implements a particular choice of distributed protocol, local algorithm, metrics, and heuristics, as applied to resolving resource conflicts in an unstructured delivery domain, is described. In this domain, agents that initially do not know with whom they might interact exploit the hierarchical behavior representation to selectively exchange more details about themselves until they can resolve conflicting behaviors. It is experimentally demonstrated how the authors' hierarchical protocol and multidimensional representation provide powerful and practical mechanisms for coordinating these agents, and important research issues to be addressed in the authors' ongoing work are highlighted.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>UR RESEARCH is concerned with the process of coor-0 dination, as carried out by sophisticated entities. These entities, which we will refer to as agents, explicitly reason about how their actions and interactions affect the goals they achieve, and purposefully plan new actions and interactions to achieve their goals better. We are developing a theory about the coordination process (hereafter referred to simply as "coordination") that states that coordination is a distributed search through a space of the possible, interacting behaviors of individual agents and groups of agents to find a collection of behaviors that satisfactorily achieves the agents' most important goals. The space of potential behaviors is organized hierarchically, and is distributed among the agents. Thus, to the extent that information about potential behaviors is distributed among agents, agents must communicate and reason about each other's behaviors to coordinate effectively.</p><p>The objective of this paper is to introduce our evolving theory of coordination as both a new way to think about the process of coordination and as a source of guidelines Fig. <ref type="figure">1</ref>. Example producer, consumer, transporter scenario. Producers in room 1 generate objects to be delivered to consumer-producers in room 2, which in turn generate objects to be delivered to consumers in room 3. Producers and consumers are represented as squares containing either an object (solid icon) or an expectation of getting an object (hollow icon). A transporter is represented as a circle that contains either an object (solid icon), an expectation for getting an object (hollow icon), or nothing (uncommitted). A gray transporter is one that is broken.</p><p>for building new coordination techniques. Because the theory is primarily still defined intuitively, we will rely throughout this paper on making the abstract concepts behind the theory concrete through the use of the producer-consumer-transporter (PCT) problem domain, an example of which is shown in Fig. <ref type="figure">1</ref>. This domain is populated by agents that produce objects that must be transported by other agents to destinations where a third type of agent "consumes" objects. A consumer of some objects can also produce other objects, allowing a cascading of producing and consuming, where producers and consumers can be related one-to-one, one-to-many, many-to-one, or manyto-many. To coordinate their activities, agents must establish how and where objects will flow among them, and whether these decisions are long-term (such as a transporter agreeing to perpetually carry objects between a particular producerconsumer pair) or short-term (such as transporters competing for tasks on a case-by-case basis). This domain thus captures important coordination concerns from a variety of real applications, ranging from manufacturing to collaborative research, from marketplaces to computer networks.</p><p>In this paper, we concentrate particularly on coordination problems between transporter agents that are in essence performing delivery tasks. Using the delivery problem as context for our discussion, we begin by motivating why our developing theory is needed (Section 11). We then outline our theory and provide concrete examples of the components of our theory as applied to the delivery domain (Section 111). To demonstrate the techniques and evaluate their performance within the context of this problem, we describe an implementation and 0018-9472/91$01.00 0 1991 IEEE experiments in Section IV. We discuss issues in generalizing our implementation and how it and the underlying theory relate to prior research on coordination (Section V), and we conclude by outlining some of the directions of our ongoing research and by indicating how our theory is a foundation for an interdisciplinary study of coordination (Section VI).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">MOTIVATIONS</head><p>Our work has been motivated by our efforts to coordinate real and simulated robots in domains like the PCT domain based on our prior experiences with the partial global planning framework for coordinating AI systems <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref> (Section V). In this section, we summarize the insights gleaned from our work and show how they have led us to our evolving theory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Issue 1: Abstracting Collective Activities</head><p>While representing the collective activities of agents as the union of their individual activities works for small numbers of agents <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b19">[20]</ref>, using this representation for coordinating large numbers of agents is unwieldy and infeasible. A more practical approach is for small collections of agents to combine and abstract their individual activities to represent their team as if it were a single (larger) entity. Groups of teams could further team up and abstract their activities, with the process continuing until the entire collection of agents can be represented, very abstractly, as a single entity. The result is a pyramid-shaped hierarchy, where an entity seen as a unit at one level (such as a company) is in fact composed of several sub-entities (such as manufacturing and marketing divisions), which can themselves be decomposed, and so on.</p><p>A major challenge in representing teams of agents as a single entity lies in finding the right abstraction. In our terminology, an abstraction represents a summarization of details that should be emphasized and filtration of details that are not as important. Because different aspects should be emphasized in different contexts, methods for building abstractions should be flexible and sensitive to context. Moreover, the context might not be known by the individuals or teams beforehand: They might not know ahead of time whether their possible interactions will involve what results they are achieving, how they are achieving those results, or who they are teaming up with. In such cases, the process of abstraction must involve a cooperative exploration of alternative representations to find one that appropriately emphasizes important interactions.</p><p>To make these issues concrete within the PCT domain, consider transporter A in Fig. <ref type="figure">1</ref>. Internally, it maintains a large number of details about what it is doing, including details about: what delivery goal it is achieving (which object between which producer and which consumer); how it will achieve the goal of transporting the object (carrying, pushing, forklifting, etc.); where it will be as it moves between the producer and consumer to accomplish the delivery; when it will be getting the object, moving through different locations, and dropping off the object; and why it is transporting the object (what external inducements or internal priorities made it decide to take up this delivery task).</p><p>Assume for now that all transporters know that A and B deliver objects between rooms 1 and 2, and C and D between rooms 2 and 3. The abstractions of its activities that A communicates with B should clearly be different from the abstractions it communicates with C. With B, important details will involve access to common resources, such as where it wiil be in the course of the delivery and how it is performing it (is A using the only forklift?). For example, to detect potential collisions at the doorway, B needs A to summarize whrre it will be in the course of the delivery, and whether their paths might cross. If so, B might request additional details. C, on the other hand, is trying to decide which of the deliveries from room 2 to 3 it should perform first, and to do this it wants to know which of the consumer-producers in room 2 should be freed up first. Thus, C wants A to abstract its activities to emphasize what delivery is being performed (to which consumer) and when; unlike B, C does not care how A does the delivery.</p><p>To increase communication efficiency, each two-agent team could choose a spokesman for the team to reduce point-topoint exchanges. Say that A abstracts the collective activities for A and B, and C for C and D. Internal to each team, the transporters would still coordinate detailed activities, but these internal details would not be reflected in how the spokesman represents them as a single team entity. A and C could coordinate the teams so that, as far as the A-team is concerned, all it knows is that someone from the C-team will be freeing up a particular consumer-producer, while the C-team only knows that someone from the A-team will be making a delivery there soon. These abstractions emphasize what deliveries are being performed without indicating who is doing them or how. However, when transporter D breaks down, the C-team might want a different abstraction of the A-team that instead emphasizes who is where (and not what they are doing) in order to identify a likely agent to try to recruit for the depleted team.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Issue 2: Organizations, Plans, and Schedules</head><p>As agents and teams abstract their activities, aspects of their performance begin to become blurred. Perhaps details about when specific results will be achieved can be blurred, leading to a view of the agent or team as generating a range of products over an extended period of time. As the time interval over which activities are being abstracted increases, an interesting phenomenon occurs: The initially detailed collection of planned activities increasingly begins to look less like a plan and more like an organization. Members of a team are described in terms of a general set of activities (responsibilities) for an extended, possibly open-ended, period of time. An agent's representation resembles a job description in a corporate organizational chart. An abstraction of an agent's or team's results over an extended period of h e begins to represent long-term views of what other agents or teams can expect to get from (or give to) them, without regard to exactly how these expectations are realized. This gradual transition from plans to organizations as a consequence of abstraction can also proceed in the other dircction. An organization with its associated personnel, pro-CCSSCS, and products, can be decomposed into suborganizations. The issues involved in choosing appropriate dimensions lor decomposition-to emphasize some aspects of collective activity over others-are analogous to choosing appropriate dimcnsions to emphasize when abstracting collective plans. Thus, decomposing an organization into a product hierarchy is analogous to reducing abstraction (specializing) along thc dimension of what results different subgroups will be xhieving. On the other hand, decomposing an organization into a [unctional hierarchy maps to specializing along the dimcnsion of how subgroups are acting (the expertise and rcsources they are applying to their tasks). Organizations can also be decomposed to emphasize spatial relationships (such ;IS coordinating a distribution of franchises, each of which has identical functional and product capabilities), and temporal rclationships (such as making the transition to new products or functions in response to changing market demands).</p><p>As specialization along different dimensions proceeds, the rcprcsentation of activity begins to resemble not so much an organization, or even a plan, but instead a schedule. By nailing down precisely when each activity will take place, along with the processes, resources, agents, and expected results of each activity, we can transform our representation into a detailed schcdule.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="111.">TOWARD A THEORY OF COORDINATION</head><p>The central role of abstraction and the relationships between organizations, plans, and schedules have led us to the lollowing hypothesis:</p><p>Cotnmori Representation for Coordination Hypothesis: Organizations, plans, and schedules have a common representation, but differ in their degree of specificity along diffcrent descriptive dimensions. This hypothesis is a cornerstone of our theory, because without a common representation that captures coordination at all of these levels, a theory of coordination would have to treat organizing, planning, and scheduling in separate, piecemeal fashions.</p><p>As context for understanding the details about our theory's Components, here is a high-level overview of how it works; more complete definitions for the terms and components L'ollow later. Using a single representation structure called a "hchavior," an agent (or group of agents) builds a model of its activities by linking long-term organizational roles to the near-term elaborated plans for fulfilling those roles, which in turn are linked to the current, fully scheduled actions to carry out the plans. This linked structure of behaviors is called a "behavior hierarchy." If it were acting alone, an agent would incrementally elaborate more detailed behaviors that are consistent with the long-term behaviors (and their objectives) as needed. When coordinating with others, agents must also share behaviors at appropriate levels of detail with other agents so that they have sufficiently rich models of each other.' With these models, the agents can identify opportunities 'Note that, alternatively, agents could infer models of each other based for improving their coordination, and can propose alternative behaviors that lead to better coordination. The process of exchanging information so that agents have sufficiently rich models of each other is a form of search, where elements of the space to be searched (behaviors) are distributed among the agents. Furthermore, when an agent generates and proposes alternative behaviors, it is searching through a space of hypothetical behaviors to find a set that maximizes (or at least improves) coordination, as measured by some domain-specific set of metrics. To avoid communicating about every behavior and enumerating all possible combinations of hypothetical behaviors, the agents must employ control knowledge, which can be heuristic, to reduce the search space.</p><p>In broad terms, therefore, our theory treats coordination-whether with long-term organizational behaviors, shorter-term plans, or fully-specified schedules-as a distributed search through the hierarchical space of the possible, interacting behaviors of individual agents and groups of agents to find a collection of behaviors that satisfactorily achieves the agents' most important goals. Because coordination is a problem to be solved, the general AI paradigm of search is employed <ref type="bibr" target="#b25">[26]</ref>. We have identified some of the important components of our theory, which are as follows.</p><p>Hierarchical Behavior Representation: A representation that can express different dimensions of behavior at different levels of detail.</p><p>Metrics: Criteria for measuring the quality of coordination between agents as represented by the (current or hypothetical) behaviors associated with the agents. Distributed Search Protocol: A protocol for guiding the exchange of information between agents during the distributed search for coordinated behaviors.</p><p>Local Search Algorithms: Algorithms for generating alternative, hypothetical behaviors at arbitrary levels of abstraction during the search for more coordinated behaviors.</p><p>Control Knowledge and Heuristics: Strategies for guiding the overall search process in order to improve coordination (as measured by the metrics) without excessive computation and communication overhead in conducting the search. The remainder of this section describes these components in more detail, with emphasis on how these components have been applied to coordination in the PCT domain. We should emphasize that we are not going to describe generic, domainindependent versions of the components listed previously. In fact, it is not clear whether any generic components exist, because different domains require different tradeoffs with respect to criteria such as communication overhead, computation requirements, reliability, and guaranteed convergence. Therefore, this paper demonstrates how our theory provides a framework in which to develop components to achieve acceptable performance in a particular domain.</p><p>on observations. While our theory does not preclude such an approach, our emphasis is on explicit communication between agents to avoid the uncertainties and computational requirements of plan recognition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The Behavior Hierarchy</head><p>We use the term behavior rather than a more restricted term (such as plan, goal, or organizational role) in order to emphasize its more general, multidimensional character. Behaviors can represent goals as what is being achieved (results or products), and plans as how the results are being achieved (the processes, expertise, and resources). Behaviors can have dimensions for when and where activities are taking place, for who are involved in the activities, and for why the behavior has been adopted.2 Thus, our initial specification for behaviors has the six dimensions of who, what, when, where, how, and why. This choice has been adequate for our needs so far, and has even raised interesting questions on topics such as what it means for an organization to be decomposed along the why dimension-is there such a thing as a "motivational hierarchy?" In our ongoing research, we continue to question whether this or some other set of dimensions is the best choice.</p><p>As examples of behaviors, consider the following behaviors for transporter A in Fig. <ref type="figure">1</ref>  <ref type="bibr">2.</ref> In doing so, it is going to be occupying the southern part of rooms 1 and 2, it will be employing its pickup-carry-putdown routine, and it is doing all this to maintain throughput. Behavior (b) is a subbehavior of (a), which essentially indicates that over the time interval 14-16, A will specifically be carrying object 1 through the doorway connecting rooms 1 and 2. Behavior (c), on the other hand, subsumes behavior (a), indicating that transporter A is eternally delivering objects between producer 2 and consumer-producer 2 by employing its pickup-carry-putdownreturn routine.</p><p>So which is the "right" way for transporter A to represent itself to others? It depends on which other transporter wants to know. Behavior (a) would be roughly what transporter C needs to know to decide where to go next, while behavior (b) would be what transporter B needs to know to avoid colliding in the doorway. In general, transporter A needs to be able to represent itself at many different levels of detail.</p><p>2Lansky has developed a formalism for specifying behavioral information about agents, and has investigated its use for multiagent domains [23]. Her use of the term "behavioral" and ours differ, in that she considers behaviors basically in terms of the constraints on possible relationships between actions. Therefore, as abstract behaviors are decomposed or specialized behaviors are abstracted, a hierarchy of behaviors at different levels of specificity is created. In addition, because behaviors can be decomposed or abstracted along different dimensions (or combinations of dimensions), many such hierarchies are possible. We define a behavior hierarchy as the superset of the possible hierarchies, which can be represented as a directed acyclic graph. Thus, moving vertically through a behavior hierarchy leads to more or less abstract representations of the activities of some number of agents, emphasizing different aspects of their behaviors depending on the behavioral dimension(s) traversed. Moving horizontally through a behavior hierarchy provides different views of behavior at roughly equivalent levels of detail, but emphasizing different behavioral dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D l t-all</head><p>For an extended example, consider the partial behavior hierarchy, with emphasis on transporter A, which is graphically depicted in Fig. <ref type="figure">2</ref>. In this depiction, a behavior at one level can be decomposed along alternative dimensions ("or" branches); each of these disjunctive decompositions is generally composed of a conjunction of behaviors ("and" branches), which together comprise the parent behavior. It is the and-or nature of the behavior hierarchy that provides the rich search space for alternative combinations of behaviors.</p><p>The bottom of the hierarchy represents some very detailed behaviors, showing the specific locations that transporter A will occupy at time intervals 10-11, 11-12, and so on. (Note, in the interest of space, each picture at this level corresponds to several behaviors). Abstracting along the behavioral dimensions of when and where leads to the next level up, in which, for example, the four detailed behaviors in the left-most picture at the bottom level are summarized into a single behavior with a longer time interval (10-14) and an encompassing spatial region. The behaviors on this level are sufficiently detailed for A to share with B in order to determine whether they might be attempting to pass through the doorway at the same time.</p><p>Working from the top downward in Fig. <ref type="figure">2</ref>, we further illustrate how alternative decompositions of behaviors stress different types of interactions and coordination. The topmost behavior (level 1) indicates that, for all times, transporters A through D are going to be moving objects within the overall region shown. This behavior could be decomposed along a number of dimensions or combinations of dimensions; if we assume that the transporters have already engaged in some amount of coordinating search, then a reasonable decomposition involves the who, what, and where dimensions, and assigns transportation tasks between rooms 1 and 2 to transporters A and B (level 2). Further decomposition along the who dimension yields the separate long-term behaviors for A and B as moving between rooms 1 and 2 (level 3).</p><p>Because possible conflicts (collisions) are not prevented through this decomposition, further decomposition can help identify more complementary behaviors. For example, if A decomposes along the where dimension, it could break its behavior into separate behaviors for rooms 1 and 2 (level 4, left branch). If B does the same, then the transporters can negotiate over each of them adopting only one of these behaviors-resulting in a long-term organization (for all times) in which one of them moves objects from either producer in room 1 to the door, and the other picks up objects at the door and completes the delivery. By elaborating their behavior hierarchies and searching through alternatives to converge on an acceptable set, the transporters find an effective organization for this task, assuming that "handing off" objects is not prohibitively time consuming or risky.</p><p>An alternative decomposition is instead along the what dimension, in which A identifies separate long-term behaviors for transporting between P1 and CP1 and for transporting between P2 and CP2 (level 4, right branch). Transporter B identifies the same behaviors, and A and B can once again search for a combination of these behaviors that still encompasses the parent behavior but reduces the opportunities for undesirable interactions. For example, A might adopt the behavior of delivering between P2 and CP2 only, while B delivers between P1 and CP1.</p><p>If A and B further decompose these behaviors along the where dimension (level 5, left branch), they can determine that the only place left in which they might collide is the doorway. To avoid these collisions, they have several options. One option is to coordinate over the doorway on a case-bycase basis by decomposing into specific intervals over which they are delivering objects, as is shown in the figure <ref type="figure">(level 6</ref>). This connects to the behaviors we previously described from the bottom up. An alternative way to coordinate, not shown in the figure, is instead to negotiate over a long-term convention for using the doorway, such as giving each periodic access (A can use it during times 10 to 15, 20 to 25, 30 to 35, etc.). The advantage of coordinating this way is that the transporters do not need to repeatedly communicate as they do in the case-bycase approach; the disadvantage is that inefficiencies can arise as a transporter waits for its interval to begin even though the other transporter is not using the doorway during its turn. Fig. <ref type="figure">2</ref> also shows an alternative route to the most detailed behaviors. Once A and B have divided up the long-term tasks such that A is delivering between P2 and CP2, A can decompose its behavior along the when and what dimensions into individual, shorter-term, delivery behaviors (level 5, right branch). Each of these can then be further decomposed along the when and where dimensions into separate legs of the delivery task, corresponding again to the behaviors we previously described from the bottom up. The fact that the hierarchy is a graph rather than a tree shows how behaviors at a low level can be abstracted differently at higher levels in order to emphasize particular details. Recalling our ongoing example (Fig. <ref type="figure">1</ref> ) , transporter A should abstract its behavior for B to emphasize where it will be as it accomplishes its goals (the left-hand branch), while A should abstract its behavior for C to emphasize what deliveries it will make and when (the right-hand branch).</p><p>As Fig. <ref type="figure">2</ref> indicates, a full behavior hierarchy can be quite large and intricate, even for a small PCT problem. Agents should therefore not need to elaborate the entire hierarchy all of the time. Instead, they should progressively expand the hierarchy as their search for better coordination leads them to form alternative compositions and decompositions of behaviors. To propose such alternative behaviors, agents need to search along different behavioral dimensions, and to do this search, they need a suitable representation for the separate dimensions.</p><p>To facilitate the search, we represent each of the six behavioral dimensions as an explicit or implicit hierarchy. Explicit hierarchical representations for how (plans) and what (goals) are well-established in AI. Hierarchically representing dimensions that can take values within continuous domains-dimensions such as time and space-is more problematic. Our algorithms treat these dimensions as implicitly encompassing many alternative hierarchies, and so the algorithms build appropriate descriptions for these dimensions at run time. For example, because time can be represented as a continuous timeline, the algorithms can divide the line into whatever intervals make sense in the current situation. But, in addition, functions that specify noncontiguous intervals are legal entries in the hierarchy. For example, in the case where transporters A and B establish long-term conventions for using the door such as "A gets it from 10-15, 20-25, etc.", A can represent the temporal dimension of its behavior as a function that generates legal intervals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Metrics for Evaluating Collective Behaviors</head><p>We currently assume that all agents use the same language to describe the different behavioral dimensions. The agents thus can map a received behavior into their local representations; in essence, the behavioral dimensions describe a six-dimensional (6-D) space, and an agent can find the region in this space that a received behavior occupies. Because the goal of our mechanisms is for agents to search for more coordinated behaviors, an agent needs to be able to measure the quality of collective behavior expected from the combined behaviors that it has mapped into its 6-D space.</p><p>In general, the metrics that agents can employ can be extremely complex. For the application of coordinating transporters, however, we have restricted our focus onto just two metrics. The primary metric is essentially a binary test: If the collective behaviors indicate a potential resource conflict, then the collective behaviors are characterized negatively, otherwise the collective behaviors are characterized positively. In a delivery task, a resource conflict generally means that the transporters will attempt to occupy the same space at the same time. A secondary metric is applied only to behaviors without conflicts, and measures the time at which the last behavior of any agent concludes. Assuming that behaviors conclude when goals are achieved, this metric computes when the last goal is achieved. By using this metric, agents that have a choice in how they coordinate can prefer collective behaviors that achieve all their goals soonest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. The Protocol for Distributed Search</head><p>The protocol for distributed search uses the behavioral specifications and the metrics in the following way. An agent with its own activities (or a group of agents with group activities) forms a behavior hierarchy. Agents then exchange information at a high level of abstraction, and map received information into their local behavior hierarchies. By inspecting relationships between behaviors along the different dimensions, an agent can recognize potential negative interactions (resource conflicts) with another agent. For example, if two transporters engaged in deliveries have behaviors that overlap in both the temporal and spatial dimensions (such as being in the vicinity of the door at overlapping times), then the transporters could potentially collide.</p><p>In evaluating the combined, overlapping behaviors, an agent characterizes the coordination negatively using the primary metric of preferring to avoid conflicts. At this point, the agent has two choices. One choice is to perform local search in an attempt to discover acceptable alternative behaviors that resolve the conflicts. Local search algorithms for discovering such behaviors are described next (in Section 111-D). The second choice is to engage in further communication with the other agents to exchange more detailed information about the potentially conflicting behaviors. By examining the relationships between more detailed behaviors, the agents might discover that there is in fact no potential interaction. To pursue this choice, the agents move down to the next level of the hierarchy and exchange only the behavioral information that is relevant to the potential interaction. When it receives new behavioral information at more detailed levels, an agent maps this information into its hierarchy and the process repeats. For example, at the more detailed level (Fig. <ref type="figure">2</ref>, level 6), A might learn that B will be moving through the doorway over interval 12-14, and so no collision is possible. When they discover that their upcoming behaviors do not, in fact, interact, the agents discontinue their communications. Thus, agents that are not interacting discover this with minimal communication of more detailed information. However, if the behaviors still overlap, they once again can communicate even more detailed information (if moving through the doorway in the same direction, for example, A and B still might not collide), or they can resolve potential conflicts at this level of detail.</p><p>Although not stressed in our current set of metrics, agents can also engage in improving coordination even when their current behaviors do not conflict. For example, after having determined at a more detailed level that their delivery behaviors will not conflict, A and B could search through alternative behaviors anyway to discover opportunities to improve their overall performance. If a transporter could carry 2 objects, then A and B could meet at the door and load both objects on one of them so that the other could be temporarily free to pursue a different goal. This involves having one of them extend its behaviors to encompass both goals in its what dimension. By coordinating such cooperative activity at more detailed levels, the agents can make their interactions increasingly "crisp," know- ing, for example, more precisely when and where to meet.</p><p>For delivery tasks using the metrics we have defined, it is easy for transporters to discover negative (conflicting) interactions between their behaviors. Once discovered, these interactions must be resolved. Discovering potential positive (cooperating) interactions (a subset of which are described by von Martial as "favors" that agents do for each other <ref type="bibr" target="#b31">[32]</ref>) is less straightforward because 1) there is nothing initially "wrong" with their behaviors to trigger the agents to investigate more deeply; 2) there is no clear indication as to how they should modify their behaviors to discover better cooperation; and 3) there must be a balance between the time agents are willing to invest in finding better cooperative behaviors and the expected improvement that can be accrued from these behaviors. Our ongoing research considers these questions, but in this paper we concentrate on our initial investigation into the more clearly defined conflict resolution problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. The Local Search Algorithms</head><p>Given a set of local and received behaviors that potentially conflict, an agent can search for more coordinated behaviors. This search involves exploring alternative values along the behavioral dimensions so as to find acceptable, but no longer interacting, behaviors. For example, if A only has abstract information about B, it might resolve the conflict by modifying its behavior such that it will deliver its object during a time when B will not be moving.</p><p>Searching hypothetical behaviors is similar to searching hypothetical cases for argumentation [ 11. However, with argumentation the purpose of forming hypotheticals is generally to highlight the differences (or similarities) between a case being argued and a case that is being used for a precedent. Thus, argumentation often involves moving along dimensions between two known "states." Our algorithms must search in a space of possible joint behaviors without any "target" behaviors to necessarily guide the search <ref type="bibr" target="#b25">[26]</ref>.</p><p>The space of possible joint behaviors can be very large, and an emphasis of ours is on balancing the time transporters spend reasoning with the time they spend moving. As a result, we have patterned our local search algorithm after the algorithm employed in partial global planning, which faced the same constraints. The algorithm employs hill-climbing so ;I$ to restrict the part of the space searched at the cost of possibly missing better coordinated behaviors. Beginning with the initial set of behaviors, the algorithm generates candidate hypothetical behaviors by moving the starting behaviors along different dimensions. Using the metrics described in Section I JI-B, the new alternative candidate behaviors are evaluated; if any are better than the previous behaviors, then the best modification is chosen, and the search continues from this point. When no improvements are found, the search ends.</p><p>In practice, our existing mechanisms search along alternative dimensions in order to satisfy the primary metric-to resolve conflicts. Search ends when no conflicts remain. For example, if two transporters expect to be in the same place at the same time, the local search algorithm can search along the temporal dimension (delay the time at which one of them will enter the area), the spatial dimension (change the place where one of them will be at that time), and the what (goal) dimension (redistribute the deliveries assigned to them). Any of these resolutions are candidate alternative behaviors. The secondary metric-to minimize the latest time when a goal will be achieved--can be used to choose among these options.</p><p>In continuous dimensions (such as space and time), the hearch algorithm essentially uses the extent of overlap between conflicting behaviors to determine how far along a dimension lo move to resolve the conflict. In discrete dimensions (such as specific goals to achieve), the search algorithm identifies siblings to the current values and attempts them. For example, when two transporters each have their own delivery goals (as represented in the what dimension of their behaviors), then these goals are considered as siblings in the taxonomy of goals. The algorithms modify the transporters' behaviors along this dimension by proposing alternative distributions of the goals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Control Knowledge and Heuristics</head><p>Knowledge to guide the distributed search in the behavior hierarchy is crucial for the search to terminate in a reasonable time. Some of the knowledge that we have employed is inherent in the algorithms we have chosen for the delivery domain. Thus, by using hill-climbing for local search, we implicitly include the assumption that more coordinated behaviors will be in the vicinity of existing behaviors. Local search can also involve control knowledge on how to modify behaviors along different dimensions. For example, by insisting that temporal modifications can only introduce delays in behaviors, we can force the search to never enter cycles where a behavior is shuffled back and forth between two different time intervals.</p><p>A basic heuristic in proposing alternative behaviors is that, in a sense, the "smaller" the behavior is, the better. That is, if a behavior occupies less volume in the 6-D behavior space, then it is less likely to overlap with other behaviors. This heuristic manifests itself during the search along the where and what dimensions. When choosing alternative spatial areas (different paths to a location), preference is given to shorter paths. When deciding whether to reallocate goals among agents, preference is given to exchanges that reduce the time and space needed to fulfill those goals. In the delivery domain, a transporter will prefer an exchange of tasks so that, for example, the object it is reassigned to pick up is closer than the object it was initially assigned.</p><p>Our protocol also makes assumptions to control communication and computation during the distributed search. Implicit in the protocol is the heuristic that abstract information is less costly to communicate than more detailed information; that is why agents begin by exchanging information at high levels of abstraction and then work their way down. Additional heuristic information could be added to decide when to begin communication at a more detailed level or to skip levels of detail during dialogue. This type of knowledge must be based on information and expectations about the application domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Iv. EXAMPLE IMPLEMENTATION AND EXPERIMENTS</head><p>So far, we have described our developing theory that views the process of coordinating as distributed search, and have described the components of that theory using the problem of coordinating transporters as an example. Building on these ideas, we now detail an implementation of these components, and show how the particular choice of metrics, protocol, and search algorithm allows a variety of coordination outcomes with different costs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The PCT Domain</head><p>An important aspect of the PCT domain is that physical locations (space) and tasks (objects to carry) cannot be shared at the same time by multiple agents. These constraints are easily embodied in our simulation for this application, implemented in the MICE testbed <ref type="bibr" target="#b24">[25]</ref>. A second facet of the domain that is important for our simulation is that communication between agents, and the reasoning of agents, takes time. Agents must divide their time between deliberation and action <ref type="bibr" target="#b1">[2]</ref>.</p><p>Other important assumptions that we are making in our experiments with this domain are that sensors have limited range and sensitivity, and that processing sensory data is slow and error prone. These assumptions reflect the limitations of the current technology for perception on mobile robots, in which processing visual data is time consuming relative to robot motion, so that by the time a robot interprets an image, performs plan recognition, and infers that it and another robot are on a collision course, the collision has already occurred. Thus, a strategy that people solving this problem might employ-that of acting independently and reacting before any anticipated collisions-is not considered a viable option here. Moreover, some unstructured problems, such as piloting aircraft around a busy airport, do not (safely) admit to a reactive solution even between humans. Thus, while reactively coordinating over behaviors that have been inferred through observation is an important research direction and can be integrated into our coordination framework, our initial work has concentrated on coordinating over explicitly communicated behaviors. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Implementation</head><p>To complete the implementation of the protocol and local search heuristics that we have already outlined, we have made several assumptions to promote structured communication and algorithmic convergence. First, we assume that each agent is given a unique authority value, so that agents can decide whose planned behavior should get priority when the behaviors are equally ranked. Second, we assume that there are distinct intervals during which behavioral information is exchanged and modified. Third, we assume that agents modify their behaviors only by introducing delays in their actions, choosing alternative routes, or exchanging goals. That is, transporters can only search along the when, where, and what dimensions. TO establish the costs and benefits of resolving along the different dimensions, we allow the user to supply a parameter indicating which dimensions to search along and in what order.</p><p>The coordination process begins by each transporter broadcasting a message indicating who it is and what goal it wants to pursue to all of the other transporters that it knows about. This corresponds to step 1 in Fig. <ref type="figure">3</ref>, which graphically depicts how the current protocol is used in a group of three agents. After a transporter receives a similar announcement from each transporter it sent one to, it builds a list of transporters sorted by their goal priorities. When transporters have equal priority goals, they are sorted by their unique authority values. Because transporters develop identical lists, the highest authority (superior) transporter knows who it is. This transporter sends messages to the other (inferior) transporters indicating 1) a dimension for resolving conflicts and 2) its most abstract behavioral information (Fig. <ref type="figure">3</ref>, step 2). Each of the inferior transporters compares its local information to the abstract behavior it has received, and checks for conflict. This is simply computed by determining whether it expects to be in an overlapping region at an overlapping time interval. If no conflict is possible, it sends an empty message back to the superior who records that no conflict exists.</p><p>If a conflict exists, the inferior can either resolve it or more fully explore it. It resolves (or reduces) the conflict by searching for alternative behaviors along the announced dimension. If that dimension is when, it delays its activities until after the superior has completed its own actions; if where, it moves through another spatial region (if possible); and if what, it proposes an exchange of goals. Alternatively, it can explore the conflict by comparing its more detailed anticipated behavior (at the next level of the hierarchy) with what it knows of the superior, and then sending information about those aspects of its behavior that might be conflicting back to the superior. The superior compares these with its more detailed behaviors, and sends back only the more detailed behaviors that might interact. This process continues until the inferior resolves (or reduces) the conflict at some level, discovers on closer inspection that no conflict will occur, or exhausts the conflict resolution options available with the current search dimension (Fig. <ref type="figure">3</ref>, step 2). Either way, the inferior sends a message back to the superior who records that negotiation with that agent, using the current search dimension, is complete.</p><p>When the superior has heard from all inferiors, it passes control to the next transporter in the pecking order (Fig. <ref type="figure">3</ref>, step 3), indicating to it whether the current search dimension has been successful in removing all conflicts so far. The process repeats, and the new superior interacts with the remaining inferiors to remove conflicts (Fig. <ref type="figure">3</ref>, step 4). When done, the process repeats again, and so on. At each repetition, the set of inferiors decreases, until no inferiors remain (Fig. <ref type="figure">3</ref>, step 6). At this point, the overall superior checks to see if all of the conflicts have been removed (Fig. <ref type="figure">3</ref>, steps 7 and a), and if so the agents begin execution (Fig. <ref type="figure">3</ref>, step 9). Otherwise, the superior agent announces a new dimension to use and the whole process repeats (Fig. <ref type="figure">3</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>, step 2).</head><p>There is one wrinkle to the protocol: When an inferior modifies its behaviors to avoid conflicting with the current superior, it might introduce behaviors that conflict with previous superiors. For this reason, before an inferior sends a message to the current superior indicating that no conflict exists anymore, it first communicates with previous superiors to ensure no new conflict has been introduced (Fig. <ref type="figure">3</ref>, step 5). If a new conflict has occurred, the inferior uses the same techniques as before to resolve the conflict with the previous superior, and then checks for new conflicts with the current superior. We can guarantee that we will not enter infinite loops of refinement because of our assumption that a transporter changes its behavior only by 1) introducing delays (always postponing actions), 2) choosing a route that no superior has chosen or 3) exchanging goals for mutual benefit. Using temporal modification, the transporters could at worst serialize their actions so that no parallelism remains (fortunately, such worst-case scenarios need seldom occur). Using spatial modification, the transporters at worst pursue very roundabout routes. Using goal exchanges, the transporters will arrive at a locally maximal set of assignments and then discontinue exchanges.</p><p>When all conflicts have been resolved, the transporters synchronize and then begin carrying out their planned activities. As each completes its activities, it again broadcasts this fact (along with its next goal's priority) to the others; when all have completed their activities, the protocol is initiated again for the next goals. This is just one possible implementation of the protocol, and stresses concurrent painvise coordination in a manner reminiscent of the contract net protocol <ref type="bibr">[28]</ref>. Because guaranteeing convergence is of prime importance (to avoid robot collisions), the protocol stresses the fact that, at any given time, one agent (the superior) is holding its behaviors constant while the others search for compatible behaviors that they can adopt. Moreover, because we restrict how alternative behaviors can be generated (and force inferiors to double-check changes with all previous superiors as well), indirect interactions (A and C interact indirectly if they each directly interact with B) are handled. This is very different from more flexible forms of negotiation involving compromise between agents [ 221, <ref type="bibr" target="#b26">[27]</ref>. However, protocols that cannot ensure consistency among the agents' knowledge cannot ensure convergence. For example, the asynchronous protocol in partial global planning allowed agents to be responsive and flexible, but could not guarantee that the agents would ever converge on a commonly held collective plan <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr">[15]</ref>. While lack of complete coherence merely degrades performance in cognitive tasks like the application domain for partial global planning, it can be catastrophic in physical domains where inconsistencies can lead to unrecoverable conflicting actions (like collisions). Systems where an agreement among the agents must eventually be made generally must introduce some tie-breaking machinery, such as an "arbitrator" whose decision is final 1331. We are currently investigating more robust implementations in which new agents can join in at any time, agents can recover if one of them fails during the protocol process, and agents can dynamically allocate authority based on current circumstances (such as through evaluations of constraints and interactions ~31, [w.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Experiments</head><p>Our implementation and experiments were developed to test the feasibility of our approach and to verify our intuitions about the process and results of coordination when it is viewed as distributed, hierarchical search. To evaluate feasibility, we were simply interested in determining whether our approach could lead transporters to resolve conflicts among their behaviors in a systematic manner. Beyond this basic level of performance, however, we had several other intuitions regarding the tradeoffs between cost and quality of coordination, and regarding the utility of different dimensions for improving coordination.</p><p>Regarding the tradeoffs between cost and quality, our expectation was that there is some optimal level of detail at which agents should coordinate to maximize their performance in conflicting situations. This level of detail depends on the relative costs of deliberation, communication, and action. As dcliberation and communication become less costly compared to action, then agents are better off spending more time coordinating at greater levels of detail (for crisper coordination). A5 action becomes less costly, then agents should not spend large amounts of time coordinating perfectly, when simply acting sooner (even if less well coordinated) would be better. Implicit in this description is the additional expectation that coordinating at levels of greater detail improves coordination.</p><p>We also expected different dimensions to resolve conflicts better in different situations. That is, no single dimension, or single combination of dimensions, would always be the best choice for the local search algorithm. We also expected each dimension to be applicable at different levels of detail, with varying results.</p><p>porter problem that we are simulating is shown in Fig. <ref type="figure" target="#fig_3">4</ref>, where the producers (squares on the left) generate objects to be delivered (solid geometric icons). Transporters (hollow circles) and consumers (squares on the right) represent the object that they "want" as a hollow icon matching the object's icon. Transporters pick up the corresponding object and deliver it to the appropriate consumer. In these experiments, the producer at the top feeds into the consumer at the top, and the producer at the bottom feeds into the consumer at the bottom. In this problem, two doorways join the rooms (although the lower doorway is more distant to both transporters). If the transporters attempt to occupy the same location at the same time, they "bounce off" each other and return to their previous locations. Transporters require 1 simulated time unit to move in any direction.</p><p>The specific problem has clearly been designed to require coordination in order to exercise the mechanisms we have developed. With the constraints in this environment, a more random placement of agents would in most cases result in situations where the deliveries could be pursued independently. However, those cases where agents would collide without coordinating have such dire consequences (the loss of expensive robots) that the costs of coordinating when unnecessary are far less than the costs of failing to coordinate on the rare occasions when it is needed. While we have experimented with scenarios that do not require coordination and that involve more than two agents <ref type="bibr">[17]</ref>, the experiments we present here are directed toward demonstrating the capabilities of our mechanisms rather than rigorously analyzing their performance under all conditions.</p><p>In the simulation, each transporter has its own distinct blackboard-based architecture, implemented in GBB <ref type="bibr" target="#b5">[6]</ref>. The transporters are given appropriate knowledge sources for planning paths to pickup and delivery positions, for building behaviors based on these plans, for exchanging information at various levels of their behavior hierarchy, and for modifying behaviors along the what, when, and where dimensions to avoid potential collisions.</p><p>Communication delay between transporters is 1 simulated time unit. To measure the protocol's communication overhead, we record the number of messages exchanged. Similarly, to measure the computational overhead, we use MICE'S capabilities for charging transporters for time spent reasoning in the following ~a y . ~A s it compares behavioral information, a transporter keeps track of how many behaviors are retrieved from its blackboard. We associate with each retrieval a time  allows the agents to exchange tasks (c) to achieve a better overall assignment. Both packages can then be picked up in parallel (d). Following the pickup, contention for the space near the door forces one agent (the circle) to wait (e) until the other agent (the triangle) is clear of the door (9.) cost, n, where n represents the amount of simulated time spent making the retrieval. Note that n can be fractional, in which case the fractional time units are accumulated and translate into integer time costs when enough have accumulated. MICE increments an agent's clock based on the number of simulated time units spent reasoning. We also measure the simulated time spent carrying out the activities (from the earliest time an agent begins moving to the latest time an agent arrives at its delivery destination), and the overall time to achieve all of the goals.</p><p>Coordinating Over One Delivery When coordinating a single delivery, the transporters' behavior hierarchies have three levels (corresponding to levels 5-7 in Fig. <ref type="figure">2</ref>). At the abstract level, a transporter's behavior encompasses the entire region in which it could move over the entire delivery interval (Fig. <ref type="figure">2</ref>, level 5, right branch, left behavior). At the intermediate level, a transporter's behavior is split into regions for before the doorway, in the doorway, and past the doorway, with corresponding time intervals (Fig. <ref type="figure">2</ref>, level 6). At the detailed level, the behaviors indicate specific locations at unit time intervals (Fig. <ref type="figure">2,</ref><ref type="figure" target="#fig_5">level 7</ref>).</p><p>In the experiment, the agents are initially placed in the environment (Fig. <ref type="figure" target="#fig_3">4(a)</ref>), and then are assigned objects to pick up and deliver, as shown in Fig. <ref type="figure" target="#fig_3">4(b)</ref>. The agents build behaviors corresponding to different levels of detail for pursuing their tasks, and exchange information at the most abstract level. They recognize a potential conflict (both when crossing paths to collect their respective objects and when moving through the door), and can either engage in further dialogue or they can attempt to resolve the conflict at this level. In the scenario shown, the agents exchange information at an intermediate level of detail, and then attempt to resolve the conflicts. At this level, they begin by exploring the space of alternative behaviors along the what dimension, and discover that they can reduce the "volumes" of their behaviors by swapping delivery tasks (shown in Fig. <ref type="figure" target="#fig_3">4</ref>(c) as the agents changing their icons).</p><p>This modification to behaviors allows the agents to avoid conflicts in their pick up motions, so that they can move toward their objects concurrently as shown in Fig. <ref type="figure" target="#fig_3">4(d)</ref>. However, the agents still have to avoid collisions when moving through the door. No further alternatives are possible by searching along the what dimension, so the agents, in this experiment, search along the when dimension by changing when they will be performing the behaviors of moving toward the door, moving through the door, and proceeding from the door. They constrain these such that one agent moves toward the door while the other remains stationary (Fig. <ref type="figure" target="#fig_3">4(e)</ref>), and then both move once the first has cleared the door (Fig. <ref type="figure" target="#fig_3">4(f,</ref><ref type="figure">)</ref>).</p><p>We have experimented with variations of this scenario where we alter the level at which agents resolve conflicts and the simulated time needs for reasoning. These variations allow us to test our expectation that resolving at more detailed levels is better when computation is fast relative to movement. In Table <ref type="table" target="#tab_1">I</ref>, we summarize the communication overhead and the time required to carry out the (more or less) coordinated behaviors once they have been established. Experiment A1 is the benchmark, where the agents do not coordinate at all. Com-munication overhead is zero, but the time needed to carry out thcir behaviors is infinite because the transporters repeatedly collide on their way to pick up their objects. Experiments A2-A4 summarize what happens when transporters that resolve at different levels of detail along the what (swapping goals) and then the when dimensions. As we move from abstract to detailed resolution, communication increases (because more detailed information is exchanged) but the coordination of the actions improves. When they resolve the conflict for the door at the abstract level, one transporter delays its behavior to avoid overlaps with the other transporter's behavior, which means that it does not move until the other transporter has completed its delivery. At the intermediate level, the transporter delays its smaller behaviors until there are no overlaps, meaning that it can begin moving as soon as the first transporter has cleared the door. At the most detailed level, the second transporter dclays only briefly to let the first go through the door just in front of it. Because resolving at greater levels of detail increases parallelism, the time needs to carry out the behaviors is less.</p><p>As we vary the relative time needs for computation (coordination) versus movement, we examine how this affects the overall time to complete the tasks (time spent coordinating plus the time to carry out the coordinated behaviors). The trends are shown in Fig. <ref type="figure">5</ref>. When movement is inexpensive compared to coordination, then resolving conflicts at abstract levels is most effective. But as the cost of coordinating becomes relatively lowcr, resolving at the intermediate level, and then at the detailed level, becomes more efficient. That is, it is better to spend the time that it takes to coordinate optimally than to rapidly agree on suboptimally coordinated behaviors. Now, if we force agents to only resolve interactions along the when dimension (they cannot swap goals), we see the following (Table I A5-A7). First, they communicate less than when they resolve along both the what and when dimensions. But they require more time to carry out their behaviors because, when the agents do not swap goals, they must travel longer distances. As we vary the relative time needs for coordination versus movement (Fig. <ref type="figure">6</ref>), we see the same trends as in Fig. <ref type="figure">5</ref>. However, note that the overall time needs are generally less when resolving along only the when dimension, because the time spent resolving along a second dimension is generally greater than the time saved by having transporters deliver the nearer objects. We should also point out that having transporters resolve only along the what dimension is insufficient, because after they have swapped objects they will still collide at the doorway unless they resolve temporally or spatially.</p><p>If we force agents to resolve interactions along the what and then the where dimensions, they swap objects and then the lower agent moves through the lower door. Because they are resolving along two dimensions, communication overhead is fairly high (Table <ref type="table" target="#tab_1">I</ref> AS-AlO), but by moving through different doorways, they remove overlaps between their behaviors and can act completely in parallel. Contrary to our initial expectations, the quality of coordination does not improve as we move from the abstract to the detailed level: in all cases, one transporter goes concurrently through the farther door, so coordination at any level yields the same result. Thus, in analyzing the trends (Fig. <ref type="figure" target="#fig_5">7</ref>), coordinating at the abstract level is always the best, and is actually better than most other combinations of dimensions and levels of detail (Figs. <ref type="figure">5</ref> and<ref type="figure">6</ref>).</p><p>Finally, the agents can resolve interactions along just the where dimension, but only at the most detailed behavior level. When they cannot swap objects, the agents must cross paths. At abstract and intermediate levels, an agent cannot find a region that includes its initial location and its object's location that does not also overlap with the other agent's region of movement. At the detailed level (Table <ref type="table" target="#tab_1">I</ref> A l l ) , the agents exchange a number of messages to update each other on detailed modifications to their paths, and arrive at a fairly rapid time to complete their activities. However, the computation time needed to arrive at coordinated behaviors at this level makes resolution in this way infeasible-its overall costs are worse than any shown in Figs. <ref type="figure">5</ref><ref type="figure">6</ref><ref type="figure" target="#fig_5">7</ref>for all computation/movement cost ratios.</p><p>As we had anticipated, our implementation and experiments successfully demonstrated that the mechanisms for conflict resolution that we derived from our theory were able to coordinate agents in a systematic manner. Moreover, we expected that the trade-off between the cost of coordinating and the quality of coordination would mean that, for a given ratio of computation/movement costs, there would be an optimal level of detail for coordination. This expectation was verified by our experiments, as evidenced by plots such as in Fig. <ref type="figure">5</ref>.</p><p>However, our expectation that coordinating at levels of greater detail will always improve coordination proved false. In the experiments involving spatial resolution (Table I  --A8-A10), moving to greater levels of detail gave no better behaviors than remaining at the abstract level. On reflection, the result led us to the realization that, when making our initial prediction, we were assuming that when the agents move to greater levels of detail, they can move along dimensions at higher resolutions. While this is true for the temporal dimension, it is not always true for space. In our experiments, the discrete locations of doors limited the options available to the agents. We also expected that different dimensions would resolve conflicts better in different situations, and this was borne out by our experiments. However, our anticipation that each dimension would be applicable at different levels of detail proved incorrect. For example, resolution along the where dimension alone is only applicable at the most detailed level. Resolution along only the what dimension could not resolve all conflicts at any level of detail.</p><p>As a result of these experiences, we are embarking on making improvements to our model of how our mechanisms should work. One improvement involves incorporating into our distributed search algorithm the ability to consider the degree of resolution available along particular dimensions when deciding whether to coordinate at the current level of detail or to exchange more detailed information. A second direction we are pursuing is to investigate control heuristics that begin to reflect the costs and benefits of searching along different dimensions. The challenge in this work is to tease out rules-of-thumb that can be applied across a variety of scenarios and, hopefully, application domains.</p><p>Coordinating Over Repeated Deliveries By introducing repeated deliveries, we change the character of the transporter task to highlight how our protocol and representation can reflect a search for coordinated behaviors that are more openended-more organizational. We illustrate this using the same scenario as in Fig. <ref type="figure" target="#fig_3">4</ref>, but we assume that producers on the left have multiple copies of the object to be delivered. In essence, this means that transporters now have 4 levels in their behavioral hierarchies, corresponding to levels 4-7 in Fig. <ref type="figure">2</ref>. In addition to the detailed, intermediate, and abstract levels of the previous set of experiments, a fourth organizational level is added.</p><p>With this extended hierarchy, the initial communications between agents are at the organizational level. The upper transporter indicates that, for all future times, it will be in the region including the upper producer, consumer, and door, delivering objects between the upper producer and consumer. The lower transporter delivers between the lower producer and consumer, but also wants to use the upper door because it is the more direct route. When they receive each other's organizational behaviors, they detect an overlap that could potentially lead to conflicts. At this point, they can exchange more detailed information about the immediately upcoming delivery of each. This brings them to the abstract behavior level, and the search for more coordinated behaviors continues just as in the one delivery case.</p><p>If instead the agents resolve the conflict at the organizational level, they must choose which dimension(s) to search along to resolve potential conflicts and how to do that search. Our preliminary protocol, in which they search along the when dimension only by having one agent delay its behavior until the other is finished, does not work in this case, because a behavior cannot be moved after one that goes on forever. To resolve temporally would require the search to find alternatives along the when dimension that would break time into "turns" for the agents, which is beyond the current capabilities of our local search algorithms.</p><p>However, the agents can search along the where dimension, so that the lower agent finds that, if it switches to the lower door, it can come and go as it pleases without any risk of collision. The agents ,thus adopt new behaviors at the organizational level which ensure that the long-term behaviors they have chosen are compatible.</p><p>Our experiments with this scenario, which we here only describe qualitatively, have illustrated that the protocol is capable of allowing agents to search for more coordinated behaviors at the organizational level as well. Depending on how many repetitions of deliveries we experiment with and the relative costs of planning versus moving, coordinating at the organizational level sometimes leads to better performance and sometimes does not because it has both advantages and disadvantages. An advantage is that the agents never need to coordinate again (at least until other changes occur that cause a need to reorganize), and so they can carry out their activities without incurring any more coordination overhead. A disadvantage, however, is that they might achieve their goals </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>v. DISCUSSION AND OPEN PROBLEMS</head><p>The example implementation we have described illustrates the importance of being able to represent, search through, and communicate about behaviors using different dimensions and levels of abstraction. Moreover, our informal theory provides guidelines for describing the different components that an implemented coordination approach requires. The decisions about how the distributed search protocol and local search algorithms should work, and about what metrics and heuristics to incorporate, were highly dependent on the application domain. Thus, we are by no means advocating that the particular choices we made for instantiating components in this domain are general to all domains. What we are advocating, instead, is that viewing previous coordination approaches in terms of the components of our theory, and how the realization of the components has been impacted by the application domains of those previous approaches, provides a characterization of prior and current techniques that facilitates integrating appropriate techniques when facing a new application domain.</p><p>For example, Table <ref type="table" target="#tab_2">I1</ref> briefly summarizes how a selected subset of previous coordination techniques can be mapped into the components of our theory. The Contract-Net protocol [ 101 provided mechanisms by which distributed agents could decompose large tasks (using a domain-specific taskdecomposition hierarchy) and perform a painvise "bidding" search for other agents to pursue subtasks. While the protocol provides hooks for controlling communication, such as allowing agents to focus requests for bids on a subset of others, the metrics for generating and evaluating bids and for measuring the collective performance were left up to the user. Multistage negotiation extends the contract-net protocol to allow iterative communication among neighboring agents (who have resources in common) as they perform distributed constraint satisfaction to assign communication network resources <ref type="bibr" target="#b3">[4]</ref>. The agents initially generate the space of all possible resource assignments that could restore services, and then locally search within this space to avoid conflicts over resource use and to maximize the restoration of high-priority services. Orga-nizational structuring imposes common1 y-known organization structures on agents, which provides control knowledge that guides their communications about subproblem solutions and focuses their local decisions about what subproblems to solve next <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr">[16]</ref>. The experimenter evaluates the performance of an organization, although if the agents themselves could do so then they could potentially diagnose and repair a faulty organization. Finally, Partial global planning builds on the organizational structuring model by allowing agents to communicate about and coordinate the major steps of their plans using an asynchronous protocol [E], [15]. At any given time, an agent could locally perform a hill-climbing search through the space of alternative orderings of major plan steps in order to find an alternative ordering that minimized the time to solve the overall problem. Control knowledge includes criteria for rating alternative plan step orderings and for restricting the information agents communicate regarding minor deviations from their plans <ref type="bibr" target="#b13">[14]</ref>.</p><p>By analyzing these approaches in terms of our theory's components, we can more succinctly characterize the ideas embedded into the domain-specific implementation we have developed. The italicized entries in Table <ref type="table" target="#tab_2">I1</ref> correspond to basic ideas that we have incorporated into our initial implementation. Among the ideas used were painvise communication (from Contract-Net), iterative dialogue and conflict avoidance metrics (from Multistage Negotiation), goal ratings and established organizational authorities (from Organizational Structuring), and metrics for minimizing solution time within a hill-climbing local search (from Partial Global Planning). More importantly, the characterization suggests a way to both analyze approaches to coordination and to integrate important ideas from different approaches into a single coordination framework.</p><p>Zlotkin and Rosenschein have also looked at coordination over delivery tasks 1341, but are particularly interested in issues of how self-interested (and potentially lying) agents can coordinate their activities. Unlike our work, their investigation has already addressed issues in searching for cooperative behavior rather than simply conflict avoidance, but their representation, which summarizes agents' options and objectives in a game-theoretic manner, does not capture important details for discovering interactions and searching for alternatives that is afforded by our richer behavioral representation. We hope to incorporate ideas from their work into components of our theory. Similarly, the work of Gasser on viewing organizations not as externally imposed structures but as evolving relationships <ref type="bibr" target="#b18">[19]</ref> is very much in tune with the perspective of organizing through distributed search as outlined in this paper. Decker and Lesser have looked at ways of using iterative exchange of more or less specific goals to coordinate agents <ref type="bibr">[ll]</ref>, which has similarities to this work.</p><p>We should also point out that the dynamic, unstructured nature of the delivery task is common to other domains, such as air-traffic control as studied at Rand <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b28">[29]</ref>. Unlike our mechanisms, the Rand approach involves centralizing authority. Specifically, in their approach a group of potentially interacting aircraft engage in a discussion to choose a group leader. Once chosen, the leader collects detailed information from each group member, designs a group plan to avoid negative interactions (aircraft collisions), and then tells each aircraft what it should do. Although the leader could send processing tasks to group members during the planning phase <ref type="bibr" target="#b29">[30]</ref>, control is centralized. Davis <ref type="bibr" target="#b8">[9]</ref> also has enumerated many of the issues involved in coordinating multiagent behavior in this type of task domain. While Davis' treatment is at a conceptual level, we have moved toward an experimental investigation.</p><p>That is not to say that the protocol that we implemented for the delivery task is optimal for that task. The rigid pecking order based on goal priority and static authority is only a first approximation; a better approach to deciding which agents should work around which others would also take into account the duration of agents' behaviors and the likelihood of change. The regimented top-down communication of the protocol should be altered to jump between levels more flexibly. For example, once agents have decided at the organizational level that they will only need to coordinate at the door, it might be more cost effective for them to henceforth skip intervening levels and to communicate only about access to the door at the most detailed level.</p><p>This ties into an open problem of incorporating more reactivity (and less overt planning) into the agents. In dynamic environments, the strategy our initial mechanisms employ of coordinating everything first and then acting is clearly unsuitable. We are already exploring variations of the protocol in which agents coordinate on their next near-term behaviors while they carry out their current behaviors. This interleaving (or more properly, concurrent performance) of coordinating and acting is critical for realistic environments, but must at times be balanced with coordination over longer term behaviors to avoid costly recoveries. For example, if only coordinating in a nearterm, reactive manner, transporters that encounter each other in the middle of a long, narrow hallway cannot recover without one of them backing out. Had they coordinated over access to the hallway rather than to particular locations, they could have avoided such wasted effort. Therefore, incorporating reactive capabilities through modeling each other's behaviors based on both observation and communication opens up opportunities for increasing flexibility and reducing communication and coordination overhead, but must be integrated with the more explicit coordination capabilities that we have emphasized in this paper. Fortunately, our theory supports both, given a more elaborate protocol that can both exchange long-term behaviors and reactively transmit immediate behaviors.</p><p>Another open problem in this research involves scaling the mechanisms up to many agents. The use of a pecking order in the protocol necessarily implies a serialization that might be unacceptable in large networks of agents. Our ideas along these lines follow two routes. One route is to forego the use of a pecking order and superioriinferior relationships so that more coordination can go on in parallel. The cost of this route is that it will become much more difficult to guarantee convergence since an agent cannot ever be sure that the model it has of another is current and consistent. A second route exploits the behavior hierarchy's ability to represent behaviors of teams by having agents form small teams which each use our existing protocol but in parallel; then these teams act as single entities in another round of the protocol. In other words, scaling up occurs through a divide and conquer approach. A critical step in this route is establishing the metrics that agents use to determine which teams they should form and join.</p><p>Other open problems deal with the agents' knowledge: Where does the hierarchical knowledge come from? How can we ensure consistency between agents? How do we represent constraints that moving along one dimension might impose on other dimensions? Other problems deal with controlling the distributed search: When should agents initiate an exchange of abstract behavioral information? How can agents efficiently explore alternative behavior modifications during search in cases where the behavior hierarchy is especially branchy? How can agents detect overlaps between behaviors using other dimensions without having to look for intersections between all descendents of the dimensions' values?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>We have introduced an encompassing, informal theory of coordination that draws together concepts from organization theory, planning, and scheduling by defining coordination as a distributed search through the space of multiagent behaviors. We have identified five key components of this theory-hierarchical representation, metrics, distributed search protocol, local search algorithms, and control knowledge-and have described how each can be instantiated for an example delivery task. Our experimental evaluation showed the power and flexibility of our new approach, both in terms of how it permits agents to coordinate in different ways (choosing new paths, re-timing their activities, swapping tasks) and how it allows them to communicate and coordinate at different levels of detail to balance the costs and benefits of coordination. Through these levels of detail, the experiments illustrate in a rudimentary way how planning mechanisms support organizational design (such as when agents take responsibility for large regions for extended periods of time), and scheduling (such as when agents closely time their access to specific locations).</p><p>The mechanisms that we have derived to address the delivery task domain represent a contribution to DAI research in that prior DAI approaches were not sufficient for this task. As we outlined in Section V, different previous DAI approaches generally emphasized different subsets of our theory's components. By drawing on ideas from these prior approaches and fitting them together in the framework provided by our theory, our mechanisms overcome the limitations of each prior approach with respect to this task, including the inability to communicate at different levels of detail exemplified in partial global planning, the assumed common organizational knowledge expected in organizational structuring, and the underspecified algorithms for local search of the Contract-Net.</p><p>More generally, our informal theory provides a foundation lor characterizing requirements for coordination and capabilities of coordination approaches, and for building and dewibing instances of coordination mechanisms. The multidimensional behavior hierarchy that we have introduced advances the field by introducing a common specification for representing and searching through alternative organizations, plans, and schedules. Other research in DAI has separately studied organizational structuring and design [SI, [21], multiagent planning [ 5 ] , <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b23">[24]</ref>, and scheduling <ref type="bibr" target="#b30">[31]</ref>. By removing the distinctions between organizations, plans, and \chedules, we have opened the door for the interdisciplinary study of coordination within our theory, drawing on this previous work and on ideas from organization theory and operations research.</p><p>Our long-term research is directed toward bringing ideas from these fields together, for application both to autonomous agents and to technology that supports human collaboration. As we have shown, our computational mechanisms allow a form of coordination that is well suited to domains where autonomous agents do not know, apriori, with whom they might interact. This is accomplished through a dialogue between the agents in which they are free to exchange information at different levels of abstraction about their anticipated behavior. In essence, this dialogue is a rudimentary form of negotiation between the agents: Although our specific implementation identified which agent involved in a conflict should modify its behavior, our protocol admits to more flexible (and arguably more computationally expensive) encounters, where each agent involved in a conflict moves along some oC it\ behavioral dimensions until a compromise is found that eliminates the conflict and yet allows each agent to retain important behavioral attributes. Our approach thus paves thc way for a new investigation into intelligent negotiation. Moreover, tools to support human collaboration need to search the space of joint activities that people can perform to find effective group behaviors. We are exploring how our theory addresses problems such as searching for times to meet and for information to exchange.</p><p>Finally, in the course of this research, our goal is to dcvelop the general algorithms and mathematical foundations lor formalizing our theory. While it is still too early to cast the theory with certainty into a particular formalization such as logic, decision theory, or game theory, our goal is to continue to characterize the attributes of the behavioral search space, the metrics, and the search algorithms that must be incorporated into a powerful formalism. Moreover, the formalism must admit to the conceptual theories from other coordination fields such as organization theory and sociology. We are far from discovering the appropriate formalism, but as our search continues we will continue to develop and extend instances of the theory both for practical reasons and to gain new insights into the theory of coordination.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>7 Fig. 2 .</head><label>72</label><figDesc>Fig. 2. Example behavior hierarchy</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>L 4 . 7 &lt; 5 . 8 .Fig. 3 .</head><label>47583</label><figDesc>Fig. 3. Three-agent example of protocol.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Simulation</head><label></label><figDesc>Parameters and MeasurementsThe specific trans-3The estimation of reasoning time in these experiments is different from the calculations used in previous experiments[ 171.   </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Coordination at intermediate level of resolution. The initial task assignments (b) have the upper agent delivering the lower package and the lower agent delivering the upper package. Negotiation along the what dimension (who delivers what package)allows the agents to exchange tasks (c) to achieve a better overall assignment. Both packages can then be picked up in parallel (d). Following the pickup, contention for the space near the door forces one agent (the circle) to wait (e) until the other agent</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Overall time versus computationimovement cost ratio: What and When.Resolving by When Dimension</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Overall time versus communicationimovement cost: What and Where.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>.</figDesc><table><row><cell>WHO: A</cell><cell>WHO: A</cell></row><row><cell>WHAT: del(obl,P2,CP2)</cell><cell>WHAT: del(obl,P2,CP2)</cell></row><row><cell>WHEN: 10-20</cell><cell>WHEN: 14-16</cell></row><row><cell>WHERE: south-rooms-1-2</cell><cell>WHERE: doorway12</cell></row><row><cell>HOW: pickup-carry-putdown</cell><cell>HOW: carry</cell></row><row><cell>WHY: maintain-thruput</cell><cell>WHY: maintain-thruput</cell></row><row><cell>(a&gt;</cell><cell>(b)</cell></row><row><cell>WHO: A</cell><cell></cell></row><row><cell>WHAT: dels(P2,CP2)</cell><cell></cell></row><row><cell>WHEN: forever</cell><cell></cell></row><row><cell cols="2">WHERE: south-rooms-1-2</cell></row><row><cell cols="2">HOW: pickup-carry-putdown-return</cell></row><row><cell cols="2">WHY: maintain-thruput</cell></row><row><cell>(c)</cell><cell></cell></row><row><cell cols="2">Behavior (a) indicates that transporter A, over the interval</cell></row><row><cell cols="2">from times 10 to 20, is delivering object 1 from producer</cell></row><row><cell>2 to consumer-producer</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE I</head><label>I</label><figDesc></figDesc><table><row><cell></cell><cell cols="4">ONE DELIVERY EXPERIMENTS SUMMARY</cell></row><row><cell>Expta</cell><cell>Levelh</cell><cell cols="2">DimsC Msg$</cell><cell>ActionTimee</cell></row><row><cell>A1</cell><cell></cell><cell></cell><cell>0</cell><cell>CO</cell></row><row><cell>A2</cell><cell>abs</cell><cell>GT</cell><cell>14</cell><cell>71</cell></row><row><cell>A3</cell><cell>int</cell><cell>GT</cell><cell>16</cell><cell>50</cell></row><row><cell>A4</cell><cell>det</cell><cell>GT</cell><cell>17</cell><cell>37</cell></row><row><cell>A5</cell><cell>abs</cell><cell>T</cell><cell>8</cell><cell>83</cell></row><row><cell>A6</cell><cell>int</cell><cell>T</cell><cell>10</cell><cell>67</cell></row><row><cell>A7</cell><cell>det</cell><cell>T</cell><cell>11</cell><cell>43</cell></row><row><cell>A8</cell><cell>abs</cell><cell>GS</cell><cell>14</cell><cell>41</cell></row><row><cell>A9</cell><cell>int</cell><cell>GS</cell><cell>18</cell><cell>41</cell></row><row><cell>A10</cell><cell>det</cell><cell>GS</cell><cell>19</cell><cell>41</cell></row><row><cell>A l l</cell><cell>det</cell><cell>S</cell><cell>17</cell><cell>47</cell></row><row><cell cols="2">a Experiment number.</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Level where behavior conflicts arc resolved: ABStract,</cell></row><row><cell cols="3">INTermediate, or DETailed.</cell><cell></cell><cell></cell></row><row><cell cols="5">Dimensions for searching for resolved behaviors.</cell></row><row><cell cols="2">Messages exchanged.</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">Elapsed time for all transporter activities.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE I1 COMPARISON</head><label>I1</label><figDesc>OF PRIOR APPROACHES TO COORDINATION</figDesc><table><row><cell></cell><cell>Representation</cell><cell>Metrics</cell><cell>Protocol</cell><cell>Local Search</cell><cell>Control</cell></row><row><cell>Contract</cell><cell>domain-specific</cell><cell>user-supplied</cell><cell>pairwise</cell><cell>user-supplied</cell><cell>focused</cell></row><row><cell>Net</cell><cell>decomp hierarchy</cell><cell></cell><cell>bidding</cell><cell></cell><cell>addressing</cell></row><row><cell>Multistage</cell><cell>all possible</cell><cell>avoid resource</cell><cell>iterative</cell><cell>among possible</cell><cell>known</cell></row><row><cell>Negotiation</cell><cell>resource</cell><cell>conflicts</cell><cell>constraint</cell><cell>resource</cell><cell>neighbors</cell></row><row><cell></cell><cell>assignments</cell><cell>max high priority</cell><cell>satisfaction</cell><cell>assignments</cell><cell></cell></row><row><cell></cell><cell></cell><cell>restorals</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Organizational organization</cell><cell>evaluated by</cell><cell>result</cell><cell>elaborations of</cell><cell>authorities</cell></row><row><cell>Structuring</cell><cell>structure</cell><cell>experimenter</cell><cell>sharing</cell><cell>local activity</cell><cell>comm policies</cell></row><row><cell>Partial</cell><cell>major steps</cell><cell>minimize</cell><cell>asynch</cell><cell>hill climbing</cell><cell>plan-step ratings</cell></row><row><cell>Global</cell><cell>for achieving</cell><cell>overall</cell><cell>plan</cell><cell>among plan-step</cell><cell>sensitivity to</cell></row><row><cell>Planning</cell><cell>oartial results</cell><cell>solution time</cell><cell>exchange</cell><cell>orderings</cell><cell>Dlan deviations</cell></row><row><cell cols="3">less effectively. For example, if the upper producer-consumer-</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">transporter combination has run out of objects to deliver, the</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">lower transporter will still use the less direct route between</cell><cell></cell><cell></cell><cell></cell></row><row><cell>rooms.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>We would like to thank B. Chandrasekaran, Victor Lesser, and three anonymous reviewers for their very helpful comments. Also, discussions with the University of Michigan Distributed Intelligent Agents Group (the "UM DIAG") have helped us formulate ideas within this paper.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the National Science Foundation under grant IRI-9010645, in part by the NSF under Coordination Theory and Collaboration Technology grant IRI-9015423, in part by the University of Michigan Rackham Graduate School, and in part by a Bell Northern Research Postgraduatc Award.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Modelling legal argument: Reasoning with cases and hypotheticals</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Ashley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988-02">Feb. 1988</date>
		</imprint>
		<respStmt>
			<orgName>Univ. Mass.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Solving time-dependent planning problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Boddy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eleventh Int. Joint Con$ Artificial Intell</title>
		<meeting>Eleventh Int. Joint Con$ Artificial Intell<address><addrLine>Detroit, MI</addrLine></address></meeting>
		<imprint>
			<date>Aug</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Strategies of cooperation in distributed problem solving</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cammarata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mcarthur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Steeb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc.Eighth Int. Joint Con6 Artificial Intell</title>
		<meeting>.Eighth Int. Joint Con6 Artificial Intell<address><addrLine>Karlsruhe, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983-08">Aug. 1983</date>
			<biblScope unit="page" from="767" to="770" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Multistage negotiation in distributed planning,&apos;&apos; in , Readings in Distributed Artificial Intell</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Conry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><forename type="middle">A</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Lesser</surname></persName>
		</author>
		<editor>A. H. Bond and L. Gasser</editor>
		<imprint>
			<date type="published" when="1988">1988</date>
			<biblScope unit="page" from="367" to="384" />
			<pubPlace>San Mateo, C A Morgan Kaufmann</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Hierarchical planning in a distributed environment</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Corkill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ProcSixth Int. Joint Conf. Artificial Intell</title>
		<meeting>Sixth Int. Joint Conf. Artificial Intell<address><addrLine>Cambridge, MA; Amherst</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1979-02">Aug. 1979. Feb. 1979</date>
			<biblScope unit="page" from="168" to="175" />
		</imprint>
	</monogr>
	<note>An extended version was published as Tech. Rep. 79-13</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">GBB: A generic blackboard development system</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Corkill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">Q</forename><surname>Gallagher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">E</forename><surname>Murray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc.Nut. Conf Artificial Intell</title>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Systems</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Engelmore</surname></persName>
		</editor>
		<editor>
			<persName><surname>Morgan</surname></persName>
		</editor>
		<meeting>.Nut. Conf Artificial Intell<address><addrLine>Philadelphia, PA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1986-08">Aug. 1986</date>
			<biblScope unit="page" from="1008" to="1014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The use of meta-level control for coordination in a distributed problem solving network</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Corkill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Lesser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc.Eighth Int. Joint Conf Artificial Intell</title>
		<title level="s">Computer Architectures for Artificial Intelligence Applications</title>
		<editor>
			<persName><forename type="first">B</forename><forename type="middle">W</forename><surname>Wah</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G.-J</forename><surname>Li</surname></persName>
		</editor>
		<meeting>.Eighth Int. Joint Conf Artificial Intell<address><addrLine>Karlsruhe, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1983-08">Aug. 1983. 1986</date>
			<biblScope unit="page" from="507" to="515" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A framework for organizational self-design in distributed problem solving networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Corkill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dept. Comput. Inform. Sci., Univ. Mass</title>
		<imprint>
			<date type="published" when="1982-12">Feb. 1983. Dec. 1982</date>
			<pubPlace>Amherst</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Univ. Mass.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Rep. 82-33</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A model for planning in a multiagent environment: Steps toward principles for teamwork</title>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intell. Laboratory, Mass. Inst. Technol</title>
		<imprint>
			<date type="published" when="1981-06">June 1981</date>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">AI Working Paper 217</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Negotiation as a metaphor for distributed problem solving</title>
		<author>
			<persName><forename type="first">R</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Smith</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983">1983</date>
			<publisher>Artificial Intell</publisher>
			<biblScope unit="page" from="63" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Extending the partial global planning framework for cooperative distributed problem solving control</title>
		<author>
			<persName><forename type="first">K</forename><surname>Decker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Lesser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc.1990 DARPA Workshop on Innovative Approaches to Planning, Scheduling, and Contr</title>
		<meeting>.1990 DARPA Workshop on Innovative Approaches to Planning, Scheduling, and Contr</meeting>
		<imprint>
			<date type="published" when="1990-11">Nov. 1990</date>
			<biblScope unit="page" from="396" to="407" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Coordination of Distributed Problem Solvers</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Durfee</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>Kluwer Academic</publisher>
			<pubPlace>Boston</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Using partial global plans to coordinate distributed problem solvers</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Durfee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Lesser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Tenth Int. Joint Con$ Artificial Intell</title>
		<meeting>Tenth Int. Joint Con$ Artificial Intell<address><addrLine>Milan, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1987-08">Aug. 1987</date>
			<biblScope unit="page" from="875" to="883" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Predictability versus responsiveness: Coordinating problem solvers in dynamic domains</title>
		<author>
			<persName><surname>__</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc.Nat. Conf Artificial Intell</title>
		<meeting>.Nat. Conf Artificial Intell</meeting>
		<imprint>
			<date type="published" when="1988">1989. 1988</date>
			<biblScope unit="page" from="503" to="518" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Partial global planning: A coordination framework for distributed hypothesis formation</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1167" to="1183" />
			<date type="published" when="1988-08">Aug.. 1988. Sept./Oct. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Cooperation through communication in a distributed problem solving network</title>
		<author>
			<persName><forename type="first">S</forename><surname>__</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zachary</surname></persName>
		</author>
		<author>
			<persName><surname>Black</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Also in Cognition, Computing, and Cooperation</title>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Distributedartificial~ntelligence</surname></persName>
		</editor>
		<editor>
			<persName><surname>Huhns</surname></persName>
		</editor>
		<meeting><address><addrLine>Norwood, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Ablex</publisher>
			<date type="published" when="1987">1987. 1990</date>
			<biblScope unit="page" from="29" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A hierarchical protocol for coordinating multiagent behaviors</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Durfee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Montgomery</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nut. Conf Artificial Intell</title>
		<meeting>Nut. Conf Artificial Intell</meeting>
		<imprint>
			<date type="published" when="1990-07">July 1990</date>
			<biblScope unit="page" from="86" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Constrained heuristic search</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Baykan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eleventh Int. Joint Conf. Artificial Intell</title>
		<meeting>Eleventh Int. Joint Conf. Artificial Intell<address><addrLine>Detroit, MI</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989-08">Aug. 1989</date>
			<biblScope unit="page" from="309" to="315" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Representing and using organizational knowledge in DAI systems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Gasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Rouquette</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lieb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Distributed Artificial Intelligence</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Gasser</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Huhns</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="55" to="78" />
			<date type="published" when="1989">1989</date>
			<publisher>Pitman</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Communication and interaction in multi-agent planning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Georgeff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Con&amp; Artificial Intell</title>
		<meeting>Nat. Con&amp; Artificial Intell<address><addrLine>Washington, D.C.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983-08">Aug. 1983</date>
			<biblScope unit="page" from="125" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An organizational approach to adaptive production systems</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ishida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yokoo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Conj Artificial Intell</title>
		<meeting>Nat. Conj Artificial Intell</meeting>
		<imprint>
			<date type="published" when="1990-07">July 1990</date>
			<biblScope unit="page" from="52" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Negotiation among cooperating experts</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Lesser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1988 Distributed A i Workshop</title>
		<meeting>1988 Distributed A i Workshop</meeting>
		<imprint>
			<date type="published" when="1988-05">May 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Behavioral specification and planning for multiagent domains</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Lansky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SRI International</title>
		<imprint>
			<date type="published" when="1985">1985</date>
			<pubPlace>Menlo Park CA</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. 360</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Localized representation and planning methods for parallel domains</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Lansky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fogelsong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Con$ Artificial Intell</title>
		<meeting>Nat. Con$ Artificial Intell<address><addrLine>Seattle, Washington</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1987-08">Aug. 1987</date>
			<biblScope unit="page" from="240" to="245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Using MICE to study intelligent dynamic coordination</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Montgomery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Durfee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Second Comput. Society int. Conf: Tools for Artificial Intell</title>
		<meeting>Second Comput. Society int. Conf: Tools for Artificial Intell</meeting>
		<imprint>
			<date type="published" when="1990-11">Nov. 1990</date>
			<biblScope unit="page" from="438" to="444" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Reasoning, problem solving, and decision processes: The problem space as a fundamental category</title>
		<author>
			<persName><forename type="first">A</forename><surname>Newell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Attention and Performance VIII</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Nickerson</surname></persName>
		</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Callisto: An intelligent project management system</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sathi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">E</forename><surname>Morton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A i Mug</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="34" to="52" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The contract net protocol: High-level communication and control in a distributed problem solver</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1104" to="1113" />
			<date type="published" when="1980-12">Dec. 1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Architectures for distributed air-traffic control</title>
		<author>
			<persName><forename type="first">R</forename><surname>Steeb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Cammarata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hayes-Roth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Thorndyke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wesson</surname></persName>
		</author>
		<editor>A. H. Bond and L. Gasser</editor>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>Morgan Kaufmann</publisher>
			<biblScope unit="page" from="90" to="101" />
			<pubPlace>San Mateo, CA</pubPlace>
		</imprint>
	</monogr>
	<note>Readings in Distributed Artificial Intell</note>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Cooperative intelligence for remotely piloted vehicle fleet control</title>
		<author>
			<persName><forename type="first">R</forename><surname>Steeb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Cammarata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Narain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rothenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Giarla</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986-10">Oct. 1986</date>
			<publisher>Rand Corp</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. R-3408-ARPA</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Managing resource Hillsdale, NJ: Erlbaum, 1980. allocation in multi-agent time-constrained domains</title>
		<author>
			<persName><forename type="first">K</forename><surname>Sycara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1990 DARPA Planning Workshop</title>
		<meeting>1990 DARPA Planning Workshop</meeting>
		<imprint>
			<date type="published" when="1990-11">Nov. 1990</date>
			<biblScope unit="page" from="240" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Coordination of plans in multiagent worlds by taking advantage of the favor relation</title>
		<author>
			<persName><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1990 DistributedAl Workshop</title>
		<meeting>1990 DistributedAl Workshop</meeting>
		<imprint>
			<date type="published" when="1990-10">Oct. 1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Multiagent cooperative problem solving through negotiation and perspective sharing</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J</forename><surname>Werkman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990">1990</date>
			<pubPlace>Bethlehem, PA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Lehigh Univ.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Negotiation and conflict resolution in noncooperative domains</title>
		<author>
			<persName><forename type="first">G</forename><surname>Zlotkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Rosenschein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Nat. Conf: Artificial Intell</title>
		<meeting>Nat. Conf: Artificial Intell</meeting>
		<imprint>
			<date type="published" when="1990-07">July 1990</date>
			<biblScope unit="page" from="100" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">He is currently a doctoral candidate in computer science and engineering at the University of Michigan, where his research activities have been in the areas of distributed artificial intelligence, communication, and simulation testbeds for multiagent environments. Previouslv. he was a member of the scientific staff at Bell Northern Research where he&apos;helped develop a distributed database management system. He is the recipient of a BNR Postgraduate Award and is a member of the</title>
		<author>
			<persName><forename type="first">Edmund</forename><forename type="middle">H</forename><surname>Durfee</surname></persName>
		</author>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<pubPlace>Ann Arbor</pubPlace>
		</imprint>
	</monogr>
	<note>1183 of this TRANSACTIONS. Thomas A. Montgomery received the B.S. degree in physics in 1984 and the M.S. degree in computer, information and control engineering in 1985, both from the University of Michigan. and AAAI</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
