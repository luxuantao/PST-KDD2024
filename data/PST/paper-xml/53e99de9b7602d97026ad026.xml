<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Performance assessment of foraging algorithms vs. evolutionary algorithms</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011-09-16">16 September 2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Mohammed</forename><surname>El-Abd</surname></persName>
							<email>melabd@auk.edu.kw</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Engineering Department</orgName>
								<orgName type="institution">American University of Kuwait</orgName>
								<address>
									<postBox>P.O. Box 3323</postBox>
									<postCode>13034</postCode>
									<settlement>Safat</settlement>
									<country key="KW">Kuwait</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Performance assessment of foraging algorithms vs. evolutionary algorithms</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2011-09-16">16 September 2011</date>
						</imprint>
					</monogr>
					<idno type="MD5">6DBE3C8B93DB11B5F8EB123B5EA98254</idno>
					<idno type="DOI">10.1016/j.ins.2011.09.005</idno>
					<note type="submission">Received 14 December 2009 Received in revised form 1 September 2011 Accepted 5 September 2011</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Foraging algorithms Evolutionary algorithms Performance comparison Evolutionary optimization</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The class of foraging algorithms is a relatively new field based on mimicking the foraging behavior of animals, insects, birds or fish in order to develop efficient optimization algorithms. The artificial bee colony (ABC), the bees algorithm (BA), ant colony optimization (ACO), and bacterial foraging optimization algorithms (BFOA) are examples of this class to name a few. This work provides a complete performance assessment of the four mentioned algorithms in comparison to the widely known differential evolution (DE), genetic algorithms (GAs), harmony search (HS), and particle swarm optimization (PSO) algorithms when applied to the problem of unconstrained nonlinear continuous function optimization. To the best of our knowledge, most of the work conducted so far using foraging algorithms has been tested on classical functions. This work provides the comparison using the well-known CEC05 benchmark functions based on the solution reached, the success rate, and the performance rate.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The foraging behavior of any living organism is defined as how this organism behaves in order to locate, handle, and ingest food. The approach taken in this behavior is referred to as the search strategy. For many animals, this strategy is usually broken down to three steps, namely: searching for and locating the prey, attacking the prey, and ingesting the prey <ref type="bibr" target="#b27">[28]</ref>. The relative importance of these steps depends on the animal type and the environment characteristics.</p><p>Search strategies adopted by many living organisms inspired the development of different optimization algorithms currently adopted for various engineering applications. The main idea was for the search agents to imitate the foraging behavior of organisms in order to search for a solution of the problem. The algorithms included ABC <ref type="bibr" target="#b13">[14]</ref> and BA <ref type="bibr" target="#b29">[30]</ref> mimicking the foraging behavior of honey bees. BFOA <ref type="bibr" target="#b27">[28]</ref>, which mimics the foraging behavior of a swarm of E.coli bacteria, and ACO <ref type="bibr" target="#b9">[10]</ref>, which mimics the foraging behavior of ants.</p><p>Previous studies performed to assess the performance of some of these algorithms included the work in <ref type="bibr" target="#b19">[20]</ref> showing that ABC performs better than PSO, an evolutionary algorithm (EA), and DE on a small suite of classical benchmark functions. The study in <ref type="bibr" target="#b16">[17]</ref> compared ABC against PSO, a genetic algorithm (GA), DE, and an evolutionary strategy (ES) algorithm on a larger number of functions. It was shown that the performance of ABC is better than or at least similar to those algorithms while having a smaller number of parameters to tune. The work in <ref type="bibr" target="#b15">[16]</ref> compared ABC to HS, and BA. The comparison was based on a small set of classical functions and ABC showed superior performance over both algorithms while producing reasonable results for higher dimensions.</p><p>The aforementioned studies suffer from two limitations. First, these studies only compare a certain algorithm to either evolutionary algorithms or other foraging algorithms but there is no single study that covers both. Second, the comparisons are based on a set of more or less classical functions. The proposed study overcomes these drawbacks by assessing the per-formance of a set of foraging algorithms against a set of evolutionary algorithms when applied to the well-known CEC05 benchmark functions <ref type="bibr" target="#b39">[40]</ref>. The comparison is carried out based on three different metrics: namely, the solution reached, the success rate, and the performance rate. Although there are many improvements for these algorithms in the literature, the algorithms studied in this work are the basic versions.</p><p>This paper is organized as follows: Section 2 covers the studied algorithms and provides a conceptual component-based comparison between them. The experimental study is presented in Section 3. The paper is concluded in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Studied algorithms</head><p>All the algorithms studied in this work are considered population-based algorithms, which is a class of meta-heuristics <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b41">42]</ref>. Population-based algorithms rely on iteratively updating a population of candidate solutions. The difference between foraging and evolutionary algorithms lies in the method adopted to update the population. It could be updated based on mimicking the foraging behavior of a living organism or by simulating an evolutionary process.</p><p>For foraging algorithms, ABC and BA simulate the foraging behavior of honey bees, BFOA simulates the foraging behavior of a swarm of E.coli bacteria, and ACO simulates the foraging behavior of ants. Although PSO could be considered a foraging algorithm, as it simulates the movement of a group of fish looking for food, to the best of our knowledge it has never been referred to as a foraging algorithm in the literature. The reason for this could be that PSO does not simulate the foraging behavior of a specific organism.</p><p>For evolutionary algorithms, the main approach is to simulate the evolutionary process in nature by adopting selection, crossover, mutation, and replacement operators. This class includes DE, GAs, ES, genetic programming (GP), and evolutionary programming (EP). Sometimes PSO is thought of as an evolutionary algorithm because the velocity and position update equations could be seen as a way of implementing the crossover and mutation operators.</p><p>Another type of population-based algorithms that is not tested in this work is the estimation of distribution algorithms (EDAs) <ref type="bibr" target="#b21">[22]</ref>. The main difference is that instead of evolving a population of solutions, a probability model capturing the search space characteristics is evolved instead. Some algorithms do not exactly fall under any category in this classification. One example is HS <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b40">41]</ref>, which follows the concept of finding the right harmony for a musical instrument. In this sense, the algorithm neither follows the evolutionary approach nor mimics the foraging behavior of any living organism. Some see it as an evolutionary algorithm as what is important is having a harmony that is evolved somehow from one iteration to the next. On the other hand, some think of it as a foraging algorithm mimicking the foraging behavior of a musician searching for a harmony balance. Another example of such algorithms, although not tested in this work, is the gravitational search algorithm (GSA) <ref type="bibr" target="#b32">[33]</ref>, which is a populationbased algorithm in which the individuals interact with each other based on Newtonian gravity and the laws of motion.</p><p>In the current study, we cover two algorithms that mimic the food foraging behavior of bees, for more of such algorithms one may refer to <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b17">18]</ref>.</p><p>Finally, we would like to note that all the algorithms shown in this work are at a high level of abstraction. For more detailed algorithmic steps, the reader is encouraged to consult the given references.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Artificial bee colony</head><p>The ABC algorithm was first proposed in <ref type="bibr" target="#b13">[14]</ref>. The algorithm was inspired by the method adopted of a swarm of honey bees to locate food sources. There are two different honey bee groups that share knowledge in order to successfully locate such sources. First, there are the employed bees that are currently exploiting a food source. Second, there are the unemployed bees that are continuously looking for a food source. Unemployed bees are divided into scout bees that search around the nest and onlookers that wait at the nest and establish communication with the employed bees.</p><p>This algorithm was applied to multidimensional and multi-modal function optimization in <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b18">19]</ref>. In ABC, S n solutions to the problem are randomly initialized in the allowable domain and referred to as food sources. An employed bee is allocated to each food source and is used to find a new food source using the following equation:</p><formula xml:id="formula_0">v ij ¼ x ij þ / ij Â ðx ij À x kj Þ;<label>ð1Þ</label></formula><p>where x ij refers to problem variable j in the ith food source, j is a randomly selected number in <ref type="bibr">[1, D]</ref> and D is the number of dimensions, / ij is a random number uniformly distributed in the range [À1, 1], and k is the index of a randomly chosen solution. Both v i and x i are then compared against each other and the employed bee exploits the better food source, which is a greedy selection mechanism.</p><p>In the second step, each onlooker bee randomly chooses a food source according to the probability given in Eq. ( <ref type="formula" target="#formula_1">2</ref>). Then, each onlooker bee tries to improve the selected food source using Eq. ( <ref type="formula" target="#formula_0">1</ref>):</p><formula xml:id="formula_1">p i ¼ fit i P Sn j¼1 fit j ;<label>ð2Þ</label></formula><p>where fit i is the fitness of the i th food source.</p><p>Finally, if a certain food source i cannot be improved for a predetermined number of cycles, referred to as limit, this food source is abandoned. The employed bee that was exploiting this food source becomes a scout that looks for a new food source by randomly searching the problem domain using the following equation:</p><formula xml:id="formula_2">x ij ¼ lb j þ r Â ub j À lb j À Á ;<label>ð3Þ</label></formula><p>where j 2 {1 . . . D} and D is the number of dimensions, lb j and ub j are the lower and upper bounds for problem variable j, and r is a random number uniformly distributed in the range [0, 1]. The ABC algorithm is shown in Algorithm Evaluate the new solutions and apply greedy selection 7:</p><p>Calculate the probability using Eq. (2) 8:</p><p>Produce new solutions using onlooker bees as in Eq. (1) 9:</p><p>Evaluate the new solutions and apply greedy selection 10:</p><p>for All solutions do 11:</p><p>if A solution has not been improved for limit cycles then 12:</p><p>Generate a new random solution using Eq. (3) 13:</p><p>end if 14:</p><p>end for 15:</p><p>Memorize the best solution found so far 16:</p><p>Cycle = Cycle + 1 17: end while 18: return best solution</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">The bees algorithm</head><p>Another algorithm that is inspired by the behavior of bees is the Bees algorithm (BA) proposed in <ref type="bibr" target="#b29">[30]</ref>. In the harvesting season, a group of scout bees continuously search for food sources. After returning to the hive, the bees perform what is known as the waggle dance as a form of communication with other bees. The information contained in the dance helps the colony to send flower bees to these food sources precisely. In order for the colony to efficiently collect more food, more flower bees are sent to more promising food sources. This is achieved in BA in a very simple form. The total number of food sources (solutions) investigated in an iteration is n, out of these n sources, the top m are referred to as the best sites. Out of the m best sites, the top e are referred to as elite sites. The elite sites, e, are exploited by nep bees while the rest of the best sites, m À e, are exploited by nsp bees, where nep &gt; nsp. Any bee searches around a certain food source in a neighborhood of size ngh according to: for the next m À e sites do 13:</p><formula xml:id="formula_3">u ij ¼ x ij þ / ij Â ngh;<label>ð4Þ</label></formula><formula xml:id="formula_4">for i 2 {1 . . . m}, j<label>2</label></formula><p>for nsp bees do 14:</p><p>Exploit site using Eq. (4) 15:</p><p>Update site if the objective value has improved 16:</p><p>end for 17:</p><p>end for 18:</p><p>for the last n À m sites do 19:</p><p>Re-initialize the food source 20:</p><p>end for 21:</p><p>Evaluate and sort the food sources 22:</p><p>Iter_number = Iter_number + 1 23: end while 24: return best solution 2.3. Harmony search HS <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b40">41]</ref> was introduced as an imitation of the musical process that searches for a harmony balance. In HS, each problem variable is a pitch of a different musical instrument and the complete solution is referred to as a harmony vector. If the pitch (decision variable value) makes a good harmony (good objective function value), it is stored in memory.</p><p>The memory part is modeled using a memory structure referred to as the Harmony Memory (HM) having a size HMS. Initially, HM is initialized with random harmonies. During the algorithm's progress, when a new harmony is found, it is inserted in HM replacing the worst harmony if it has a better objective function value.</p><p>In HS, new harmonies are developed by producing a series of new pitches. Each new pitch is produced following one of three rules. Playing one pitch from memory, picking one pitch from memory and adjusting it to play a new pitch, or playing a totally random pitch. These rules are applied using two parameters known as the Harmony Memory Considering Rate (HMCR) and the Pitch Adjusting Rate (PAR).</p><p>If the second rule is applied, a random pitch p j is picked from memory and adjusted according to the following equation:</p><formula xml:id="formula_5">p j ¼ p j þ / Â bw;<label>ð5Þ</label></formula><p>for j 2 {1 . . . D} and D is the number of dimensions, / is a random number uniformly distributed in the range [À1, 1], and bw is an arbitrary distance bandwidth.</p><p>If a totally random new pitch is to be generated, it is generated randomly in the allowable domain using the following equation:</p><formula xml:id="formula_6">p j ¼ lb j þ r Â ðub j À lb j Þ;<label>ð6Þ</label></formula><p>where lb j and ub j are the lower and upper bounds for decision variable j and r is a random number uniformly distributed in the range [0, 1]. Improvise a new pitch using Eq. (6) 14:</p><p>end if 15:</p><p>end for 16:</p><p>Evaluate the new harmony 17:</p><p>if the new harmony is better than the worst one in memory then 18:</p><p>Replace the worst harmony in memory 19:</p><p>end if 20:</p><p>Iter_number = Iter_number + 1 21: end while 22: return best harmony Many improvements exist for HS including the Improved HS (IHS) <ref type="bibr" target="#b23">[24]</ref>, the Global-best HS (GHS) <ref type="bibr" target="#b25">[26]</ref>, and the Differential HS (DHS) <ref type="bibr" target="#b7">[8]</ref>. However, the algorithm tested in this work is a population-based harmony search that was proposed in <ref type="bibr" target="#b24">[25]</ref>. In this work, we will refer to this algorithm as HS Pop . In HS Pop , the algorithm is exactly similar to Algorithm 3 with the exception of generating a population of harmonies in every iteration instead of a single one. Another modification is that bw is calculated as the standard deviation of the current population instead of being a randomly generated number.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">Bacterial foraging optimization algorithm</head><p>BFOA <ref type="bibr" target="#b27">[28]</ref> is inspired by the foraging behavior of a swarm of E.coli bacteria. The evolution of the swarm passes through four steps; namely, chemotaxis, swarming, reproduction, and elimination and dispersal as shown in Algorithm 4.</p><p>Chemotaxis are the motion patterns that the bacteria form in the presence of chemical attractants and repellents. The movement of the bacteria is achieved through tumbling and swimming. Tumbling is a one-step movement in a random direction while swimming is a continuous movement in a single direction. The bacteria alternate between the two modes of movement through their life cycle. A single chemotaxis step, where all the bacteria are moved, is maintained for N c iterations. While moving, each bacterium either tumbles or swims. The swimming is only maintained if the bacterium is continuously moving in the direction of increasing nutrient concentration but to a maximum of N s steps. For each bacterium h i , tumbling is defined as follows:</p><formula xml:id="formula_7">h tþ1 i ¼ h t i þ CðiÞ Â M i ffiffiffiffiffiffiffiffiffiffi ffi M T i M i q ;<label>ð7Þ</label></formula><p>where t is the generation number, C(i) is the step size (which could be different for each bacterium), and M i is a random number in the range [À1, 1] chosen as a random direction for movement. Swimming use the same equation for tumbling while M i is being fixed. It was noted that groups of bacteria form swarms in semisolid nutrient media. Sometimes when under stress, bacteria release chemical substances that other bacteria can react to, resulting in the bacteria moving in groups protecting it from the stress. Swarming is simulated in BFOA by adding attractant/repellant signals between bacteria to the fitness function. For a bacterium h i , this effect is calculated by combining signals from all bacteria h as follows:</p><formula xml:id="formula_8">J cc ðh i ; hÞ ¼ X S j¼1 J cc ðh i ; h j Þ ¼ X S j¼1 Àd attract Â e ðÀwattract P D m¼1 ðh jm Àh im Þ 2 Þ 2 4 3 5 þ X S j¼1 d repellant Â e ðÀw repellant P D m¼1 ðh jm Àh im Þ 2 Þ 2 4 3 5<label>ð8Þ</label></formula><p>where S is the swarm size, d attract and w attract (d repellant and w repellant ) are the depth of the attractant (repellant) released by the cell and width of the attractant (repellant) signal, and D is the size of the problem. After every N c chemotaxis steps, the bacteria reproduce. A healthy bacterium is split into two identical ones. This is simulated by selecting the best half of the swarm only to reproduce. Healthy bacteria are determined by the summation of their fitness over the period between the previous reproduction step and the current one.</p><p>In elimination and dispersal, which occurs every N re reproduction steps, changes in the bacteria environment might cause sudden changes to the population. These changes might include the death of some of the bacteria or the movement from one region to another. This is simulated for each bacterium by eliminating then dispersing (re-initializing in the search space) it with a low probability p ed .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 4. The BFOA algorithm</head><p>Require: S, N s , N c , N re , N ed , p ed , C(i) for i 2 {1 . . . S} 1: Initialize the population 2: Evaluate the population 3: for N ed elimination-dispersal steps do 4:</p><p>for N re reproduction steps do 5:</p><p>for N c chemotaxis steps do 6:</p><p>for every bacterium i do 7:</p><p>Move bacterium 8: m = 0 9:</p><p>while fitness improves and m &lt; N s do 10:</p><p>Move bacterium 11:</p><formula xml:id="formula_9">m = m + 1 12:</formula><p>end while 13:</p><p>end for 14:</p><p>end for 15:</p><p>Determine healthy bacteria 16:</p><p>Reproduce 17:</p><p>end for 18:</p><p>for every bacterium i do 19:</p><p>if rand &lt; p ed then 20:</p><p>Eliminate and disperse bacterium i 21:</p><p>end if 22:</p><p>end for 23: end for 24: return best solution</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.">Ant colony optimization</head><p>An ACO approach for solving continuous optimization problems, referred to as ACO R was proposed in <ref type="bibr" target="#b35">[36]</ref>. The approach relies on estimating the joint probability distribution for one dimension at a time using mixtures of weighted Gaussian functions. This approach helps in identifying promising disjoint areas in the search space. The algorithm works by having a solution archive T of k solutions. For each solution s t in the archive, the solution as well as its objective function value f(s t ) are stored. This archive is used to define the univariate distributions. For each dimension d, the dimension is updated by sampling a Gaussian distribution selected from the archive for that dimension. The values of this dimension d across all the solutions in the archive compose the vector l d , which is the vector of means for the univariate Gaussian distributions.</p><formula xml:id="formula_10">l d ¼&lt; s 1d ; s 2d ; . . . ; s kd &gt; :<label>ð9Þ</label></formula><p>To select one of these distributions, we have to calculate the weights vector w, which holds the weights associated with these distributions. To calculate the weights, the solutions are ranked according to their fitness, with the best solution having a rank of 1. A weight is calculated for each solution (constant across all its dimensions) as follows:</p><formula xml:id="formula_11">w l ¼ 1 qk ffiffiffiffiffiffi ffi 2p p e À ðlÀ1Þ<label>2</label></formula><formula xml:id="formula_12">2q 2 k 2 ;<label>ð10Þ</label></formula><p>where q is a parameter that determines how much we should prefer good solutions, k is the number of solutions stored in the archive, and l is the solution rank.</p><p>To select a certain Gaussian function, a probability p l is associated with each distribution (again constant across all its dimensions). This probability is calculated as the ratio of this function's weight to the summation of all weights:</p><formula xml:id="formula_13">p l ¼ w l P k r¼1 w r :<label>ð11Þ</label></formula><p>After selecting a certain Gaussian function g denoted by its mean s gd , where 1 &lt; g &lt; k. The standard deviation for this functions is calculated as:</p><formula xml:id="formula_14">r gd ¼ n X k j¼1 js jd À s gd j k À 1 ;<label>ð12Þ</label></formula><p>where n is a parameter to balance the exploration-exploitation behaviors and is constant across all dimensions. Finally the selected Gaussian function is used to produce m new solutions that are added to the archive while removing the worst m solutions. m is a parameter of the algorithm referred to as the number of ants. The whole process is shown in Algorithm 5. Rank the solutions in the archive 7:</p><p>Calculate the weights vector w using Eq. ( <ref type="formula" target="#formula_12">10</ref>) 8:</p><p>Calculate the probabilities vector p using Eq. ( <ref type="formula" target="#formula_13">11</ref>) 9:</p><p>for m ants do 10:</p><p>Probabilistically select a Gaussian function 11:</p><p>Calculate the standard deviation r gd using Eq. ( <ref type="formula" target="#formula_14">12</ref>)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>12:</head><p>Generate the new solution 13:</p><p>Add the new solution to the archive 14:</p><p>end for 15:</p><p>Remove the m worst solutions from the archive 16:</p><p>Iter_number = Iter_number + 1 17: end while 18: return best solution in the archive 2.6. Differential evolution DE <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b37">38</ref>] is a population-based algorithm in which the population is evolved from one generation to the next using mutation, crossover, and selection operators as shown in Algorithm 6.</p><p>For every individual x i in the population, the individual is mutated by randomly choosing three different individuals other than the current one and setting the resultant vector (known as the donor vector) as the addition of the weighted difference of two of these individuals and the third. The mutation operator yields a donor vector v i , which is defined as follows (for the classical DE):</p><formula xml:id="formula_15">v t i ¼ x t r 1 þ F Â x t r 2 À x t r 3 ;<label>ð13Þ</label></formula><p>where i 2 {1 . . . N} and N is the number of individuals, t is the iteration number, r 1 , r 2 , and r 3 are three randomly selected indices in the range [0, N] that are mutually exclusive and not equal to i, and F is a positive scaling factor. Next, a crossover operation is carried between the individual x i and the donor vector v i to yield the trial vector u i . This operation is carried out according to a probability CR, which is defined as follows (for binomial crossover):</p><formula xml:id="formula_16">u t ij ¼ v t ij if ðs i 6 CRÞ or ðj ¼ rd i Þ; x t ij if ðs i &gt; CRÞ or ðj -rd i Þ: (<label>ð14Þ</label></formula><p>where j 2 {1 . . . D} and D is the number of dimensions, s i is a randomly selected number in the range [0, 1], and rd i is a randomly selected number in the range [0, d] ensuring that at least one element from v i is transferred to u i .</p><p>Finally, a selection step is performed to update x i as follows: Iter_number = Iter_number + 1 13: end while 14: return best solution In <ref type="bibr" target="#b33">[34]</ref>, the classical DE (utilizing the rand/1/bin strategy) defined above was tested against the CEC05 benchmark functions and the main remark was that the chosen limit of function evaluations was not enough for DE to achieve good results. It was stated that for a problem dimensionality of 10, DE needs about 100s of thousands to several millions of function evaluations to reach good solutions.</p><formula xml:id="formula_17">x tþ1 i ¼ x t i if f x t i Þ &lt; f ðu t i À Á ; u t i if f x t i Þ P f ðu t i À Á : (<label>ð15Þ</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.7.">Particle swarm optimization</head><p>PSO is a population-based method, where the population is referred to as a swarm. The swarm consists of a number of individuals called particles. Each particle i in the swarm holds: (i) the current position x i , which represents a solution to the problem, (ii) the current velocity v i , (iii) the best position pbest i , the one associated with the best objective function value the particle has achieved so far, and (iv) the neighborhood best position nbest i , the one associated with the best objective function value found in the particle's neighborhood. The choice of nbest i depends on the neighborhood topology adopted by the swarm, different neighborhood topologies have been studied in <ref type="bibr" target="#b20">[21]</ref>.</p><p>In traditional PSO, each particle adjusts its own position in every iteration in order to move towards its best position and the neighborhood best according to the following equations:</p><formula xml:id="formula_18">v tþ1 ij ¼ wv t ij þ c 1 r 1 ðpbest t ij À x t ij Þ þ c 2 r 2 nbest t ij À x t ij ;<label>ð16Þ</label></formula><formula xml:id="formula_19">x tþ1 ij ¼ x t ij þ v tþ1 ij ;<label>ð17Þ</label></formula><p>for j 2 {1 . . . D} where D is the number of dimensions, i 2 {1 . . . n} where n is the number of particles, t is the iteration number, w is the inertia weight, r 1 and r 2 are two random numbers uniformly distributed in the range [0, 1), and c 1 and c 2 are known as the acceleration factors.</p><p>After changing its position, each particle updates its personal best position using (assuming a minimization problem):</p><formula xml:id="formula_20">pbest tþ1 i ¼ pbest t i if f pbest t i 6 f x tþ1 i À Á ; x tþ1 i if f pbest t i &gt; f x tþ1 i À Á : 8 &gt; &lt; &gt; :<label>ð18Þ</label></formula><p>Finally, the global best of the swarm is updated using the following equation:</p><formula xml:id="formula_21">gbest tþ1 ¼ arg min pbest tþ1 i f pbest tþ1 i :<label>ð19Þ</label></formula><p>This </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8.1.">The bee algorithms</head><p>Although ABC and BA both try to mimic the same bee behaviors, these behaviors are implemented differently:</p><p>Improving a food source: Updating a bee in ABC involves cooperation between the different bees as the movement of a certain bee i involves the information gained from another randomly selected bee k. On the other hand, the update equation in BA performs a simple local search around the current solution with a fixed neighborhood size.</p><p>Exploring the better food sources: Assigning more bees to better solutions is implemented in ABC through a probabilistic approach that is proportional to the fitness (thus the better the solution is, the larger the number of bees allocated to it). However, in BA, the number of elite sites is always fixed as well as the number of bees assigned to each site.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The scouting behavior:</head><p>Generating new random solutions is done differently in the two algorithms. In BA, the lower n À m solutions are randomly re-initialized in every iteration while in ABC this does not happen unless a solution does not improve for a predetermined number of iterations. The approach adopted by ABC is better as it gives the chance for the bees to try to improve these solutions for a number of iterations before abandoning them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8.2.">Cooperation</head><p>An important behavior incorporated in most algorithms is cooperation. By cooperation we mean how individuals in the population can share information among each other. Algorithms involving cooperation are: ABC: The update equation for a bee takes into account the information provided by a another randomly selected bee. HS: The update of the current harmony might involve adjusting a pitch that is provided by another randomly selected harmony from memory. DE: Generating the donor vector uses information from another three different randomly selected individuals. GA: Cooperation is achieved through crossover. PSO: Each individual is influenced by the neighborhood best (or global best).</p><p>However, other algorithms do not involve such a behavior as the process of updating a single individual does not use information from other individuals: BA: Each individual is just updated through a simple neighborhood search. ACO R : The solution produced by an ant is only based on a single solution from the archive. BFOA: Although the update equation for each individual is modeled as a swim down a promising direction, cooperation might be incorporated through the swarming behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8.3.">The re-initialization component</head><p>A component that ABC, BA, and BFOA share in common, which is not in ACO R or PSO, is the ability to continuously generate completely random new solutions during the search (i.e. solutions that are not produced by the normal progression of the algorithm). This component is useful for exploration as it induces diversity in the population, delays convergence, and enables these algorithms to escape local minima. A disadvantage of such a component though might be in functions where the optimum lies outside of the initial bounds. As this component usually initializes new solutions within the initial bounds, it might drive the search away from the region containing the optimum.</p><p>However, this diversity inducing component is implemented differently in HS than all the other algorithms. HS only induces a limited number of randomly generated problem variables into a solution while in all the other algorithms complete random solutions are inserted into the population affecting the update equation for all individuals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.8.4.">Steering the population</head><p>In most of the studied algorithms, the population evolves under influence from the best individuals. This is either done by direct communication (e.g. PSO), by allocating more search power to these regions (e.g. ABC, BA, and ACO R ), or by continuously selecting these individuals for mating or reproduction (GA and BFOA). Two algorithms however do not follow this paradigm, namely, DE and HS Pop . Such a property could be helpful in preventing the population from quickly collapsing on such individuals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Experimental study</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Experimental setup</head><p>All the algorithms tested in this work are applied to the CEC05 benchmark functions <ref type="bibr" target="#b39">[40]</ref> available at <ref type="bibr" target="#b38">[39]</ref>. This library provides a class of shifted and/or rotated functions that are categorized into three different classes: uni-modal functions (f1-f5), multi-modal functions (f6-f14), and hybrid functions (f15-f25). For all experiments, the termination criterion is the maximum allowable number of function evaluations set as 100,000, 300,000, and 500,000 for dimensions 10, 30, and 50 respectively. For all the algorithms, initial candidate solutions are randomly initialized using uniform distribution over the specified domain. For each function, the reported solution is the average taken over 30 runs.</p><p>Performance assessment of the different algorithms is based on three metrics. First, the best solution reached after the allocated number of function evaluations; Second, the success rate defined as the number of successful runs over the total number of runs (a successful run is defined as a run where the tested algorithm has reached a predefined threshold for the function under study). Third, the performance rate, which is defined as:</p><formula xml:id="formula_22">Performancerate ¼ FEV avg Â total runs successful runs ;<label>ð20Þ</label></formula><p>where FEV_avg is the average number of function evaluations needed to reach the predetermined threshold taken over the successful runs only. The threshold values are defined in <ref type="bibr" target="#b39">[40]</ref> as 10 À6 for uni-modal functions, 10 À2 for multi-modal functions, and 10 À1 for hybrid functions.</p><p>Experiments use the ABC code available at <ref type="bibr" target="#b14">[15]</ref>, the BA code available at <ref type="bibr" target="#b34">[35]</ref>, which is modified by the author to handle any problem size, HS code obtained by private communication with Geem , which is then modified according to the recommendations in <ref type="bibr" target="#b24">[25]</ref>, BFOA code available at <ref type="bibr" target="#b28">[29]</ref>, our implemented GA code, DE code available at <ref type="bibr" target="#b36">[37]</ref>, our implemented ACO R code based on <ref type="bibr" target="#b35">[36]</ref>, and SPSO code (version 2007) available at <ref type="bibr" target="#b26">[27]</ref>. Standard PSO has been verified by many researchers in the field and is very close to the original version of 1995 with a few improvements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Parameter tuning</head><p>For ABC, the work in <ref type="bibr" target="#b0">[1]</ref> indicated that there is no need to have a huge colony size in order to provide good results. The experiments were repeated using populations of 20, 40, and 100 bees for the three problem sizes. It was found that using a swarm of 40 bees provided the best results on average for all the dimensions. The recommendations in <ref type="bibr" target="#b16">[17]</ref> were followed by setting the limit parameter to S n Â D, although recent research <ref type="bibr" target="#b0">[1]</ref> indicated that lower values might be needed for more difficult functions.</p><p>For BA, the number of food sources is set to 40, number of best sites m = 30, out of which there are e = 10 elite sites. There are nep = 30 bees exploiting elite sites and nsp = 15 bees exploiting rest of the best sites. In every iteration, the lower n À m = 10 food sources are re-initialized by scout bees. The neighborhood radius for the search is set as 1% of the search space width.</p><p>For HS Pop , we followed the same parameter settings in <ref type="bibr" target="#b24">[25]</ref> where HMCR = 0.99, PAR = 0.5, and bw was set as the standard deviation of the current population. The number of harmonies considered in every iteration is set to 40 as well as the value for HMS to have the same population size as the other algorithms.</p><p>For DE, the classical DE (rand/1/bin) <ref type="bibr" target="#b31">[32]</ref> was used the same parameter settings as in <ref type="bibr" target="#b33">[34]</ref> were followed. We set F = 0.9 and CR = 0.9. For separable functions, CR was set to 0.1. The population was set to 40 individuals. It was indicated in <ref type="bibr" target="#b33">[34]</ref> that although the number of individuals should range between 4 Â D and 40 Â D, setting it too high will not be of benefit given the allowable number of function evaluations. This was verified for the dimensionality of 30 by increasing the number of individuals to 60 and 120, but using 40 individuals only was still the best choice.</p><p>For BFOA, the drawback is having too many parameters to tune. Following the same parameter values in <ref type="bibr" target="#b27">[28]</ref> provided very bad results in comparison with the other algorithms tested here. The reason for that as indicated in <ref type="bibr" target="#b27">[28]</ref> might be that some of these values were biologically motivated but might not be the best for engineering applications. After extensive experiments, it was found that having a small population of only 10 bacteria and increasing both N re and N ed to 8 provided much better results. Other parameters were set as N c = 100 and N s = 4 while C is set as 0.5 for problems with large domains and 0.1 otherwise. The value of C has a great effect the performance, a recent introduction of an adaptive chemotaxis step could be found in <ref type="bibr" target="#b8">[9]</ref>. Finally, the swarming behavior was not used in these experiments as it increased the computational cost while not providing a significant performance improvement. However, even if the swarming behavior is not used, BFOA is still considered a foraging algorithm as the movement of individuals is still influenced by the foraging behavior of bacteria but without communication between them.</p><p>For GA, the number of individuals was set to 40. We adopted a roulette-wheel selection process, a one-point crossover, and Gaussian mutation. The mutation probability was set to <ref type="foot" target="#foot_1">1</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D</head><p>, where D is the number of dimensions. The crossover and mutation operators were performed until producing an offspring that is equal to the current population in size, both were then merged and the best 40 individuals were chosen as the next population. The used crossover and mutation operators were chosen after experimenting with different combinations of the one-point, two-point, and arithmetic crossover operators as well as the uniform and Gaussian mutation operators.</p><p>For SPSO, the only parameter set is the swarm size and it was set to 40. The parameter values for w,c 1 , and c 2 are already set in the code as <ref type="bibr">1.193, 1.193</ref>, and 0.721 respectively.</p><p>For ACO R , we followed the same parameter settings in <ref type="bibr" target="#b35">[36]</ref> having two ants m = 2, an archive size k = 50, q = 10 À4 , and n = 0.85.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Experimental results and discussion</head><p>The results are provided in Table <ref type="table" target="#tab_5">1</ref> for uni-modal functions, Tables <ref type="table" target="#tab_6">2</ref> and<ref type="table" target="#tab_7">3</ref> for multi-modal functions, and Tables <ref type="table" target="#tab_8">4</ref> and<ref type="table" target="#tab_9">5</ref> for the hybrid functions. The best results are highlighted in bold (to test for the significance of the results, we used the Mann-Whitney non-parametric statistical test, where the null hypothesis is rejected with a 95% confidence level). As IPOP-CMA-ES <ref type="bibr" target="#b2">[3]</ref> is one of the most effective evolutionary algorithms up-to-date, 1 its results are added to the comparison. If the solution provided by IPOP-CMA-ES is as good as or better than the algorithms studied in this work, the result is shown in italic. In other words, a bold result means it is better than all the results provided by all the other algorithms but not necessarily better than IPOP-CMA-ES.</p><p>This section is organized as follows: Section 3.3.1 covers the results for the foraging algorithms. The performance of evolutionary algorithms is discussed in Section 3.3.2. The speed of convergence of all the algorithm is inspected in Section 3.3.3. Section 3.3.4 gives a brief comparison of all the algorithms against IPOP-CMA-ES. Section 3.3.5 highlights some of the issues regarding the degree of diversity maintained by some of the studied algorithms. 3.3.1. Foraging algorithms ABC emerges as the best performer on functions f9 and f15 as well as performing very well on f1. These functions are the only separable functions of the CEC05 library. This indicates that ABC is well suited for separable functions, specially multimodal ones. The reason for this is that the update equation for ABC only modifies one problem variable at a time after which the new solution is evaluated. The same behavior is observed for a different testbed in <ref type="bibr" target="#b10">[11]</ref>. A recent modification, although not tested in this work, to ABC was introduced in <ref type="bibr" target="#b1">[2]</ref>, where the number of modified problem variables could be controlled.</p><p>As for multi-modal functions, the results in Tables <ref type="table" target="#tab_6">2</ref> and<ref type="table" target="#tab_7">3</ref> show that ABC has good scalability. Although ABC was outperformed by DE and SPSO on functions f6, f7, and f11 for a dimensionality of 10, increasing the dimensionality to 30 and 50 had a much worse effect on the competing algorithms. For the results of the hybrid functions shown in Tables <ref type="table" target="#tab_8">4</ref> and<ref type="table" target="#tab_9">5</ref>, ABC managed to compete very well with the DE and SPSO evolutionary algorithms.</p><p>For functions f7 and f25 that have their optimum outside of the initial boundary, ABC has performed very well against another two algorithms that have the re-initializing component, which are BA and HS Pop . The difference is that although ABC might produce new solutions in the initialization domain, these solutions can be brought back quickly to promising regions through the update equation as it involves cooperation with other bees.</p><p>On the other hand, both BA and HS Pop employ a simple neighborhood search around the current solution (or another solution from memory as in HS Pop ). This operator might take a large number of steps in order to pull these solutions out of the initialization domain into good regions of the search space. Another reason is that both BA and HS Pop apply this operator in every iteration while ABC applies it only to unimproved solutions.</p><p>The worst performing algorithms in this category are BA and BFOA as they are outperformed by either ABC or ACO R in a large number of cases. For BFOA, the reason for this is that some actions taken by this algorithm although biologically inspired might not be entirely suitable for function optimization. For example, the reproduction scheme employed by BFOA generates a population of S individuals from which S 2 are distinct. Employing a more effective scheme like what is used in GAs or DE is expected to improve the algorithm's performance. Another example is the approach used for calculating the health of the bacteria. Calculating the health based on the best fitness that each bacterium experienced during the chemotaxis steps might be better than summing over all the fitness values.</p><p>For BA, previously presented comparison against ABC provides the reason for this deteriorated performance. Both BA and BFOA require a large number of parameters to be set. To the best of our knowledge, there is no clear study for either BFOA or BA on how to appropriately set their parameters, changing a single parameter can greatly affect the performance. Improving the performance of BFOA on uni-modal functions could be achieved by increasing the step size C or the number of steps the bacteria are allowed to swim in a single iteration Ns. This will enable the swarm to reach the global optimum faster. Improving the performance of BA could be achieved by manipulating the neighborhood size ngh.</p><p>For ACO R , employing two ants only might not be sufficient to produce good results overall. Although in <ref type="bibr" target="#b35">[36]</ref>, the authors stated that the solutions in the archive constitute the population being updated from one iteration to the next, having more ants is as important. A good property for the tested ACO R however is the ability to produce good results for functions with high conditioning values. Inspecting the results for function f22 (which is the same as f21 but with increased conditioning) shows that ACO R produced an improved solution for f22 over the solution provided for f21. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2.">Evolutionary algorithms</head><p>The code for SPSO (version 2007) provides an option for using a rotated hypercube for the probability distribution used to generate random numbers in order to make the algorithm less sensitive to rotations. By setting this parameter in our experiments, SPSO shows its immunity against function rotation. By inspecting the results for all the algorithms on functions f9 (shifted Rastrigin) and f10 (shifted rotated Rastrigin), SPSO was the only algorithm not affected by this rotation. SPSO produced almost the same results for both functions across all dimensions while the performances of other algorithms have deteriorated considerably. These algorithms are rotationally variant as most calculations are done on a coordinate-by-coordinate basis. However, DE, for example, could be made rotationally invariant by eliminating the crossover operator as it relies on the coordinate system <ref type="bibr" target="#b3">[4]</ref>.</p><p>The results of the uni-modal functions in Table <ref type="table" target="#tab_5">1</ref> show the superior performance of SPSO for these functions with the exception of f5 where DE produced the best results.</p><p>Out of all the studied algorithms, DE is the best performer in functions having their optimum near the bounds of the search space. This is the case for all types of functions, uni-modal (as in f5) or hybrid (as in f20) and for all dimensions. Although the reason behind this behavior may require more investigation, it could be due to the fact that the update equation of DE does not allow the population to converge prematurely.</p><p>For the GA, more advanced operators are needed to produce better results and compete with the studied algorithms. Nevertheless, although having a poor performance on the uni-modal functions, the basic studied approach showed better per-Table <ref type="table">7</ref> Performance rates and success rates of all the algorithms for the CEC05 multi-modal and hybrid functions successfully solved.</p><p>formance than BA, BFOA, HS Pop , and ACO R in the multi-modal functions while competing with them on the hybrid functions. For more advanced GAs that have been applied to the CEC05 set, one can refer to <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b11">12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3.">Speed of convergence</head><p>Tables <ref type="table" target="#tab_10">6</ref> and<ref type="table">7</ref> show the success rates and performance rates for all the algorithms for the functions successfully solved. The tables show the best performance rates achieved by any of the algorithms accompanied by the normalized performance  rates for all the other algorithms (the best algorithm has a normalized entry of ( <ref type="formula" target="#formula_0">1</ref>). An entry shown as ''-'' means that the corresponding algorithm did not reach the specified threshold in any of the runs. For all the successfully solved uni-modal problems, SPSO, ACO R , and HS Pop all show a fast speed of convergence (except for HS Pop in f5). The results also illustrate the slow speed of convergence of DE. As stated in <ref type="bibr" target="#b33">[34]</ref>, DE needs much more function evaluations to produce good results.</p><p>The performance rates of ABC and SPSO show that for ABC to successfully solve a function, it requires on average double the number of function evaluations consumed by SPSO. This is due to the component generating random solutions in ABC, which induces diversity and delays convergence.</p><p>These results are also emphasized by the convergence plots shown in Figs. <ref type="figure" target="#fig_2">1</ref> and<ref type="figure" target="#fig_3">2</ref>. The plots illustrate the fast speed of convergence exhibited by SPSO. In the function f1 successfully solved by many algorithms, the plots show that DE is the slowest algorithm while ABC has almost double the speed of convergence of SPSO. The plots for f1 and f5 illustrate that DE is still improving highlighting that it needs much more function evaluations to converge.</p><p>Although the diversity inducing component is available in both ABC and HS Pop , ABC has a slower speed of convergence. The reason for this is that this component in ABC generates complete random solutions affecting the update equation for all   bees. However, in HS Pop , it only induces randomly generated problem variables into a solution, which has a lesser effect than the ABC component. Another reason is that in HS Pop , HMCR is set to 0.99, which makes it less frequent for this component to take effect. The Performance rates and success rates for ABC confirm how ABC is suitable for separable functions as well as having the ability to scale up. ABC is able to reach the predefined threshold for f1 across all dimensions. ABC is also the only algorithm successful in solving f9 over all trials and across all dimensions. Moreover, ABC is the only algorithm able to successfully solve f15 for at least 80% of the runs.</p><p>For multi-modal functions, ABC still has a faster speed of convergence than DE but slower than SPSO (function f7 in dimensions 30 and 50). Although ACO R seems to have produced good results for f6, the success rates show that it reached the predetermined threshold in just a few runs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.4.">Comparison against IPOP-CMA-ES</head><p>Table <ref type="table" target="#tab_11">8</ref> summarizes the previously presented results by showing the number of functions for which each algorithm has produced the best result. For uni-modal functions, SPSO is the best performer among all algorithms. For multi-modal functions, IPOP-CMA-ES is the best algorithm. For hybrid functions, both ABC and IPOP-CMA-ES have a comparable performance. Although IPOP-CMA-ES is the best performer overall, these results show that even the basic versions of the studied algorithms have a competitive performance with the state-of-the-art.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.5.">A note on diversity</head><p>To investigate the diversity characteristics for some of the studied algorithms, the diversity is plotted in Fig. <ref type="figure" target="#fig_5">3</ref>. This diversity measure is calculated as:</p><formula xml:id="formula_23">Diversity ¼ 1 S ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi X S i¼1 ðx i À xÞ 2 v u u t ;<label>ð21Þ</label></formula><p>where x i refers to the i th individual in the population, S is the population size, and x is the average position in the population. A property that is observed for ABC in f1 and f9 is that the population diversity goes through cycles. The diversity drops reasonably fast but it increases again because of the diversity component that randomly initializes selected individuals in the specified domain. However, this cyclic behavior is not observed for non-separable functions. Overall, because of this component, the population in ABC always has a high degree of diversity across all the functions in comparison to the other algorithms.</p><p>SPSO uses an lbest topology with variable random neighborhood. This means that the movement of any particle is not influenced by the global best particle in the swarm but rather by the best particle in its neighborhood, a neighborhood that randomly changes in every iteration. This approach causes SPSO to have a high degree of diversity especially in multi-modal and hybrid functions as illustrated in the figure. Recent work in <ref type="bibr" target="#b12">[13]</ref> proves that this model provides a wider search space for the particles than the classical gbest model.</p><p>An interesting observation that needs more investigation is that the diversity of both DE and HS Pop continue to decrease through out the entire search process unlike other algorithms. However, in HS Pop , this behavior could change as the diversity could be controlled through the HMCR parameter. As this parameter decreases, more random problem variables are  introduced into the current harmony. This behavior is illustrated in Fig. <ref type="figure" target="#fig_7">4</ref> as the population diversity of HS Pop increases when HMCR is decreased.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Conclusions</head><p>This work provided a complete performance assessment of foraging optimization algorithms in comparison with evolutionary algorithms. The algorithms tested in this work are the artificial bee colony algorithm, the bees algorithm, ant colony optimization, the bacterial foraging optimization algorithm, harmony search, differential evolution, genetic algorithms, and standard particle swarm optimization. The work was conducted using the CEC05 benchmark functions for different problem sizes. The comparison was based on the solution reached, the success rate, and the performance rate.</p><p>Results obtained showed that SPSO is the best algorithm to be used with uni-modal functions having successfully solved the largest number of uni-modal functions while having a very fast speed of convergence. On average, ABC almost has double the speed of convergence of SPSO. For DE, more function evaluations are needed to provide good results.</p><p>For multi-modal and hybrid functions, ABC was the most successful algorithm. ABC was proven to be extremely successful when handling separable functions. On the other hand, SPSO was the most robust algorithm when faced with function rotations.</p><p>For BFOA, some techniques were proposed for improving its performance including adopting a different scheme for reproduction and/or different approach for the health calculation step.</p><p>The results also showed that the studied algorithms, although in their basic versions, have a very good performance in comparison with IPOP-CMA-ES. SPSO (ABC) is better than (as good as) IPOP-CMA-ES in uni-modal (hybrid) functions. This is despite the fact that IPOP-CMA-ES is equipped with a restart mechanism as well as an increasing population size between different restarts.</p><p>Through this study, different useful components of the tested algorithms were identified. First, to have a good populationbased optimization algorithm, we believe that the update equation should exhibit some form of cooperation between the different individuals. Second, a good component is the ability to continuously generate new random solutions without compromising the quality of the search. Third, having an update equation that is not heavily steered by the best individual in the population prevents the population from quickly converging to inferior solutions.</p><p>Several directions exist for future work: first, we will focus on improving the performance of BFOA based on suggestions presented in this work. Second, we will study the effect of increasing the number of ants on the performance of ACO R . Third, we will investigate the development of a hybrid ABC-SPSO algorithm that could exhibit the good characteristics highlighted in this study for both algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Algorithm 5 . 3 : 4 :</head><label>534</label><figDesc>The ACO R algorithm Require: Max_Function_Evaluations, k, m 1: Initialize the solutions in the archive T 2: Evaluate the solutions in the archive T Max Iterations ¼ Max Function Evaluations m Iter_number = 1 5: while Iter_number 6 Max_Iterations do 6:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Convergence behavior of all the algorithms for a sample of the CEC05 benchmark functions averaged over 30 runs, 10 dimensions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>Fig.2. Convergence behavior of all the algorithms for a sample of the CEC05 benchmark functions averaged over 30 runs, 30 dimensions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. Diversity of all the algorithms for a sample of the CEC05 benchmark functions averaged over 30 runs, 10 dimensions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Diversity of HS Pop for functions f1 and f9 of the CEC05 benchmark functions averaged over 30 runs, 10 dimensions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>1:</figDesc><table><row><cell cols="2">Algorithm 1. The ABC algorithm</cell></row><row><cell cols="2">Require: Max_Cycles, S n , limit</cell></row><row><cell cols="2">1: Initialize the food sources</cell></row><row><cell cols="2">2: Evaluate the food sources</cell></row><row><cell cols="2">3: Cycle=1</cell></row><row><cell cols="2">4: while Cycle 6 Max_Cycles do</cell></row><row><cell>5:</cell><cell>Produce new solutions using employed bees as in Eq. (1)</cell></row><row><cell>6:</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>{1 . . . D} and D is the number of dimensions, and / ij is a random number uniformly distributed in the range [À1, 1]. Solution u i only replaces solution x i if it has a better objective value.Finally, the bottom n À m bees are always re-initialized in the domain imitating the behavior of scout bees. These steps are shown in Algorithm 2.</figDesc><table><row><cell cols="2">Algorithm 2 (continued)</cell></row><row><cell cols="2">Algorithm 2. The Bees algorithm</cell></row><row><cell>7:</cell><cell>for nep bees do</cell></row><row><cell>8:</cell><cell>Exploit site using Eq. (4)</cell></row><row><cell>9:</cell><cell>Update site if the objective value has improved</cell></row><row><cell>10:</cell><cell>end for</cell></row><row><cell>11:</cell><cell>end for</cell></row><row><cell>12:</cell><cell></cell></row><row><cell cols="2">Algorithm 2. The Bees algorithm</cell></row><row><cell cols="2">Require: Max_Function_Evaluations, n, m, e, nsp, nep, ngh</cell></row><row><cell cols="2">1: Initialize the food sources</cell></row><row><cell cols="2">2: Evaluate and sort the food sources</cell></row><row><cell cols="2">3: Max Iterations ¼ Max Function Evaluations</cell></row></table><note><p><p>n 4: Iter_number=1 5: while iter_number 6 Max_Iterations do 6:</p>for the top e sites do (continued on next page)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>The complete steps are shown in Algorithm 3.</figDesc><table><row><cell cols="2">Algorithm 3 (continued)</cell></row><row><cell cols="2">Algorithm 3. The HS algorithm</cell></row><row><cell>9:</cell><cell>if U(0, 1) 6 PAR then</cell></row><row><cell>10:</cell><cell>Adjust the selected pitch using Eq. (5)</cell></row><row><cell>11:</cell><cell>end if</cell></row><row><cell>12:</cell><cell>else</cell></row><row><cell>13:</cell><cell></cell></row><row><cell cols="2">Algorithm 3. The HS algorithm</cell></row><row><cell cols="2">Require: Max_Function_Evaluations, memory size, HMCR, PAR, bw</cell></row><row><cell cols="2">1: Initialize the harmony memory</cell></row><row><cell cols="2">2: Evaluate the solutions in the memory</cell></row><row><cell cols="2">3: Max_Iterations = Max_Function_Evaluations</cell></row><row><cell cols="2">4: Iter_number = 1</cell></row><row><cell cols="2">5: while iter_number 6 Max_Iterations do</cell></row><row><cell>6:</cell><cell>for each dimension j do</cell></row><row><cell>7:</cell><cell>if U(0, 1) 6 HMCR then</cell></row><row><cell>8:</cell><cell>Choose a randomly selected pitch from the memory</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>model is referred to as the lbest (local best) model. Another simple model is the gbest (global best) model, which is the case when the particle's neighborhood is defined as the whole swarm. The basic PSO algorithm is shown in Algorithm 7.In this subsection, a component-based comparison is carried between the different algorithms studied in this work.</figDesc><table><row><cell cols="2">Algorithm 7 (continued)</cell></row><row><cell cols="2">Algorithm 7. The PSO algorithm</cell></row><row><cell>10:</cell><cell>end for</cell></row><row><cell>11:</cell><cell>Update gbest using Eq. (19)</cell></row><row><cell>12:</cell><cell>Iter_number = Iter_number + 1</cell></row><row><cell cols="2">13: end while</cell></row><row><cell cols="2">14: return gbest</cell></row><row><cell cols="2">2.8. Comparing the different algorithms</cell></row><row><cell cols="2">Algorithm 7. The PSO algorithm</cell></row><row><cell cols="2">Require: Max_Function_Evaluations, n, w, c 1 , c 2</cell></row><row><cell cols="2">1: Initialize the swarm</cell></row><row><cell cols="2">2: Evaluate the swarm</cell></row><row><cell cols="2">3: Max Iterations ¼ Max Function Evaluations Num Particles</cell></row><row><cell cols="2">4: Iter_number=1</cell></row><row><cell cols="2">5: while Iter_number 6 Max_Iterations do</cell></row><row><cell>6:</cell><cell>for every particle i do</cell></row><row><cell>7:</cell><cell>Update v i using Eq. (16)</cell></row><row><cell>8:</cell><cell>Update x i using Eq. (17)</cell></row><row><cell>9:</cell><cell>Update pbest i using Eq. (18)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 1</head><label>1</label><figDesc>Average solutions provided by all the algorithms for the uni-modal CEC05 functions taken over 30 runs.</figDesc><table><row><cell>Benchmark function</cell><cell>Size</cell><cell>ABC</cell><cell>BA</cell><cell>HS Pop</cell><cell>BFOA</cell><cell>DE</cell><cell>GA</cell><cell>SPSO</cell><cell>ACO R</cell><cell>IPOP-CMA-ES</cell></row><row><cell>f1</cell><cell>10</cell><cell>0</cell><cell>4.29e+03</cell><cell>0</cell><cell>9.82eÀ01</cell><cell>0</cell><cell>9.75eÀ04</cell><cell>0</cell><cell>1.33eÀ14</cell><cell>5.20eÀ09</cell></row><row><cell></cell><cell></cell><cell>0</cell><cell>3.55e+03</cell><cell>0</cell><cell>2.44eÀ01</cell><cell>0</cell><cell>6.17eÀ04</cell><cell>0</cell><cell>2.45eÀ14</cell><cell>1.94eÀ09</cell></row><row><cell>f2</cell><cell></cell><cell>3.73</cell><cell>4.27e+03</cell><cell>54.93</cell><cell>3.62</cell><cell>7.53eÀ09</cell><cell>1.68</cell><cell>0</cell><cell>1.21eÀ13</cell><cell>4.70eÀ09</cell></row><row><cell></cell><cell></cell><cell>2.52</cell><cell>4.09e+03</cell><cell>88.90</cell><cell>8.60eÀ01</cell><cell>8.73eÀ09</cell><cell>1.25</cell><cell>0</cell><cell>9.05eÀ14</cell><cell>1.56eÀ09</cell></row><row><cell>f3</cell><cell></cell><cell>6.41e+05</cell><cell>2.30e+07</cell><cell>2.77e+05</cell><cell>1.07e+05</cell><cell>3.21eÀ01</cell><cell>1.06e+06</cell><cell>5.64e+04</cell><cell>2.42e+06</cell><cell>5.60eÀ09</cell></row><row><cell></cell><cell></cell><cell>2.78e+05</cell><cell>2.84e+07</cell><cell>3.07e+05</cell><cell>6.92e+04</cell><cell>5.35eÀ01</cell><cell>5.98e+05</cell><cell>3.27e+04</cell><cell>3.56e+06</cell><cell>1.93eÀ09</cell></row><row><cell>f4</cell><cell></cell><cell>29.17</cell><cell>1.01e+04</cell><cell>41.91</cell><cell>9.31e+03</cell><cell>2.35eÀ07</cell><cell>10.41</cell><cell>0</cell><cell>3.45eÀ13</cell><cell>5.02eÀ09</cell></row><row><cell></cell><cell></cell><cell>41.83</cell><cell>4.39e+03</cell><cell>45.47</cell><cell>6.96e+03</cell><cell>2.16eÀ07</cell><cell>7.17</cell><cell>0</cell><cell>7.65eÀ13</cell><cell>1.71eÀ09</cell></row><row><cell>f5</cell><cell></cell><cell>86.76</cell><cell>7.76e+03</cell><cell>72.93</cell><cell>84.09</cell><cell>0</cell><cell>517.94</cell><cell>0</cell><cell>580.35</cell><cell>6.58eÀ09</cell></row><row><cell></cell><cell></cell><cell>100.53</cell><cell>3.48e+03</cell><cell>191.19</cell><cell>22.04</cell><cell>0</cell><cell>339.48</cell><cell>0</cell><cell>732.51</cell><cell>2.17eÀ09</cell></row><row><cell>f1</cell><cell>30</cell><cell>1.06eÀ13</cell><cell>4.47e+04</cell><cell>2.31eÀ10</cell><cell>11.63</cell><cell>5.68eÀ14</cell><cell>3.59eÀ03</cell><cell>0</cell><cell>1.59eÀ13</cell><cell>5.42eÀ09</cell></row><row><cell></cell><cell></cell><cell>1.97eÀ14</cell><cell>2.49e+04</cell><cell>1.28eÀ09</cell><cell>1.41</cell><cell>2.57eÀ29</cell><cell>1.61eÀ03</cell><cell>0</cell><cell>1.18eÀ13</cell><cell>9.80eÀ10</cell></row><row><cell>f2</cell><cell></cell><cell>2.49e+03</cell><cell>4.43e+03</cell><cell>891.77</cell><cell>155.95</cell><cell>172.10</cell><cell>97.15</cell><cell>0</cell><cell>3.24eÀ02</cell><cell>6.22eÀ09</cell></row><row><cell></cell><cell></cell><cell>969.89</cell><cell>2.46e+04</cell><cell>178.81</cell><cell>32.55</cell><cell>48.33</cell><cell>40.63</cell><cell>0</cell><cell>8.61eÀ02</cell><cell>8.95eÀ10</cell></row><row><cell>f3</cell><cell></cell><cell>6.22e+06</cell><cell>2.14e+08</cell><cell>2.90e+06</cell><cell>2.67e+06</cell><cell>3.24e+06</cell><cell>6.36e+06</cell><cell>2.21e+05</cell><cell>2.88e+08</cell><cell>5.55eÀ09</cell></row><row><cell></cell><cell></cell><cell>1.67e+06</cell><cell>2.25e+08</cell><cell>1.06e+06</cell><cell>1.19e+06</cell><cell>1.69e+06</cell><cell>2.42e+06</cell><cell>9.53e+04</cell><cell>2.25e+08</cell><cell>1.09eÀ09</cell></row><row><cell>f4</cell><cell></cell><cell>1.49e+04</cell><cell>7.60e+04</cell><cell>219.23</cell><cell>9.81e+04</cell><cell>556.24</cell><cell>2.49e+03</cell><cell>8.35eÀ04</cell><cell>1.01e+03</cell><cell>1.11e+04</cell></row><row><cell></cell><cell></cell><cell>5.15e+03</cell><cell>2.15e+04</cell><cell>190.78</cell><cell>3.30e+04</cell><cell>838.35</cell><cell>1.40e+03</cell><cell>1.29eÀ03</cell><cell>1.38e+03</cell><cell>3.02e+04</cell></row><row><cell>f5</cell><cell></cell><cell>1.08e+04</cell><cell>2.21e+04</cell><cell>2.12e+03</cell><cell>6.35e+03</cell><cell>269.03</cell><cell>9.36e+03</cell><cell>3.44e+03</cell><cell>5.25e+03</cell><cell>8.62eÀ09</cell></row><row><cell></cell><cell></cell><cell>1.47e+03</cell><cell>8.55e+03</cell><cell>385.96</cell><cell>1.55e+03</cell><cell>157.47</cell><cell>2.12e+03</cell><cell>777.42</cell><cell>2.83e+03</cell><cell>8.53eÀ09</cell></row><row><cell>f1</cell><cell>50</cell><cell>2.04eÀ13</cell><cell>7.56e+04</cell><cell>6.51eÀ05</cell><cell>27.52</cell><cell>1.10eÀ13</cell><cell>5.05eÀ03</cell><cell>0</cell><cell>2.26eÀ13</cell><cell>5.87eÀ09</cell></row><row><cell></cell><cell></cell><cell>3.20eÀ14</cell><cell>5.05e+04</cell><cell>3.53eÀ04</cell><cell>2.80</cell><cell>1.44eÀ16</cell><cell>1.08eÀ03</cell><cell>0</cell><cell>1.42eÀ13</cell><cell>8.59eÀ10</cell></row><row><cell>f2</cell><cell></cell><cell>1.61e+04</cell><cell>1.10e+05</cell><cell>303.67</cell><cell>9.56e+03</cell><cell>4.17e+03</cell><cell>491.13</cell><cell>0</cell><cell>7.42e+04</cell><cell>7.86eÀ09</cell></row><row><cell></cell><cell></cell><cell>4.05e+03</cell><cell>7.06e+04</cell><cell>256.31</cell><cell>3.80e+03</cell><cell>1.53e+03</cell><cell>172.20</cell><cell>0</cell><cell>5.27e+04</cell><cell>7.24eÀ10</cell></row><row><cell>f3</cell><cell></cell><cell>1.08e+07</cell><cell>1.80e+09</cell><cell>3.89e+06</cell><cell>1.36e+07</cell><cell>2.04e+07</cell><cell>1.05e+07</cell><cell>2.59e+05</cell><cell>1.49e+09</cell><cell>6.14eÀ09</cell></row><row><cell></cell><cell></cell><cell>2.65e+06</cell><cell>1.40e+09</cell><cell>1.42e+06</cell><cell>7.15e+06</cell><cell>6.84e+06</cell><cell>3.73e+06</cell><cell>7.85e+04</cell><cell>5.24e+08</cell><cell>6.86eÀ10</cell></row><row><cell>f4</cell><cell></cell><cell>6.42e+04</cell><cell>1.87e+05</cell><cell>2.98e+03</cell><cell>3.01e+05</cell><cell>2.44e+04</cell><cell>2.16e+04</cell><cell>152.51</cell><cell>1.62e+05</cell><cell>4.68e+05</cell></row><row><cell></cell><cell></cell><cell>1.24e+04</cell><cell>5.48e+04</cell><cell>1.23e+03</cell><cell>1.25e+05</cell><cell>1.06e+04</cell><cell>7.50e+03</cell><cell>118.64</cell><cell>9.19e+04</cell><cell>3.11e+05</cell></row><row><cell>f5</cell><cell></cell><cell>2.54e+04</cell><cell>3.19e+04</cell><cell>3.33e+03</cell><cell>1.94e+04</cell><cell>3.43e+03</cell><cell>2.06e+04</cell><cell>8.84e+03</cell><cell>1.10e+04</cell><cell>2.85</cell></row><row><cell></cell><cell></cell><cell>2.54e+03</cell><cell>1.12e+04</cell><cell>556.06</cell><cell>3.50e+03</cell><cell>646.04</cell><cell>4.59e+03</cell><cell>1.59e+03</cell><cell>4.69e+03</cell><cell>4.32</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 2</head><label>2</label><figDesc>Average solutions provided by all the algorithms for the multi-modal CEC05 functions taken over 30 runs, 10 and 30 dimensions.</figDesc><table><row><cell>Benchmark function</cell><cell>Size</cell><cell>ABC</cell><cell>BA</cell><cell>HS Pop</cell><cell>BFOA</cell><cell>DE</cell><cell>GA</cell><cell>SPSO</cell><cell>ACO R</cell><cell>IPOP-CMA-ES</cell></row><row><cell>f6</cell><cell>10</cell><cell>1.46</cell><cell>3.78e+08</cell><cell>36.34</cell><cell>703.97</cell><cell>3.76eÀ06</cell><cell>31.56</cell><cell>39.89</cell><cell>19.84</cell><cell>4.87eÀ09</cell></row><row><cell></cell><cell></cell><cell>1.63</cell><cell>5.11e+08</cell><cell>30.29</cell><cell>1.75e+03</cell><cell>6.16eÀ06</cell><cell>33.95</cell><cell>113.23</cell><cell>70.06</cell><cell>1.66eÀ09</cell></row><row><cell>f7</cell><cell></cell><cell>2.45eÀ01</cell><cell>1.72e+03</cell><cell>48.61</cell><cell>485.67</cell><cell>2.01eÀ01</cell><cell>6.93eÀ01</cell><cell>4.36eÀ02</cell><cell>6.14eÀ01</cell><cell>3.31eÀ09</cell></row><row><cell></cell><cell></cell><cell>1.27eÀ01</cell><cell>659.32</cell><cell>55.78</cell><cell>156.15</cell><cell>1.83eÀ01</cell><cell>4.31eÀ01</cell><cell>1.96eÀ02</cell><cell>2.28eÀ01</cell><cell>2.02eÀ09</cell></row><row><cell>f9</cell><cell></cell><cell>0</cell><cell>54.42</cell><cell>0</cell><cell>15.62</cell><cell>0</cell><cell>5.61eÀ04</cell><cell>5.26</cell><cell>8.72</cell><cell>2.39eÀ01</cell></row><row><cell></cell><cell></cell><cell>0</cell><cell>18.60</cell><cell>0</cell><cell>2.04</cell><cell>0</cell><cell>3.80eÀ04</cell><cell>2.74</cell><cell>4.82</cell><cell>4.34eÀ01</cell></row><row><cell>f10</cell><cell></cell><cell>28.59</cell><cell>79.73</cell><cell>20.62</cell><cell>25.16</cell><cell>10.80</cell><cell>21.99</cell><cell>4.59</cell><cell>27.81</cell><cell>7.96eÀ02</cell></row><row><cell></cell><cell></cell><cell>8.29</cell><cell>21.52</cell><cell>3.46</cell><cell>3.49</cell><cell>9.27</cell><cell>12.45</cell><cell>1.96</cell><cell>7.00</cell><cell>2.75eÀ01</cell></row><row><cell>f11</cell><cell></cell><cell>5.38</cell><cell>9.15</cell><cell>8.42</cell><cell>9.65</cell><cell>9.00</cell><cell>6.67</cell><cell>2.97</cell><cell>8.53</cell><cell>9.34eÀ01</cell></row><row><cell></cell><cell></cell><cell>6.04eÀ01</cell><cell>1.37</cell><cell>2.05</cell><cell>5.55eÀ01</cell><cell>8.10eÀ01</cell><cell>1.30</cell><cell>1.52</cell><cell>7.51eÀ01</cell><cell>9.00eÀ01</cell></row><row><cell>f12</cell><cell></cell><cell>299.39</cell><cell>3.18e+04</cell><cell>2.58e+03</cell><cell>696.90</cell><cell>1.08e+04</cell><cell>561.10</cell><cell>5.97e+03</cell><cell>2.61e+04</cell><cell>29.30</cell></row><row><cell></cell><cell></cell><cell>177.41</cell><cell>1.21e+04</cell><cell>1.86e+03</cell><cell>189.29</cell><cell>7.69e+03</cell><cell>652.16</cell><cell>3.00e+03</cell><cell>8.56e+03</cell><cell>142.00</cell></row><row><cell>f13</cell><cell></cell><cell>2.19eÀ01</cell><cell>10.04</cell><cell>9.07eÀ01</cell><cell>5.06</cell><cell>1.43</cell><cell>3.41eÀ01</cell><cell>8.60eÀ01</cell><cell>1.87</cell><cell>6.96eÀ01</cell></row><row><cell></cell><cell></cell><cell>8.95eÀ02</cell><cell>4.24</cell><cell>4.23eÀ01</cell><cell>6.88eÀ01</cell><cell>8.65eÀ01</cell><cell>1.33eÀ01</cell><cell>2.18eÀ01</cell><cell>6.14eÀ01</cell><cell>1.50eÀ01</cell></row><row><cell>f14</cell><cell></cell><cell>3.34</cell><cell>3.96</cell><cell>2.33</cell><cell>3.83</cell><cell>3.74</cell><cell>3.35</cell><cell>2.47</cell><cell>3.80</cell><cell>3.01</cell></row><row><cell></cell><cell></cell><cell>2.12eÀ01</cell><cell>2.08eÀ01</cell><cell>7.71eÀ01</cell><cell>3.89eÀ01</cell><cell>6.04eÀ01</cell><cell>3.31eÀ01</cell><cell>3.93eÀ01</cell><cell>3.34eÀ01</cell><cell>3.49eÀ01</cell></row><row><cell>f6</cell><cell>30</cell><cell>7.49</cell><cell>1.24e+10</cell><cell>193.82</cell><cell>5.24e+03</cell><cell>59.01</cell><cell>129.89</cell><cell>141.65</cell><cell>537.65</cell><cell>5.90eÀ09</cell></row><row><cell></cell><cell></cell><cell>10.99</cell><cell>1.37e+10</cell><cell>476.10</cell><cell>3.30e+03</cell><cell>45.27</cell><cell>59.75</cell><cell>226.24</cell><cell>2.66e+03</cell><cell>1.61eÀ09</cell></row><row><cell>f7</cell><cell></cell><cell>1.23eÀ02</cell><cell>3.37e+03</cell><cell>19.23</cell><cell>6.84e+03</cell><cell>5.46eÀ02</cell><cell>3.83eÀ01</cell><cell>2.04eÀ02</cell><cell>3.14eÀ01</cell><cell>5.31eÀ09</cell></row><row><cell></cell><cell></cell><cell>5.04eÀ03</cell><cell>2.99e+03</cell><cell>21.78</cell><cell>441.70</cell><cell>5.37eÀ02</cell><cell>7.37eÀ02</cell><cell>1.57eÀ02</cell><cell>3.47eÀ01</cell><cell>1.44eÀ09</cell></row><row><cell>f9</cell><cell></cell><cell>6.06eÀ14</cell><cell>311.14</cell><cell>9.61</cell><cell>137.79</cell><cell>3.32eÀ02</cell><cell>1.52eÀ03</cell><cell>44.37</cell><cell>54.78</cell><cell>9.38eÀ01</cell></row><row><cell></cell><cell></cell><cell>1.44eÀ14</cell><cell>81.88</cell><cell>14.03</cell><cell>11.67</cell><cell>1.82eÀ01</cell><cell>4.29eÀ04</cell><cell>10.15</cell><cell>40.84</cell><cell>1.18</cell></row><row><cell>f10</cell><cell></cell><cell>333.43</cell><cell>554.07</cell><cell>159.08</cell><cell>175.78</cell><cell>211.51</cell><cell>196.05</cell><cell>46.13</cell><cell>210.55</cell><cell>1.65</cell></row><row><cell></cell><cell></cell><cell>68.97</cell><cell>77.66</cell><cell>8.29</cell><cell>13.81</cell><cell>40.38</cell><cell>40.39</cell><cell>11.91</cell><cell>17.93</cell><cell>1.35</cell></row><row><cell>f11</cell><cell></cell><cell>27.94</cell><cell>37.53</cell><cell>39.37</cell><cell>40.44</cell><cell>39.30</cell><cell>29.71</cell><cell>30.06</cell><cell>39.24</cell><cell>5.38</cell></row><row><cell></cell><cell></cell><cell>1.62</cell><cell>5.01</cell><cell>1.60</cell><cell>1.10</cell><cell>1.22</cell><cell>2.90</cell><cell>2.85</cell><cell>1.24</cell><cell>3.13</cell></row><row><cell>f12</cell><cell></cell><cell>8.55e+03</cell><cell>1.06e+06</cell><cell>5.27e+05</cell><cell>4.03e+04</cell><cell>3.46e+05</cell><cell>1.30e+04</cell><cell>2.96e+05</cell><cell>1.02e+06</cell><cell>4.43e+04</cell></row><row><cell></cell><cell></cell><cell>3.70e+03</cell><cell>1.39e+05</cell><cell>6.61e+04</cell><cell>6.16e+03</cell><cell>1.71e+05</cell><cell>6.80e+03</cell><cell>6.28e+04</cell><cell>1.13e+05</cell><cell>2.15e+05</cell></row><row><cell>f13</cell><cell></cell><cell>9.44eÀ01</cell><cell>101.62</cell><cell>11.98</cell><cell>27.36</cell><cell>5.92</cell><cell>1.21</cell><cell>4.37</cell><cell>14.32</cell><cell>2.49</cell></row><row><cell></cell><cell></cell><cell>1.19eÀ01</cell><cell>85.84</cell><cell>1.19</cell><cell>2.15</cell><cell>3.17</cell><cell>2.61eÀ01</cell><cell>1.27</cell><cell>2.86</cell><cell>5.13eÀ01</cell></row><row><cell>f14</cell><cell></cell><cell>12.97</cell><cell>13.67</cell><cell>13.27</cell><cell>13.35</cell><cell>14.26</cell><cell>13.01</cell><cell>12.44</cell><cell>13.81</cell><cell>12.90</cell></row><row><cell></cell><cell></cell><cell>2.16eÀ01</cell><cell>2.43eÀ01</cell><cell>1.90eÀ01</cell><cell>3.99eÀ01</cell><cell>1.33eÀ01</cell><cell>4.22eÀ01</cell><cell>3.76eÀ01</cell><cell>1.65eÀ01</cell><cell>4.19eÀ01</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 3</head><label>3</label><figDesc>Average solutions provided by all the algorithms for the multi-modal CEC05 functions taken over 30 runs, 50 dimensions.</figDesc><table><row><cell>Benchmark function</cell><cell>Size</cell><cell>ABC</cell><cell>BA</cell><cell>HS Pop</cell><cell>BFOA</cell><cell>DE</cell><cell>GA</cell><cell>SPSO</cell><cell>ACO R</cell><cell>IPOP-CMA-ES</cell></row><row><cell>f6</cell><cell>50</cell><cell>6.16</cell><cell>4.08e+10</cell><cell>367.58</cell><cell>1.57e+04</cell><cell>98.45</cell><cell>174.11</cell><cell>219.74</cell><cell>344.97</cell><cell>7.13eÀ09</cell></row><row><cell></cell><cell></cell><cell>7.76</cell><cell>3.64e+10</cell><cell>1.27e+03</cell><cell>7.43e+03</cell><cell>57.68</cell><cell>61.46</cell><cell>243.62</cell><cell>979.21</cell><cell>1.11eÀ09</cell></row><row><cell>f7</cell><cell></cell><cell>1.68eÀ04</cell><cell>1.14e+04</cell><cell>29.59</cell><cell>1.12e+04</cell><cell>1.57eÀ01</cell><cell>3.94eÀ01</cell><cell>9.66eÀ03</cell><cell>3.05eÀ01</cell><cell>7.22eÀ09</cell></row><row><cell></cell><cell></cell><cell>1.23eÀ04</cell><cell>3.47e+03</cell><cell>35.04</cell><cell>619.28</cell><cell>1.01eÀ01</cell><cell>8.37eÀ02</cell><cell>1.61eÀ02</cell><cell>3.54eÀ01</cell><cell>1.03eÀ09</cell></row><row><cell>f9</cell><cell></cell><cell>1.14eÀ13</cell><cell>637.11</cell><cell>87.81</cell><cell>378.26</cell><cell>1.99eÀ01</cell><cell>3.21eÀ03</cell><cell>119.56</cell><cell>189.86</cell><cell>1.39</cell></row><row><cell></cell><cell></cell><cell>1.02eÀ28</cell><cell>170.82</cell><cell>50.38</cell><cell>33.60</cell><cell>4.82eÀ01</cell><cell>1.09eÀ03</cell><cell>25.62</cell><cell>105.92</cell><cell>1.11</cell></row><row><cell>f10</cell><cell></cell><cell>1.08e+03</cell><cell>1.12e+03</cell><cell>333.50</cell><cell>413.73</cell><cell>418.11</cell><cell>502.79</cell><cell>130.47</cell><cell>451.90</cell><cell>1.72</cell></row><row><cell></cell><cell></cell><cell>102.68</cell><cell>201.78</cell><cell>9.91</cell><cell>30.93</cell><cell>21.90</cell><cell>103.01</cell><cell>25.06</cell><cell>37.26</cell><cell>1.42</cell></row><row><cell>f11</cell><cell></cell><cell>56.24</cell><cell>68.06</cell><cell>72.77</cell><cell>73.66</cell><cell>72.88</cell><cell>56.76</cell><cell>57.28</cell><cell>72.96</cell><cell>11.7</cell></row><row><cell></cell><cell></cell><cell>2.23</cell><cell>7.59</cell><cell>1.08</cell><cell>1.26</cell><cell>1.52</cell><cell>6.02</cell><cell>3.84</cell><cell>1.49</cell><cell>3.14</cell></row><row><cell>f12</cell><cell></cell><cell>3.52e+04</cell><cell>5.09e+06</cell><cell>2.52e+06</cell><cell>1.78e+05</cell><cell>8.53e+05</cell><cell>3.82e+04</cell><cell>1.60e+06</cell><cell>5.49e+06</cell><cell>2.27e+05</cell></row><row><cell></cell><cell></cell><cell>1.05e+04</cell><cell>6.72e+05</cell><cell>2.65e+05</cell><cell>2.77e+04</cell><cell>2.59e+05</cell><cell>2.12e+04</cell><cell>2.94e+05</cell><cell>4.00e+05</cell><cell>1.11e+06</cell></row><row><cell>f13</cell><cell></cell><cell>1.63</cell><cell>642.63</cell><cell>26.11</cell><cell>57.61</cell><cell>8.70</cell><cell>1.97</cell><cell>9.02</cell><cell>34.79</cell><cell>4.59</cell></row><row><cell></cell><cell></cell><cell>1.97eÀ01</cell><cell>623.39</cell><cell>2.12</cell><cell>3.13</cell><cell>3.66</cell><cell>3.04eÀ01</cell><cell>3.51</cell><cell>4.26</cell><cell>5.15eÀ01</cell></row><row><cell>f14</cell><cell></cell><cell>22.68</cell><cell>23.38</cell><cell>23.06</cell><cell>23.13</cell><cell>24.15</cell><cell>22.63</cell><cell>22.01</cell><cell>23.78</cell><cell>22.90</cell></row><row><cell></cell><cell></cell><cell>2.05eÀ01</cell><cell>2.25eÀ01</cell><cell>1.15eÀ01</cell><cell>3.54eÀ01</cell><cell>1.37eÀ01</cell><cell>4.14eÀ01</cell><cell>4.33eÀ01</cell><cell>1.73eÀ01</cell><cell>5.78eÀ01</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 4</head><label>4</label><figDesc>Average solutions provided by all the algorithms for the hybrid CEC05 functions taken over 30 runs, 10 dimensions.</figDesc><table><row><cell>Benchmark function</cell><cell>Size</cell><cell>ABC</cell><cell>BA</cell><cell>HS Pop</cell><cell>BFOA</cell><cell>DE</cell><cell>GA</cell><cell>SPSO</cell><cell>ACO R</cell><cell>IPOP-CMA-ES</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 5</head><label>5</label><figDesc>Average solutions provided by all the algorithms for the hybrid CEC05 functions taken over 30 runs, 30 dimensions.</figDesc><table><row><cell>Benchmark function</cell><cell>Size</cell><cell>ABC</cell><cell>BA</cell><cell>HS Pop</cell><cell>BFOA</cell><cell>DE</cell><cell>GA</cell><cell>SPSO</cell><cell>ACO R</cell><cell>IPOP-CMA-ES</cell></row><row><cell>f15</cell><cell>30</cell><cell>5.97eÀ01</cell><cell>853.67</cell><cell>300.00</cell><cell>518.14</cell><cell>63.51</cell><cell>198.60</cell><cell>439.56</cell><cell>659.45</cell><cell>208.00</cell></row><row><cell></cell><cell></cell><cell>1.74</cell><cell>192.91</cell><cell>26.26</cell><cell>94.82</cell><cell>50.84</cell><cell>206.10</cell><cell>73.23</cell><cell>142.94</cell><cell>27.50</cell></row><row><cell>f16</cell><cell></cell><cell>314.67</cell><cell>662.55</cell><cell>246.57</cell><cell>438.06</cell><cell>252.58</cell><cell>142.38</cell><cell>203.06</cell><cell>443.80</cell><cell>35.00</cell></row><row><cell></cell><cell></cell><cell>49.35</cell><cell>145.46</cell><cell>110.89</cell><cell>112.67</cell><cell>45.17</cell><cell>24.27</cell><cell>175.03</cell><cell>162.85</cell><cell>20.40</cell></row><row><cell>f17</cell><cell></cell><cell>219.71</cell><cell>729.35</cell><cell>269.05</cell><cell>491.71</cell><cell>302.64</cell><cell>143.67</cell><cell>237.04</cell><cell>438.48</cell><cell>291.00</cell></row><row><cell></cell><cell></cell><cell>32.98</cell><cell>133.18</cell><cell>119.06</cell><cell>157.76</cell><cell>54.32</cell><cell>25.91</cell><cell>153.46</cell><cell>122.61</cell><cell>193.00</cell></row><row><cell>f18</cell><cell></cell><cell>899.55</cell><cell>1.17e+03</cell><cell>910.11</cell><cell>915.26</cell><cell>903.74</cell><cell>864.64</cell><cell>916.25</cell><cell>829.03</cell><cell>904.00</cell></row><row><cell></cell><cell></cell><cell>96.78</cell><cell>90.19</cell><cell>2.65</cell><cell>20.21</cell><cell>5.16eÀ01</cell><cell>135.45</cell><cell>5.70</cell><cell>3.57</cell><cell>2.99eÀ01</cell></row><row><cell>f19</cell><cell></cell><cell>915.46</cell><cell>1.18e+03</cell><cell>909.70</cell><cell>918.16</cell><cell>903.90</cell><cell>960.57</cell><cell>917.15</cell><cell>849.42</cell><cell>904.00</cell></row><row><cell></cell><cell></cell><cell>22.24</cell><cell>72.97</cell><cell>3.42</cell><cell>23.70</cell><cell>7.84eÀ01</cell><cell>79.60</cell><cell>8.35</cell><cell>78.73</cell><cell>2.48eÀ01</cell></row><row><cell>f20</cell><cell></cell><cell>920.33</cell><cell>1.19e+03</cell><cell>909.38</cell><cell>919.17</cell><cell>903.75</cell><cell>959.96</cell><cell>916.10</cell><cell>829.40</cell><cell>889.00</cell></row><row><cell></cell><cell></cell><cell>3.91</cell><cell>96.88</cell><cell>2.08</cell><cell>23.21</cell><cell>6.00eÀ01</cell><cell>137.06</cell><cell>5.79</cell><cell>4.81</cell><cell>45.5</cell></row><row><cell>f21</cell><cell></cell><cell>488.36</cell><cell>1.36e+03</cell><cell>500.00</cell><cell>671.37</cell><cell>519.39</cell><cell>909.72</cell><cell>674.45</cell><cell>869.97</cell><cell>500.00</cell></row><row><cell></cell><cell></cell><cell>30.20</cell><cell>61.55</cell><cell>2.31eÀ013</cell><cell>209.06</cell><cell>106.23</cell><cell>288.22</cell><cell>294.25</cell><cell>5.58</cell><cell>1.13eÀ013</cell></row><row><cell>f22</cell><cell></cell><cell>1.07e+03</cell><cell>1.39e+03</cell><cell>891.20</cell><cell>1.12e+03</cell><cell>882.13</cell><cell>804.03</cell><cell>889.22</cell><cell>552.79</cell><cell>803.00</cell></row><row><cell></cell><cell></cell><cell>36.03</cell><cell>95.52</cell><cell>14.29</cell><cell>57.93</cell><cell>11.10</cell><cell>519.97</cell><cell>15.47</cell><cell>95.26</cell><cell>18.60</cell></row><row><cell>f23</cell><cell></cell><cell>531.97</cell><cell>1.39e+03</cell><cell>555.00</cell><cell>873.54</cell><cell>552.92</cell><cell>994.47</cell><cell>710.92</cell><cell>904.27</cell><cell>534.00</cell></row><row><cell></cell><cell></cell><cell>5.80</cell><cell>40.66</cell><cell>114.13</cell><cell>175.24</cell><cell>102.74</cell><cell>265.11</cell><cell>275.98</cell><cell>79.94</cell><cell>2.24eÀ04</cell></row><row><cell>f24</cell><cell></cell><cell>200.00</cell><cell>1.43e+03</cell><cell>200.00</cell><cell>1.16e+03</cell><cell>916.66</cell><cell>335.12</cell><cell>226.36</cell><cell>217.14</cell><cell>910.00</cell></row><row><cell></cell><cell></cell><cell>0</cell><cell>31.63</cell><cell>0</cell><cell>250.37</cell><cell>194.91</cell><cell>159.36</cell><cell>144.38</cell><cell>3.28</cell><cell>148.00</cell></row><row><cell>f25</cell><cell></cell><cell>203.19</cell><cell>1.45e+03</cell><cell>220.92</cell><cell>1.17e+03</cell><cell>211.24</cell><cell>404.97</cell><cell>210.57</cell><cell>211.00</cell><cell>691.00</cell></row><row><cell></cell><cell></cell><cell>6.93</cell><cell>17.84</cell><cell>14.86</cell><cell>113.78</cell><cell>9.65eÀ01</cell><cell>347.75</cell><cell>2.10eÀ01</cell><cell>6.26</cell><cell>9.21eÀ01</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 6</head><label>6</label><figDesc>Performance rates and success rates of all the algorithms for the CEC05 uni-modal functions successfully solved.</figDesc><table><row><cell></cell><cell>Size</cell><cell>Number of solved functions</cell><cell cols="2">Normalized performance rates</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>f1</cell><cell>f2</cell><cell>f4</cell><cell>f5</cell></row><row><cell>Best performance rates</cell><cell>10</cell><cell></cell><cell>2480</cell><cell>11360</cell><cell>15400</cell><cell>11880</cell></row><row><cell>ABC</cell><cell></cell><cell>1</cell><cell>4.12</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row><row><cell>BA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>HS Pop</cell><cell></cell><cell>2</cell><cell>1.79</cell><cell>-</cell><cell>-</cell><cell>1.01e+0</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell><cell>6.67%</cell></row><row><cell>BFOA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>DE</cell><cell></cell><cell>4</cell><cell>8.79</cell><cell>7.23</cell><cell>6.08</cell><cell>3.37</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell>100%</cell><cell>100%</cell><cell>100%</cell></row><row><cell>GA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>SPSO</cell><cell></cell><cell>4</cell><cell>2.36</cell><cell>1.13</cell><cell>1</cell><cell>1</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell>100%</cell><cell>100%</cell><cell>100%</cell></row><row><cell>ACO R</cell><cell></cell><cell>3</cell><cell>1</cell><cell>1</cell><cell>1.54</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell>100%</cell><cell>100%</cell></row><row><cell>Best performance rates</cell><cell>30</cell><cell></cell><cell>12520</cell><cell>97200</cell><cell>-</cell><cell>-</cell></row><row><cell>ABC</cell><cell></cell><cell>1</cell><cell>2.42</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row><row><cell>BA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>HS Pop</cell><cell></cell><cell>1</cell><cell>1</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row><row><cell>BFOA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>DE</cell><cell></cell><cell>1</cell><cell>32.07</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>73.3%</cell><cell></cell><cell></cell></row><row><cell>GA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>SPSO</cell><cell></cell><cell>2</cell><cell>1.01</cell><cell>1</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell>100%</cell><cell></cell></row><row><cell>ACO R</cell><cell></cell><cell>1</cell><cell>1.09</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row><row><cell>Best performance rates</cell><cell>50</cell><cell></cell><cell>20320</cell><cell>280160</cell><cell>-</cell><cell>-</cell></row><row><cell>ABC</cell><cell></cell><cell>1</cell><cell>2.5</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row><row><cell>BA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>HS Pop</cell><cell></cell><cell>1</cell><cell>1.20</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>93.33%</cell><cell></cell><cell></cell></row><row><cell>BFOA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>DE</cell><cell></cell><cell>1</cell><cell>23.90</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row><row><cell>GA</cell><cell></cell><cell>0</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell>SPSO</cell><cell></cell><cell>2</cell><cell>1</cell><cell>1</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell>100%</cell><cell></cell></row><row><cell>ACO R</cell><cell></cell><cell>1</cell><cell>1.88</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>100%</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 8</head><label>8</label><figDesc>Comparison of the algorithms against IPOP-CMA-ES.</figDesc><table><row><cell>Algorithm</cell><cell></cell><cell></cell><cell cols="2">Uni-modal</cell><cell></cell><cell>Multi-modal</cell><cell>Hybrid</cell><cell>Total number</cell></row><row><cell>ABC</cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell></cell><cell>8</cell><cell>11</cell><cell>20</cell></row><row><cell>SPSO</cell><cell></cell><cell></cell><cell>10</cell><cell></cell><cell></cell><cell>3</cell><cell>1</cell><cell>1 4</cell></row><row><cell cols="2">Other algorithms</cell><cell></cell><cell>3</cell><cell></cell><cell></cell><cell>4</cell><cell>8</cell><cell>15</cell></row><row><cell cols="2">IPOP-CMA-ES</cell><cell></cell><cell>5</cell><cell></cell><cell></cell><cell>12</cell><cell>10</cell><cell>27</cell></row><row><cell>-20</cell><cell>0</cell><cell>20000</cell><cell>40000</cell><cell>60000</cell><cell>80000</cell><cell>100000</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>M. El-Abd / Information Sciences 182 (2012) 243-263</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>IPOP-CMA-ES was the best submission to the CEC2005 special session on Real À Parameter Optimization: http://www.lri.fr/$hansen/cec2005.html.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Parameter tuning for the artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 1st International Conference on Computational Collective Intelligence</title>
		<meeting>1st International Conference on Computational Collective Intelligence<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="608" to="619" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A modified artificial bee colony algorithm for real-parameter optimization</title>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.ins.2010.07.015</idno>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A restart CMA evolution strategy with increasing population size</title>
		<author>
			<persName><forename type="first">A</forename><surname>Auger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Congress on Evolutionary Computation</title>
		<meeting>IEEE Congress on Evolutionary Computation</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1769" to="1776" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Experimental comparisons of derivative free optimization algorithms</title>
		<author>
			<persName><forename type="first">A</forename><surname>Auger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Perez Zerpa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schoenauer</surname></persName>
		</author>
		<idno>inria-00397334</idno>
		<imprint>
			<date type="published" when="2010">2010</date>
			<pubPlace>France</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Real-parameter optimization performance study on the CEC-2005 benchmark with SPC-PNX</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Ballester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stephenson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Gallagher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Congress on Evolutionary Computation</title>
		<meeting>IEEE Congress on Evolutionary Computation<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3019</biblScope>
			<biblScope unit="page" from="544" to="551" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A survey on bee colony algorithms</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bitam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Batouche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Talbi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 24th IEEE/ACM International Parallel and Distributed Processing Symposium, IPDPS</title>
		<meeting>24th IEEE/ACM International Parallel and Distributed Processing Symposium, IPDPS</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Metaheuristics in combinatorial optimization: overview and conceptual comparison</title>
		<author>
			<persName><forename type="first">C</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="268" to="308" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An improved harmony search algorithm with differential mutation operator</title>
		<author>
			<persName><forename type="first">P</forename><surname>Chakraborty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">G</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fundamenta Informaticae</title>
		<imprint>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="page" from="1" to="26" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Adaptive computational chemotaxis in bacterial foraging optimization: an analysis</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Abrahamn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Biswas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="919" to="941" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<title level="m">Optimization, Learning and Natural Algorithms (in Italian)</title>
		<meeting><address><addrLine>Milano, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
		<respStmt>
			<orgName>Dipartimento di Elettronica</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Black-box optimization benchmarking for noiseless function testbed using artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">M</forename><surname>El-Abd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GECCO (Companion) in Black-Box Optimization Benchmarking Workshop</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1719" to="1724" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Hybrid real-coded genetic algorithms with female and male differentiation</title>
		<author>
			<persName><forename type="first">C</forename><surname>García-Martínez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lozano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of IEEE Congress on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">3019</biblScope>
			<biblScope unit="page" from="544" to="551" />
			<date type="published" when="2005">2005</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Inter-particle communication and search-dynamics of lbest particle swarm optimizers: an analysis</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kundu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Suresh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Abraham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">181</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="156" to="168" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">An idea based on honey bee swarm for numerical optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
		<respStmt>
			<orgName>TR06, Engineering Faculty, Computer Engineering Department, Erciyes University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Artificial bee colony code</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<ptr target="&lt;http://mf.erciyes.edu.tr/abc/software.htm&gt;" />
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Artificial bee colony (ABC), harmony search and bees algorithms on numerical optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Innovative Production Machines and Systems Virtual Conference</title>
		<meeting>Innovative Production Machines and Systems Virtual Conference</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A comparative study of artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Mathematics and Computation</title>
		<imprint>
			<biblScope unit="volume">214</biblScope>
			<biblScope unit="page" from="108" to="132" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A survey: algorithms simulating bee swarm intelligence</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence Review</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="61" to="85" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A powerful and efficient algorithm for numerical function optimization: artificial bee colony (ABC) algorithm</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Basturk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Global Optimization</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="459" to="471" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">On the performance of artificial bee colony (ABC) algorithm</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Basturk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="687" to="697" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Population structure and particle swarm performance</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mendes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Congress on Evolutionary Computation</title>
		<meeting>IEEE Congress on Evolutionary Computation<address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1671" to="1676" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Estimation of Distribution Algorithms</title>
		<author>
			<persName><forename type="first">P</forename><surname>Larrañaga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Lozano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A New Tool for Evolutionary Computation, Genetic Algorithms and Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="2001">2001</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A new meta-heuristic algorithm for continuous engineering optimization: harmony search theory and practice</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">W</forename><surname>Geem</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Methods in Applied Mechanics Engineering</title>
		<imprint>
			<biblScope unit="volume">194</biblScope>
			<biblScope unit="page" from="3902" to="3933" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An improved harmony search algorithm for solving optimization problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mahdavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fesanghary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Damangir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Mathematics and Computation</title>
		<imprint>
			<biblScope unit="volume">188</biblScope>
			<biblScope unit="page" from="1567" to="1579" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Population-variance and explorative power of harmony search: an analysis</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mukhopadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Abraham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second National Conference on Mathematical Techniques: Emerging Paradigms for Electronics and IT Industries (MATEIT 2008)</title>
		<meeting><address><addrLine>New Delhi, India</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Global-best harmony search</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G H</forename><surname>Omran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mahdavi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Mathematics and Computation</title>
		<imprint>
			<biblScope unit="volume">198</biblScope>
			<biblScope unit="page" from="643" to="656" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Particle Swarm Central, Standard pso</title>
		<ptr target="&lt;http://www.particleswarm.info&gt;" />
		<imprint>
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Biomimicry of bacterial foraging for distributed optimization and control</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Passino</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Control Systems Magazine</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="52" to="67" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Bacterial foraging optimization algorithm code</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Passino</surname></persName>
		</author>
		<ptr target="&lt;http://www.ece.osu.edu/passino/ICbook/ic_code.html&gt;" />
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The bees algorithm-a novel tool for complex optimisation problems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">T</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghanbarzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Koc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Otri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rahim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zaidi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Innovative Produxction Machines and Systems Virtual Conference, IPROMS</title>
		<meeting>Innovative Produxction Machines and Systems Virtual Conference, IPROMS</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="451" to="461" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Differential evolution, Dr. Dobb&apos;s</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Price</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal</title>
		<imprint>
			<biblScope unit="issue">264</biblScope>
			<biblScope unit="page" from="18" to="24" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Differential Evolution -A Practical Approach to Global Optimization</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Price</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lampinen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Springer</publisher>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">GSA: a gravitational search algorithm</title>
		<author>
			<persName><forename type="first">E</forename><surname>Rashedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Nezamabadi-Pour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sarayzdi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="issue">179</biblScope>
			<biblScope unit="page" from="2232" to="2248" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Real-parameter optimization with differential evolution</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ronkkonen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kukkonen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Price</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of IEEE Congress on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="506" to="513" />
			<date type="published" when="2005">2005</date>
			<publisher>IEEE Computer Society</publisher>
			<pubPlace>Washington, DC</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">The bees algorithm code</title>
		<author>
			<persName><forename type="first">S</forename><surname>Scholz</surname></persName>
		</author>
		<ptr target="&lt;http://www.bees-algorithm.com/modules/3/1.php&gt;" />
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Ant colony optimization for continuous domains</title>
		<author>
			<persName><forename type="first">K</forename><surname>Socha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">185</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1155" to="1173" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Price</surname></persName>
		</author>
		<ptr target="&lt;http://www.icsi.berkeley.edu/storn/code.html&gt;" />
		<title level="m">Differential evolution code</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Differential evolution -a fast and efficient heuristic for global optimization over continuous spaces</title>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V</forename><surname>Price</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Global Optimization</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="341" to="359" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-P</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Auger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tiwari</surname></persName>
		</author>
		<ptr target="&lt;http://staffx.webstore.ntu.edu.sg/MySite/Public.aspx?accountname=epnsugan&gt;" />
		<title level="m">CEC05 benchmark functions</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Problem definitions and evaluation criteria for the CEC 2005 special session on real-parameter optimization</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-P</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Auger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tiwari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ITT Kanpur</title>
		<imprint>
			<date type="published" when="2005">2005005. 2005</date>
			<pubPlace>India</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Harmony search as a metaheuristic algorithm</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Studies in Computational Intelligence</title>
		<editor>
			<persName><forename type="first">Z</forename><forename type="middle">W</forename><surname>Geem</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">191</biblScope>
			<biblScope unit="page" from="1" to="14" />
			<date type="published" when="2009">2009</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin Heidelberg</pubPlace>
		</imprint>
	</monogr>
	<note>Music-Inspired Harmony Search Algorithm</note>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Nature-Inspired Metaheuristic Algorithms, Genetic Algorithms and Evolutionary Computation</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Yang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Luniver Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
