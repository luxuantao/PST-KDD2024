<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Shadow Configuration as a Network Management Primitive</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Richard</forename><surname>Alimi</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Ye</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Y</forename><forename type="middle">Richard</forename><surname>Yang</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="laboratory">Laboratory of Networked Systems</orgName>
								<orgName type="institution">Yale University New Haven</orgName>
								<address>
									<region>CT</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<settlement>Seattle, Washington</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Shadow Configuration as a Network Management Primitive</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F475C378D3E1C1C154878B4A271994E0</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.1 [Computer Communication Networks]: Network Architecture and Design -Network communications; C.2.3 [Computer Communication Networks]: Network Architecture and Design -Network Operations Algorithms</term>
					<term>Design</term>
					<term>Management Network Management</term>
					<term>Network Diagnostics</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Configurations for today's IP networks are becoming increasingly complex. As a result, configuration management is becoming a major cost factor for network providers and configuration errors are becoming a major cause of network disruptions. In this paper, we present and evaluate the novel idea of shadow configurations. Shadow configurations allow configuration evaluation before deployment and thus can reduce potential network disruptions. We demonstrate using real implementation that shadow configurations can be implemented with low overhead.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Modern IP networks are becoming increasingly complex to configure, as these networks continue to evolve to offer multiple services (e.g., both routing and access control), integrate equipment from multiple vendors, and conduct continuous performance and feature tuning. As a result, it is difficult to generate and maintain the configuration even for a moderately-sized network. A recent survey <ref type="bibr" target="#b39">[40]</ref> found that configuration errors are a large portion of operator errors, which are in turn the largest contributor to failures and repair time. Another survey <ref type="bibr" target="#b28">[29]</ref> found that more than 60% of network downtime is due to human configuration errors. It further showed that more than 80% of IT budgets are allocated towards maintaining the status quo, a percentage that will only increase due to "increased complexity, lower budgets, and continued business demand."</p><p>One way to reduce configuration errors is to use configuration generation tools (e.g., <ref type="bibr" target="#b1">[2]</ref>) and/or validate the configuration files using static analysis or simulation (e.g., <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b36">37,</ref><ref type="bibr" target="#b51">53]</ref>). Although these tools can be quite useful, for example, it has been noted that the configuration analysis tool NetDB provides AT&amp;T significant cost savings <ref type="bibr" target="#b45">[47]</ref>, these tools are inherently limited in the problems that they can detect. In particular, since configuration files alone do not determine the behaviors of a network, analyzing only the configuration files based on an abstract model of the network and equipment behaviors may leave many problems undetected.</p><p>Recognizing the limitations of static analysis and simulation tools, some network operators and equipment vendors build test networks.</p><p>For example, Cisco has built the NSite <ref type="bibr" target="#b10">[11]</ref> facility to test network configurations before actual deployment. However, for most companies, the cost of maintaining a testbed sufficiently similar to the operating network is prohibitive.</p><p>Given the limitations of these existing approaches, configuration modifications are frequently deployed into the operating networks without realistic testing. As a contrast, software developers depend mostly on debuggers and actually running their programs before deployment. They run unit and regression tests for correctness and conduct stress tests to validate the programs under load. It would be difficult to imagine the extent of software errors if programs were deployed after only passing through analysis or simulation tools without actually running on the target platform. However, there is no such capability for IP network configuration <ref type="bibr" target="#b37">[38]</ref>.</p><p>In this paper, we propose such a novel capability called shadow configurations. With shadow configurations, a network operator may specify two configuration files for a router: one real (current) and one shadow (alternate). The shadow configuration files on a set of routers form a shadow configuration that the network operator intends to replace the current configuration files. The operator can test the shadow configuration files on the actual network without enabling them as the network's real configuration. Running on the existing network infrastructure, this capability is low cost, and thus may be utilized in daily operations. During the testing process, the current network configuration is still running and forwards real traffic; the shadow configuration carries only testing traffic and will not cause disruptions to the operation of the current configuration, even if there are errors in the shadow configuration. The operator conducts correctness and performance tests on the shadow configuration. Our usage of the term "shadow" is motivated by computer graphics, where instead of directly modifying the current display buffer, the display system often uses a shadow buffer to compute the next frame to be displayed.</p><p>In particular, by running a set of configuration files directly on the actual network to which they will be applied, a shadow configuration allows a network operator to evaluate the integrated effects of alternate configuration files, router software implementation (including protocol mis-implementations!), the physical network status, and dynamic information such as imported external route advertisements. Many integrated effects on routing are naturally summarized by the forwarding information base (FIB) at each router. We take advantage of the compact FIB representation and develop techniques to analyze the FIBs for configuration validation and adjustment.</p><p>Further exploring its benefits, we show how shadow configuration allows a network operator to evaluate, before actual deployment in the real network, whether a set of configuration changes will have the desired effect on network performance. Such realistic performance evaluation reduces the dependency on unrealistic models or assumptions of router processing or the network. Also, the availability of the on-going real traffic in the actual network allows the operator to duplicate a controlled portion of it as testing traffic in addition to generated testing traffic. This reduces the need to generate realistic testing traffic patterns. One potential issue of conducting testing on the shadow configuration is that if we naively send both shadow and real traffic, the combined traffic may overload some network links. Thus, we develop a novel technique, referred to as packet cancellation, to allow both real and shadow traffic to be forwarded in parallel without overloading the network.</p><p>After the operator is satisfied with the new configuration, she can simply quickly and smoothly swap the real and shadow configurations with minimal network disruptions. We develop a commitment capability for shadow configurations to reduce the effects of churn and convergence. This usage pattern can be viewed as "two-phase commitment" for network configurations.</p><p>To demonstrate feasibility, we extend the Linux kernel and implement necessary components to support shadow configurations in both Quagga <ref type="bibr" target="#b40">[41]</ref> and XORP <ref type="bibr" target="#b22">[23]</ref> software routers. We show that shadow configurations can be implemented efficiently, with only 12 additional lines of code on the kernel's forwarding fast path for packets not using packet cancellation, and no code changes to routing processes. The FIB memory increase to support both real and shadow configurations is less than 35% for the worst-case router under a variety of shadow configurations for a large US tier-1 ISP; the average is much smaller, less than 7%. At run time, our shadowenabled forwarding engine under heavy traffic has no more than 1.2% CPU usage overhead with a shadow configuration installed.</p><p>We also demonstrate the usage of shadow configurations. We show in real implementation that the commitment ability avoids the transient routing convergence period under router maintenance, shutdown and OSPF weight changes. We demonstrate our packet cancellation technique in a usage scenario where the operator tests the impact of a new configuration on a streaming video application. In this case, the combined (raw) shadow and real traffic intensity can be as high as 1.05 times the capacity of some links. However, packet cancellation shields real traffic from shadow traffic while at the same time, the measured performance of the shadow video streams is close to the case when it is using the network alone (difference is less than 1%).</p><p>In summary, we have made the following contributions: • We propose the novel capability of shadow configurations.</p><p>• We develop novel techniques for configuration analysis, evaluation and management. • We provide an implementation and demonstrate that the shadow configuration capability can be implemented with low overhead.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">MOTIVATING USAGE SCENARIOS</head><p>To drive our system design, we conducted a survey of operator configuration usage scenarios. Below, we list several key usage scenarios that we would like to support using shadow configurations. The objective of the list is not to be complete, but to motivate our design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Equipment Maintenance, Testing:</head><p>A network operator may need to shutdown a running router or link for maintenance. For example, many hardware and software updates suggest that a router or network interface card be taken offline during the process. To prepare for a shutdown, the operator makes the shadow configuration the same as the real configuration except that the link or router to be shutdown does not appear in the shadow configuration. The operator evaluates the shadow configuration, makes potentially necessary adjustments, and then commits it as the real configuration.</p><p>As another example of an equipment shutdown usage scenario, a surveyed operator commented that he needs to periodically shutdown a primary link to test if its backup link is operational and will be used after network reconvergence. Since the capacity of the backup link may be lower than the primary link, such tests may cause network disruptions. With shadow configurations, he can just shutdown the primary link in the shadow configuration and test if the backup link will be used in the shadow configuration after reconvergence.</p><p>After the maintenance or addition of a new network device, the operator includes the device in the shadow configuration, evaluates the effects, and makes adjustments before switching to the new configuration. This step can be particularly useful as multiple surveyed network operators commented that it is common for issues to arise after a maintenance upgrade.</p><p>Configuration Parameter Tuning: Many network operators need to tune configuration parameters to address performance or security issues. For example, a network operator may conduct traffic engineering to improve network performance, and many traffic engineering techniques (e.g., <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b38">39,</ref><ref type="bibr" target="#b41">42]</ref>) require the modification of configurable parameters (e.g., OSPF weights or egress point selections). However, such parameter adjustments may cause disruptions due to human error or routing reconvergence. As another example, a network operator may change its network access control list. However, such changes may lead to network disruption due to mis-configurations or unexpected interaction with routing. Shadow configurations support such tuning of parameters and testing correctness and performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Network Diagnosis:</head><p>One problem with network diagnosis is that it is difficult to conduct root-cause analysis (e.g., end-to-end performance violations). Although many network diagnosis techniques have been proposed lately (e.g., <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b42">43,</ref><ref type="bibr" target="#b43">45,</ref><ref type="bibr" target="#b44">46]</ref>), a major limitation of network support is that they cannot easily conduct unit or "destructive" testing <ref type="bibr" target="#b45">[47]</ref> as is done in software debugging. Shadow configurations allow a network operator to construct a shadow network on a subset of the network, and compare the differences in the real and shadow configurations to help with rootcause analysis. In particular, the delta <ref type="bibr" target="#b52">[54]</ref> testing technique for software debugging can be particularly helpful to the automation of configuration debugging.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Feature/Service Testing:</head><p>A network operator may be reluctant to enable new features (e.g., queue management or scheduling algorithms) or services (e.g., VoIP) on her operational routers due to concerns of unknown performance impacts, as many factors affect network performance <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b47">49,</ref><ref type="bibr" target="#b53">55]</ref>. Shadow configurations allow the operator to conduct an evaluation in the shadow configuration. She can finally commit the shadow configuration as the real one once the integration is verified to work correctly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SYSTEM OVERVIEW</head><p>We now present an overview of our system. The key components in our system are shown in Figure <ref type="figure">1</ref>. We focus on a high-level overview in this section. Details and implementation of several components will be discussed in the following sections. We divide our system into three layers: (1) forwarding engine; (2) run-time shadow management layer; and (3) configuration management.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Forwarding Engine</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Foundation</head><p>The key component is a forwarding engine supporting both real and shadow configurations. In this discussion, we focus on the  forwarding information base (FIB) for presentation, but note that the forwarding engine handles other items such as access control lists (ACLs) as well.</p><p>Let {1, ••• , N} be the set of routers in a configuration. Let C = {C 1 , ••• ,C N } be their configuration files. In abstraction, the control plane converts the configuration files into a configuration for the forwarding plane: C ⇒ { f ib i } i , where f ib i is the FIB at router i.</p><p>The FIB entries at an interface maps a destination IP address to an output interface.</p><p>We refer to a set of connected routers running a shadow configuration as a shadow-running network or srnet for short. In this paper, we consider only the case where a srnet belongs to a single autonomous system (AS). A srnet is likely to be the whole IP network of the AS, but can be only a subnet. The latter possibility gives flexibility such as incremental deployment. A router i inside a srnet has two configuration files: C r i for the real configuration and C s i for the shadow. In the forwarding engine, it will then have two FIBs, ( f ib r i , f ib s i ), for the real and shadow respectively. A link (interface) may leave a srnet, and we refer to such a link as a border link. The FIB at such a border link will need to contain ingress and egress policies for how to handle incoming and exiting shadow packets. Figure <ref type="figure" target="#fig_1">2</ref> shows a network containing a srnet.</p><p>When a packet arrives at a border link of a router i, the router uses the ingress policy to determine whether it should apply f ib r i or f ib s i . We refer to a packet forwarded using the shadow configuration as a shadow packet, and a packet forwarded according to the real configuration as a real packet. Router i uses a shadow bit in the IP header to indicate whether it is a shadow packet or a real packet.</p><p>When another router j receives a packet, it checks whether the packet is a real packet or a shadow packet, and uses the corresponding forwarding table. If it is a shadow packet and is leaving the srnet, the egress policy is applied (e.g., dropped).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Shadow Bandwidth Control</head><p>With both shadow and real traffic using the same network, we need a shadow bandwidth control component to regulate the bandwidth sharing. In particular, testing the performance of a shadow configuration should not cause disruption to the real traffic. We focus on network bandwidth, but one could also consider processing bandwidth. For example, per-packet processing such as IP lookup may be the bottleneck.</p><p>We support three modes of shadow bandwidth control: • Priority: real traffic has higher priority than shadow; • Partition: each configuration is allocated a portion of bandwidth; • Packet cancellation.</p><p>Priority and partition modes can be useful, for example, when the payload must be carried end-to-end to include the responses of end hosts and servers or when evaluating deep-packet inspection. In the partition mode, the network operator can specify non-work conserving scheduling for shadow packets to provide "scaled-down" testing bandwidth and arrival processes.</p><p>Packet cancellation is designed to allow an operator to conduct stress tests on the shadow configuration to reveal issues under higher load. The operator can certainly try to wait for a time period when the real traffic is low. However, there may not exist such a time period, or the real traffic load that the operator would like to duplicate for testing happens only when the real traffic is relatively high. Packet cancellation has the following two objectives: • Performance of the real traffic is not severely degraded; • Performance measurements taken from shadow packets should be close to the measurements that would be observed if the shadow configuration were the only active configuration. Packet cancellation is presented in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Run-time Shadow Management</head><p>Our next layer provides two main functions: • It provides a run-time and management environment for real and shadow configurations and routing processes (e.g., multiplexing of control packets, CPU and bandwidth management). We discuss one implementation in Section 7, including a technique for exchanging information with routers outside a srnet (e.g., with BGP) that presents a single consistent view to the outside world. • It provides a commitment capability to smoothly swap the configurations, which is important for many usage scenarios. This is especially desirable because the convergence process is a major source of disruption: reconvergence after a configuration change can cause network outages <ref type="bibr" target="#b0">[1]</ref> or additional configuration errors <ref type="bibr" target="#b29">[30]</ref>. We present our commitment protocol in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Configuration Management Layer</head><p>This layer provides multiple utilities to take advantage of and control the capability of shadow configurations. We have implemented the following tools: • Configuration user interface (cui): the operator is presented with two command-line terminals, one real and the other shadow. Using this interface, a network operator issues traditional router commands such as traceroute and ping. Additional commands are provided to control our commitment protocol. • Shadow traffic control (stc): the operator is allowed to specify shadow traffic (e.g., real traffic to be duplicated to the shadow configuration and intensity of generated shadow traffic) and collect traces. We have also investigated other useful tools:</p><p>• Shadow configuration analysis using FIB (scaf): a tool to detect routing loops and reachability issues. We give more detail on this tool in Section 4. • Shadow regression tester (srt): a tool to play test cases (e.g., reachability of important applications at important locations). • Configuration delta debugging (cdb): a tool based on the observation that by comparing the FIB and performance of the real configuration with the shadow configuration, we can automate a large fraction of configuration diagnosis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SHADOW ANALYSIS USING FIB</head><p>In this and the next two sections, we present the details of shadow configuration analysis using FIB, packet cancellation, and shadow commitment. They are presented in this order as this is a common order in many usage scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Objectives and Overview</head><p>With the availability of a shadow configuration, the network operator can analyze { f ib s i } i before they become installed for real packet forwarding.</p><p>In particular, we investigate how to detect forwarding loops using the collection of FIB states. As made evident by measurement results <ref type="bibr" target="#b23">[24]</ref> and online detection algorithms <ref type="bibr" target="#b49">[51]</ref>, forwarding loops happen frequently in real networks. Since routing loops can cause unnecessary load and dropped packets, detecting loops caused by a new configuration before its actual deployment can have great value. Our system computes the set of destination addresses as well as routers present in the loop, providing the network operator with detailed information from which she can debug the problem.</p><p>We also detect reachability issues, another common type of configuration errors <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b51">53]</ref>. Some reachability issues can be extremely challenging to detect using any static analysis or simulation tools because they depend on software implementation. For example, the Cisco document <ref type="bibr" target="#b9">[10]</ref> reports a common OSPF routing problem before Cisco IOS Release 12.1(3) related with forwarding addresses. The reachability issue noted was caused by the software implementation of a Cisco-specific optimization, and thus can be difficult to isolate using only configuration files. By looking directly at the FIB states, our system can bypass detailed modeling and abstractions, and provide the network operator useful reachability information to help debug the problem.</p><p>Note that for presentation clarity, we consider only unicast addresses; we assume that there exists a unique nexthop in each FIB for a single destination address. Also note that it is straightforward to add other forwarding mechanisms (e.g., label switched paths) to our analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Representative IP Addresses</head><p>A major complexity in reachability and forwarding loop analysis is that FIB lookup in modern routers is implemented using longest prefix matching, and different routers in the same network may have different sets of destination IP prefixes.</p><p>To use existing efficient graph algorithms to check reachability and forwarding loops, we first pre-process FIBs to compute representative IP addresses. With representative IP addresses, FIB analysis is done on individual IP addresses, without the need to handle longest prefix matching.</p><p>Consider a simple example where each FIB table in the network consists of the following destination IP prefixes: a default route (i.e., 0.0.0.0/0), 10.1.0.0/16, and 10.1.0.0/24. Then if we verify that there is no reachability or routing loop problem for each IP address in the set {0.0.0.0, 10.1.0.0, 10.1.1.0, 10.2.0.0}, then the network has no reachability or routing loop problem.</p><p>The algorithm f indrepip (Figure <ref type="figure" target="#fig_2">3</ref>) computes the set A of representative IP addresses for a network. The algorithm computes the set A i of representative addresses for each FIB f ib s i . The set A for the whole network is obtained by merging the A i 's. To make the merging efficient using a priority queue, the algorithm maintains each A i to be sorted.</p><p>When processing each entry in f ib s i , the algorithm adds to A i up to two addresses. The first is the beginning address of the destination prefix associated with the entry, and the second is the beginning address of the next range that could come after the entry's destination prefix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Computing Reachability and Loops</head><p>Once the set of representative addresses is found, each address can be analyzed using standard graph algorithms to detect reachability issues and forwarding loops:</p><p>1. Reachability: (1) set of routers R a that can reach address a; and (2) set of routers W a with FIB entries for address a but cannot reach address a; 2. Forwarding loops: sets of routers L a participating in forwarding loops for address a.  </p><formula xml:id="formula_0">findrepip({ f ib s i } i ) -Compute representative address set A 01. foreach f ib s i do 02. A i ← / 0 //</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SHADOW PACKET CANCELLATION</head><p>With a consistent and reachable forwarding state, the network operator next might ask, "If I adopt this alternate configuration on my network, how will it perform?" Such a question is important when deploying new services such as voice or streaming media, or when the operator may want to evaluate the likely impacts of the new configuration on service level agreements.</p><p>At this point, the reader might suggest that since the operator already has the FIBs of the shadow configuration, she may compute or simulate the performance characteristics using a traffic demand matrix. This is certainly a feasible approach and our system can support it. Such computation-or simulation-based approaches, however, implicitly rely on a model for packet processing inside each router for features such as QoS or any particular queue management techniques. New techniques such as traffic shaping or differentiated services would require modifications to the model <ref type="bibr" target="#b11">[12]</ref>. On the other hand, enabling direct measurements allows processing within the routers to be treated as a black box.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Overview</head><p>Recall that the objectives of packet cancellation are that (a) both real and shadow traffic are forwarded according to their original queue management schemes, and (b) shadow packets are (typically) only delayed by other shadow packets while real packets are (typically) only delayed by other real packets.</p><p>This mode uses two techniques: packet (payload) cancellation and a virtual clock. The key insight is that the payload of shadow data packets may not always need to be transmitted; that is, when the focus of an evaluation is on network performance metrics such as delay, the shadow data packets then are not intended to be received by end hosts. Thus, we need only to (1) retain the information relevant to forwarding the traffic within the network, and (2) know the correct payload size so that gathered performance measurements remain meaningful.</p><p>Given the preceding insight, we allow a router to append the header of a shadow packet to a real packet before it is transmitted over the link. The input interface at the receiving router removes the appended shadow header, and processes it accordingly. If the shadow traffic is delayed too much by the real traffic, we can append multiple shadow headers to catch up with the delay.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Shadow Data Packet Cancellation</head><p>We now describe how our scheme processes shadow data packets. At the output interface, shadow packets and real packets are separated into two queues, Q s and Q r . This also allows the shadow configuration and real configuration to define different queue sizes and queuing disciplines. When it is time to transmit the next packet, the line card applies the algorithm shown in Figure <ref type="figure">4</ref>.</p><p>Specifically, if Q s is empty, send head(Q r ), the head of the real packet queue; otherwise, extract the headers of the shadow packets that should be transmitted and combine them with head(Q r ).  We may extract multiple (up to MAX_CANCELLABLE, set to 3 in our implementation) shadow packets to "piggyback" on a real packet due to packet payload sizes and previous delay of shadow packets. To determine whether a shadow packet should be transmitted or piggybacked, the shadow queue maintains a virtual clock. The virtual clock estimates whether the transmission of a shadow packet should be started (virtual_clock_expired) if there were only shadow traffic.</p><p>Note that it is important that when extracting headers from a shadow packet, we extract all IP headers to allow the scheme to work properly when tunnels or VPNs are configured. If any IP header that must be interpreted is encrypted, the scheme may not work. The TCP/UDP header, if it exists, should also be extracted since it may be required for packet filtering (e.g., in Cisco's policy routing, NetFlow sampling, and firewalls). In a simple IP network without tunnels or VPNs, the extracted headers will consist of a single IP header and a TCP/UDP header, and will typically be 40 or 28 bytes in size.</p><p>There is one additional piece in the scheme. It must be possible for the incoming interface at the receiving router to determine whether it is receiving a single packet or combined packet. If the link-layer payload is larger than length indicated by the IP header, the router strips off the appended headers, verifying their IP version, header length, and optionally the checksum.</p><p>Figure <ref type="figure">5</ref> shows how a shadow payload can be canceled with a real packet for transmission over a link. The shadow header is extracted at the receiving interface and forwarded independently.</p><p>With packet cancellation, it is possible that the full size of the transmitted frame becomes larger than the next interface's MTU, causing the packets to be silently dropped at the next hop. To handle this, one could simply decrease the MTU to accommodate the additional canceled packets. To avoid additional fragmentation, one could instead increase the MTU, but internally process packets (i.e., handle fragmentation) at the routers according to the original MTU.</p><p>Further consideration is required when operating on Ethernet. To provide intuition, the algorithm in Figure <ref type="figure">4</ref> might fill in all "whitespace" left by real traffic with full shadow packets, causing the link utilization to approach 100% and causing large delay variations. One simple way to solve the problem is to always transmit only the shadow header and set a timer to throttle shadow queue transmission rate when the real queue is empty. In our implementation, we found that the available timers are too inaccurate to retain the appropriate packet delay variations. Thus, we adopt the heuristic that even when the real queue is empty, only the shadow packet header is transmitted if link utilization is above a certain threshold (we use 85%). Since a previous hop may have trimmed a shadow packet, it may be necessary to expand the packet and zero-fill the payload when below the threshold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Shadow Control Packet Forwarding</head><p>We previously considered only shadow data packets. Packet cancellation cannot be applied to shadow control packets, such as route advertisements, SNMP messages, or ICMP packets. For safety and because control packets can originate from many places (routing processes, ARP, ICMP, etc.), we opt to explicitly mark a shadow packet that can be canceled (e.g., in generated testing traffic) with a PD bit, indicating that its payload is dropable. We process shadow control packets using a separate queue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Overhead and Perturbation Analysis FIB Lookup</head><p>One potential bottlebeck is FIB lookup instead of bandwidth. Since a combined packet received in packet cancellation mode contains multiple headers that might require separate lookups, it is crucial that the router be able to support this additional processing burden.</p><p>Forwarding engines in many routers are designed to handle worstcase scenarios where all incoming packets have the minimum size. In particular, assume that a router can support α L K min packets per second where L is the link speed in bytes per second; K min (typically, K min = 40 bytes) is the minimum packet size; and α ≤ 1 is the efficiency factor.</p><p>Let k r denote the packet sizes of real traffic and k s the packet sizes of shadow traffic. Let α r be the link utilization caused by real traffic and α s that of shadow traffic. To sustain lookup, we need:</p><formula xml:id="formula_1">E α r L k r + E α s L k s &lt; α L K min .</formula><p>Using the packet size distribution in <ref type="bibr" target="#b25">[26]</ref>, we can compute α s given α r and α. For α ≥ 0.7 and α r ≤ 0.8, we have α s ≥ 0.75, meaning the link utilization for shadow traffic can reach up to 75% while still being supported by the forwarding engine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Performance Measurement Accuracy</head><p>Our packet cancellation scheme tries to remain as consistent as possible with the original forwarding behaviors for both shadow and real packets. This is important since the operator must have confidence that the measurements obtained on real and shadow traffic are indicative of the measurements that would be observed if only real or only shadow traffic were present in the system.</p><p>To better understand our scheme, consider a basic model: packets have uniform sizes, all packets have space reserved for an additional shadow header, and packets do not arrive in the output queue when a transmission is in progress. Then, we can show that there will be no delay or loss perturbations for either real or shadow packets.</p><p>CLAIM 1. For any packet p, d r (p) = d s (p) = 0 where d r (p) (resp., d s (p)) is the end-to-end packet delay perturbation for a real (resp., shadow) packet. CLAIM 2. For any packet p, l r (p) = l s (p) = 0 where l r (p) (resp., l s (p)) is the packet loss perturbation for a real (resp., shadow) packet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">SHADOW COMMITMENT</head><p>As we discussed in Section 3, with a consistent and reachable forwarding state and satisfactory performance, the network operator may then decide to apply the shadow configuration as the network's actual configuration. We define the objective of the commitment process to be swapping the shadow and real configurations at all routers within the srnet. Swapping allows the network to rollback if an error occurs or the operator finds the new configuration unacceptable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Overview</head><p>Although there are several previous studies on updating FIBs across routers (e.g., <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b54">56]</ref>), our shadow configuration commitment problem is distinct from these previous problems. For example, many types of changes and routing processes may be involved in a configuration change, so routing-protocol specific techniques (e.g., <ref type="bibr" target="#b20">[21]</ref>) may not apply.</p><p>Our protocol is inspired by the simple and clean map dissemination protocol proposed by Lakshminarayanan et al. in <ref type="bibr" target="#b33">[34]</ref>. We address additional issues in our specific context including integration with version control of distributed configuration files, rollback of configurations, and simplicity of router maintenance.</p><p>To integrate with configuration version control (e.g., CVS), before each commitment, the operator broadcasts two tags to each router: C old identifies the real configuration before swap, and C new the shadow configuration before swap. An additional functionality of the tags is to mark packets to avoid forwarding loops during the swapping period; this is inspired by the map dissemination in <ref type="bibr" target="#b33">[34]</ref>. After commitment, the tags should be removed for simplicity of router maintenance.</p><p>Consider the scenario when routers always tag packets (e.g., with global map sequence numbers <ref type="bibr" target="#b33">[34]</ref>), and the network operator powers on a new router. After reading its local configuration file, a routing process (either shadow or real) must communicate with the corresponding routing processes of its neighboring routers. However, since the router does not know which tag denotes the real configuration and which denotes the shadow, it may not be able to tag routing messages correctly such that they are demultiplexed to the correct routing processes at its neighbors. One could design various ways to work around this problem (e.g., designating globally constant tags or a protocol to allow a router to query tags), but they introduce extra complexity. Our commitment protocol chooses to remove the tags after commitment so that the shadow bit has welldefined semantics (0 indicates current and 1 indicates shadow) during normal operation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Protocol Operation</head><p>The protocol proceeds in four phases. Messages to the routers are sent first using the real configuration, then the shadow configuration in the case where the real configuration is non-operational. Phase 1: During the first phase, the operator sends a TAG DISTRI-BUTION message containing two tags to each router. The two tags are temporary network-wide identifiers for the configurations: C old identifies the real configuration before swap, and C new the shadow configuration before swap. Upon receiving these tags, each router creates a lookup table to remember the mapping. To report its configuration file to version control (diff is enough) and to make sure that all routers have received the tags, each router responds to the TAG DISTRIBUTION message with an acknowledgment. The operator waits to receive an acknowledgment from each router.</p><p>To prevent links from being oversubscribed while commitment is in process, testing traffic marked with the PD bit (discussed in Section 5) is immediately dropped by routers as of this phase. This is done by adding an output filter rule. Phase 2: During the second phase, every router knows the tags, so the operator sends a TAG PACKET message to all routers causing them to start marking packets with tags. Since routers do not receive the TAG PACKET message simultaneously, some packets are marked with tags and some use the shadow bit during this phase. Packets generated at the router by a configuration are marked with that configuration's tag, and received packets already marked with tags are forwarded according to the appropriate configuration. Tags added to packets received without tags: if the shadow bit is un- Before moving to phase 3, the network must wait for the following two conditions to become true: (1) no routers are still marking packets using the shadow bit; (2) no packets using the shadow bit are in transit.</p><p>At the second half of the Phase 2, the two conditions are satisfied. For the first condition, the operator needs to receive an acknowledgment from each router. After the first condition is true, the operator satisfies the second condition by waiting for a short time (e.g., the estimated upper bound of link latency) until all packets have been processed by the next router in their path. Phase 3: During the third phase, since no packets will be using the shadow bit, the routers can safely swap the configurations. The operator transmits a SWAP message to the routers. Each router swaps the real and shadow configuration after receiving the message, and sends an acknowledgment back to the operator. Note that the tags associated with each configuration are not swapped. Also note that ingress routers that have received the SWAP message now tag unmarked packets with C new instead of C old . Phase 4: In the last phase, the operator sends a MARK SHADOW BIT message to each router, allowing them to again mark packets using the shadow bit. To report success, each router sends an acknowledgment back to the operator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Error Handling and Rollback</head><p>There are potential error conditions during commitment. Link or router failures cause the routing and forwarding processes (e.g., fast rerouting) to automatically start to react and bypass the failed equipment. The presentation below is focused on error conditions leading to the disruption to our commitment protocol. Transient States: We define a transient state as a state where some data packets use the old configuration and others use the new configuration. A potential pitfall of a transient state is that the utilization of some links may be higher than it would be under either of the two configurations. Consider an example shown in Figure <ref type="figure" target="#fig_4">6</ref>. Routers R 1 and R 2 will both change forwarding paths in the new configuration. In Figure <ref type="figure" target="#fig_4">6</ref>(a), neither has swapped and only R 2 forwards through link e. After R 1 has swapped in Figure <ref type="figure" target="#fig_4">6</ref>(b), the link is used by both routers, possibly causing temporary congestion. Once R 2 swaps in Figure <ref type="figure" target="#fig_4">6</ref>(c), the transient state ends and the final router is no longer using link e. Note that such transient states also can happen under some circumstances with other approaches such as the map dissemination approach <ref type="bibr" target="#b33">[34]</ref>. Recovery and Rollback: During phase 1, if any one router reports an error or the controller does not receive acknowledgments from all routers, the commitment should abort. As a soft state design, if a router does not receive TAG PACKET before its local timeout, it should change back to the normal state. During phases 2 and 4, if the operation of any router is unsuccessful or times out, the operator will retry the phase. Routers can remain in their current states, as this is not a transient state. It is straightforward if the operator chooses to rollback to the original configuration since the tags are already distributed and only phases 2, 3, and 4 of the protocol need be executed.</p><p>The only phase in which a transient state can happen is phase 3. Here, it is important for the state not to be permanent. Consider what can happen during phase 3. If acknowledgments are received from all routers, the transient state has already ended and no rollback is necessary. If at least one acknowledgment is missing, there are two possible reasons: a router did not receive or process the SWAP command, or the SWAP is processed but the acknowledgment was not delivered. We would like to detect the first case. Since an error may have occurred at such routers (e.g., a routing process crashed), it may not be possible to query them directly. Thus, the operator queries the router's neighbors. If the router in question is tagging its forwarded traffic (recall that only real packets are present) with C old , then there exists a router that has not processed the SWAP message, and the srnet should rollback. Note that even if a router crashes during commitment, both the real and shadow configurations of other routers within the srnet reconverge appropriately.</p><p>PROPOSITION 1 (SAFETY). Packets never alternate back and forth between configurations. Thus, the commitment protocol does not create any additional forwarding loops. Also, control packets such as route advertisements are delivered correctly even while the commitment protocol is executing.</p><p>PROPOSITION 2 (LIVENESS). If for every router, commitment control messages are delivered in finite time, and the router either responds to the messages or is recovered offline in finite time, the srnet returns to normal operation, and the transient state is no longer present.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">SHADOW IMPLEMENTATION</head><p>To demonstrate feasibility, we have implemented a fully operational system supporting shadow configurations. We now discuss in detail Layers 1 and 2 of our system architecture. The related components are shown in Figure <ref type="figure">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Objectives</head><p>There are three primary objectives fulfilled by our implementation: (1) identify operating system configuration entities with the shadow and/or real configurations; (2) keep CPU and memory overhead low by merging configuration entities where possible; (3) reduce code changes (e.g., to routing processes and network tools) after introducing shadow configurations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Supporting Shadow Configurations</head><p>A key issue in implementing support for shadow configurations is associating entities maintained within the operating system (e.g., FIB entries, filtering rules, interfaces, neighbor entries, and packets) with the appropriate configuration. To demonstrate that this can be done with minimal effort, we present an implementation consisting of extensions to the Linux Kernel (version 2.6.22.9). Our design is able to support both XORP <ref type="bibr" target="#b22">[23]</ref> (version 1.4) and Quagga <ref type="bibr" target="#b40">[41]</ref> (versions 0.98.6 and 0.99.9) without any source code changes to either software package. Either can be used interchangably above our shadow-enabled kernel, which illustrates support in heterogenous environments.</p><p>Figure <ref type="figure" target="#fig_5">7</ref> shows the major components of the implementation. We emphasize that different routers may choose different implementation as long as the messaging format (i.e., how shadow data packets and shadow control packets are encoded) is standardized. Separating Configurations: Each entity is associated with a particular configuration. Entities corresponding to the current real configuration are applied to transit traffic and routing processes that communicate with the outside world, while entities corresponding to the current shadow configuration are being evaluated by the operator.</p><p>We append data structures for necessary entities with a mask, where each bit position corresponds to a particular configuration. If an entity appears in more than one configurations, multiple bits are set in the mask. One installed configuration is considered as the real while another is considered the shadow. This mapping is maintained in a simple two-entry translation table, allowing the commitment's swap operation to simply swap the entries in the translation table. Shadow-enabled FIB: We merge entries in FIB table for both configurations to reduce memory overhead. FIB entries use a mask to indicate the configurations to which the destination subnet belongs.</p><p>We extend the FIB lookup, insertion, and deletion algorithms to handle the merged FIB table. If the forwarding behaviors (e.g., next hops) in the two configurations are different, we record the difference inside the entry.</p><p>Other similar kernel tables, such as neighbor entries, filtering rules, and interface addresses are handled similarly. Socket API: Extending the kernel tables is not enough. When a userspace program, such as a routing process or a testing tool communicates with the kernel, it uses the socket API. We extend the kernel's socket data structure to reference the configuration to be used when transmitting packets and demultiplexing incoming packets. Routing processes in different configurations can safely bind to the same IP addresses and ports. Packets: Our current packet format supports IPv4 and ARP, but the same methodology can be applied to IPv6 or other Layer 3 protocols. During normal operations, each packet needs two bits: a shadow bit S, and a PD bit to indicate whether the payload can be dropped. Both S and PD are always 0 for transit traffic. For IPv4 packets, S uses the low bit of the version field, and the PD uses the unused flag bit. Such a mapping causes shadow packets to be automatically dropped by routers that are not shadow-aware. Two additional bits are needed during commitment: T P indicates whether a tag is present, and T G indicates the tag. We store T P in the highest bit of the TOS field and T G in the next highest bit. We use the highest four bits of the ARP header's operation field to mark ARP packets. Note that it is also possible to encode some or all of this information in a shim header.</p><p>Packets received by the kernel are demultiplexed according to the translation table (and the tag assignment during commitment). A reference to the appropriate configuration is stored in the packet's data structure for usage in key parts of the TCP/IP stack such as the routing cache and FIB lookups, ICMP errors, and UDP/TCP demultiplexing. Shadow-aware Programs: Since we also would like provide support for existing programs, we allow a default configuration to be defined for a process, and the attribute is inherited by child processes. Sockets created by a process initially belong to the process's default configuration. We can then launch any program within the desired configuration.</p><p>A shell is started for each configuration to enable an operator to apply changes to a particular configuration. The shell indicates whether its configuration is currently defined as the real or shadow. Routing Processes and Tools: In most implementations, routing processes are normal user processes. Changing networking configurations in the Linux kernel is primarily done using netlink sockets. By starting a routing process in the appropriate shell, its sockets are associated with that configuration and the kernel interprets the changes to entities as applying to that configuration. We configure Quagga and XORP such that two instances can be running concurrently, allowing both a shadow and real configuration to be deployed.</p><p>The same technique is applied to common network testing tools such as ping, traceroute, and homegrown scripts, allowing them to operate without modification. We use this approach with our custom traffic generation program and measurement program used in our evaluations.</p><p>It is possible that some vendors add shadow-awareness directly to userspace processes (e.g., to use a shared RIB to further reduce memory overhead or supporting additional features in traceroute), while others may want to reduce code changes. Connection to Outside: Our implementation uses proxies to handle control plane connectivity to outside of a srnet. Such connectivity is necessary to support incremental deployment and interdomain scenarios. These simple proxies can handle not only normal operations but also shadow commitment.</p><p>Consider the example of eBGP. Suppose without shadow configurations a BGP routing process b has a BGP peer e in another domain; that is, b has a TCP connection at port 179. With shadow configurations, corresponding to b, there may be two BGP processes b r and b s for the real and shadow configurations. We introduce a proxy b p for b. Then b p peers with the external BGP peer e (by listening at the IP address and BGP port 179). The process b p forwards each incoming BGP message from e to both b r and b s , which can then apply its ingress filtering policies. Whenever b r sends a BGP message to e, it is forwarded to b p which forwards to e.</p><p>We use a novel transaction rollback technique to handle commitment with visible external effects. Specifically, the proxy keeps a log of forwarded messages. Whenever b s sends a BGP message to e, it is stored locally by b p . If the network swaps the real and shadow configurations, b p computes the differences of the messages of b r and b s , rolls back the unnecessary impacts of b r (i.e., withdraw different routes), and then installs the effects of b s without disconnecting the external BGP connection. Shadow-aware Interfaces: It is necessary for routers to drop shadow packets and untag transit packets (in the case of commitment) before exiting an srnet. We enable a shadow-aware attribute on each interface that participates in the srnet.</p><p>Since our evaluation environment utilizes ARP, there is one additional complexity during commitment. Egress traffic should not be delayed or possibly dropped while it waits for the new configuration to query for the MAC address of the peering router outside of the srnet. Thus, we configure the kernel to accept unsolicited ARP replies and duplicate any received ARP reply to the shadow configuration for interfaces with the shadow-aware attribute disabled.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">EVALUATIONS</head><p>We first present our methodology, then present our results in two parts. In the first part, we present results that show that the overhead of supporting shadow configuration is very small. In the second part, we demonstrate the effectiveness of shadow configurations in three usage scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Methodology</head><p>Implementation: We use our implementation as described in Section 7. Configurations: We use the configuration files of the two operating networks in Table <ref type="table" target="#tab_3">1</ref>. US-ISP is a large US tier-1 ISP.</p><p>We use the configurations of US-ISP only for evaluation of FIB size overhead. The rest of our experiments use a small illustrative topology and an emulation of the Abilene backbone. We use Emulab's <ref type="bibr" target="#b50">[52]</ref>  Routes for the University of Utah are removed so as not to interfere with the Emulab addresses configured on the routers. Since the versions of XORP and Quagga used did not support IS-IS, we translated Abilene's configurations to use OSPF. Data Traffic: We use CAIDA <ref type="bibr" target="#b5">[6]</ref> packet traces in our evaluations.</p><p>When using these traces on our emulation of the Abilene backbone, we remove packets for destination addresses not appearing in the BGP routes accepted by Abilene.</p><p>Performance Measurements: To obtain performance measurements under packet cancellation, we use a custom utility similar to iperf that timestamps generated packets just following the IP header and sends using raw sockets. The timestamp is not lost during packet cancellation. We modify the kernel to deliver canceled packets to raw sockets. The server computes delay between sending and receiving time, and uses linear regression to subtract off mean delay and account for clock drift.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Overhead</head><p>Since we intend that shadow configuration be used in production networks, the overhead of supporting it should be small. One reason we chose Linux is to see the overhead in a general platform. We consider (a) data path forwarding overhead due to additional complexity to support a shadow configuration; (b) FIB storage overhead due to addition of a shadow configuration; and (c) FIB update overhead due to addition of a shadow configuration. Data Path Forwarding Overhead: Our results show that there is truly a negligible overhead on the data forwarding path due to the additional complexity of supporting a shadow configuration. For this test, we use a particular traffic load both with the standard Linux kernel, and then again with our shadow-enabled kernel. When employing our shadow kernel, we load a shadow configuration but do not generate shadow traffic.</p><p>We use a topology with 3 routers with 1 Gbps Ethernet links; there is a sending, intermediate, and receiving router. The sending router uses the Linux kernel's pktgen module to generate 300byte packets so we can stress-test the intermediate router's forwarding path. Our implementation doesn't use any additional memory copies for real packets, so larger packet sizes do not add overhead in our shadow kernel.</p><p>The sending router transmits packets for 30 seconds with randomly generated destination IP addresses in the range 10.0.0.4-10.255.255.255 to ensure that FIB lookups (on the intermediate router) are rarely handled by the routing cache. The intermediate router configures one default route for 10.0.0.0/8 to route to the receiving router, and also adds additional 9306 randomly generated entries from 10.0.0.0/8 with a prefix length distribution matching the global BGP tables published by the Route Views Project on <ref type="bibr">January 18, 2008 [44]</ref>. Note that there are no prefix lengths shorter than 8. Also, 9293 routes are added in shadow configuration, with 60% of the prefixes shared with the real configuration.</p><p>The comparison in CPU utilization between our shadow kernel and the standard kernel are shown in Figure <ref type="figure" target="#fig_6">8</ref>. The machines are hyperthreaded, so we increase the data rate until the CPU handling the input interface interrupts reaches 100% utilization. The reported value is the overall CPU utilization including both CPUs. Our implementation does not noticeably increase CPU utilization   as compared to the standard kernel. Note that the full 1 Gbps capacity is not reached due to the smaller packet sizes. Our implementation can achieve the same rates cited by <ref type="bibr" target="#b3">[4]</ref> for 1430-byte packets. FIB Storage Overhead: One concern is that the number of FIB entries will be increased. However, for most networks, the network prefixes are relatively fixed, and thus should appear in both real and shadow configurations. Accordingly, the number of entries and IP prefix lookup costs do not increase significantly. We incur a storage overhead only if the shadow and real configurations specify different next-hop behaviors, since otherwise only a single FIB entry is required.   <ref type="table" target="#tab_5">2</ref> shows the increase in FIB size across all routers for the Abilene network due to configuration changes made in the shadow configuration. Both the real and the shadow configurations have more than 90, 000 FIB entries. We observe these topology changes lead to a small overall storage increase. Although in the theoretical worst case the storage may double, in our real implementation the increase is less than 8% due to the sharing between real and shadow next-hops. We anticipate that this sharing is common.</p><p>To evaluate the scenarios for a larger network, we use the configuration of US-ISP, a large tier-1 ISP. We use its backbone topology, OSPF link weight configuration, and external routes to compute the FIB size at each router. Each router has a few hundreds of thousands of FIB entries. The presented memory overhead is based on data structure sizes in the Linux kernel implementation.</p><p>Figure <ref type="figure" target="#fig_8">10</ref> shows the results for two scenarios. The vertical bar denotes the maximum and minimum per-router memory overhead, and the dark points denote the average memory overhead over all routers. In the first scenario, we show the memory overhead when only a single router at a time is removed from the network in the shadow configuration. We observe that in the worst cases, the routers with the worst FIB overhead have their FIB storage increased by no more than 35%. These "worst" routers are often stub routers with low connectivity in the topology. Thus, one way to reduce their storage, if necessary, is forwarding entry aggregation or virtual address mapping. The average is much lower, under 5% in most cases. Next, we show the FIB memory overhead as routers are removed one-by-one in the shadow configuration. There is no case in which the router with the worst FIB overhead has its FIB storage increased by 35%. The average overhead is much lower than the worst case. FIB Update Overhead: Since we also extend the FIB insertion and deletion routines to handle shadow configuration, we also evaluate the performance when the FIB is being frequently updated. We use the same setup as the prior experiment on FIB data forwarding processing overhead, but we also randomly add and delete between 1 and 100 routes in the real configuration in 10.0.0.0/8 each second at the intermediate router as it is forwarding traffic.</p><p>Figure <ref type="figure" target="#fig_7">9</ref> shows the results. Again, there is no noticeable difference between supporting shadow configuration or not. Note that when running this experiment without the FIB updates, the CPU utilization for both our shadow kernel and the standard kernel fluctuates much less, but both remain nearly identical for the duration of the experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Usage of Shadow Configurations</head><p>We now demonstrate the effectiveness of shadow configuration in three usage scenarios. Equipment Maintenance: A usage scenario of shadow configuration is equipment maintenance. We use this scenario to demonstrate the performance of our commitment protocol.</p><p>In this experiment, we use the Abilene topology and configurations, and generate transit traffic according to the CAIDA traces from peering routers configured at New York, Seattle, and Atlanta. Emulab's delay nodes are used to model propagation delays.</p><p>In this scenario, we bring the Kansas router down for maintenance and return it to service when finished. The real configuration is initially cloned to the shadow configuration. Next, we disable OSPF in the shadow configuration on the Kansas router, wait 10 seconds, then commit at time 48. The network operator may then safely perform upgrades, and restart it when finished. Once the shadow configuration with Kansas enabled converges, the configurations are again swapped, causing the Kansas router to again forward transit traffic.  Figure <ref type="figure" target="#fig_10">11</ref> shows the round-trip time between the peering routers at New York and Seattle. Note that there are three modes of operation at 82 ms, 92 ms, and 102 ms due to the Abilene routers asynchronously executing the swap in phase 3 of the commitment protocol. This arises because the ICMP echo request follows a different path than the reply, due to tagging at the ingress routers. The intermediate transition phase lasts for a short time, but the packet forwarding behavior during this transition phase is clean and controlled. Importantly, there are no packet losses.</p><p>Our commitment protocol is executed over serial consoles to each router. We are currently developing a protocol to access the routers' configuration terminals using both the shadow and real configurations such that the protocol is resistant to misconfiguration in one of the two configurations.</p><p>Parameter Tuning: The next usage scenario for shadow configurations we evaluate is parameter tuning. We update a set of OSPF link weights simultaneously. The real configuration uses Abilene's normal link weights, and we then change all of the link weights in the network to be the inverse of the bandwidth (i.e., all equal in the Abilene case) using two methods: (1) manual configuration and (2) shadow configurations.</p><p>To perform the manual configuration, we update the link weights using parallel Telnet sessions, which takes about 4 seconds. With shadow configurations, we update the link weights in the shadow configuration, wait 20 seconds for convergence, and then execute the commitment protocol.  We immediately notice in Figure <ref type="figure" target="#fig_12">12</ref> that using the shadow configuration avoids the reconvergence process. Under manual configuration, the round-trip time between the peer routers at Seattle and New York fluctuate between 83 ms and 135 ms before settling on the converged value of 80 ms. Using shadow configurations provides a quick and smooth transition since convergence takes place in the shadow configuration prior to commitment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>New Service Testing:</head><p>The last usage scenario we evaluate is testing of new services. We use this scenario to demonstrate our packet cancellation technique and show that (1) there is little effect on transit traffic and (2) performance measurements on shadow traffic are indicative of its true performance.   <ref type="table" target="#tab_7">3</ref>.</p><p>UDP packet traces are constructed using a high-definition movie trailer and the VideoLAN <ref type="bibr" target="#b46">[48]</ref> VLC software. The movie trailer alternates between complex scenes (using up to 22 Mbps) and a black background with text (using 450 Kbps).</p><p>With this setup, there exist time intervals when the combined (raw) real and shadow traffic intensity exceeds link capacity on some links, meaning bandwidth partitioning is not effective for obtaining accurate performance results.</p><p>Delay nodes are removed from the Emulab experiment since we want to observe small-scale variations over multihop flows. We also use 100 Mbps links to more easily observe delay variation given the resolution of our measurement tools. Safety for Transit Traffic: Our experiments show that the shadow traffic has little effect on the real traffic when packet cancellation is enabled. We show the measured performance for two paths. Figure <ref type="figure" target="#fig_13">13</ref> shows the delay variation for traffic from Seattle to Chicago.</p><p>The real traffic performance with packet cancellation enabled overlaps the performance when only real transit traffic is present, while the delay variation rises sharply up to about 15 ms without packet cancellation. Similar behavior is observed between Salt Lake City and Atlanta (Figure <ref type="figure" target="#fig_14">14</ref>), where the round-trip time increases from under 1 ms up to 20 ms without packet cancellation. Round-trip time is largely unaffected with packet cancellation enabled. Shadow Performance Accuracy: We next show that packet cancellation provides accurate performance measurements despite the presence of real transit traffic. In our experiment, there are multiple streaming sessions that have incorrect measurements when packet cancellation is not enabled. For example, the throughput measurement for the video stream from Houston to Chicago (Figure <ref type="figure" target="#fig_17">16</ref>) shows the correct value of 22 Mbps. Without packet cancellation, the measurements incorrectly show that only 18 Mbps is supported.</p><p>Multiple video streams in our experiments also show that loss rates with packet cancellation are indicative of the true value. Figure <ref type="figure" target="#fig_15">15</ref> shows the loss rate of streams served by Salt Lake City. Without packet cancellation, it is erroneously reported to be up to 14%, while packet cancellation correctly has no losses. Fine-grained Accuracy: Finally, we show in more detail how real traffic is protected and performance characteristics of shadow traffic are preserved under packet cancellation. We use a simple illustrative topology shown in Figure <ref type="figure">5</ref> and the CAIDA traces. Figure <ref type="figure" target="#fig_18">17</ref> shows CDFs of delay variation for both real and shadow traffic. The observed performance for real traffic is largely unchanged as we increase shadow traffic until raw total traffic intensity reaches link capacity (100%). Similarly, delay variations for shadow traffic closely approximate its actual behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">RELATED WORK</head><p>The importance of configuration management has motivated many recent studies and proposals on this topic (e.g., <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b35">36]</ref>). Due to space limitation, we review only the most directly related work. Static Analysis and Simulation Tools: These studies are very useful for configuration validation in many settings (e.g., <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b36">37,</ref><ref type="bibr" target="#b51">53]</ref>). Shadow configurations provide a complementary tool and have several advantages such as scalability. A particular advantage is that it does not depend on an abstract model of the real network and therefore will not miss configuration errors caused by the inconsistency between the real network and the model.</p><p>• Since static analysis and simulation tools often depend on an abstract model of the real network, they may miss configuration errors caused by the inconsistency between the real network and the model (e.g., forgotten network equipment or network connectivity). • The final configuration depends on the whole network processing environment: the hardware, firmware, and software features (including the bugs!) of the routers. Typical networks are heterogeneous networks consisting of equipment from multiple vendors with distinct hardware, firmware and software features. As an example of the complexity, a survey <ref type="bibr" target="#b35">[36]</ref> of 31 production networks found that over 200 different software versions were running on multiple hardware platforms. As another example, some routers may also offer special non-standard features (e.g., Cisco-specific BGP decision steps in addition to the conventional BGP decision process <ref type="bibr" target="#b51">[53]</ref>). As yet another example, the Cisco document <ref type="bibr" target="#b9">[10]</ref> reports a common OSPF routing problem related with forwarding addresses. The reachability issue was caused by a bug in Cisco IOS before Release 12.1(3). • The interactions of multiple services can be a source of configuration errors. Today's networks are complex and certain behaviors may only arise when two features interact. As a simple example, the routing protocol can compute a backup path but all packets rerouted to the backup path can be dropped by a packet      filter. Most tools typically focus on a single piece or set of functionality (e.g., routing, access control, or QoS).</p><p>• The configuration evaluation system should scale as the network size grows. Many simulators can have limited capacity as compared to the network it is simulating, making it difficult and inefficient to run tests with large demands. • On the forwarding plane, the performance depends on traffic demand pattern, FIBs, hardware capability, and software implementations. If a tool conducts performance evaluation based on a very coarse-grained model (e.g., a link is characterized by two simple numbers such as propagation delay and bandwidth), performance problems may not be revealed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Comparison with Virtualization:</head><p>One possibility to address some of the problems of static analysis or simulation is to utilize the recently proposed network virtualization techniques such as Planet-Lab slices <ref type="bibr" target="#b8">[9]</ref>, VINI <ref type="bibr" target="#b3">[4]</ref>, CABO <ref type="bibr" target="#b15">[16]</ref>, or Juniper's Logical Router feature <ref type="bibr" target="#b26">[27]</ref>.</p><p>A key difference between shadow configurations and these virtualization techniques such as PlanetLab and VINI is objective. Specifically, the main objective of the aforementioned virtualization studies is on building general, flexible experimental facilities for researchers. Thus, the focus is more on providing capabilities such as flexible (overlay) experimental topology constructions, and flexible routing and forwarding (or programmability on the network elements in general). Also, as application-oblivious experimental facilities, general virtualization would need to consider each virtual network as independent and thus a key issue is to provide isolation among them.</p><p>The objective of shadow configurations, on the other hand, is to provide an effective and easy-to-use capability for network operators in the specific but important domain of configuration testing. A configuration may have multiple virtual networks (e.g., VPNs) constructed inside according to the configuration files in the shadow configuration, but this is transparent to us. In a specific domain, general flexibility may not be necessary, and the overhead may be too high in production networks.</p><p>Conceptually, one can consider the real and the shadow configurations as two virtual networks. From this perspective, our main contribution is a novel usage of virtualization for the important domain of network configuration management. Instead of forcing users to adapt to the underlying technique (i.e., asking operators to explicitly construct virtual experiments for configuration management), we use the user interface that a network operator is already using to provide an easy-to-use tool. The most important design objective of shadow configurations is simplicity and ease of use, as this is the objective prompted in many settings (e.g., the collective plea of LISA 2006 Configuration Workshop). In addition, we enrich the domain of application of virtualization by creating two correlated virtual networks for a single task. Our novel capabilities of packet cancellation and configuration commitment provide examples where it may be beneficial to extend beyond general virtualization where virtual networks are typically considered independent.</p><p>One recent work that also applies virtualization to network configuration management is VROOM <ref type="bibr" target="#b48">[50]</ref>. Their objective is to reduce logical topology change by allowing dynamic binding between virtual routers to physical routers. This objective is different from our objective, which in one sentence is to discover issues in a new configuration before its real deployment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">CONCLUSION AND FUTURE WORK</head><p>In this paper, we presented the novel idea of shadow configurations. We developed novel techniques such as packet cancellation and shadow commitment to substantially improve the capability of configuration evaluation and management. There are many avenues for future exploration. In particular, we would like to conduct an extensive evaluation on using shadow configuration for automating configuration debugging and network diagnostics. We would also like to study their usage in carrier-grade installations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Network with an srnet being used to install a new router to support new services. The new router has its real configuration disabled during installation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Algorithm for computing representative addresses given { f ib s i }.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Figure 4: Packet cancellation and scheduling.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Scenario showing how a transient state can cause temporary congestion. White routers have not yet swapped; black routers have swapped.set, it uses the tag of current real configuration (currently C old ); otherwise, it uses the tag of the current shadow configuration (currently C new ). If a router has not received the TAG PACKET message but receives a packet with a tag, it additionally triggers the router to transit to a state as if it had received the TAG PACKET state. This indirect triggering can speed up this phase.Before moving to phase 3, the network must wait for the following two conditions to become true: (1) no routers are still marking packets using the shadow bit; (2) no packets using the shadow bit are in transit.At the second half of the Phase 2, the two conditions are satisfied. For the first condition, the operator needs to receive an acknowledgment from each router. After the first condition is true, the operator satisfies the second condition by waiting for a short time (e.g., the estimated upper bound of link latency) until all packets have been processed by the next router in their path. Phase 3: During the third phase, since no packets will be using the shadow bit, the routers can safely swap the configurations. The operator transmits a SWAP message to the routers. Each router swaps the real and shadow configuration after receiving the message, and sends an acknowledgment back to the operator. Note that the tags associated with each configuration are not swapped. Also note that ingress routers that have received the SWAP message now tag unmarked packets with C new instead of C old . Phase 4: In the last phase, the operator sends a MARK SHADOW BIT message to each router, allowing them to again mark packets using the shadow bit. To report success, each router sends an acknowledgment back to the operator.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Implementation of router supporting shadow configurations: Shaded parts are new or modified.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: System CPU utilization for varying traffic rates (300-byte packets).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: System CPU utilization for FIB updates (100 Mbps, 300byte packets).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: FIB storage overhead for topology changes in shadow configuration (US-ISP).as compared to the standard kernel. Note that the full 1 Gbps capacity is not reached due to the smaller packet sizes. Our implementation can achieve the same rates cited by<ref type="bibr" target="#b3">[4]</ref> for 1430-byte packets. FIB Storage Overhead: One concern is that the number of FIB entries will be increased. However, for most networks, the network prefixes are relatively fixed, and thus should appear in both real and shadow configurations. Accordingly, the number of entries and IP prefix lookup costs do not increase significantly. We incur a storage overhead only if the shadow and real configurations specify different next-hop behaviors, since otherwise only a single FIB entry is required.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: RTT between peers at New York and Seattle during commitment and rollback.Figure11shows the round-trip time between the peering routers at New York and Seattle. Note that there are three modes of operation at 82 ms, 92 ms, and 102 ms due to the Abilene routers asynchronously executing the swap in phase 3 of the commitment protocol. This arises because the ICMP echo request follows a different path than the reply, due to tagging at the ingress routers. The intermediate transition phase lasts for a short time, but the packet forwarding behavior during this transition phase is clean and controlled. Importantly, there are no packet losses.Our commitment protocol is executed over serial consoles to each router. We are currently developing a protocol to access the routers' configuration terminals using both the shadow and real configurations such that the protocol is resistant to misconfiguration in one of the two configurations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: RTT between peers at New York and Seattle during OSPF link weight change.We immediately notice in Figure12that using the shadow configuration avoids the reconvergence process. Under manual configuration, the round-trip time between the peer routers at Seattle and New York fluctuate between 83 ms and 135 ms before settling on the converged value of 80 ms. Using shadow configurations provides a quick and smooth transition since convergence takes place in the shadow configuration prior to commitment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Delay variation for real transit traffic (Seattle→Chicago).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: RTT in real configuration (Salt Lake City→Atlanta).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 15 :</head><label>15</label><figDesc>Figure 15: Loss rate for streams (Salt Lake City server).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 16 :</head><label>16</label><figDesc>Figure 16: Stream throughput (Houston→Chicago).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 17 :</head><label>17</label><figDesc>Figure 17: Delay variation CDF (illustrative topology).filter. Most tools typically focus on a single piece or set of functionality (e.g., routing, access control, or QoS).• The configuration evaluation system should scale as the network size grows. Many simulators can have limited capacity as compared to the network it is simulating, making it difficult and inefficient to run tests with large demands. • On the forwarding plane, the performance depends on traffic demand pattern, FIBs, hardware capability, and software implementations. If a tool conducts performance evaluation based on a very coarse-grained model (e.g., a link is characterized by two simple numbers such as propagation delay and bandwidth), performance problems may not be revealed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>sorted rep addr for f ib s</figDesc><table><row><cell>04.</cell><cell>s i do A i ← A i ∪ {min{e.addr_range}}</cell></row><row><cell>05.</cell><cell>if max{e.addr_range} = 222.255.255.255 then</cell></row><row><cell>06.</cell><cell>A i ← A i ∪ {1 + max{e.addr_range}}</cell></row><row><cell>07.</cell><cell>endif</cell></row><row><cell cols="2">08. endfor</cell></row><row><cell cols="2">09. endfor</cell></row><row><cell cols="2">10. // Merge rep addr into single sorted list</cell></row><row><cell cols="2">11. A ← priority_queue_merge({A i } i ) 12. return A</cell></row></table><note><p>i 03. foreach entry e in f ib</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 :</head><label>1</label><figDesc><ref type="bibr" target="#b2">3</ref> Ghz PCs with 1 Gbps and 100 Mbps Ethernet links. We Network configurations used. take additional steps to load configuration data into our emulation of the Abilene backbone. Configuration commands are translated to both XORP and Quagga syntax. Then BGP routes from Abilene's July 2007 BGP RIB dumps are injected as static routes at virtual egress points, dummy0 interfaces, at the appropriate routers.</figDesc><table><row><cell cols="4">Network #Nodes #Directed Links Syntax</cell></row><row><cell>Abilene</cell><cell>9</cell><cell>26</cell><cell>Juniper</cell></row><row><cell>US-ISP</cell><cell>-</cell><cell>-</cell><cell>Cisco</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 2 : FIB storage overhead (Abilene). Table</head><label>2</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 3 : New service testing experiment setup. Setup:</head><label>3</label><figDesc>In this scenario, a network operator is testing a streaming video application under a new set of OSPF link weights. Our setup is shown in Table</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">ACKNOWLEDGMENTS</head><p>Richard Alimi and Y. Richard Yang were supported in part by grants from the U.S. NSF. We would like to thank Yuan Dong and Ehab Al-Shaer for greatly beneficial initial discussions. The main algorithm of FIB analysis was contributed by Hao Wang. He has also made many other key observations. We are also grateful to Jim Aspnes, Matthew Caesar, Charles Kalmanek, Karthik Lakshminarayanan, Erran Li, Jennifer Rexford, Zhong Shao, Avi Silberschatz, and Xiaowei Yang for valuable suggestions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Routerfarm: Towards a dynamic, manageable network edge</title>
		<author>
			<persName><forename type="first">M</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bailey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pastor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sebos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Der Merwe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yates</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM INM</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Large scale Linux configuration with LCFG</title>
		<author>
			<persName><forename type="first">P</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Scobie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ALS</title>
		<meeting>of ALS<address><addrLine>Berkeley, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Conman: A step towards network manageability</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ballani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Francis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<meeting><address><addrLine>Kyoto, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-08">Aug. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">In VINI veritas: Realistic and controlled network experimentation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bavier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Feamster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<meeting><address><addrLine>Pisa, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-09">Sept. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A case for an Internet health monitoring system</title>
		<author>
			<persName><forename type="first">M</forename><surname>Caesar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Subramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HotDep</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<ptr target="http://www.caida.org/" />
		<title level="m">CAIDA: Cooporative association for Internet data analysis</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Towards automated network management: Network operations using dynamic views</title>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Van Der Merwe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM INM</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Analysis of point-to-point packet delay in an operational network</title>
		<author>
			<persName><forename type="first">B.-Y</forename><surname>Choi1</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Moon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z.-L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Papagiannaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Diot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM &apos;04</title>
		<meeting>IEEE INFOCOM &apos;04<address><addrLine>Hong Kong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-04">Apr. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Planetlab: an overlay testbed for broad-coverage services</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM CCR</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="3" to="12" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Common routing problem with OSPF forwarding address</title>
		<author>
			<persName><forename type="first">Cisco</forename><surname>Systems</surname></persName>
		</author>
		<ptr target="http://www.cisco.com/warp/public/104/10.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">Cisco</forename><surname>Systems</surname></persName>
		</author>
		<ptr target="http://www.cisco.com/application/pdf/en/us/guest/netsol/ns522/c2072/" />
		<title level="m">Network solutions integrated test environment: Delivering on the promise of innovation</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>cdccont_0900aecd80458f98.pdf</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Internet performance modeling: the state of the art at the turn of the century</title>
		<author>
			<persName><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lindemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Performance Evaluation</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="91" to="108" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Netdiagnoser: Troubleshooting network unreachabilities using end-to-end probes and routing data</title>
		<author>
			<persName><forename type="first">A</forename><surname>Dhamdhere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Teixeira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dovrolis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Diot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of CoNEXT&apos;07</title>
		<imprint>
			<date type="published" when="2007-12">Dec. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Configuration management at massive scale: System design and experience</title>
		<author>
			<persName><forename type="first">W</forename><surname>Enck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mcdaniel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Subhabrata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sebos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Spoerel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><surname>Aiello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX</title>
		<meeting><address><addrLine>Santa Clara, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-06">June 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Detecting BGP configuration faults with static analysis</title>
		<author>
			<persName><forename type="first">N</forename><surname>Feamster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2005-05">May 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">How to lease the Internet in your spare time</title>
		<author>
			<persName><forename type="first">N</forename><surname>Feamster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM CCR</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="61" to="64" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Netdb: IP network configuration debugger/database</title>
		<author>
			<persName><forename type="first">A</forename><surname>Feldmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-07">July 1999</date>
		</imprint>
		<respStmt>
			<orgName>AT&amp;T Research</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">IP network configuration for intradomain traffic engineering</title>
		<author>
			<persName><forename type="first">A</forename><surname>Feldmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network Magazine</title>
		<imprint>
			<biblScope unit="page" from="46" to="57" />
			<date type="published" when="2001-10">Sept./Oct. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Traffic engineering with traditional IP routing protocols</title>
		<author>
			<persName><forename type="first">B</forename><surname>Fortz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Thorup</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-10">Oct. 2002</date>
			<publisher>IEEE Communication Magazine</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Avoiding transient loops during IGP convergence in IP networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Francois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Bonaventure</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Miami, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-04">Apr. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Disruption free topology reconfiguration in OSPF networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Francois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Bonaventure</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Modeling and verification of IPSec and VPN security policies</title>
		<author>
			<persName><forename type="first">H</forename><surname>Hamed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Al-Shaer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Marrero</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE ICNP</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-11">Nov. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Designing extensible IP router software</title>
		<author>
			<persName><forename type="first">M</forename><surname>Handley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Kohler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Hodson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Radoslavov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2005-05">May 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Detection and analysis of routing loops in packet traces</title>
		<author>
			<persName><forename type="first">U</forename><surname>Hengartner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Moon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mortier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Diot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In IMW</title>
		<imprint>
			<date type="published" when="2002-11">Nov. 2002</date>
			<pubPlace>Marseille, France</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Communication-efficient online detection of network-wide anomalies</title>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Garofalakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jordan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Taft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Analysis of Internet backbone traffic and header anomalies observed</title>
		<author>
			<persName><forename type="first">W</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tafvelin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC</title>
		<imprint>
			<date type="published" when="2007-08">Aug. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Intelligent logical router service</title>
		<author>
			<persName><forename type="first">Juniper</forename><surname>Networks</surname></persName>
		</author>
		<ptr target="http://www.juniper.net/solutions/literature/white_papers/200097.pdf" />
		<imprint>
			<date type="published" when="2004-10">Oct. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Shrink: A tool for failure diagnosis in IP networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kandula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Katabi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Vasseur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MineNet</title>
		<imprint>
			<date type="published" when="2005-08">Aug. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">As the value of enterprise networks escalates, so does the need for configuration management</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Kerravala</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004-01">Jan. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Configuration management delivers business resiliency. The Yankee Group</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Kerravale</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A root cause localization model for large scale systems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kiciman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Subramanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">IP fault localization via risk modeling</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Kompella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yates</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Snoeren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<meeting><address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-05">May 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Detection and localization of network black holes</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Kompella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yates</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Snoeren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Achieving convergence-free routing using failure-carrying packets</title>
		<author>
			<persName><forename type="first">K</forename><surname>Lakshminarayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Caesar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rangan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<meeting><address><addrLine>Kyoto, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-08">Aug. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">User-level Internet path diagnosis</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mahajan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Spring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wetherall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOSP</title>
		<meeting><address><addrLine>Bolton Landing</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Routing design in operational networks: A look from the inside</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hjalmtysson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<meeting><address><addrLine>Portland, OR</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-08">Aug. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Network configuration management via model finding</title>
		<author>
			<persName><forename type="first">S</forename><surname>Narain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of LISA</title>
		<meeting>LISA</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="155" to="168" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Overview of configuration validation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Narain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LISA 2006 Configuration Workshop</title>
		<imprint>
			<date type="published" when="2006-12">Dec. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">ICP link weight assignment for operational tier-1 backbones</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bhattacharyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Taft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Diot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<date type="published" when="2007-08">Aug. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Why Internet services fail and what can be done about these?</title>
		<author>
			<persName><forename type="first">D</forename><surname>Oppenheimer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ganapathi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Patterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX USITS</title>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<ptr target="http://www.quagga.net/" />
		<title level="m">Quagga Software Routing Suite</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Using redistribution communities for interdomain traffic engineering</title>
		<author>
			<persName><forename type="first">B</forename><surname>Quoitin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Uhlig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Bonaventure</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">QoFIS&apos;02 LNCS 2511</title>
		<imprint>
			<date type="published" when="2002-10">Oct. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Combining routing and traffic data for detection of IP forwarding anomalies</title>
		<author>
			<persName><forename type="first">M</forename><surname>Roughan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Griffin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMETRICS</title>
		<meeting><address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-06">June 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Combining filtering and statistical methods for anomaly detection</title>
		<author>
			<persName><forename type="first">A</forename><surname>Soule</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Salamatian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Taft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC</title>
		<imprint>
			<date type="published" when="2005-08">Aug. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A survey of fault localization techniques in computer networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Steinder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Sethi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science of Computer Programming</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="165" to="194" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Tatman</surname></persName>
		</author>
		<ptr target="http://www.agilent.com/labs/features/2003_wp_roca.pdf" />
		<title level="m">Incorporating routing analysis into IP network management</title>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<ptr target="http://www.videolan.org/" />
		<title level="m">VideoLAN -VLC media player</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">A measurement study on the impact of routing events on end-to-end internet path performance</title>
		<author>
			<persName><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bush</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM CCR</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">VROOM: Virtual ROuters On the Move</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Der Merwe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HotNets-VI</title>
		<meeting><address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-11">Nov. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Forwarding without loops in icarus</title>
		<author>
			<persName><forename type="first">A</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wetherall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE OEPNARCH</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">An integrated experimental environment for distributed systems and networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lepreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stoller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ricci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Guruprasad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Newbold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hibler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Barb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Joglekar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-12">Dec. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">On static reachability analysis of IP networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hjalmtysson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Miami, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-04">Apr. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Yesterday, my program worked. today, it does not</title>
		<author>
			<persName><forename type="first">A</forename><surname>Zeller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ESEC / SIGSOFT FSE</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="253" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Measurement-based analysis, modeling, and synthesis of the internet delay space</title>
		<author>
			<persName><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S E</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nandi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Riedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC</title>
		<imprint>
			<date type="published" when="2006-08">Aug. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Avoiding transient loops through interface-specific forwarding</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IWQoS</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
