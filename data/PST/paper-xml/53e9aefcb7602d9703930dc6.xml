<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Routing for Network Capacity Maximization in Energy-constrained Ad-hoc Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Koushik</forename><surname>Kar</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">ECSE Department</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Murali</forename><surname>Kodialam</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Bell Labs ‡ ECE Department Rensselaer Polytechnic Institute Lucent Technologies</orgName>
								<orgName type="institution">University of Maryland Troy</orgName>
								<address>
									<postCode>12180, 07733, 20742</postCode>
									<settlement>Holmdel, College Park</settlement>
									<region>NY, NJ, MD</region>
									<country>USA, USA, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">T</forename><forename type="middle">V</forename><surname>Lakshman</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Bell Labs ‡ ECE Department Rensselaer Polytechnic Institute Lucent Technologies</orgName>
								<orgName type="institution">University of Maryland Troy</orgName>
								<address>
									<postCode>12180, 07733, 20742</postCode>
									<settlement>Holmdel, College Park</settlement>
									<region>NY, NJ, MD</region>
									<country>USA, USA, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Leandros</forename><surname>Tassiulas</surname></persName>
						</author>
						<title level="a" type="main">Routing for Network Capacity Maximization in Energy-constrained Ad-hoc Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">81DE079A02F9E079CDF6ED73F4F7E565</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We present a new algorithm for routing of messages in ad-hoc networks where the nodes are energy-constrained. The routing objective is to maximize the total number of messages that can be successfully sent over the network without knowing any information regarding future message arrivals or message generation rates. From a theoretical perspective, we show that if admission control of messages is permitted, then the worst-case performance of our algorithm is within a factor of O(log(network size)) of the best achievable solution. In other words, our algorithm achieves a logarithmic competitive ratio. Our approach provides sound theoretical backing for several observations that have been made by previous researchers. From a practical perspective, we show by extensive simulations that the performance of the algorithm is very good even in the absence of admission control (the admission control being necessary only to prove the competitive ratio result), and that it also performs better than previously proposed algorithms for other suggested metrics such as network lifetime maximization. Our algorithm uses a single shortest path computation, and is amenable to efficient implementation. We also evaluate by simulations the performance impact of inexact knowledge of residual battery energy, and the impact of energy drain due to dissemination of residual energy information.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>With the rapid increase in low cost sensor devices, there is an increased interest in the deployment of ad-hoc wireless sensor networks. This is reflected in the recent spurt of research interest in this area <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b3">[4]</ref>. Low cost sensors typically have low battery life and therefore conserving battery energy is a prime consideration in these networks. Since some battery energy is depleted for each message transmission, it is necessary to use energy aware and energy conserving routing algorithms. This paper presents a new distributed algorithm for on-line message routing in energy-constrained wireless ad-hoc networks.</p><p>Our routing objective is to maximize the total number of messages successfully carried by the network (hereafter referred to merely as network capacity) without making any assumptions on future message arrivals. This is equivalent to minimizing the number of messages that cannot be routed for an (unknown) sequence of message routing requests. This is different from a previously studied objective <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b3">[4]</ref> of maximizing the network lifetime (i.e., the time before the first message loss). Despite the differing objective, the algorithm developed in this paper outperforms the existing algorithms even with respect to optimizing the network lifetime.</p><p>The on-line algorithm we develop is a simple algorithm using only one shortest path computation. We show that if admission control of messages is permitted, our algorithm achieves a competitive ratio <ref type="bibr" target="#b7">[8]</ref> that is logarithmic in the number of network nodes, i.e., its performance without knowledge of future message arrivals is in the worst case within a logarithmic factor of the best performance achievable by an off-line algorithm with complete information about messages to be transmitted. Admission control is necessary only for obtaining the competitiveness result. In practice, the algorithm works very well even without admission control, as can be seen from the simulation results. We use knowledge of residual battery energy at each node, and also consider the general setting where energy consumption for message transmission is dependent on the distance to the neighbor. Though the assumption on the knowledge of residual energies is used for proving the theoretical worst-case performance bounds, simulations show that the algorithm works well even with inexact knowledge of node residual energies.</p><p>Our approach uses ideas developed for competitive connection routing in wired networks <ref type="bibr" target="#b4">[5]</ref>. However, the routing model for energy aware routing in wireless ad-hoc networks is different from that for connection routing in wired networks. In wired networks the constraint is on the consumption of linkbandwidth. In contrast, the routing problem in wireless ad-hoc networks is constrained by the battery energy of each node. It cannot be transformed to a link capacity constraint problem by node splitting since the energy expended in transmitting on different links can be different. However, as we show in this paper, the ideas used for wired connection routing can still be nicely applied to develop a new algorithm for energy aware capacity maximizing routing in wireless ad-hoc networks and to prove its competitive ratio.</p><p>As in <ref type="bibr" target="#b3">[4]</ref>, our algorithm ideally requires knowledge of the energy level of all other network nodes. This may become a problem in large networks. For this case, we show that periodic, geographically limited broadcasts of the energy level is sufficient to ensure that our algorithm's performance with partial energy information is close to that of the ideal case with complete energy information. The energy consumption for these neighborhood broadcasts is accounted for when</p><formula xml:id="formula_0">0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</formula><p>computing the network energy consumption in performance comparisons. An alternate use of the algorithm is to combine it with the zone-based approach developed in <ref type="bibr" target="#b3">[4]</ref>. Note that we do not make any assumptions regarding message arrivals, unlike <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b3">[4]</ref> where it is assumed that the message arrival rates between different source-destination pairs have a regular pattern. Moreover, our algorithm is also computationally much simpler than existing algorithms. A detailed comparison of our approach with the previous approaches is provided in Section II.</p><p>The paper is organized as follows. The next section discusses related work. In Section III, we describe the energyconstrained routing problem formally, and outline our approach and objectives. In Section IV, we describe a capacitycompetitive on-line algorithm for the energy-constrained routing problem. Section VI evaluates the performance of our algorithm on the basis of simulation results. We conclude in Section VII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>There has been tremendous research interest in ad-hoc networks in the last few years. The early literature on adhoc networking primarily addressed the design of efficient routing algorithms but without optimization of the energy required to send messages. After the work of Singh et al. <ref type="bibr" target="#b9">[10]</ref>, there has been a growing literature on energy aware routing in ad-hoc wireless networks. Energy aware routing is particularly important for sensor networks where nodes often have a limited amount of battery energy.</p><p>Routing with the objective of maximizing the network lifetime has been addressed in <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b3">[4]</ref>. In <ref type="bibr" target="#b0">[1]</ref>, the authors consider the scenario where messages are generated at the sensor nodes at a known fixed rate, and formulate the lifetime maximization problem as a linear program. The authors propose some distributed heuristics that can be used to solve this linear program approximately. In <ref type="bibr" target="#b1">[2]</ref>, the authors observe that the structure of the linear program resemble that of a maximum concurrent flow problem, and use this fact to develop an algorithm that can solve the problem to any arbitrary degree of accuracy. The algorithms in <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref> can be used to determine how the traffic (generated at a constant rate) should be split amongst the different routes so as to maximize the lifetime of the network. Therefore in this case, the ad-hoc sensor network can solve the lifetime maximizing traffic splitting problem once at the beginning, and use the computed routes thereafter without any further reoptimization. Thus in the scenario considered in <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>, since the traffic generation rates are assumed to be constant and known, the network can solve the routing problem in an off-line manner.</p><p>Our work differs from <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref> in several aspects. Most importantly, we do not assume that the message generation rates are known, or that they are constant. In a vast majority of applications involving ad-hoc networks, the message generation rates can vary with time, and the message generation process is highly unpredictable. In other words, there is no a priori information (deterministic or statistical) on the future message generation (arrival) process. Whereas the approach in <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref> cannot be used in that case, the algorithm proposed in this paper is very well suited for such a scenario. Also note that in this paper we are interested in optimizing the network capacity, and not the network lifetime as considered in <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>.</p><p>This paper is motivated by the network lifetime competitive ratio results in <ref type="bibr" target="#b3">[4]</ref> for the max-min zP min algorithm developed by the authors. In <ref type="bibr" target="#b3">[4]</ref>, the authors propose an on-line message routing algorithm (which does not need to know the message generation rates) for the network lifetime maximization problem, and provide a competitive analysis for their algorithm. However, this approach has two drawbacks. Firstly, in the analysis, the authors assume that the messages are generated at a constant rate. (It is assumed that messages are generated cyclically, or in each interval of time the set of messages are the same.) Secondly, the competitive bound depends on values that are not given as input to the problem, and it is not clear how good the bound is. (For example, the competitive bound depends on the amount of residual energy left over in the network as well as the periodicity of the messages.) Further, the algorithm involves several shortest path computation invocations.</p><p>The capacity maximization algorithm developed in this paper uses only one shortest path computation, and the competitive ratio depends only on the input parameters to the problem. Further, from the experimental results, it seems to perform better than max-min zP min even for the lifetime maximization objective.</p><p>The problem of minimizing power consumption during idle times is addressed in <ref type="bibr" target="#b2">[3]</ref>. Topology control of ad-hoc networks by adjustment of node power levels has been considered in <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b8">[9]</ref>. We refer the reader to <ref type="bibr" target="#b3">[4]</ref> for an excellent survey of the work in this area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. THE ON-LINE ENERGY-CONSTRAINED ROUTING PROBLEM</head><p>In this section, we discuss the on-line routing problem in energy-constrained wireless networks. We first describe the system model, and then outline our routing objectives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. System Model</head><p>A node in an ad-hoc sensor network can either be in idle state or in a transmit/receive mode. In this paper, we consider the energy (power) consumed at each node when it is in a transmit/receive mode. The ad-hoc network can be modeled as a graph G = (N, A) where N represents the set of nodes in the network and A the set of edges. We assume that there are n nodes and m edges in the graph. The energy consumed for transmitting a unit message along link (i, j) ∈ A is represented by e ij . Node i ∈ N is assumed to have an initial energy reserve of E i . Each message that has to be carried by the network has a source node that originates the message, and a destination node which the message has to reach through the multi-hop network. Let s k and d k represent the source and destination nodes for message k. Let l k represent the length of message k. Therefore if message k is transmitted at node i along link (i, j) then the energy at node i decreases by the</p><formula xml:id="formula_1">0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003 quantity l k e ij .</formula><p>Each message is assumed to represent some unsplittable information and therefore has to be routed along a single path. In other words, a given message cannot be split across multiple paths. We assume that the messages are of different lengths. Though not necessary for the analysis, the energy e ij that is consumed per message on link (i, j) ∈ A is a usually proportional to some power of the distance between nodes i and j. <ref type="foot" target="#foot_0">1</ref> All messages that enter the system have to be routed at the time they arrive into the system. We do not assume to know any information about future arrivals to the network. We do not assume constant rates or any periodicity of the message pattern.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Routing Objectives</head><p>We want to maximize the capacity of the network. In this paper, network capacity is defined to be the total amount of message data that is successfully carried by the network. If the entire message sequence is known ahead of time, then it is possible to develop an off-line routing algorithm to maximize the amount of data that is carried by the network. We use this off-line algorithm only as a benchmark to measure the performance of our routing algorithm for which messages arrive only one at a time. We would like our on-line algorithm (which does not have any knowledge of future message arrivals) to perform well compared to the off-line algorithm for all message arrival patterns. The competitive ratio of an on-line algorithm is defined to be the worst case ratio of the capacity of the off-line algorithm to the capacity of the online algorithm over all sets of inputs. Ideally we would like the competitive ratio to be a small constant. However, as shown in <ref type="bibr" target="#b3">[4]</ref> and <ref type="bibr" target="#b4">[5]</ref>, this is not possible in general. In fact, if there is no control on the size of the messages then the competitive ratio can be as bad as O(n). Intuitively, the on-line algorithm can be made to perform arbitrarily bad by an adversary who injects messages into the system if</p><p>• The size of the messages can be arbitrary.</p><p>• The algorithm is not allowed to perform admission control (i.e., the algorithm is not allowed to reject any message as long as there is a path available to carry it, no matter how much network resources is consumed by the message). Therefore, to obtain the competitive ratio result, we permit admission control, i.e., the algorithm can occasionally reject messages that are determined to be too detrimental to the network's residual capacity. Fortunately, it turns out that neither of these assumptions are critical in practice. We show that even if the algorithm is run without the admission control option, its performance is excellent. Further from the experiments it can be seen that it outperforms the existing algorithms both with respect to network capacity as well as network lifetime.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. A CAPACITY-COMPETITIVE ALGORITHM</head><p>In this section, we describe our on-line routing algorithm (CMAX), and derive its competitive ratio.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The Algorithm</head><p>We first define some notation needed to describe the algorithm. Let messages be indexed in the order in which they are generated. Let l k denote the length of message k. Let s k and d k represent the source and the destination nodes, respectively, of the message k. Let E i (k) denote the residual energy of node i at the time when message k is generated (but before it is routed). Note that according to our notation, E i (1) = E i . Let</p><formula xml:id="formula_2">α i (k) = 1 - E i (k) E i .</formula><p>Therefore α i (k) is the fraction of the energy of node i that is used at the time message k arrives. We will refer to the quantity α i as the energy utilization of node i. In the algorithm stated below, λ and σ are constants, chosen appropriately (we will discuss the choice of these constants later in the paper).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm CMAX</head><p>Step Note that the computational complexity of the algorithm is determined by the shortest path computation (Step 3) and is O(m + n log n). In contrast, the algorithm in <ref type="bibr" target="#b3">[4]</ref> involves performing as many as log m shortest path computations.</p><p>According to the algorithm stated above, a message is routed along the shortest path, based on the weights w ij (computed in Step 2), provided the shortest path length is not "too high". Note that the weight of an link (i, j), w ij , increases with an increase in e ij , the energy expended in traversing link (i, j). Moreover, w ij increases as the energy utilization of the transmitting node i, α i , increases. This means that the algorithm tries to avoid links which require very high energy for transmission, and nodes where the residual energy fraction is low. The algorithms in <ref type="bibr" target="#b0">[1]</ref> and <ref type="bibr" target="#b3">[4]</ref> are also based on a similar intuition. The algorithm in <ref type="bibr" target="#b3">[4]</ref> first determines the paths that consume minimum energy, and the path that maximizes minimum residual energy, independently. Then the algorithm, through a series of shortest path computations, determines a path that is good with respect to both these criteria. In our case, the weight function defined above captures both these effects and provides a provably good competitive ratio. The exponential dependence of the weight function on the energy utilization suggests that this plays a dominant role in the routing. Note that if the shortest path length is greater that a specified threshold σ, the message is rejected, even if there is a path with enough energy to accommodate it. Since the path length is an increasing function of time, this implies that for any particular source-destination pair, all messages 0-7803-7753-2/03/$17.00 (C) 2003 IEEE will be accepted till a certain instant of time, after which all messages will be rejected. As stated earlier, without this option to reject, an adversary can inject messages that consume too much resources destroying the competitive ratio of the algorithm. However, this is not of practical consequence when messages are generated at random or by an adversary who does not know the routing policy. In practical situations, rejecting a message when sufficient energy is available is usually unacceptable. Experimental results show that although setting σ to its theoretically determined value might result in improved capacity performance, setting the value of σ to infinity (i.e., the only reason for rejecting a message is insufficient energy) results is excellent performance both with respect to the capacity as well as the lifetime of the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Competitive Bound</head><p>We now outline the competitive bound of CMAX. We define e max = max (i,j)∈A e ij , and e min = min (i,j)∈A e ij . Therefore, e max and e min are respectively the maximum and minimum energies expended by a message of unit length when traversing some link in the network. Let ρ = e max /e min , and let L(k) denote the total length of messages successfully routed by our algorithm till the arrival of message k. Let L opt (k) be the total length of messages successfully routed by the optimal algorithm till the arrival of message k. We now formally state the competitiveness result for our algorithm.</p><p>Theorem 1: Let λ = 2(nρ + 1) and σ = ne max . For all messages k, let</p><formula xml:id="formula_3">l k ≤ min i∈N E i e max log λ<label>(1)</label></formula><p>Then</p><formula xml:id="formula_4">L(k) L opt (k) ≥ 1 1 + 2 log λ ∀k.</formula><p>The proof of this result is stated in Appendix I. The above result implies that the competitive ratio of CMAX is O(log nρ).</p><p>In the derivation of the result, we assume that all messages may not be of the same length. If all messages are of the same length, then the algorithm also provides a competitive ratio for the number of messages accepted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. IMPLEMENTATION ISSUES</head><p>For routing messages, the algorithm CMAX has to know the topology of the network and the current energy utilization at all nodes in the network. The topology of the network includes all the nodes and links in the network as well as the energy used to transmit a unit message on each link in the network. The network topology can be learned by a node at the time it joins a network. Typically, the network topology is relatively static, and any changes in the topolgy (due to joining/leaving of nodes, nodes running out of energy etc.) can be disseminated throughout the network. However, the energy utilization of the nodes changes frequently. In small networks, disseminating this information though the network may not be expensive. However, frequent dissemination of global energy information may not be feasible in larger networks. In such cases, we can use one of the following two approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Zone Based Approach</head><p>In <ref type="bibr" target="#b3">[4]</ref>, the authors use a zone based approach for routing in large networks. This approach is based on aggregating information in zones and routing the message from one zone to another. Note that the information required by CMAX and max -min zP min are identical. Therefore one can use the same zone based approach to route with CMAX. In fact we can use Dijkstra's algorithm to compute the route instead of Bellman-Ford that has to be used in the case of approximate distributed version of max -min zP min .</p><p>In this paper, we use an alternate approach based on limited flooding.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Limited Flooding Approach</head><p>Limited flooding approach requires that the algorithm be robust to imprecise energy information. Our experimental results show that this is indeed the case for the CMAX algorithm. The main idea in the limited flooding approach is to transform CMAX into a hop-by-hop routing algorithm like OSPF, which we call D-CMAX. In a hop-by-hop implementation, each node computes the shortest path to the destination of the message and forwards the message to the next hop node on this shortest path. This process is repeated until the message reaches the destination. Hop-by-hop routing algorithms are typically robust to errors in link weight information of distant links. We take advantage of this fact in the limited flooding approach. In this approach, each node periodically broadcasts its residual energy information to all nodes that are within a certain distance of that node. This is done by broadcasting with limited power so that it will be "heard" only by all nodes that are within some limited distance of the transmitting node. We define a (r, γ) local broadcast mechanism to be one in which a node i ∈ N transmits its energy level information to all nodes within a distance of r from itself, and the broadcast is done when its current energy level becomes less by a factor of γ from the last local broadcast energy value. While computing the next-hop node using the shortest path algorithm, a node i assumes that the residual energy at any other node j is the same as the value last broadcast by j. If node i is outside the broadcast radius of node j (i.e., i cannot hear node j's broadcast), then i just assumes that the energy of node j is at its initial level. For the experimental results presented, we assume that the values of r and γ are the same for all nodes. We also performed several experiments where the value of r and γ are node-dependent, and the results were similar to the ones shown below. Theoretically, due to the asymmetry of information at different nodes, there can be loops in the routing paths. Loop avoidance can be done by finding the shortest path subject to the constraint that forward progress is made at each step. This can be achieved in several ways. As an example, consider the case where each node is associated with a GPS device, and in addition to knowing the topology of the network, each node also knows the GPS location of all nodes in the network. The hop-by-hop routing algorithm can then be modified so that the shortest path is determined such that the next hop of the path is closer to the destination. In all 0-7803-7753-2/03/$17.00 (C) 2003 IEEE the experiments we assumed that the node energy decreases whenever</p><p>• The node forwards a message.</p><p>• The node performs a local broadcast of its energy information.</p><p>The cost of performing a local broadcast is determined in the same fashion as determining the energy consumed by transmission over a link in the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. PERFORMANCE EVALUATION</head><p>In this section, we evaluate the performance of our algorithm through simulations. First we consider the case where each node knows the instantaneous energy level of all nodes in the network. Next we study the case where the nodes have information about the energy levels of only the nodes in its immediate neighborhood.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Effect of λ and σ</head><p>In this section, we study the effect of the parameters λ and σ on the performance of CMAX. We consider a network of 20 nodes located randomly in a 10×10 region. The initial energy of each node is 30 units. We assume that all messages are of unit length, and are generated randomly between all source-destination pairs. The energy required for transmitting a message along an edge (i, j) is max(0.001, 0.001 * d 3 ij ), where d ij is the distance between nodes i and j. This is similar to the kind of networks studied in <ref type="bibr" target="#b3">[4]</ref>. We assume that each node can directly send a message to every other node, and so the underlying graph is complete. We also assume that the instantaneous energy level of every node is known to all nodes (the scenario where the energy levels of nodes are not known precisely is addressed later).</p><p>Based on Theorem 1, the following (loose) upper bounds on λ and σ can be easily computed: σ ≤ 70, λ ≤ 140, 000. Setting σ &lt; ∞ implies that messages may be rejected even if there is sufficient energy available to route the message. As mentioned earlier, this is needed to obtain the competitive ratio bound. We generate 100,000 messages in the network and Figure <ref type="figure" target="#fig_0">1</ref> shows the number of messages out of this 100,000 that are successfully routed as λ is varied, for two cases:</p><formula xml:id="formula_5">• σ = 70. • σ = ∞</formula><p>The case of σ = ∞ represents the case where there is no admission control, which is likely to be the case in practice. (It is unlikely that messages will be dropped if sufficient energy is available.) The figure shows that with σ = 70, the number of accepted messages increase with increasing λ, reaches a peak somewhere between λ = 10, 000 and λ = 100, 000, and then starts decreasing with further increase in λ. With σ = ∞, the network capacity is relatively insensitive to λ as long as λ is large enough. Since this is probably the case that will be used in practice, the rest of the plots are shown for σ = ∞, and a sufficiently large λ. Therefore, messages are rejected only due to insufficient energy. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Comparison with existing algorithms</head><p>Now we compare our algorithm with some existing algorithms in terms of the achieved network capacity and the achieved network lifetime. We compare the performance of the following algorithms:</p><p>1) Algorithm pmin, where a message is routed on a path that consumes minimum total energy, 2) Algorithm max-min, where a message is routed along a path such that minimum residual energy fraction of nodes on that path is the maximum amongst all paths, 3) max-min zP min , an algorithm proposed in <ref type="bibr" target="#b3">[4]</ref>, where a message is routed on the path with the maximum minimum residual energy fraction amongst all paths that consume at most z times the energy consumed in routing over the minimum energy path. For the last algorithm, we experimented with different values of z and observed that the capacity is maximized when z = 2 (the authors in <ref type="bibr" target="#b3">[4]</ref> also report similar observations). This is the value we use in the rest of the paper.</p><p>First we compare the performance of the algorithms over 20 trials with respect to</p><p>• Maximum capacity of the network, i.e., the total number of messages successfully routed till no more messages can be routed. (Figure <ref type="figure">2</ref>). • Lifetime of the network, i.e., the number of accepted messages until the first rejection (Figure <ref type="figure" target="#fig_1">3</ref>). Note that in both these measures CMAX outperforms the other algorithms.</p><p>Figure <ref type="figure" target="#fig_2">4</ref> shows the number of rejects as the number of messages increases, for a single trial (the results for other trials were similar). Note that the performance of CMAX is better than all other algorithms throughout the trial. This figure demonstrates that our algorithm performs better than the other algorithms in terms of network capacity, measured till any point in time.  Next we compare the performance of CMAX to its distributed version, D-CMAX. Recall that D-CMAX works with imprecise information and local broadcasts. Recall that each local broadcast is characterized by (r, γ) where r is the local broadcast radius and γ determines the frequency of broadcasting. We assume that all arriving messages are of unit length, and the length the local broadcast message is 0.1 units. The local broadcast message contains the node id and current residual energy of the node. Thus if the local broadcast radius is r, then the cost of doing local broadcast is given by 0.1 × 0.001 × r 3 . The first term (0.1) is the length of the local broadcast message. The rest of the formula represents the energy required to send a message over a distance r.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Effect of broadcast distance</head><p>We first study the effect of varying the broadcast distance on the performance of D-CMAX. Figure <ref type="figure" target="#fig_3">5</ref> shows how the network capacity varies as a function of the broadcast radius r.</p><p>The experiment is conducted for 50 nodes located randomly in 25×25 region. The energy model is the same as in Section VI-A. Figure <ref type="figure" target="#fig_3">5</ref> shows the the number of accepted messages (out of 20000 message arrivals) as the broadcast distance of all nodes is varied from 0.2 units to 10 units. In these experiments, λ = 100, and γ = 1.0 (i.e., a node broadcasts its energy information whenever its residual energy changes). All nodes have an initial energy of 32 units. The plot shows that the performance improves initially with increase in the broadcast distance. Increasing the broadcast distance allows more nodes to know about the correct energy level of a node, and therefore the algorithm usually takes better routing decisions. However, each broadcast consumes some energy at the broadcasting node which could have been used for transmitting messages arriving in future. Broadcasting over a large distance consumes a lot of energy and could drain the battery at the transmitter considerably, thus adversely affecting performance. Thus, in Figure <ref type="figure" target="#fig_3">5</ref>, we see that when the broadcast distance becomes higher than a certain threshold, the achieved capacity diminishes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Effect of broadcast frequency</head><p>Figure <ref type="figure" target="#fig_5">6</ref> studies the effect of broadcast frequency on achieved capacity. The network and the simulation conditions are similar to those described in the previous subsection. The broadcast frequency parameter γ determines when a node broadcasts its energy level information. For example, if γ = 0.8, then a node broadcasts its energy level information only when its energy level drops to 0. 1. In the plots, the broadcast radius, r, is set to 5 units. For low values of γ, the broadcasts happen very infrequently, and so the nodes have to do the routing based on out-of-date information. Therefore, the routing decisions become better with increasing γ. However, as γ approaches 1, the number of broadcast messages become very high, which consume a lot of energy, thus causing degradation in performance.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Comparison of CMAX and D-CMAX</head><p>In this section we show that by an appropriate choice of the broadcast distance and broadcast frequency, D-CMAX, the distributed version of the algorithm CMAX, can achieve performance close to CMAX. Figure <ref type="figure" target="#fig_6">7</ref> shows the number of messages routed successfully by the two algorithms D-CMAX and CMAX, for 20 different trials. Each different trial corresponds to a different network and a different sequence of message arrivals. The networks are randomly generated with parameters similar to those described in previous subsections. The parameter λ is set to 100, the broadcast distance is set to 5 units, and the broadcast frequency parameter (γ) is set to 0.5. From the plot we see that as expected, CMAX in general performs better than D-CMAX. However, on an average, D-CMAX performs fairly closely. In fact, averaging over the 20 different trials shows that D-CMAX does only about 8% worse than CMAX. We also performed experiments on large networks with 1000 nodes in a 10 × 10 square. In all our experiments, we observed that the performance of D-CMAX goes down by only 8% to 15% compared to CMAX. The performance of the algorithm appears to scale well as the number of nodes in the network increases. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUDING REMARKS</head><p>We presented a new algorithm for energy-aware on-line routing of messages in wireless ad-hoc networks. The algorithm uses only a single shortest path computation, and can be implemented in a distributed manner. Without making any assumptions regarding future message arrivals, we proved a logarithmic competitive ratio for the case where the routing objective is network capacity maximization. Obtaining this competitive ratio result needs the network to allow admission control. However, we showed by simulations that admission control is not needed to ensure good performance in practice. We also showed by simulations that the algorithm performs significantly better than previously proposed algorithms for both capacity maximization and lifetime maximization routing objectives. Furthermore, the algorithm is robust to imprecision in energy information and works well in a limited information flooding scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX I: PROOF OF THEOREM 1</head><p>The competitive analysis is along the same lines as the competitive analysis presented in <ref type="bibr" target="#b4">[5]</ref>.</p><formula xml:id="formula_6">0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</formula><p>Associate a cost c i with each node i ∈ N . The cost c i before the arrival of the message k defined as</p><formula xml:id="formula_7">c i (k) = E i (λ αi(k) -1)<label>(2)</label></formula><p>In the following, let S(k) be the set of messages successfully routed by our algorithm till the arrival of message k.</p><p>The proof is done in three steps. First we lower-bound the total length of messages routed by CMAX in terms of the node costs defined above.</p><p>Lemma 2:</p><formula xml:id="formula_8">i∈N c i (k) ≤ 2ne max L(k) log λ.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>Consider any k ∈ S(k). Then, by (2), for any i ∈ N ,</p><formula xml:id="formula_9">c i (k + 1) -c i (k ) ≤ E i λ αi(k +1) -λ αi(k ) = E i λ αi(k ) λ ((Ei(k )-Ei(k +1))/Ei) -1 = E i λ αi(k ) λ (l k eij /Ei) -1 = E i λ αi(k ) 2 (l k eij log(λ)/Ei) -1<label>(3)</label></formula><p>Note the base of the logarithm in (3) is 2. From assumption in (1), (l k e ij log λ/E i ) ≤ 1. Also note that 2 x -1 ≤ x for 0 ≤ x ≤ 1. Therefore, from (3) we have</p><formula xml:id="formula_10">c i (k + 1) -c i (k ) ≤ λ αi(k ) l k e ij log(λ)<label>(4)</label></formula><p>Let P (k ) be the path over which the message k was routed. Note that since message k was accepted by CMAX therefore, (i,j)∈P (k )</p><p>e ij (λ αi(k ) -1) ≤ σ = ne max <ref type="bibr" target="#b4">(5)</ref> Then summing the terms in (4) over all the nodes i ∈ N , we get In the next lemma we show that the sum of the lengths of the shortest paths of the rejected messages is lower bounded by ne max . This is needed to prove Lemma 4. Let T (k) be the set of messages successfully routed by the optimal off-line algorithm but rejected by CMAX, until the arrival of message k.</p><p>Lemma 3: For all k ∈ T (k), (i,j)∈P (k )</p><p>e ij (λ αi(k ) -1) &gt; ne max</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>Note that a message can be rejected by our algorithm because of two reasons: 1) If there is no path with sufficient energy to route the message (see Step 1 of our algorithm). 2) If the shortest path length is too high (Step 4 of our algorithm). Clearly, the above lemma holds if message k is rejected in Step 4 of CMAX due to the choice of σ. Now let us assume that message k is rejected in Step 1 of CMAX. Let P opt (k ) be the path over which the optimal algorithm routes message k . Since the message is rejected by our algorithm, there exists an arc (i , j ) ∈ P opt (k ) such that E i (k ) &lt; l k e i j . Therefore, α i (k ) &gt; 1 -(l k e ij /E i ) ≥ 1 -(1/ log λ) (from (1)), and therefore, (i,j)∈Popt(k ) e ij (λ αi(k ) -1) ≥ e i j (λ α i (k ) -1)</p><formula xml:id="formula_11">&gt; e i j (λ (1-(1/ log λ)) -1) = e i j ( λ 2 -1) = e min ( λ 2 -1) = ne max<label>(8)</label></formula><p>Relation <ref type="bibr" target="#b7">(8)</ref> follows from the choice of λ stated in Theorem 1.</p><p>We now bound the difference between the sum of the costs of the on-line and optimum off-line algorithms. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Number of accepted messages (out of 100000 message arrivals) as a function of λ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Lifetime under various algorithms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Number of message rejects as a function of the number of message arrivals.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Number of messages successfully routed as a function of the broadcast distance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>γ number of messages successfully routed</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Number of messages successfully routed as a function of γ, the broadcast frequency parameter.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Number of messages successfully routed by CMAX and D-CMAX, for 20 different trials.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>i∈N (c i (k + 1 ) 1 k</head><label>11</label><figDesc>-c i (k )) = (i,j)∈P (k ) (c i (k + 1) -c i (k )) ≤ (i,j)∈P (k ) λ αi(k ) l k e ij log λ = l k log λ (i,j)∈P (k ) e ij (λ αi(k ) -1) +l k log λ (i,j)∈P (k ) e ij ≤ l k ne max log λ + l k ne max log λ (6) ≤ 2l k ne max log λ (7)Relation (6) follows from (5) and the fact|P (k )| &lt; n. Note that if k / ∈ S(k), c i (k + 1) -c i (k ) = 0. Also note that c i (1) = 0.Using these facts, and (7), we obtaini∈N c i (k) = k-=1 i∈N (c i (k + 1) -c i (k )) = k ∈S(k) (c i (k + 1) -c i (k )) ≤ k ∈S(k)2l k ne max log λ = 2ne max L(k) log λ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Lemma 4 :</head><label>4</label><figDesc>ne max (L opt (k) -L(k)) ≤ i∈N c i (k) 0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003 Proof: Using Lemma 3,ne max (L opt (k) -L(k)) ≤ k ∈T (k) ne max l k &lt; k ∈T (k) (i,j)∈P (k ) l k e ij (λ αi(k ) -1) = k ∈T (k) (i,j)∈P (k ) l k e ij c i (k )/E i (9) = k ∈T (k) (i,j)∈P (k ) l k e ij c i (k)/E i (10) = i∈N c i (k) k ∈T (k),(i,j)∈P (k ) (l k e ij /E i ) ≤ i∈N c i (k)(11)Relation (9) follows from (2), relation<ref type="bibr" target="#b9">(10)</ref> holds because the node costs are non-decreasing, and (11) follows from the fact that the total energy expended (in transmitting messages) at a node cannot exceed the initial energy of the node. From Lemmas 2 and 4, it follows that L(k)/L opt (k) ≥ 1 1 + 2 log λ , thus proving Theorem 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Associate weights w ij with each link (i, j) in the reduced graph, where w ij = e ij (λ αi(k) -1).Step 3. Find the shortest path from s k to d k in the reduced graph with link weights w ij , as defined in Step 2. Step 4. Let γ k be the length of the shortest path found in Step 3 (γ</figDesc><table><row><cell>Ei(k) l k</cell><cell>to form a reduced network.</cell></row><row><cell>Step 2.</cell><cell></cell></row></table><note><p><p><ref type="bibr" target="#b0">1</ref></p>. Consider routing message k on the network G. Eliminate all links (i, j) ∈ A for which e ij &gt; k = ∞ if no path was found). If γ k ≤ σ, route the message along the shortest path, otherwise reject it.</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Energy consumed in transmitting a message between two nodes that are d units apart is proportional to d κ , where κ is a constant between</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>and 4.   </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Energy conserving routing in wireless ad-hoc networks</title>
		<author>
			<persName><forename type="first">J-H</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Infocom</title>
		<meeting>of Infocom</meeting>
		<imprint>
			<date type="published" when="2000-03">2000. March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast Approximate Algorithms for Maximum Lifetime Routing in Wireless Ad-hoc Networks</title>
		<author>
			<persName><forename type="first">J-H</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Networking</title>
		<meeting>of Networking</meeting>
		<imprint>
			<date type="published" when="2000-05">2000. May 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Span: An energyefficient coordination algorithm for topology maintenance in ad-hoc wireless networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jamieson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Mobicom</title>
		<meeting>of Mobicom</meeting>
		<imprint>
			<date type="published" when="2001-07">2001. July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On-line power-aware routing in wireless adhoc networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Aslam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Mobicom</title>
		<meeting>of Mobicom</meeting>
		<imprint>
			<date type="published" when="2001-07">2001. July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Competitive routing of virtual Circuits in ATM networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Plotkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1128" to="1136" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Topology control of multihop wireless networks using transmit power adjustment</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ramanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rosales-Hain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Infocom</title>
		<meeting>of Infocom</meeting>
		<imprint>
			<date type="published" when="2000-03">2000. March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Minimum energy mobile wireless networks</title>
		<author>
			<persName><forename type="first">V</forename><surname>Rodoplu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Meng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<date type="published" when="1999-08">August 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Amortized efficiency of list update and paging rules</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Sleator</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Tarjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="202" to="208" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Distributed Topology Control for Wireless Multihop Ad-hoc Networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-M</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Infocom</title>
		<meeting>of Infocom</meeting>
		<imprint>
			<date type="published" when="2001-04">2001. April 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Power-aware routing in mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Raghavendra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Mobicom</title>
		<meeting>of Mobicom</meeting>
		<imprint>
			<date type="published" when="1998-10">1998. October 1998</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
