<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ChainQueen: A Real-Time Differentiable Physical Simulator for Soft Robotics</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2018-10-02">2 Oct 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yuanming</forename><surname>Hu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jiancheng</forename><surname>Liu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Andrew</forename><surname>Spielberg</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Joshua</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
						</author>
						<author>
							<persName><forename type="first">William</forename><forename type="middle">T</forename><surname>Freeman</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jiajun</forename><surname>Wu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Daniela</forename><surname>Rus</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Wojciech</forename><surname>Matusik</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">J. Liu is with Institute for Interdisciplinary Information Science</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">are with Computer Science and Artificial Intelligence Laboratory</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<settlement>Cambridge</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ChainQueen: A Real-Time Differentiable Physical Simulator for Soft Robotics</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2018-10-02">2 Oct 2018</date>
						</imprint>
					</monogr>
					<idno type="MD5">915A898DD40C433FCE9C2B19A0507376</idno>
					<idno type="arXiv">arXiv:1810.01054v1[cs.RO]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Physical simulators have been widely used in robot planning and control. Among them, differentiable simulators are particularly favored, as they can be incorporated into gradient-based optimization algorithms that are efficient in solving inverse problems such as optimal control and motion planning. Simulating deformable objects is, however, more challenging compared to rigid body dynamics. The underlying physical laws of deformable objects are more complex, and the resulting systems have orders of magnitude more degrees of freedom and therefore they are significantly more computationally expensive to simulate. Computing gradients with respect to physical design or controller parameters is typically even more computationally challenging. In this paper, we propose a real-time, differentiable hybrid Lagrangian-Eulerian physical simulator for deformable objects, ChainQueen, based on the Moving Least Squares Material Point Method (MLS-MPM). MLS-MPM can simulate deformable objects including contact and can be seamlessly incorporated into inference, control and co-design systems. We demonstrate that our simulator achieves high precision in both forward simulation and backward gradient computation. We have successfully employed it in a diverse set of control tasks for soft robots, including problems with nearly 3,000 decision variables.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Robot planning and control algorithms often rely on physical simulators for prediction and optimization <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>. In particular, differentiable physical simulators enable the use of gradient-based optimizers, significantly improving control efficiency and precision. Motivated by this, there has been extensive research on differentiable rigid body simulators, using approximate <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref> and exact <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref> methods.</p><p>Significant challenges remain for deformable objects. First, simulating the motion of deformable objects is slow, because they have much higher degrees of freedom (DoFs). Second, contact detection and resolution is challenging for deformable objects, due to their changing geometries and potential selfcollisions. Third, closed-form and efficient computation of gradients is challenging in the presence of contact. As a consequence, current simulation methods for soft objects cannot be effectively used for solving inverse problems such as optimal control and motion planning.</p><p>In this paper, we introduce a real-time, differentiable physical simulator for deformable objects, building upon the Moving Least Squares Material Point Method (MLS-MPM) <ref type="bibr" target="#b7">[8]</ref>. We name our simulator ChainQueen * . The Material Point Method (MPM) is a hybrid Lagrangian-Eulerian method that uses both particles and grid nodes for simulation <ref type="bibr" target="#b8">[9]</ref>. MLS-MPM accelerates and simplifies traditional MPM using a moving least squares force discretization. In ChainQueen, we introduce the first fully differentiable MLS-MPM simulator with respect to both state and model parameters, with both forward simulation and backpropagation running efficiently on GPUs. We demonstrate the ability to efficiently calculate gradients with respect to the entire simulation. This enables many novel applications for soft robotics including optimization-based closed-loop controller design, trajectory optimization, and co-design of robot geometry, materials, and control.</p><p>As a particle-grid-based hybrid simulator, MPM simulates objects of various states, such as liquid (e.g., water), granular materials (e.g., sand), and elastoplastic materials (e.g., snow and human tissue). ChainQueen focuses on elastic materials for soft robotics. It is fully differentiable and 4 -9× faster than the current state-of-the-art. Numerical and experimental validation suggest that ChainQueen achieves high precision in both forward simulation and backward gradient computation.</p><p>ChainQueen's differentiability allows it to support gradientbased optimization for control and system identification. By performing gradient descent on controller parameters, our simulator is capable of solving these inverse problems on a diverse set of complex tasks, such as optimizing a 3D soft walker controller given an objective. Similarly, gradient descent on physical design parameters, enables inference of physical properties (e.g. mass, density and Young's modulus) of objects and optimizing design for a desired task.</p><p>In addition to benchmarking ChainQueen's performance and demonstrating its capabilities on a diverse set of inverse problems, we have interfaced our simulator with high-level python scripts to make ChainQueen user-friendly. Users at all levels will be able to develop their own soft robotics systems using our simulator, without the need to understand its low-level details. We will open-source our code and data and we hope they can benefit the robotics community.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Material Point Method</head><p>The material point method has been extensively developed from both a solid mechanics <ref type="bibr" target="#b8">[9]</ref> and computer graphics <ref type="bibr" target="#b9">[10]</ref> perspective. As a hybrid Eulerian-Langrangian method, MPM has demonstrated its versatility in simulating snow <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b11">[12]</ref>, sand <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>, non-Newtonion fluids <ref type="bibr" target="#b14">[15]</ref>, cloth <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>, solid-fluid coupling <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>, rigid body coupling, and cutting <ref type="bibr" target="#b7">[8]</ref>. <ref type="bibr" target="#b19">[20]</ref> also proposed an adaptive MPM scheme to concentrate computation resources in the regions of interest.</p><p>There are many benefits of using MPM for soft robotics. First, MPM is a well-founded and physically-accurate discretization method and can be derived through the weak form of conservation laws. Such a physically-based approach makes it easier to match simulation with real-world experiments. Second, MPM is friendly to parallelization on modern hardware architectures. Closely related to our work is a high-performance GPU implementation <ref type="bibr" target="#b20">[21]</ref> by <ref type="bibr">Gao et al.</ref>, from which we borrow many useful optimization practices. Though efficient when solving forward simulation, their simulator is not differentiable, making it inefficient for inverse problems in robotics and learning. Third, MPM naturally handles large deformation and (self-)collision, which are common in soft robotics, but often not modeled in, e.g., mesh-based approaches due to computational expense. Finally, the continuum dynamics (including soft object collision) are governed by the smooth (and differentiable) potential energy, making the whole system differentiable.</p><p>Our simulator, ChainQueen, is fully differentiable and the first simulator that applies MPM to soft robotics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Differentiable Simulation and Control</head><p>Recently, there has been an increasing interest in building differentiable simulators for planning and control. For rigid bodies, <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b2">[3]</ref> and <ref type="bibr" target="#b3">[4]</ref> proposed to approximate object interaction with neural nets; later, <ref type="bibr" target="#b22">[23]</ref> explored their usage in control. Approximate analytic differentiable rigid body simulators have also been proposed <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b23">[24]</ref>. Such systems have been deployed for manipulation and planning <ref type="bibr" target="#b24">[25]</ref>.</p><p>Differentiable simulators for deformable objects have been less studied. Recently, <ref type="bibr" target="#b25">[26]</ref> proposed SPNets for differentiable simulation of position-based fluids <ref type="bibr" target="#b26">[27]</ref>. The particle interactions are coded as neural network operations and differentiability is achieved via automatic differentiation in PyTorch. A hierarchical particle-based object representation using neural networks is also proposed in <ref type="bibr" target="#b3">[4]</ref>. Instead of approximating physics using neural networks, ChainQueen differentiates MLS-MPM, a well physically founded discretization scheme derived from continuum mechanics. In summary, our simulator can be used for a more diverse set of objects; it is more physically plausible, and runs faster.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. FORWARD SIMULATION AND BACK-PROPAGATION</head><p>We use the moving least squares material point method (MLS-MPM) <ref type="bibr" target="#b7">[8]</ref> to discretize continuum mechanics, which is governed by the following two equations:</p><formula xml:id="formula_0">ρ Dv Dt = ∇ • σ + ρg (momentum conservation),<label>(1)</label></formula><formula xml:id="formula_1">Dρ Dt + ρ∇ • v = 0 (mass conservation). (<label>2</label></formula><formula xml:id="formula_2">)</formula><p>We briefly cover the basics of MLS-MPM and readers are referred to <ref type="bibr" target="#b9">[10]</ref> and <ref type="bibr" target="#b7">[8]</ref> for a comprehensive introduction , and stress-contributed impulse to their neighbouring grid nodes, using the Affine Particle-in-Cell method (APIC) <ref type="bibr" target="#b27">[28]</ref> and moving least squares force discretization <ref type="bibr" target="#b7">[8]</ref>, weighted by a compact B-spline kernel N :</p><formula xml:id="formula_3">m n i = p N (xi -x n p )mp,<label>(3)</label></formula><formula xml:id="formula_4">G n p = - 4 ∆x 2 ∆tV 0 p P n p F nT p + mpC n p ,<label>(4)</label></formula><formula xml:id="formula_5">p n i = p N (xi -x n p ) mpv n p + G n p (xi -x n p ) .<label>(5)</label></formula><p>2) Grid operations. Grid momentum is normalized into grid velocity after division by grid mass:</p><formula xml:id="formula_6">v n i = 1 m n i p n i .<label>(6)</label></formula><p>Note that neighbouring particles interact with each other through their shared grid nodes, and collisions are handled automatically. Here we omit boundary conditions and gravity for simplicity.   For soft robotics, we additionally introduce an actuation model. Inspired by actuators such as <ref type="bibr" target="#b28">[29]</ref>, we designed an actuation model that expands or stretches particle p via an additional Cauchy stress A p = F p σ pa F T p , with σ pa = Diag(a x , a y , a z ) -the stress in the material space. This framework supports the use of other differentiable actuation models including pneumatic, hydraulic, and cabledriven actuators. Fig. <ref type="figure" target="#fig_1">1</ref> illustrates forward simulation and back propagation.</p><formula xml:id="formula_7">v n+1 p = i N (xi -x n p )v n i ,<label>(7)</label></formula><formula xml:id="formula_8">C n+1 p = 4 ∆x 2 i N (xi -x n p )v n i (xi -x n p ) T ,<label>(8)</label></formula><formula xml:id="formula_9">F n+1 p = (I + ∆tC n+1 p )F n p ,<label>(9)</label></formula><formula xml:id="formula_10">x n+1 p = x n p + ∆tv n+1 p .<label>(10</label></formula><p>MLS-MPM is naturally differentiable. Though the forward direction has been extensively used in computer graphics, the backward direction (differentiation or back-propagation) is largely unexplored.</p><p>Based on the gradients we have derived analytically, we have designed a high-performance implementation that resembles the traditional forward MPM cycle: backward P2G (scatter particle gradients to grid), grid operations, and backward G2P (gather grid gradients to particles). † Gradients of state at the end of a time step with respect to states at the starting of the time step can be computed using the chain rule. With the single-step gradients computed, applying the chain rule at a higher level from the final state all-the-way to the initial state yields gradients of the final state with respect to the initial state, as well as to the controller parameters that are used in each state. We cache all the simulation states in memory, using a "memo" object. Though the underlying differentiation is complicated, we have designed a simple high-level TensorFlow interface on which end-users can build their applications (Fig. <ref type="figure">2</ref>).</p><p>Our high-performance implementation ‡ takes advantage of the computational power of modern GPUs through CUDA. We also implemented a reference implementation in TensorFlow. Note that programming physical simulation as a "computation graph" using high-level frameworks such as TensorFlow is less inefficient. In fact, when all the overheads are gone, our optimized CUDA solver is 132× faster than the TensorFlow reference version. This is because TensorFlow is optimized towards deep learning applications where data granularity is much larger and memory access pattern is much more regular than physical simulation, and limited CPU-GPU bandwidth. In contrast, our CUDA implementation is tailored for MLS- † Please see the supplemental document for the gradient derivations.</p><p>‡ Based the Taichi <ref type="bibr" target="#b29">[30]</ref> open source computer graphics library. MPM and explicitly optimized for parallelism and locality, thus delivering high-performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EVALUATION</head><p>In this section, we conduct a comprehensive study of the efficiency and accuracy of our system, in both 2D and 3D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Efficiency</head><p>Instead of using complex geometries, a simple falling cube is used for performance benchmarking, to ensure easy analysis and reproducibility. We benchmark the performance of our CUDA simulator against NVIDIA Flex <ref type="bibr" target="#b30">[31]</ref>, a popular PBD physical simulator capable of simulating deformable objects. Note that both PBD and MLS-MPM needs substepping iterations to ensure high stiffness. To ensure fair comparison, we set a Young's modulus, Poisson's ration and density so that visually ChainQueen gives similar results to Flex. We used two steps per frame and four iterations per step in Flex. Note that setting exactly the same parameters is not possible since in PBD there is no explicitly defined physical quantity such as Young's modulus.</p><p>We summarize the quantitative performance in Table <ref type="table" target="#tab_2">II</ref> </p><formula xml:id="formula_11">@L @✓ s i+1 = F ✓ (s i , a i ) simulation time</formula><p>Analytical gradients (CUDA) Fig. <ref type="figure">2</ref>: Left: A "memo" object consists all information of a single simulation execution, including all the time step state information (position, velocity, deformation gradients etc.), and parameters for the initial state p 0 , policy parameter θ. Right: Code samples to get the symbolic differentiation (top) and memo, evaluate gradients out of the memo and symbolic differentiation, and finally use them for gradient descent (bottom). that the TensorFlow implementation is much slower, due to excessive runtime overheads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Accuracy</head><p>We design five test cases to evaluate the accuracy of both forward simulation and backward gradient evaluation:</p><p>1) A1 (analytic, 3D, float32 precision): final position w.r.t. initial velocity (with collision). This case tests conservation of momentum, gradient accuracy and stability of back-propagation. 2) A2 (analytic, 3D, float32 precision): same as A1 but with one collision to a friction-less wall. 3) B (numeric, 2D, float64 precision): colliding billiards.</p><p>This case tests gradient accuracy and stability in more complex cases where analytic solutions do not exist. We used float64 precision for accurate finite difference results. 4) C (numeric, 2D, float64 precision): finger controller. This case tests gradient accuracy of controller parameters, which are used repeatedly in the whole simulation process. 5) D1 (experimental, pneumatic actuator, actuation) In order to evaluate our simulator's real-world accuracy, we compared the deformation of a physical actuator to a virtual one. The physical actuator has four pneumatic chambers which can be inflated with an external pump, arranged in a cross-shape. Inflating the individual chambers bends the actuator away from that chamber. The actuator was cast using Smooth-On Dragon Skin 30. 6) D2 (experimental, pneumatic actuator, bouncing) In a second test, we dropped the same actuator from a 15 cm height, and compared its dynamic motion to a simulation. In 3D analytic test cases, where gradients w.r.t. initial velocity can be directly evaluated as in Table <ref type="table" target="#tab_4">III</ref>. For the experimental comparisons, the results are shown in Fig. <ref type="figure" target="#fig_0">3</ref>. In addition to our simulator's high performance and accuracy, it is worth noting that that the gradients remain stable in the long term, within up to 1000 time steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. INFERENCE, CONTROL AND CO-DESIGN</head><p>The most attractive feature of our simulator is the existence of quickly computable gradients, which allows the use of much more efficient gradient-based optimization algorithms. In this section, we show the effectiveness of our differentiable simulator on gradient-based optimization tasks, including physical inference, control for soft robotics, and co-design of robotic arms. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Physical Parameter Inference</head><p>ChainQueen can be used to infer physical system properties given its observed motion, e.g. perform gradient descent to infer the relative densities of two colliding elastic balls (see figure above, ball A moving to the right hitting ball B, and ball B arrives the destination C). Gradient-based optimization infers that relative density of ball A is 2.26, which constitutes to the correct momentum to push B to C. Such capability makes it useful for real-world robotic tasks such as system identification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Control</head><p>We can optimize regression-based controllers for soft robots and efficiently discover stable gaits. The controller takes as input the state vector z, which includes target position, the center of mass position, and velocity of each composed soft component. In our examples, the actuation vector a for up to 16 actuators is generated by the controller in each time step. During optimization, we perform gradient descent on variables W and b, where a = tanh (Wz + b) is the Fig. <ref type="figure">4</ref>: A soft 2D walker with controller optimized using gradient descent, aiming to achieve a maximum distance after 600 simulation steps. The walker has four actuators (left, marked by letter 'A's) with each capable of stretching or compressing in the vertical direction. The full walking animation (middle and right) is available in the video. actuation-generating controller.</p><p>We have designed a series of experiments including the 2D biped runner (Fig. <ref type="figure">4</ref>) and robotic finger, and 3D quadrupedal runner (Fig. <ref type="figure">6</ref>), crawler and robotic arm. Gradient-based optimizers successfully compute desired controllers within only tens or hundreds of iterations. Visual results are included in the supplemental video.</p><p>To emphasize the merits of gradient-based approaches, we compare our control method with proximal policy optimization (PPO) <ref type="bibr" target="#b31">[32]</ref>, a state-of-the-art reinforcement learning algorithm. PPO is an actor-critic method which relies on sampled gradients of a reward function in order to optimize a policy. This sampling-based approach is model-free; it relies on gradients of the rewards with respect to controller parameters, but not with respect to the physical model for updates. For our comparison, we use velocity projected onto the direction toward the goal as the reward. § We use a simplified single link version (with only two adjacent actuators) of Fig. <ref type="figure" target="#fig_3">5</ref> and the 2D runner Fig. <ref type="figure">4</ref> as a benchmark. Quantitative results for the finger are shown in Fig. <ref type="figure">7</ref>. We performed a similar comparison on the 2D walker, the controller optimized by ChainQueen for the 2D walker starts functioning well within 20 minutes; by comparison the policy recovered by PPO still chose nearly-random actions after over 4 hours of training; demonstrating that for certain soft locomotion tasks our gradient-based method can be more efficient than model-free approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Co-design</head><p>Our simulator is capable of not only providing gradients with respect to dynamics and controller parameters, but also with respect to structural design parameters, enabling codesign of soft robots. To demonstrate this, we designed a multi-link robot arm (two links, two joints each with two sideby-side actuators; all parts deformable). Similar to shooting method trajectory optimization, actuation for each time step is solved for, along with the time-invariant Young's modulus of the system for each particle. In our task, we optimized the end-effector of the arm to reach a goal ball with final 0 arm velocity, and minimized for actuation cost N i=0 u T i u i dt, where u i is the actuation vector at timestep i, and N is the total number of timesteps. This is a dynamic task and § Note that this is functionally extremely similar to a distance loss; the cumulative reward t = 0 T v goal dt = D -x T -x goal , where D is the initial distance and x T and x goal represent world coordinates of the robot at time T and of the goal, respectively. As velocity toward the goal increases, final distance to the goal decreases.  the target pose cannot be reached in a static equilibrium. NLOPT's sequential least squares programming algorithm was used for optimization <ref type="bibr" target="#b32">[33]</ref>. We compared our co-design solution to fixed designs. The designed stiffness distribution is shown in Fig. <ref type="figure" target="#fig_3">5</ref>, along with controls. The convergence for the different tasks can be seen in Fig. <ref type="figure" target="#fig_5">8</ref>. As can be seen, only the co-design arm fully converges to the target goal, and with lower actuation cost. Actuation for each chamber was clamped, and rnges of 30% to 400% of a dimensionless initial Young's modulus were allowed and chosen large enough such as to require a swing instead of a simple bend.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. DISCUSSION</head><p>We have presented ChainQueen, a differentiable simulator for soft robotics, and demonstrated how it can be deployed for inference, control, and co-design. ChainQueen has the potential to accelerate the development of soft robots. We have also developed a high-performance GPU implementation for ChainQueen, which we plan to open source. fixed arm designs. The fixed designs can make progress but not complete the task, while with co-design, the task can be completed and the actuation cost is lower. Constraint violation is the norm of two constraints: distance of end-effector to goal and mean squared velocity of the particles.</p><p>One interesting future direction is to couple our soft object simulation with rigid body simulation, as done in <ref type="bibr" target="#b7">[8]</ref>. As derived in <ref type="bibr" target="#b33">[34]</ref>, the ∆t limit for explicit time integration is C∆x ρ E , where C is a constant close to one, ρ is the density, and E is the Young's modulus. That means for very stiff materials (e.g., rigid bodies), only a very restrictive ∆t can be used. However, a rigid body simulator should probably be employed in the realm of nearly-rigid objects and coupled with our deformable body simulator. Combining our simulator with existing rigid-body simulators using Compatible Particlein-Cell <ref type="bibr" target="#b7">[8]</ref> can be an interesting direction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Supplemental Document</head><p>In this document, we discuss the detailed steps for backward gradient computation in ChainQueen, i.e. the differentiable Moving Least Squares Material Point Method (MLS-MPM) <ref type="bibr" target="#b7">[8]</ref>. Again, we summarize the notations in Table <ref type="table" target="#tab_6">IV</ref>  The MLS-MPM time stepping is defined as follows:</p><formula xml:id="formula_12">P n p = P n p (F n p ) + F p σ n pa<label>(11)</label></formula><formula xml:id="formula_13">m n i = p N (x i -x n p )m p<label>(12)</label></formula><formula xml:id="formula_14">p n i = p N (x i -x n p ) m p v n p + - 4 ∆x 2 ∆tV 0 p P n p F nT p + m p C n p (x i -x n p )<label>(13)</label></formula><formula xml:id="formula_15">v n i = 1 m n i p n i<label>(14)</label></formula><formula xml:id="formula_16">v n+1 p = i N (x i -x n p )v n i (<label>15</label></formula><formula xml:id="formula_17">)</formula><formula xml:id="formula_18">C n+1 p = 4 ∆x 2 i N (x i -x n p )v n i (x i -x n p ) T<label>(16)</label></formula><formula xml:id="formula_19">F n+1 p = (I + ∆tC n+1 p )F n p ,<label>(17)</label></formula><formula xml:id="formula_20">x n+1 p = x n p + ∆tv n+1 p (18)<label>(19)</label></formula><p>The forward variable dependency is as follows:</p><formula xml:id="formula_21">x n+1 p ← x n p , v n+1 p (20) v n+1 p ← x n p , v n i (21) C n+1 p ← x n p , v n i (<label>22</label></formula><formula xml:id="formula_22">)</formula><formula xml:id="formula_23">F n+1 p ← F n p , C n+1 p (23) p n i ← x n p , C n p , v n p , P n p , F n p (24) v n i ← p n i , m n i (25) P n p ← F n p , σ n pa (26) m n i ← x n p (27)<label>(28)</label></formula><p>During back-propagation, we have the following reversed variable dependency:</p><formula xml:id="formula_24">x n+1 p , v n+1 p , C n+1 p , p n+1 i , m i ← x n p (29) p n i ← v n p (30) x n+1 p ← v n+1 p (31) v n+1 p , C n+1 p ← v n i (32) F n+1 p , P n p , p n i ← F n p (<label>33</label></formula><formula xml:id="formula_25">)</formula><formula xml:id="formula_26">F n+1 p ← C n+1 p (34) p n i ← C n p (35) v n i ← p n i (36) v n i ← m n i (37) p n i ← P n p (38) P n p ← σ n pa (39) (40)</formula><p>We reverse swap two sides of the equations for easier differentiation derivation:</p><formula xml:id="formula_27">x n p → x n+1 p , v n+1 p , C n+1 p , p n+1 i , m i (41) v n p → p n p (42) v n+1 p → x n+1 p (43) v n i → v n+1 p , C n+1 p (44) F n p → F n+1 p , P n p , p n i (45) C n+1 p → F n+1 p (46) C n p → p n i (47) p n i → v n i (48) m n i → v n i (49) P n p → p n i (50) σ n pa → P n p (51)<label>(52)</label></formula><p>In the following sections, we derive detailed gradient relationships, in the order of actual gradient computation. The frictional boundary condition gradients are postponed to the end since it is less central, though during computation it belongs to grid operations. Back-propagation in ChainQueen is essentially a reversed process of forward simulation. The computation has three steps, backward particle to grid (P2G), backward grid operations, and backward grid to particle (G2P). (C, P2G) For v n i , we have </p><formula xml:id="formula_28">v n+1 p = i N (x i -x n p )v n i<label>(59)</label></formula><formula xml:id="formula_29">C n+1 p = 4 ∆x 2 i N (x i -x n p )v n i (x i -x n p ) T<label>(60)</label></formula><formula xml:id="formula_30">= p   ∂L ∂v n+1 pα N (x i -x n p ) + 4 ∆x 2 N (x i -x n p ) β ∂L ∂C n+1 pαβ (x iβ -x pβ )   .<label>(61)</label></formula><p>IX. BACKWARD GRID OPERATIONS (D, grid) For p n i , we have</p><formula xml:id="formula_32">v n i = 1 m n i p n i (63) =⇒ ∂L ∂p n iα = ∂L ∂v n i ∂v n i ∂p n i α (64) = ∂L ∂v n iα 1 m n i .<label>(65)</label></formula><p>(E, grid) For m n i , we have</p><formula xml:id="formula_33">v n i = 1 m n i p n i (66) =⇒ ∂L ∂m n i = ∂L ∂v n i ∂v n i ∂m n i (67) = - 1 (m n i ) 2 α p n iα ∂L ∂v n iα (68) = - 1 m n i α v n iα ∂L ∂v n iα .<label>(69)</label></formula><p>X. BACKWARD GRID TO PARTICLE (G2P) (F, G2P) For v n p , we have</p><formula xml:id="formula_34">p n i = p N (x i -x n p ) m p v n p + - 4 ∆x 2 ∆tV 0 p P n p F nT p + m p C n p (x i -x n p ) (70) =⇒ ∂L ∂v n pα = i ∂L ∂p n p ∂p n p ∂v n p α (71) = i N (x i -x n p )m p ∂L ∂p n iα .<label>(72)</label></formula><p>(G, G2P) For P n p , we have</p><formula xml:id="formula_35">p n i = p N (x i -x n p ) m p v n p + - 4 ∆x 2 ∆tV 0 p P n p F nT p + m p C n p (x i -x n p ) (73) =⇒ ∂L ∂P n pαβ = ∂L ∂p n i ∂p n i ∂P n p αβ (74) = - i N (x i -x n p ) 4 ∆x 2 ∆tV 0 p γ ∂L ∂p n iα F n pγ β (x iγ -x n pγ ).<label>(75)</label></formula><p>(H, G2P) For F n p , we have  </p><formula xml:id="formula_36">p n i = p N (x i -x n p ) m p v n p + - 4 ∆x 2 ∆tV 0 p P n p F nT p + m p C n p (x i -x n p )<label>(78)</label></formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>3 )</head><label>3</label><figDesc>Grid-to-particle transfer (G2P). Particles gather updated velocity v n+1 p , local velocity field gradients C n+1 p and position x n+1 p . The constitutive model properties (e.g. deformation gradients F n+1 p ) are updated.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: One time step of MLS-MPM. Top arrows are for forward simulation and bottom ones are for back propagation. A controller is embedded in the P2G process to generate actuation given particle configurations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 :</head><label>3</label><figDesc>Fig. 3: Experiments on the pneumatic leg. Row (A, B) Footage and simulator results of a bouncing experiment with the leg dropping at 15 cm. Row (C, D) Actuation test.</figDesc><graphic coords="5,54.00,50.08,244.80,389.39" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: Final poses of the arm swing task. Lighter colors refer to stiffer regions. (c) Final pose of the fixed-stiffness 300% initial Young's modulus arm. (d) Final pose of the fixed-stiffness 300% initial Young's modulus arm. (e) Final pose of the co-optimized arm.Actuation cost is 95.5% that of the fixed 100% initial Young's modulus arm and converges. Only the co-optimized arm is able to fully reach its target. The final optimized spatially varying stiffness of the arm has lower stiffness on the outside of the bend, and higher stiffness inside, promoting more bend to the left. Qualitatively, this is similar in effect to the pleating on soft robot fingers.</figDesc><graphic coords="6,66.60,237.11,478.79,67.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 :Fig. 7 :</head><label>67</label><figDesc>Fig.6: A 3D quadrupedal runner. Please see the supplemental video for more results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 :</head><label>8</label><figDesc>Fig.8: Convergence of the arm reaching task for co-design vs. fixed arm designs. The fixed designs can make progress but not complete the task, while with co-design, the task can be completed and the actuation cost is lower. Constraint violation is the norm of two constraints: distance of end-effector to goal and mean squared velocity of the particles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>VIII</head><label></label><figDesc>above two gradients should also include the contributions of ∂L ∂v n p and ∂L ∂C n p respectively, with n being the next time step.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I :</head><label>I</label><figDesc>List of notations for MLS-MPM.</figDesc><table><row><cell cols="4">Symbol Type Affiliation Meaning</cell></row><row><cell>∆t</cell><cell>scalar</cell><cell></cell><cell>time step size</cell></row><row><cell>∆x</cell><cell>scalar</cell><cell></cell><cell>grid cell size</cell></row><row><cell>xp</cell><cell>vector</cell><cell cols="2">particle position</cell></row><row><cell>V 0 p</cell><cell>scalar</cell><cell cols="2">particle initial volume</cell></row><row><cell>vp</cell><cell>vector</cell><cell cols="2">particle velocity</cell></row><row><cell>Cp</cell><cell cols="3">matrix particle affine velocity field [28]</cell></row><row><cell>Pp</cell><cell cols="3">matrix particle PK1 stress (∂ψp/∂Fp)</cell></row><row><cell>σpa</cell><cell cols="3">matrix particle actuation Cauchy stress</cell></row><row><cell>Ap</cell><cell cols="3">matrix particle actuation stress (material space)</cell></row><row><cell>Fp</cell><cell cols="3">matrix particle deformation gradient</cell></row><row><cell>xi</cell><cell>vector</cell><cell>node</cell><cell>position</cell></row><row><cell>mi</cell><cell>scalar</cell><cell>node</cell><cell>mass</cell></row><row><cell>vi</cell><cell>vector</cell><cell>node</cell><cell>velocity</cell></row><row><cell>pi</cell><cell>vector</cell><cell>node</cell><cell>momentum, i.e. mivi</cell></row><row><cell>N</cell><cell>scalar</cell><cell></cell><cell>quadratic B-spline function</cell></row><row><cell cols="4">of MPM and MLS-MPM, respectively. The material point</cell></row><row><cell cols="4">method is a hybrid Eulerian-Lagrangian method, where</cell></row><row><cell cols="4">both particles and grid nodes are used. Simulation state</cell></row><row><cell cols="4">information is transferred back-and-forth between these two</cell></row><row><cell cols="4">representations. We summarize the notations we use in this</cell></row><row><cell cols="4">paper in Table IV. Subscripts are used to denote particle (p)</cell></row><row><cell cols="4">and grid nodes (i), while superscripts (n, n + 1) are used to</cell></row><row><cell cols="4">distinguish quantities in different time steps. The MLS-MPM</cell></row><row><cell cols="4">simulation cycle has three steps:</cell></row><row><cell cols="4">1) Particle-to-grid transfer (P2G). Particles transfer mass m p , momentum (mv) n p</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II :</head><label>II</label><figDesc>Performance comparisons on a NVIDIA GTX 1080 Ti GPU. F stands for forward simulation and B stands for backward differentiation. TF indicates the TensorFlow implementation. When benchmarking our simulator with CUDA we use the C++ instead of python interface to avoid the extra overhead due to the TensorFlow runtime library.</figDesc><table><row><cell>Approach</cell><cell>Impl.</cell><cell># Particles</cell><cell>Time per Frame</cell></row><row><cell>Flex (3D)</cell><cell>CUDA</cell><cell>8,024</cell><cell>3.5 ms (286 FPS)</cell></row><row><cell cols="2">Ours (3D, F) CUDA</cell><cell>8,000</cell><cell>0.392 ms (2,551 FPS)</cell></row><row><cell cols="2">Ours (3D, B) CUDA</cell><cell>8,000</cell><cell>0.406 ms (2,463 FPS)</cell></row><row><cell>Flex (3D)</cell><cell>CUDA</cell><cell>61,238</cell><cell>6 ms (167 FPS)</cell></row><row><cell cols="2">Ours (3D, F) CUDA</cell><cell>64,000</cell><cell>1.594 ms (628 FPS)</cell></row><row><cell cols="2">Ours (3D, B) CUDA</cell><cell>64,000</cell><cell>1.774 ms (563 FPS)</cell></row><row><cell cols="2">Ours (3D, F) CUDA</cell><cell>512,000</cell><cell>10.501 ms (92 FPS)</cell></row><row><cell cols="2">Ours (3D, B) CUDA</cell><cell>512,000</cell><cell>11.594 ms (86 FPS)</cell></row><row><cell>Ours (2D, F)</cell><cell>TF</cell><cell>6,400</cell><cell>13.2 ms (76 FPS)</cell></row><row><cell>Ours (2D, B)</cell><cell>TF</cell><cell>6,400</cell><cell>35.7 ms (28 FPS)</cell></row><row><cell cols="2">Ours (2D, F) CUDA</cell><cell>6,400</cell><cell>0.10 ms (10,000 FPS)</cell></row><row><cell cols="2">Ours (2D, B) CUDA</cell><cell>6,400</cell><cell>0.14 ms (7,162 FPS)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>.Our CUDA simulator provides higher speed than Flex, when the number of particles are the same. It is also worth noting</figDesc><table><row><cell></cell><cell cols="2">Parameterized initial state</cell><cell></cell><cell>sym = sim.gradients_sym(loss, variables=trainables)</cell></row><row><cell cols="3">s 0 = s 0 (p 0 )</cell><cell></cell></row><row><cell cols="2">Initial State s i …</cell><cell>s 0</cell><cell>position velocity deformation gradient local affine velocity mass</cell><cell>@L @p 0</cell></row><row><cell></cell><cell></cell><cell></cell><cell>volume</cell></row><row><cell cols="2">s i+1</cell><cell></cell><cell>young's modulus poisson's ratio</cell><cell>memo = sim.run( initial_state=initial_state,</cell></row><row><cell></cell><cell>…</cell><cell></cell><cell></cell><cell>num_steps=100, iteration_feed_dict={goal: goal_input}, loss=loss)</cell></row><row><cell cols="3">Final State s n</cell><cell></cell><cell>grad = sim.eval_gradients(sym=sym, memo=memo) gradient_descent = [ v.assign(v -lr * g)</cell></row><row><cell>Loss:</cell><cell cols="2">L = L(s n )</cell><cell>Memo</cell><cell>for v, g in zip(trainables, grad) sess.run(gradient_descent) ]</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE III :</head><label>III</label><figDesc>Relative error in simulation and gradient precision. Empty values are because of too short time for collision to happen.</figDesc><table><row><cell>Case</cell><cell>1 steps</cell><cell>10 steps</cell><cell>100 steps</cell><cell>1000 steps</cell></row><row><cell>A1</cell><cell cols="4">9.80 × 10 -8 4.74 × 10 -8 1.15 × 10 -7 1.43 × 10 -5</cell></row><row><cell>A2</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>2.69 × 10 -5</cell></row><row><cell>B</cell><cell>-</cell><cell>-</cell><cell cols="2">2.39 × 10 -8 2.83 × 10 -8</cell></row></table><note><p>C 5.63 × 10 -6 2.24 × 10 -7 6.97 × 10 -7 1.76 × 10 -6</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>. We assume fixed particle mass m p , volume V 0 p , hyperelastic constitutive model (with potential energy ψ p or Young's modulus E p and Poisson's ratio ν p ) for simplicity.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE IV :</head><label>IV</label><figDesc>List of notations for MLS-MPM.</figDesc><table><row><cell cols="4">Symbol Type Affiliation Meaning</cell></row><row><cell>∆t</cell><cell>scalar</cell><cell></cell><cell>time step size</cell></row><row><cell>∆x</cell><cell>scalar</cell><cell></cell><cell>grid cell size</cell></row><row><cell>x p</cell><cell>vector</cell><cell cols="2">particle position</cell></row><row><cell>V 0 p</cell><cell>scalar</cell><cell cols="2">particle initial volume</cell></row><row><cell>v p</cell><cell>vector</cell><cell cols="2">particle velocity</cell></row><row><cell>C p</cell><cell cols="3">matrix particle affine velocity field [28]</cell></row><row><cell>P p</cell><cell cols="3">matrix particle PK1 stress (∂ψ p /∂F p )</cell></row><row><cell>σ pa</cell><cell cols="3">matrix particle actuation Cauchy stress</cell></row><row><cell>A p</cell><cell cols="3">matrix particle actuation stress (material space)</cell></row><row><cell>F p</cell><cell cols="3">matrix particle deformation gradient</cell></row><row><cell>x i</cell><cell>vector</cell><cell>node</cell><cell>position</cell></row><row><cell>m i</cell><cell>scalar</cell><cell>node</cell><cell>mass</cell></row><row><cell>v i</cell><cell>vector</cell><cell>node</cell><cell>velocity</cell></row><row><cell>p i</cell><cell>vector</cell><cell>node</cell><cell>momentum, i.e. m i v i</cell></row><row><cell>N</cell><cell>scalar</cell><cell></cell><cell>quadratic B-spline function</cell></row><row><cell></cell><cell></cell><cell cols="2">VII. VARIABLE DEPENDENCIES</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We would like to thank Chenfanfu Jiang, Ming Gao and Kui Wu for the insightful discussions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Mujoco: A physics engine for model-based control</title>
		<author>
			<persName><forename type="first">E</forename><surname>Todorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Erez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tassa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IROS</title>
		<imprint>
			<biblScope unit="page" from="5026" to="5033" />
			<date type="published" when="2012">2012</date>
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Simulation tools for model-based robotics: Comparison of bullet, havok, mujoco, ode and physx</title>
		<author>
			<persName><forename type="first">T</forename><surname>Erez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tassa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Todorov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ICRA</title>
		<imprint>
			<biblScope unit="page" from="4397" to="4404" />
			<date type="published" when="2015">2015</date>
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A compositional object-based approach to learning physical dynamics</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ullman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Torralba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Flexible neural representation for physics prediction</title>
		<author>
			<persName><forename type="first">D</forename><surname>Mrowca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Fei-Fei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Yamins</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1806.08047</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A differentiable physics engine for deep learning in robotics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Degrave</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hermans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dambre</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.01652</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Drake: A planning, control, and analysis toolbox for nonlinear dynamical systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Tedrake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Drake</forename><forename type="middle">Development</forename><surname>Team</surname></persName>
		</author>
		<ptr target="https://drake.mit.edu" />
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">RobCoGen: a code generator for efficient kinematics and dynamics of articulated robots, based on Domain Specific Languages</title>
		<author>
			<persName><forename type="first">M</forename><surname>Frigerio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Buchli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Caldwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Semini</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="36" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A moving least squares material point method with displacement discontinuity and two-way rigid body coupling</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pradhana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM TOG</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">150</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Application of a particle-in-cell method to solid mechanics</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sulsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-J</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Schreyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer physics communications</title>
		<imprint>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="236" to="252" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The material point method for simulating continuum materials</title>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Stomakhin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Selle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH 2016 Courses</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A material point method for snow simulation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Stomakhin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Selle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">102</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Dynamic anticrack propagation in snow</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gaume</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Herwijnen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature communications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">3047</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Drucker-prager elastoplasticity for sand animation</title>
		<author>
			<persName><forename type="first">G</forename><surname>Klár</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pradhana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">103</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A semi-implicit material point method for the continuum simulation of granular materials</title>
		<author>
			<persName><forename type="first">G</forename><surname>Daviet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bertails-Descoubes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">102</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A material point method for viscoelastic fluids, foams and sponges</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Stomakhin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kavehpour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th ACM SIGGRAPH/Eurographics Symposium on Computer Animation</title>
		<meeting>the 14th ACM SIGGRAPH/Eurographics Symposium on Computer Animation</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="157" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Anisotropic elastoplasticity for cloth, knit and hair frictional contact</title>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">152</biblScope>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A material point method for thin shells with frictional contact</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tamstorf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">147</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Animating fluid sediment mixture in particle-laden flows</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pradhana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Sifakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="149" />
			<date type="published" when="2018-07">Jul. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multi-species simulation of porous sand and water mixtures</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Tampubolon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Klár</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Museth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="105" />
			<date type="published" when="2017-07">Jul. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">An adaptive generalized interpolation material point method for simulating elastoplastic materials</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Tampubolon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Sifakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1" to="223" />
			<date type="published" when="2017-11">Nov. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Gpu optimization of material point methods</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Pradhana-Tampubolon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sifakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Cem</surname></persName>
		</author>
		<author>
			<persName><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">102</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interaction networks for learning about objects, relations and physics</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Battaglia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Pascanu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rezende</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kavukcuoglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Graph networks as learnable physics engines for inference and control</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sanchez-Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Heess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Springenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Merel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Riedmiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Hadsell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Battaglia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">End-to-end differentiable physics for learning and control</title>
		<author>
			<persName><forename type="first">F</forename><surname>De Avila Belbute-Peres</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Allen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Z</forename><surname>Kolter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Differentiable physics and stable modes for tool-use and manipulation planning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Toussaint</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Allen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<editor>RSS</editor>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><surname>Schenck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fox</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1806.06094</idno>
		<title level="m">Spnets: Differentiable fluid dynamics for deep neural networks</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Position based fluids</title>
		<author>
			<persName><forename type="first">M</forename><surname>Macklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Müller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">104</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The affine particle-in-cell method</title>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Selle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Stomakhin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans Graph</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="51" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Artificial muscles based on polypyrrole actuators with large strain and stress induced electrically</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Takashima</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kaneto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Polymer journal</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">151</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Taichi: An open-source computer graphics library</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1804.09293</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Unified particle physics for real-time applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Macklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Chentanez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-Y</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">153</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wolski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Klimov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1707.06347</idno>
		<title level="m">Proximal policy optimization algorithms</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">The nlopt nonlinear-optimization package</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A temporally adaptive material point method with regional time stepping</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-M</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer graphics forum</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
