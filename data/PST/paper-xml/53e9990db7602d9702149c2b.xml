<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Maximum and comparison of &amp;Shortest Paths Flow Routing for Network Facility Restoration</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">D</forename><forename type="middle">Anthony</forename><surname>Dunn</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">TR Labs</orgName>
								<orgName type="institution">University of Alberta</orgName>
								<address>
									<settlement>Edmonton</settlement>
									<region>Alberta</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Senior Member, ZEEE</roleName><forename type="first">Wayne</forename><forename type="middle">D</forename><surname>Grover</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">TR Labs</orgName>
								<orgName type="institution">University of Alberta</orgName>
								<address>
									<settlement>Edmonton</settlement>
									<region>Alberta</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Member, ZEEE</roleName><forename type="first">Mike</forename><forename type="middle">H</forename><surname>Macgregor</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">TR Labs</orgName>
								<orgName type="institution">University of Alberta</orgName>
								<address>
									<settlement>Edmonton</settlement>
									<region>Alberta</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Maximum and comparison of &amp;Shortest Paths Flow Routing for Network Facility Restoration</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A76DC827B6E5750D7B8EB28A1E9D54E2</idno>
					<note type="submission">received July 10, 1992; revised February 15, 1993.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In the development of technologies for span failure restoration, a question arises about the restoration rerouting characteristics to be specified. In theory, maximal rerouting capacity is obtained with a maximum flow (Max Flow) criterion. However, rerouting that realizes the k-successively shortest link disjoint paths (KSP) may be faster, easier, and, in distributed implementation, more robust than a distributed counterpart for Max Flow. The issue is, therefore, what the restoration capacity penalty is if KSP is used instead of Max Flow. To explore this tradeoff, we present a comparative study of the effectiveness of KSP versus Max Flow as an alternative rerouting criteria in the context of transport network span restoration. The comparison applies to both centrally controlled and distributed restoration systems. Study methods include exhaustive span failure experiments on a range of network models, and parametric and analytical investigations for insight into the factors resulting in KSP versus Max Flow differences. The main finding is that KSP restoration capacity is more than 99.9% of that from Max Flow in typical network models. The hypothesis is made that a generalized "trap" topology is responsible for all KSP-Max Flow capacity differences. The hypothesis is tested experimentally and used to develop analytical bounds which agree well with observed results. These findings and data are relevant to standards makers and equipment developers in specifying and engineering future restorable networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>A . Background and Motivation NE of the issues associated with service survivability in 0 the face of physical damage to interoffice transmission facilities is the choice of a criterion for restoration rerouting. The issue is motivated by the recent development of distributed protocols for control of digital cross-connect systems (DCS) for network restoration [ I]-[5], but is equally applicable to centralized control strategies. Most distributed restoration schemes will result in a set of restoration paths equivalent to the k-successively shortest link disjoint paths in a multigraph [6]. This consists of a path set that is equivalent to finding the shortest alternate path, then the second shortest alternate path that is link disjoint with the first, and so on. For brevity, this routing characteristic is referred to as KSP. KSP is easily implemented for centralized restoration by single-processor computation in O( n log n ) time complexity.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>It is known, however, that KSP may not always find all the paths found by the more global routing criterion known as maximum flow (Max Flow). However, Max Flow is computationally more complex ( 0 ( n 3 ) )</p><p>than KSP, and this implies inherently longer execution times for either centralized or distributed implementations of Max Flow compared to KSP. At present, technology for distributed KSP, such as in <ref type="bibr">[4]</ref>, is also more developed than technology for distributed Max Flow. One study of a distributed approach to Max Flow <ref type="bibr">[7]</ref> resulted in variable convergence characteristics and required up-to-date tables at the nodes to assist the protocol. Hence, there is a tradeoff in technology choices: KSP is simpler to implement, but is not strictly optimal in terms of finding the maximal number of paths in all possible networks. The question, therefore, arises for either centralized or distributed implementation: how often would differences between KSP and Max Flow occur in span restoration for typical transport networks? This is an issue for the technology planner because specification of Max Flow characteristics may increase cost and complexity, and may not match the speed and simplicity of a network embodying KSP survivability criteria. The results will determine whether the extra development needed for Max Flow restoration is motivated by an effective advantage or whether KSP will suffice. This paper provides data for developers and planners to consider this choice. The scope of this analysis is restricted to span restoration, which is an important component of overall network restoration strategies. Further work is required to apply these results to node recovery or path restoration techniques, but the methods for such studies would be similar to those employed here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Outline</head><p>We first illustrate the generalized circumstances under which Max Flow and KSP differ and, in Section 111, present results of an initial trial of each algorithm on 15 network models which approximate real transport network characteristics. This experimental comparison shows an extremely small difference: KSP resulted in only four paths fewer in 14,197 paths found. Because this difference is so small, we go on to validate the result and analytically confirm the experimental finding. To do so, Section IV considers the network factors that influence creation of the topology where a difference arises in terms of the network average node degree and locality (to be defined) of the random test networks. Section V provides further confirmation of the result by developing bounds for the probability of formation of the key topology. Analytic and parametric studies both corroborate the main finding: considerablv more overprovisioned spare capacity is inevitable, there would be no significant penalty to network restorability from using KSP as opposed to Max Flow rerouting in a span-restorable network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">CONCEPTS AND METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Terminology</head><p>We refer to a spun as the collection of all point-to-point DS-3, STS-1, or STS-n links, working and spare, in parallel between two DCS nodes. A working link is any link (individual DS-3, STS-1, or STS-n) that is part of a path bearing live traffic. A spare link (or "spare") is an equipped-but-idle DS-3 or STS-1 link terminated on the DCS. The physical transmission rate that corresponds to the logical link entity in this work is the rate at which the DCS nodes support signal rearrangement for restoration. The spare capacity (or capaci9) of a span is the number of spare links on the span. A restoration path (or path) is an end-to-end concatenation of spare links through the surviving portion of the network between two failure nodes which logically substitutes for one failed working link. A route is the sequence of spans followed by a path.</p><p>We consider span restoration as opposed to path restoration in this study. In span restoration, the aim is to provide logical replacement path segments between the nodes directly adjacent to the failure. In path restoration, each network demand affected by a span failure is individually rerouted from its originating source to its final destination. Span restoration is less complex and theoretically faster than optimum path restoration, although the latter will be more capacity efficient. Whether span or path restoration is ultimately deployed, we view the understanding of KSP versus Max Flow for span restoration as an essential step in developing a theory for restorable networks. These results will not transfer directly to the path restorable network context because the adjacency of the end nodes in span restoration prior to failure is relevant to the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. The Trap Topology</head><p>Fig. <ref type="figure" target="#fig_0">1</ref> is a generalized representation of a particular topology relative to some failed span. This topology has the potential to result in a KSP-Max Flow path number difference, i.e., Max Flow may find more paths than KSP. For this reason, we call it, in generalized form, the "trap" topology. The "trap" notion arises because KSP may make a first path choice that results in fewer total paths. Fig. <ref type="figure" target="#fig_0">1</ref> illustrates the principle by which KSP and Max Flow results come to differ. Later, we base our analytical treatment on the hypothesis that all differences arise from a span topology that is equivalent to Fig. <ref type="figure" target="#fig_0">1</ref>. The generalization in Fig. <ref type="figure" target="#fig_0">1</ref> is indicated by the broken lines on the spans between nodes. HL3 denotes the logical length of the shortest route that exists in the network between nodes i and j (i.e., the number of spans on the route), which is span disjoint with respect to all other paths of Fig. <ref type="figure" target="#fig_0">1</ref>. The simplest manifestation of the trap topology occurs when Ht3 = 1 for all 2.j. In this case, a single span joins nodes i and j . We refer to this particular manifestation of the trap topology as the "first-order" trap topology.</p><p>Max Flow will realize more paths than KSP when KSP selects a short path which blocks other potential paths. In Fig. <ref type="figure" target="#fig_0">1</ref>, at most two link-disjoint paths exist between nodes 1 and 4. One path is 1-5-3-4, and the other is 1-2-6-4. However, if path 1-2-3-4 is selected first, then only one link disjoint can be created from nodes 1 to 4. The problem is that by taking the shortest path (1-2-3-4) first, the capacity on (1-2) and (3-4) needed to form two longer alternative routes (1-5-3-4) and (1-2-6-4) is unavailable. In contrast, Max Flow is assured of finding two paths. For KSP, however, the number of paths found depends on the relative lengths of each of the three paths or, where the lengths are equal, on the order in which paths are selected. In the general case, the total length of each of the paths is Because KSP claims links on the shortest paths first, KSP is guaranteed to realize one less path than Max Flow whenever If either (H1234 = H1534) or (I31234 = H1264) is true, then it is possible, but not guaranteed, for KSP to result in the optimal solution. In such a case, all first-path choices are equally likely. Whether or not a KSP-Max Flow difference arises then depends on the internal order of execution in the KSP algorithm as to which path is selected first.</p><p>Fig. <ref type="figure" target="#fig_0">1</ref> also illustrates that the comparison between KSP and Max Flow is specific to the span restoration context: rerouting is always between two nodes that were directly connected prior to the span failure. We can expect this to be different from a comparison of KSP and Max Flow on a generalized all-pairs node selection basis or for path restoration. Fig. <ref type="figure" target="#fig_0">1</ref> also gives a first indication that the trap topology may be relatively rare: It requires a specific combination of relative route lengths and span capacities among seven different routes while simultaneously requiring that many other route segments, which would shunt the topology, are not present. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Implementation of KSP and Max Flow for Comparison</head><p>The KSP routine we used for comparative tests is based on iteration of Dijkstra's shortest path algorithm [8] to find restoration paths for the failed working links via surviving spare links on other spans of the network. Once a restoration path is found, the spare links which make it up are removed from the network description. Dijkstra's method is then repeated to find the next restoration path. This "iterated Dijkstra" finds some number IC of link disjoint paths through the network. At iteration k + 1. the routine will fail to find any additional paths. Execution halts and the number of restoration paths is recorded. The classical Dijkstra algorithm is O ( N 2 ) ; but we use a binary min-heap to reduce this to O ( N l o g N ) ,</p><p>where N is the number of nodes in the network. Several other improvements were made to speed the iterated execution of Dijkstra's basic algorithm for KSP applications. These include taking advantage of the multigraph nature of the problem to identify all individual paths which share a common route at one time rather than iterating for them. A full description of the optimized KSP algorithms is in <ref type="bibr">[9]</ref>.</p><p>The Max Flow algorithm we used is described in Hu</p><p>[lo] and can be used on networks with integer or real link capacities. Prior to use in the comparisons against KSP, our Max Flow implementation was validated by testing against another independent implementation of Max Flow by Skiena [ 111. The Max Flow algorithm runs in 0 ( N 3 ) operations to evaluate the maximal feasible flow. Further operations are required to identify the path set that realizes this flow for actual restoration. For comparative purposes, it is sufficient to obtain the maximal flow value as the target against which to compare the number of paths found by KSP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Test Networks</head><p>Random networks for comparative routing experiments were synthesized algorithmically. In order to generate random networks which are more representative of real-world transport networks than purely random graphs, a method to generate random but plausible transport network models was devised. In this model, a transport network is described by four characteristics: number of nodes ( N ) ~ topological locality ( L ) , network average node degree <ref type="bibr">(D)</ref>, and capacity of each span in the network. In a subset of test networks (those in Sections I11 and IV-A), the statistical distribution of individual node degrees was also tailored to reflect that found in published network models <ref type="bibr">[3]</ref>, [6].</p><p>Topological locality is a parameter we use in the synthesis of random networks which controls the propensity for spans above a given Euclidean length L to link distant nodes which are not neighbors in grid space. Locality is measured in "grid units" and limits the maximum length of a span in terms of Euclidean distance when the nodes are placed in a regular (arbitrary) grid. Thus, a span between two horizontally or vertically adjacent nodes is 1 grid unit long. A span between nodes that are diagonal neighbors in grid space is fi units long. Locality can be thought of as a measure of the degree to which the network is nonplanar. For example, L 5 1 implies that the network is strictly planar, while L -+ 00 implies totally unrestricted span formation between any pair of nodes with no greater tendency for a node to be directly connected to a neighboring site than to a site at the opposite end of the network. Fig. <ref type="figure" target="#fig_1">2</ref> illustrates locality differences in two of the networks synthesized for the study, each with 50 nodes. The first was synthesized with L = 1, the second with L = 5.</p><p>The network average node degree is the average number of other nodes in the network to which individual nodes are connected, which is also equal to the average number of spans at each node. It is defined as follows:</p><p>( 5 ) where S is the number of spans in the network, N is the number of nodes in the network, and Di is the degree of node i. Fig. <ref type="figure" target="#fig_2">3</ref> illustrates two networks of approximately 50 nodes with different D. The first has = 2.9; the second has D = 5.</p><p>The random networks were synthesized with parametrically varying locality to realize a desired number of nodes. Furthermore, these networks also approximate a specified distribution of individual node degrees. The target distribution of node degree was based on published examples of real transport networks [3], [6]. This histogram of average observed node degrees is shown in Fig. <ref type="figure">4(a)</ref>. Briefly, the overall strategy to create the test networks for the study was as follows.</p><p>1. Scatter a target number of nodes randomly on a regular grid. 2. Visit each node in a "round robin" order. At each node: a. Select a point at a radius defined by the locality parameter ( L ) and at a random angle (uniformly distributed on 360') from the current node. Snap the end point of this line to the closest point on the grid that is populated by a node. Propose that a span be formed between this node and the current node.</p><p>b. If addition of the proposed span does not cause failure to match the target statistical frequencies of the D; distribution, add the span to the network.</p><p>Otherwise, reject the proposed span.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head><p>Iterate 2) until all bins of the target histogram of node degree are within a stopping criterion of the target vector of statistical frequencies of node degree for the network. 4. Remove any singly connected and disconnected nodes from the final test network description, so that an inherently restorable network is the result. Because, after throwing the initial radius at a random angle, the end point is snapped to the closest (Euclidean distance) point in the synthesis grid that is populated by a node, some spans may be longer than the radius dictated by the locality parameter, depending on how the nodes were initially scattered in the synthesis grid.</p><p>This technique was used to synthesize an initial library of 15 networks having from 9 to 301 nodes. In our view, the random networks generated this way were most similar to published transport networks when L = 1.4 and 3 &lt; &lt; 4.</p><p>The average node degree for networks with the D; distribution was assigned a capacity of 1 to 5 spare links from a uniform random distribution. In a fully populated grid, L = 1.4 permits vertical, horizontal, and diagonal spans between neighbors in grid space. In a partially populated grid such as in Fig. <ref type="figure" target="#fig_2">3</ref>, the snapping effect outlined produces longer spans in those regions of the gnd which are sparsely populated. An illustrative sample of these algorithmically generated networks is shown in Fig.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4(b)</head><p>. A report and source code for this method are available in <ref type="bibr">[12]</ref>.</p><formula xml:id="formula_0">111. INITIAL EXPERIMENTAL RESULTS ( L = f i , D = 3.4)</formula><p>Comparison of Max Flow and KSP was made for the first 15 test networks by recording the number of restoration paths found in response to failing each span in the network one at a time. In this way, we exhaustively tested all single span failures and recorded the routing responses of the KSP and Max Flow algorithms. Each algorithm ran until all restoration paths which were possible by the method are found without time limitations-i.e., the demand for restoration paths is effectively infinite for these comparisons. The number of restoration paths found is limited, therefore, only by the restoration routing criterion and the topology of the network. No restriction is placed on the length of a restoration path although it must be loop free; this is a property that both algorithms provide.</p><p>Table <ref type="table">I</ref> summarizes three figures of merit recorded for the initial comparative tests of KSP and Max Flow. The primary figure of merit is the total number of restoration paths found. P,,, is the total number of paths found by Max Flow and Pk is the total number found by KSP in response to all possible spancuts. "Total path length" (TPL) is the sum of the logical lengths of all the restoration paths found for any particular network by each method. This is of interest to see if either method tends to produce significantly longer paths. The "total distinct nodes" (TDN) for an individual span cut is the number of unique nodes used in the restoration'path set. To illustrate TDN, consider a failed span in an arbitrary network having only two working links affected by the cut. Suppose that the first restoration path traverses nodes a , b, c, and d, and the second path traverses nodes a , b , s , and d. Then, the TDN of the routing patterns is 5 (i.e., a, b, c, d, x), recognizing that some nodes participate in the realization of both restoration paths. In Table <ref type="table">I</ref>, the sum of all TDN's for individual span failures is given.</p><p>TDN is of interest as a figure of merit which reflects the tendency to distribute the restoration work load over the DCS nodes of the network. Particularly in centralized restoration, it may be desirable to minimize the number of distinct nodes involved in a given restoration event if telemetry (command) delays dominate cross-point delay because this minimizes the time to issue all command sets to implement the complete restoration plan. On the other hand, a high TDN would be preferable if the time to implement individual cross connections dominates over command download times The Max Flow algorithm provided 14,197 paths to restore these failures. Only four fewer paths were found using KSP in this sample set of networks. In 13 of the 15 networks, there was no difference in path number at all, the four difference cases occurring in just two specific networks (marked * in Table <ref type="table">I</ref>). To the extent that the test networks are topologically similar to real transport networks, this suggests that KSP finds nearly all feasible restoration paths, in this case 99.97% of them.</p><p>Table <ref type="table">I</ref> shows that Max Flow and KSP also return nearly identical results in terms of length of the routing solutions.</p><p>The differences are less than &amp;0.5%, with Max Flow tending to be longer. This is consistent with the basic observation in Fig. <ref type="figure" target="#fig_0">1</ref> and<ref type="figure">(4</ref>) that for Max Flow to do better than KSP on path number, it must be via longer paths. There are, however, four networks where KSP returns higher total path length than Max Flow even though the number of restorations paths is identical. This is due to a characteristic of the KSP algorithm whereby an early restoration path claims facilities which could be used by later paths. This can require the later paths to be longer than if an alternate (and not necessarily shorter) early path was chosen. The algorithms are not significantly different in TDN, although Max Flow tended to result in slightly more compact restoration patterns in the sample set.</p><p>Because the experimental difference in the primary test networks is so small (four paths in 14,197), we corroborate the result with a parametric study (Section IV) of relevant topological factors and with a bounding-oriented analytical model (Section V). Both of these also confirm the primary conclusion. The role of these secondary studies is to provide a further check and understanding of the primary empirical finding that the KSP-Max Flow difference is apparently so small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXPERIMENTAL RESULTS WITH</head><p>PARAMETRIC VARIATION OF L AND D</p><p>We now consider parametric variation of L , D, and relative span capacities to see how these factors may make a network more or less likely to manifest a difference between KSP and Max Flow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Effects of Vaiying Topological Locality at Constant Network Average Node Degree</head><p>The test networks used in Section I11 were synthesized with L = 1.4. This meant that spans would predominantly form between nodes which were immediate geographical neighbors, with fewer connections outside of the immediate neighborhood. We now consider the effects of systematically increasing the locality to see if this significantly affects the results of the primary experimental finding.</p><p>To do this, a second larger library of test networks was synthesized. For each network, 50 nodes were placed at random on a regular grid and the previous basic procedure was used for proposal of a new span from the current node to another node, within a certain locality. However, to vary locality, the basic method is modified as follows. A span is proposed by selecting the node closest in Euclidean distance to a point at a random radius and a random angle from the first. As before, the span is added only if creating this span does not violate the target distribution for node degree (D = 3.4).</p><p>The angle is uniformly distributed on 360" but now the radius is also a uniform random variable on [0.7. . . L], where L is the locality value guiding construction of the network under synthesis. The maximum radius L was then varied from 0.7 to 7 grid units in steps of 0.15 to generate a series of random networks of varying locality with constant nominal network average node degree. Note that L less than 1 is still meaningful in this synthesis approach because, after throwing the initial radius at a random angle, the end point is snapped to the closest point in the synthesis grid that is populated by a node as described in Section 11-D. The spare capacity of each span is set to unity so that all spans have an arbitrary but equal capacity.</p><p>The path number results for this second set of networks (varying L. constant B) are given in Table <ref type="table">11</ref>. This table</p><p>shows that changing the topological locality of spans in a network has only a small effect on the relative performance of the Max Flow and KSP algorithms. The data does, however, show that the greatest propensity for a difference is in the range (2.8 &lt; L &lt; 4.8). Six of the eight cases where a difference arises are in this middle range of locality. It might have been reasoned a priori that with higher locality there is greater scope for nonplanar span creation, so the trap topology could be exDected to be more likelv to form at high localitv. However, the results are to the contrary: there are more cases of differences at the medium locality than at the extremes. This is explainable by "short circuiting" the trap topology, a concept we introduce in Section V. In the two worst cases observed ( L = 4.3 and L = 4.6), KSP finds 99.35% and 98.68% of the feasible paths available for restoration. Inspection of all eight cases where a difference arose confirmed that the difference was attributable to a manifestation of the general trap topology shown in Fig. <ref type="figure" target="#fig_0">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B . Joint Variation of Network Locality and Network Average Node Degree</head><p>A somewhat different technique was used to generate a samule mace of test networks for exueriments in which Using this procedure, a two-dimensional sample space of networks varying both in L and was produced by changing locality in steps of 0.5 from 0.5 to 7.5 grid units while producing a range of networks of varying as above. At each locality value, roughly 25 test networks were generated, each network characterized by a unique L, D combination. Fig. <ref type="figure">5</ref> shows this complete sample space of test networks. All networks were uniformly dimensioned to 1 spare link per span as this avoids masking of trap effects by mismatched capacities (Section IV-C).</p><p>Max Flow and KSP were again run on each of the networks of Fig. <ref type="figure">5</ref> for all possible span failures in each network. The networks where a path number difference arose in the solutions are annotated in Fig. <ref type="figure">5</ref> with the number of fewer paths found by KSP. In the two cases where the total path number ' This implies that at low average node degree, networks may have fewer than 50 surviving nodes after disconnected and singly connected nodes are removed. Where this occurs, it is noted in Fig. <ref type="figure">5</ref>.</p><p>difference is greater than 1, inspection showed that in each case it was due to different spans in the same network. There was no case where any individual span restoration lacked more than a single path.</p><p>Fig. <ref type="figure">5</ref> represents a total of 392 networks composed of a total of 18,417 nodes and 67,150 spans. Over all span cuts, Max Flow found 439,578 paths in total and KSP found 439,563 for a difference of 15 paths over the whole sample space (0.0034%). The frequency of experimental differences is greatest for network average node degree between 2.6 and 4.4, in combination with locality in the 1 to 4 range. The analytical treatment in Section V gives some theoretical basis to explain why the path number difference peaks selectively for 2.6 &lt; &lt; 4.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Random Span Capacity Effects</head><p>The relative number of links on each span of the first-order trap topology in Fig. <ref type="figure" target="#fig_0">1</ref> also influences whether or not a path number difference will arise between KSP and Max Flow. Consider one link per span in Fig. <ref type="figure" target="#fig_0">1</ref>: if the path 1-2-3-4 is selected first, only one link-disjoint path can be formed between nodes 1 and 4. If each span in the network has a random number of spare links, then it may still be possible to construct additional restoration paths even if all paths along 1- 2-3-4 have been chosen. That is to say that different capacities of each span can interact to mask the trap topology. Two experiments were designed to assess the effect of random span capacities on the path number difference in the trap topology. First, let each span in the firstorder trap topology (Hij = lVi,j) be assigned a random capacity, and denote the resulting multigraph as G. Then, define G { q , r 2 , . . . , T,} as a modified network graph where { T ~, T ~, . . . , T -~} (if T ~, T ~, . . . , T , # 4) is an ordered set indicating that the capacity to form all paths along route T I has been removed from the network followed by removing the capacity to form all paths along route 7-2 given the prior removals for rl, etc. until the capacity for all paths along route rn has been removed in the order implied.P,, [ { T I , r2, . . . , r,}] then denotes the number of paths feasible along route rz(rz {rl, 7-2, . . . , T ~} ) in the modified graph. In these terms, it is possible to give relations for the order-dependent number of paths that each algorithm would find in Fig. <ref type="figure" target="#fig_0">1</ref>. For the Max Flow case,</p><formula xml:id="formula_1">pm = Pi534[G{}] + Pi264[G{1534}] + Pi234[G{1534,1264}] (6)</formula><p>where P, is the number of paths the Max Flow algorithm would find in the isolated trap topology. For the KSP case, a worst-case view of its path-finding ability is (7) pk = min(Pk1, pk2, p k 3 , pk4, P k 5 , p k 6 ) where are removed from the network description before the search for the next path begins in KSP. With random span capacities, many spans on a restoration route will still have facilities available for future paths to use. Only a few spans will have their capacity exhausted and be removed from the network after a restoration route is identified. Consequently, as the number of available links on the remaining spans decreases, it is possible for the region of the network near the failed span to degenerate to an effective manifestation of the trap topology even if the trap is not present in the pure span topology of the network due to "short circuiting" (Section V) by other spans. Thus, while random span capacities primarily tend to defeat the trap topology, occasionally they can introduce path number differences which would not exist with unit span capacities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>v. ANALYTICAL BOUNDS FOR OCCURRENCE OF THE TRAP TOPOLOGY</head><p>+ P1234[G{1534,1264}] ( <ref type="formula">12</ref>)</p><formula xml:id="formula_2">4 6 =p1534[G{}] + P1234[G(1534}]</formula><p>In this section, we present some mathematical reasoning to establish insight into the experimental results. Several (13) + P1264 <ref type="bibr">[G{ 1534,1234}]</ref> where P k is the number of paths found by KSP in the isolated trap topology (Fig. <ref type="figure" target="#fig_0">1</ref>). Because all paths are equal in length, all path choices are equally likely and so each of the possible sequences in which they may be claimed by KSP [( <ref type="formula">8</ref>)-( <ref type="formula">13</ref>)] is equally likely. Because (7) takes the minimum of ( <ref type="formula">8</ref>)-( <ref type="formula">13</ref>), the case where the fewest paths found by KSP is returned. Thus, ( <ref type="formula">7</ref>) is addressing the worst-case KSP results.</p><p>These relations for P k and P, can be used to obtain a quantitative estimate of the fraction of all span capacity permutations which will mask the trap, that is where P, = P k in spite of the trap topology. Using ( <ref type="formula">6</ref>), (7), the fraction of all random assignments of span capacities that leads to a path number difference in the trap was estimated by a Monte-Carlo approach. Uniform random span capacities in [ I . . .loo] were assigned to each span in 10,000 trials. The result was that, in 63% of the trials, P, = p k . In other words, 63% of the time that a trap topology is present, the relative capacities of each span would defeat it. The importance of this is that the trap has its worst-case effects when all capacities are equal. This leads us to predict that, in general networks, the KSP-Max Flow path difference should be reduced when span capacities are random as opposed to uniform.</p><p>To test this prediction, a set of networks was synthesized as in Section IV-B to populate a sample space similar to Fig. <ref type="figure">5</ref> , except that each span of these networks was assigned a random whole number capacity between 1 and 5. KSP and Max Flow were run on each network for all possible span failures. The results were compared to those of the previous section where each span had unit capacity. Table <ref type="table" target="#tab_1">I11</ref> summarizes the results and confirms that nonuniform span capacities tend to result in KSP solutions which are closer to Max Flow than when all spans have equal capacity. Unit span capacities are, therefore, the worst case for manifesting a path number difference due to the trap. Inspection of those cases where a path number difference occurred revealed another effect of random capacity. With unit capacity spans, a restoration path claims all of the facilities along the route that it takes, and hence all spans along that path assumptions are necessary to facilitate model development. First, the model to follow is only valiu near the center of large networks. Effects due to edges of the network are ignored. As well, all spans are assumed to have unit capacity. We know from Section IV-C that this is a worst case for generating KSP -Max Flow differences. Analysis is based on the hypothesis that all observed discrepancies are attributable to the "firstorder trap" topology shown in Fig. <ref type="figure" target="#fig_0">1</ref>. Thus, the model will predict only a subset of all higher-order topology abstractions. For analysis, we also allow spans to exist only between a node and its eight immediate neighbors in grid space ( L 5 a).</p><p>An eight-point neighboring grid-based analysis is also adopted as a reasonable approximation for analytical modeling. Real networks do not have discrete node positions but, on the other hand, typically have much less than 8 and so the eight-position grid is reasonable to model the topological interactions that actually arise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Probability of First-Order Trap Topology</head><p>Define a as the probability that a span exists between any two given nodes in a network. In the specific case of an eight-point neighboring grid approximation,</p><formula xml:id="formula_3">- D 8 a = -.</formula><p>The probability of the first-order trap topology with a given set of seven links existing precisely as required between the nodes of the trap, without yet specifying anything about other (possibly "short circuiting") spans, that should not exist if the trap is to be effective is trap], = a7.</p><p>(15)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. "Short Circuiting" the Trap</head><p>In Section IV-B, we saw that increasing the network average node degree of a network from an initial value of 2 led to an experiment increase in path number differences between KSP and Max Flow in the region (2 &lt; D &lt; 4). But, as the h Fig. <ref type="figure">6</ref>. Two examples of "short circuiting" in the first-order trap topology. network average node degree was further increased above 4.4, no path number differences were observed even though (15) indicates that the likelihood that the spans required to form the trap exist becomes higher. The reason that increasing D causes KSP and Max Flow results to again converge is a "short circuiting" effect which counteracts (15): Short circuiting can be illustrated with two examples in Fig. <ref type="figure">6</ref>. Fig. <ref type="figure">6(a)</ref> shows the first-order trap topology with an additional span arbitrarily placed between nodes 2 and 5. The addition of the span does not increase the minimum cut of the network so there are still at most two link disjoint paths between nodes 1 and 4. However, now, even if KSP chooses path 1-2-3-4 first, a second link disjoint path will be found on path 1-5-2-6-4. In this way, the existence of span 2-5 has "short circuited" the trap. Fig. <ref type="figure">6(b</ref>) similarly shows the addition of span between nodes 4 and 5 . The shortest path is now 1-5-4, which leaves either 1-2-3-4 or 1-2-6-4 as the second path, and there is no path number loss. It can be shown that the addition of any of the seven spans not required to form the trap will, in fact, short circuit the deleterious effect which the trap topology presents to KSP. Now, if the trap topology is considered to arise randomly within any network, the situation is more general in that an entire path could exist between two nodes where a short-circuit span can be added to Fig. <ref type="figure" target="#fig_0">1</ref> which is disjoint with the spans required to form the trap. This has the same ability to short circuit the trap topology. Thus, as the network average node degree increases, the probability of forming the trap increases as does the probability that a short-circuit path or span exists, defeating the effect of a trap if it exists. Because spans are only permitted between a node and its eight nearest neighbors, the probability that any given path segment of length H exists between any two nodes is where PShortest is the length of the shortest path between the two nodes and scp is the event of a short-circuit path between two nodes.</p><p>With the locality constrained to L 5 a, the trap can only be realized in three different basic constructions. These are shown in Fig. <ref type="figure" target="#fig_4">7</ref> and discussed further in Section V-C. In each construction, we have identified all pairs of nodes between which short-circuiting paths will defeat the trap. For The number of potential paths between a given node pair with path length less than a certain length may be determined using a depth-first search strategy considering that every possible nearest neighbor connection may exist with probability a but ensuring that the path is disjoint with the spans which form the first-order trap. For all potential short-circuiting node pairs in each of the three constructions in Fig. <ref type="figure" target="#fig_4">7</ref>, the number of shortcircuiting paths of a given length up to a maximum of length 5 was found by such a search and is shown in Table <ref type="table" target="#tab_5">IV</ref>. As counted, many of these paths intersect each other. They are, therefore, not all statistically independent. We want the probability that any one of these paths exist thereby short-circuiting the trap, i.e., the probability of the union of all paths:  </p><formula xml:id="formula_4">X ( j , i ) X ( j ,</formula><formula xml:id="formula_5">= 3 # Paths Path Length 1 3 2 2 2 5 4 4 3 1 2 2 4 1 2 2 5 2 3 3 j = 1 # Paths j = 2 # Paths</formula><p>of two paths, addition of the intersection probabilities for all choices of three paths, etc. Unfortunately, the total number of paths under consideration (see Table <ref type="table" target="#tab_5">IV</ref>) is large enough to make exact evaluation infeasible. We can, however, establish upper and lower bounds on the probability of a short-circuiting path. If all possible short-circuiting paths were independent, then (17) would become: This leads to an upper bound on short-circuiting probability by considering all paths in Table IV as if they were independent, even though this is not the case. Clearly, <ref type="bibr">(18)</ref> with this data set for X ( j , H ) is an upper bound on the actual probability of a short-circuiting path because of possible intersections among the paths. Conversely, to generate a lower bound, we can exactly determine the number of nonintersecting paths which exist for a given construction. These are listed in Table <ref type="table" target="#tab_5">V</ref>. This is only a subset of all possible paths, but there are at least this many paths. Using (18) with this data for X ( j , H ) will underestimate the probability of a shortcircuiting path because the existence of many paths which intersect the set of independent paths is not considered. To summarize and illustrate, the calculation for the upper and lower short-circuiting probability bounds for construction #1 of Fig. <ref type="figure" target="#fig_4">7</ref> with H m a x = 5 is Upper and lower bound probabilities for constructions #2 and #3 are constructed similarly from (18) with Tables <ref type="table" target="#tab_5">IV</ref> and<ref type="table" target="#tab_5">V</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C . Number of Ways to Form the First-Order Trap Topology</head><p>Fig. <ref type="figure" target="#fig_4">7</ref> shows the possible constructions of the first-order trap. Each "X" shows a span for which a trap exists between the two disconnected nodes if that span fails. By symmetry, there are eight ways a trap may form around a horizontal, vertical, or diagonal span failure for construction #1. There are four for construction #2 and four for construction #3. Also, any span in the network can play the role of the failed span in Fig. <ref type="figure" target="#fig_4">7</ref>. Therefore, over all span failures, the number of trials for trap formation is 8 . S from construction #I, 4 . S from construction #2, and 4 . S from construction #3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Expected Number of Occurrences of the First-Order Trap in a Network</head><p>Now, we combine the considerations of trap formation and upper and lower bounds on short-circuiting to estimate the expected number of effective traps in a 50-node network. Fifty nodes allows comparison to the experimental results. Given a network of 50 nodes, the probability of the trap existing (15), the upper and lower bound probabilities short-circuiting paths for each construction (1 8), and the number of ways the trap topology could exist in relation to all possible span failures, lower and upper bounds for the expected number of effective first-order traps in the network combines to be:</p><formula xml:id="formula_6">E [Effective Trap] &amp; , ~, l = (S)(P[Trap]CY) {8(1 -P[scPla,j=l,u) + 4(1 -p[scp],,j=2,u) + 4(1 -~[SCP],,j=S,u)X21) = (S)(P[Trap]a) {8(1 -P[SCPla,j=l,l) E[Effective trap],,^,^ + 4(1 -P[scp]a,j=2~) + 4(1 -P[scp],,j=3,1)}.(22)</formula><p>Note the upper bound probabilities for the existence of any short-circuit path are used in the calculation of the lower bound for the expected number of effective traps and vice versa. This is because the short-circuiting paths must not exist for the trap to be effective, i.e., (1 -P[scp]). Hence, the lower bound for the probability that any short-circuiting paths exist is the upper bound for the probability that all short-circuiting paths simultaneously do not exist. From (3, we can express S , the number of spans, in terms of N and 0:</p><formula xml:id="formula_7">(23) Ni7 s = - 2 .</formula><p>For the eight-point neighbor grid approximation, cr is given by ( <ref type="formula">14</ref>). Using ( <ref type="formula">23</ref>) with N = 50 and ( <ref type="formula">14</ref>), ( <ref type="formula">21</ref>) and ( <ref type="formula">22</ref>) can be expressed as functions of 0. A plot of ( <ref type="formula">21</ref>) and ( <ref type="formula">22</ref>) for Hma, = 3 , 4 , 5 is given in Fig. <ref type="figure" target="#fig_7">8</ref> where E is varied from 0 to 8. The expected number of short-circuit free traps is a good indicator of the tendency for KSP to be less than Max Flow because each trap causes a single path number difference. When more than one trap exists for a given span failure, there are two possibilities. One possibility is that the intersection among common spans of the traps is such that both traps will cause a path number difference and, hence, will both be counted. The other possibility is that the intersection of common spans causes a short-circuit event for both traps, in the number of them grows exponentially (until restricted by the number of nodes in the network). Because we assumed all paths were independent, the bound greatly overestimates the effect of short circuiting. Even though the analysis is approximate, the behavior of all upper and lower bounds on either side of the experimental results suggests that the fundamental elements of the analytical model (i.e., formation and short circuiting of the trap topology) are essentially correct. This offers insight as to why the path number difference is small and behaves the way it does. In summary, the insights from the analytical model are as follows.</p><p>1) The first-order trap requires coordination of seven particular spans relative to the failed span. This alone makes for relatively small formation probabilities in realistic networks which case both traps are short circuited. It is not possible for one trap to short circuit another and not have this effect reciprocated.</p><p>The shape of the curve in Fig. <ref type="figure" target="#fig_7">8</ref> is consistent with the experimental observations. There is a band of where the potential for the Max Flow and KSP solutions to differ reaches a peak. The values of D where each theoretical bounding curve reaches its peak are presented in Table VI. In the experiments in Fig. <ref type="figure">5</ref>, the band of D where path number differences were observed is approximately ( 2 &lt; D &lt; 5) with the greatest number observed near b = 3.4. Over this band (at L 5 1.4), we observed one trap in 17 networks which corresponds to roughly six traps per 100 networks. Table VI also lists the integrated expectation from each of these curves for the same region, and the expected number of effective traps per 100 networks that this indicates. From Table VI, the experimental result of six traps per 100 networks is less than the lower bound of the expected number of effective traps when H, , , = 3. This is because the effect that short circuiting has on the traps is not adequately reflected when potential short-circuiting paths of length 3 and less are considered.</p><p>The experimental result does fall within the upper and lower expectation bounds when H,, = 4. This implies that, for the range ( 2 &lt; D &lt; 5 ) , short-circuiting paths of length greater than 3 should be considered to sufficiently reflect the short-circuiting mechanism. The upper bound, E[EffectiveTrap],,s,,, is determined using the lower bound probabilities of short-circuiting paths. Because we use only a subset of all possible shortcircuiting paths, it is not unexpected that they greatly overestimate E[Effective trap],,^,,. The lower bound, ,!?[Effective trap],,^^, uses the upper bound probabilities of short-circuiting paths. As longer paths are considered, having i &lt; D &lt; 4.</p><p>2) A large number of possible paths may exist to shunt the trap and defeat its effect (short circuiting). The higher the network average node degree, the more probable it is that such a path exists.</p><p>3 ) For 50-node networks, all short-circuiting paths up to at least length 4 must be taken into account to adequately reflect the short-circuiting phenomenon. Although longer paths are less probable, there are many more ways for longer paths to form in the network and thus the contribution that these paths make for (2 &lt; &lt; 4) is not significant.</p><p>4) The probability of forming the trap and not having it short circuited is maximized at the lowest D that provides a high probability for formation of the required span set with the fewest additional short circuiting paths as a byproduct.</p><p>VI. CONCLUDING DISCUSSION From both experimental and analytical viewpoints, we have concluded that when applied to span restoration, k-shortest link disjoint paths rerouting will produce results which are very nearly equal (within 1%) to the Max Flow solution, which is optimal in terms of restoration capacity. We have also developed a theoretical line of reasoning which predicts that Max Flow and KSP will be extremely similar in the span restoration context. The experimental data is reasonably well explained by the hypothesis that path number differences are due solely to the trap topology of Fig. <ref type="figure" target="#fig_0">1</ref> in its general manifestation. This topology is relatively complex and improbable to form in networks of (2 &lt; D &lt; 4). As network average node degree increases, the trap is more likely to exist but the likelihood of short-circuiting paths that defeat the trap also increases. The result is a low absolute probability of a trap forming effectively, and it peaks in the region 2 &lt; D &lt; 4.</p><p>Based on this study, KSP should be considered a fully adequate rerouting criterion for span restoration. When typical levels of excess spare capacity arising from large module (e.g., SONET OCn ) system provisioning are considered, one would e x p e c t virtually no p e n a l t y in practice from the use of KSP for restoration as opposed to Max Flow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The reviewers' comments were quite helpful in improving the paper.  <ref type="bibr">, Edmonton, Canada, in 1991.</ref> During the summers of 1990 and 1991, he held a student research position at TRLabs investigating a variety of network restoration issues. In 1991, he received an NSERC Postgraduate Scholarship and is currently pursuing the M.Sc. degree in electrical engineering at the University of Alberta. His research is in the area of VLSI for error correction and fast framing for high-rate multiplexed signals.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Generalized "trap" topology for which KSP and Max Flow results may differ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Example networks synthesized with differing topological localities at a fixed network average node degree ( D = 3 . 5 ) . (a) L = 1. (b) L = 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Example networks synthesized with differing network average node degrees at fixed locality ( L = 1.4). (a) = 2.9. (b) = 5 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>a) is 3.4. For the initial set of 15 experimental study networks, the locality parameter was set to 1.4 and each span</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Possible constructions of the first-order trap topology for L 5 1.4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>scp,) = 1 -P ( s c ~~) ~H .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Upper and lower bounds for the expected number of short-circuit free traps in a 50-node L 5 1.4 network with H, , , = 3,4,5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Paths/Spancut by Maximum Flow = 5.380 Average Number of Paths/Spancut by k-Shortest Paths = 5.378 Average Number of Linksmath by Maximum Flow = 5.338 Average Number of Linksmath by k-Shortest Paths = 5.338 because this maximizes the number of cross connections which are performed in parallel at different sites.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">l ~o w lest</cell><cell cols="2">IFIOW (est</cell></row><row><cell>1</cell><cell>9</cell><cell>10</cell><cell>15</cell><cell>15</cell><cell>50</cell><cell>50</cell><cell>38</cell><cell>38</cell></row><row><cell>2</cell><cell>18</cell><cell>30</cell><cell>162</cell><cell>162</cell><cell>615</cell><cell>615</cell><cell>241</cell><cell>241</cell></row><row><cell>3</cell><cell>31</cell><cell>50</cell><cell>229</cell><cell>229</cell><cell>957</cell><cell>956</cell><cell>461</cell><cell>457</cell></row><row><cell>4</cell><cell>39</cell><cell>64</cell><cell>293</cell><cell>293</cell><cell cols="3">1402 1407 776</cell><cell>785</cell></row><row><cell>5</cell><cell>50</cell><cell>82</cell><cell>373</cell><cell>373</cell><cell cols="3">1677 1677 781</cell><cell>784</cell></row><row><cell>6</cell><cell>59</cell><cell>97</cell><cell>419</cell><cell>479</cell><cell cols="3">2176 2176 1099</cell><cell>1104</cell></row><row><cell>7</cell><cell>69</cell><cell>111</cell><cell>528</cell><cell>528</cell><cell cols="3">2928 2926 1495</cell><cell>1512</cell></row><row><cell>8</cell><cell>78</cell><cell>131</cell><cell>727</cell><cell>727</cell><cell cols="3">4167 4161 2056</cell><cell>2084</cell></row><row><cell>9</cell><cell>94</cell><cell>160</cell><cell>825</cell><cell>825</cell><cell cols="3">4360 4363 2084</cell><cell>2082</cell></row><row><cell>10</cell><cell>102</cell><cell>178</cell><cell>1118</cell><cell cols="4">1118 5842 5846 2679</cell><cell>2690</cell></row><row><cell>11</cell><cell>120</cell><cell>204</cell><cell>1068</cell><cell cols="4">1068 5150 5148 2385</cell><cell>2408</cell></row><row><cell>12</cell><cell>147</cell><cell>253</cell><cell>1319</cell><cell cols="4">1319 6946 6946 3402</cell><cell>3439</cell></row><row><cell>13</cell><cell>197</cell><cell>344</cell><cell>1921</cell><cell cols="4">1918* 10292 10275 5114</cell><cell>5125</cell></row><row><cell>14</cell><cell>238</cell><cell>397</cell><cell>2027</cell><cell cols="4">2026* 11738 11735 5815</cell><cell>5764</cell></row><row><cell>15</cell><cell>301</cell><cell>531</cell><cell cols="5">3113 3113 17482 17485 8219</cell><cell>8158</cell></row><row><cell cols="3">Totals 1552 2642</cell><cell cols="6">14197 14193 75782 75766 36645 36671</cell></row><row><cell cols="3">Average Number of</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>Table I summarizes a total of 2642 span failure experiments in the initial set of 15 test networks of constant L and B.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE I1 NUMBER OF PATHS FOUND BY MAX FLOW AND KSP FOR NETWORKS OF VARYING LOCALITY AND NOMINALLY CONSTANT NETWORK AVERAGE NODE DEGREE</head><label>I1</label><figDesc></figDesc><table><row><cell>#Nodes</cell><cell># Spans</cell><cell cols="2">Synthesis P,</cell><cell>pk</cell><cell></cell></row><row><cell>50</cell><cell>77</cell><cell>0.70</cell><cell>131</cell><cell>131</cell><cell>100</cell></row><row><cell>48</cell><cell>76</cell><cell>0.85</cell><cell>120</cell><cell>120</cell><cell>100</cell></row><row><cell>51</cell><cell>83</cell><cell>1.00</cell><cell>167</cell><cell>167</cell><cell>100</cell></row><row><cell>51</cell><cell>82</cell><cell>1.15</cell><cell>157</cell><cell>156</cell><cell>99.36</cell></row><row><cell>51</cell><cell>82</cell><cell>1.30</cell><cell>162</cell><cell>162</cell><cell>100</cell></row><row><cell>48</cell><cell>79</cell><cell>1.45</cell><cell>162</cell><cell>162</cell><cell>100</cell></row><row><cell>52</cell><cell>85</cell><cell>1.60</cell><cell>154</cell><cell>154</cell><cell>100</cell></row><row><cell>49</cell><cell>79</cell><cell>1.75</cell><cell>148</cell><cell>148</cell><cell>100</cell></row><row><cell>50</cell><cell>81</cell><cell>1.90</cell><cell>146</cell><cell>146</cell><cell>100</cell></row><row><cell>51</cell><cell>83</cell><cell>2.05</cell><cell>169</cell><cell>169</cell><cell>100</cell></row><row><cell>50</cell><cell>81</cell><cell>2.20</cell><cell>154</cell><cell>154</cell><cell>100</cell></row><row><cell>51</cell><cell>84</cell><cell>2.35</cell><cell>174</cell><cell>174</cell><cell>100</cell></row><row><cell>48</cell><cell>79</cell><cell>2.50</cell><cell>154</cell><cell>154</cell><cell>100</cell></row><row><cell>51</cell><cell>83</cell><cell>2.65</cell><cell>167</cell><cell>167</cell><cell>100</cell></row><row><cell>50</cell><cell>82</cell><cell>2.80</cell><cell>167</cell><cell>166</cell><cell>99.40</cell></row><row><cell>49</cell><cell>81</cell><cell>2.95</cell><cell>170</cell><cell>170</cell><cell>100</cell></row><row><cell>51</cell><cell>84</cell><cell>3.10</cell><cell>176</cell><cell>176</cell><cell>100</cell></row><row><cell>49</cell><cell>80</cell><cell>3.25</cell><cell>158</cell><cell>158</cell><cell>100</cell></row><row><cell>46</cell><cell>77</cell><cell>3.40</cell><cell>162</cell><cell>161</cell><cell>99.38</cell></row><row><cell>50</cell><cell>82</cell><cell>3.55</cell><cell>161</cell><cell>161</cell><cell>100</cell></row><row><cell>49</cell><cell>82</cell><cell>3.70</cell><cell>17 1</cell><cell>170</cell><cell>99.42</cell></row><row><cell>48</cell><cell>77</cell><cell>3.85</cell><cell>143</cell><cell>143</cell><cell>100</cell></row><row><cell>48</cell><cell>78</cell><cell>4.00</cell><cell>151</cell><cell>15 1</cell><cell>100</cell></row><row><cell>48</cell><cell>78</cell><cell>4.15</cell><cell>153</cell><cell>153</cell><cell>100</cell></row><row><cell>48</cell><cell>78</cell><cell>4.30</cell><cell>155</cell><cell>154</cell><cell>99.35</cell></row><row><cell>46</cell><cell>77</cell><cell>4.45</cell><cell>163</cell><cell>162</cell><cell>99.39</cell></row><row><cell>48</cell><cell>77</cell><cell>4.60</cell><cell>15 1</cell><cell>149</cell><cell>98.68</cell></row><row><cell>49</cell><cell>81</cell><cell>4.75</cell><cell>164</cell><cell>164</cell><cell>100</cell></row><row><cell>48</cell><cell>7 1</cell><cell>4.90</cell><cell>152</cell><cell>152</cell><cell>100</cell></row><row><cell>47</cell><cell>76</cell><cell>5.05</cell><cell>145</cell><cell>145</cell><cell>100</cell></row><row><cell>48</cell><cell>77</cell><cell>5.20</cell><cell>148</cell><cell>148</cell><cell>100</cell></row><row><cell>47</cell><cell>76</cell><cell>5.35</cell><cell>154</cell><cell>154</cell><cell>100</cell></row><row><cell>46</cell><cell>75</cell><cell>5.50</cell><cell>146</cell><cell>146</cell><cell>100</cell></row><row><cell>49</cell><cell>79</cell><cell>5.65</cell><cell>158</cell><cell>158</cell><cell>100</cell></row><row><cell>47</cell><cell>76</cell><cell>5.80</cell><cell>150</cell><cell>150</cell><cell>100</cell></row><row><cell>46</cell><cell>75</cell><cell>5.95</cell><cell>151</cell><cell>151</cell><cell>100</cell></row><row><cell>48</cell><cell>77</cell><cell>6.10</cell><cell>153</cell><cell>153</cell><cell>100</cell></row><row><cell>48</cell><cell>77</cell><cell>6.25</cell><cell>153</cell><cell>1.53</cell><cell>100</cell></row><row><cell>48</cell><cell>77</cell><cell>6.40</cell><cell>153</cell><cell>153</cell><cell>100</cell></row><row><cell>49</cell><cell>79</cell><cell>6.55</cell><cell>152</cell><cell>152</cell><cell>too</cell></row><row><cell>48</cell><cell>77</cell><cell>6.70</cell><cell>149</cell><cell>149</cell><cell>100</cell></row><row><cell>48</cell><cell>79</cell><cell>6.85</cell><cell>161</cell><cell>161</cell><cell>100</cell></row><row><cell>47</cell><cell>16</cell><cell>7.00</cell><cell>150</cell><cell>149</cell><cell>99.33</cell></row><row><cell>Totals</cell><cell></cell><cell></cell><cell>6685</cell><cell>6676</cell><cell>99.86</cell></row><row><cell>I</cell><cell>I</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>% Paths Localitv Found DUNN er a l . COMPARISON OF SHORTEST PATHS AND MAXIMUM FLOW ROUTING 93 v ,</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE 111 NUMBER OF PATHS FOUND BY KSP AND MAX FLOW FOR NETWORKS WITH UNIT AND RANCOM SPAN CAPACITIES</head><label>111</label><figDesc></figDesc><table><row><cell>Span</cell><cell cols="3">Numberof Number of P,,</cell><cell>pk</cell><cell>% of Paths</cell></row><row><cell cols="2">Capacity Networks</cell><cell>Span cuts</cell><cell></cell><cell></cell><cell>Not Found</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>by KSP</cell></row><row><cell>1</cell><cell>392</cell><cell>67,150</cell><cell>439,578</cell><cell>439,563</cell><cell>0.0034</cell></row><row><cell>Uniform</cell><cell>390</cell><cell>67,108</cell><cell cols="3">1,261,576 1,261,563 0.0010</cell></row><row><cell>r i c i</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>2 ) X (j,Hm,x</head><label></label><figDesc></figDesc><table><row><cell cols="2">SCP~, U S C P ; ~ . . . U scpimax '.(Ul i2=1 i max=l</cell></row><row><cell>= I -(</cell><cell>X ( j , l ) ,?, -scpil i2=1 n W i 2 X ( j 2 )</cell></row><row><cell cols="2">where X ( j , H ) is the number of short-circuiting paths of</cell></row><row><cell cols="2">length H for construction j , scpi is the ith short-circuiting</cell></row><row><cell cols="2">path of length H , and Hm,, is the maximum length of the</cell></row><row><cell cols="2">short-circuiting paths under consideration. Exact evaluation</cell></row><row><cell cols="2">of the union probability requires application of the inclu-</cell></row><row><cell cols="2">sion/exclusion rule [ 131 to a very large number of intersecting</cell></row><row><cell cols="2">subgroups. This requires addition of all the individual probabil-</cell></row><row><cell cols="2">ities, subtraction of the intersection probabilities for all choices</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE V SIZE OF MUTUALLY INDEPENDENT POTENTIAL SHORT-CIRCUITING PATH SETS OF A GIVEN LENGTH FOR EACH CONSTRUCTION OF THE FIRST-ORDER TRAP TOPOLOGY IN %POINT GRID SPACE WITH L 5 Jz j</head><label>V</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>D. Anthony Dunn was born in Eugene, OR, on December 9, 1969. He received the B.Sc. degree in computer engineering from the University of Alberta</figDesc><table /></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A self-healing network with an economical spare channel assignment</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sakauchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Nishimura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hasegawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. GLOBECOM &apos;90</title>
		<meeting>GLOBECOM &apos;90</meeting>
		<imprint>
			<date type="published" when="1990-12">Dec. 1990</date>
			<biblScope unit="page" from="438" to="443" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Near optimal spare capacity planning in a mesh restorable network</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Bilodeau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Venables</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE GLOBECOM &apos;91</title>
		<meeting>IEEE GLOBECOM &apos;91</meeting>
		<imprint>
			<biblScope unit="page" from="2007" to="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">FITNESS: A failure immunization technology for network service survivability</title>
		<author>
			<persName><forename type="first">C</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Han</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hasegawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE GLOBECOM &apos;88</title>
		<meeting>IEEE GLOBECOM &apos;88</meeting>
		<imprint>
			<biblScope unit="page" from="1549" to="1554" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Performance studies of a self healing network protocol in Telecom Canada long haul networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Venables</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Sandham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">F</forename><surname>Milne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Global Conf. Commun</title>
		<imprint>
			<date type="published" when="1990-12">Dec. 1990</date>
			<biblScope unit="page" from="452" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Development and performance verification of a distributed asynchronous protocol for real-time network restoration</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Venables</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Macgregor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Sandham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J . Select. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">I</biblScope>
			<biblScope unit="page" from="112" to="125" />
			<date type="published" when="1991-01">Jan. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Self healing networks: A distributed algorithm for kshortest link-disjoint paths in a multigraph with applications in real time network restoration</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Grover</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<pubPlace>Fall</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Univ. Alberta</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A distributed link restoration algorithm with robust preplanning</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Baker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pror. IEEE GLOBECOM &apos;91</title>
		<imprint>
			<biblScope unit="page" from="3" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A note on two problems in connection with graphs</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">W</forename><surname>Dijkstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numer. Math</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="269" to="271" />
			<date type="published" when="1959">1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Optimized linl-disjoint k-shortest paths algorithm for facility restoration</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Macgregor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Grover</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>submitted to Software-Practice and E.rperience</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
		<title level="m">Integer Programming and Network Flows</title>
		<meeting><address><addrLine>Reading, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Implementing Discrete Mathematics: Combinatorics and GI-aph Theoiy with Mathematica</title>
		<author>
			<persName><forename type="first">S</forename><surname>Skienna</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Redwood City, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Development and use of a random network synthesis tool with controlled connectivity statistics</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W D</forename><surname>Dunn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName><surname>Macgregor</surname></persName>
		</author>
		<idno>90-10</idno>
	</analytic>
	<monogr>
		<title level="j">TRLabs, Univ. Alberta, Rep. WP</title>
		<imprint>
			<date type="published" when="1990-08">Aug. 1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Brualdi</surname></persName>
		</author>
		<title level="m">Introductog Combinatorics, 2nd Ed</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="156" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Grover received the B.Eng. degree with high distinction from Carleton University, Ottawa, Ont., Canada in 1976, the M.Sc. degree with distinction from the University of Essex</title>
		<author>
			<persName><forename type="first">D</forename><surname>Wayne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1980, and the Ph.D. degree in electrical engineering from the University of Alberta, Edmonton</title>
		<meeting><address><addrLine>Colchester, England; Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
