<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Chao</forename><surname>Chen</surname></persName>
							<email>cschaochen@cqu.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Daqing</forename><surname>Zhang</surname></persName>
							<email>daqingi2r@yahoo.com</email>
						</author>
						<author>
							<persName><forename type="first">Bin</forename><surname>Guo</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Xiaojuan</forename><surname>Ma</surname></persName>
							<email>xiaojuan.ma@huawei.com</email>
						</author>
						<author>
							<persName><forename type="first">Gang</forename><surname>Pan</surname></persName>
							<email>gpan@zju.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Zhaohui</forename><surname>Wu</surname></persName>
						</author>
						<author>
							<persName><surname>Chen</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Ministry of Education</orgName>
								<orgName type="laboratory">Key Laboratory of Dependable Service Computing in Cy-ber Physical Society</orgName>
								<orgName type="institution">Chongqing University</orgName>
								<address>
									<postCode>400044</postCode>
									<settlement>Chongqing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">College of Computer Science</orgName>
								<orgName type="institution">Chongqing University</orgName>
								<address>
									<postCode>400044</postCode>
									<settlement>Chongqing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Institute of Software</orgName>
								<orgName type="department" key="dep2">School of Electronics Engineering and Computer Science</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<postCode>100871</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Department of Computer</orgName>
								<orgName type="institution">Northwestern Polytechnical University</orgName>
								<address>
									<postCode>710072</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="laboratory">Noah&apos;s Ark Lab</orgName>
								<address>
									<settlement>Huawei, Shatin, Hong Kong</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">College of Computer Science and Technol-ogy</orgName>
								<orgName type="institution">Zhejiang University</orgName>
								<address>
									<postCode>310027</postCode>
									<settlement>Hangzhou</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">767ED2DF98DD8D0323308EA9FFA87FB7</idno>
					<idno type="DOI">10.1109/TITS.2014.2357835</idno>
					<note type="submission">received April 27, 2014; revised July 19, 2014; accepted September 6, 2014.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Crowdsourcing</term>
					<term>digital footprints</term>
					<term>personalization</term>
					<term>traffic aware</term>
					<term>trip planning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Planning an itinerary before traveling to a city is one of the most important travel preparation activities. In this paper, we propose a novel framework called TRIPPLANNER, leveraging a combination of location-based social network (i.e., LBSN) and taxi GPS digital footprints to achieve personalized, interactive, and traffic-aware trip planning. First, we construct a dynamic point-of-interest network model by extracting relevant information from crowdsourced LBSN and taxi GPS traces. Then, we propose a two-phase approach for personalized trip planning. In the route search phase, TRIPPLANNER works interactively with users to generate candidate routes with specified venues. In the route augmentation phase, TRIPPLANNER applies heuristic algorithms to add user's preferred venues iteratively to the candidate routes, with the objective of maximizing the route score while satisfying both the venue visiting time and total travel time constraints. To validate the efficiency and effectiveness of the proposed approach, extensive empirical studies were performed on two real-world data sets from the city of San Francisco, which contain more than 391 900 passenger delivery trips generated by 536 taxis in a month and 110 214 check-ins left by 15 680 Foursquare users in six months.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>from one POI to the next, and meet one's time budget. Let us take the following use case as an example.</p><p>John is transiting through San Francisco. He rents a car at San Francisco International Airport at 9:00 A.M. and would like to spend several hours for sightseeing, and then leaves for San Jose by train at 15:00 P.M. from Caltrain Station. He wants to visit the Golden Gate Bridge, Lombard Street, and Fisherman's Wharf. If time permits, he also wants to squeeze in visits to an art museum and/or lunch at one of the Boudin Bakery locations. In addition, he prefers to have lunch before visiting the Fisherman's Wharf. As shown in the above use case, three main factors have to be considered in the design of a trip planning system: 1) the venue <ref type="foot" target="#foot_0">1</ref> constraints, which include the trip starting location (the airport), the trip ending location (Caltrain Station), the POIs expected to be covered in the itinerary (e.g., the Golden Gate Bridge), the POI categories that might be added if time permits (e.g., art museum), and the POI visiting order; 2) the time constraints, which include a trip starting and ending time (time budget), the duration of visit at each POI that can be estimated and controlled by users, the transit (driving) time between POIs that may vary depending on the traffic condition of the time of the day, and the operation time of each POI to visit; and 3) user's preference scores about a specific POI and an itinerary at certain time of the day that are assumed to be computable. The objective of the trip planning system is to interact with users to determine if the user-specified POIs can all be covered within the time budget. If the answer is "no", the system would iteratively prompt the user to remove one POI at a time until the POIs specified can be fit into one route without compromising the time constraint. If the answer is "yes", the system would automatically generate an "optimal route" that contains the specified POIs and preferred POI categories and meets the time constraint according to the predicted driving time of the day.</p><p>Apparently, the above problem cannot be solved using the approaches proposed for route search in the previous research <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b34">[35]</ref> as they often assume that the transit time between POIs is constant. In our scenario, the purpose of route search is to find a route that can cover a series of requested POIs specified by users while meeting a time budget. The above issue is also different from route recommendation. Many existing route recommendation systems suggest routes directly based on the similarity between user's visiting history in other contexts and other people's trip records in the targeted city <ref type="bibr" target="#b38">[39]</ref>. Others identify venues according to a user's preference and recommend routes based on certain criteria (e.g., with the highest route score) <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b24">[25]</ref>. However, during the actual trip planning, it is common that a user may have some additional constraints such as "need to go some specific places," "go to park before lunch," and "the total travel time should be ≤ 6 h." Some prior work asked users to manually select and configure travel routes after recommendation, which was tedious and time consuming <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b33">[34]</ref>. Even worse, there might be no travel routes that can satisfy all the constraints. Another group of route planning work aims to find the optimal (e.g., fastest or shortest) paths in road networks based on the timevarying assumption of each road segment <ref type="bibr" target="#b36">[37]</ref>. These studies care only about the edge information in the network, largely ignoring the attributes associated with the nodes (POIs). In other words, they care only about the time on the road and pay little attention on the opening hours and duration of visit of each POI. Unlike this body of work, we need to consider the characteristics of each POI in the route selection process, e.g., its attractiveness, operation hours, and order of visit. In summary, this paper intends to build a personalized, interactive, and traffic-aware trip planning service.</p><p>In order to achieve personalization in trip planning, we first need to acquire the information about all POIs in a targeted city and links among them to build a POI network model. So far, different data sources have been exploited, including: 1) websites, Wikipedia, web blogs that contain tourists' profiles, and comments that reveal preferences and experiences with POIs <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>; 2) social media sites such as Facebook, Flickr, and location-based social networks (LBSNs) (e.g., Foursquare and Gowalla), which can inform the popularity, functions, and operating hours of the POIs and individual user's travel history <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b24">[25]</ref>; and 3) GPS trajectories of people and taxis, which can indicate the stay time in each place and transit time between two places <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b36">[37]</ref>, <ref type="bibr" target="#b38">[39]</ref>. Apparently, each data source has its strength and weakness in characterizing certain facets of the POI nodes and edges as required by the model. Integrating heterogeneous data sources can provide a more complete picture of the POI network.</p><p>In this paper, we develop a novel trip planning framework called TRIPPLANNER. In the front end, TRIPPLANNER allows users to interactively specify their venues of interests with varied constraints. In the back end, it leverages heterogeneous crowdsourced digital footprints for POI network model construction. Through a two-phase query resolution process, TRIPPLANNER could recommend to the user a personalized route with the highest trip score under the total travel time constraint. In summary, there are four main contributions of this paper.</p><p>• First, we define a new trip planning problem, which allows users to specify not only the must-visit venues but also optional venue categories if the time permits, given a total travel time budget. We further make more realistic assumption about the transit time between venues that varies with time of the day and day of the week. In other words, the total travel time of the same route may be different. • Second, we attempt to construct a dynamic POI network model of a city, leveraging heterogeneous crowdsourced digital footprints (i.e., Foursquare check-ins and taxi GPS traces) to better utilize the strengths of each data source in characterizing the attributes of the nodes and links of the POI network. • Third, we propose a two-phase approach for personalized, interactive, and traffic-aware trip planning. We also propose a new way to score an itinerary, considering both the popularity and individual preference of venues. Specifically, in the route search phase, the system works interactively with users to generate candidate routes that traverse all specified venues. In the route augmentation phase, the system employs heuristic algorithms to add user-preferred venues (i.e., optional venues if time permits) to the candidate routes iteratively, with the objective of maximizing the route score and satisfying both the venue visiting time and total travel time constraints. • Finally, we validate the efficiency and effectiveness of TRIPPLANNER by extensive evaluations using large-scale real-world data sets. Through a case study of planning three trips in San Francisco with different starting times and user preferences, it is shown that TRIPPLANNER can recommend appropriate routes that fully meet users' requirements and yet take into consideration the traffic condition along the chosen routes at the specified time. The remaining of this paper is structured as follows. In Section II, we review the related work and show how our work is different from prior research. In Section III, we introduce the framework of our proposed TRIPPLANNER system. After presenting the process of constructing the POI network by leveraging the Foursquare check-in and taxi GPS data sets in Section IV, we elaborate on our two-phase approach in Section V. Evaluation results are reported in Section VI to verify the effectiveness of the proposed approach. Finally, we conclude this paper and chart the future directions in Section VII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>The related work is organized in two sections. We first review previous work on extracting information from different data sources to build the POI network model and then discuss how to recommend a trip to users based on certain assumptions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Construction of POI Network</head><p>In trip planning research and applications, people have exploited different data sources to extract node and edge information needed to model a POI network. For example, in <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b25">[26]</ref>, and <ref type="bibr" target="#b39">[40]</ref>, many researchers have used geotagged photos from photosharing sites (e.g., Flickr) to derive the information about POIs, such as location, popularity, characteristics, and proper visiting time and order. In addition, demographics and social relationship of visitors to these POIs can be also extracted. However, it is hard to estimate the dynamic transit time between POIs from geotagged photo data. More recently, people began to explore user-generated LBSN digital traces since such data contain rich information that can be used to directly characterize each POI in a tourist city and users' preferences to each POI <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b23">[24]</ref>, <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b35">[36]</ref>. Unfortunately, similar to geotagged photo data, LBSN traces also do not contain dynamic transit time between POIs, particularly when driving is considered for traveling in a city. Another popular type of data is GPS trajectory, which can be used to predict the fastest route at certain time of the day in a city <ref type="bibr" target="#b36">[37]</ref>. Previous studies have shown that GPS trajectory traces can precisely characterize the transit time between POIs, which is more accurate than Google Maps<ref type="foot" target="#foot_1">2</ref> results [3], <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b16">[17]</ref>; the point-to-point transit time estimated by Google Maps was about 35% off from the actual values on average <ref type="bibr" target="#b2">[3]</ref>.</p><p>Building on existing work, we leverage taxi GPS trajectory and LBSN trace data to construct a POI network model. Such approach allows us to better characterize both the POI nodes and the edges in the network, making it possible to address a more realistic trip planning problem and design a better trip planning system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Trip Planning</head><p>There has been quite some work on trip planning <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b29">[30]</ref>, <ref type="bibr" target="#b32">[33]</ref>, <ref type="bibr" target="#b37">[38]</ref>, <ref type="bibr" target="#b41">[42]</ref>, which can be roughly classified into three categories. The first category is route search, which aims to answer a user's route queries over a given POI network. Traveling salesman problem (TSP) is a classical problem in route search <ref type="bibr" target="#b22">[23]</ref>. Given a set of specified POIs in a graph and their pairwise distances, the goal of TSP is to find the shortest route that visits each POI exactly once and returns to the original location. However, situations may be much more complicated in the real world. Destination of a trip may be different from the starting point. Furthermore, users may simply have in mind a type of POIs rather than a specific POI location. Trip planning query (TPQ) is proposed to address the problem <ref type="bibr" target="#b21">[22]</ref>. The goal of TPQ is to find the shortest path between two given locations that covers all of the user-specified node categories. Some research has looked into variations of TSP and TPQ problems with additional constraints <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b28">[29]</ref>, <ref type="bibr" target="#b34">[35]</ref>, but most of the studies assumed that the transit time between POIs is constant, with the exception of work like <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>, and <ref type="bibr" target="#b20">[21]</ref>. Different from prior research, we allow both POIs and POI categories (i.e., types) to be specified in the route query. We also assume that the transit time between POIs is affected by time-dependent traffic condition.</p><p>The second category is route recommendation, which suggests POIs or routes to users based on their preferences. It usually assumes that users will not provide POIs or POI categories of interests explicitly. For instance, Kurashima et al. develop a probabilistic model that incorporates user preferences, location, and available time to suggest personalized routes <ref type="bibr" target="#b19">[20]</ref>. Lu et al. present a personalized trip recommendation framework that recommended personalized arrangement of visit to venues, given a predefined budget (e.g., time and money) <ref type="bibr" target="#b24">[25]</ref>. <ref type="bibr">Hsieh et al.</ref> propose to utilize users' check-in patterns to recommend popular time-sensitive trips to users <ref type="bibr" target="#b14">[15]</ref>. Different from these studies, we already have information of POIs and/or POI categories specified in the route query. On top of this, we compute a venue score for each POI based on its popularity and users' preferences.</p><p>The third category is route planning with the goal of selecting optimal time-dependent routes. For instance, Yuan et al. <ref type="bibr" target="#b36">[37]</ref> and Ziebart et al. <ref type="bibr" target="#b40">[41]</ref> propose to mine the historical taxi GPS traces for the optimal driving path between two chosen POIs, assuming that the transit time is affected by traffic condition. Unlike this category of research, we also consider the priority of each POI, preferred order of visit, and the visiting time constraint of each POI in the route optimization process.</p><p>A comparison between our work and existing research is further provided in Table <ref type="table" target="#tab_0">I</ref>. In summary, our work differs from the previous work in the data sources used, the problem defined, the assumptions given, and in the methods developed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. TRIPPLANNER SYSTEM</head><p>Here, we first introduce several key terminologies. Then, we formally define the research problem of personalized trip planning. Finally, we give a detailed description of the framework of TRIPPLANNER system, which is composed of three major </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Key Terminologies</head><p>Dynamic POI Network Model: The model can be represented as a directed complete graph G = (V, E). Each node in V denotes a venue (i.e., POI), which has five attributes, namely, category, operation time, popularity, geographical location, and stay time (i.e., the duration of visit). Each directed edge (v i , v j ) in E represents a link from node v i to v j , which carries the transit time between the two venues, denoted as tt(v i , v j ). The transit time is asymmetric and dynamically changing.</p><p>Lemma 1 (Dynamic POI Network has FIFO Property): Given a dynamic network G = (V, E), where the transit time of each edge in G is time dependent. The network is firstinput-first-output (FIFO) since, for any arc (i, j) in E, given user A leaves node v i at time t 0 and user B leaves node v i at time t 1 (t 1 &gt; t 0 ), user B cannot arrive at node v j before user A.</p><p>Proof: Proof can be found in Appendix A. Itinerary Query: An itinerary query IQ consists of four parts: 1) a user-specified venue list V u that the user intends to cover; 2) starting place v o and starting time t o , ending place v d , and a travel time budget Δ; 3) a set of user-preferred venue categories CAT u (optional venues to visit if time permits); and 4) additional constraints ACs such as constraints on the time and the order of venues are to be visited. For instance, a user may want to have lunch at noon and visit museums after that. In summary, the query IQ can be thus represented as</p><formula xml:id="formula_0">{V u , v o , v d , t o , Δ, CAT u , ACs}.</formula><p>It should be noted that users may not impose ACs when planning their visit, and thus, the corresponding field is empty.</p><p>Valid Route:</p><formula xml:id="formula_1">A route R = v 1 , v 2 . . . , v n is valid iif aT (v i ) ≥ oT (v i ), lT (v i ) ≤ cT (v i ) ∀ i ∈ {1, 2, . . . , n}.</formula><p>This implies that the user should visit all venues while they are open. Here, aT (•), lT (•) are the users' arriving and leaving times for the given venue, whereas oT (•), cT (•) refer to the opening and closing times of the given venue, respectively. Route Score: Route score is defined as the sum of scores of all venues along the route if it is valid, similar as in <ref type="bibr" target="#b11">[12]</ref> and <ref type="bibr" target="#b18">[19]</ref>; otherwise, the route score is defined as 0 (i.e., there exists a case in which a user arrives in at least one venue along the route before it opens or after it closes). Time Margin: It is defined as the difference between the total travel time of the route and the user's time budget.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Problem Statement</head><p>Personalized Trip Planning Problem: Given a dynamic POI network G in a targeted city and a user's itinerary query IQ, our objective is to find the optimal valid route with the maximum route score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Framework</head><p>As shown in Fig. <ref type="figure" target="#fig_0">1</ref>, the proposed framework contains three components, i.e., the dynamic POI network model, the route search component, and the route augmentation component. While the dynamic POI network model is prebuilt and maintained offline, the route search and route augmentation components collaboratively answer users' trip queries in real time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Dynamic POI Network Model:</head><p>The key problem of POI network model construction is to separately extract attributes of POI nodes from the Foursquare data set and information of the edges from the taxi GPS data set.</p><p>2) Route Search: Given user-specified venues to visit, the starting time, and the time budget, the route search component returns routes that traverse all the intended venues from the starting location to the destination. In particular, the returned routes with a time margin greater than a user-determined threshold become candidate input to the route augmentation component. However, users might list too many venues to cover within the time constraint, or the planned visiting time does not agree with the operating hours of certain venues. If the TRIPPLANNER system detects any of those cases, it will interact with the user to manually modify the venue list.</p><p>3) Route Augmentation: This component aims to augment the candidate generated from the route search module with user-preferred venues inferred from the intended venue categories in the query, maximizing the route score under the given travel time budget. It first pulls together all of the venues that belong to user-preferred venue categories as candidate venues. Then for each candidate route, it tries to insert venues in the pool into it to generate an augmented route without breaking any constraint. In the end, TRIPPLANNER presents the augmented routes to the user, in an order sorted according to their scores in the augmented route ranking module. In the following two sections, we elaborate on the offline construction of the dynamic POI network and the online route planning process, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. DYNAMIC POI NETWORK MODELING</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Node Modeling</head><p>Each node in the model corresponds to a POI with five attributes, i.e., operation time, category that the venue belongs to, popularity, geographical location, and stay time. For each venue, users provide their expected stay time, whereas we extract information related to the first four attributes from Foursquare data (see Fig. <ref type="figure" target="#fig_1">2</ref>).</p><p>Operation time of a venue may vary according to the day of the week and even time of the year.</p><p>A venue can be associated with two or more category labels with different granularities. <ref type="foot" target="#foot_2">3</ref> Take the Nick's Crispy Tacos venue shown in Fig. <ref type="figure" target="#fig_1">2</ref> as an example. It has three category labels, among which "Food" is a level-1 label, "Breakfast Spot" is a level-2 label, and "Multiplex" is a level-3 label.</p><p>To compute the popularity of a given venue, we use two indicators, i.e., the total number of visitors (tvs) and the total number of check-ins tcs (1). The total visitor number is usually smaller than the total check-in number of the same venue since some user checked in repeatedly during a single visit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P op(v</head><formula xml:id="formula_2">i ) = 2 × tvs(v i ) c 1 × tcs(v i ) c 2 tvs(v i ) c 1 + tcs(v i ) c 2<label>(1)</label></formula><p>where c 1 is the maximum visitor number of all venues in the targeted city, and likewise, c 2 is the maximum check-in number of all venues. Note that the most visited venue may be different from the one with the most check-in records. The venue score is fused by the harmonic mean as we want both values to be relatively higher <ref type="bibr" target="#b26">[27]</ref>. Regarding the geographical location of a given venue, Foursquare provides the longitude/latitude information together with its address.</p><p>Although the exact value of the stay time at a given venue cannot be precisely derived from the check-in data, it could be approximated using the average stay time of tourists. Note that users might estimate the stay time when planning the trip and adjust it during the actual visit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Edge Modeling</head><p>Here, we briefly introduce how to infer the dynamic edge values from taxi GPS traces. The technical details are given in Appendix B.</p><p>To estimate the dynamic transit time by driving from one node to another (i.e., the value of an edge), we need to consider the time-variant nature of traffic between venues. In this paper, we leverage a real-world data set-taxi GPS traces. Such data set has two unique features: 1) spatial coverage: a certain number of city taxis can fully cover the whole road network; and 2) time coverage: taxis usually operate all day long, which is in line with tourists' visiting time. These two features of the taxi GPS data enable us to estimate the transit time between any two nodes within any time period.</p><p>To simplify the transit time calculation between nodes in the POI network, we first cluster colocated nodes among which walking is the best way to get around. The within-cluster transit time is computed using the average walking speed, whereas the between-cluster transit time is estimated based on the driving speed at the specific time slot. Fig. <ref type="figure" target="#fig_2">3</ref> illustrates a simple dynamic POI network. The small circles in different colors refer to the nodes (POIs). Nearby nodes are grouped into clusters (ellipses in the dashed line). Directed edges inside each cluster carry the walking time information between nodes, which is independent of the time of the day, whereas directed edges across clusters carry the transit time information in between, which is time variant. For instance, during rush hours in the morning, the transit time from the upper right cluster to the bottom cluster is more than twice of the least travel time of the day (refer to the green curve in the bottom right of Fig. <ref type="figure" target="#fig_2">3</ref> for a whole-day view of dynamic transit time).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. TWO-PHASE APPROACH</head><p>We take a two-phase approach, i.e., route search and route augmentation, to perform trip planning. Route search retrieves candidate routes traversing all user-specified venues within the time budget. Route augmentation further enriches the candidate routes with user-preferred venues as long as time permits, and recommends to users the optimal routes with the highest scores. The set of user-preferred venues is a subset of venues in the targeted city, which are obtained based on the user-preferred venue categories CAT u in the itinerary query (IQ) (refer to Appendix C for details).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Phase I: Route Search</head><p>The route search component works interactively with the user. Given a user's starting and ending places, specified venue list, and a travel time budget, it first checks and removes any venue that cannot be visited on the intended date. The module then returns all possible routes between the given origin and destination (OD) that cover the valid venues in the list via a simple enumeration. Users may input a long venue list that cannot be covered within the given time budget. In this case, users are asked to shorten the venue list iteratively to ensure a proper time margin. In this process, the system would suggest users to remove venue(s) with a longer distance from the starting and ending places.</p><p>Users may also have venue visiting order constraint on the specified venue list. In this case, we use the specified venue sequence as the route search inputs. Afterward, we need to compute the total travel time for all remaining routes, considering the arrival and departure times of the user at each venue. Specifically, the total travel time is computed as the sum of transit and stay times spent along all the venues in the route, given the traffic-dependent transit time between any two venues and stay time at each venue. The time margins are simply obtained by substituting the time budget, which is the same for all remaining routes.</p><p>Consequently, routes with time margins bigger than the userspecified threshold and meeting venue order constraint on the specified venue list would be selected as candidate routes. Thus, the computation complexity of this phase is O(m!), where m is the number of user-specified venues after venue list shortening. Note that it may be less than the number of the initial user-input venues.</p><p>Moreover, some candidate routes can be further pruned in this phase because they cannot lead to any valid route after the route augmentation phase. Specifically, a route that contains later-arrival venue(s) can be pruned in advance. Here, "later arrival" means arriving at a venue after its closing time; "earlier arrival", on the contrary, refers to arriving at a venue before it opens. The rationale behind is inserting a new venue before a "later-arrival" venue will further push back the arrival time at this venue, whereas the "later-arrival" venue would be still late when inserting a venue after it. In other words, the outputs of the route search phase are all candidate routes that have enough time margins, meet venue visiting order constraint, and do not contain any "later-arrival" venues.</p><p>Remark: As this paper targets the travel route planning issue for tourists visiting a city for a day trip by renting a car, we thus assume that the number of user-specified venues is not big <ref type="bibr" target="#b27">[28]</ref>. Therefore, the route search problem is just finding all the routes that meet the visiting order and time constraints, and the time spent on route search in a city scale is relatively short.</p><p>For the case that users specify no venue, the route search phase will generate one candidate route from the starting place to the ending place with no other POIs in between. The route augmentation phase (discussed in the following section) would insert possible POIs as time permits to generate a near-optimal route with maximal score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Phase II: Route Augmentation</head><p>The route augmentation component tries to insert optional user-preferred venues into the candidate routes returned from the previous phase. The route augmentation problem is NPhard and suffers from combination explosion. On one hand, some candidate routes may allow the user to visit only one more optional user-preferred venue, whereas some of them allow to visit more than one, depending on their time margins and the locations of the user-preferred venues. On the other hand, there are many possible orders to visit the optional user-preferred venues along each candidate route, and different visiting orders would result in different total travel times. The aim for optimization is to maximize the route score without exceeding the time budget. It is very challenging as it tries to satisfy two competing requirements: 1) the route should contain as many user-preferred venues as possible; and 2) the route should meet the travel time budget and the venue visiting time constraints. We have to consider the following two factors when selecting new valid venues to optimize the route score.</p><p>Arrival Time Delay by Adding New Venues: Apparently, inserting new venues into a given route would increase its total visiting time, adding additional transit time and stay time. The arrival time to some of the existing venues may be delayed. Furthermore, the transit time needed between existing venues might be also different due to the time shift. Taking the diagram in Fig. <ref type="figure" target="#fig_3">4</ref> as an example, after inserting venue v c in the route, the arrival time to v 4 , v 5 , v 6 , v 7 would be delayed, and the transit time between v 4 and v 7 might also change as the traffic conditions might be different later in the day.</p><p>Total Route Score Increased by Adding New Venues: Generally, adding more user-preferred venues would increase the score of a route but may violate the given constraints if not done properly. We designed a method for route augmentation, which consists of two steps, i.e., venue inserting and score maximization. The former aims to find a suitable position in the candidate route to insert a selected venue, whereas the latter is responsible for maximizing the score of the updated route.</p><p>1) Venue Inserting Algorithm: There are two principles that we should follow when inserting a new venue: The augmented route should be valid, and we should minimize the extra cost in time. For a candidate route with n venues and a new venue v c to insert, if the candidate route does not contain any "earlierarrival" venue, we need to check n -1 positions to determine the final augmented route. It should be noted that, for the case that users have order constraint on the user-preferred venues, the positions in which a new venue can be inserted is limited (&lt; n -1). Only the positions that will not violate the venue order constraint are considered. However, if the candidate route does contain "earlier-arrival" venues, we only need to check k -1 (&lt; n -1) positions, where k is the position of the first "earlier-arrival" venue in the candidate route according to Theorem 1. Again, the possible positions can be further narrowed down for the case that users have venue visiting order constraint.</p><p>Theorem 1: For a candidate route that contains "earlierarrival" venues, inserting a candidate user-preferred venue behind the first "earlier-arrival" venue could not lead to a valid route.</p><p>The pseudocode of the venue inserting algorithm is shown in Algorithm 1. For clarity, we assume that users do not have venue visiting order constraint on user-preferred venues in the scope of this paper. We first check whether the candidate route contains any "earlier-arrival" venue (line 1). If it does, the possible positions where the new venue can be inserted are in <ref type="bibr">[2, k]</ref>; otherwise, the range is [2, n] (lines 2-5). Note that the "wait" for a venue to open is not considered in this paper as the total travel time is a hard constraint in our case. The core function of Algorithm 1 is the augRoute function shown in Algorithm 2. In this function, the candidate venue is inserted into the given route at each possible position (lines 3-8). Note that not every position where the candidate venue is inserted can lead to a valid route (lines 5-7). If no augmented routes are valid or the total travel time cost of all the generated augmented routes exceeds the time budget, the function returns the original input route (lines 9-11); otherwise, it returns the augmented route with the minimum total travel time (lines 12-13).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Venue Inserting Algorithm</head><formula xml:id="formula_3">Input: A candidate route R = v 1 , v 2 , . . . , v n ;</formula><p>A candidate venue v c A user-specified total travel time budget Δ; Output: An augmented route augR 1: if R has "earlier-arrival" venues then 2: k = pos(R)//pos(R) gets the index of the first "earlierarrival" venue in R 3: The algorithms above illustrate how to insert one venue to a candidate route. If there are multiple venues to add, this process will iterate through the list, again following the proposed principles. In the rest of this paper, we use the expression R + {v c1 , v c2 , . . . , v cn } to denote the operation of inserting the venue list {v c1 , v c2 , . . . , v cn } to the candidate route R sequentially. Note that, for the same set of candidate venues, different inserting orders may result in different augmented routes (e.g., R + {v c1 , v c2 } = R + {v c2 , v c1 }).</p><formula xml:id="formula_4">augR = augRoute(R, v c , [2, k], Δ) 4: else 5: augR = augRoute(R, v c , [2, n], Δ) 6: end if Algorithm 2 Venue Inserting Function 1: Function augR = augRoute(R, v c , [a, b], Δ) 2: newR = ∅ 3: for k := a to b do 4: tmpR = v 1 , v 2 , . . . ,</formula><p>2) Route Score Maximization Algorithms: We first present mathematical formulation of our route score maximization algorithms and then introduce how to compute the route score according to the user's preferences. In the end, we propose three heuristic algorithms to maximize the route score.</p><p>Mathematical Formulation: For a given user u i , a set of candidate venues {v ci } N i=1 , and a candidate route R, the route score maximization problem is</p><formula xml:id="formula_5">max RS u i , R + {x i v ci } N i=1 . (<label>2</label></formula><formula xml:id="formula_6">)</formula><p>Subject to:</p><formula xml:id="formula_7">x i ∈{0, 1} (3) x 1 v c1 .cat ∪ x 2 v c2 .cat ∪ . . . ∪ x n v cN .cat ⊆ CAT u (4) T C R + {x i v ci } N i=1 ≤ Δ<label>(5)</label></formula><p>where (2) refers to the objective function (i.e., the route score) for maximization. It is subjected to three constraints, as shown in (3)- <ref type="bibr" target="#b4">(5)</ref>. Equation (4) defines the constraint for the augmented venue selection, i.e., only the user-preferred venues can be selected for route augmentation but not necessarily covering all venue categories due to the total travel time constraint. Equation <ref type="bibr" target="#b4">(5)</ref> emphasizes that the total time cost of the newly augmented route should be within the predefined travel time budget Δ.</p><p>Route Score Calculation: The route score calculation algorithm is the core of the route augmentation component, which estimates the attractiveness of a candidate route to a particular user. The route score is defined as the sum of all its venue scores, and thus, the venue scoring method is vital.</p><p>Venue Scoring: On one hand, the score of a venue is determined by its popularity [P op, as shown in (1)], which is objective (denoted as VS obj ). On the other hand, the venue score is also related to individual user's personal interests revealed in his/her check-in history, which is subjective. For instance, the scores of "Art &amp; Museum" venues should be higher for a user if he/she visits venues in this category more often than the others, as shown in the Foursquare check-in records. The normalized check-in preference value VS sub of the venue v i for user u j is calculated by <ref type="bibr" target="#b5">(6)</ref>. For simplicity, only the level-1 category labels (i.e., the nine category labels defined by Foursquare) are used in the scope of this paper.</p><formula xml:id="formula_8">VS sub (u j , v i ) = tcs (u j , {v i .cat}) tcs(u j )<label>(6)</label></formula><p>where tcs(u j ) represents the total number of check-ins that the user u j conducted in Foursquare, whereas tcs(u j , {v i .cat}) stands for the total number of check-ins at venues belonging to the same category v i .</p><p>Finally, the venue score can be computed according to <ref type="bibr" target="#b6">(7)</ref>, considering both the venue popularity and the user preferences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VS(u</head><formula xml:id="formula_9">j , v i ) = VS obj (v i ) + VS sub (u j , v i ).<label>(7)</label></formula><p>Three Heuristic Algorithms: As previously discussed, there are two important steps in route augmentation, i.e., selecting new venues and inserting them into the candidate routes sequentially. It is not trivial since we have to make a tradeoff between the individual venue scores and the total number of venues that can be added. For example, inserting a faraway venue with a very high venue score might forbid adding more new venues since it has already used up the time budget. In contrast, inserting a close-by venue with an average venue score first would allow including more new venues. It is difficult to say which strategy would achieve a higher route score in the end. Hence, we propose three heuristic algorithms for maximizing the route score in the route augmentation phase. Note that added venues are all user-preferred venues.</p><p>Travel time minimizer: The basic idea of this algorithm is to insert as many new venues as possible, given the fact that the route score would be higher as the number of venues increases in general. Thus, at each venue inserting iteration, our proposed heuristic is that the venue closest to the candidate route (measured by the additional travel time) would be selected first for insertion, regardless of its venue score. We illustrate the core part of the travel time minimizer algorithm in Algorithm 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 3 Travel Time Minimizer Algorithm</head><formula xml:id="formula_10">Input: A candidate route R = v 1 , v 2 , . . . , v n ;</formula><p>A set of new venues V c (i.e., user-preferred venues); A user-specified total travel time budget Δ; Output: An augmented route 1: augR = ∅ 2:</p><formula xml:id="formula_11">for i := 1 to |V c |do 3: v ci = V c (i) 4: augR = {R + v ci } ∪ augR //Call the venue inserting algorithm 5: if R + v ci = R then 6:</formula><p>T C(i) = +∞ //the total travel time cost of the route is set +∞ if the selected venue cannot be inserted 7: else 8: For each candidate route returned by the route search phase, in each iteration, we need to examine all new venues in order to select one for the newly augmented route (lines 2-10). This is quite time consuming, particularly when the size of the venue list is big. We use the venue inserting algorithm, as shown in Algorithm 1, for each new venue (lines 3 and 4). If the newly augmented route is not valid, its total travel time would be set to +∞; otherwise, it would be updated to that of the newly augmented route (lines 5-9). At the end of each iteration, the route in the augR set with the minimum total travel time cost will be selected as the input (lines 11-15) for the next round of venue inserting, again via the same heuristic (line 16). The algorithm would terminate when no new route can be generated (line 17). Note that the inserted venue needs to be removed from the new venue list before the next iteration (line 14). Therefore, the computation complexity in each iteration for this algorithm has an upper bound of O(n -1) N , where n is the number of existing venues in the original candidate route, and N is the total number of user-preferred venues.</p><formula xml:id="formula_12">T C(i) = T C(R + v ci</formula><p>Venue score maximizer: The basic idea of this algorithm is to prioritize high-scored venues. Thus, in each iteration, the venue with the highest venue score that can lead to a valid route would be inserted first no matter how far away it is from the candidate route. Algorithm 4 illustrates the core part of the proposed venue score maximizer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 4 Venue Score Maximizer Algorithm</head><formula xml:id="formula_13">Input A candidate route R = v 1 , v 2 , . . . , v n ;</formula><p>A set of new venues V c (i.e., user-preferred venues); A user-specified total travel time budget Δ; Output: An augmented route 1:</p><formula xml:id="formula_14">V c ← sort(V c )</formula><p>//Sort new venues according to their scores in descending order defined in ( <ref type="formula" target="#formula_9">7</ref>) In each iteration, we first sort the new venues in the descending order of venue scores defined in (7) (line 1). This sorting operation can save computation time as we only need to check whether the high-ranked venues can yield a valid augmented route. If yes, there is no need to examine the rest of the venue list as in Algorithm 3. In the best case, the first venue (with the highest venue score) meets the requirement (lines 2 and 3); in the worst case, all new venues will be checked (lines 5-10). At the end of each iteration, the route with the highest route score will become the candidate route for the next iteration (lines <ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref>. The termination condition is the same as that of the travel time minimizer (line 15). Again, the inserted venue would be excluded from further operations (line 13). Therefore, the computation complexity in each iteration for this algorithm varies from O(N log |N |) (i.e., the best case) to O(N log |N | + (n -1) N ) (i.e., the worst case). Note that O(N log |N |) is the complexity of sorting operation.</p><formula xml:id="formula_15">2: i = 1; v ci = V c (i) 3: augR = R + v ci 4: while augR = R do 5: if i &lt; |V c | then 6: i = i + 1; v ci = V c (i) 7: augR = R + v ci 8:</formula><p>The above two algorithms are used as baseline methods. The first heuristic algorithm only considers the number of the venues added, whereas the second one emphasizes merely on the scores of the inserted venues. As a result, the routes of the first algorithm would be generally longer (i.e., containing more venues), compared with the second algorithm. It is because the second heuristic algorithm, given the same time budget constraint, favors having one venue with a high venue score over two nearby average venues, although the latter case might lead to a higher route score. To overcome the limitations of these two baseline methods, we propose our gravity maximizer.</p><p>Gravity maximizer: Inspired by Newton's law of universal gravitation, which is capable of modeling human mobility patterns (the travel behaviors to places, travel patterns, etc.) <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b30">[31]</ref>, we introduce a gravity model that uses the venue scores and the venue distances to the candidate route collectively for route augmentation. In our gravity model, the spherical distance between the candidate route and the new venue is analogous with the distance defined in Newton's gravity model, where the location of the candidate route is obtained by averaging the locations of all venues that it contains. Likewise, the average venue score of the candidate route and the score of new venue correspond to the mass. Finally, the gravity can be computed using</p><formula xml:id="formula_16">G(v ci , R) = VS(u j , v ci ) × 1 n n i=1 VS(u j , v i ) dist(v ci , R) λ . (<label>8</label></formula><formula xml:id="formula_17">)</formula><p>In the proposed gravity maximizer, the new venues are sorted in the descending order of their gravity values computed via <ref type="bibr" target="#b7">(8)</ref>, instead of the venue scores. The rest of the procedure is exactly the same as that of the venue score maximizer. Thus, the two methods are similar in the computation complexity, with an extra cost of the venue's gravity computation in the gravity maximizer.</p><p>In fact, the ranking based on gravity values would be degraded to that of venue scores if we set λ = 0, as gravity values would be determined by venue scores only. In other words, the gravity maximizer and the venue score maximizer algorithms would reach the same result when λ = 0. On the contrary, as can be inferred from ( <ref type="formula" target="#formula_16">8</ref>), if we set λ to be extremely high (e.g., λ &gt; 5), the gravity values would be dominantly influenced by the distance to the candidate route, introducing a bias toward the "closest" venue (i.e., with the smallest distance to the candidate route). This agrees with the basic idea of the travel time minimizer algorithm. Furthermore, with a large negative λ (e.g., λ &lt; -5), "distant" venues would be ranked higher, which should be avoided. We will investigate how different λ values affect the algorithm's performance in Section VI-B.</p><p>3) Augmented Route Ranking: The algorithms discussed in Section V aim to optimally augment the set of candidate routes returned from Phase I (i.e., route search). Augmented route ranking operation then picks out the augmented route with the highest route score to answer the user's itinerary query (IQ). Note that if multiple "optimally" augmented routes possess the same route score as they may contain the same venues but in different order, the route with a smaller "total travel time" would be ranked higher.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. SYSTEM EVALUATION</head><p>Here, we present the evaluation results that aim to: 1) validate the efficiency and effectiveness of the trip planning algorithms; and 2) demonstrate the usefulness and personalization capability of the trip planning system. We first describe the experimental setup, results of the parameter sensitivity study, and evaluation on algorithm efficiency and effectiveness and then discuss several issues that need to be addressed further.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experimental Setup</head><p>Data Preparation: We used Foursquare check-in data of San Francisco from April 2010 to October 2010 and the taxi GPS traces of the same city from the CabSpotting project (http://cabspotting.org) to construct the POI network of San Francisco. The Foursquare data contain 110 214 check-ins generated by 15 680 users. The taxi GPS data contain 391 938 passenger-delivery trips generated by 536 taxis in June 2008. We did not include data from the vacant taxis since they might not drive at a normal speed when searching for passengers. Although we could not find two data sets from the same period for evaluation, the process of our proposed framework is data independent, and the results can be easily updated once we are able to provide these heterogeneous data from the same period. The procedure of the POI network construction has been discussed in Section IV, and more details can be found in Appendix B.</p><p>Evaluation Environment: All the evaluations in this paper are run in MATLAB on an Intel Xeon W3500 PC with 12-GB RAM and running Windows 7 operation system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Parameter Sensitivity Study</head><p>As discussed in Section V, we have only one internal parameter λ in the proposed gravity maximizer algorithm [( <ref type="formula" target="#formula_16">8</ref>)] and no internal parameter in the other two baselines. We are thus interested in how it affects the optimal route score. We do not set λ to extreme values as discussed; instead, we vary λ in the range of <ref type="bibr">[-3, 3]</ref> with an interval of 0.1. The optimal scores under different λ values, in comparison with the two baseline algorithms, are shown in Fig. <ref type="figure" target="#fig_6">5(a)</ref>. As the figure suggests, the optimal route score generated by the travel time minimizer algorithm is always the lowest since it does not take the individual score of candidate venues into consideration. As expected, the optimal route score computed by the gravity maximizer algorithm and the venue score maximizer algorithm are the same when λ is around 0. We also find that the gravity maximizer algorithm yields higher optimal route score than the venue score maximizer algorithm when λ is within the range of [0. <ref type="bibr">5 2.3]</ref>.</p><p>We also show the change in computation time of the gravity maximizer algorithm under different λ values in Fig. <ref type="figure" target="#fig_6">5(b)</ref>. More specifically, the computation time fluctuates with the increase in λ. However, the maximum time cost is no longer than 1.45 s, which is acceptable. Considering the tradeoff between route score and computation time, we choose λ = 1.5 for the rest of the evaluations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Efficiency Evaluation</head><p>The efficiency of the three algorithms depends on several parameters such as the total number of venues N in the targeted city, the number of user-preferred venue categories k, the number of user-specified venues m, and user-defined travel time budget Δ. The first two variables determine the number of user-preferred venues (i.e., candidate new venues). The number of user-specified venues and travel time budget have an impact on the number of candidate routes produced in Phase I (i.e., the route search phase), as well as on the number of userpreferred venues that can be inserted in Phase II. In particular, at most m!, candidate routes can be produced. The number of user-specified venues m is common for all three algorithms, affecting the computation time in both the route search phase and the route augmentation phase. For simplicity, we fix m = 5 in all the evaluations. In the following experiments, we mainly study how the choice of N , k, and Δ affects the computation time of the three algorithms, varying only one parameter at a time.</p><p>It should be noted that all the candidate routes are augmented in parallel. In other words, the total computation time in the route augmentation phase is equal to the maximum computation time among all candidate routes. The efficiency is measured by the total time cost in both phases.</p><p>1) Varying N : The relationship between the computation time of the three algorithms and the total number of venues in the city N is shown in Fig. <ref type="figure" target="#fig_7">6(a)</ref>. Results suggest that the proposed venue score maximizer and gravity maximizer algorithms are less time consuming compared with the travel time minimizer algorithm, which is consistent with the complexity analysis. Furthermore, the computation time of the travel time minimizer algorithm is almost proportional to N . This is logical as the travel time minimizer needs to examine the additional travel time introduced by each venue in the candidate list. On the contrary, the computation time of the venue score maximizer and gravity maximizer algorithms only goes up slightly as the number of venues increases. Moreover, these two algorithms took less than 1 s to generate the result. The gravity maximizer algorithm generally took a slightly longer time than the venue score maximizer because of the additional gravity value calculation for each user-preferred venue. In this experiment, we fix k = 3 and Δ = 10 h.</p><p>2) Varying k: We show the computation time of the three algorithms under different k in Fig. <ref type="figure" target="#fig_7">6(b)</ref>. In general, the computation time increases with k. This is because a larger k often leads to a bigger number of user-preferred venues for augmentation. Again, the computation time of the travel time minimizer algorithm is much longer than that of the other two algorithms under the same setting, for the same reason as when N varies. For the venue score maximizer and gravity maximizer algorithms, their computation time increases more significantly as k becomes bigger, as compared with that under different  N . This is indeed caused by the increase in the number of user-preferred venues. As N increases, both the number of user-preferred and non-user-preferred venues would increase. However, all non-user-preferred venues can be excluded from the route augmentation process and thus have no impact on the computation time. In contrast, any change in k would be completely and directly reflected on the change in the number of user-preferred venues. In this experiment, we fix N = 300 and Δ = 8.5 h.</p><p>3) Varying Δ: Fig. <ref type="figure" target="#fig_7">6</ref>(c) shows the change in computation time of the three algorithms under given total travel time budget Δ. Similar to the previous two cases, the travel time minimizer algorithm needs more time as Δ increases, much more than the other two algorithms of which the computation time was similar and no more than 1 s. In general, more user-preferred venues are allowed to be added, which results in more venue inserting iterations in the route augmentation process, particularly for the travel time minimizer algorithm since its objective is to minimize the introduced travel time at each iteration. In this experiment, we fix N = 300 and k = 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Effectiveness Evaluation</head><p>Similar to the study of efficiency, we assessed the effectiveness of route augmentation algorithms under the same settings. The optimal route scores returned by the three algorithms with varying N , k, and Δ are shown in Fig. <ref type="figure" target="#fig_8">7</ref>(a)-(c), respectively. In Fig. <ref type="figure" target="#fig_8">7</ref>(a), the experiment setting is m = 5, k = 3, Δ = 10 h; in Fig. <ref type="figure" target="#fig_8">7</ref>(b), the setting is N = 300, m = 5, Δ = 8.5 h; and in Fig. <ref type="figure" target="#fig_8">7</ref>(c), the setting is N = 300, m = 5, and k = 3. In all three cases, the proposed gravity maximizer algorithm consistently outperformed the other two baseline methods in terms of optimizing the route score. Fig. <ref type="figure" target="#fig_8">7</ref>(a) shows that the optimal route score of the travel time minimizer algorithm gradually decreases as N increases, as opposed to the gravity maximizer and venue score maximizer algorithms. This is because the inherent characteristic of the travel time minimizer algorithm biases toward venues that are closer but probably with a smaller score as N increases. Results also suggest that, compared with the venue score maximizer algorithm, the gravity maximizer algorithm is more likely to find the global optimal route score. In Fig. <ref type="figure" target="#fig_8">7</ref>(b) and (c), all three algorithms achieved higher optimal route score with bigger k and Δ. However, such increase dramatically slowed down when k &gt; 5, probably due to the time budget constraint we impose.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Case Study</head><p>We further tested the personalization capability of the TRIP-PLANNER system in the case that two users with different personal interests submit the same query IQ 1 to the system. To be more specific, according to their check-in history, one of the users u 1 preferred Great Outdoors and Restaurants venues, whereas the other user favored the Arts &amp; Entertainments and Restaurants venues more. To demonstrate the traffic-aware Case II: Traffic-Aware Capability: This case looked into the traffic-aware capability of TRIPPLANNER. We compared two queries (IQ 1 and IQ 2 ) of the same user u 1 that only differ in the starting time (see Table <ref type="table" target="#tab_2">II</ref>). The recommended routes (R 1 and R 3 ) are shown in Fig. <ref type="figure" target="#fig_9">8</ref>(a) and (c), respectively. Only three preferred venues can be added in R 3 , as it starts around the morning rush hours and thus needs more transit time compared with the other two routes (R 1 and R 2 ), resulting in a smaller route score of 13.6602. Similar to R 1 and R 2 , proper lunch and dinner are planned for the user. In addition, the user is suggested to visit the faraway Golden Gate Bridge first since most of venues such as museums are not yet opened early in the morning.</p><p>Case III: Route Score Optimization Capability: In this case, we are interested in the difference between the optimal route versus an average route. Fig. <ref type="figure" target="#fig_9">8</ref>(d) shows a randomly selected augmented route R 4 , which is generated by our proposed gravity maximizer algorithm under the same query as Fig. <ref type="figure" target="#fig_9">8(c</ref>). The user is also suggested to visit the faraway Golden Gate Bridge first in R 4 . Although the average route includes all the user-specified venues and meets the total travel time budget constraint, it only accommodates two preferred venues due to the long transit time caused by taking an inefficient venue visiting order. As a result, the user only has time to take a quick snack for lunch if taking R 4 . Therefore, its route score (12.9087) is much lower than that of the recommended optimal route R 3 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. Discussion</head><p>In the following, we discuss some issues of TRIPPLANNER, which need to be addressed in future work.</p><p>Venue Stay Time: In the current study, we assume that the stay time at a venue can be obtained in advance. However, actually estimating the stay time for each individual user at a particular POI is not trivial. It depends on the user's interest and his/her time budget. For instance, the museum lovers might spend the whole day in the Louvre, whereas some people only spend 2 h to visit the most famous artworks, particularly when the trip schedule is tight. In the future, we plan to explore other data sources and techniques to estimate each user's preferred stay time at different venues <ref type="bibr" target="#b10">[11]</ref>.</p><p>Route Score: There is no objective way to quantitatively characterize the relative importance of different POIs for each individual. In this paper, we intentionally add a subjective score based on a user's check-in history to characterize the attractiveness of a POI to him/her, in addition to its popularity. Thus, the system would have a problem if the user did not have check-in logs. To deal with this case, we may ask the user to input his check-in preference manually. Although the proposed scoring method that leverages the existing literature seems to work well, further research is needed to identify more effective ways to automatically assign attractiveness scores to different POIs and arrange the visiting order accordingly.</p><p>Issues Regarding Data Sources: In this paper, we leverage two crowdsourced digital footprints to construct the dynamic POI model. In real life, nodes are also dynamic. Some of them may attract more and more visitors as time goes by, whereas others may become less popular. In addition, their operation time may change. To capture such change, we need to use more recent data and update the nodes rather regularly. For example, for a venue, we can count the number of check-ins and the number of visitors during the past four months to renew its popularity score. We can also update its operation time information from other data sources such as OpenStreetMap and official websites of the venues.</p><p>We propose the use of actual taxi GPS trace data to estimate the time-dependent transit time among venues (i.e., edge modeling). Thus, to demonstrate the validity and advantages of this approach, we choose driving as the travel mode. If we incorporate other data sources, such as subway or bus schedule timetable, our framework (i.e., two-phase approach) can estimate the transit time among venues by different travel modes more realistically and can work adaptively to suggest the optimal route.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION AND FUTURE WORK</head><p>In this paper, we have developed a novel framework called TRIPPLANNER for personalized, interactive, and traffic-aware trip planning. It leverages two heterogeneous data sources and considers factors, including the varying transit time between POIs, user preferences, and the total travel time budget. First, we constructed the dynamic POI network model by extracting relevant information from crowdsourced Foursquare and taxi GPS traces. Then, we proposed a two-phase approach for personalized trip planning with a comprehensive route scor-ing method and a novel route search-augmentation-ranking process. Using two real-world data sets that contain more than 391 900 passenger-delivery trips and 110 200 check-ins in the city of San Francisco, we compared our proposed route augmentation method with two baseline algorithms and showed that our method is more efficient and effective. We further conducted a case study to validate the capability of our framework in recommending adaptive and optimal itineraries.</p><p>In the future, we plan to broaden and deepen this work in several directions. First, we intend to extend the scenarios to multiday itinerary planning. Second, we would like to deploy our system on mobile devices, enabling a series of pervasive smart travel and transportation planning services. Third, we plan to test our system with real users in actual practices, collecting feedback on how to improve the service further.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Framework of our proposed TRIPPLANNER. parts, namely, a dynamic POI network model, a route search component, and a route augmentation component (see Fig. 1).</figDesc><graphic coords="4,119.39,70.13,360.14,133.58" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Relevant information of the node provided by Foursquare.</figDesc><graphic coords="5,39.71,70.49,246.14,197.18" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Illustration of the dynamic network built with Foursquare and taxi GPS data sets.</figDesc><graphic coords="5,315.23,70.49,220.46,197.18" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Illustrative example of inserting a venue into a candidate route.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>) 9 :</head><label>9</label><figDesc>end if 10: end for 11: if any(T C) = +∞then 12: k = arg min i (T C) 13: R = augR(k) 14: V c = V cv ck 15: end if 16: Repeat lines 1-14 17: Until R keeps unchanged</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>else 9 :</head><label>9</label><figDesc>Break 10: end if 11: end while 12: R = augR 13: V c = V cv ci 14: Repeat lines 2-14 15: Until R keeps unchanged</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Results of parameter sensitivity study. (a) Optimal route scores under different λ. (b) Computation time cost under different λ.</figDesc><graphic coords="10,59.87,70.13,215.18,313.58" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Results of efficiency evaluation. (a) Computation time cost by varying N . (b) Computation time cost by varying k. (c) Computation time cost by varying Δ.</figDesc><graphic coords="11,42.23,69.77,504.14,119.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Results of effectiveness evaluation. (a) Optimal route score by varying N . (b) Optimal route score by varying k. (c) Optimal route score by varying Δ.</figDesc><graphic coords="11,42.23,229.61,504.14,118.94" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Results of the case study. (a)-(d) Trip routes on Google map (in the spatial dimension). (Best viewed in the enlarged digital version). (a) R 1 . Starting time: 10:00 A.M. (b) R 2 . Starting time: 10:00 A.M. (c) R 3 . Starting time: 08:30 A.M. (d) R 4 . Starting time: 08:30 A.M. (e) Comparison of four routes in the temporal dimension. capability of our TRIPPLANNER, we designed a second case in which u 1 modified the query and set a different trip starting time IQ 2 . To verify that the route recommended by TRIP-PLANNER is optimized, we introduced a third case in which the recommended route in response to IQ 2 by u 1 was compared to an average route. Queries in all three cases share the following information. 1) The users start and end the trip both at Caltrain Station. 2) User-specified venues include Museum, Golden Gate Bridge, Beach, Lombard Street, and Fisherman's Wharf. 3) The total travel time budget Δ is set to 11 h. 4) The optional user-preferred categories are {Restaurants, Arts &amp; Entertainments, Great Outdoors}. 5) The dining time is set to [11:00 A.M., 12:59 P.M.] for lunch and [17:30 P.M., 20:00 P.M.] for dinner. Table II lists the information of the three cases we designed, including the corresponding user, starting time, and results of the recommended route. Case I: Personalization Capability: This case intends to demonstrate the personalization capability of TRIPPLANNER with two different users. As shown in Fig. 8(a) and (b), given the same time budget, both users can accommodate four more preferred venues in their trips additional to the must-visit venues (i.e., R 1 and R 2 ). Further investigation showed that, although not explicitly requested, TRIPPLANNER recommended restaurants to both users around lunch and dinner time since they are food lovers [as shown in Fig. 8(e)]. For user u 1 , the other two venues added belong to the Great Outdoors category, whereas two more museums from the Arts &amp; Entertainments category appeared in the augmented itinerary for u 2 . As illustrated in Fig. 8(e), u 1 arrives at Caltrain Station a bit earlier than u 2 , suggesting that routes R 1 and R 2 have different travel times. These results clearly indicate the ability of TRIPPLANNER to customize both specified and top-ranked preferred venues in the recommended trip, according to users' preferences.Case II: Traffic-Aware Capability: This case looked into the traffic-aware capability of TRIPPLANNER. We compared two queries (IQ 1 and IQ 2 ) of the same user u 1 that only differ in the starting time (see TableII). The recommended routes (R 1 and R 3 ) are shown in Fig.8(a) and (c), respectively. Only three preferred venues can be added in R 3 , as it starts around the morning rush hours and thus needs more transit time compared with the other two routes (R 1 and R 2 ), resulting in a smaller route score of 13.6602. Similar to R 1 and R 2 , proper lunch and dinner are planned for the user. In addition, the user is suggested to visit the faraway Golden Gate Bridge first since most of venues such as museums are not yet opened early in the morning.Case III: Route Score Optimization Capability: In this case, we are interested in the difference between the optimal route versus an average route. Fig.8(d) shows a randomly selected augmented route R 4 , which is generated by our proposed gravity maximizer algorithm under the same query as Fig.8(c). The user is also suggested to visit the faraway Golden Gate Bridge first in R 4 . Although the average route includes all the user-specified venues and meets the total travel time budget constraint, it only accommodates two preferred venues due to the long transit time caused by taking an inefficient venue visiting order. As a result, the user only has time to take a quick snack for lunch if taking R 4 . Therefore, its route score (12.9087) is much lower than that of the recommended optimal route R 3 .</figDesc><graphic coords="12,47.39,69.65,504.14,285.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="3,120.80,101.84,346.56,186.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I DIFFERENCES</head><label>I</label><figDesc>BETWEEN PRIOR WORK AND OUR TRIPPLANNER SYSTEM IN TERMS OF USER PREFERENCES, NODE, EDGE, AND BUDGET CONSTRAINTS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>v c , . . . , v n //the index of v c in tmpR is k, and the venue orders in R kept unchanged</figDesc><table><row><cell></cell><cell>in tmpR</cell></row><row><cell cols="2">5: if tmpR is valid then</cell></row><row><cell>6:</cell><cell>newR = newR ∪ tmpR</cell></row><row><cell cols="2">7: end if</cell></row><row><cell cols="2">8: end for</cell></row><row><cell cols="2">9: if newR is empty or min[T C(newR)] &gt; Δ then</cell></row><row><cell cols="2">10: augR = R</cell></row><row><cell cols="2">11: else</cell></row><row><cell cols="2">12: augR = arg min T C(newR) //select the newly aug-</cell></row><row><cell></cell><cell>mented route with the minimal total travel time cost</cell></row><row><cell cols="2">13: end if</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II INFORMATION</head><label>II</label><figDesc>ABOUT THE THREE DESIGNED CASES</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>We use venue and POI interchangeably throughout this paper.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>http://maps.google.com</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>Foursquare categorizes all venues in a three-level hierarchy. More details can be found at http://aboutfoursquare.com/foursquare-categories</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank the anonymous reviewers and the editors for their helpful comments and suggestions. The authors would also like to thank D. Yang for the preparation of the Foursquare data set and other colleagues for insightful discussions.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the National High Technology Research and Development Program of China (863) under Grant 2013AA01A605; by the National Key Basic Research Program of China under Grant 2013CB329504; by the New Century Excellent Talents in University Program under Grant NCET-13-0521; and by the National Natural Science Foundation of China under Grant 61332005, Grant 61373119, and Grant 61222209. The Associate Editor for this paper was Q. Zhang.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Leveraging electronic ticketing to provide personalized navigation in a public transport network</title>
		<author>
			<persName><forename type="first">A</forename><surname>Aguiar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Nunes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Elias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="213" to="220" />
			<date type="published" when="2012-03">Mar. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Mining people&apos;s trips from large scale geo-tagged photos</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Arase</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nishio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MM</title>
		<meeting>MM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="133" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Real-time trip information service for a large taxi fleet</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Balan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">X</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MobiSys</title>
		<meeting>MobiSys</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="99" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Location-based and preferenceaware recommendation using sparse geo-social networking data</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Mokbel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. GIS</title>
		<meeting>GIS</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="199" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Interactive itinerary planning</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basu Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Amer-Yahia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICDE</title>
		<meeting>IEEE ICDE</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="15" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Where shall we go today? Planning touristic tours with TripBuilder</title>
		<author>
			<persName><forename type="first">I</forename><surname>Brilhante</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Macedo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Nardini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Perego</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Renso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM CIKM</title>
		<meeting>ACM CIKM</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="757" to="762" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Estimating origin-destination flows using mobile phone location data</title>
		<author>
			<persName><forename type="first">F</forename><surname>Calabrese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Di</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lorenzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><surname>Ratti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pervasive Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="36" to="44" />
			<date type="published" when="2011-04">Apr. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Keyword-aware optimal route search</title>
		<author>
			<persName><forename type="first">X</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB Endowment</title>
		<meeting>VLDB Endowment</meeting>
		<imprint>
			<date type="published" when="2012-07">Jul. 2012</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1136" to="1147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Routing service quality-Local driver behavior versus routing services</title>
		<author>
			<persName><forename type="first">V</forename><surname>Ceikute</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE MDM</title>
		<meeting>IEEE MDM</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="97" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">B-Planner: Planning bidirectional night bus routes using large-scale taxi GPS traces</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z.-H</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1451" to="1465" />
			<date type="published" when="2014-08">Aug. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Automatic construction of travel itineraries using social breadcrumbs</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">De</forename><surname>Choudhury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. HT</title>
		<meeting>HT</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On the complexity of package recommendation problems</title>
		<author>
			<persName><forename type="first">T</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Geerts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1940" to="1986" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">TARSIUS: A system for trafficaware route search under conditions of uncertainty</title>
		<author>
			<persName><forename type="first">I</forename><surname>Hefez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kanza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. GIS</title>
		<meeting>GIS</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="517" to="520" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Modelling intra-city time-dependent travel speeds for vehicle scheduling problems</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>Benton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="343" to="351" />
			<date type="published" when="1992-04">Apr. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Exploiting large-scale check-in data to recommend time-sensitive routes</title>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-T</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-D</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. UrbComp</title>
		<meeting>UrbComp</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="55" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The path inference filter: Modelbased low-latency map matching of probe vehicle data</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hunter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Bayen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="507" to="529" />
			<date type="published" when="2014-04">Apr. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Path and travel time inference from GPS probe vehicle data</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hunter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Herring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bayen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. NIPS</title>
		<meeting>NIPS</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Interactive route search in the presence of order constraints</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kanza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Safra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sagiv</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB Endowment</title>
		<meeting>VLDB Endowment</meeting>
		<imprint>
			<date type="published" when="2010-09">Sep. 2010</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="117" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Toprecs+: Pushing the envelope on recommender systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Khabbaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V S</forename><surname>Lakshmanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Data Eng. Bull</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="61" to="68" />
			<date type="published" when="2011-06">Jun. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Travel route recommendation using geotags in photo sharing sites</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kurashima</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Iwata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Irie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Fujimura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CIKM</title>
		<meeting>CIKM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="579" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">TARS: Traffic-aware route search</title>
		<author>
			<persName><forename type="first">R</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kanza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">GeoInformatica</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="40" />
			<date type="published" when="2014-07">Jul. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">On trip planning queries in spatial databases</title>
		<author>
			<persName><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hadjieleftheriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kollios</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-H</forename><surname>Teng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SSTD</title>
		<meeting>SSTD</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="273" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Computer solutions of the traveling salesman problem</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell Syst. Tech. J</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2245" to="2269" />
			<date type="published" when="1965-12">Dec. 1965</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Learning geographical preferences for point-of-interest recommendation</title>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Xiong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM KDD</title>
		<meeting>ACM KDD</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="1043" to="1051" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Personalized trip recommendation with multiple constraints by mining user check-in behaviors</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename></persName>
		</author>
		<author>
			<persName><forename type="first">-C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Tseng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. GIS</title>
		<meeting>GIS</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="209" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Photo2Trip: Generating travel routes from geo-tagged photos for trip planning</title>
		<author>
			<persName><forename type="first">X</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MM</title>
		<meeting>MM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="143" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">Lun</forename><surname>Chou</surname></persName>
		</author>
		<title level="m">Statistical Analysis With Business and Economic Applications</title>
		<editor>
			<persName><forename type="first">Rinehart</forename><surname>Holt</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Winston</forename></persName>
		</editor>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">How many places do you visit a day?</title>
		<author>
			<persName><forename type="first">M</forename><surname>Papandrea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zignani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gaito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Giordano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rossi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Pervasive Comput</title>
		<meeting>IEEE Int. Conf. Pervasive Comput</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="218" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The optimal sequenced route query</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sharifzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kolahdouzan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Shahabi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">VLDB J</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="765" to="787" />
			<date type="published" when="2008-07">Jul. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Tourist trip planning functionalities: State-of-the-art and future</title>
		<author>
			<persName><forename type="first">W</forename><surname>Souffriau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Vansteenwegen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Current Trends Web Eng</title>
		<meeting>Current Trends Web Eng</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="474" to="485" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Evaluating the adequacy of gravity models as a description of human mobility for epidemic modelling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Truscott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M</forename><surname>Ferguson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page">e1002699</biblScope>
			<date type="published" when="2012-10">Oct. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The city trip planner: An expert system for tourists</title>
		<author>
			<persName><forename type="first">P</forename><surname>Vansteenwegen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Souffriau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">V</forename><surname>Berghe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">V</forename><surname>Oudheusden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Syst. Appl</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="6540" to="6546" />
			<date type="published" when="2011-06">Jun. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Parallel control and management for intelligent transportation systems: Concepts, architectures, applications</title>
		<author>
			<persName><forename type="first">F.-Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="630" to="638" />
			<date type="published" when="2010-09">Sep. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Breaking out of the box of recommendations: From items to packages</title>
		<author>
			<persName><forename type="first">M</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Lakshmanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">T</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Conf. Recommender Syst</title>
		<meeting>ACM Conf. Recommender Syst</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="151" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Multi-approximate-keyword routing in GIS data</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. GIS</title>
		<meeting>GIS</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="201" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Exploiting geographical influence for collaborative point-of-interest recommendation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Yin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-C</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D.-L</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGIR</title>
		<meeting>SIGIR</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="325" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">T-drive: Enhancing driving directions with taxi drivers&apos; intelligence</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Knowl. Data Eng</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="220" to="232" />
			<date type="published" when="2013-01">Jan. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Data-driven intelligent transportation systems: A survey</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1624" to="1639" />
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Mining interesting locations and travel sequences from GPS trajectories</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-Y</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="791" to="800" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Mining travel patterns from geotagged photos</title>
		<author>
			<persName><forename type="first">Y.-T</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z.-J</forename><surname>Zha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-S</forename><surname>Chua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Intell. Syst. Technol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="56" />
			<date type="published" when="2012-05">May 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Navigate like a cabbie: Probabilistic reasoning from observed context-aware behavior</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D</forename><surname>Ziebart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Maas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Bagnell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. UbiComp</title>
		<meeting>UbiComp</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="322" to="331" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Design and assessment of an online passenger information system for integrated multimodal trip planning</title>
		<author>
			<persName><forename type="first">K</forename><surname>Zografos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Androutsopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Spitadakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Intell. Transp. Syst</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="311" to="323" />
			<date type="published" when="2009-06">Jun. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
