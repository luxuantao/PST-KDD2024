<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">iCAP: An Informal Tool for Interactive Prototyping of Context-Aware Applications</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Timothy</forename><forename type="middle">Y</forename><surname>Sohn</surname></persName>
							<email>tsohn@cs.berkeley.edu</email>
						</author>
						<author>
							<persName><forename type="first">Anind</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">EECS Department</orgName>
								<orgName type="department" key="dep2">Computer Science Division</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>94720</postCode>
									<settlement>Berkeley Berkeley</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Intel Research</orgName>
								<address>
									<settlement>Berkeley</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Intel Corporation Berkeley</orgName>
								<address>
									<postCode>94704</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">iCAP: An Informal Tool for Interactive Prototyping of Context-Aware Applications</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">E671ED5253D2A981AD282C267E1F7944</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Informal prototyping, context-aware computing</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>iCAP is a system that assists users in prototyping contextaware applications. iCAP supports sketching for creating input and output devices, and using these devices to design interaction rules, which can be prototyped in a simulated or real context-aware environment. We were motivated to build our system by the lack of tools currently available for developing rich sensor-based applications. We iterated on the design of our system using paper prototypes and obtained feedback from fellow researchers, to develop a robust system for prototyping context-aware applications.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>The emergence of context-aware applications, those that take into account their context of use, has shown the ability for rich interaction with the surrounding environment. However, although some of these applications have been developed, the proliferation of context-aware applications is inhibited by the lack of programming support to rapidly develop them. Currently, to develop a context-aware application, developers are required to either design their own application from scratch, directly interacting with devices, or use a toolkit <ref type="bibr" target="#b0">[1]</ref>. However, even with low-level toolkit support for acquiring context, experienced developers are still required to write a large amount of code to develop simple applications. A context-aware application typically consists of an infrastructure to capture context and rules governing how the application should respond to changes in this context. iCAP is the intermediate layer between low-level toolkits and users, providing a powerful tool for developing interesting, complex context-aware applications, while allowing developers to prototype applications without writing any code. iCAP is an informal pen-based tool that allows users to quickly define input devices that collect context and output devices that support response, create application rules with them, and test the rules by interacting with the devices in a run mode. The behavior of created devices can either be simulated by this tool, or mapped to actual devices. We built iCAP using the Java 2 SDK version 1.4, on top of SATIN <ref type="bibr" target="#b1">[2]</ref>, a toolkit for building informal pen-based interaction systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>THE iCAP INTERFACE</head><p>iCAP has one window with two main areas (see Figure <ref type="figure">1</ref>). On the left is a tabbed window that is the repository for the user-defined inputs, outputs, and rules. The input and output components are associated with graphical icons that can be dragged into the center area, then be used to construct a conditional rule statement.</p><p>The center area contains the two elements of a conditional rule statement, which is inherent within context-aware applications. An example rule is: if John is in the office after 5pm and the temperature is less than 50 degrees or Figure <ref type="figure">1</ref>. The iCAP user interface with an example rule that uses two input sheets if Jane is in the bedroom and the temperature is between 30 and 60 degrees, turn on the heater in the house (Figure <ref type="figure">1</ref>). The left side represents the ''if'' portion of the rule conditional, and can be split into one or more ''sheets''. Inputs on a single sheet are related by a conjunction and multiple sheets are related by a disjunction. The right side of this area represents the ''then'' portion of the rule condition. Disjunction amongst different outputs is rare, thus only a single output sheet is currently supported. We implemented Pane and Myers' matching scheme to allow users to visually specify the Boolean logic of each rule <ref type="bibr" target="#b2">[3]</ref>.</p><p>Instead of traditional pull-down menus for executing commands, we use pie menus to better support pen interaction. In addition, we also support gestures for issuing common commands such as cut, copy, and paste of inputs and outputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTERACTION</head><p>iCAP involves specifying inputs and outputs, using these elements to construct application rules, and then testing the entire set of rules in a run mode.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Creating Inputs and Outputs</head><p>Each input and output component in iCAP is associated with a graphical icon. These icons are sketches drawn by the user upon creation of each component. Each icon is colored differently depending on whether it is an input or output device.</p><p>The repository window pie menu supports creation of inputs. Each input contains a suffix (e.g. degrees Celsius for temperature), type (e.g. integer, string), and four categories or primary types of context: Activity, Identity, Location, and Time. An input's potential values can be provided as a range or list.</p><p>Outputs are created in the same manner as inputs, however contain different parameters to specify. Each output is either a binary or a gradient device. By default, the number of levels in a gradient device is between 1 and 10 inclusive. In addition, there are five categories an output device is associated with corresponding to the five human senses: Sight, Sound, Smell, Taste, and Touch.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Constructing Rules</head><p>Rules are constructed by dragging and dropping inputs and outputs onto the ''if'' and ''then'' sheets of each rule. For example, if the user were interested in a temperature sensor, he would define a temperature input, and drag the corresponding icon onto the respective sheet. After dragging each corresponding icon, the user needs to setup certain parameters, or conditions, governing the behavior of the input. Using our temperature sensor, the user may want to know when the temperature is less than 50 degrees, or possibly between 30 and 60 degrees. We allow the user to specify a conjunction of up to three conditions using the following operators: less than, less than equal, greater than, equal, not equal. Multiple condition sets can be defined, and are all related by a disjunction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Evaluating the Application</head><p>After a number of rules have been defined, the entire rule set can be tested using the iCAP engine in run mode. The engine can either be set to simulate the context-aware environment, or be used in conjunction with a real context-aware environment <ref type="bibr" target="#b0">[1]</ref>. Users can interact with the engine to change the value of defined inputs, and evaluate the behavior of the rules being tested. With the engine, users are able to quickly design and test their applications, without having to create an entire infrastructure for collecting or simulating context and without writing any code.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RELATED WORK</head><p>iCAP has been inspired by previous work in ubiquitous computing applications, specifically those that involve the development of rule based conditions. Some of these include AgentSheets <ref type="bibr" target="#b4">[5]</ref> and Stick-e notes <ref type="bibr" target="#b3">[4]</ref>. These tools are designed for building applications, while iCAP is focused on helping developers rapidly prototype, test and iterate on their context-aware applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FUTURE DIRECTIONS</head><p>While we have received informal feedback from local designers of context-aware systems, we are planning to conduct a more formal study of our iCAP with a number of real users to see what features are used, and how to improve interaction with the system. Our goal is to enable both designers and end-users with the ability to create and modify context-aware applications, giving them the power that only programmers enjoy today.</p></div>			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Interactive &amp; Student Posters: Computers Everywhere</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>Posters: Computers Everywhere</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">&apos;A Conceptual Framework and a Toolkit for Supporting the Rapid Prototyping of Context-Aware Applications</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Salber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Abowd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Human-Computer Interaction Journal</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2-4</biblScope>
			<biblScope unit="page" from="97" to="166" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">SATIN: A Toolkit for Informal Ink-based Applications</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">I</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Landay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of User Interface and Software Technology</title>
		<meeting>User Interface and Software Technology</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Tabular and Textual Methods for Selecting Objects from a Group</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Pane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Myers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Visual Languages</title>
		<meeting>International Symposium on Visual Languages</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="157" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Stick-e Note Architecture: Extending the Interface Beyond the User</title>
		<author>
			<persName><forename type="first">J</forename><surname>Pascoe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Intelligent User Interfaces</title>
		<meeting>Intelligent User Interfaces</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="261" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Creating User Interfaces with Agentsheets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Repenning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Symposium on Applied Computing</title>
		<meeting>Symposium on Applied Computing</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="190" to="196" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
