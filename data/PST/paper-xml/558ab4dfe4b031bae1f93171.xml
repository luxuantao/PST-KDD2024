<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fault Detection for Robot Manipulators with Parametric Uncertainty: A Prediction-Error-Based Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Warren</forename><forename type="middle">E</forename><surname>Dixon</surname></persName>
						</author>
						<author role="corresp">
							<persName><roleName>Member, IEEE</roleName><forename type="first">Ian</forename><forename type="middle">D</forename><surname>Walker</surname></persName>
							<email>ianw@ces.clemson.edu</email>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Darren</forename><forename type="middle">M</forename><surname>Dawson</surname></persName>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">John</forename><forename type="middle">P</forename><surname>Hartranft</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">IEEE International Conference on Robotics and Automa-tion</orgName>
								<address>
									<postCode>2000</postCode>
									<settlement>San Francisco</settlement>
									<region>CA, April</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical and Computer Engi-neering</orgName>
								<orgName type="institution">Clemson University</orgName>
								<address>
									<postCode>29634-0915</postCode>
									<settlement>Clemson</settlement>
									<region>SC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">the Oak Ridge National Laboratory</orgName>
								<address>
									<postCode>37909</postCode>
									<settlement>Knoxville</settlement>
									<region>TN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Clemson University</orgName>
								<address>
									<postCode>29634-0915</postCode>
									<settlement>Clemson</settlement>
									<region>SC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fault Detection for Robot Manipulators with Parametric Uncertainty: A Prediction-Error-Based Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">6E11335867B315000D0D29799020DDB4</idno>
					<note type="submission">received February 2, 2000; revised August 29, 2000.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:23+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Fault detection</term>
					<term>nonlinear dynamics</term>
					<term>prediction error</term>
					<term>robot manipulator</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we introduce a new approach to fault detection for robot manipulators. The technique, which is based on the isolation of fault signatures via filtered torque prediction error estimates, does not require measurements or estimates of manipulator acceleration as is the case with some previously suggested methods. The method is formally demonstrated to be robust under uncertainty in the robot parameters. Furthermore, an adaptive version of the algorithm is introduced, and shown to both improve coverage and significantly reduce detection times. The effectiveness of the approach is demonstrated by experiments with a two-joint manipulator system.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>I N THE past few years, as the application of robots has ex- panded, there has been significant activity in the area of robot reliability and fault tolerance <ref type="bibr" target="#b18">[19]</ref>. Fault tolerance is especially important in remote and hazardous environments, such as found in space, underwater, and radioactive applications (where repair is often infeasible, and failure can have disastrous consequences), although reliability and safety are important issues in almost all applications.</p><p>Various approaches to tolerating failures in robot manipulators have been proposed recently. Most have centered on the addition of some form of redundancy, for example, in actuation <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b22">[23]</ref>, joints <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b15">[16]</ref>, sensors <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b24">[25]</ref>, or software <ref type="bibr" target="#b21">[22]</ref>, to provide "backup" beyond the core requirements of the system. Given the detection of a fault, the system degrades gracefully by using the "backup" components. For example, if a manipulator is kinematically redundant, its end-effector task can often still be carried out by the surviving joints following a joint failure <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b12">[13]</ref>. Similarly, redundant sensing allows a system to switch to "healthy" sensors following a sensor failure <ref type="bibr" target="#b13">[14]</ref>.</p><p>However, such redundancy can only be exploited if fault detection is effective, enabling the system to reconfigure and use "healthy" components. Robot fault detection has therefore become an issue of significant interest recently, with several new approaches suggested for mobile robot fault detection <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b13">[14]</ref> (see below).</p><p>In <ref type="bibr" target="#b24">[25]</ref>, the use of redundant sensors on each joint of the Space Shuttle Remote Manipulator System (RMS) was described. Faults were inferred if the sensors disagreed significantly with the prescribed trajectory or each other. A simple thresholding scheme was used to infer when a fault has occurred (i.e., when disagreement was "significant"). However, selection of numerical values for the thresholds proved difficult, and inappropriate choices led to false alarms during missions <ref type="bibr" target="#b24">[25]</ref>.</p><p>The problems described in <ref type="bibr" target="#b24">[25]</ref> illustrate the key difficulty endemic to manipulator fault detection. The normal (fault-free) dynamics of the robot lead to inevitable deviations from the nominal trajectory in fault-free operation, and the magnitude of these deviations cannot be predicted (and therefore can appear to be a fault unless properly masked by the thresholds), when the dynamics are not explicitly considered in the analysis, as was the case in <ref type="bibr" target="#b24">[25]</ref>. Clearly, fault detection will be most effective when good dynamic models for the manipulator are considered in the fault detection tests (residuals) or the threshold selection, or both. In <ref type="bibr" target="#b12">[13]</ref>, a robust tracking controller/fault detection scheme was proposed that utilized the full dynamic model of the robot manipulator; unfortunately, the fault detection residuals are based on conservative thresholds, that are obtained by taking the norm of user defined upper bounds for the position and velocity tracking errors.</p><p>A dynamics-based approach was adopted in <ref type="bibr" target="#b5">[6]</ref>, where faults were inferred for a standard industrial robot by monitoring sudden changes in a vector of on-line parameter estimates for the robot. The method was shown to be effective for certain types of faults. However the underlying dynamic model was highly simplified (constant inertias and coupling between joints was neglected), which implies again the need for either conservative thresholds, or probable false alarms.</p><p>A more rigorous approach to the synthesis of fault detection residuals was presented in <ref type="bibr" target="#b19">[20]</ref>, in which the theoretical maximum number of independent residuals were derived for a manipulator with redundant sensing, based on linearized dynamics for the robot. Dynamic thresholds were developed based on full (nonlinear) manipulator dynamics. The results were promising, however the thresholds required the measurement or estimation of manipulator acceleration which is problematic at best in practice. That is, for most practical applications the manipulator acceleration is not directly measured, rather it is numerically calculated from position or velocity signals, and hence, the signal is inherently noisy.</p><p>Other approaches to manipulator fault detection have included the development of observers <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b23">[24]</ref> for residual generation. However, the generation of appropriate thresholds for the observer-based residuals (an issue not discussed in <ref type="bibr" target="#b23">[24]</ref>) remains an issue-for example, in <ref type="bibr" target="#b0">[1]</ref>, the estimation or measurement of joint accelerations is still required in order to mask the effects of disturbances due to parametric errors in the dynamics. In <ref type="bibr" target="#b11">[12]</ref>, a fuzzy logic approach is used to allow for such disturbances, however the approach remains somewhat heuristic. A neural network approach to manipulator fault detection was adopted in <ref type="bibr" target="#b1">[2]</ref> and <ref type="bibr" target="#b16">[17]</ref>; however, the fault detection algorithms are based on a user defined bound on the modeling uncertainty. We also note that other on-line estimation fault detection approaches are proposed in <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b20">[21]</ref>, and <ref type="bibr" target="#b25">[26]</ref>.</p><p>In this paper, we build on the initial research presented in <ref type="bibr" target="#b3">[4]</ref> to further develop a new method for robot manipulator fault detection. The approach is based on the generation of residuals and exploits the structure of the full nonlinear manipulator dynamics through a filtered torque estimate that does not rely upon the measurement of acceleration quantities. Furthermore, the structure of the algorithm lends itself to adaptive and robust versions to take into account the inevitable uncertainty in the robot parameters. New thresholds for the residuals for all the above cases are developed, and the effectiveness of the approach is demonstrated through experiments with a two joint robot system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. DYNAMIC MODEL</head><p>The mathematical model for an -degree-of-freedom (DOF) robotic manipulator is assumed to have the following form:</p><p>(1) where , , denote the link position, velocity, and acceleration, respectively, represents the positive-definite, symmetric inertia matrix, represents centripetal-Coriolis, gravitational, and friction effects, represents a fault in the robot manipulator, represents a unit step function, represents the time instant at which a fault occurs, and represents the torque input vector. In order to further model the class of faults considered in this paper, we can isolate by rewriting (1) as follows:</p><p>(2)</p><p>Hence, a locked-joint fault is characterized by ( <ref type="formula">2</ref>) and a freeswinging actuator fault (i.e., ), a ramp actuator fault (i.e.,</p><p>), and a saturated actuator fault (i.e.,</p><p>) are characterized as</p><formula xml:id="formula_0">(3)</formula><p>respectively, where is the applied torque at joint , is a positive scaling term, and represents a vector of maximum torques that can be applied by the actuators.</p><p>The dynamic equation given in (1), exhibits the following property <ref type="bibr" target="#b7">[8]</ref> which is utilized in conjunction with the following assumptions in the subsequent fault detection algorithm development.</p><p>Property 1: The robot dynamics given in ( <ref type="formula">1</ref>) can be linearly parameterized as follows: <ref type="bibr" target="#b3">(4)</ref> where denotes a known regression matrix that is a function of , , , and contains the unknown constant system parameters.</p><p>Assumption 1: Each of the constant system parameters defined in (4) can be lower and upper bounded as indicated by the following inequalities <ref type="bibr" target="#b4">(5)</ref> where denotes the th component of the vector , and , denote vectors of known, constant bounds for the unknown parameters.</p><p>Assumption 2: A control is designed which ensures that in the absence of a fault (i.e., , , and that where represents the desired trajectory. Note that based on the form of the dynamic model given in (1), if , , , it is clear that . Remark 1: One method for detecting actuator faults could be to utilize ( <ref type="formula">1</ref>) and ( <ref type="formula">4</ref>) to isolate the fault as shown below <ref type="bibr" target="#b5">(6)</ref> Unfortunately, due to the fact that ( <ref type="formula">6</ref>) would require exact model knowledge of the system and acceleration measurements, it is clear that ( <ref type="formula">6</ref>) is impractical for fault detection purposes; hence, we are motivated to craft a fault detection algorithm that is independent of link acceleration measurements and exact knowledge of the system parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. TORQUE FILTERING</head><p>Motivated by the desire to eliminate link acceleration measurements from the subsequent fault detection algorithm, we define a filtered torque signal denoted by as follows <ref type="bibr" target="#b7">[8]</ref>: <ref type="bibr" target="#b6">(7)</ref> where denotes the standard convolution operation, was defined in (1), the filter function, denoted by , is given by <ref type="bibr" target="#b7">(8)</ref> and , denote positive filter constants. By substituting the left-hand side of ( <ref type="formula">1</ref>) into <ref type="bibr" target="#b6">(7)</ref> for and utilizing standard convolution properties (see Appendix A), we can rewrite <ref type="bibr" target="#b6">(7)</ref> in terms of the following linear parameterization: <ref type="bibr" target="#b8">(9)</ref> where denotes the same unknown, constant parameter vector defined in (4), denotes the measurable, filtered regression matrix which is independent of link acceleration measurements and is explicitly given by <ref type="bibr" target="#b9">(10)</ref> and denotes a filtered fault signal defined as follows:</p><p>(11)</p><p>The structure of ( <ref type="formula">9</ref>) will be exploited in the subsequent analysis; however, since is a vector of uncertain parameters, the structure of ( <ref type="formula">9</ref>) cannot be implemented. An implementable form (i.e., a measurable, acceleration independent form) of ( <ref type="formula">9</ref>) can be determined by utilizing ( <ref type="formula">7</ref>) and ( <ref type="formula">8</ref>) along with Laplace transform properties to generate the filtered torque signal via the following differential equality: <ref type="bibr" target="#b11">(12)</ref> where , were defined in <ref type="bibr" target="#b7">(8)</ref>. Remark 2: Due to the structure of the above torque filtering technique, the filtered version of the fault is delayed from the actual fault; although, if is made increasingly large, the delay is minimized. Based on <ref type="bibr" target="#b8">(9)</ref>, it also is clear that the fault can be isolated in terms of an expression that is independent of link acceleration measurements. Thus, we are now motivated to design an algorithm based on (9) that can detect actuator faults in the presence of parametric uncertainty.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. PREDICTION-ERROR-BASED FAULT DETECTION</head><p>The objective of this paper is to design an algorithm that can detect actuator faults in -DOF robotic manipulators despite uncertainty in the mechanical parameters. To this end, we define a measurable prediction error signal, denoted by , as follows: <ref type="bibr" target="#b12">(13)</ref> where was defined in <ref type="bibr" target="#b11">(12)</ref>, and is a subsequently designed filtered torque estimate. This is similar to one of the fault detection tests proposed in <ref type="bibr" target="#b19">[20]</ref>; however, in <ref type="bibr" target="#b19">[20]</ref> acceleration estimates were required for implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Constant Best-Guess Estimate 1</head><p>Due to the presence of parametric uncertainty in (1), the filtered torque estimate given in ( <ref type="formula">13</ref>) is designed as follows: <ref type="bibr" target="#b13">(14)</ref> where is a constant, best-guess parameter estimate for defined in (4) and was defined in <ref type="bibr" target="#b8">(9)</ref>. From the design of , we can use ( <ref type="formula">9</ref>), <ref type="bibr" target="#b12">(13)</ref>, and ( <ref type="formula">14</ref>) to obtain the following new expression for : <ref type="bibr" target="#b14">(15)</ref> where quantifies the mismatch between the actual uncertain parameters and the constant, best guess parameter estimate as shown below <ref type="bibr" target="#b15">(16)</ref> Based on Assumption 1, we can upper bound the prediction error signal given in <ref type="bibr" target="#b14">(15)</ref> as follows: <ref type="bibr" target="#b16">(17)</ref> where is a positive bounding signal selected to satisfy the following inequality: <ref type="bibr" target="#b17">(18)</ref> and represents the th element of a vector. Based on the structure of ( <ref type="formula">17</ref>), we define a fault indicating, dead-zone residual function, denoted by , as follows:</p><formula xml:id="formula_1">if if (<label>19</label></formula><formula xml:id="formula_2">)</formula><p>to determine if a fault occurs. That is, if</p><p>then an actuator fault is present in the system; however, if the parameter uncertainty in the system is relatively large, then some faults may not be detected due to the inability of the fault detection scheme given in <ref type="bibr" target="#b18">(19)</ref> to distinguish the actuator faults from the parameter uncertainty. Remark 3: Since the ability of the fault detection algorithm to detect faults is directly linked to the degree of parametric uncertainty in the system [see ( <ref type="formula">18</ref>) and ( <ref type="formula" target="#formula_1">19</ref>)], we are motivated to examine the bounding signal given in <ref type="bibr" target="#b17">(18)</ref>. One method for selecting is given below <ref type="bibr" target="#b20">(21)</ref> where ( <ref type="formula">5</ref>) and ( <ref type="formula">16</ref>) were utilized. It is clear that selecting according to (21) may yield a bound that is too conservative, and hence, the sensitivity of the fault detection algorithm is reduced.</p><p>Another method for selecting is to utilize interval methods <ref type="bibr" target="#b8">[9]</ref>. That is, since we assume that is contained in the interval [see <ref type="bibr" target="#b4">(5)</ref>], a less conservative method for selecting is given below <ref type="bibr" target="#b21">(22)</ref> where the bounding functions , represent time-varying interval parameters that are generated on-line according to the following expression: <ref type="bibr" target="#b22">(23)</ref> The advantage of selecting in a less conservative manner [e.g., <ref type="bibr" target="#b21">(22)</ref>] is demonstrated in the subsequent experimental verification section.</p><p>Remark 4: The motivation for selecting <ref type="bibr" target="#b18">(19)</ref> as shown below if versus some positive constant (i.e., if ), arises from the additional flexibility gained with regard to observing the extent that the residual given in <ref type="bibr" target="#b18">(19)</ref> was violated. That is, by utilizing <ref type="bibr" target="#b18">(19)</ref>, possible false alarm conditions that may occur (e.g., due to signal noise, numeric roundoff, etc.) may be avoided.</p><p>Remark 5: If exact model knowledge of the system is available, then we can simply redesign as follows: <ref type="bibr" target="#b23">(24)</ref> where defined in ( <ref type="formula">4</ref>) is now assumed to be known. After substituting ( <ref type="formula">9</ref>) and ( <ref type="formula">24</ref>) into (13), we obtain the following expression for : <ref type="bibr" target="#b24">(25)</ref> hence, at least, in the theory, for . It should be noted that in practice small uncertainties and measurement noise will no doubt ensure that for (i.e., will equal some unknown time-varying function); hence, we define a fault indicating, dead-zone residual function, denoted by , as follows:</p><formula xml:id="formula_4">if if (<label>26</label></formula><formula xml:id="formula_5">)</formula><p>such that, if an actuator fault is present in the system (27)</p><p>where is a vector of positive, scalar design constants that are experimentally determined to account for small uncertainties and measurement noise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Parameter Uncertainty with Adaptive Update Law</head><p>In order to craft a more sensitive fault detection algorithm, and hence, decrease the effects of the parameter uncertainty [i.e., reducing in ( <ref type="formula" target="#formula_1">19</ref>)], we now construct a dynamic on-line estimate for the uncertain parameters versus the constant, best-guess estimate used in <ref type="bibr" target="#b13">(14)</ref>. Specifically, is generated via a prediction error driven gradient update law as follows:</p><p>(28) where is a constant, diagonal, positive-definite, adaptation gain matrix. In order to facilitate the subsequent analysis, we define a nonnegative function denoted by as follows:</p><p>(29) After taking the time derivative of (29), utilizing the fact that , and then substituting for (28), we obtain the following expression:</p><p>(30) where ( <ref type="formula">15</ref>) was utilized. After integrating both sides of (30), we have That is, for the adaptive-based fault detection scheme, we can use the following residual:</p><p>(36)</p><p>or the residual given in <ref type="bibr" target="#b18">(19)</ref> to determine if an actuator fault is present in the system. Due to the fact that the residuals given by ( <ref type="formula" target="#formula_1">19</ref>) and ( <ref type="formula">35</ref>) are based on fixed, conservative thresholds, we are motivated to exploit the properties of the adaptive-based prediction error signal and design a dead-zone update rule to modify the dead-zone thresholds as decreases. To illustrate that in the absence of a fault, we first use ( <ref type="formula">16</ref>), (29), and (30) to conclude that , . Furthermore, from <ref type="bibr" target="#b11">(12)</ref> and Assumption 2, we have that . Based on the facts that , , we can utilize <ref type="bibr" target="#b14">(15)</ref> to conclude that . Since</p><p>, we can conclude from (28) that . Based on the facts that , , , , we can prove that . Furthermore, utilizing (30), we can conclude that ; therefore, since , and , we can utilize Barbalat's Lemma to conclude that in the absence of a fault. From ( <ref type="formula">29</ref>) and (30), it is clear that (37) in the absence of a fault where is a positive constant. Based on (37), it is straightforward to prove that in the absence of a fault, where is a vector of positive constants.</p><p>Based on the facts that and in the absence of a fault, we now design a fault indicating, dead-zone residual function with the improved capability of detecting magnitude faults. That is, since the parameter estimates converge to constants, we construct an adjustable threshold window around each parameter estimate that allows for residual threshold reduction as the estimate values become constant. To detect if the condition is satisfied before a potential fault, we define a set of sliding windows (see Fig. <ref type="figure" target="#fig_1">1</ref>) with a user-defined window height, denoted by , and a user-defined window length, denoted by , as follows:</p><p>(38) and . If violates (38) at any time instant during the interval (i.e., if the parameter estimate has not settled within the tolerances of the window), then the window will slide along the parameter estimate with time. If satisfies (38) for all values of time during the interval , then it is clear that the parameter estimates have approximately settled within the tolerances of the sliding window, and hence, has approximately converged to a constant. When (38) is satisfied for all of the param-eter estimates (i.e.,</p><p>), the maximum value of the prediction error is measured and utilized as the threshold for the residual. That is, the time instant when the final parameter estimate is contained within the user-defined sliding window, denoted by , the maximum value of the prediction error (i.e.,</p><p>) is recorded and utilized as the residual threshold. Specifically, we define a fault indicating, dead-zone residual function, denoted by , as follows:</p><formula xml:id="formula_6">if if (39) such that if (40)</formula><p>then an actuator fault is present in the system. Remark 6: Note that strictly speaking, we cannot guarantee that is a true upper bound for in the absence of a fault; hence, some false alarms may result. However, since , if the lengths of the sliding windows are selected to be appropriately long enough then the likelihood of false alarms can be practically eliminated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENTAL VERIFICATION</head><p>The proposed prediction-error-based fault detection algorithm was implemented on an Integrated Motion Inc. two-link, revolute, direct-drive robot manipulator (see Fig.  where , are vectors of positive constants experimentally determined as shown below to provide robustness to signal noise, numerical roundoff error, etc., , were selected to be 40% of the actual parameters, and was selected to be 20% of the parameter values for each of the two cases, respectively. For the experimental verification of the adaptive estimate prediction-error-based fault detection algorithm, we selected (i.e., we assume that no prior knowledge of the mechanical parameters exists) and of (28) was selected as shown below <ref type="bibr">(46)</ref> For each of the aforementioned experiments, the filter parameters given in (8) were selected as (47)</p><p>A comprehensive comparison of the delay time between the fault occurrence and the fault detection for each of the above cases was recorded in Table <ref type="table" target="#tab_0">I</ref>. Fault histories for each of the above cases are depicted in Figs. <ref type="figure" target="#fig_4">3</ref><ref type="figure" target="#fig_5">4</ref><ref type="figure">5</ref><ref type="figure">6</ref><ref type="figure" target="#fig_7">7</ref><ref type="figure" target="#fig_8">8</ref>for the best-guess estimate case [where was selected according to (45) (referred to as Case 1 in the figures) and (44) (referred to as Case 2 in the figures)] and the adaptive estimate case given in (39). In each of the figures, the marker "(a)" represents the residual threshold, the marker "(b)" indicates the prediction error, and the marker "(c)" indicates the instant the fault is detected. The left column of plots in Figs. <ref type="figure" target="#fig_4">3</ref><ref type="figure" target="#fig_5">4</ref><ref type="figure">5</ref><ref type="figure">6</ref><ref type="figure" target="#fig_7">7</ref><ref type="figure" target="#fig_8">8</ref>depicts the full time scale, whereas the right column of plots depicts the last 1.5 s in order to more clearly illustrate when the fault is detected. Note that we selected a time instant to inject the faults that corresponds to a time instant when all the adaptive parameter estimates had settled within the respective sliding windows (approximately 22 s); hence, the fault indicating dead-zone residual function given in (39) was utilized for the adaptive estimate case. If the fault had been injected prior to the parameter estimates converging then either the residual given in <ref type="bibr" target="#b18">(19)</ref> or (36) could have been utilized. After implementing the fault indicating dead-zone residual function given in (36), we concluded that (19) provided superior fault detection capabilities; hence, only data utilizing <ref type="bibr" target="#b18">(19)</ref> was recorded for comparison purposes.</p><p>From Table <ref type="table" target="#tab_0">I</ref>, it is clear that the performance of the adaptive estimate fault detection scheme provided superior fault detec-  tion capabilities. That is, provided each of the adaptive estimates have approximately settled to a constant, the time delay before an injected fault was detected was significantly less than the robust fault detection scheme. In addition, it is clear from Table <ref type="table" target="#tab_0">I</ref> that the time delay before an injected fault was detected was sig-nificantly decreased by utilizing the less conservative bounding function given in <ref type="bibr" target="#b21">(22)</ref> and <ref type="bibr" target="#b22">(23)</ref> [versus the bounding function given in <ref type="bibr" target="#b20">(21)</ref>]; hence, the performance of the proposed best-guess estimate fault detection algorithm may be improved by selecting the bounding function differently from (21) to (23) (i.e., an experimentally determined constant threshold could be utilized). Remark 7: Note that the disturbances such as signal noise, numerical roundoff error, etc. can be incorporated in the dynamic model of the robot manipulator given in (1) as an additive bounded disturbance. Assuming that the upper and lower bounds of the additive bounded disturbance are known, it is straightforward to include the bounding terms and in the theoretical development of the constant best-guess estimate fault detection scheme.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>In conclusion, we provide a fault detection method for robot manipulators, for exact model knowledge and parameter uncertainty cases. Two methods are presented for fault detection under parameter uncertainty: best-guess parameter estimates and a dynamic prediction error driven parameter update law. Conditions were given for all three fault detection schemes and a strategy was developed for detecting smaller faults after the parameter estimates have converged. One of the advantages of the proposed fault detection scheme is that it is independent from the controller; hence, the fault detection scheme can be utilized in conjunction with any controller (provided link position and velocity measurements are available). The effectiveness of the proposed fault detection methods was illustrated through experimental results.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>utilize (31) to upper bound the integral of the norm of the prediction error as follows: infinity norm. Based on the structure of (32), we define a fault indicating, dead-zone residual function, denoted by , as follows:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Sliding window diagram for a typical parameter estimate.</figDesc><graphic coords="5,131.04,62.22,328.32,151.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>2) with the following dynamics<ref type="bibr" target="#b2">[3]</ref>:(41)where the mechanical parameters have been experimentally determined as follows:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. IMI direct-drive manipulator.</figDesc><graphic coords="6,63.18,62.19,204.00,114.87" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Fault detection for a free swinging actuator fault on link 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Fault detection for a free swinging actuator fault on link 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Fault detection for a ramp actuator fault on link 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Fault detection for a saturated actuator fault on link 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Fault detection for a saturated actuator fault on link 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I COMPARISON</head><label>I</label><figDesc>OF DELAY TIMES (ms) BETWEEN THE ACTUATOR FAULT OCCURRENCE AND THE FAULT DETECTION</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The term best-guess-estimate is utilized to signify a constant parameter estimate that is defined by the user as a best-guess of the actual value of the unknown parameter. Specifically, the user may obtain a value for the best-guess estimate utilizing any of the appropriate parameter identification techniques that are found in literature.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Available at http://www.qrts.com</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head><p>In order to rewrite <ref type="bibr" target="#b6">(7)</ref> in terms of the linear parameterization given in <ref type="bibr" target="#b8">(9)</ref>, we first note that (1) can be written in the following form <ref type="bibr" target="#b7">[8]</ref>:</p><p>(48) where ( <ref type="formula">49</ref>) and</p><p>(50)</p><p>After substituting (48) into <ref type="bibr" target="#b6">(7)</ref>, we obtain the following expression:</p><p>(51</p><p>where the facts that (52) and (53) have been utilized. Hence, based on (51), it is straightforward to conclude that (7) can be rewritten in the structure given in <ref type="bibr" target="#b8">(9)</ref>. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Observer-based fault detection for robot manipulators</title>
		<author>
			<persName><forename type="first">F</forename><surname>Caccavale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">D</forename><surname>Walker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation</meeting>
		<imprint>
			<publisher>NM</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="2881" to="2887" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">On-line fault detection and isolation of nonlinear systems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. American Control Conf</title>
		<meeting>American Control Conf</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="3980" to="3984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Direct Drive Manipulator Research and Development Package Operations Manual</title>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Integrated Motion Inc</publisher>
			<pubPlace>Berkeley, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fault detection for robot manipulators with parametric uncertainty: A prediction error based approach</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">E</forename><surname>Dixon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">D</forename><surname>Walker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Dawson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hartranft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2000-04">April 2000</date>
			<biblScope unit="page" from="3628" to="3634" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Fault tolerance for kinematically redundant manipulators: Anticipating free-swinging joint failures</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>English</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Maciejewski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation<address><addrLine>Minneapolis, MN</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="460" to="467" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An approach to model-based fault diagnosis of industrial robots</title>
		<author>
			<persName><forename type="first">B</forename><surname>Freyermuth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="1350" to="1356" />
		</imprint>
	</monogr>
	<note>CA</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Dexterity optimization of kinematically redundant manipulators in the presence of joint failures</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Maciejewski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Elect. Eng</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="273" to="288" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Abdallah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dawson</surname></persName>
		</author>
		<title level="m">Control of Robot Manipulators</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>MacMillan</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Interval Methods for Systems of Equations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Neumaier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>Cambridge Univ. Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Kinematic design of fault tolerant manipulators</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J J</forename><surname>Paredis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">K F</forename><surname>Au</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">K</forename><surname>Khosla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Elect. Eng</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="211" to="220" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Fault detection and identification in a mobile robot using multiple-model estimation</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">I</forename><surname>Roumeliotis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sukhatme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Bekey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation<address><addrLine>Lueven, Belgium</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="2223" to="2228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Observer-based supervision and fault detection in robots using nonlinear and fuzzy logic residual evaluation</title>
		<author>
			<persName><forename type="first">H</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Frank</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Contr. Syst. Technol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="274" to="282" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Fault detection and robust fault recovery control for robot manipulators with actuator failures</title>
		<author>
			<persName><forename type="first">J.-H</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation<address><addrLine>Detroit, MI</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="861" to="866" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Grid based fault detection and calibration of sensors on mobile robots</title>
		<author>
			<persName><forename type="first">M</forename><surname>Soika</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation</meeting>
		<imprint>
			<publisher>NM</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="2589" to="2594" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Architectures for fault tolerant mechanical systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sreevijayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tosunoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tesar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Mediterranean Electrotechnical Conf</title>
		<meeting>IEEE Mediterranean Electrotechnical Conf<address><addrLine>Antalya, Turkey</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="1029" to="1033" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A control structure for fault tolerant operation of robotic manipulators</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Ting</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tosunoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tesar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="684" to="690" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Neural-network-based robust fault diagnosis in robotic systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vemuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Polycarpou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Neural Networks</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1410" to="1419" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Robust nonlinear fault diagnosis in input-output systems</title>
	</analytic>
	<monogr>
		<title level="j">Int. J. Contr</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="343" to="360" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Robotic fault detection and fault tolerance: A survey</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Visinsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Cavallaro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">D</forename><surname>Walker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rel. Eng. Syst. Safety</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="139" to="158" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A dynamic fault tolerance framework for remote robots</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Robot. Automat</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="477" to="490" />
			<date type="published" when="1995-08">Aug. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On the use of adaptive updating rules for actuator and sensor fault diagnosis</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Daley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="217" to="225" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Reflex control for robot system preservation, reliability, and autonomy</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Wikman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Branicky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">S</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Elect. Eng</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="391" to="407" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Fault tolerant joint development for the space shuttle remote manipulator system: Analysis and development</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Chladek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Robot. Automat</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="675" to="684" />
			<date type="published" when="1993-10">Oct. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Dynamic model based incipient fault detection concept for robots</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wunnenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Frank</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IFAC 11th Triennial World Congress</title>
		<meeting>IFAC 11th Triennial World Congress<address><addrLine>Tallinn, Estonia, USSR</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="61" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Consistency checking techniques for the space shuttle remote manipulator system</title>
		<author>
			<persName><forename type="first">F</forename><surname>Zanaty</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPAR J. Eng. Technol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="40" to="49" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Robust parameteric fault detection and isolation for nonlinear systems</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Parisini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Polycarpou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 38th Conf. Decision and Control</title>
		<meeting>38th Conf. Decision and Control</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="3102" to="3107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">After completing the Ph.D. degree, he was selected as an Oak Ridge National Laboratory Wigner Fellow where he currently works in the Robotics and Process Systems Division. His recent publications have been in the following areas: mobile robotics, fault detection, adaptive and robust control, learning control, amplitude limited control</title>
		<author>
			<persName><forename type="first">Warren</forename><forename type="middle">E</forename><surname>Dixon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">S&apos;94-M&apos;00) was born in 1972 in York</title>
		<meeting><address><addrLine>Columbia, SC</addrLine></address></meeting>
		<imprint/>
		<respStmt>
			<orgName>University of South Carolina</orgName>
		</respStmt>
	</monogr>
	<note>He received the B.S. and Ph.D. degrees in 1994 and 2000, respectively, from the Department of Electrical and Computer Engineering, Clemson University, Clemson, SC, and the M.E. degree in 1997 from the Department of Electrical and Computer Engineering. output feedback control, visual-servoing, and the control of underactuated systems</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
