<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">DREAM: DiffeRentially privatE smArt Metering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2012-01-12">12 Jan 2012</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Claude</forename><surname>Castelluccia</surname></persName>
							<email>claude.castelluccia@inrialpes.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">INRIA Rhone Alpes</orgName>
								<address>
									<settlement>Montbonnot</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">DREAM: DiffeRentially privatE smArt Metering</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2012-01-12">12 Jan 2012</date>
						</imprint>
					</monogr>
					<idno type="MD5">BB9D8DB95D19FE34A20D3E3B90E03966</idno>
					<idno type="arXiv">arXiv:1201.2531v1[cs.CR]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:07+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a new privacy-preserving smart metering system. Our scheme is private under the differential privacy model and therefore provides strong and provable guarantees. With our scheme, an (electricity) supplier can periodically collect data from smart meters and derive aggregated statistics while learning only limited information about the activities of individual households. For example, a supplier cannot tell from a user's trace when he watched TV or turned on heating. Our scheme is simple, efficient and practical. Processing cost is very limited: smart meters only have to add noise to their data and encrypt the results with an efficient stream cipher.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Several countries throughout the world are planning to deploy smart meters in households in the very near future. The main motivation, for governments and electricity suppliers, is to be able to match consumption with generation. Traditional electrical meters only measure total consumption on a given period of time (i.e., one month or one year). As such, they do not provide accurate information of when the energy was consumed. Smart meters, instead, monitor and report consumption in intervals of few minutes. They allow the utility provider to monitor, almost in real-time, consumption and possibly adjust generation and prices according to the demand. Billing customers by how much is consumed and at what time of day will probably change consumption habits to help matching consumption with generation. In the longer term, with the advent of smart appliances, it is expected that the smart grid will remotely control selected appliances to reduce demand.</p><p>Problem Statement: Although smart metering might help improving energy management, it creates many new privacy problems <ref type="bibr" target="#b0">[1]</ref>. Smart meters provide very accurate consumption data to electricity providers. As the interval of data collected by smart meters decreases, the ability to disaggregate low-resolution data increases. Analyzing high-resolution consumption data, Nonintrusive Appliance Load Monitoring (NALM) <ref type="bibr" target="#b11">[12]</ref> can be used to identify a remarkable number of electric appliances (e.g., water heaters, well pumps, furnace blowers, refrigerators, and air conditioners) employing exhaustive appliance signature libraries. Researchers are now focusing on the myriad of small electric devices around the home such as personal computers, laser printers, and light bulbs <ref type="bibr" target="#b15">[16]</ref>. Moreover, it has also been shown that even simple off-the-shelf statistical tools can be used to extract complex usage patterns from high-resolution consumption data <ref type="bibr" target="#b16">[17]</ref>. This extracted information can be used to profile and monitor users for various purposes, creating serious privacy risks and concerns. As data recorded by smart meters is lowering in resolution, and inductive algorithms are quickly improving, it is urgent to develop privacy-preserving smart metering systems that provide strong and provable guarantees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Contributions:</head><p>We propose a privacy-preserving smart metering scheme that guarantees users' privacy while still preserving the benefits and promises of smart metering. Our contributions are many-fold and summarized as follows:</p><p>• We provide the first provably private and distributed solution for smart metering that optimizes utility without relying on a third trusted party (i.e., an aggregator). We were able to avoid the use of a third trusted party by proposing a new distributed Laplacian Perturbation Algorithm (DLPA).</p><p>In our scheme, smart meters are grouped into clusters, where a cluster is a group of hundreds or thousands of smart meters corresponding, for example, to a quarter of a city. Each smart meter sends, at each sampling period, their measures to the supplier. These measures are noised and encrypted such that the supplier can compute the noised aggregated electricity consumption of the cluster, at each sampling period, without getting access to individual values. The aggregate is noised just enough to provide differential privacy to each participating user, while still providing high utility (i.e., low error). Our scheme is secure under the differential privacy model and therefore provides strong and provable privacy guarantees. In particular, we guarantee that the supplier can retrieve information about any user consumption only up to a predefined threshold. Our scheme is simple, efficient and practical. It requires either one or two rounds of message exchanges between a meter and the supplier. Furthermore, processing cost is very limited: smart meters only have to add noise to their data and encrypt the results with an efficient stream cipher. Finally, our scheme is robust against smart meter failures and malicious nodes. More specifically, it is secure even if an α fraction of all nodes of a cluster collude with the supplier, where α is a security parameter.</p><p>• We provide a detailed analysis of the security and performance of our proposal. The security analysis is performed analytically. The performance, which is evaluated using the utility metric, is performed using simulation. We implemented a new electricity trace generation tool based on <ref type="bibr" target="#b20">[21]</ref> which generates one-minute resolution synthetic consumption data of different households.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Several papers addressed the privacy problems of smart metering in the recent past <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b9">10]</ref>. However, only a few of them have proposed technical solutions to protect users' privacy. In <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>, the authors discuss the different security aspects of smart metering and the conflicting interests among stakeholders. The privacy of billing is considered in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b16">17]</ref>. These techniques uses zero-knowledge proofs to ensure that the fee calculated by the user is correct without disclosing any consumption data.</p><p>Seemingly, the privacy of monitoring the sum consumption of multiple users may be solved by simply anonymizing individual measurements like in <ref type="bibr" target="#b7">[8]</ref> or using some mixnet. However, these "ad-hoc" techniques are dangerous and do not provide any real assurances of privacy. Several prominent examples in the history have shown that ad-hoc methods do not work <ref type="bibr" target="#b13">[14]</ref>. Moreover, these techniques require an existing trusted third party who performs anonymization. The authors in <ref type="bibr" target="#b2">[3]</ref> perturb the released aggregate with random noise and use a different model from ours to analyze the privacy of their scheme. However, they do not encrypt individual measurements which means that the added noise must be large enough to guarantee reasonable privacy. As individual noise shares sum up at the aggregation, the final noise makes the aggregate useless. In contrast to this, <ref type="bibr" target="#b9">[10]</ref> uses homomorphic encryption to guarantee privacy for individual measurements. However, the aggregate is not perturbed which means that it is not differential private.</p><p>The notion of differential privacy was first proposed in <ref type="bibr" target="#b6">[7]</ref>. The main advantage of differential privacy over other privacy models is that it does not specify the prior knowledge of the adversary and provides rigorous privacy guarantee if each users' data is statistically independent <ref type="bibr" target="#b12">[13]</ref>. Initial works on differential privacy focused on the problem how a trusted curator (aggregator), who collects all data from users, can differential privately release statistics. By contrast, our scheme ensures differential privacy even if the curator is untrusted. Although <ref type="bibr" target="#b5">[6]</ref> describes protocols for generating shares of random noise which is secure against malicious participants, it requires communication between users and it uses expensive secret sharing techniques resulting in high overhead in case of large number of users. Similarly, traditional Secure Multiparty Computation (SMC) techniques <ref type="bibr" target="#b10">[11]</ref> [5] also require interactions between users. All these solutions are impractical for resource constrained smart meters where all the computation is done by the aggregator and users are not supposed to communicate with each other.</p><p>Two closely related works to ours are <ref type="bibr" target="#b18">[19]</ref> and <ref type="bibr" target="#b21">[22]</ref>. In <ref type="bibr" target="#b18">[19]</ref>, the authors propose a scheme to differential privately aggregate sums over multiple slots when the aggregator is untrusted. However, they use the threshold Paillier cryptosystem <ref type="bibr" target="#b8">[9]</ref> for homomorphic encryption which is much more expensive compared to <ref type="bibr" target="#b3">[4]</ref> that we use. They also use different noise distribution technique which requires several rounds of message exchanges between the users and the aggregator. By contrast, our solution is much more efficient and simple: it requires only a single message exchange if there are no node failures, otherwise, we only need one extra round. In addition, our solution does not rely on expensive public key cryptography during aggregation.</p><p>A recent paper <ref type="bibr" target="#b21">[22]</ref> proposes another technique to privately aggregate time series data. This work differs from ours as follows: (1) they use a Diffie-Hellman-based encryption scheme, whereas our construction is based on a more efficient construction that only use modular additions. This approach is better adapted to resource constrained devices like smart meters.</p><p>(2) Although <ref type="bibr" target="#b21">[22]</ref> does not require the establishment (and storage) of pairwise keys between nodes as opposed to our approach, it is unclear how <ref type="bibr" target="#b21">[22]</ref> can be extended to tolerate node and communication failures. By contrast, our scheme is more robust, as the encryption key of non-responding nodes is known to other nodes in the network that can help to recover the aggregate. (3) Finally, <ref type="bibr" target="#b21">[22]</ref> uses a different noise generation method from ours, but this technique only satisfies the relaxed (ε, δ)-differential privacy definition. Indeed, in their scheme, each node adds noise probabilistically which means that none of the nodes add noise with some positive probability δ. Although δ can be arbitrarily small, this also decreases the utility. By contrast, in our scheme, δ = 0 while ensuring nearly optimal utility.</p><p>3 The model</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Network model</head><p>The network is composed of four major parts: the supplier/aggregator, the electricty distribution network, the communication network, and the users (customers). Every user is equipped with an electricity smart meter, which measures the electricity consumption of the user in every T p long period, and, using the communication network, sends the measurement to the aggregator at the end of every slot (in practice, T p is around 1-30 minutes). Note that the communication and distribution network can be the same (e.g., when PLC technology is used to transfer data). The measurement of user i in slot t is denoted by X i t . The consumption profile of user i is described by the vector (X i 1 , X i 2 , . . .), where the measurements of different users are statistically independent. Privacy directly correlates with T p ; finer-grained samples means more accurate profile, but also entails weaker privacy. The supplier is interested in the sum of all measurements in every slot (i.e., N i=1 X i t def = X t ). As in <ref type="bibr" target="#b2">[3]</ref>, we also assume that smart meters are trusted devices (i.e., tamper-resistant) which can store key materials and perform crypto computations. This realistic assumption has also been confirmed in <ref type="bibr" target="#b1">[2]</ref>. We assume that each node is configured with a private key and gets the corresponding certificate from a trusted third party. For example, each country might have a third party that generates these certificate and can additionally generate the "supplier" certificates to supplier companies <ref type="bibr" target="#b1">[2]</ref>. As in <ref type="bibr" target="#b1">[2]</ref>, we also assume that public key operations are employed only for initial key establishment, probably when a meter is taken over by a new supplier. Messages exchanged between the supplier and the meters are authenticated using pairwise MACs<ref type="foot" target="#foot_0">1</ref> . Smart meters are assumed to have bidirectional communication channel (using some wireless or PLC technology) with the aggregator, but the meters cannot communicate with each other. We suppose that nodes may (randomly) fail, and in these cases, cannot send their measurements to the aggregator. However, nodes are supposed to use some reliable transport protocol to overcome the transient communication failures of the channel. Finally, we note that smart meters also allow the supplier to perform fine-grained billing based on time-dependant variable tariffs. Here, we are not concerned with the privacy and security problems of this service. Interested readers are referred to <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b16">17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Adversary model</head><p>In general, the objective of the adversary is to infer detailed information about household activity (e.g, how many people are in home and what they are doing at a given time). In order to do that, it needs to extract complex usage patterns of appliances which include the level of power consumption, periodicity, and duration. It has been shown in <ref type="bibr" target="#b16">[17]</ref> that different data mining techniques can be easily applied to a raw consumption profile to obtain this information.</p><p>In terms of its capability, we distinguish three types of adversary. The first is the a honestbut-curious (HC) adversary, who attempts to obtain private information about a user, but it follows the protocol faithfully and do not provide false information <ref type="bibr" target="#b16">[17]</ref>. It only uses the (non-manipulated) collected data.</p><p>The dishonest-but-non-intrusive (DN) adversary may not follow the protocol correctly and is allowed to provide false information to manipulate the collected data. Some users can also be malicious and collude even with the supplier to collect information about honest users. However, the DN adversary is not allowed to access and modify the distribution network to mount attacks. In particular, he is not allowed to install wiretapping devices to eavesdrop on the victim's consumption.</p><p>Likewise the DN adversary, the strongest dishonest-and-intrusive (DI) adversary may not follow all protocols either, but that can, in addition, invade the distribution network to gather more information about clients. In other words, the DI adversary can monitor the electricity consumption of the clients by installing meters on the power line that is outside of the client's control (like outside from his household).</p><p>We suppose that all types of adversary can have any kind of extra knowledge about honest users, beyond the collected measurements, which might help to infer private information about them. For instance, it can observe their daily activities<ref type="foot" target="#foot_1">2</ref> , or obtain extra information by doing personal interviews, surveys, etc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Privacy model</head><p>We use differential privacy <ref type="bibr" target="#b6">[7]</ref> that models the adversary described above. In particular, differential privacy guarantees that a user's privacy should not be threatened substantially more if he provides his measurement to the supplier. Definition 1 (ε-differential privacy) An algorithm A is ε-differential private, if for all data sets D 1 and D 2 , where D 1 and D 2 differ in at most a single user, and for all subsets of possible answers S ⊆ Range(A),</p><formula xml:id="formula_0">P (A(D 1 ) ∈ S) ≤ e ε • P (A(D 2 ) ∈ S)</formula><p>Differential private algorithms produce indistinguishable outputs for similar inputs (more precisely, differing by a single entry), and thus, the modification of any single user's data in the dataset changes the probability of any output only up to a multiplicative factor e ε . The parameter ε allows us to control the level of privacy. Lower values of ε implies stronger privacy, as they restrict further the influence of a user's data on the output. Note that this model, if users' data are independent, guarantees privacy for a user even if all other users' data is known to the adversary (e.g., it knows all measurements comprising the aggregate except the target user's), like when N -1 out of N users are malicious and cooperate with the supplier.</p><p>Example 1 (Illustration of ε-differential privacy) There is a dataset D containing a list of patients' entries. Each entry has an attribute that indicates whether the corresponding patient has cancer or not. Suppose an ε-differential private query A that returns the sanitized number of patients in D that have cancer. We assume that the adversary knows the exact number of cancer patients, x, before adding Alice to D, and wants to learn from the random output O of A(D ∪ {Alice}) whether Alice has cancer or not. The adversary has no prior knowledge about Alice (i.e., the probability that Alice has cancer is 0.5 before accessing O). The adversary either infers Alice as a cancer or a non-cancer patient. The success probability of this inference has a maximum of 1 1+e -ε (and ≥ 0.5) 3 . For example, the values 2, 1, 0.5, 0.1 of ε yield correct inferences with a maximum probability of 0.88, 0.73, 0.62, 0.52, resp.</p><p>The definition of differential privacy also maintains a composability property: the composition of differential private algorithms remains differential private and their ε parameters are accumulated. In particular, a protocol having t rounds, where each round is individually ε differential private, is itself t • ε differential private.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Output perturbation: achieving differential privacy</head><p>Let's say that we want to publish in a differentially private way the output of a function f . The following theorem says that this goal can be achieved by perturbing the output of f ; simply adding a random noise to the value of f , where the noise distribution is carefully calibrated to the global sensitivity of f , results in ε-differential privacy. The global sensitivity of a function is the maximum "change" in the value of the function when its input differs in a single entry. For instance, if f is the sum of all its inputs, the sensitivity is the maximum value that an input can take.</p><p>Theorem 1 (Laplacian Perturbation Algorithm (LPA) <ref type="bibr" target="#b6">[7]</ref>) For all f : D → R r , the following mechanism A is ε-differential private: A(D) = f (D) + L(S(f )/ε), where L(S(f )/ε) 3 Let A denote the event that Alice has cancer. Using a bayesian reasoning, P (A|O) = P (O|A)</p><formula xml:id="formula_1">P (O|A)+P (O|A) = P (A(x+1)=O) P (A(x+1)=O)+P (A(x)=O) ≤ 1</formula><p>1+e -ε , where we used that P (A) = P (A) and e -ε ≤ P (A(x)=O) P (A(x+1)=O) ≤ e ε . Moreover, the optimal inference strategy is the maximum likelihood decision: the adversary infers Alice as a cancer patient if P (A(x + 1) = O) &gt; P (A(x) = O) or with probability 0.5 if P (A(x + 1) = O) = P (A(x) = O), otherwise as a non-cancer patient.</p><p>is an independently generated random variable following the Laplace distribution and S(f ) denotes the global sensitivity of f 4 .</p><p>Example 2 To illustrate these definitions, consider a mini smart metering application, where users U 1 , U 2 , and U 3 need to send the sum of their measurements in two consecutive slots. The measurements of U 1 , U 2 and U 3 are (X 1 1 = 300, X 1 2 = 300), (X 2 1 = 100, X 2 2 = 400), and (X 3 1 = 50, X 3 2 = 150), resp. The nodes want differential privacy for the released sums with at least a ε = 0.5. Based on Theorem 1, they need to add L(λ = max i t X i t /0.5 = 1200) noise to the released sum in each slot. This noise ensures ε = t X 1 t /λ = 0.5 individual indistinguishability for U 1 , ε = 0.42 for U 2 , and ε = 0.17 for U 3 . Hence, the global ε = 0.5 bound is guaranteed to all. Another interpretation is that</p><formula xml:id="formula_2">U 1 has ε 1 = X 1 1 /λ = 0.25, ε 2 = X 1</formula><p>2 /λ = 0.25 privacy in each individual slot, and ε = ε 1 + ε 2 = 0.5 considering all two slots following from the composition property of differential privacy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Utility definition</head><p>Let f : D → R. In order to measure the utility, we quantify the difference between f (D) and its perturbed value (i.e., f (D) = f (D) + L(λ)) which is the error introduced by LPA. A common scale-dependant error measure is the Mean Absolute Error (MAE), which is E|f (D) -f (D)| in our case. However, the error should be dependent on the non-perturbed value of f (D); if f (D) is greater, the added noise becomes small compared to f (D) which intuitively results in better utility. Hence, we rather use a slightly modified version of a scale-independent metric called Mean Absolute Percentage Error (MAPE), which shows the proportion of the error to the data, as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2 (Error function)</head><formula xml:id="formula_3">Let D t ∈ D denote a dataset in time-slot t. Furthermore, let δ t = |f (Dt)-f (Dt)| f (Dt)+1</formula><p>(i.e., the value of the error in slot t). The error function is defined as</p><formula xml:id="formula_4">µ(t) = E(δ t ).</formula><p>The expectation is taken on the randomness of f (D t ). The standard deviation of the error is σ(t) = Var (δ t ) in time t.</p><p>In the rest of this paper, the terms "utility" and "error" are used interchangeably.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Objectives</head><p>Our goal is to develop a practical scheme that should not introduce more privacy risks for users than traditional metering systems while retaining the benefits of smart meters. More specifically, the scheme should be • differentially private: Considering DN adversary, the scheme differential privately releases sanitized aggregates Xt where the leaked information about users is measured by ε.</p><p>• robust and easily configurable: It tolerates (random) node failures. 4 Formally, let f :</p><formula xml:id="formula_5">D → R r , then the global sensitivity of f is S(f ) = max ||f (D1) -f (D2)||1</formula><p>, where D1 and D2 differ in a single entry and || • ||1 denotes the L1 distance.</p><p>• efficient: It has low overhead which includes low computation load on smart meters, and low communication overhead between the supplier and individual meters. It should use pubic key operations only for initial key establishment. Afterwards, all communication is protected using more efficient symmetric crypto-based techniques.</p><p>• distributed: Besides a certificate authority, the protocol does not require any trusted third party such as a trusted aggregator as in <ref type="bibr" target="#b2">[3]</ref>. The smart meters communicate directly with the supplier.</p><p>• useful for the supplier : The sanitized and the original (non-sanitized) aggregate should be "similar" (i.e., the error should be as small as possible). For instance, the supplier should be able to perform efficient management of the resource using the sanitized data: to monitor the consumption at the granularity of a maximum few hundred households, and to detect consumption peaks or abnormal consumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Overview of approaches</head><p>Our task is to enable the supplier to calculate the sum of maximum N measurements (i.e., N i=1 X i t = X t in all t) coming from N different users while ensuring ε-differential privacy for each user. This is guaranteed if the supplier can only access X t + L(λ(t)), where L(λ(t)) <ref type="foot" target="#foot_2">5</ref> is the Laplace noise calibrated to ε as it has been described in Section 3.4. There are (at least) 3 possible approaches to do this which are detailed as follows.</p><formula xml:id="formula_6">Node 1 Node 2 . . . Node N Aggregator Supplier Dec( i Enc(X i t + L(λ))) = Xt + L(λ) i Enc(X i t ) + Enc(L(λ)) Enc(X 1 t ) Enc(X 2 t ) Enc(X N t )</formula><p>(a) Centralized approach: aggregation with trusted aggregator.</p><p>Node 1 Node 2 . . .</p><formula xml:id="formula_7">Node N Supplier/Aggregator Dec( i Enc(X i t + σi)) = Xt + L(λ) Enc(X 1 t + σ1) Enc(X 2 t + σ2) Enc(X N t + σN )</formula><p>(b) Our approach: aggregation without trusted entity. If σi = G1(N, λ) + G2(N, λ), where G1, G2 are i.i.d gamma noise, then N i=1 σi = L(λ). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Fully decentralized approach (without aggregator)</head><p>Our first attempt is that each user adds some noise to its own measurement, where the noise is drawn from a Laplace distribution. In particular, each node i sends the value of X i t + L(λ) directly to the supplier in time t. It is easy to see that ε is guaranteed to all users, but in fact the final noise added to the aggregate (i.e., N i=1 L(λ)) is N times larger than L(λ), and hence, the error is</p><formula xml:id="formula_8">µ(t) = 1 Xt+1 E| N i=1 L(λ)| = N •λ Xt+1 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Aggregation with a trusted aggregator</head><p>Our second attempt can be to aggregate the measurements of some users, and send the perturbed aggregate to the supplier. In particular, nodes are grouped into N sized clusters and each node of a cluster sends its measurement X i t to the (trusted) cluster aggregator, that is a trusted entity different from the supplier. The aggregator computes X t = N i=1 X i t and obtains Xt = X t + L(λ) by adding noise to the aggregate. This perturbed aggregate is then sent to the supplier as it is illustrated in Figure <ref type="figure" target="#fig_0">1(a)</ref>.</p><p>The utility of this approach is better than in the previous case, as the noise is only added to the sum and not to each measurement</p><formula xml:id="formula_9">X i t . Formally, µ(t) = 1 Xt+1 E|L(λ)| = λ Xt+1 . Similary, δ(t) = 1 Xt+1 • E|L(λ)| 2 -(E|L(λ)|) 2 = λ</formula><p>Xt+1 . However, the main drawback of this approach is that the aggregator must be fully trusted since it receives each individual measurement from the users. This can make this scheme impractical if there is no such trusted entity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Our approach: aggregation without trusted entity</head><p>Although the previous scheme is differential private, it works only if the aggregator is trustworthy and faithfully adds the noise to the measurement. In particular, the scheme will not be secure if the aggregator omits to add the noise.</p><p>Our scheme, instead, does not rely on any centralized aggregator. The noise is added by each smart meter on their individual data and encrypted in such a way that the aggregator can only compute the (noisy) aggregate. Note that with our approach the aggregator and the supplier do need to be separate entities. The supplier can even play the role of the aggregator, as the encryption prevents it to access individual measurements, and the distributed generation of the noise ensures that it cannot manipulate the noise.</p><p>Our proposal is composed of 2 main steps: distributed generation of the Laplacian noise and encryption of individual measurements. These 2 steps are described in the remainder of this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Distributed noise generation: a new approach</head><p>In our proposal, the Laplacian noise is generated in a fully distributed way as is illustrated in Figure <ref type="figure" target="#fig_0">1(b)</ref>. We use the following lemma that states that the Laplace distribution is divisible and be constructed as the sum of i.i.d. gamma distributions. As this divisibility is infinite, it works for arbitrary number of users.</p><p>Lemma 1 (Divisibility of Laplace distribution <ref type="bibr" target="#b14">[15]</ref>) Let L(λ) denote a random variable which has a Laplace distribution with PDF f (x, λ)</p><formula xml:id="formula_10">= 1 2λ e |x| λ . Then the distribution of L(λ) is infinitely divisible. Furthermore, for every integer n ≥ 1, L(λ) = n i=1 [G 1 (n, λ) -G 2 (n, λ)],</formula><p>where G 1 (n, λ) and G 2 (n, λ) are i.i.d. random variables having gamma distribution with PDF</p><formula xml:id="formula_11">g(x, n, λ) = (1/λ) 1/n Γ(1/n) x 1 n -1 e -x/λ where x ≥ 0.</formula><p>The lemma comes from the fact that L(λ) can be represented as the difference of two i.i.d exponential random variables with rate parameter 1/λ. Moreover, </p><formula xml:id="formula_12">n i=1 G 1 (n, λ) - n i=1 G 2 (n, λ) = G 1 (1/ n i=1 1 n , λ) -G 2 (1/ n i=1 1 n , λ) = G 1 (1, λ) -G 2 (1,</formula><formula xml:id="formula_13">= X i t + G 1 (N, λ) -G 2 (N,</formula><p>λ) in slot t and sends it to the aggregator, where G 1 (N, λ) and G 2 (N, λ) denote two random values independently drawn from the same gamma distribution. Now, if the aggregator sums up all values received from the N users of a cluster, then</p><formula xml:id="formula_14">N i=1 Xi t = N i=1 X i t + N i=1 [G 1 (N, λ) -G 2 (N, λ)] = X t + L(λ)</formula><p>based on Lemma 1. The utility of our distributed scheme is defined as</p><formula xml:id="formula_15">µ(t) = 1 Xt+1 E|X t -X t + n i=1 [G 1 (N, λ)- G 2 (N, λ)]| = E|L(λ)| Xt+1 = λ</formula><p>Xt+1 , and δ(t) = λ Xt+1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Encryption</head><p>The previous step is not enough to guarantee privacy as only the sum of the measurements (i.e., Xt ) is differential private but not the individual measurements. In particular, the aggregator has access to Xi t , and even if Xi</p><formula xml:id="formula_16">t is noisy, G 1 (N, λ) -G 2 (N, λ</formula><p>) is usually insufficient to provide reasonable privacy for individual users if N ≫ 1. This is illustrated in Figure <ref type="figure" target="#fig_1">2</ref>, where an individual's noisy and original measurements slightly differ.</p><p>-500 0 500 1000 00:00 02:00 04:00 06:00 08:00 10:00 12:00 14:00 16:00 18:00 20:00 22:00 00:00 To address this problem, each contribution is encrypted using a modulo addition-based encryption scheme, inspired by <ref type="bibr" target="#b3">[4]</ref>, such that the aggregator can only decrypt the sum of the individual values, and cannot access any of them. In particular, let k i denote a random key generated by user i inside a cluster such that N i=1 k i = 0, and k i is not known to the aggregator. Furthermore, Enc() denotes a probabilistic encryption scheme such that Enc(p, k, m) = p + k mod m, where p is the plaintext, k is the encryption key, and m is a large integer. The adversary cannot decrypt any Enc( Xi t , k i , m), since it does not know k i , but it can easily retrieve the noisy sum by adding the encrypted noisy measurements of all users; N i=1 Enc( Xi</p><formula xml:id="formula_17">t , k i , m) = N i=1 Xi t + N i=1 k i = N i=1 Xi t mod m. If z = max i,t ( Xi t ) then m should be selected as m = 2 ⌈log 2 (z•N )⌉ [4]. The generation of k i is described in Section 6.2.</formula><p>6 Protocol description</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">System setup</head><p>In our scheme, nodes are grouped into clusters of size N , where N is a parameter. The protocol requires the establishment of pairwise keys between each pair of nodes inside a cluster that can be done by using traditional Diffie-Hellman key exchange as follows. When a node v i is installed, it provides a self-signed DH component and its certificate to the supplier. Once all the nodes of a cluster are installed, or a new node is deployed, the supplier broadcasts the certificates and public DH components of all nodes. Finally, each node v i of the cluster can compute a pairwise key K i,j shared with any other node v j in the networks. Note that no communication is required between v i and v j .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Smart meter processing</head><p>Each node v i sends at time t its periodic measurement, X i t , to the supplier as follows:</p><p>Phase 1 (Data sanitization):</p><formula xml:id="formula_18">Node v i calculates value Xi t = X i t + G 1 (N, λ) -G 2 (N, λ)</formula><p>, where G 1 (N, λ) and G 2 (N, λ) denote two random values independently drawn from the same gamma distribution and N is the cluster size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Phase 2 (Data encryption): Each noisy data Xi</head><p>t is then encrypted into Enc( Xi t ) using the modulo addition-based encryption scheme detailed in Section 5.3.2. The following extension is then applied to generate the encryption keys: Each node, v i , selects ℓ other nodes randomly, such that if v i selects v j , then v j also selects v i . Afterwards, both nodes generate a common dummy key k from their pairwise key K i,j ; v i adds k to Enc( Xi t ) and v j adds -k to Enc( Xj t ). As a result, the aggregator cannot decrypt the individual ciphertexts (it does not know the dummy key k). However, it adds all the ciphertexts of a given cluster, the dummy keys cancel out and it retrieves the encrypted sum of the (noisy) contributions. The more formal description is as follows:</p><p>1. node v i selects some nodes of the cluster randomly (we call them participating nodes) using a secure pseudo random function (PRF) such that if v i selects v j , then v j also selects v i . In particular, v i selects v j if mapping PRF (K i,j , r 1 ) to a value between 0 and 1 is less or equal than w N -1 , where r 1 is a public value changing in each slot. We denote by ℓ the number of selected participating nodes, and ind i [j] (for j = 1, . . . , ℓ) denotes the index of the ℓ nodes selected by node v i . Note that, for the supplier, the probability that v i selects v j is w N -1 as it does not know K i,j . The expected value of ℓ is w.</p><p>2. v i computes for each of its ℓ participating nodes a dummy key. A dummy key between v i and v j is defined as dkey i,j = (i -j)/|i -j| • PRF (K i,j , r 2 ), where K i,j is the key shared by v i and v j , and r 2 = r 1 is public value changing in each slot. Note that dkey i,j = -dkey j,i .</p><p>3.</p><formula xml:id="formula_19">v i then computes Enc( Xi t ) = Xi t + K ′ i + ℓ j=1 dkey i,ind i [j] (mod m),</formula><p>where K ′ i is the keystream shared by v i and the aggregator which can be established using the DH protocol as above, and m is a large integer (see <ref type="bibr" target="#b3">[4]</ref>). Note that m must be larger than the sum of all contributions (i.e., final aggregate) plus the Laplacian noise. 7  Note that Xi t is encrypted multiple times: it is first encrypted with the keystream K ′ i and then with several dummy keys. K ′ i is needed to ensure confidentiality between a user and the aggregator. The dummy keys are needed to prevent the aggregator (supplier) from retrieving Xi t . 4. Enc( Xi t ) is sent to the aggregator (supplier).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Supplier processing</head><p>Phase 1 (Data aggregation): At each slot, the supplier aggregates the N measurements received from the cluster smart meters by summing them, and obtains N i=1 Enc(X i t ). In particular,</p><formula xml:id="formula_20">Enc( Xt ) = N i=1 ( Xi t + K ′ i ) + N i=1 ℓ j=1 dkey i,ind i [j] (mod m)</formula><p>where N i=1 ℓ j=1 dkey i,ind i [j] = 0 because dkey i,j = -dkey j,i . Hence,</p><formula xml:id="formula_21">Enc( Xt ) = N i=1 ( Xi t + K ′ i ) = N i=1 Enc( Xi t )</formula><p>Phase 2 (Data decryption): The aggregator then decrypts the aggregated value by subtracting the sum of the node's keystream, and retrieves the sum of the noisy measures:</p><formula xml:id="formula_22">N i=1 Enc( Xi t ) - N i=1 K ′ i = N i=1 Xi t (mod m)</formula><p>where</p><formula xml:id="formula_23">N i=1 Xi t = N i=1 X i t + N i=1 G 1 (N, λ) -N i=1 G 2 (N, λ) = N i=1 X i t + L(λ) based on Lemma 1.</formula><p>The main idea of the scheme is that the aggregator is not able to decrypt the individual encrypted values because it does not know the dummy keys. However, by adding the different encrypted contributions, dummy keys cancel each other and the aggregator can retrieve the sum of the plaintext. The resulting plaintext is then the perturbed sums of the measurements, where the noise ensures the differential privacy of each user.</p><p>Complexity: Let b denote the size of the pairwise keys (i.e., K i,j ). Our scheme has O(N •b) storage complexity, as each node needs to store ℓ ≤ N pairwise keys. The computational overhead is dominated by the encryption and the key generation complexity. The encryption is composed of ℓ ≤ N modular addition of log 2 m bits long integers, while the key generation needs the same number of PRF executions. This results in a complexity of O(N • (log 2 m + c(b))), where c(b) is the complexity of the applied PRF function. 8   7 Note that the noise is a random value from an infinite domain and this sum might be larger than m. However, choosing sufficiently large m, the probability that the sum exceeds m can be made arbitrary small due to the exponential tail of the Laplace distribution. 8 For instance, if log 2 m = 32 bits (which should be sufficient in our application), b = 128, and N = 1000, a node needs to store 16 Kb of key data and perform maximum 1000 additions along with 1000 subtractions</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Adding robustness</head><p>We have assumed so far that all the N nodes of a cluster participated in the protocol. However, it might happen that, for several different reasons (e.g., node or communication failures) some nodes are not able to participate in each epoch. This would have two effects: first, security will be reduced since the sum of the noise added by each node will not be equivalent to L(λ). Hence, differential privacy may not be guaranteed. Second, the aggregator will not be able to decrypt the aggregated value since the sum of the dummy keys will not cancel out.</p><p>In this section, we extend our scheme to resist node failures. We propose a scheme which resists the failure of up to M out of N nodes, where M is a configuration parameter. We will study later the impact of the value M on the scheme performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Sanitization phase extension</head><p>In order to resist the failure of M nodes, each node should add the following noise to their individual measurement:</p><formula xml:id="formula_24">G 1 (N -M, λ) -G 2 (N -M, λ). Note that N -M i=1 [G 1 (N -M, λ) - G 2 (N -M, λ)] = L(λ).</formula><p>Therefore, this sanitization algorithm remains differential private, if at least N -M nodes participate in the protocol. Note that in that case each node adds extra noise to the aggregate in order to ensure differential privacy even if fewer than M nodes fail to send their noise share to the aggregator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Encryption phase extension</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.1">A simple approach</head><p>As described previously, all the dummy keys cancel out at the aggregator. However, this is not the case if not all the nodes participate in the protocol. In order to resist the failure of nodes, one can extend the encryption scheme with an additional round where the aggregator asks the participating nodes of non-responding nodes for the missing dummy keys:</p><p>1. Once the aggregator received all contributions, it broadcasts the ids of the nonresponding nodes.</p><p>2. Upon the reception of this message, each node v i verifies whether any of the ids in the broadcast message are in its participating node list (i.e., it can be found in ind i ). For each of such id, the node sends the corresponding dummy key to the aggregator.</p><p>3. The aggregator then subtracts all received dummy keys from Enc( Xt ) and retrieves</p><formula xml:id="formula_25">N i=1 ( Xi t + K ′ i ) which can be decrypted.</formula><p>This approach has a severe problem: if the aggregator is untrusted, it can easily retrieve the measurement of a v i : broadcasting its id in Step 2, the participating nodes of v i reply with the dummy keys of v i which can be removed from Enc( Xi t ).</p><p>(for modular reduction) on 32 bits long integers, and maximum 1000 PRF executions. This overhead should be negligible even on constrained embedded devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2">Our proposal</head><p>In this approach, each node adds a secret random value to its encrypted value before releasing it in the first round. This is needed to prevent the adversary to recover the noisy measurement through combining different messages of the nodes. Then, in the second round when the aggregator asks for the missing dummy keys, every node reveals its random keys along with the missing dummy keys that it knows:</p><formula xml:id="formula_26">1. Each node v i sends Enc( Xi t ) = Xi t + K ′ i + ℓ j=1 dkey i,ind i [j] + C i (mod m)</formula><p>where C i is the secret random key of v i generated randomly in each round.</p><p>2. After receiving all measurements, the aggregator asks all nodes for their random keys and the missing dummy keys through broadcasting the id of the non-responding nodes.</p><p>3. Each node v i verifies whether any ids in this broadcast message are in its participating node list, where the set of the corresponding participating nodes is denoted by S. Then, v i replies with j∈S dkey i,ind i [j] + C i (mod m).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The aggregator subtracts all received values from</head><formula xml:id="formula_27">N i=1 Enc( Xi t ) which results in N i=1 ( Xi t + K ′ i )</formula><p>, as the random keys as well as the dummy keys cancel out.</p><p>Note that as the supplier does not know the random keys, it cannot remove them from any messages but only from the final aggregate; adding each node's response to the aggregate all the dummy keys and secret random keys cancel out and the supplier obtains Xt . Although the supplier can still recover Xi t if it knows v i 's participating nodes (the supplier simply asks for all the dummy keys of v i in Step 2 and subtracts v i 's response in Step 4 from Enc( Xi t )), we will show later that this probability can be made practically small by adjusting w and N correctly.</p><p>Note that the protocol fails if, for some reasons, a node does not send its random key to the aggregator (as only the node itself knows its random key, it cannot be reconstructed by other parties). However, it is very unlikely that a node between the two rounds fails, and an underlying reliable transport protocol helps to overcome communication errors.</p><p>Finally, also note that this random key approach always requires two rounds of communication (even if the aggregator receives all encrypted values correctly in the first round), as the random keys are needed to be removed from Enc( Xt ) in the second round.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Utility evaluation</head><p>If all N nodes participate in the protocol, the added noise will be larger than L(λ) which is needed to ensure differential privacy. In particular,</p><formula xml:id="formula_28">N i=1 [G 1 (N -M, λ) -G 2 (N -M, λ)] = L(λ)+ M i=1 [G 1 (N -M, λ)-G 2 (N -M, λ)],</formula><p>where the last summand is the extra noise needed to tolerate the failure of maximum M nodes. Clearly, this extra noise increases the error if all N nodes operate correctly and add their noise shares faithfully. In what follows, we calculate the error and its standard deviation if we add this extra noise to the aggregate.</p><p>Theorem 2 (Utility) Let α = M/N and α &lt; 1. Then,</p><formula xml:id="formula_29">µ(t) ≤ 2 B(1/2, 1 1-α ) • λ(t) X t + 1 and σ(t) ≤ 2 1 -α - 4 B(1/2, 1 1-α ) 2 • λ(t) X t + 1</formula><p>where B(x, y) = Γ(x)Γ(y) Γ(x+y) is the beta function.</p><p>The derivation can be found in Appendix A. Based on Theorem 2, σ(t) = µ(t)</p><formula xml:id="formula_30">• 2 B(1/2, 1 1-α ) -1 • 2 1-α - 4 B(1/2, 1 1-α ) 2 .</formula><p>It is easy to check that σ(t) is always less or equal than µ(t). In particular, if α = 0 (there are no malicious nodes and node failures), then</p><formula xml:id="formula_31">σ(t) = µ(t). If α &gt; 0 then σ(t) &lt; µ(t) but σ(t) ≈ µ(t).</formula><p>8 Security Analysis</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Deploying malicious nodes</head><p>In the proposed scheme, each measurement is perturbed and encrypted. Therefore, a honest-but-curious attacker cannot gain any information (up to ε) about individual measurements in any slot. This is guaranteed by the encryption scheme and the added noise.</p><p>However, a DN adversary (see Section 3.2), which deploys T malicious nodes, may be able to:</p><p>• reduce the noise level by limiting (or omitting) the gamma noise added by malicious nodes. As a result, the sum of the noise shares will not equal to the Laplacian noise which can decrease the privacy of users. However, recall that, due to the robustness property of our scheme detailed in Section 7, we add extra noise to tolerate M node failures. Adding extra noise calibrated to M + T is sufficient to tolerate this type of attack.</p><p>• decrypt Enc( Xi t ) of a node v i and retrieve the perturbed data. As individual data is only weakly noised, the attacker might infer some information from them, and therefore, compromise privacy. However, the encryption scheme that we used is provably secure <ref type="bibr" target="#b3">[4]</ref>, and nodes are assumed to be tamper-resistant. Thus, the only way to break privacy is to retrieve the dummy keys of v i . Because the participating nodes are selected randomly for each message, this can only be achieved if all participating nodes of v i are malicious and the supplier is also malicious (i.e., the adversary knows K ′ i ). This happens if v i does not select any honest participating node that has a probability of ( <ref type="figure" target="#fig_0">1 -w</ref> N -1 ) N -T -1 . For instance, it is easy to check that if N = 100 and 50% of the nodes are malicious (which anyway should be a quite strong assumption), then setting w to 30 results in a success probability of 1.8 • 10 -8 . This means that if an epoch is 5 min long, then the adversary will compromise 1 measurement during 458 years in average. Finally, also note that this is the success probability of the adversary in a single slot. This means that a supplier that succeeds the previous attack only gets a single (noisy) measurement of the customer (corresponding to a single epoch). As a node selects different participating nodes in each slot, the probability that the adversary gets k different measurements of the node is (1 1) , which is even smaller.</p><formula xml:id="formula_32">-w N -1 ) k(N -T -</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Lying supplier</head><p>Lying about non-responding nodes</p><p>In addition to deploying malicious (fake) nodes, a malicious supplier can lie about the non-responding nodes. In order to recover Xi t , the supplier needs ℓ j=1 dkey i,ind i [j] + C i . The supplier has two options to retrieve this sum. First, it might pretend that a node v i did not respond in the first round, and asks for v i 's dummy keys to its participating nodes. At the same time, the supplier claims to v i that its participating nodes are responding. Hence, as described in Section 7.2.2, the participating nodes of v i will disclose v i 's dummy keys and v i will disclose C i . However, the random keys of v i 's participating nodes prevent the supplier to retrieve v i 's dummy keys from their messages.</p><p>Second, the supplier can pretend that v i 's participating nodes do not respond in the first round, and asks v i for their dummy keys in the second round. In particular, there are three types of dummy keys: the first is shared with a malicious node, and hence, known to the supplier. The second is asked to v i by the supplier in the second round (the supplier pretends that these nodes are non-responding), and v i replies with the sum of C i and the requested keys. Finally, the rest is shared with honest participating nodes and they are not asked to v i in the second round. Apparently, if v i has at least one dummy key from the last group, its measurement cannot be recovered. This is because if v j is a participating honest node of v i and dkey i,ind i [j] is not asked to v i in the second round, it could only be recovered from v j 's messages. However, v j sends C j + dkey i,ind i [j] , where C j is only known to v j .</p><p>Nevertheless, it might happen that v i does not have any third-type dummy key (i.e., the supplier asks v i for all the dummy keys shared with honest nodes). Then, the supplier can easily recover v i 's measurement, since it knows ℓ j=1 dkey i,ind i [j] + C i (they are malicious keys or provided by v i ). However, the supplier can only guess v i 's participating nodes and target them randomly since v i also selects them randomly <ref type="foot" target="#foot_4">9</ref> . Assuming that the supplier can ask v i for maximum M dummy keys in the second round, the probability that all participating nodes of v i are either malicious or specified as non-responding nodes by the supplier is less than (1 -w N -1 ) N -(T +M )-1 . Using α = (T + M )/N and β = w/N , then (1</p><formula xml:id="formula_33">-w N -1 ) N -(T +M )-1 = (1 -β 1-N -1 ) N (1-α)-1</formula><p>. This probability is depicted in Figure <ref type="figure" target="#fig_3">3</ref> depending on α, β and N .  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lying about cluster size</head><p>Another strategy for the supplier to compromise the privacy of users is to lie about the cluster size. If the supplier pretends that the cluster size N ′ is larger than it really is (i.e., N ′ &gt; N ), the noise added by each node will be underestimated. In fact, each node will calibrate its gamma noise using N ′ instead of N . As a result, the aggregated noise at the supplier will be smaller than necessary to guarantee sufficient differential privacy.</p><p>In order to prevent this attack, a solution would be to set the cluster size to a fixed value. For example, all clusters should have a size of 100. Although simple and efficient, this solution is not flexible and might not be applicable to all scenarios. Another option is that the supplier publishes, together with the list of cluster nodes, a self-signed certificate of each node of the cluster (containing a timestamp, the cluster id and the node information). That way, each node could verify the cluster size and get information about other member nodes. 9 Simulation results</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1">A high-resolution electricity trace simulator</head><p>Due to the lack of high-resolution real world data, we implemented a domestic electricity demand model <ref type="bibr" target="#b20">[21]</ref> that can generate one-minute resolution synthetic consumption data of different households <ref type="foot" target="#foot_5">10</ref> . It is an extended version of the simulator developed in <ref type="bibr" target="#b20">[21]</ref>. The simulator includes 33 different appliances and implements a separate lighting model which takes into account the level of natural daylight depending on the month of the year. The number of residents in each household is randomly selected between 1 and 5. A trace is associated to a household and generated as follows: (1) A number of active persons is selected according to some distribution derived from real statistics. This number may vary as some members can enter or leave the house. (2) A set of appliances is then selected and activated at different time of the day according to another distribution, which was also derived from real statistics.</p><p>The input of the simulator is the number of households, the month of the day, and the type of the day (either a working or weekend day). The output is the power demand model (1-min profile) of all appliances in each household on the given day. Using this simulator, we generated 3000 electricity traces corresponding to different households on a working day in November, where the number of residents in each household was randomly selected between 1 and 5. Each trace was then sanitized according to our scheme. The noise added in each slot (i.e., λ(t)) is set to the maximum consumption in the slot (i.e., λ(t) = max 1≤i≤N X i t where the maximum is taken on all users in the cluster). This amount of noise ensures ε = 1 indistinguishability for individual measurements in all slots. Although one can increase λ(t) to get better privacy, the error will also increase. Note that the error</p><formula xml:id="formula_34">µ ε ′ (t) for other ε ′ = ε values if µ ε (t) is given is µ ε ′ (t) = ε ε ′ • µ ε (t).</formula><p>We assume that λ(t) = max i X i t is known a priori.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2">Error according to the cluster size</head><p>The error introduced by our scheme depends on the cluster size N . In this section, we present how the error varies according to N .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.1">Random clustering</head><p>The most straightforward scheme to build N -sized clusters is to select N users uniformly at random. The advantage of this approach is that users only need to send the noisy aggregate to the supplier. Figure <ref type="figure" target="#fig_5">4</ref>(a) and 4(b) show the average error value and its standard deviation, resp., depending on the size of the cluster. The average error of a given cluster size N is the average of mean t (µ(t)) of all N -sized clusters <ref type="foot" target="#foot_6">11</ref> . Obviously, higher N causes smaller error. Furthermore, a high α results in larger noise added by each meters, as described in Section 7.3, which also implies larger error. Interestingly, increasing the sampling period (i.e., T p ) results in slight error decrease <ref type="foot" target="#foot_7">12</ref> , hence, we only considered 10 min sampling period. Otherwise noted explicitly, we assume 10 min sampling period in the sequel.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.2">Consumption based clustering</head><p>As λ(t) is set to the maximum consumption at t inside a cluster, we could get lower error if the maximum consumption is close to the mean of the measurements within a cluster in every t. Hence, instead of randomly clustering users, a more clever approach is to cluster them based on the "similarity" of their consumption profiles. Intuitively, the measurements in similar profiles are close, and thus, the difference between the maximum consumption and the average should also be smaller than in a random cluster.</p><p>We measure profile similarity by the average daily consumption: the N -sized clusters are created by calculating daily consumption levels ℓ 1 , ℓ 2 , . . . , ℓ n (where ℓ i ≤ ℓ i+1 for all 1 ≤ i ≤ n -1) such that the number of users whose daily average is between ℓ i and ℓ i+1 for all i is exactly N . Then, all users being in the same level form a cluster. In contrast to random clustering, users need to provide the supplier with their daily averages which may leak some private information. However, this can also be derived from the (monthly) aggregate consumption of each user, which is generally revealed for the purpose of billing.</p><p>Figure <ref type="figure" target="#fig_7">5</ref>(a) and 5(b) show the average error and its deviation, resp., calculated identically to random clustering. Comparing Figure <ref type="figure" target="#fig_7">5</ref> and<ref type="figure" target="#fig_5">4</ref>, consumption based clustering has lower error than the random one. The improvement varies up to 5% depending on N . For instance, while random clustering provides an average error of 0.13 with N = 100 users in a cluster, consumption based clustering has 0.07. The difference decreases as N increases. There are more significant differences between the standard deviations and the worst cases: at lower values of N , the standard deviation of the average error in random clustering is almost twice as large as in consumption based clustering (Figure <ref type="figure" target="#fig_7">5</ref>(b) and 4(b)). To compute the worst case error, at a given N , the maximum error is computed in all slots, which is the highest cluster error that can occur in a slot with cluster size N . Then, the average of these maximum errors (the average is taken on all slots) are plotted in Figure <ref type="figure" target="#fig_5">4</ref>(c) and 5(c). Apparently, the worst case error in random clustering is much higher than in consumption based clustering, as random clustering may put high and low consuming users into the same cluster.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3">Privacy over multiple slots</head><p>So far, we have considered the privacy of individual slots, i.e. added noise to guarantee ε = 1 privacy in each slot of size 10 minutes. However, a trace is composed of several slots. For instance, if a user watches TV during multiple slots, we have guaranteed that an adversary cannot tell if the TV is watched in any particular slot (up to ε = 1). However, by analysing s consecutive slots corresponding to a given period, it may be able to tell whether the TV was watched during that period (the privacy bound of this is ε s = ε • s due to the composition property of differential privacy). Based on Theorem 1, we need to add noise λ(t) = s i=1 max i X i t to each aggregate to guarantee ε s = 1 bound in consecutive s slots, which, of course, results in higher error than in the case of s = 1 that we have assumed so far. Obviously, using the LPA technique, we cannot guarantee reasonably low error if s increases, as the necessary noise λ(t) = s i=1 max i X i t can be large. In order to keep the error λ(t)/ N i=1 X i t low while ensuring better privacy than ε s = s • ε, one can increase the number of users inside each cluster (i.e., N ).</p><p>Figure <ref type="figure" target="#fig_9">6(a)</ref> shows what average privacy of a user has, in our dataset, as a function of the cluster size and value s. As the cluster size increases, the privacy bound decreases (i.e. privacy increases). The reason is that when the cluster size increases, the maximum consumption also increases with high probability. Since the noise is calibrated according to the maximum consumption within the cluster, it will be larger. This results in better privacy.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.1">Privacy of appliances</head><p>In the previous section, we analysed how a user's privacy varies over time. In this section, we consider the privacy of the different appliances. For example, we aim at answering the following question: what was the user's privacy when he was watching TV last evening between 18:00 and 20:00? More specifically, we consider two privacy threats:</p><p>• Presence of appliances: Can the adversary tell that the user watched TV yesterday? In order to compute the corresponding privacy (i.e. ε s ), we compute 120 t=108 ε(t), where ε(t) = {TV's consumption in t}/λ(t).</p><p>• Activation time of appliances: If the adversary knows that the user watched TV, can he tell what time he did it? We use statistical inference to detect the position of an appliance signature in the noisy trace.</p><p>Presence of appliance: We summarized some of the appliance privacy in Table <ref type="table" target="#tab_1">1</ref> in Appendix B. Each value is computed by averaging the privacy provided in our 3000 traces. The appliances can be divided into two major groups: the usage of active appliances indicate that the user is at home and uses the appliance (their consumption significantly changes during their active usage such as iron, vacuum, kettle, etc.), whereas passive appliances (like fridge, freezers, storage heater, etc.) have more or less identical consumption regardless the user is at home or not. In general, appliances having lower consumption threats privacy less than devices with higher energy demands. Obviously, ε s increases when s increases since an appliance is used more frequently within longer periods. Finally, we want to measure the privacy of active appliances. This is equivalent to answer the question if the user was at home in any s long period. The average privacy are depicted in Figure <ref type="figure" target="#fig_9">6</ref>(b). Observe that there is no considerable differences between Figures <ref type="figure" target="#fig_9">6(b</ref>) and 6(a), as a profile is primarily shaped by active appliances (because they typically consume much more than passive appliances).</p><p>Activation time of appliances: Consider the consumption profile V = (V 1 , V 2 , . . . , V n ) of a given appliance of a user (on a single day), where the appliance is switched on at t s first and switched off at t s + d last (i.e., V i = 0 for 1 ≤ i &lt; t s and t s + d &lt; i ≤ n). The signature of the appliance Sig(V) = (V ts , V ts+1 , . . . , V ts+d ) is the consumption profile of the appliance between t s and t s + d. The adversary is provided with the noisy consumption profile of the appliance (i.e., V) and, in addition, knows the signature of the appliance, but it does not know t s (i.e., it knows that the appliance was used with the given signature but does not know when).</p><p>The goal of the adversary is to infer the starting slot t s in V using V. If the adversary's guess is t ′ , the inference accuracy is measured by |t ′ -t s |. We consider the following adversaries:</p><p>• RG-Adv: This is the simple random guesser and serves as a baseline. If there are n -d possible values of t s , then the guess t ′ is selected out of them uniformly at random.</p><p>• ST-Adv: This adversary knows the relative frequency of each slot occuring as a starting slot (denoted by f i at slot i), and guesses the most likely starting slot:</p><formula xml:id="formula_35">t ′ = max i f i (1 ≤ i ≤ n -d).</formula><p>This information is publicly available from several surveys <ref type="bibr" target="#b20">[21]</ref>.</p><p>• Bayesian-Adv: This adversary performs bayesian inference on t s . In particular, let V t denote a profile where the signature starts at slot t (i.e., V t is obtained by shifting V with |t -t s | positions to left/right if t -t s is negative/positive. 13 ). Assuming that the adversary has no prior knowledge about the distribution of starting slots (i.e., they are distributed uniformly at random), the posterior distribution is computed as</p><formula xml:id="formula_36">P (T = i) = n k=1 P (V i k + L(λ k ) = Vk ) n-d j=1 n k=1 P (V j k + L(λ k ) = Vk )</formula><p>where T describes the posterior distribution of starting slots. As the bayes risk is "linear" in our case (i.e., |t ′ -t s |), the bayes' estimate (i.e., t ′ ) is the posterior median (i.e., t ′ satisfies P (T ≤ t ′ ) ≥ 0.5 and P (T ≥ t ′ ) ≤ 0.5).</p><p>• Bayesian-ST-Adv: We expect better results if the bayesian adversary uses the relative frequencies as a prior knowledge. In particular, the adversary knows the probability distribution of starting slots a priori, denoted by θ = {f 1 , f 2 , . . . , f n-d }, which is described by the relative frequencies:</p><formula xml:id="formula_37">P (T = i|θ) = n k=1 f i • P (V i k + L(λ k ) = Vk ) n-d j=1 n k=1 P (V j k + L(λ k ) = Vk ) • f j</formula><p>As before, the bayes' estimate is the posterior median. 13 More formally, V t = 0 for all 1 ≤ i &lt; t and t + d &lt; i ≤ n, and Vi = Sig(V)i for 1</p><formula xml:id="formula_38">≤ i ≤ t + d</formula><p>The inference accuracy of each adversary is shown in Table <ref type="table" target="#tab_2">2</ref> in Appendix B. The inference is performed on our dataset within a single day. Bayesian-ST-Adv outperforms all adversaries especially for active devices, however, its accuracy never falls below 1.7 hour. Regarding the passive appliances, ST-Adv overcomes Bayesian-ST-Adv in general. This is explained by the fact that passive appliances usually follow a regular operation cycle with less user intervention in all households, and the accuracy of ST-Adv's is always within the length of one operation cycle independently of the added noise<ref type="foot" target="#foot_8">14</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Conclusion</head><p>Our measurements show two different, and conflicting, results. Figure <ref type="figure" target="#fig_9">6</ref>(a) shows that it may actually be difficult to hide the presence of activities in a household. In fact, computed ε values are quite high, even for large clusters. However, results presented in Tables <ref type="table" target="#tab_1">1</ref> and<ref type="table" target="#tab_2">2</ref> are more encouraging. They show that, although, it might be difficult to hide a user's presence, it is still possible to hide his actual activity. In fact, appliances privacy bounds (ε values) are quite small, which indicates that an adversary will have difficulty telling whether the user is, for example, using his computer or watching TV during a given period of time. Furthermore, in Table <ref type="table" target="#tab_2">2</ref>, results show that it is even more difficult for an adversary to tell when a given activity actually started. Finally, we recall that in order to keep the error λ(t)/ N i=1 X i t low while ensuring better privacy one can always increase the number of users inside each cluster. For instance, doubling N from 100 to 200 allows to double the noise while keeping approximately the same error value (0.118 in Figure <ref type="figure" target="#fig_7">5</ref>(a) if α = 0). This results in much better privacy, since, on average, doubling the noise halves the privacy parameter ε s . Although more work and research is needed, we believe this is a encouraging result for privacy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Proof of Theorem 2 (Utility)</head><p>Lemma 2 (Integral property of the Bessel function <ref type="bibr" target="#b14">[15]</ref>) Let</p><formula xml:id="formula_39">K ϑ (x) = 1 2 x 2 ϑ ∞ 0 t -ϑ-1 exp -t - x 2 4t dt, x &gt; 0</formula><p>define the modified Bessel function of the third kind with index ϑ ∈ R. For any γ &gt; 0 and γ, ν such that γ</p><formula xml:id="formula_40">+ 1 ± ν &gt; 0 ∞ 0 x γ K ν (ax)dx = 2 γ-1 a γ+1 Γ 1 + γ + ν 2 Γ 1 + γ -ν<label>2</label></formula><p>Lemma 3 Let G 1 , G 2 be i.i.d gamma random variables with parameters (n, λ). Then,</p><formula xml:id="formula_41">E|G 1 (n, λ) -G 2 (n, λ)| = 2λ B 1 2 , 1 n<label>(1)</label></formula><p>and</p><formula xml:id="formula_42">Var |G 1 (n, λ) -G 2 (n, λ)| = 2 n - 4 B 1 2 , 1 n 2 λ 2<label>(2)</label></formula><p>where B(x, y) is the beta function defined as B(x, y) = Γ(x)Γ(y) Γ(x+y) .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof (of Lemma 3) Consider</head><formula xml:id="formula_43">Y = G 1 -G 2 . The characteristic function of Y is φ Y (t) = 1 1 + iλt 1 n • 1 1 -iλt 1 n = 1 1 + λ 2 t 2 1 n</formula><p>which is a special case of the characteristic function of the Generalized Asymetric Laplace distribution (GAL) with parameters (θ, κ, ω, τ ):</p><formula xml:id="formula_44">φ GAL (t) = e iθt 1 1 + i √ 2 2 ωκt τ • 1 1 -i √<label>2</label></formula><p>2κ ωt τ where θ = 0, κ = 1, ω = √ 2λ, and τ = 1/n. The density function of GAL(θ, κ, ω, τ ) when θ = 0 and κ = 1 is</p><formula xml:id="formula_45">f GAL (x) = √ 2 ω τ +1/2 Γ(τ ) √ π |x| √ 2 τ -1/2 K τ -1/2 ( √ 2|x|/ω) where K τ -1/2 ( √ 2 ω |x|) is the Bessel function defined in Lemma 2. In addition, E|Y| = ∞ -∞ |x|f GAL (x)dx = 2 • ∞ 0 x √ 2 ω τ +1/2 Γ(τ ) √ π x √ 2 τ -1/2 K τ -1/2 ( √ 2x/ω)dx</formula><p>which follows from the symmetry property of f GAL (x) (φ Y (t) is is real valued). After reformulation, we have</p><formula xml:id="formula_46">E|Y| = 2 √ 2 √ 2 τ -1/2 ω τ +1/2 Γ(τ ) √ π ∞ 0 x τ +1/2 K τ -1/2 ( √ 2x/ω)dx</formula><p>Now, we can apply Lemma 2 for the integral and we obtain</p><formula xml:id="formula_47">E|Y| = √ 2 • w • Γ(τ +<label>1</label></formula><p>2 ) Γ( <ref type="formula" target="#formula_41">1</ref>2 ) √ π after simple derivation. Using that √ π = Γ(1/2) and B(x, y) = Γ(x)(y) Γ(x+y) , we have</p><formula xml:id="formula_48">E|Y| = √ 2 B(1/2, τ )</formula><p>• w</p><p>Applying ω = √ 2λ and τ = 1/n, we arrive at Equation (1). To prove Equation ( <ref type="formula" target="#formula_40">2</ref>), consider that  </p><formula xml:id="formula_49">Var (|Y|) = E|Y| 2 -[E|Y|] 2 where E|Y| 2 = E(Y 2 ) = E(G 2 1 ) + E(G 2 2 ) -2 • E(G 1 ) • E(G 2 ) Using that E(G 2 1 ) = E(G 2 2 ) = (1/n 2 + 1/n)λ 2 ,</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Aggregating measurements while guaranteeing differential privacy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>EnergyFigure 2 :</head><label>2</label><figDesc>Figure 2: The original and noisy measurements of user i, where the added noise is G 1 (N, λ) -G 2 (N, λ) (N = 100, T p is 10 min).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Success probability of guessing participating nodes depending on β and different values of α and N .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The error depending on N using random clustering. T p is 10 min.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: The error depending on N using consumption based clustering. T p is 10 min.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Privacy of appliances in s long time windows (where s is 10 min, 15 min, 30 min, 1 h, 4 h, 8 h, 1 day).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>G 2 ( 1 k</head><label>21</label><figDesc>we obtain Equation<ref type="bibr" target="#b1">(2)</ref>.Now, we can easily proveTheorem 2. N -M, λ)| = (using that n i=1 G(k i , λ) = G(1/ n i=1 i , λ)) = E|G 1 (1 -M/N, λ) -G 2 (1 -M/N, λ)| =(using α = M/N and applying Lemma 3)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>λ) due to the sum-mation property of the gamma distribution 6 . Here, G 1 (1, λ) and G 2 (1, λ) are i.i.d exponential random variable with rate parameter 1/λ which completes the argument.Our distributed sanitization algorithm is simple; user i calculates value Xi t</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>ε s of different appliances in case of different s. N = 100 and the sampling period is 10 min.</figDesc><table><row><cell>1 1-α )</cell><cell>λ</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Inference accuracy of starting slots. N = 100, T p = 10 min, and "# of users" means the number of users who have the given appliance in our dataset. The accuracy (|t ′ -t s |) is given in hours.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Please refer to<ref type="bibr" target="#b17">[18]</ref> for a more detailed discussion about key management issues in smart metering systems.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Similarly to monitoring neighbors. Indeed, neighbors can also be malicious users, which is included in our model.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>We will use the notation λ instead of λ(t) if the dependency on time is obvious in the context.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_3"><p>The sum of i.i.d. gamma random variables follows gamma distribution (i.e.,n i=1 G(ki, λ) = G(1/ n i=1 1 k i , λ)).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_4"><p>Note that all nodes send responses in the second round, and the randomness of Ci ensures that the supplier cannot gain any knowledge about the participating nodes of any nodes.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_5"><p>Available at http://www.crysys.hu/~acs/misc/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_6"><p>In fact, the average error is approximated in Figure4(a): we picked up 200 different clusters for each N , and plotted the average of their meant(µ(t)). 200 is chosen according to experimental analysis. Above 200, the average error do not change significantly.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_7"><p>This increase is less than 0.01 even if N is small when the sampling period is changed from 5 min to 15 min.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_8"><p>The same type of appliance is used in all households.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The work presented in this paper was supported in part by the European Commission within the STREP WSAN4CIP project. The views and conclusions contained herein are those of the authors and should not be interpreted as representing the official policies or endorsement of the WSAN4CIP project or the European Commission.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">On the security economics of electricity metering</title>
		<author>
			<persName><forename type="first">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fuloria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the WEIS</title>
		<meeting>the WEIS</meeting>
		<imprint>
			<date type="published" when="2010-06">June 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Who controls the off switch?</title>
		<author>
			<persName><forename type="first">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fuloria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE SmartGridComm</title>
		<meeting>the IEEE SmartGridComm</meeting>
		<imprint>
			<date type="published" when="2010-06">June 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Privacy Model for Smart Metering</title>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Bohli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sorge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Ugus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE ICC</title>
		<meeting>IEEE ICC</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Efficient Aggregation of Encrypted Data in Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Castelluccia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Mykletun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tsudik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM/IEEE Mobiquitous Conference</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Multiparty computation from threshold homomorphic encryption</title>
		<author>
			<persName><forename type="first">R</forename><surname>Cramer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Damgard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Nielsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Our Data, Ourselves: Privacy via Distributed Noise Generation</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kenthapadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Mcsherry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROCRYPT</title>
		<meeting>EUROCRYPT</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Calibrating Noise to Sensitivity in Private Data Analysis</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Mcsherry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nissim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd IACR TCC</title>
		<meeting>the 3rd IACR TCC</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Smart Grid Privacy via Anonymization of Smart Metering Data</title>
		<author>
			<persName><forename type="first">C</forename><surname>Efthymiou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kalogridis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE SmartGridComm</title>
		<meeting>IEEE SmartGridComm</meeting>
		<imprint>
			<date type="published" when="2010-10">October 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sharing decryption in the context of voting or lotteries</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Fouque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Poupard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stern</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of FC</title>
		<meeting>FC</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="90" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Privacy-friendly Energy-metering via Homomorphic Encryption</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">D</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jacobs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the STM</title>
		<meeting>the STM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">O</forename><surname>Goldreich</surname></persName>
		</author>
		<ptr target="http://www.wisdom.weizmann.ac.il/oded/PS/prot.ps" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Nonintrusive appliance load monitoring</title>
		<author>
			<persName><forename type="first">G</forename><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE</title>
		<meeting>the IEEE</meeting>
		<imprint>
			<date type="published" when="1992-12">December 1992</date>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="1870" to="1891" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">No Free Lunch in Data Privacy</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kifer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Machanavajjhala</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
	<note>In to appear in SIGMOD 2011</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Releasing Search Queries and Clicks Privately</title>
		<author>
			<persName><forename type="first">A</forename><surname>Korolova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kenthapadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ntoulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of WWW 2009</title>
		<meeting>WWW 2009</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">The Laplace distribution and generalizations</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kotz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Kozubowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Podgorski</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Birkhauser</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A novel method to construct taxonomy electrical appliances based on load signatures</title>
		<author>
			<persName><forename type="first">H</forename><surname>Lam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">K</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Consumer Electronics</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="653" to="660" />
			<date type="published" when="2007-12">December 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Private memoirs of a smart meter</title>
		<author>
			<persName><forename type="first">A</forename><surname>Molina-Markham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cecchet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Irwin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM Buildsys</title>
		<meeting>ACM Buildsys</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Key Management for Substations: Symmetric Keys</title>
		<author>
			<persName><forename type="first">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fuloria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Alvarez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mcgrath</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Public Keys or No Keys? In IEEE PSCE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Differentially Private Aggregation of Distributed Time-Series with Transformation and Encryption</title>
		<author>
			<persName><forename type="first">V</forename><surname>Rastogi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGMOD</title>
		<meeting>the ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="2010-06">June 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Privacy-Preserving Smart Metering</title>
		<author>
			<persName><forename type="first">A</forename><surname>Rial</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Danezis</surname></persName>
		</author>
		<idno>MSR- TR-2010-150</idno>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>Microsoft Research</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Domestic electricity use: A high-resolution energy demand model</title>
		<author>
			<persName><forename type="first">I</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Infield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Clifford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Energy and Buildings</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="1878" to="1887" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Privacy-Preserving Aggregation of Time-Series Data</title>
		<author>
			<persName><forename type="first">E</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Rieffel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NDSS</title>
		<meeting>NDSS</meeting>
		<imprint>
			<date type="published" when="2011-02">February 2011</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
