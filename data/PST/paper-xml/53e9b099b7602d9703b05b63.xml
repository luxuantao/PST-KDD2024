<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Set-Partitioning-Based Exact Algorithm for the Vehicle Routing Problem</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yogesh</forename><surname>Agarwal</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">West Long Branch</orgName>
								<orgName type="institution" key="instit1">AT&amp;T Bell Labs</orgName>
								<orgName type="institution" key="instit2">Technical Staff</orgName>
								<address>
									<postCode>07748</postCode>
									<country>New Jersey</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Kamlesh</forename><surname>Mathur</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Operations Research</orgName>
								<orgName type="institution">Case Western Reserve University</orgName>
								<address>
									<postCode>44106</postCode>
									<settlement>Cleveland</settlement>
									<region>Ohio</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Harvey</forename><forename type="middle">M</forename><surname>Salkin</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Operations Research</orgName>
								<orgName type="institution">Case Western Reserve University</orgName>
								<address>
									<postCode>44106</postCode>
									<settlement>Cleveland</settlement>
									<region>Ohio</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Set-Partitioning-Based Exact Algorithm for the Vehicle Routing Problem</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">4619066F91379B442D79C102933AB7FA</idno>
					<note type="submission">Received October 1987 Accepted January 1989</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we discuss a computationally viable algorithm based on a set-partitioning formulation of the Vehicle Routing Problem (VRP). Implementation strategies based on theoretical as well as empirical results are developed. Some computational results are presented. It is shown that a set-partitioning formulation to the VRP, although well known for a long time, deserves considerable research efforts beyond those we present here.</p><p>Given a set of n customers, each with demand wi, a central depot, the matrix of all distances d,,, and the vehicles each with capacity W, find a set of vehicle routes so</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>The Vehicle Routing Problem (VRP), also referred to as the Vehicle Dispatching or the Delivery Problem, addresses the design of vehicle routes from a depot to a number of stops (demand points) requiring deliveries in less than truckload (LTL) quantities. Each route originates at the depot, makes several deliveries not exceeding the capacity of the vehicle, and then returns to the depot. The objective is to design a set of feasible routes so as to minimize the total distribution cost while satisfying all customer demands.</p><p>The distribution costs in the real world may be composed of, among others, fuel costs, driver's pay, depreciation, and maintenance of vehicles. In general, however, most cost elements are positively correlated to the distance traveled, and, thus, for modeling purposes, minimizing the total distance traveled is a reasonable, objective function. In addition to the truck-capacity restriction, other less important constraints may include, among others, total time/distance limit for each route and customer timewindow constraints. Ignoring these secondary constraints, a simplified version of the Vehicle Routing Problem, termed Basic VRP, may be stated as follows:</p><p>as to minimize the total distance traveled such that the total demand on each route does not exceed the truck capacity W and each customer is visited on exactly one route.</p><p>The VRP has recently attracted considerable research effort. However, because of the combinatorial nature of the problem, most of the work has been devoted to the development of heuristic algorithms. Some of the well-know heuristic approaches are by <ref type="bibr">Clarke and Wright [ 6 ]</ref> , <ref type="bibr">Gillett and Miller [ 111,</ref><ref type="bibr">Foster and Ryan [lo]</ref>, and Fisher and Jaikumar <ref type="bibr" target="#b9">[9]</ref>. There have been a few attempts to solve the VRP optimally, notably by Christofides et al. <ref type="bibr" target="#b4">[5]</ref>, and Laporte et al. <ref type="bibr" target="#b12">[13]</ref>. Christofides et al.'s approach is based on the shortest path and spanning tree relaxations of the VRP. The relaxations are solved using dynamic programming to produce bounds on the VRP that are used in a branch and bound search to find the optimal solution. The algorithm of Laporte et al. <ref type="bibr" target="#b12">[13]</ref> is based on a well-known Traveling Salesman Problem (TSP) formulation involving subtour breaking constraints. Although both approaches can address the basic VRP adequately, there does not appear to be any way of incorporating other constraints such as time/distance or window-time constraints within these approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">SET-PARTITIONING FORMULATION OF THE VRP</head><p>In this paper, we present an exact algorithm as well as a heuristic method for the VRP based on the set-partitioning (SP) formulation. In the SP formulation, each vehicle route is represented by a binary n-vector a,. The element a,, of vector a, is 1 if stop i (i = 1,2, . . . ,n) is visited on route a,, and 0 otherwise. With each column a,, we associate a cost c, representing the total distance traveled on the route. Note that column a, represents only the subset of stops visited on the route and not the sequencing of stops on it. Therefore, to associate the cost c,, a TSP must be solved over the depot and the subset of stops on a,, (i.e., the set { i : a,, = 1 in a,}). Also, each route a, is implicitly assumed to be feasible with respect to the truck capacity and other constraints. Then, the VRP can be posed as the SP problem below:</p><formula xml:id="formula_0">Minimize cJ 9 x, J (SP)</formula><p>subject to a, x, = e J and x, = 0 or 1 (allj).</p><p>Here e is the n-vector of all ones, the binary variables x, determine the inclusion (x, = 1) or exclusion (xJ = 0) of the route represented by the column a, in the solution, and the constraints ensure that each stop is visited on exactly one route. Note that neither the customer demands w, nor the vehicle capacity W appear explicitly in the formulation. This follows since each route a, is implicitly assumed to be feasible or, equivalently, each a, must satisfy the following constraints:</p><formula xml:id="formula_1">w a, C W ,</formula><p>where w = ( w I , w 2 , . . . ,w,) is the row vector representing stop demands.</p><p>The SP formulation of the VRP has been long recognized. It was first proposed by Balinski and Quandt <ref type="bibr" target="#b3">[4]</ref> for the delivery problem that is a close relative of the VRP.</p><p>The heuristic algorithm of Foster and Ryan [ 101 and the interactive heuristics of Cullen et al. [7] are also based on the SP formulation. Desrosiers et al. <ref type="bibr" target="#b8">[8]</ref> have successfully used the SP formulation to design an exact algorithm for a different routing problem that has time-window constraints but no vehicle-capacity constraints. We compare and contrast their work with ours in the next section. However, no serious attempt has been made to use this approach to design exact algorithms for the standard VRP. The major drawback of this approach is that the number of possible columns aj representing feasible vehicle routes can be very large even for fairly small problems. It is computationally impractical to generate and store all possible columns or even a reasonable subset, let alone solve the SP problem over them. In this paper, we discuss some results and strategies that make the SP approach computationally more attractive.</p><p>Moreover, the SP formulation is particularly appealing because most real-world situations can be adequately modeled within its framework. More specifically, since the columns aj are implicitly assumed to represent feasible routes, virtually any criteria of route feasibility can be enforced by permitting only feasible columns to enter the formulation. Also, since the cost cj of each column is evaluated separately, even complex cost functions involving (e.g.) a fixed truck cost or waiting cost are permissible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">BASIC APPROACH</head><p>Our approach consists of three basic steps. In thejrst step, the Linear Programming (LP) relaxation of the VRP is solved using a column-generation scheme. The columngeneration subproblem and its solution are described in Section 4. Since the LP solution is almost certainly fractional, it is of little use by itself. However, the LP optimal basis and corresponding set of dual variables contain valuable information that can be used to generate good heuristic solutions as well as the optimal solution. The second srep is to extract a heuristic solution using the columns in the LP optimal basis by solving a set-covering problem. This set-covering problem is defined over the binary columns in the optimal basis and their binary subcolumns (aj is a subcolumn of ak if aj S a&amp;). The details of this procedure are given in Section 7. In the third srep, relatively small set of columns is generated that is guaranteed to contain the optimal VRP solution according to a well-known theorem on SP problems. The optimal solution is then obtained by solving SP over this set of columns. The size of the set depends on the known upper bound on the solution value; the tighter the upper bound, the smaller the set. Hence, the importance of generating a good heuristic solution in the second step.</p><p>As mentioned above, Desrosiers et al.</p><p>[8] use a very similar approach to solve the time-window routing problem (TWRP), though both were developed independently (our interest in the SP formulation was inspired by the work of Foster and Ryan [lo]).</p><p>The TWRP is different from standard VRP in that there are no vehicle capacity constraints, but certain time windows must be observed for each trip. Therefore, the nature of the resulting column-generation subproblem is very different between the two problems. In the TWRP case, the subproblem is a time-window constrained shortest-path problem, which is solved by a dynamic programming approach. In our case, the subproblem is to find a profit-maximizing subtour subject to capacity con-straint and is solved by the branch and bound method. There are also significant differences in the strategies used to improve convergence of LP and to generate optimal solutions after solving LP relaxation.</p><p>In short, though the basic formulation and strategy is similar in both cases, the implementation details are quite different because of the differences in the nature of the two problems. Laporte and Nobert [ 141 have contrasted the work of Desrosiers et al. <ref type="bibr" target="#b8">[8]</ref> with previous expositions of our work . We believe that future development of algorithms in this area could benefit by combining ideas from both papers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">THE COLUMN-GENERATION SCHEME</head><p>The LP relaxation of SP may be written as (LP) subject to</p><formula xml:id="formula_2">A . x = e</formula><p>As discussed above, the matrix A contains an enormous number of columns and it is computationally impossible to explicitly generate all columns in advance. In this section, we develop a column-generation scheme where at each iteration of the simplex algorithm only the columns in the current basis B are known and any other column is generated as and when needed. At any simplex iteration corresponding to a basis B, if u = csB-l is the vector of dual variables where cB is the cost vector corresponding to the basic variables, then among all the remaining columns (which are not known explicitly), we need to identify the column ak with the least reduced cost c k ; that is:</p><formula xml:id="formula_3">- ck = minimize (c, -u . aj).</formula><p>If c k 2 0, the current solution is optimal; otherwise, column ak enters the basis. Note that A consists of all binary columns y = {yi}, that is yi = 0 or 1 ( i = 1, . . . ,n), which satisfies:</p><formula xml:id="formula_4">J n 2 wyj s w. i = 1</formula><p>Thus, column ak is equal to y*, the optimal solution to the problem below:</p><formula xml:id="formula_5">" Minimize Z = fly) - ui yi i = I n (Pl) subject to w i * yi S W i = 1</formula><p>and yi = 0 or 1 ( i = 1, . . . J), wherefO,) is the cost of the optimal TSP tour over the stops represented by column Y .</p><p>Note thatf(y) is a very complex function of the vector y and its value can be obtained only by actually solving a TSP. This makes the subproblem difficult to solve. Note that if f(y) is replaced by a linear function of y (say f(y) = piyi), then the subproblem (Pl) reduces to a Knapsack Problem, which is relatively easy to solve. Although we cannot write f(y) as a linear function, we show in the next section that it is possible to find a linear function that is a lower bounds onf(y). If (Pl) is solved after replacingfcy) by such a linear function, we obtain a lower bound on the objective function Z. Generating this lower bound at each node in a branch and bound scheme allows us to solve (Pl) efficiently. The development of the lower bound function, related theorems, and details of the branch and bound approach are given in the next section. i</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">A BRANCH AND BOUND ALGORITHM TO SOLVE (Pl)</head><p>In the branch and bound algorithm, branching is based on setting the variable yi to zero or one, that is, to exclude or include, respectively, stop i in the route being generated. Thus, at any stage of the branch and bound procedure, each stop will belong to one of three states; namely, included in the route (yi = l), excluded from the route (yi = 0), or not decided on (yi not used for branching yet). In light of this, we rewrite the original notation and define some additional terms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">NOTATION</head><p>number of customers to be served indices of stops arc joining stops i and j dual variable associated with constraint i (stop i) in problem (LP) demand of customer i distance from customer i to customer j distance from depot to customer truck capacity {i:i = 0, 1, 2, . . . ,PI} set of all stops and the depot (i = 0) {i:y, = 1); set of stops included in the route {i:y, = O}; set of stops excluded from the route {Ly, undecided}; or set S, = S -SI U So cardinality of the set S1, i.e., the number of stops in the set SI set of arcs on a given tour covering stops in SI set of arcs on the optimal tour covering stops in SI COSI of optimal tour over SI 4, + d,t -dIr; cost of inserting i between j and k MinimumI.kEs, { q i i k ) } Minimumo,k,ET {q,i.kN W -CleslW,; unused capacity of the vehicle</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">COMPUTING A LINEAR LOWER BOUND ON f(v)</head><p>To develop a lower bound on the functionfb), we need the following theorem on the TSP.</p><p>Theorem 1. Given a set of points S, an optimal TSP tour T*(S), and a point i not in S, if qi(P) = qi(S), then the tour obtained by inserting i in its best position in P ( S ) will be the optimal TSP tour for the set S' = S U {i}.</p><p>Proof. Recall that the length of tour P(S) is denoted byf(S). After inserting i in its best position, let the new tour be Tl(S') with length lI. Then</p><formula xml:id="formula_6">11 = f(S) + q i ( p ) or f(S) = II -q i ( p ) .</formula><p>(1)</p><p>Let P ( S ' ) be the optimal tour over the set S' with lengthf(S'). Suppose stop i appears between stops j and k in this tour. Then, we can create a tour T2(S) by deleting i from P ( S ) and joining j and k directly. Let f2 be the length of this tour. Then</p><formula xml:id="formula_7">12 = f(S7 -qXj,k).</formula><p>Since q i ( j , k ) 3 qi (S) = qi(P) by definition and by assumption, respectively, we have</p><formula xml:id="formula_8">(2)</formula><p>Sincef(S) is the length of the optimal tour over S, we must have l2 3 f ( S ) . The last inequality with Equations (1) and ( <ref type="formula">2</ref>) yield</p><formula xml:id="formula_9">12 6 f(S') -4i(T*). f(S') -qXP) 3 f(S&gt; = 11 -q i ( P )</formula><p>or f ( S ' ) <ref type="bibr" target="#b2">3</ref>  <ref type="bibr">11.</ref> Since II is the distance of the feasible tour TI andf(S') is the length of the optimal tour, the above relation must hold with equality. Hence, T , is optimal for S'.</p><p>The corollaries below follow directly from the theorem. Corollary 1. Given set S, an optimal tour P(S) and a point i not in S; let S' = S U {i}, thenf(S') &gt;f(S) + 4i(S).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 2. is a valid lower bound on f ( S ' ) .</head><p>If LB(S) is a lower bound on the TSP solution over S, then LB(S) + q,{S)</p><p>With reference to the notation, consider two sets SI and S2 such that S1 C Sz. Let rn = IS2/ -IS1[. Then, the following theorem defines a lower bound onf(S2). Given sets S1, S,, and So, if we know that the utmost rn more stops can join set SI, then according to the theorem, the linear function below defines a lower bound on f(y) at the current node of the branch and bound tree: This problem is solved trivially by ranking wi in increasing order and finding the largest k such that the sum of the first k values does not exceed W,. Then, m(Sl) = k.</p><formula xml:id="formula_10">U C f ( y ) ) = f(Sl&gt; + C (qi(Si)/m) * yi.</formula><p>Having computed rn(S1), we define a quantity p i for each i E S, using</p><formula xml:id="formula_11">pi = (qi(Si)/m(Si)) -ui i E S ,</formula><p>Then, the problem below gives a valid lower bound on the subproblem objective function Z.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(P3) LB(Z)</head><formula xml:id="formula_12">= f(Sl) -2 ui + Minimize x pi yi iESl i€Sx subject to</formula><p>x wi yi S W , and i€Sx yi = 0 or 1 i E S,.</p><p>Since the solution of the Knapsack Problem (P3) is used solely to provide a lower bound for the subproblem objective function 2, it makes sense to relax the integrality constraints. This allows us to solve the Knapsack Problem by inspection at each node of the branch and bound tree while still yielding a valid lower bound. Similarly, rather than solving a TSP at each node to obtainf(S1), we can replacef(S,) with a lower bound. Such a lower bound can be easily computed by virtue of Corollary 1 using the information at the parent node. This strategy results in a substantial saving of computer time to solve the subproblem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Node Selection and Branching Procedures</head><p>We follow a combination of "depth-first'' node selection criterion and "least lowerbound'' strategy for branching. Depth-first branching is pursued by selecting the most recently created node for further branching. As in most depth-first searches, the branching scheme is designed to produce a good incumbent solution quickly. The branching variable at each node is selected based on the least lower-bound criterion. In particular, at any node, given S,, So, and S,, we choose the branch variable so as to minimize the following function:</p><formula xml:id="formula_13">Minimize [( qi( S ,) -ui)/wi].</formula><p>Here, q,.(Si) is a good measure of the contribution of stop i tof(y). Therefore, the numerator [qi(Si) -ui] is a good measure of the contribution made by stop i to the subproblem's objective function if it joins the set SI. On the other hand, wi is the resource requirement (in terms of the truck-capacity constraint) associated with this contribution. Thus, the branching strategy seeks to provide the least contribution to the objective function to be minimized for the unit consumption of the truck capacity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i € S x</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">SOLVING THE LP RELAXATION OF VRP</head><p>Having designed a column-generation scheme, we attempt to solve the LP relaxation starting from an identity basis. In this basis, each identity column ei represents a route visiting a single stop (i.e., stop i ) . The cost of column ei is the round-trip distance of stop i from the depot, that is, ci = 2doi, and the dual vector u is given by u = c, . B -' = c,, or ui = ci. At each step of the simplex algorithm, the column generation scheme is used to generate a single column with the least reduced cost to enter the basis. The procedure terminates when the column generated has a nonnegative reduced cost.</p><p>This relatively straightforward procedure for solving the LP relaxation turned out to be computationally inefficient and demonstrated slow convergence properties for the following reasons:</p><p>(1) The values of the dual variables fluctuated widely from iteration to iteration and sometimes acquired large negative values. It can be shown that in the optimal LP solution the dual variables will always be nonnegative if the triangular inequality is satisfied in the distance matrix. Therefore, the presence of dual variables with negative values means that the generated column is unlikely to be in the optimal basis. (2) The optimal values of the dual variables are generally much smaller than are the initial values (ui = ci = 2doi) corresponding to an identity basis (cf. Table <ref type="table" target="#tab_0">I</ref>). Therefore, columns generated early in the algorithm are not likely to stay in the optimal basis.</p><p>(3) Since only one column is generated at a time, the column-generation problem has to be solved many times, which is computationally expensive.</p><p>(4) The initial value of the objective function is quite high compared to its final value. If the procedure could be started from a heuristically generated solution closer to the LP optimal, many simplex iterations could be saved.</p><p>Based on the above observations, the following strategies were used to improve computational efficiency:</p><p>(1) The values of the dual variables fed into the column-generation subproblem should be closer to the optimal values (which are not known a priori). This can be done if we (somehow) estimate the optimal values of the dual variables and not allow their values to fluctuate widely from iteration to iteration. We discuss these strategies in Sections 6.1 and 6.2, respectively.</p><p>(2) To reduce the computational effort, the number of times the column-generation subroutine is used should be minimized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">A Priori Estimation of the Dual Variables</head><p>The first strategy was implementedasing an a priori estimation of the optimal values of the dual variables. Specifically, it was conjectured that the optimal values of the dual variables are related to the problem attributes such as stop demands, distance of stops from the depot, and the geographical clustering of stops. The motivation behind the conjecture is that in the subproblem the dual variable ui may be considered to represent the reward associated with including the stop i on the route. Therefore, it makes sense to say that the reward should reflect the relative cost of servicing the stop. This cost is positively correlated to the stop demand and the distance of the stop from the depot. Also, if the stop is isolated from other stops, it costs more to service when compared with one close to other stops.</p><p>Our method of estimating the values of dual variables requires a reasonably good heuristic solution to the VRP, such as the one obtained by the Clarke and Wright <ref type="bibr" target="#b6">[6]</ref> procedure. Note that in the optimal basis of the LP relaxation of VRP each column in the basis has a reduced cost of zero. This means that the sum of the values of the dual variables for stops on a route is equal to the route cost. Although this property may not hold for any actual VRP solution, it seems reasonable to assume that the reduced cost of each route in a good VRP solution will be relatively close to zero. Thus, the problem of estimating values of the dual variables reduces to the problem of allocating the cost of each route among the stops on the route for the heuristic solution.</p><p>Let column a, with cost cj represent a given route in the heuristic solution and Sj = {i: ai, = l}, the set of stops on route j . Then, we propose the statistical model below for estimating values for the dual variable ui corresponding to stop i E S j : si, = p&amp; + p p j + p3qj i E Sj, where and iii = estimated value of the ith dual variable.</p><p>A possible value for the p's can be p, = p2 = p3 = 1/3. (Note that PI + p2 + p3 = 1.0.) However, on a large set of randomly generated problem, we found that PI = 0.55, p2 = 0.48, and p3 = 0.11 produces much better starting values for the U i ' S .</p><p>When the optimal values of the dual variable were regressed against the values using the above model for seven test problems, a combined correlation coefficient of 0.85 was obtained. That the model produces reasonable estimates for the optimal dual values is demonstrated by Table <ref type="table" target="#tab_1">11</ref>, which lists the computed and actual values of optimal duals for a 15-stop problem. However, further work in this direction may produce still better methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Imposing Upper Bounds on the Dual Variables</head><p>Excessive fluctuations in the value of the dual variables, which is a major cause of slow convergence, can be avoided by imposing artificial upper bounds on the dual variables. More specifically, consider the dual (D) problem below, where upper-bound constraints of the form ui G ti have been added. Note that each upperbound constraint ui S ti [where u = (ui) and t = (ti)] is equivalent to introducing an additional identity column ei in the primal with cost ti and *Run was terminated after 180-second time limit. associated variable yi. Clearly, such upper bounds artificially constrain the dual space and, hence, overrelax the primal space. This means that a solution to LP' may not be feasible for the original problem LP. Such a condition will be indicated by one or more variables yi being basic at a nonzero value in the optimal solution of LP'. However, it is intuitively obvious and can be easily shown that if in the optimal solution of LP' all variables yi with artificial cost ti are nonbasic or are basic at value zero, then the solution is also optimal for LP. If the optimal solution of LP' does contain artificial variables yi at nonzero levels, then the upper bounding constraints for such variables can be relaxed gradually by setting ri to (1 + a.)ti, (a &gt; O ) , and solving LP' again. This procedure is repeated until no artificial variable is basic at nonzero values.</p><p>Note here that the value of the upper bound ti will never exceed 2 . doi because the column ei with cost 2 * do; also corresponds to a valid vehicle route visiting a single stop i. Therefore, if ti = 2 . doi, yi may be basic at a nonzero level and the solution to LP' will still be feasible for LP. Initially, the upper bounds are set to the estimated values obtained by the procedure described in the previous section. Then, they are gradually relaxed until they are no longer binding. This procedure produces substantial reduction in CPU time needed for solving the LP relaxation as indicated in Table <ref type="table" target="#tab_1">111</ref>.</p><p>Several other techniques were used to improve computational efficiency, some of which are briefly mentioned below; details are in <ref type="figure">Agarwal [l]</ref>.</p><p>(1) It was noticed that the dual variables sometimes acquire large negative values that tend to slow down the convergence rate. It can be shown that if the triangular inequality is satisfied in the distance matrix, the optimal dual values will always be nonnegative. Nonnegativity of the dual variables can be ensured by adding the negative identity columns with zero cost to the primal problem. (Note that this is equivalent to replacing equality constraints with 2 constraints in the LP.) It can be shown that the value of the optimal solution is the same for both LPs. Computational experience demonstrates that the convergence rate is significantly improved by introducing the negative identity columns.</p><p>(2) The major bottleneck in solving the LP relaxation is in solving the columngeneration subproblem. It was noticed that generating several columns rather than one requires only marginally more time. If k best columns are generated at each interaction, chances are that several of them will be able to enter the basis to provide faster convergence. This is analogous to multiple pricing in simplex algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">GENERATING A HEURISTIC SOLUTION TO VRP FROM THE OPTIMAL LINEAR PROGRAMMING SOLUTION</head><p>The LP relaxed solution of the VRP, in general, is of little value by itself because it will usually be noninteger. However, the optimal LP basis and the dual variables contain useful information that can be used to generate heuristic as well as optimal solutions to the VRP. In our method, described below, of generating an optimal solution to the VRP, the availability of a good heuristic solution is of key importance. Therefore, we first suggest a way of extracting good heuristic solutions to the VRP from the optimal LP basis.</p><p>It can be shown that if the triangular inequality is satisfied in the distance matrix, the VRP can equally well be posed as the set-covering (SC) problem given below rather than as a SP problem. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>. ,n).</head><p>We make the following observations relating to the SP and the SC formulations of the VRP. LSP and LSC are used to define the linear programming relaxation of SP and SC, respectively.</p><p>(1) Any feasible solution of SP is also a feasible solution of SC, though the converse is not true.</p><p>(2) Any feasible solution to SC is either feasible to SP or can be converted into a feasible solution to SP with lower cost. In particular, if given a feasible solution to SC not feasible to SP, it implies that one or more stops are covered on multiple routes. Each such stop can be eliminated from all routes but one. Since the triangular inequality is satisfied in the distance matrix, such elimination would result in a decreased total cost while producing a feasible solution to SP.</p><p>(3) An optimal solution of SP is also optimal to SC and vice versa. (There may be exceptions to this rule in the case where the triangular inequality satisfies dik = dij + djk.</p><p>In such a case, there may exist optimal SC solutions not feasible to SP. However, they can be reduced to feasible and optimal solutions to SP with the same cost.) (4) There exists an optimal solution to LSP for which the dual variables are nonnegative.</p><p>( 5 ) If the triangular inequality is satisfied, any optimal solution of LSP is also optimal for LSC.</p><p>(6) Any feasible basis for LSP or LSC corresponds to a feasible solution of SC though not necessarily of SP. A procedure for Step 1 is given in Salkin [ 161.</p><p>Step 2 can be solved by generating the necessary subcolumns of columns in the SC solution and solving SP over them. A subcolumn is defined as a column obtained by replacing one or more ones by zeros in the given column. Note that if the original column represents a feasible vehicle route, then the subcolumns are also feasible. In most cases, the number of subcolumns to be generated will be relatively small because, generally, the SC solution found via Stop 1 will have few overlapping columns (i.e., columns having one or more stops in common). This general approach can be enhanced further to produce a better heuristic solution (see Agarwal <ref type="bibr" target="#b0">[ 11)</ref>. Test results given in Table <ref type="table" target="#tab_5">IV</ref> indicate that our approach is quite effective. The heuristic procedure produced optimal solutions on four out of seven problems tested and was only slightly higher than the optimal solution in the other three cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">OPTIMAL SOLUTIONS TO THE VRP</head><p>The approach for optimal solutions to the VRP is based on the well-known result below (see <ref type="bibr">Pierce and Lasky [15]</ref>). Theorem 3. In SP, if the cost coefficients cj are replaced by the reduced costs f, = c, -u * uj then the resulting set-partitioning problem SP' has the same set of optimal solutions as does the original problem.</p><p>We use the reduced cost corresponding to the LP optimal solution to define SP'. Since the reduced costs at the LP optimal are nonnegative, we have the corollary below.</p><p>Corollary 3. If Z, is the value of the LP optimal solution and Zu is a known upper bound on the SP solution, then the optimal SP solution cannot contain a column with reduced cost greater than Zu -2,.</p><p>Using these results, an obvious approach to obtain an optimal solution to the VFW is</p><p>Step 1 . Solve the LP relaxation of the VFW and let the value of the objective function be 2,.</p><p>Step 2. Extract a good SC solution from the optimal LP basis and convert it to the best possible SP solution using the approach discussed in Section 7. Let the objective function value of this solution be ZU.</p><p>Step 3 . Generate all columns with reduced cost less than or equal to Zu -2, using the column-generation scheme.</p><p>Step 4 . Solve SP over the set of columns generated. The resulting solution is the optimal solution to the VRP.</p><p>The difficulty with this approach is that if the gap 2, -Z, is large, the number of columns with reduced cost less than 2, -2, may be significant. In that case, the computer time required to generate all such columns and then to solve the SP problem over them may be excessive.</p><p>However, a closer inspection of the above approach reveals that it may not be necessary to generate all columns with E S Zu -2,. In particular, suppose that in the optimal solution the column with the largest value for E has E = t . Then, we need only enumerate columns with E S t and solve SP over these in order to obtain the optimal solution. In most cases, t will be much smaller than Z, -2,. Let n <ref type="bibr" target="#b8">(8)</ref> represent the number of columns with E d 8. Then, n ( t ) may be considerably smaller than n(Z, -2,). However, the value of t is not known in advance. If we use an arbitrary value of t with the above approach and Z,, -Z, (here Z,, is the value of the SP solution over the columns generated) turns out to be smaller than t , then we can be sure that the solution is optimal. However, note that if t is not sufficiently large the columns generated may not contain any SP solution at all.</p><p>One way to circumvent this problem is to set t to the largest E in the heuristic solution. By doing this, we can be sure that the columns generated contain at least one SP solution because the heuristic solution itself is one such solution. Based on this observation, we can use the following procedure to get the optimal solution.</p><p>Step 1 . Generate the heuristic solution to the VRP using the approach discussed above and let t be the largest reduced cost in the solution.</p><p>Step 2. Generate all columns with reduced cost smaller than or equal to t and solve SP over these. If the difference Zsp -2, is less than or equal to t, then it is the optimal solution; stop. Otherwise, go to Step 3. Step 3. Generate all columns with reduced cost smaller than or equal to Zsf -2, and solve SP over these. The resulting solution is optimal; stop.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>If we terminate in</head><p>Step 2, the computational effort may be much smaller than what is needed in enumerating all columns up to a reduced cost of  Step 2 fails, the procedure may take even more time than using r equal to the differences Zu -Z , . Nevertheless, the failure of the test in Step 2 does not always mean that the effort spent in Step 2 is entirely wasted. If Z,, turns out to be smaller than the original upper bound Zu, then this procedure may still turn out to be more efficient than starting with t equal to the difference Zu -Z,.</p><p>Table V lists computational experience with this procedure. Note that in all seven cases the number of columns generated in Step 2 is sufficient to produce the optimal solution as well as to guarantee optimality. Columns 5 and 7 of the table list the values of n(ZU -Z,) and n ( t ) , respectively. Note that n ( r ) is much smaller than n(ZU -2,) in three out of seven cases. The difference will get more and more pronounced as the problems get larger.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">COMPUTATIONAL TESTING</head><p>We tested our algorithm on the seven problems reported in Christofides et al. <ref type="bibr" target="#b4">[5]</ref> for which the authors have reported the optimal solution. These problems are the ones numbered 4-10 in Christofides et al. <ref type="bibr" target="#b4">[ 5 ]</ref> . Problems 1-3 were not used because the data for them are given in the form of a distance matrix rather than of stop coordinates. The problems are given in Table <ref type="table" target="#tab_6">VI</ref>. Note that the CDC 7600 computer used by Christofides et al. is roughly 7.5l times faster than is the IBM 370/4281 that we used. Taking this into account, our algorithm is roughly 13 times faster than is the Christofides' algorithm. However, we are using a heuristic procedure to solve the TSP at the column-generation stage. An optimizing algorithm is used only when the column generated by the heuristic algorithm has positive reduced cost. Moreover, since the size of the TSP's solved is very small (maximum of six stops on any route among all seven problems), the TSP heuristic is almost certain to produce the optimal solution (see Appendix).</p><p>Slight differences in the solution values reported by the two algorithms are due to the fact that in our program all distance data are represented as integers rather than as real values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">CONCLUSION</head><p>We have presented an exact algorithm for the VRP based on the SP approach. Although the design of heuristics was not addressed in detail, the ideas presented here lead to the development of effective heuristics based on the SP approach. The SP formulation of the VRP, though well known for a long time, has received only limited attention. Based on the findings reported here, we believe that it has far more potential for the development of effective algorithms for the VRP than hitherto perceived and that the SP approach deserves considerably more serious research efforts beyond what we have presented here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX. SALESMAN PROBLEM (TSP) A HEURISTIC ALGORITHM FOR THE TRAVELING</head><p>Various insertion heuristics based on convex hull as a starting TSP tour have been proposed to solve the TSP (see <ref type="bibr">Golden and Stewart [12]</ref> for a good survey and computational results). In this appendix, however, we describe an insertion heuristic procedure that is a variation of convex hull insertion procedure of Stewart [ 171. This modified algorithm has been found to be more suitable for our algorithm because, beside giving a good TSP solution, it also provides a good lower bound on the optimal solution.</p><p>It is well known that for plainer TSP's, the relative order of points in the optimal tour is the same as in the convex hull. In other words, if points j and k are two nonadjacent points in the convex hull and i is a point not in a convex hull, then the sequence j-i-k will never appear in the optimal tour. It, therefore, seems logical to use the convex hull as an initial subtour and then insert other points (or stops) based on some insertion rule.</p><p>If S, is the set of points in the convex hull and A is the set of nonadjacent point pairs in the convex hull, then let us define a new quantity Gi(S) as follows: Using this definition, we now state an algorithm that gives a heuristic solution of the TSP as well as a good lower bound on the optimal solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Convex Maximum Insertion Heuristic With Lower Bound</head><p>Step 0 . Construct the convex hull of points in the stop set with S, and A defined as above. Let S = S,, T = T,, LB = the distance of tour T,, and UB = LB.</p><p>Step 2. Select i* jiZ S that maximizes qi(T) and compute 4,X.S) for this i*. Insert i* in its best position in T, and add it to set S. Let LB = LB + 4,(S) and UB = UB + q;(T).</p><p>Step 3 . If all points have been inserted, stop; otherwise, go to Step 2.</p><p>The algorithm described above was tested on randomly generated problems of sizes ranging from six to 20 stops in increments of two stops. For each problem size, 20 problems were generated. For each set of problems, the average tour length, average lower bound, and the ratio of lower bound to upper bound are reported in Table <ref type="table" target="#tab_7">AI</ref>.</p><p>Note that for small problem sizes (up to 10 stops), the LB/UB ratio is very close to one. This implies that the solution is optimal most of the time in this size range.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Minimize c * x and x 2</head><label>2</label><figDesc>0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Theorem 2 .</head><label>2</label><figDesc>Given the sets SI and S2 such that SI C S2, let S3 = S2 -SI, then Proof. Let 4-= MaximumiESl q,{Sl). Then, for i E S3, we have or Then using Corollary 1It is obvious that if in Equation (3) m is replaced by an upper bound on ISz[ -IS,I andf(S1) by a lower bound, the right-hand side will still be a lower bound onf(Sz).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>i€Sx</head><label></label><figDesc>Also, given sets S1, S , , and So at any stage of the branch and bound, we can, based on the truck capacity, compute the maximum number of additional stops that can join the set S1 denoted by the number m(S1). Specifically, to find m(S1),we  solve the Knapsack Problem below: Maximize rn(S1) = 2 yi i€Sx (P2) subject to x wi * yi s W , i€Sx and yi = 0 or 1 for i E S,.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Maximize</head><label></label><figDesc>of the dual problem, we get the following modified primal: Minimize subject to: cx + t * y A * x + I * y = e</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Minimize</head><label></label><figDesc>Oor 1 (i = 1, . .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I .</head><label>I</label><figDesc>Initial vs. optimal values of the dual variables for a 15-stop problem.</figDesc><table><row><cell></cell><cell></cell><cell>. .</cell></row><row><cell>stop no.</cell><cell>Initial value</cell><cell>Optimal value</cell></row><row><cell>1</cell><cell>28</cell><cell>4</cell></row><row><cell>2</cell><cell>42</cell><cell>21</cell></row><row><cell>3</cell><cell>66</cell><cell>38</cell></row><row><cell>4</cell><cell>34</cell><cell>10</cell></row><row><cell>5</cell><cell>28</cell><cell>17</cell></row><row><cell>6</cell><cell>22</cell><cell>17</cell></row><row><cell>7</cell><cell>52</cell><cell>34</cell></row><row><cell>8</cell><cell>44</cell><cell>28</cell></row><row><cell>9</cell><cell>46</cell><cell>17</cell></row><row><cell>10</cell><cell>56</cell><cell>28</cell></row><row><cell>1 1</cell><cell>24</cell><cell>17</cell></row><row><cell>12</cell><cell>16</cell><cell>14</cell></row><row><cell>13</cell><cell>58</cell><cell>42</cell></row><row><cell>14</cell><cell>36</cell><cell>15</cell></row><row><cell>15</cell><cell>50</cell><cell>16</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE 11 .</head><label>11</label><figDesc>Optimal vs. estimated values of the dual variables for a 15-stop problem.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>--</cell><cell></cell></row><row><cell></cell><cell>Optimal</cell><cell>Estimated</cell><cell>Error</cell><cell></cell></row><row><cell></cell><cell>dual</cell><cell>dual</cell><cell></cell><cell></cell></row><row><cell>stop no.</cell><cell>variables</cell><cell>variables</cell><cell>Abs.</cell><cell>%</cell></row><row><cell>1</cell><cell>4</cell><cell>10</cell><cell>6</cell><cell>250</cell></row><row><cell>2</cell><cell>27</cell><cell>30</cell><cell>3</cell><cell>11</cell></row><row><cell>3</cell><cell>38</cell><cell>29</cell><cell>-9</cell><cell>-24</cell></row><row><cell>4</cell><cell>10</cell><cell>13</cell><cell>3</cell><cell>30</cell></row><row><cell>5</cell><cell>17</cell><cell>24</cell><cell>7</cell><cell>41</cell></row><row><cell>6</cell><cell>17</cell><cell>22</cell><cell>5</cell><cell>29</cell></row><row><cell>7</cell><cell>34</cell><cell>32</cell><cell>-2</cell><cell>-6</cell></row><row><cell>8</cell><cell>28</cell><cell>30</cell><cell>2</cell><cell>7</cell></row><row><cell>9</cell><cell>17</cell><cell>18</cell><cell>1</cell><cell>6</cell></row><row><cell>10</cell><cell>28</cell><cell>18</cell><cell>-10</cell><cell>-36</cell></row><row><cell>11</cell><cell>17</cell><cell>17</cell><cell>0</cell><cell>0</cell></row><row><cell>12</cell><cell>14</cell><cell>17</cell><cell>3</cell><cell>21</cell></row><row><cell>13</cell><cell>42</cell><cell>32</cell><cell>-10</cell><cell>-24</cell></row><row><cell>14</cell><cell>15</cell><cell>22</cell><cell>7</cell><cell>47</cell></row><row><cell>15</cell><cell>16</cell><cell>19</cell><cell>3</cell><cell>19</cell></row><row><cell>Sum</cell><cell>324</cell><cell>333</cell><cell></cell><cell></cell></row><row><cell>Average absolute error</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>= 4.7; maximum absolute error = 10.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE III .</head><label>III</label><figDesc>CPU time saved by imposing upper bounds on the dual variables.</figDesc><table><row><cell></cell><cell cols="2">CPU time to solve the LP relaxation</cell><cell cols="2">Time saving</cell></row><row><cell>/li 1 No. stops</cell><cell>Without upperbounds on dual variable</cell><cell>upperbounds on dual variable</cell><cell></cell><cell>%</cell></row><row><cell></cell><cell></cell><cell>~~</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>75</cell><cell>-1 1</cell><cell>-17</cell></row><row><cell></cell><cell></cell><cell>43</cell><cell>-1 1</cell><cell>-34</cell></row><row><cell></cell><cell></cell><cell>6</cell><cell>2</cell><cell>25</cell></row><row><cell></cell><cell>30</cell><cell>18</cell><cell>12</cell><cell>40</cell></row><row><cell>20</cell><cell>40</cell><cell>18</cell><cell>22</cell><cell>55</cell></row><row><cell>20 25</cell><cell>81 &gt; 180*</cell><cell>52 32</cell><cell>29 150</cell><cell>35 82</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Based on the above observations, we can use the following approach to generate a heuristic solution to the VRP from an LP relaxed solution. Construct a good set covering solution using the columns in the LP basis (per Srep 2. Reduce this solution to the best possible SP solution (per Observation 2).</figDesc><table><row><cell></cell><cell>Optimal solution</cell><cell>Heuristic solution</cell><cell>% deviation</cell></row><row><cell>Problem no.</cell><cell>value</cell><cell>value</cell><cell>from optimal</cell></row><row><cell>1</cell><cell>375</cell><cell>375</cell><cell>0.0</cell></row><row><cell>2</cell><cell>494</cell><cell>505</cell><cell>2.2</cell></row><row><cell>3</cell><cell>332</cell><cell>332</cell><cell>0.0</cell></row><row><cell>4</cell><cell>276</cell><cell>279</cell><cell>1 . 1</cell></row><row><cell>5</cell><cell>430</cell><cell>430</cell><cell>0.0</cell></row><row><cell>6</cell><cell>358</cell><cell>376</cell><cell>5.0</cell></row><row><cell>I</cell><cell>607</cell><cell>607</cell><cell>0.0</cell></row><row><cell>Observation 1).</cell><cell></cell><cell></cell><cell></cell></row></table><note><p>Srep I.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>2, -2,. If the test in</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE V . Approach for optimal solutionsrelevent computational figures.</head><label>V</label><figDesc></figDesc><table><row><cell>-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>t = max</cell><cell></cell><cell>t = max</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>C in</cell><cell></cell></row><row><cell>hob.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>no.</cell><cell cols="2">LP heuristic -ZL</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>1</cell><cell>374</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>35</cell></row><row><cell>2</cell><cell>479</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>114</cell></row><row><cell>3</cell><cell>326</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>36</cell></row><row><cell>4</cell><cell>268</cell><cell>279</cell><cell>258</cell><cell></cell><cell></cell><cell>4</cell><cell>56</cell></row><row><cell>5</cell><cell>430</cell><cell>430</cell><cell>22</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>22</cell></row><row><cell>6</cell><cell>35 1</cell><cell>376</cell><cell></cell><cell></cell><cell>7</cell><cell>4</cell><cell>68</cell></row><row><cell>7 -</cell><cell>606 -</cell><cell>607</cell><cell>29</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>29 -</cell></row><row><cell cols="2">Prob.</cell><cell>No.</cell><cell cols="2">Solution value</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">no.</cell><cell>stops</cell><cell cols="2">Christofides SP approach</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell>21</cell><cell>374.3</cell><cell>375</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">2</cell><cell>21</cell><cell>494.7</cell><cell>494</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">3</cell><cell>15</cell><cell>334.1</cell><cell>332</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">4</cell><cell>15</cell><cell>227.9</cell><cell>276</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">5</cell><cell>20</cell><cell>429.9</cell><cell>430</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">6</cell><cell>20</cell><cell>357.6</cell><cell>358</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">7</cell><cell>25</cell><cell>606.3</cell><cell>607</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Total</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE VI . Computational results and comparison with Christofides et al. [5] CPU times (in seconds)</head><label>VI</label><figDesc></figDesc><table><row><cell>Christofides</cell><cell>SP approach</cell></row><row><cell>28.1</cell><cell>76</cell></row><row><cell>244.0</cell><cell>78</cell></row><row><cell>11.6</cell><cell>8</cell></row><row><cell>60.9</cell><cell>23</cell></row><row><cell>8.1</cell><cell>18</cell></row><row><cell>139.2</cell><cell>103</cell></row><row><cell>118.6</cell><cell>37</cell></row><row><cell>610.5</cell><cell>343</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>TABLE AI .</head><label>AI</label><figDesc>TSP heuristic and lowerbounds-computational results.</figDesc><table><row><cell></cell><cell></cell><cell>Convex maximum insertion</cell><cell></cell></row><row><cell>No. stops</cell><cell>Average LB</cell><cell>I Average UB</cell><cell>Ratio (LB/UB)</cell></row><row><cell>6</cell><cell>219</cell><cell>219</cell><cell>.999</cell></row><row><cell>8</cell><cell>257</cell><cell>260</cell><cell>.989</cell></row><row><cell>10</cell><cell>277</cell><cell>283</cell><cell>,977</cell></row><row><cell>12</cell><cell>284</cell><cell>297</cell><cell>.957</cell></row><row><cell>14</cell><cell>307</cell><cell>330</cell><cell>.93 1</cell></row><row><cell>16</cell><cell>313</cell><cell>344</cell><cell>.910</cell></row><row><cell>18</cell><cell>320</cell><cell>357</cell><cell>.899</cell></row><row><cell>20</cell><cell>323</cell><cell>380</cell><cell>.850</cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A set partitioning approach to the vehicle routing problem</title>
		<author>
			<persName><forename type="first">Y</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Set partitioning approach to vehicle routing</title>
		<author>
			<persName><forename type="first">Y</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Presented at the TIMSlORSA</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">The column generation subproblem of vehicle routing problem</title>
		<author>
			<persName><forename type="first">Y</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Presented at</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Balinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Quandt</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Exact algorithms for the vehicle routing</title>
		<author>
			<persName><forename type="first">N</forename><surname>Christofides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mingozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
		</imprint>
		<respStmt>
			<orgName>Case Western Reserve University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Res. 12 (1964) 300-304. problem, based on spanning tree and shortest path relaxations</title>
		<author>
			<persName><forename type="first">Boston</forename><surname>Conference</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the ORSAITIMS Conference</title>
		<meeting><address><addrLine>Orlando</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1981">1985. 1983. 1981</date>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="255" to="282" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Scheduling of vehicles from a central depot to a number of delivery points</title>
		<author>
			<persName><forename type="first">G</forename><surname>Clarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Res</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="568" to="581" />
			<date type="published" when="1964">1964</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Set partitioning based heuristics for interactive routing</title>
		<author>
			<persName><forename type="first">F</forename><surname>Cullen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jarvis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ratliff</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Desrosiers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Soumis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Desrochers</surname></persName>
		</author>
		<title level="m">Routing with time windows by column</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An integer programming approach to the vehicle scheduling problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Jaikumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Ryan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Res. Q</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="367" to="384" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
	<note>A generalized assignment heuristic for vehicle routing</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A heuristic algorithm for the vehicle dispatching problem</title>
		<author>
			<persName><forename type="first">B</forename><surname>Gillett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="340" to="349" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Empirical analysis of heuristics</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Golden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Traveling Salesman Problem: A Guided Tour of Combinatorial Optimization</title>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Lawler</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>John Wiley 8c Sons</publisher>
			<date type="published" when="1985">1985</date>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="207" to="249" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Optimal routing under capacity and distance restriction</title>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Norbert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Desrochers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operat. Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="1050" to="1073" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Exact algorithms for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Norbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Discrete Math</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="147" to="184" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Improved combinatorial programming algorithms for a class of all zero-one integer programming problems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Pierce</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Lasky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Sci</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="528" to="543" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><surname>Salkin</surname></persName>
		</author>
		<title level="m">Integer Programming</title>
		<meeting><address><addrLine>Reading, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1975">1975</date>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="439" to="481" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A computationally efficient heuristic for the traveling salesman problem</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th Annual Meeting of S.E. TIMS</title>
		<meeting>the 13th Annual Meeting of S.E. TIMS</meeting>
		<imprint>
			<date type="published" when="1977">1977</date>
			<biblScope unit="page" from="75" to="85" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
