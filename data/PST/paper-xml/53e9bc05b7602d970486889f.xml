<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The finite variant property: How to get rid of some algebraic properties. ⋆</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Hubert</forename><surname>Comon-Lundh</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">Laboratoire Spécification &amp; Vérification ENS de Cachan &amp; CNRS</orgName>
								<orgName type="laboratory" key="lab2">UMR 8643</orgName>
								<address>
									<addrLine>61, avenue du Président Wilson</addrLine>
									<postCode>94235</postCode>
									<settlement>CACHAN Cedex</settlement>
									<country key="FR">FRANCE</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Stéphanie</forename><surname>Delaune</surname></persName>
							<email>delaune@lsv.ens-cachan.fr</email>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">Laboratoire Spécification &amp; Vérification ENS de Cachan &amp; CNRS</orgName>
								<orgName type="laboratory" key="lab2">UMR 8643</orgName>
								<address>
									<addrLine>61, avenue du Président Wilson</addrLine>
									<postCode>94235</postCode>
									<settlement>CACHAN Cedex</settlement>
									<country key="FR">FRANCE</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">France</forename><forename type="middle">Télécom</forename><surname>R&amp;d</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">Laboratoire Spécification &amp; Vérification ENS de Cachan &amp; CNRS</orgName>
								<orgName type="laboratory" key="lab2">UMR 8643</orgName>
								<address>
									<addrLine>61, avenue du Président Wilson</addrLine>
									<postCode>94235</postCode>
									<settlement>CACHAN Cedex</settlement>
									<country key="FR">FRANCE</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The finite variant property: How to get rid of some algebraic properties. ⋆</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F22227D98A5A709B55B9860E463D88E8</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:02+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We consider the following problem: Given a term t, a rewrite system R, a finite set of equations E ′ such that R is E ′ -convergent, compute finitely many instances of t: t1, . . . , tn such that, for every substitution σ, there is an index i and a substitution θ such that tσ↓ = E ′ tiθ (where tσ↓ is the normal form of tσ w.r.t. → E ′ \R ). The goal of this paper is to give equivalent (resp. sufficient) conditions for the finite variant property and to systematically investigate this property for equational theories, which are relevant to security protocols verification. For instance, we prove that the finite variant property holds for Abelian Groups, and a theory of modular exponentiation and does not hold for the theory ACUNh (Associativity, Commutativity, Unit, Nilpotence, homomorphism).</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>In our recent work on the verification of cryptographic protocols <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b4">5]</ref> we came twice across the following problem:</p><p>Given an AC-convergent rewrite system R, is it possible (and how) to compute from any term t a finite set of instances tσ 1 , . . . , tσ n such that</p><formula xml:id="formula_0">{tσ↓ R | σ ∈ Σ} = n i=1 {tσ i ↓ R θ | θ ∈ Σ}</formula><p>where Σ is the set of normalized substitutions and u↓ R is the AC-normal form of u w.r.t. R.</p><p>In other words, the reductions in tσ only depend on reductions in finitely many (fixed) instances of t. This is typically what we will call the finite variant property: compute in advance all possible normal forms of an instance of t, independently of that instance. In <ref type="bibr" target="#b2">[3]</ref>, this problem is solved in an ad hoc way when R is the theory of exclusive or (also called the ACUN theory), given by the rewrite rules:</p><p>x + x → 0 x + x + y → y x + 0 → x and the associativity and commutativity axioms for +. Such a property, together with the finiteness of equivalence classes modulo E ′ is claimed to be the key property for decidability results in cryptographic protocols verification, in presence of algebraic properties <ref type="bibr" target="#b1">[2]</ref>. That is why we are especially interested in studying the finite variant property for equational theories which are relevant to cryptography and which define infinite equivalence classes.</p><p>When E ′ = ∅, it is not difficult to see that the finite variant property is implied by the termination of basic narrowing. This is not so easy in general. Assume for instance that E ′ consists in the axioms of associativity and commutativity and E is defined by an AC-convergent rewrite system R. On one hand, general AC-narrowing does not terminate, even for a single rule y + x + x → y and, on the other hand, basic narrowing is incomplete for E-unification. We didn't find any reference for the incompleteness of basic AC-narrowing, hence we show it in Section 3.2. E. Viola already noticed in <ref type="bibr" target="#b18">[19]</ref> that the standard completeness proof of basic narrowing does not extend to the AC-case and proposes another narrowing strategy, introducing extensions of rules. This notion of narrowing restores completeness. However, termination is lost, even in simple cases. Even for equational theories presented by E ′ -convergent rewrite systems, basic narrowing might not terminate, while E has the finite variant property. This is the case for Abelian Groups, as we will see in Section 6.2.</p><p>The first contribution of this paper is to state a property (called boundedness) equivalent to the finite variant property in case of theories defined by convergent rewrite systems (Section 5.2). This is very similar to the existence of "narrowing bounds" in <ref type="bibr" target="#b18">[19]</ref>. We differ in two respects: first we consider only terms (not unification problems) and second, there is a quantifier switch. Roughly, in <ref type="bibr" target="#b18">[19]</ref>, the "narrowing bound" is equivalent to "there exists a normalized θ such that (tθ↓ = AC u and) all (inner) derivations starting from tθ are bounded". In our case, boundedness is equivalent to "for every normalized θ, there is a derivation from tθ to its normal form whose length is bounded".</p><p>Second, we give sufficient conditions for the boundedness property, which do not necessarily imply the termination of narrowing (Section 6.2) and prove that these conditions are met for several equational theories, which are relevant to cryptographic protocols. Our sufficient criteria is related to the notion of optimally reducing (AC)-term rewriting system introduced in <ref type="bibr" target="#b13">[14]</ref>. Indeed being an optimally reducing rewrite system is a sufficient condition to satisfy our criteria, and therefore the boundedness property. We provide however with strictly weaker sufficient conditions and therefore new applications. For instance, we show that the theory of Abelian Groups has the boundedness property, relying on the unusual orientation of the inverse rule (Section 6.2). We use proof techniques which are similar to those of <ref type="bibr" target="#b11">[12]</ref>. We also show in Section 7 that there are equational theories for which unifiability is in PTIME, while there is no convergent AC-rewrite system for the theory yielding the finite variant property.</p><p>Finally, we give some side-applications of the finite variant property: for instance the existential fragment of the theory of T (F)/= E is decidable for the theories E under study.</p><p>We start with recalling some definitions in Section 2. We state in Section 3 some results on basic and equational narrowing (for instance the incompleteness of basic AC-narrowing). Next, we list in Section 4, some examples of equational theories, which are relevant to cryptographic protocols, explaining briefly where they come from. In Section 5, we state formally a definition of the finite variant property and give a characterization (the boundedness property) when the equational theory is presented by a finite E ′ -convergent rewrite system. Then, we briefly consider the case of E ′ = ∅ in Section 6.1. In Section 6.2 we give sufficient conditions for the boundedness property and then apply them to the relevant theories listed in Section 4. In Section 7, we prove that the theory ACUNh (Associativity, Commutativity, Unit, Nilpotence, homomorphism), for which unifiability is in PTIME <ref type="bibr" target="#b12">[13]</ref>, does not have the finite variant property. In Section 8, we show other applications of the finite variant property, and we conclude in Section 9.</p><p>Missing proofs can be found in <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Terms, Substitutions, Unification</head><p>We use classical notations and terminology from <ref type="bibr" target="#b6">[7]</ref> on terms, unification, rewrite systems. T (F, X ) is the set of terms built over the finite (ranked) alphabet F of function symbols and the set of variable symbols X . T (F, ∅) is also written A substitution σ is a mapping from a finite subset of X called its domain and written dom(σ) to T (F, X ). Substitutions are extended to endomorphisms of T (F, X ) as usual. We use a postfix notation for their application.</p><formula xml:id="formula_1">T (F).</formula><p>If E is a set of equations (unordered pair of terms), = E is the least congruence on T (F, X ) such that uσ = E vσ for all pairs u = v ∈ E and substitutions σ. E is regular if, for every equation t 1 = t 2 ∈ E, vars(t 1 ) = vars(t 2 ). Two terms s, t are E-unifiable if there is a substitution σ such that sσ = E tσ. Such a substitution is called an E-unifier of s, t. We say that there is an E-unification algorithm if it is possible, for any two terms s, t, to compute a finite set σ 1 , . . . , σ n of E-unifiers of s, t, such that, for every E-unifier σ of s, t, there is an index i and a substitution θ such that, for every variable x ∈ vars(s) ∪ vars(t), xσ = E xσ i θ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Equational Rewriting</head><p>A term rewriting system (TRS) is a finite set of rewrite rules l → r where l ∈ T (F, X ) and r ∈ T (F, vars(l)). A term s ∈ T (F, X ) rewrites to t by a TRS R, denoted s → R t, if there is l → r in R, p ∈ O(s) and a substitution σ such that s| p = lσ and t = s[rσ] p . The term lσ is called a redex and we say that t rewrites to s by contracting the redex lσ. An innermost redex does not contain other redexes and in an innermost reduction sequence only innermost redexes are contracted. R = is the symmetric closure of R. * -→ R is the reflexive and transitive closure of → R . We write t ≤n --→ R u if there is a reduction sequence of at most n steps from t to u. A TRS R is terminating if there are no infinite chains t 1 → R t 2 → R . . ..</p><p>As in <ref type="bibr" target="#b6">[7]</ref>, given a set of rewrite rules R and a set of equations E, rewriting modulo E, is the relation → E\R (others have used → R,E ) defined as follows: s → E\R t iff there exists a position p ∈ O(s) such that s| p = E lσ and t = s[rσ] p for some substitution σ and rule l → r ∈ R.</p><p>A rewrite system R is E-confluent if and only if for every s, t such that</p><formula xml:id="formula_2">s = R = ∪E t, there exists s ′ , t ′ such that s * -→ E\R s ′ , t * -→ E\R t ′ , and s ′ = E t ′ . It said to be E-convergent if, in addition, = E • → R • = E is well founded. A term t is in normal form (w.r.t. → E\R ) if there is no term s such that t → E\R s. If t * -→ E\R s</formula><p>and s is in normal form then we say that s is a normal form of t. When this normal form is unique, we write s = t↓ E\R or shortly s = t↓ when E\R is clear from the context. A substitution σ is called normalized if for every x ∈ dom(σ), xσ is in normal form. We write</p><formula xml:id="formula_3">σ = E θ if ∀x ∈ dom(σ) ∪ dom(θ) xσ = E xθ.</formula><p>For an E-convergent rewrite system R and a substitution σ, we write σ↓ E\R the substitution whose domain is dom(σ) and such that x(σ↓ E\R ) = (xσ)↓ E\R for all x ∈ dom(σ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Narrowing</head><p>Given a TRS R, we say that a term t narrows to t ′ with the substitution σ, at p ∈ Ō(t), by l → r ∈ R if there exists a renaming l ′ → r ′ of l → r ∈ R such that σ is a unifier of t| p and l ′ and t ′ = (t[r] p )σ. In this case, we write t ; σ t ′ . We write t * ; σ t ′ if there exists a narrowing derivation t = t 1 ; σ1 t 2 . . .</p><formula xml:id="formula_4">; σn-1 t n = t ′ such that σ = σ 1 . . . σ n-1 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Equational Narrowing</head><p>If E is a set of equations such that an E-unification algorithm exists, we define E-narrowing as expected (σ is an E-unifier of t| p and l).</p><p>The following lemma states that every rewrite derivation ( Lemma 1 (lifting lemma). Let E be a regular presentation for which an Eunification algorithm exists. Let t be a term, θ be a normalized substitution and tθ * -→ E\R s ′ . Then there exists a term t ′ , a substitution σ and a normalized substitution θ ′ such that:</p><formula xml:id="formula_5">1. t * ; σ t ′ , 2. t ′ θ ′ = E s ′ ,</formula><p>Furthermore, the narrowing derivation t * ; σ t ′ and the rewrite sequence from tθ to s ′ use the same rewrite rules at the same positions.</p><p>We didn't find this lemma in the litterature. A similar lemma, but only for a one step derivation, and without the regularity assumption, is proved in <ref type="bibr" target="#b10">[11]</ref> for instance. The proof does not extend to an arbitrary derivation length. Actually, we do not know whether or not the lemma would still hold without the regularity assumption (which we indeed use in the proof).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Basic Narrowing</head><p>Definition 1 (basic positions). Let t 1 ; σ1 t 2 ; σ2 . . . ; σn-1 t n be a narrowing derivation. We assume that the i th step has been done at position p i with the rule l i → r i . We inductively define sets of positions B 1 ,. . . , B n as follows:</p><formula xml:id="formula_6">B 1 = Ō(t) B i+1 = B(B i , p i , r i ) for 1 ≤ i &lt; n.</formula><p>Here B(B i , p i , r i ) abbreviates (B i -{q ∈ B i |p i ≤ q}) ∪ {p i .q|q ∈ Ō(r i )}. Positions in B i are referred to as basic positions. We say that the above narrowing derivation is basic if p i ∈ B i for 1 ≤ i &lt; n.</p><p>In the same way, a rewrite sequence (w.r.t. E\R) t 1 → t 2 → . . . → t n is based on a set of positions B 1 ⊆ Ō(t 1 ) if p i ∈ B i for 1 ≤ i &lt; n with B 2 ,. . . ,B n-1 defined as above.</p><p>Note that the latter is well-defined since → E\R preserves the positions which are not in the redex.</p><p>In case of non-equational narrowing, there are several well-known results, for instance: Lemma 2 ( <ref type="bibr" target="#b7">[8]</ref>). Let t be a term and σ a normalized substitution. Every innermost derivation sequence (w.r.t R) starting from tσ is based on Ō(t).</p><p>It follows that basic narrowing is a complete unification procedure when R is a convergent rewrite system. The situation is quite different for equational narrowing. For instance in the case of AC-narrowing, Lemma 2 fails (contrary to what is suggested in <ref type="bibr" target="#b10">[11]</ref>), as shown by the following example (this has also been noticed in <ref type="bibr" target="#b18">[19]</ref>).</p><p>Example 1. Let R + = {x + 0 → x, x + x → 0, x + x + y → y}, which is known to be AC-convergent. Let t = x 1 + x 2 and σ = {x 1 → a + b, x 2 → a + b}. Consider the following innermost derivation (w.r.t. AC\R + ) starting from tσ.</p><formula xml:id="formula_7">(a + b) + (a + b) Λ -→ x+(x+y)→y b + b Λ -→ x+x→0 0</formula><p>The first rewriting step takes place at position Λ ∈ B 1 = Ō(t) with the rewriting rule x + (x + y) → y. Hence the set B 2 is empty. So the above rewrite sequence is not based on Ō(t) although it is an innermost derivation. This example can be generalized in such a way that there is a derivation from tσ whose length is arbitrarily long. However, there is also another derivation whose length is short (1 in the above example).</p><p>Not only Lemma 2 fails, but actually basic AC-narrowing is not complete, as shown by the following example.</p><p>Example 2. We consider the following rewrite system R, in which + is an ACsymbol and a, b are constants:</p><formula xml:id="formula_8">a + a → 0 b + b → 0 a + a + x → x b + b + x → x 0 + x → x R is AC-convergent. σ = {x 1 → a + b; x 2 → a + b} is a solution of the equation x 1 + x 2 = 0,</formula><p>whereas there is no narrowing derivation yielding a more general solution. Indeed, narrowing with one of the first two rules yields</p><formula xml:id="formula_9">x 1 = x 2 = a or x 1 = x 2 = b, narrowing with the last rule yields x = 0 ∧ x + 0 = x 1 + x 2 ,</formula><p>which do not subsume σ. Narrowing with one of the two other rules, for example a + a + x → x, yields x = 0 ∧ a + a + x = x 1 + x 2 , again not wanted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Some Relevant Equational Theories</head><p>We list here some algebraic theories which are relevant to cryptographic protocols and which we investigate in Section 6. We only consider theories for which equivalence classes are infinite. We use the notations which are customary in cryptographic protocol descriptions. In particular, the pairing symbol , is used in infix notation and encrypting m with k is written {m} k .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Explicit Destructors</head><p>The Axiomatized Dolev-Yao Theory (DYT) is the classical Dolev-Yao model with explicit destructors such as decryption and projections. Here is a presentation of this theory:</p><formula xml:id="formula_10">π i ( x 1 , x 2 ) = x i for i = 1, 2 d({x} y , y -1 ) = x x -1 -1 = x</formula><p>In words, projections are inverses of pairing, and decrypting with k -1 a message encrypted with a key k gives back the plain text message. Alternatively, projections and decryption symbols are not part of the alphabet and such properties are part of the intruder deduction rules. Putting such rules in the equational theory or in the intruder deduction rules seems to be a matter of taste. However, there are subtle differences between the two approaches; some protocols can be attacked if we consider explicit destructors, while they cannot otherwise (see for instance <ref type="bibr" target="#b5">[6]</ref>). This relies on the ability to apply the decryption algorithm d( , ) on a message x with a key y, even when x is not a cyphertext. Proposition 1. Orienting equations of DYT from left to right and adding d({x} y -1 , y) → x, we get a convergent rewrite system R DYT . Furthermore (basic) narrowing w.r.t. R DYT terminates.</p><p>The Key Inverse Theory (KIT) is obtained by extending DYT with the equation {d(x, y)} y -1 = x. It expresses that decryption and encryption with the inverse key are inverse of each other. This property holds when decryption is just an encryption with the inverse key, as for the cryptosystem RSA.</p><p>Proposition 2. Orienting equations of KIT from left to right and adding the rules d({x} y -1 , y) → x and {d(x, y -1 )} y → x, we get a convergent rewrite system R KIT . Furthermore (basic) narrowing w.r.t. R KIT terminates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Exclusive Or Theory (ACUN )</head><p>This theory has been given in introduction. It is mandatory when protocols rely on exclusive or ( <ref type="bibr" target="#b14">[15]</ref> vs <ref type="bibr" target="#b16">[17]</ref>). As recalled in Example 1, the rewrite system R + for this theory is AC-convergent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Abelian Groups Theory (AG)</head><p>The Abelian Groups theory is defined by the following set of equations:</p><formula xml:id="formula_11">x * (y * z) = (x * y) * z x * x -1 = 1 x * y = y * x x * 1 = x Proposition 3.</formula><p>Adding the consequences:</p><formula xml:id="formula_12">1 -1 = 1, x -1 -1 = x, (x * y) -1 =</formula><p>x -1 * y -1 , x * (y * x -1 ) = y and orienting the rules from left to right, we get R * , an AC-convergent rewrite system for AG.</p><p>Note that, AC-narrowing (even basic) is not terminating w.r.t. R * , as we have an infinite derivation starting from x -1 by using repeatedly (x * y) -1 → x -1 * y -1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Diffie-Hellman Theory (DH)</head><p>This theory contains the axioms of the Abelian Groups theory for the symbol * and two others equations concerning the modular exponentiation's symbol:</p><formula xml:id="formula_13">exp(x, 1) = x exp(exp(x, y), z) = exp(x, y * z)</formula><p>This theory takes into account simple properties of product and exponentiation, which are widely used in protocol constructions. Exponentiation has more properties, which should be considered to capture to whole power of an attacker. However, we only consider the two above axioms since, as shown in <ref type="bibr" target="#b9">[10]</ref>, many extensions yield undecidable unification problems, hence undecidability of confidentiality, even for a bounded number of sessions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Combinations</head><p>The theory ACUNh consists of the axioms of ACUN for + and the equation h(x + y) = h(x) + h(y). This theory is used in protocols such as the TMN protocol (h is used to model an encryption with the public-key of the server S).</p><p>The equation h(x + y) = h(x) + h(y) can be oriented in both directions, yielding two AC-convergent rewrite systems, which are displayed in Figure <ref type="figure" target="#fig_0">1</ref>: depending on the orientation, we get either 5 rules (R 1 ) or 6 rules (R 2 ). </p><formula xml:id="formula_14">x + 0 → x R1 : h(x + y) → h(x) + h(y) x + x → 0 x + x + y → y R2 : h(x) + h(y) → h(x + y) h(0) → 0 h(x) + h(y) + z → h(x + y) + z</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">The Finite Variant Property</head><p>We come to the central notion of our paper: a property, which allows to reduce equational theories to some (supposedly simpler) other theory. Let us first recall the definitions given in introduction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Definition and a First Characterization</head><p>We assume given a well founded ordering ≥ on terms, which is total on ground terms. Given a theory E and a ground term t, we write t↓ E the smallest term in the equivalence class of t. It will serve as a representative of the class.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2 (E-variants).</head><p>Given two sets of equations E, E ′ , t ′ is an Evariant of a term t if there is a substitution θ such that tθ = E t ′ . A complete set of E-variants modulo E ′ of t (w.r.t. ≥) is a set S of E-variants of t such that, for every substitution σ, there is a term t ′ ∈ S and a substitution θ such that tσ↓ E = E ′ t ′ θ.</p><p>Example 3. Assume E = ACUN and E ′ = AC. Consider the term x + f (x + y).</p><p>A complete set of E-variants modulo AC is given by the single variable z. Indeed,</p><formula xml:id="formula_15">(x+f (x+y)){x → f (z)+z; y → f (z)} = AC f (z)+z+f (f (z)+z+f (z)) = ACUN z</formula><p>hence z is a variant of x + f (x + y). This is a complete set since, for every normalized substitution σ, (x + f (x + y))σ↓ = AC zθ for some θ.</p><p>Definition 3 (finite variant property). The pair (E, E ′ ) has the finite variant property (w.r.t. ≥) if for every term t, we can effectively compute a finite complete set of E-variants modulo E ′ .</p><p>Sometimes, we will simply say variants and complete set of variants when E and E ′ are clear from the context. Now, we need a (uniform) way to compute the E-variants of a term. That is why we will restrict our attention to theories E for which there exists R and E ′ such that R is an E ′ -convergent system for E. Then the ordering ≥ will be chosen in such a way that → E ′ \R ⊆ ≥. To summarize now, our aim is, given a theory E, to find a splitting of E in (R, E ′ ) and an ordering ≥ such that:</p><p>1. R is an E ′ -convergent system for E and → E ′ \R ⊆ ≥ is a decidable relation, 2. for every term t, there is a finite set of variants t 1 , . . . , t n , effectively computable, such that, for every substitution σ, there is an index i and a substitution θ such that tσ↓ E ′ \R = E ′ t i θ.</p><p>We will simply say that (R, E ′ ) is a decomposition of E satisfying the finite variant property if the two above properties are satisfied. There are several wellknown techniques to obtain presentations satisfying the first condition. Hence, we focus on the second condition.</p><p>The following lemma shows that, if (R, E ′ ) has the finite variant property, we may not only compute in advance some instances t i of t such that tσ↓ is always an instance of some t i , but actually compute in advance substitutions θ i such that t i = tθ i ↓ is a complete set of variants and every normalized substitution can be factorized through θ i .</p><p>Lemma 3. A decomposition (R, E ′ ) has the finite variant property iff For every term t, there is a finite set of substitutions Σ(t) such that</p><formula xml:id="formula_16">∀σ ∃θ ∈ Σ(t), ∃τ. σ↓ = E ′ θτ ∧ (tσ)↓ = E ′ (tθ)↓τ</formula><p>Proof sketch: The if part is straightforward. Conversely, let T be the term t, x 0 , . . . , x n where {x 0 , . . . , x n } = vars(t) and , is a free binary function symbol. We apply the hypothesis to T . This yields a definition of Σ(t). 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">The Boundedness Condition</head><p>In what follows we assume we are given a theory E for which there exists R and E ′ such that R is an E ′ -convergent system for E.</p><p>Definition 4 (boundedness property). (R, E ′ ) satisfies the boundedness property if for every term t, there exists an integer n such that for every normalized substitution σ, the normal form of tσ is reachable by a derivation whose length can be bounded by n (thus independently of σ):</p><formula xml:id="formula_17">∀t, ∃n, ∀σ. t(σ↓) ≤n --→ E ′ \R (tσ)↓</formula><p>The following theorem shows the relationships between the boundedness condition and the finite variant property.</p><p>Theorem 1. Let E ′ be a regular presentation for which an E ′ -unification algorithm exists. If moreover (R, E ′ ) satisfies the boundedness property then (R, E ′ ) is a decomposition of E satisfying the finite variant property. Conversely, if (R, E ′ ) satisfies the finite variant property, then it satisfies the boundedness property.</p><p>Proof sketch: The first implication is actually similar to a result in <ref type="bibr" target="#b18">[19]</ref>: we use narrowing, however bounding the length of derivation. For the converse, let t be any term. We first apply Lemma 3. Then we let n be such that tθ ≤n --→ E ′ \R (tθ)↓ for every θ ∈ Σ(t). Then we prove that, for every normalized substitution σ,</p><formula xml:id="formula_18">tσ ≤n --→ E ′ \R (tσ) ↓.</formula><p>2 It must be emphasized that the proof of this theorem provides us with an effective way of computing the variants: simply narrow t at most n times, where n is given by the boundedness property.</p><p>6 Proving Boundedness 6.1 The case E ′ = ∅ Thanks to Lemma 2, the narrowing derivation associated by Lemma 1 to an innermost derivation is basic. Moreover, since R is a convergent system, we can always choose an innermost derivation. Hence we have the following proposition: Proposition 5. If basic narrowing terminates for R then (R, ∅) is a decomposition of E satisfying the boundedness property.</p><p>This proposition allows us to conclude that the decomposition (R DYT , ∅) (resp. (R KIT , ∅)) of DYT (resp. KIT ) presented in Section 4.1 satisfies the boundedness property and, by Theorem 1 we conclude that these decompositions satisfy the finite variant property.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Non-Orientable Axioms</head><p>Because of non-orientable equations (typically AC), we need to consider equational rewriting. Unfortunately, we cannot extend directly the results of the previous section, as shown by Example 1. Anyway, for Abelian Groups and Diffie-Hellman theories, independently of the orientation of x -1 * y -1 = (x * y) -1 , AC-narrowing (even basic) does not terminate. That is why we need to develop refined criteria, which will be satisfied by these two theories, yielding a finite variant property.</p><p>Let us first give a simple decidable sufficient condition for boundedness.</p><formula xml:id="formula_19">Lemma 4. If (R, E ′ ) is a decomposition of E which satisfies: ∀f ∈ F ∃c ∀t 1 , . . . t n ∈ T (F, X ). f (t 1 ↓, . . . , t n ↓) ≤c --→ E ′ \R f (t 1 , . . . , t n )↓.</formula><p>Then (R, E ′ ) satisfies the boundedness property.</p><p>Note that being an optimally reducing rewrite systems (see <ref type="bibr" target="#b13">[14]</ref>) is a sufficient condition for the boundedness property. Indeed such systems actually satisfy the conditions of Lemma 4, with a constant c = 1. However, we are going to need (for instance for Abelian Groups) to apply Lemma 4 with constants larger than 1. Furthermore, even if we can apply Lemma 4, with c = 1, the rewrite system might not be optimally reducing, simply because there are extra rules not satisfying the required condition. Finally, in <ref type="bibr" target="#b13">[14]</ref>, the authors assume that the root symbol of any left hand side is not associative-commutative, which we do not. So, our condition, which is strictly weaker, provides us with new applications.</p><p>We show successively that Lemma 4 can be applied to the theories of exclusive or, Abelian Groups and Diffie-Hellman. Lemma 5. Let t 1 and t 2 be irreducible terms (w.r.t. AC\R + ), t 1 + t 2 can be reduced to its normal form, using at most 1 reduction step.</p><p>A similar lemma does not hold for the Abelian Groups decomposition (R * , AC) of Section 4.3. Even worse, this decomposition does not satisfy the boundedness property: consider the term t = x -1 and the substitution σ = {x → a 0 * . . . * a n }, tσ requires at least n reduction steps before we reach its normal form.</p><p>However, an unusual orientation of some rules yields a presentation for which the finite variant property holds. This orientation has first been proposed by Lankford (see <ref type="bibr" target="#b8">[9]</ref>). We get the following rewrite system:</p><formula xml:id="formula_20">R ′ * =            x * 1 → x x -1 -1 → x 1 -1 → 1 (x -1 * y) -1 → x * y -1 x * x -1 → 1 x * (x -1 * y) → y x -1 * y -1 → (x * y) -1 x -1 * (y -1 * z) → (x * y) -1 * z (x * y) -1 * y → x -1 (x * y) -1 * (y * z) → x -1 * z</formula><p>This rewrite system is an AC-convergent system for AG <ref type="bibr" target="#b8">[9]</ref> and even though basic narrowing does not terminate, we can show that: Lemma 6. Let t 1 and t 2 be irreducible terms (w.r.t. AC\R ′ * ), t -1</p><formula xml:id="formula_21">1</formula><p>and t 1 * t 2 can be reduced to their normal form, using at most 1 (resp. 2) reduction step. Now consider the Diffie-Hellman theory. We orient the two additional equations and get the following rewrite system:</p><formula xml:id="formula_22">R DH = R ′ * ∪</formula><p>exp(x, 1) → x exp(exp(x, y), z) → exp(x, y * z) Proposition 6. R DH is an AC-convergent rewrite system for DH. Lemma 7. Let t 1 and t 2 be irreducible terms (w.r.t. AC\R DH ), t -1 1 , t 1 * t 2 and exp(t 1 , t 2 ) can be reduced to their normal form, using at most 1 (resp. 2 and 4) reduction step.</p><p>We illustrate the worst case for which we need the 4 reduction steps to obtain the normal form. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ACUNh does not Satisfy the Finite Variant Property</head><p>We prove here that the theory ACUNh, introduced in Section 4.5 does not have the finite variant property.</p><p>Let us recall that, depending on the orientation of h(x + y) = h(x) + h(y), we get two AC-convergent rewrite systems displayed in Figure <ref type="figure" target="#fig_0">1</ref>. However, none of them yields an appropriate decomposition: Lemma 8. The decompositions (R 1 , AC) and (R 2 , AC) of the theory ACUNh do not satisfy the boundedness property.</p><p>Proof : First, we consider the case of (R 1 , AC), and we show the result by contradiction. Let t = h(x) and n be such that ∀σ. h(x)(σ↓) ≤n --→ E ′ \R (h(x)σ)↓. We consider the substitution σ = {x → a + h(a) + . . . + h n+1 (a)}. It is easy to see that we need n + 1 rewriting steps (with the rule h(x + y) → h(x) + h(y)) to rewrite h(x)σ to its normal form h(a) + . . . + h n+2 (n). Hence contradiction.</p><p>The result for (R 2 , AC) can be obtained in a similar way with the term t = x + y and the substitution σ = {x → h n (a); y → h n (b)}.</p><p>2</p><p>There are not many other choices than R 1 and R 2 and we get the following:</p><p>Theorem 2. There is no decomposition (R, AC) of ACUNh which satisfies the boundedness property and such that the right members of the rules in R are irreducible (w.r.t. AC\R).</p><p>The idea is to prove first that, for any AC-convergent rewrite system R, either The property required on the right members of the rules of R seems to be unnecessary. This assumption has been taken to make easier the proof.</p><formula xml:id="formula_23">-→ AC\R1 ⊆ * -→ AC\R or -→ AC\R2 ⊆ * -→ AC\R . Next,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Other Applications of the Finite Variant Property</head><p>Assume that (E, E ′ ) has the finite variant property. This can be used to reduce disunification problems modulo E to disunification problems modulo E ′ : Theorem 3. The Σ 1 fragment of the first-order theory of T (F)/= E is decidable whenever the Σ 1 fragment of the first-order theory of T (F)/= E ′ is decidable.</p><p>To prove this, simply compute the variants φ 1 , . . . , φ n of the formula φ. (In such a computation, logical connectives are seen as free symbols). For every substitution σ, there is an index i and a substitution θ such that φσ↓ E = E ′ φ i θ. In particular, φ is solvable modulo E iff one of the φ i is solvable modulo E ′ .</p><p>Then, since the Σ 1 fragment of the theory of T (F)/= AC is decidable <ref type="bibr" target="#b0">[1]</ref>, we get the following new results: Corollary 3. The Σ 1 fragments of the first-order theories of quotient term algebras T (F)/= ACUN , T (F)/= AG , T (F)/= DH are decidable.</p><p>Such results cannot be derived from the decidability of unification. Even in the dismatching case this is not so trivial to get a decision procedure. Consider for instance x + f (x + y) = a in the theory ACUN. A most general solution of the matching problem is x = f (z) + a ∧ y = a + z + f (z). Complementing the solutions of the matching equation involves quantifier elimination : ∀z.x = a + f (z) ∨ y = a + z + f (z).</p><p>In the case of Abelian Groups, it is actually known that the first-order theory of finitely generated Abelian Groups is decidable <ref type="bibr" target="#b15">[16]</ref>. However, adding a binary free function symbol, it might become undecidable. Actually, the status of the first order theories of above-mentioned quotient algebras is unknown. On the undecidability side, the method described in <ref type="bibr" target="#b17">[18]</ref> can not be applied in a straightforward way. On the decidability side, the finite variant property does not help since the first-order theory of T (F)/= AC is undecidable <ref type="bibr" target="#b17">[18]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Conclusion</head><p>We believe that the finite variant property is important in many applications. It allows us to reduce problems modulo an equational theory E to problems modulo an equational theory E ′ ⊆ E. It is often useless for solving equations; for instance, unification modulo ACUN is simpler than unification modulo AC. However, for other constraint solving problems such as intruder derivability constraints <ref type="bibr" target="#b4">[5]</ref> or disunification problems mentioned in the previous section, this property can be crucial.</p><p>We have proposed some criteria for the finite variant property, which have been applied to several equational theories. The techniques are inspired by narrowing, though, as in <ref type="bibr" target="#b18">[19]</ref>, we do not rely directly on narrowing sequences, but rather on innermost reductions of instances.</p><p>An open question is to design other criteria (both for the finite variant property or its negation), which would not assume an E ′ -convergent rewrite system for E. For instance, does (AC, ∅) have the finite variant property ? We are tempted to answer no, but the proof is challenging.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The Rewrite Systems R1 and R2 for the ACUNh Theory.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Example 4 .</head><label>4</label><figDesc>Let t 1 = a * (b * c) -1 and t 2 = a -1 * b. We have the following derivation from t 1 * t 2 to its normal form c -1 . (a * (b * c) -1 ) * (a -1 * b) → AC\R ′ * ((b * c) * a) -1 * (a * b) → AC\R ′ * c -1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Example 5 . 7 : 1 .</head><label>571</label><figDesc>Let t 1 = exp(e, a -1 * b) and t 2 = b -1 * a, t = exp(t 1 , t 2 ) can be reduced to its normal form (w.r.t. AC\R DH ) by a derivation using 4 reduction steps. Indeed, we have: exp(exp(e, a -1 * b), b -1 * a) → exp(e, (a -1 * b) * (b -1 * a)) → exp(e, (a * b) -1 * (a * b)) → exp(e, 1) → e To sum up, as consequences of Theorem 1, Lemmas 4, 5, 6 and Corollary The decompositions (R + , AC), (R ′ * , AC) and (R DH , AC) have the finite variant property.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>AC\R2 and we conclude by Lemma 8.Corollary 2. There is no decomposition (R, AC) of ACUNh which satisfies the finite variant property and such that the right members of the rules in R are irreducible (w.r.t. AC\R).</figDesc><table /><note><p><p>we prove that there is an inte-</p>ger n such that -→ AC\R ⊆ ≤n --→ AC\R1 or -→ AC\R ⊆ ≤n --→</p></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>We would like to acknowledge P. Narendran and the anonymous referees who gave relevant comments which helped in improving the paper.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>⋆ This work has been partly supported by the RNTL project PROUV É 03V360 and the ACI-SI Rossignol.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Complete axiomatizations of some quotient term algebras</title>
		<author>
			<persName><forename type="first">H</forename><surname>Comon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="167" to="191" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Intruder theories (ongoing work)</title>
		<author>
			<persName><forename type="first">H</forename><surname>Comon-Lundh</surname></persName>
		</author>
		<ptr target="http://www.lsv.ens-cachan.fr/comon/biblio.html" />
	</analytic>
	<monogr>
		<title level="m">In 7th International Conference on Foundations of Software Science and Computation Structures (FoSSaCS&apos;04)</title>
		<meeting><address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
	<note>Invited talk, slides available</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">New decidability results for fragments of firstorder logic and application to cryptographic protocols</title>
		<author>
			<persName><forename type="first">H</forename><surname>Comon-Lundh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Cortier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 14th International Conference on Rewriting Techniques and Applications (RTA&apos;03), volume 2706 of LNCS</title>
		<meeting>14th International Conference on Rewriting Techniques and Applications (RTA&apos;03), volume 2706 of LNCS<address><addrLine>Valencia, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="148" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">The finite variant property: How to get rid of some algebraic properties</title>
		<author>
			<persName><forename type="first">H</forename><surname>Comon-Lundh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Delaune</surname></persName>
		</author>
		<idno>LSV-04-17</idno>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Laboratoire Spécification et Vérification</publisher>
			<pubPlace>ENS Cachan, France</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Research Report</note>
	<note>21 pages</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Intruder deductions, constraint solving and insecurity decision in presence of exclusive or</title>
		<author>
			<persName><forename type="first">H</forename><surname>Comon-Lundh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Shmatikov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 18th Annual IEEE Symposium on Logic in Computer Science (LICS&apos;03)</title>
		<meeting>of 18th Annual IEEE Symposium on Logic in Computer Science (LICS&apos;03)<address><addrLine>Ottawa, Canada</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Comp. Soc. Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="271" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A decision procedure for the verification of security protocols with explicit destructors</title>
		<author>
			<persName><forename type="first">S</forename><surname>Delaune</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jacquemard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th ACM Conference on Computer and Communications Security (CCS&apos;04)</title>
		<meeting>11th ACM Conference on Computer and Communications Security (CCS&apos;04)<address><addrLine>Washington, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="278" to="287" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Rewrite systems</title>
		<author>
			<persName><forename type="first">N</forename><surname>Dershowitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Jouannaud</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Theoretical Computer Science</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Van Leeuwen</surname></persName>
		</editor>
		<imprint>
			<publisher>Elsevier and MIT Press</publisher>
			<date type="published" when="1990">1990</date>
			<biblScope unit="volume">B</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Canonical forms and unification</title>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Hullot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Conference on Automated Deduction, (CADE&apos;80)</title>
		<meeting>5th Conference on Automated Deduction, (CADE&apos;80)<address><addrLine>Les Arcs, France</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1980">1980</date>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="page" from="318" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">A catalogue of canonical term rewriting systems</title>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Hullot</surname></persName>
		</author>
		<idno>CSL-114</idno>
		<imprint>
			<date type="published" when="1980">1980</date>
			<pubPlace>SRI, CA, USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An E-unification algorithm for analyzing protocols that use modular exponentiation</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kapur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Narendran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 14th International Conference on Rewriting Techniques and Applications (RTA&apos;03), volume 2706 of LNCS</title>
		<meeting>14th International Conference on Rewriting Techniques and Applications (RTA&apos;03), volume 2706 of LNCS<address><addrLine>Valencia, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="165" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Méthodes et Outils de Conception Systématique d&apos;Algorithmes d&apos;Unification dans les Théories Équationnelles</title>
		<author>
			<persName><forename type="first">C</forename><surname>Kirchner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
		</imprint>
		<respStmt>
			<orgName>Université de Nancy I</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A unification algorithm for the group Diffie-Hellman protocol</title>
		<author>
			<persName><forename type="first">C</forename><surname>Meadows</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Narendran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Workshop on Issues in the Theory of Security (WITS&apos;02)</title>
		<meeting>of the Workshop on Issues in the Theory of Security (WITS&apos;02)<address><addrLine>Portland, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Unification and matching modulo nilpotence</title>
		<author>
			<persName><forename type="first">P</forename><surname>Narendran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wolfram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 13th International Conference on Automated Deduction, (CADE&apos;96)</title>
		<meeting>of the 13th International Conference on Automated Deduction, (CADE&apos;96)<address><addrLine>New Brunswick, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">1104</biblScope>
			<biblScope unit="page" from="261" to="274" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">On the unification problem for cartesian closed categories</title>
		<author>
			<persName><forename type="first">P</forename><surname>Narendran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Pfenning</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Statman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Symbolic Logic</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="636" to="647" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Mechanized proofs for a recursive authentication protocol</title>
		<author>
			<persName><forename type="first">L</forename><surname>Paulson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Computer Security Foundations Workshop (CSFW&apos;97)</title>
		<meeting>10th Computer Security Foundations Workshop (CSFW&apos;97)<address><addrLine>Rockport, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Comp. Soc. Press</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="84" to="95" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">On the complexity of the theories of weak direct products (preliminary report)</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rackoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 6th Annual ACM Symposium on Theory of Computing</title>
		<meeting>of the 6th Annual ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1974">1974</date>
			<biblScope unit="page" from="149" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An attack on a recursive authentication protocol: A cautionary tale</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Y A</forename><surname>Ryan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Schneider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="7" to="10" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A new method for undecidability proofs of first order theories</title>
		<author>
			<persName><forename type="first">R</forename><surname>Treinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Symbolic Computation</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="437" to="457" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">E-unifiability via narrowing</title>
		<author>
			<persName><forename type="first">E</forename><surname>Viola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 7th Italian Conference on Theoretical Computer Science, (ICTCS&apos;01)</title>
		<meeting>of the 7th Italian Conference on Theoretical Computer Science, (ICTCS&apos;01)<address><addrLine>Torino, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2202</biblScope>
			<biblScope unit="page" from="426" to="438" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
