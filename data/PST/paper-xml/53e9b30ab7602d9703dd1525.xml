<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Reciprocal Collision Avoidance with Acceleration-Velocity Obstacles Jur van den Berg</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jamie</forename><surname>Snape</surname></persName>
							<email>snape@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Stephen</forename><forename type="middle">J</forename><surname>Guy</surname></persName>
							<email>sjguy@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dinesh</forename><surname>Manocha</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Reciprocal Collision Avoidance with Acceleration-Velocity Obstacles Jur van den Berg</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">DB835E652E490DC4D31D18D649164590</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T06:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We present an approach for collision avoidance for mobile robots that takes into account acceleration constraints. We discuss both the case of navigating a single robot among moving obstacles, and the case of multiple robots reciprocally avoiding collisions with each other while navigating a common workspace. Inspired by the concept of velocity obstacles [3], we introduce the acceleration-velocity obstacle (AVO) to let a robot avoid collisions with moving obstacles while obeying acceleration constraints. AVO characterizes the set of new velocities the robot can safely reach and adopt using proportional control of the acceleration. We extend this concept to reciprocal collision avoidance for multi-robot settings, by letting each robot take half of the responsibility of avoiding pairwise collisions. Our formulation guarantees collision-free navigation even as the robots act independently and simultaneously, without coordination. Our approach is designed for holonomic robots, but can also be applied to kinematically constrained non-holonomic robots such as cars. We have implemented our approach, and we show simulation results in challenging environments with large numbers of robots and obstacles.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Collision avoidance is a fundamental problem in robotics. The problem can generally be defined in the context of an autonomous mobile robot navigating in an environment with obstacles and/or other moving entities, where the robot employs a continuous cycle of sensing and acting. In each time step, an action for the robot must be computed based on local observations of the environment, such that the robot stays free of collisions with the moving obstacles and the other robots, and progresses towards a goal.</p><p>Many works in robotics have addressed the problem of collision avoidance with moving obstacles <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b13">[14]</ref>. Most approaches predict where the moving obstacles might be in the future by extrapolating their observed velocities, and let the robot avoid collisions accordingly. Velocity obstacles <ref type="bibr" target="#b2">[3]</ref> formalize this principle by characterizing the set of velocities for the robot that result in a collision at some future time. Continually selecting a velocity outside of this set will then guarantee collision-free navigation for the robot. A major shortcoming, however, is that it requires the robot to change its velocity instantaneously, which is not possible in many cases due to constraints on the acceleration of the robot.</p><p>In this paper, we introduce the concept of accelerationvelocity obstacles (AVO) for guaranteed collision-avoidance with moving obstacles that accounts for constraints on the acceleration of the robot. AVO lets the robot accelerate towards a new velocity using proportional control, i.e. the applied acceleration is continually proportional to the difference between the new velocity and the current velocity. If the robot would collide at any point in time along its trajectory, the new velocity is considered forbidden. Continually selecting a new velocity outside the forbidden set guarantees collisionfree motions that obey the acceleration constraints.</p><p>Our work is motivated by robots moving at high speeds, such as unmanned aerial vehicles, airplanes, car-like robots, etc., for which acceleration constraints are particularly significant. We present our approach for a simplified robot model: each robot is a disc moving in a two-dimensional workspace, able to perfectly infer the shape, position and velocity of obstacles and other robots in the environment, and capable of accelerating in any direction up to a maximum. This model applies directly to holonomic robots, and we will show that it applies to a large class of non-holonomic robots with kinodynamic constraints (e.g. cars, airplanes, differential drives), as long as their speed is nonzero.</p><p>Approaches that assume that obstacles are non-responding and moving at a constant velocity are insufficient for multirobot settings, where the robot encounters other robots that also make decisions based on their surroundings: Considering them as moving obstacles overlooks the fact that they react to the robot in the same way as the robot reacts to them, and inherently causes undesirable oscillations in the motion of the robots <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b17">[18]</ref>. We present a reciprocal collision avoidance approach based on acceleration-velocity obstacles that specifically accounts for the reactive nature of the other robots. Each robot independently and simultaneously computes its actions, without coordination, by reducing the problem to a 2-D linear program.</p><p>We experimented with our approach on several simulation scenarios containing up to a thousand robots. As each robot navigates independently, we can fully parallellize the computation of the actions for each robot and report fast running times. Furthermore, our experiments show that our approach achieves convincing motions that are smooth, collision-free, and obey the acceleration constraints (see Fig. <ref type="figure" target="#fig_0">1</ref>).</p><p>The remainder of this paper is organized as follows.</p><p>In Section II we discuss background and related work. In Section III we introduce our concept of acceleration-velocity obstacles for navigation of a single robot among moving obstacles, and in Section IV we extend this concept to reciprocal collision avoidance for multiple robots. We show how our concept is applied to kinematically constrained robots in Section V. We present simulation results in Section VI, and conclude in Section VII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BACKGROUND AND RELATED WORK</head><p>Our work builds mainly on the concept of velocity obstacles <ref type="bibr" target="#b2">[3]</ref>, which has been employed successfully in practice for collision avoidance with moving obstacles <ref type="bibr" target="#b14">[15]</ref>. However, it requires the robot to change its velocity instantaneously, which may not be possible for physical robots. Many attempts have been made to incorporate acceleration constraints into the formalism. One approach is to limit the set of valid velocities to those that can be reached within the next time step of the sensing-acting cycle <ref type="bibr" target="#b2">[3]</ref>. However, as the time step can be arbitrarily small, only a small set of valid velocities is available, which diminishes look-ahead. A better strategy, therefore, is to clamp down a selected velocity to one that obeys the acceleration constraint <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b9">[10]</ref>. However, collision avoidance may then no longer be guaranteed.</p><p>A few variants of velocity obstacles have been proposed that address acceleration constraints specifically. The works of <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b6">[7]</ref> are related to inevitable collision states <ref type="bibr" target="#b3">[4]</ref>, and define velocities as forbidden if no escape maneuver exists given the acceleration constraints to avoid collisions. However, this does not imply that a velocity that is not forbidden is guaranteed to be collision-free, as what may be a safe escape maneuver with respect to one obstacle may be a collision course with respect to another obstacle. In <ref type="bibr" target="#b12">[13]</ref>, velocity obstacles are defined for the special case of a car-like robot that controls its speed and turning radius, and incorporates second-order constraints on the speed.</p><p>Other related concepts include non-linear velocity obstacles <ref type="bibr" target="#b15">[16]</ref> and generalized velocity obstacles <ref type="bibr" target="#b19">[20]</ref>. The former accounts for higher-order motion of obstacles, while the latter defines "control input obstacles" for kinematically constrained robots. The probabilistic velocity obstacle of <ref type="bibr" target="#b5">[6]</ref> addresses uncertainty in the future trajectory of obstacles.</p><p>Existing approaches that address reciprocal collision avoidance include <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b17">[18]</ref>. The approach of <ref type="bibr" target="#b18">[19]</ref> guarantees collision avoidance for multiple robots. However, none of these approaches deal with acceleration constraints. We will combine the approach of <ref type="bibr" target="#b18">[19]</ref> with accelerationvelocity obstacles to guarantee collision-free navigation of multiple robots subject to acceleration constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Notation</head><p>We will use the following notational convention in this paper: Scalars x are set in lower case italics, vectors x in lower case bold, and sets (of vectors) X in upper case italics. Further, we denote the measure of a set X by |X|, the length of a vector x by x , and use the following notation for an open disc of radius r centered at p, scalar-set multiplication, and the Minkowski sum of two sets, respectively:</p><formula xml:id="formula_0">D(p, r) = {q | q -p &lt; r} (1) aX = {ax | x ∈ X} (2) X ⊕ Y = {x + y | x ∈ X, y ∈ Y }.<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. COLLISION AVOIDANCE WITH MOVING OBSTACLES</head><p>In this section we discuss how a robot A subject to acceleration constraint a A &lt; a max A can avoid collisions with moving obstacles. We will first review the existing concept of velocity obstacles <ref type="bibr" target="#b2">[3]</ref> (Section III-A), and then introduce our new concept of acceleration-velocity obstacles (Section III-B). In Section III-C we discuss how accelerationvelocity obstacles are used to navigate a robot among multiple moving obstacles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Velocity Obstacles</head><p>Let A be a robot and B a moving obstacle with current positions p A and p B , and radii r A and r B , respectively. The velocity obstacle <ref type="bibr" target="#b2">[3]</ref> can be used to select a velocity for A such that collisions with B are avoided, assuming that this velocity can be adopted instantaneously.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 1</head><p>The velocity obstacle V O τ AB (read: the velocity obstacle for A induced by B for time horizon τ ) is the set of all relative velocities v AB = v Av B of A with respect to B that will result in a collision between A and B before time τ . More formally, let p AB = p Ap B be the current relative position of A with respect to B and let r AB = r A + r B be the sum of their radii, then A and B will collide at time t if (see Fig. <ref type="figure" target="#fig_1">2(b)</ref>):</p><formula xml:id="formula_1">p AB + v AB t &lt; r AB .<label>(4)</label></formula><p>Dividing both sides by t, and rearranging gives:</p><formula xml:id="formula_2">v AB -(- p AB t ) &lt; r AB t ,<label>(5)</label></formula><p>which defines the disc of all relative velocities v AB that let A and B collide at time t (see Eq. ( <ref type="formula">1</ref>)). As such, we can define the velocity obstacle V O τ AB as a union of discs (see Fig. <ref type="figure" target="#fig_1">2(c</ref>)):</p><formula xml:id="formula_3">V O τ AB = 0&lt;t≤τ D(- p AB t , r AB t ).<label>(6)</label></formula><p>Geometrically, it can be interpreted as a truncated cone with its apex at the origin (in velocity space) and its sides tangent to the Minkowski sum B ⊕-A of the obstacle and the robot. The definition of the velocity obstacle implies that if obstacle B is moving at a constant velocity v B , and robot A chooses its velocity v A outside V O τ AB ⊕ {v B } (i.e. the velocity obstacle translated by v B ), robot A is guaranteed not to collide with B before time τ if A and B maintain their velocities for at least τ time. Acceleration constraints may prohibit A from instantaneously adopting velocity v A , however, in which case collision avoidance is not guaranteed.</p><p>To overcome this issue, we may let the robot choose an acceleration rather than a velocity. In a similar way as velocity obstacles, we can define the acceleration obstacle AO τ AB as the set of all relative accelerations that will result in a collision before time τ . In contrast to velocity obstacles, however, acceleration obstacles are not suitable for navigation in most practical cases. While it is reasonable to assume that the obstacle and robot maintain their velocities for a while (at least approximately), accelerations tend to change frequently and it is unreasonable to assume that either robot A or obstacle B will maintain an observed acceleration for an extended amount of time τ . The value of τ signifies the look-ahead, and reducing it would lead to unsafe navigation. To address this flaw, we will define acceleration-velocity obstacles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Acceleration-Velocity Obstacles</head><p>Instead of letting the robot A choose an acceleration, we want to let the robot choose a velocity, as is the case with velocity obstacles. The acceleration constraint a A &lt; a max</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A may prohibit adopting a new velocity v ′</head><p>A instantaneously, but we can apply valid accelerations to arrive at this new velocity at some point in time. To ensure that the robot smoothly arrives at its new velocity, we use proportional control of the acceleration. That is, the acceleration a A (t) applied at time t is proportional to the difference between the new velocity v ′</p><p>A and the velocity v A (t) at time t:</p><formula xml:id="formula_4">a A (t) = vA (t) = v ′ A -v A (t) δ ,<label>(7)</label></formula><p>where δ is a control parameter whose dimension is time. Solving this differential equation for v A (t) gives:</p><formula xml:id="formula_5">v A (t) = v ′ A -e -t/δ (v ′ A -v A ),<label>(8)</label></formula><p>where</p><formula xml:id="formula_6">v A = v A (0) is the current velocity of A. Integrating v A (t)</formula><p>gives the trajectory p A (t) of the robot:</p><formula xml:id="formula_7">p A (t) = p A + tv ′ A + δ(e -t/δ -1)(v ′ A -v A ),<label>(9)</label></formula><p>where p A = p A (0) is the current position of A.</p><p>If an obstacle B follows a similar trajectory p B (t) to arrive at a new velocity v ′ B with the same control parameter δ, then the relative position p AB (t) = p A (t)p B (t), the relative velocity v AB (t) = v A (t)v B (t), and the relative acceleration a AB (t) = a A (t)-a B (t) of robot A and obstacle B are also described by Equations ( <ref type="formula" target="#formula_7">9</ref>), <ref type="bibr" target="#b7">(8)</ref>, and ( <ref type="formula" target="#formula_4">7</ref>), respectively, where</p><formula xml:id="formula_8">p AB = p A -p B is the current relative position, v AB = v A -v B is the current relative velocity, and v ′ AB = v ′ A -v ′ B is the new relative velocity.</formula><p>It is in terms of these that we define the acceleration-velocity obstacle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2</head><p>The acceleration-velocity obstacle AV O δ,τ AB (read: the acceleration-velocity obstacle for A induced by B for time horizon τ and control parameter δ) is the set of all new relative velocities v ′ AB of A with respect to B that will result in a collision between A and B before time τ , where proportional control of the acceleration (with parameter δ) is used by both A and B to reach the new relative velocity v ′ AB from the current relative velocity v AB . More formally, let r AB = r A +r B be the combined radius of A and B, then A and B collide at time t if p AB (t) &lt; r AB (see Fig. <ref type="figure" target="#fig_2">3(b)</ref>). By Eq. ( <ref type="formula" target="#formula_7">9</ref>), that is:</p><formula xml:id="formula_9">p AB + tv ′ AB + δ(e -t δ -1)(v ′ AB -v AB ) &lt; r AB .<label>(10</label></formula><p>) Dividing both sides by t+δ(e -t/δ -1) and rearranging gives:</p><formula xml:id="formula_10">v ′ AB - δ(e -t δ -1)v AB -p AB t + δ(e -t δ -1) &lt; r AB t + δ(e -t δ -1) ,<label>(11)</label></formula><p>which defines the disc of all new relative velocities v ′ AB that let A and B collide at time t. Hence, the acceleration-velocity obstacle AV O δ,τ AB is a union of discs (see Fig. <ref type="figure" target="#fig_2">3(c</ref>)):</p><formula xml:id="formula_11">AV O δ,τ AB = 0&lt;t≤τ D( δ(e -t δ -1)v AB -p AB t + δ(e -t δ -1) , r AB t+δ(e -t δ -1)</formula><p>).</p><p>(12) A closed form expression can be obtained for the boundary of the acceleration-velocity obstacle (see Appendix).</p><p>The definition of the acceleration-velocity obstacle implies that if obstacle B is moving with a constant velocity v B (i.e. v ′ B = v B ), and robot A chooses its new velocity B before time τ if A uses control parameter δ to arrive at its new velocity v ′ A . Alternatively, if B applies an acceleration a B and also uses control parameter δ to arrive at a new velocity v ′ B , it follows from Eq. ( <ref type="formula" target="#formula_4">7</ref>)</p><formula xml:id="formula_12">v ′ A outside AV O δ,τ AB ⊕ {v B }, robot A is guaranteed not to collide with</formula><formula xml:id="formula_13">that v ′ B = v B + δa B . Then, robot A should choose its new velocity v ′ A outside AV O δ,τ</formula><p>AB ⊕ {v ′ B } to be guaranteed not to collide with B before time τ .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Navigation among Multiple Moving Obstacles</head><p>Acceleration-velocity obstacles can be used to navigate a robot among multiple moving obstacles as follows. The robot A performs a continuous cycle of sensing and acting with a (small) time step ∆t. In each iteration, the robot determines its preferred velocity v pref A , 1 and senses the radius r B , the current position p B and the current velocity v B of each obstacle B. The robot either assumes that the obstacle moves with a constant velocity, i.e. v ′ B = v B , or alternatively that v ′ B = v B +δa B if an acceleration a B is also observed. Based on this information, the robot computes the accelerationvelocity obstacle AV O δ,τ AB ⊕ {v ′ B } induced by B. The set CA A of new velocities for A that avoid collisions with all obstacles is the complement of the union of the accelerationvelocity obstacles. In addition, the robot must obey the acceleration constraint a A &lt; a max A , which by Eq. ( <ref type="formula" target="#formula_4">7</ref>) means that v ′ Av A &lt; δa max A . So (see Fig. <ref type="figure" target="#fig_3">4</ref>):</p><formula xml:id="formula_14">CA A = D(v A , δa max A ) \ B (AV O δ,τ AB ⊕ {v ′ B }).<label>(13)</label></formula><p>Next, the robot selects the velocity in CA A that is closest to its preferred velocity v pref A as its new velocity v ′ A :</p><formula xml:id="formula_15">v ′ A = arg min v∈CAA v -v pref A . (<label>14</label></formula><formula xml:id="formula_16">)</formula><p>1 The preferred velocity v pref A is the velocity A would have taken if there were no moving obstacles, for instance the vector in the direction of its goal with a magnitude equal to A's preferred speed.</p><p>It can be shown that this velocity is either (i) the preferred velocity itself, (ii) an intersection point of the boundaries of two acceleration-velocity obstacles, or (iii) an orthogonal projection of the preferred velocity on the boundary of an acceleration-velocity obstacle <ref type="bibr" target="#b7">[8]</ref>. To determine v ′ A , all these points are computed and checked whether they are in CA A . The one closest to the preferred velocity is selected as the new velocity for A.</p><p>Finally, the robot applies the acceleration a A = (v ′ Av A )/δ, and the sensing-acting cycle repeats after ∆t time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. RECIPROCAL COLLISION AVOIDANCE</head><p>Above, we have shown how a robot can avoid moving obstacles with the assumption that their future trajectories can be estimated solely by extrapolating current information about the obstacles' motion. However, in many cases the "moving obstacles" are not passively moving entities, but actually other robots that also make decisions based on their surroundings. Simply considering them as moving obstacles will lead to oscillations if the other entities too consider all other robots as moving obstacles <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b17">[18]</ref>. Therefore, the reactive nature of the other robots must be specifically taken into account in order to guarantee that collisions are avoided.</p><p>This problem is referred to as reciprocal collision avoidance, and is addressed in this section. An approach to reciprocal collision avoidance based on velocity obstacles was introduced in <ref type="bibr" target="#b18">[19]</ref>. Here, we present a similar approach based on acceleration-velocity obstacles taking into account acceleration constraints on the robots. We assume that the robots act independently using the same collision-avoidance strategy (with the same value of δ), and are able to estimate or observe the relevant physical properties of other robots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Sets of Reciprocal Collision Avoidance</head><p>Let us consider the configuration of Fig. <ref type="figure" target="#fig_2">3</ref>(a), but in this case assume that both A and B are decision-making robots that both attempt to avoid collisions with control parameter δ and time horizon τ . To obey the acceleration constraints, A will choose its new velocity v ′ A in D(v A , δa max A ) and B will choose its new velocity v ′ B in D(v B , δa max B ). Hence, the new relative</p><formula xml:id="formula_17">velocity v ′ AB = v ′ A -v ′ B of A with respect to B will be in D(v AB , δa max AB ), where v AB = v A -v B is the current relative velocity and a max AB = a max A + a max B</formula><p>is the sum of the maximum accelerations of A and B. In addition, to avoid collisions between A and B before time τ , the new relative velocity v ′ AB should be outside AV O δ,τ AB . We denote the set of safe new relative velocities V ′ AB (see Fig. <ref type="figure">5</ref>(a)):</p><formula xml:id="formula_18">V ′ AB = D(v AB , δa max AB ) \ AV O δ,τ AB .<label>(15)</label></formula><p>Since A and B select their new velocities independently and simultaneously, A does not know what new velocity B selects, and vice versa. So, neither robot can guarantee that v ′ AB ∈ V ′ AB . However, if we apportion sets of potential new velocities</p><formula xml:id="formula_19">V ′ A ⊂ D(v A , δa max A ) and V ′ B ⊂ D(v B , δa max B ) to A and B, respectively, such that V ′ A ⊕ -V ′ B ⊂ V ′</formula><p>AB , then collisions are guaranteed to be avoided:</p><formula xml:id="formula_20">Lemma 3 If V ′ A ⊕ -V ′ B ⊂ V ′ AB , then v ′ A ∈ V ′ A ∧ v ′ B ∈ V ′ B =⇒ v ′ AB ∈ V ′ AB .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>There are infinitely many pairs of sets</head><formula xml:id="formula_21">V ′ A ⊂ D(v A , δa max A ) and V ′ B ⊂ D(v B , δa max B ) such that V ′ A ⊕ -V ′ B ⊂ V ′ AB .</formula><p>The question is which pair is "fair" (i.e. both robots share the responsibility of avoiding collisions equally) and "maximal" (i.e. both sets contain a maximal amount of safe new velocities). Also, both A and B should be able to independently determine its set of safe new velocities without coordination among them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Finding a Convex Subset of V ′</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AB</head><p>For a convex set X holds that αX ⊕ (1α)X = X for any 0 &lt; α &lt; 1. We could use this rule to determine V ′ A and</p><formula xml:id="formula_22">V ′ B if V ′</formula><p>AB were convex. However, in general it is not (see Fig. <ref type="figure">5(a)</ref>). Therefore, we construct a (large) convex subset</p><formula xml:id="formula_23">V ′ AB ⊂ V ′</formula><p>AB by intersecting V ′ AB with a halfplane H:</p><formula xml:id="formula_24">V ′ AB = V ′ AB ∩ H<label>(16)</label></formula><p>Without making any assumptions on the properties of the shape of AV O τ,δ AB , we want to find H such that</p><formula xml:id="formula_25">V ′ AB = V ′ AB ∩ H is convex and | V ′ AB | is maximal.</formula><p>We construct H as follows.</p><p>Let CH be the convex hull of D(v AB , δa max AB ) ∩ AV O τ,δ AB , and let q be the closest point on the boundary of CH to v AB . Then, we define H as the halfplane that is tangent to CH at q (see Fig. <ref type="figure">5</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(a)). It follows from the construction of</head><formula xml:id="formula_26">H that H ∩ (D(v AB , δa max AB ) ∩ AV O τ,δ AB ) = ∅. Therefore, V ′ AB = V ′ AB ∩ H = D(v AB , δa max AB ) ∩ H, which ensures that V ′ AB is convex and a subset of V ′ AB . Also, H was chosen such that | V ′ AB | is maximal among all possible halfplanes for which H ∩ (D(v AB , δa max AB ) ∩ AV O τ,δ AB ) = ∅.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Determining Sets of Reciprocal Collision Avoidance</head><p>Given the convex set V ′ AB of safe new relative velocities, we apportion sets V ′ A and V ′ B to A and B, respectively, such that</p><formula xml:id="formula_27">V ′ A ⊂ D(v A , δa max A ), V ′ B ⊂ D(v B , δa max B ) and V ′ A ⊕ -V ′ B = V ′ AB .</formula><p>We do this as follows:</p><formula xml:id="formula_28">V ′ A = α AB ( V ′ AB ⊕ {-v AB }) ⊕ {v A }<label>(17)</label></formula><formula xml:id="formula_29">V ′ B = -(1 -α AB )( V ′ AB ⊕ {-v AB }) ⊕ {v B },<label>(18)</label></formula><p>for parameter 0 &lt; α AB &lt; 1 that determines A's share of the responsibility of avoiding collisions between A and B. We can prove that</p><formula xml:id="formula_30">V ′ A ⊕ -V ′ B = V ′ AB as follows: V ′ A ⊕ -V ′ B = α AB ( V ′ AB ⊕ {-v AB }) ⊕ {v A } ⊕ (1 -α AB )( V ′ AB ⊕ {-v AB }) ⊕ {-v B } = ( V ′ AB ⊕ {-v AB }) ⊕ {v A } ⊕ {-v B } = V ′ AB ⊕ {-v AB } ⊕ {v AB } = V ′ AB ,<label>(19</label></formula><p>) where we used that αX ⊕ (1α)X = X for convex X.</p><p>Second, we need to determine A's share α AB of the responsibility to avoid collisions between A and B. As A and B may have different acceleration constraints, we let</p><formula xml:id="formula_31">α AB = a max A a max AB . (<label>20</label></formula><formula xml:id="formula_32">) (a) (b) Fig. 5. (a)</formula><p>The set V ′ AB (white) of safe new relative velocities v ′ AB for the configuration of Fig. <ref type="figure" target="#fig_2">3(a)</ref>. The halfplane</p><formula xml:id="formula_33">H maximizes |D(v AB , a max AB ) ∩ H| for D(v AB , a max AB ) ∩ H ⊂ V ′ AB . (b)</formula><p>The sets (white) of safe new velocities v ′ A and v ′ B for robot A and B, respectively, that guarantee that collisions between them before time τ are avoided.</p><p>Note that B's share</p><formula xml:id="formula_34">α BA = 1 -α AB = a max B a max</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AB</head><p>, so the share of the responsibility is proportional to each robot's ability to change its velocity and avoid collisions. We can now prove that</p><formula xml:id="formula_35">V ′ A ⊂ D(v A , δa max A ) and V ′ B ⊂ D(v B , δa max B ): V ′ A = a max A a max AB ( V ′ AB ⊕ {-v AB }) ⊕ {v A } ⊂ a max A a max AB (D(v AB , δa max AB ) ⊕ {-v AB }) ⊕ {v A } = a max A a max AB D(0, δa max AB ) ⊕ {v A } = D(0, δa max A ) ⊕ {v A } = D(v A , δa max A ). (<label>21</label></formula><formula xml:id="formula_36">)</formula><p>The proof for</p><formula xml:id="formula_37">V ′ B ⊂ D(v B , δa max B ) is constructed simi- larly. In fact, |V ′ A |/|D(v A , δa max A )| = |V ′ B |/|D(v B , δa max B )|</formula><p>, which confirms that the potential new velocities are distributed fairly according to each robot's ability to change velocity and avoid collisions (see Fig. <ref type="figure">5(b)</ref>).</p><p>Note that the definitions of V ′ A and V ′ B are fully symmetric. Reasoning from B's perspective, we have <ref type="formula" target="#formula_18">15</ref>) and ( <ref type="formula" target="#formula_24">16</ref>)). Further, α BA = 1α AB . Substituting these identities into Eq. ( <ref type="formula" target="#formula_29">18</ref>) gives</p><formula xml:id="formula_38">v BA = -v AB and AV O τ,δ BA = -AV O τ,δ AB . Therefore, V ′ BA = -V ′ AB and V ′ BA = -V ′ AB (see Eqs. (</formula><formula xml:id="formula_39">V ′ B = α BA ( V ′ BA ⊕ {-v BA }) ⊕ {v B }</formula><p>, which is of exactly the same form as Eq. ( <ref type="formula" target="#formula_28">17</ref>) for robot A. As a result, robots A and B can construct their sets V ′ A and V ′ B , respectively, independently without coordination. We formally call V ′ A and V ′ B the sets of optimal reciprocal collision avoidance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4</head><p>The set of optimal reciprocal collision avoidance ORCA δ,τ AB of robot A induced by robot B for control parameter δ and time horizon τ is the set V ′ A as defined by Eqs. <ref type="bibr" target="#b16">(17)</ref> and <ref type="bibr" target="#b19">(20)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The definition implies that if robot A chooses its new velocity v ′</head><p>A in ORCA δ,τ AB and robot B chooses its new velocity v ′ B in ORCA δ,τ BA , robots A and B are guaranteed not to collide with each other before time τ if both A and B use control parameter δ to arrive at their new velocities. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Multi-Robot Navigation</head><p>The ORCA formulation can be used for independent navigation of multiple robots sharing a common workspace as follows. Each robot A independently performs a continuous cycle of sensing and acting with time step ∆t. In each iteration, the robot determines its preferred velocity v pref A , and senses the radius r B , the current position p B and the current velocity v B of each other robot B. The robot also needs to know the maximum acceleration a max B of each other robot, which may be estimated from its physical properties. Based on this information, the robot A infers the set of safe new velocities ORCA δ,τ AB ⊕ {v A } with respect to each other robot B. The set CA A of new velocities for A that avoid collisions with all robots is the intersection of these sets (see Fig. <ref type="figure" target="#fig_4">6(a)</ref>):</p><formula xml:id="formula_40">CA A = B ORCA δ,τ AB .<label>(22)</label></formula><p>Next, the robot selects the velocity in CA A that is closest to its preferred velocity v pref A as its new velocity v ′ A :</p><formula xml:id="formula_41">v ′ A = arg min v∈CAA v -v pref A .<label>(23)</label></formula><p>It can be seen that CA A is the intersection of the disc D(v A , δa max A ) of new velocities obeying the acceleration constraint and a set of halfplanes (one halfplane for each other robot). Hence, CA A is convex, and the new velocity v ′ A as defined in Eq. ( <ref type="formula" target="#formula_41">23</ref>) can be efficiently found using 2-D linear programming. It may happen that CA A = ∅, i.e. no safe new velocities are available to the robot, particularly in very dense scenarios. In that case, the "least unsafe" velocity can be found using 3-D linear programming (see <ref type="bibr" target="#b18">[19]</ref> for details).</p><p>Finally, the robot applies the acceleration a A = (v ′ Av A )/δ, and the sensing-acting cycle repeats after ∆t time. Note that all robots apply this cycle simultaneously.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. ROBOTS WITH KINEMATIC CONSTRAINTS</head><p>Our robot model assumes that the robot is capable of accelerating omni-directionally. This not only applies to holonomic robots, but also to a rich class of kinematically constrained non-holonomic robots, as we show here using the example of a car-like robot. As illustrated in Fig. <ref type="figure" target="#fig_4">6</ref>(b), the state of a car-like robot may be given by the center position p = (p x , p y ) of its rear axle, its orientation θ, and its linear speed v. Its state-transition equations are then given by:</p><formula xml:id="formula_42">ṗx = v cos θ, ṗy = v sin θ, θ = vκ, v = a,<label>(24)</label></formula><p>where the linear acceleration a and the steering wheel angle φ are the control inputs, from which the curvature κ = tan(φ)/d of the car's trajectory directly follows (d is the distance between the car's front and rear axle). From Eq. ( <ref type="formula" target="#formula_42">24</ref>), it follows that the velocity v = ( ṗx , ṗy ) and acceleration a = (p x , py ) of the car are given by:</p><formula xml:id="formula_43">v = R(θ) v 0 , a = R(θ) a v 2 κ ,<label>(25)</label></formula><p>where R(θ) = cos θ -sin θ sin θ cos θ . Now, let the linear acceleration be bounded by |a| &lt; a max , and the curvature by |κ| &lt; a max /v 2 , such that extreme steering wheel angles are forbidden at high speeds. It follows that if v = 0, the vector (a, v 2 κ) can be controlled to lie anywhere in the axis-aligned square S centered at 0 with side 2a max . Hence, by Eq. ( <ref type="formula" target="#formula_43">25</ref>), the set of accelerations a that the robot can attain is given by R(θ)S. The incircle D(0, a max ) of S therefore contains the accelerations that can be attained regardless of orientation θ.</p><p>As a result, by modeling the robot as a disc centered at p that encompasses the car, we can apply our approach to perform (reciprocal) collision avoidance for a car-like robot, as long as its speed v is nonzero. A similar approach can be taken for other types of kinodynamically constrained robots, such as airplanes and differential-drives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. IMPLEMENTATION AND RESULTS</head><p>We have implemented the collision avoidance techniques based on AVO for simulated robots. We assume each robot has a limited sensing radius, within which it can obtain accurate knowledge of the relative position and velocity of neighboring robots. In addition to an acceleration constraint, we let the robots be constrained to a maximum speed v max . All timing results are taken on an Intel Core i7 CPU at 3.2GHz with 4 SMT CPUs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Implementation Details</head><p>To compute the AVOs we approximate the boundary as a series of line segments derived from Eq. (29) in the Appendix. We found that 25 samples along the boundary are enough to approximate it well and smoothly avoid collisions. For avoiding moving obstacles we followed the approach of <ref type="bibr" target="#b7">[8]</ref>, in which the new velocity of the robot is computed as the projection of the preferred velocity onto the boundary of the union of the AVOs. For multi-robot navigation with reciprocal collision avoidance, we used the approximate AVOs to compute the ORCA constraint halfplanes, and used linear programming to find the new velocity for each robot. The implementation was parallelized using OpenMP to exploit the independence of the computations for each robot, and take advantage of the multiple cores available on our testbed system.</p><p>The control parameter δ and the time horizon τ are tuning parameters of our algorithm. Setting δ too low diminishes the set of valid new velocities, while setting it too high causes the robot to respond too slow to its environment. Its optimal setting depends on the maximum acceleration and speed of the robots. Our experiments suggest that a setting δ such that the set of valid new velocities covers all valid speeds, i.e. δ = 2v max a max , is a good heuristic. The value of τ signifies the look-ahead of the robot; setting it too low causes unsafe navigation, while setting it too high reduces the set of new velocities available to the robot. Typically, its value should match the average duration of the validity of extrapolations based on current observations. We have used the values of δ = 4s, τ = 10s, a max = 1m/s 2 and v max = 2m/s in our experiments, and our results suggest that these give convincing behavior in typical scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Benchmarks</head><p>We have implemented several benchmarks of simulated robots in a variety of situations to demonstrate the avoidance behavior and analyze runtime.</p><p>Moving Obstacle One robot with acceleration constraints avoids collisions with an obstacles moving at a fixed velocity. Fig. <ref type="figure" target="#fig_5">7</ref> shows the trajectories of the robot and the obstacle. The robot reaches its goal without collisions.</p><p>Positions Exchange Two robots, both with acceleration constrains, exchange positions. Fig. <ref type="figure" target="#fig_0">1</ref> shows the trajectory of each robot. Each dot, represents the center of an robot separated by fixed time steps. The spacing between the dots increases as the robots accelerate to avoid collision.</p><p>Circle-n Robots are initialized in a circle of n robots. Each robots is given a goal at the antipodal position across the circle. Three time-lapsed images from the Circle-100 demo are shown in Fig. <ref type="figure" target="#fig_8">8</ref>.</p><p>Car-Like Robots We implemented our approach for carlike robots as discussed in Section V. Our approach computes accelerations for the cars, which are translated into proper control inputs using Eq. ( <ref type="formula" target="#formula_43">25</ref>), and integrated according to Eq. ( <ref type="formula" target="#formula_42">24</ref>) to obtain the updated state of the cars. In this scenario (see Fig. <ref type="figure" target="#fig_6">9</ref>), 100 cars have random initial positions, orientations, and goals. Their kinematic and dynamic constraints are obeyed while avoiding collisions with each other.</p><p>Videos of these and other benchmark scenarios are available at http://gamma.cs.unc.edu/AVO/.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Performance Results</head><p>To test the performance of our model we implemented the Circle-n benchmark with a varying number of robots. The  results are shown in Fig. <ref type="figure" target="#fig_7">10</ref>, which graphs the total time taken to compute a new velocity for all the robots as the number of robots increases. We observe an approximately linear increase in the computation time as the number of robots increase. We are able to achieve a simulation rate of over 30FPS for 1,000 robots.</p><p>If used in a performance critical application, our implementation could easily be further optimized. For example, our method is well poised to take advantage of data-parallel processing units found in modern CPUs and GPUs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION AND FUTURE WORK</head><p>In this paper we have introduced the acceleration-velocity obstacle for collision-avoidance among moving obstacles by robots subject to acceleration constraints. We have used this concept to derive a formulation for reciprocal collision avoidance for multiple robots. Our experiments have shown that our approach achieves fast running times and produces convincing collision-free motions obeying the acceleration constraints, even in dense environments.</p><p>We have assumed that the robots move in a 2-D workspace, are disc-shaped, and capable of omni-directional acceleration. Even though we have shown that this model can be made applicable to non-holonomic robots such as cars, the question arises whether an approach can be formulated directly for arbitrarily kinematically constrained systems. As shown in <ref type="bibr" target="#b19">[20]</ref>, it is possible to derive "control input obstacles" for collision avoidance with moving obstacles. For reciprocal collision avoidance, however, the key is that the relative motion of two robots can be expressed in terms of the difference between their control inputs. This is not generally the case for kinematically constrained robots.</p><p>One of the motivations of this work is to apply it to collision-avoidance for teams of quadrotor helicopters flying at high speeds in tight airspaces. As the attitude and motion control of these vehicles are typically decoupled <ref type="bibr" target="#b11">[12]</ref>, they can essentially be treated as holonomic robots capable of omni-directional acceleration. Still, it requires extending our approach to dealing with 3-D workspaces and uncertainty in the sensor data. This is subject of ongoing research.</p><p>Another potential application of our approach is to use it in motion planning for efficiently checking whether the robot is in an inevitable collision state <ref type="bibr" target="#b3">[4]</ref>, which is considered a challenging problem in the context of multiple moving obstacles <ref type="bibr" target="#b10">[11]</ref>. If no valid new velocity is available in the set CA A of Fig. <ref type="figure" target="#fig_3">4</ref>, no trajectory towards a new velocity is safe for at least τ time, and one may (conservatively) conclude that a collision is inevitable.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Two robots with acceleration constraints avoid collisions with each other while exchanging positions, and pass their target location with high speed. Newer frames are on top of older frames and darker.</figDesc><graphic coords="1,312.38,149.14,246.25,54.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. (a) A configuration of robot A and moving obstacle B. (b) The evolution of their relative position over time when the relative velocity v AB is applied. A and B collide as soon as they are closer to each other than the sum of their radii (disc). (c) The velocity obstacle V O τ AB with time horizon τ = 2 shown as a union of discs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. (a) A configuration of robot A and moving obstacle B. (b) The evolution of their relative position over time when the new relative velocity v ′ AB is approached by proportional control of the relative acceleration (δ = 2). A and B collide as soon as they are closer to each other than the sum of their radii (disc). (c) The acceleration-velocity obstacle AV O δ,τ AB for control parameter δ = 2 and time horizon τ = 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. (a) A configuration of robot A amidst moving obstacles. The arrows indicate their current velocities. (b) The acceleration-velocity obstacles induced by the obstacles for δ = 2 and τ = 4 (dark grey). The white region is the set CA A of safe new velocities v ′ A for A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. (a) The halfplanes induced by the other robots for the configuration of Fig. 4(a) for δ = 2 and τ = 4 where all entities are assumed to be decision-making robots with the same acceleration constraint a max A . The white region is the set CA A of safe new velocities v ′ A for A. (b) The kinematic model of a car-like robot. Even though it cannot move sidewards, it can accelerate omni-directionally when its speed is nonzero.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. A robot with acceleration constraints avoid collisions with an oncoming obstacle. Newer frames are on top of older frames and darker.</figDesc><graphic coords="7,52.86,52.97,246.90,53.17" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Car-Like Robots Benchmark 100 cars move through the scene and avoid collisions.</figDesc><graphic coords="7,310.87,207.36,249.47,148.61" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Performance &amp; Scalability Performance on the circle-n demo up to 1000 robots. For all robots, new velocity computation took under 30 ms and the simulation ran at over 30 FPS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Circle-n Benchmark 100 robots move to their antipodal position on the circle. As they pass through the center, the density increases, but the motions remain smooth and collision-free.</figDesc><graphic coords="8,54.00,54.02,504.00,118.07" type="bitmap" /></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head><p>The left and right tangent points q + (p, r) and q -(p, r) on a circle of radius r centered at p to a line through the origin are given by:</p><p>Let the centers and the radii of the discs that form the acceleration-velocity obstacle be denoted c(t) and r(t) respectively (see Eq. ( <ref type="formula">12</ref>)):</p><p>Then, the left and right boundaries b + (t) and b -(t) of the acceleration-velocity obstacle AV O τ AB are given by: b ± (t) = c(t) -r(t) ṙ(t) ċ(t) + q ± ( r(t) ṙ(t) ċ(t), r(t)),</p><p>for 0 &lt; t ≤ τ .</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Collision avoidance method for multiple autonomous mobile agents by implicit cooperation</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Abe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yoshiki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE RSJ Int. Conf. on Intelligent Robots and Systems</title>
		<meeting>IEEE RSJ Int. Conf. on Intelligent Robots and Systems</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Avoiding moving obstacles: the forbidden velocity map</title>
		<author>
			<persName><forename type="first">B</forename><surname>Damas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Santos-Victor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE/RSJ Int. Conf. on Intelligent Robots and Systems</title>
		<meeting>IEEE/RSJ Int. Conf. on Intelligent Robots and Systems</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Motion planning in dynamic environments using Velocity Obstacles</title>
		<author>
			<persName><forename type="first">P</forename><surname>Fiorini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Shiller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="760" to="772" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Inevitable collision states -a step towards safer robots?</title>
		<author>
			<persName><forename type="first">T</forename><surname>Fraichard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Asama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advanced Robotics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1001" to="1024" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The dynamic window approach to collision avoidance</title>
		<author>
			<persName><forename type="first">D</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Burgard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Thrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Robotics and Automation Magazine</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="23" to="33" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Dynamic obstacle avoidance in uncertain environment combining PVOs and occupancy grid</title>
		<author>
			<persName><forename type="first">C</forename><surname>Fulgenzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Spalanzani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Laugier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. on Robotics and Automation</title>
		<meeting>IEEE Int. Conf. on Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficient and safe on-line motion planning in dynamic environments</title>
		<author>
			<persName><forename type="first">O</forename><surname>Gal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Shiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Rimon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. on Robotics and Automation</title>
		<meeting>IEEE Int. Conf. on Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">ClearPath: Highly parallel collision avoidance for multiagent simulation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chhugani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Satish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dubey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGGRAPH/Eurographics Symp. on Computer Animation</title>
		<meeting>ACM SIGGRAPH/Eurographics Symp. on Computer Animation</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Randomized kinodynamic motion planning with moving obstacles</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kindel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Latombe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Robotics Research</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="233" to="255" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Reflective navigation: Individual behaviors and group behaviors</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kluge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Prassler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Robotics and Automation</title>
		<meeting>IEEE Int. Conf. Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Collision avoidance in dynamic environments: an ICS-based solution and its comparative evaluation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Martinez-Gomez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fraichard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. on Robotics and Automation</title>
		<meeting>IEEE Int. Conf. on Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The GRASP multiple mirco-UAV test bed: experimental evaluation of multirobot aerial control algorithms</title>
		<author>
			<persName><forename type="first">N</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mellinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Lindsey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Robotics and Automation Magazine</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="56" to="65" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Motion planning in dynamic environments using the velocity space</title>
		<author>
			<persName><forename type="first">E</forename><surname>Owen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Montano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE/RSJ Int. Conf. on Intelligent Robots and Systems</title>
		<meeting>IEEE/RSJ Int. Conf. on Intelligent Robots and Systems</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Safe motion planning in dynamic environments</title>
		<author>
			<persName><forename type="first">S</forename><surname>Petti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fraichard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE RSJ Int. Conf. on Intelligent Robots and Systems</title>
		<meeting>IEEE RSJ Int. Conf. on Intelligent Robots and Systems</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A robotics wheelchair for crowded public environment</title>
		<author>
			<persName><forename type="first">E</forename><surname>Prassler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Scholz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Fiorini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Robotics and Automation Magazine</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="38" to="45" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Motion planning in dynamic environments: obstacles moving along arbitrary trajectories</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Shiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Large</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sekhavat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. on Robotics and Automation</title>
		<meeting>IEEE Int. Conf. on Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Independent navigation of multiple robots with Hybrid Reciprocal Velocity Obstacles</title>
		<author>
			<persName><forename type="first">J</forename><surname>Snape</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Den Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE/RSJ Int. Conf. on Intelligent Robots and Systems</title>
		<meeting>IEEE/RSJ Int. Conf. on Intelligent Robots and Systems</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Reciprocal Velocity Obstacles for real-time multi-agent navigation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Van Den Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. on Robotics and Automation</title>
		<meeting>IEEE Int. Conf. on Robotics and Automation</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Reciprocal n-body collision avoidance</title>
		<author>
			<persName><forename type="first">J</forename><surname>Van Den Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symposium of Robotics Research</title>
		<meeting>Int. Symposium of Robotics Research</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Wilkie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Den Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<title level="m">Generalized Velocity Obstacles. IEEE/RSJ Int. Conf. on Intel. Robots and Systems</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
