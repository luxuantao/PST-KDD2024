<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Host-Based Intrusion Detection System with System Calls: Review and Future Trends</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ming</forename><surname>Liu</surname></persName>
						</author>
						<author role="corresp">
							<persName><forename type="first">Changmin</forename><surname>Zhong</surname></persName>
							<email>changmin.zhong@joowing.com</email>
						</author>
						<author>
							<persName><forename type="first">Joowing</forename><surname>Australia</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jinjun</forename><surname>Australia</surname></persName>
						</author>
						<author>
							<persName><surname>Chen</surname></persName>
						</author>
						<author>
							<persName><forename type="first">J</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of Technology Sydney</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution" key="instit1">ZHI XUE</orgName>
								<orgName type="institution" key="instit2">Shanghai Jiao Tong University</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution" key="instit1">XIANGHUA XU</orgName>
								<orgName type="institution" key="instit2">Hangzhou Dianzi University</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">Swinburne University of Technology</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">School of Electronics, Information and Electrical Engineering</orgName>
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
								<address>
									<postCode>200240</postCode>
									<settlement>Minhang, Shanghai</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="department">Faculty of Engineering and IT</orgName>
								<orgName type="institution">University of Technology Sydney</orgName>
								<address>
									<postCode>2007</postCode>
									<settlement>Ultimo</settlement>
									<region>NSW</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff7">
								<orgName type="department" key="dep1">School of Electronics</orgName>
								<orgName type="department" key="dep2">Infor-mation and Electrical Engineering</orgName>
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
								<address>
									<postCode>200240</postCode>
									<settlement>Minhang, Shanghai</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff8">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">Hangzhou Dianzi University</orgName>
								<address>
									<postCode>310018</postCode>
									<settlement>Hangzhou</settlement>
									<region>Zhejiang</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff9">
								<orgName type="department">C. Zhong</orgName>
								<orgName type="institution">VIC</orgName>
								<address>
									<postCode>3150</postCode>
									<settlement>Glen Waverley</settlement>
									<region>Joowing Australia</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff10">
								<orgName type="department">Faculty of Science, Engineering and Technology</orgName>
								<orgName type="institution">Swinburne University of Technology</orgName>
								<address>
									<postCode>3122</postCode>
									<settlement>Hawthorn</settlement>
									<region>VIC</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Host-Based Intrusion Detection System with System Calls: Review and Future Trends</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A27398C2845E19A7C93FDF0E9AA5D4B8</idno>
					<idno type="DOI">10.1145/3214304</idno>
					<note type="submission">Received July 2017; revised April 2018; accepted April 2018</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:51+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CCS Concepts:</term>
					<term>Security and privacy â†’ Intrusion detection systems</term>
					<term>Artificial immune systems</term>
					<term>Cybersecurity, system call, intrusion detection, cloud computing, big data</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In a contemporary data center, Linux applications often generate a large quantity of real-time system call traces, which are not suitable for traditional host-based intrusion detection systems deployed on every single host. Training data mining models with system calls on a single host that has static computing and storage capacity is time-consuming, and intermediate datasets are not capable of being efficiently handled. It is cumbersome for the maintenance and updating of host-based intrusion detection systems (HIDS) installed on every physical or virtual host, and comprehensive system call analysis can hardly be performed to detect complex and distributed attacks among multiple hosts. Considering these limitations of current system-callbased HIDS, in this article, we provide a review of the development of system-call-based HIDS and future research trends. Algorithms and techniques relevant to system-call-based HIDS are investigated, including feature extraction methods and various data mining algorithms. The HIDS dataset issues are discussed, including currently available datasets with system calls and approaches for researchers to generate new datasets. The application of system-call-based HIDS on current embedded systems is studied, and related works are investigated. Finally, future research trends are forecast regarding three aspects, namely, the reduction of the false-positive rate, the improvement of detection efficiency, and the enhancement of collaborative security.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The host-based intrusion detection system (HIDS) has been gaining attention in the community of cybersecurity for over two decades. Compared with the network-based intrusion detection system (NIDS), HIDS has the superiorities of fine granularity and the ability to detect internal attacks. HIDS analyzes auditing data from operating systems, whereas NIDS analyzes data from network traffic. System-call-based HIDS is about analyzing collected Linux system call traces. This approach is effective on common hosts. However, due to the rapid development of data center facilities and techniques, recently HIDS has suffered from the well-known big data challenge. It is challenging for traditional HIDS to handle the growing amount of system call traces or other kinds of auditing data generated from various Linux applications installed in a contemporary data center. Linux system call traces produced from a large data center are a kind of big data, which are massive and complicated. Therefore, they bring new challenges to conventional data processing methods. Haider et al. claimed these kinds of challenges according to their practical experience, and they listed some currently deployed systems and their performance in specific numbers for comparison <ref type="bibr" target="#b46">[47]</ref>. Traditional database management systems and data mining methods on a single host may not be able to handle massive system call traces efficiently. Processing large amounts of system call traces has become an essential requirement for modern data centers. Traditional host-based intrusion detection systems are mostly about performing intrusion analysis on an independent host with standalone detection software installed. System call traces for training are loaded into the memory of a single host that has static computing and storage capacity. There are no interactions among HIDS installed on different hosts. This form of deployment has two main shortcomings: System security â†’ With standalone HIDS software installed on every single host, it is difficult to perform comprehensive system call analysis to detect complex and distributed attacks among multiple hosts. Nowadays, new varieties of zero-day attacks keep being generated. Intruders may even choose the intrusion detection software itself as the attack target based on the software vulnerabilities. Detection efficiency â†’ Training decision engines with raw Linux system call traces on a single host that has static computing and storage capacity is time-consuming. The size of RAM on a single host may not be capable of handling a large quantity of real-time system call traces or intermediate datasets such as data mining models. If intermediate datasets and permanent detection results are stored in hard disks, it may delay the real-time detection or queries of the records. Therefore, innovations have to be made to address these shortcomings. To the best of our knowledge, there are limited surveys discussing host-based intrusion detection systems with system calls and the corresponding big data challenge. Forrest et al. discussed applications and results of system call monitoring as well as data modeling in anomaly intrusion detection <ref type="bibr" target="#b32">[33]</ref>. This work was composed years ago, yet many new techniques and applications have been generated since that time. Hu <ref type="bibr" target="#b53">[54]</ref> composed an introductory article about host-based anomaly intrusion detection. This article emphasized the application of the Hidden Markov Model, and other data mining models were briefly introduced. Ahmed et al. composed a survey about network anomaly detection techniques and the dataset issues with the introduction of the ADFA-LD dataset <ref type="bibr" target="#b1">[2]</ref>. This survey was mostly about network-based anomaly detection systems. Chandola et al. proposed a comprehensive taxonomy to classify studies of anomaly detection for discrete sequences into three distinct categories <ref type="bibr" target="#b18">[19]</ref>. Their work mainly focused on the theoretical analysis of algorithms, whereas issues such as system call datasets or new applications with system-call-based HIDS were rarely discussed. Our article endeavors to present a clear overview of the development for HIDS with system calls and provide inspirational future research trends in the current big data and cloud computing environment. The main contributions of this article are described below:</p><p>Host-Based Intrusion Detection System with System Calls: Review and Future Trends 98:3 (1) An overview of the development of system-call-based HIDS is presented.</p><p>(2) Algorithms and techniques relevant to system-call-based HIDS are investigated, including various data mining methods. (3) The application of system-call-based HIDS on embedded systems is studied, and related works are investigated. <ref type="bibr" target="#b3">(4)</ref> The HIDS dataset issues are analyzed; currently available datasets with system calls and approaches for researchers to generate new datasets are discussed. <ref type="bibr" target="#b4">(5)</ref> Limitations relating to current system-call-based HIDS are discussed, and future research trends are forecast regarding three aspects, namely, the reduction of the false-positive rate, the improvement of detection efficiency, and the enhancement of collaborative security.</p><p>The rest of this article is composed as follows. In Section 2, we present an overview of intrusion detection systems. In Section 3, algorithms and techniques of system-call-based HIDS are outlined. In Section 4, HIDS dataset issues are analyzed, and dataset generation methods are discussed. In Section 5, the application of HIDS on embedded systems is studied. In Section 6, future trends of HIDS research are forecast. In Section 7, we give concluding remarks of this article. A roadmap of this article is demonstrated in Figure <ref type="figure" target="#fig_0">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">AN OVERVIEW OF INTRUSION DETECTION SYSTEMS</head><p>An intrusion detection system, or IDS, monitors the real-time data of a network or hosts to detect malicious behaviors <ref type="bibr" target="#b28">[29]</ref>. It generates an alarm when it detects an intrusive activity. There are two ways to categorize intrusion detection systems: Types of analyzed data â†’ Network-based intrusion detection system (NIDS), host-based intrusion detection system (HIDS), and collaborative intrusion detection system (CIDS) <ref type="bibr" target="#b80">[81]</ref> Types of attacks â†’ Misuse detection system and anomaly detection system <ref type="bibr" target="#b80">[81]</ref> 2.1 Categorization Based on the Types of Analyzed Data 2.1.1 Network-Based Intrusion Detection System. NIDS checks communications in a network to observe intrusions, for instance, applying data mining methods to network traffic data for the detection of anomalies. Currently, issues related to NIDS have been intensively researched and notable outcomes have been achieved. For instance, Tan et al. proposed a system to detect 98:4 M. Liu et al.</p><p>Table <ref type="table">1</ref>. A Typical System Call Sequence <ref type="bibr" target="#b33">[34]</ref> "...open, read, mmap, mmap, open, Ð´etrlimit, mmap, close..." denial-of-service (DoS) attacks for interconnected server systems by applying multivariate correlation analysis <ref type="bibr" target="#b101">[103]</ref>. Geometrical correlations are generated from selected network features. They apply anomaly detection on benign network data to detect zero-day attacks. The process of multivariate correlation analysis is augmented and accelerated by using the triangle-area-based method. The KDD99 dataset is adopted to assess the capability of their IDS on raw and normalized datasets, demonstrating the enhanced detection rate. They further used computer vision methods to solve the DoS attack problem <ref type="bibr" target="#b102">[104]</ref>. Network traffic entries are considered as corresponding images by taking multivariate correlation analysis. Those images that were used as observed objects are composed with Earth Mover's Distance. The experiment with 10-fold cross-validations shows high detection accuracy.</p><p>Limitations of NIDS. NIDS is often deployed as hardware devices between the Internet and the Intranet of an enterprise. The advantage of this form of deployment is that the NIDS can detect network intrusions immediately. However, it is difficult for traditional NIDS to process encrypted packets transmitting on the network, and the speed of network flow may be downgraded due to the deployment of NIDS devices. Moreover, internal attacks are difficult to detect by NIDS in this case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Host-Based Intrusion Detection</head><p>System. HIDS monitors activities such as system or shell logs within hosts to discover unauthorized behaviors. HIDS can perform various kinds of data mining methods such as artificial neural networks on host auditing data to discover attacks. Systemcall-based HIDS is mainly discussed in this article. In Unix-like operating systems, system calls are referred when a kernel service from the operating system is requested by a running process. System calls are significant interactions between programs and the system kernel. A system-callbased HIDS monitors real-time system call traces to detect abnormal system call sequences. Table <ref type="table">1</ref> shows a typical system call sequence. Data processed by system-call-based HIDS is fine-grained. System-call-based HIDS can trigger alarms when abnormal system call traces are detected from normal traces. By using system calls as the input data, a HIDS can manipulate the most original information of an operating system. System-call-based HIDS has gained attention in the past 20 years because of the increasing number of attacks focusing on Linux servers. System-call-based HIDS has been developed for intrusion detection in virtual hosts and embedded platforms such as smartphones.</p><p>Challenges for HIDS. The execution speed of a HIDS is commonly measured by summing up all times of training and testing. Considering the HIDS needs to handle a large quantity of finegrained system call traces, the speed may be limited. Meanwhile, it is tedious to maintain and update a large number of traditional HIDS software installed on every host or virtual host in a network, compared with the number of NIDS devices. Therefore, novel HIDS approaches that can reduce the execution time while keeping the acceptable detection accuracy are demanded <ref type="bibr" target="#b84">[85]</ref>. Moreover, traditional HIDS does not show enough robustness against advanced persistent threats. Therefore, it is necessary for future HIDS to work collaboratively with other security mechanisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.3">Collaborative Intrusion Detection System</head><p>. CIDS is about collaboratively combining NIDS, HIDS, and other security mechanisms in a network for more efficient and effective detection of cyber attacks. Vasilomanolakis et al. proposed a detailed survey that classified CIDS into three types, centralized CIDS, decentralized CIDS, and distributed CIDS <ref type="bibr" target="#b107">[109]</ref>.</p><p>Host-Based Intrusion Detection System with System Calls: Review and Future Trends</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>98:5</head><p>Limitations of Traditional CIDS. Traditional CIDS methods often ignore centralized summarization and comprehensive analysis of network traffic data and host logs, and traditional CIDS may not be efficient enough to handle the summarization of large-volume real-time data streams.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Categorization Based on the Types of Attacks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Misuse Detection</head><p>System. The misuse detection system (signature-based intrusion detection system) defines libraries of acknowledged attack signatures and raises alarms when the network traffic or system operations match any attack signatures in the library. Predefined by the system administrators, the library tries to precisely list and persist every possible abnormal network and system behavior. Other known and unknown behaviors are treated as normal. Therefore, the misuse detection system can effectively discover attack methods that are already identified.</p><p>Limitation of Misuse Detection System. The misuse detection system is often criticized for having a high missed alarm rate. The increasing amount of zero-day attacks make this approach gradually obsolete. Intruders can simply obfuscate their attack methods to bypass the predefined intrusion libraries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Anomaly Detection</head><p>System. The anomaly detection system (ADS) requires no knowledge of known intrusions. Chandola et al. provided a comprehensive survey of the anomaly detection system <ref type="bibr" target="#b17">[18]</ref>. In the area of IDS, ADS is classified into network-based anomaly detection system (NADS) and host-based anomaly detection system (HADS). NADS identifies anomalies from normal network traffic. HADS monitors hosts to discover anomalies from normal system behaviors. HADS is often deployed in systems whose normal behaviors do not change frequently. System-call-based HADS is about utilizing system call traces to build normal databases or data mining models of normal system behaviors. Then these databases or models can be used as criteria for anomaly detection. Therefore, anomaly detection system can detect zero-day attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Challenge for Host-Based Anomaly Detection System.</head><p>A high false-alarm rate (FAR) is the challenge. Novel system call traces are being generated along with an increasing number of new Linux applications. As HADS only holds normal databases or data mining models of known behaviors, new normal system call traces that do not conform to the databases or models may be falsely regarded as intrusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Combination of Misuse Detection with Anomaly Detection</head><p>Although IDS can be categorized into these two groups, the combination of a misuse detection system with an anomaly detection system is a current trend for the development of a complete real-time IDS infrastructure to detect both known and unknown intrusions. Concerning systemcall-based HIDS, when a new system call trace is approaching, after preprocessing, first it can be compared with predefined rules of known attacks. If no attack is detected, then it can be compared with the normal databases or checked by other anomaly detection algorithms. The trace can also be passed to the security personnel for further investigations. The combination of misuse detection with anomaly detection has been adopted by many current research works such as <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ALGORITHMS AND TECHNIQUES OF HIDS</head><p>The intrusion detection system was briefly introduced from different perspectives in the previous section. In this section, algorithms and techniques mainly used in the area of system-call-based HIDS will be discussed. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Preprocessing and Feature Selection</head><p>As system call traces collected by tracing tools are the original data, preprocessing and feature selection methods have to be applied to get clean and typical features for training. Similar to natural language processing, methods such as the n-gram, sliding window algorithm, bag-of-words model, and term frequency-inverse document frequency (TF-IDF) method can be implemented in systemcall-based HIDS. An n-gram in HIDS is often referred to as a contiguous sequence of n system calls extracted from a system call trace within a particular time interval <ref type="bibr" target="#b119">[121]</ref>. The sliding window algorithm with window size n is often utilized to scan the complete system call trace to generate n-grams of system calls, which are used for training normal databases or data mining models. The n-gram method has been proven to be effective by researchers <ref type="bibr" target="#b111">[113,</ref><ref type="bibr" target="#b59">60,</ref><ref type="bibr" target="#b127">129]</ref>. Creech et al. <ref type="bibr" target="#b24">[25]</ref> used multiple-length sliding windows to scan the complete system call trace and multiple-length n-grams were generated. This method combined with ELM is proven to be effective to increase the detection rate and lower the false-alarm rate.</p><p>Choosing the Optimal n-Gram. Tan et al. provided a theoretical and experimental investigation of choosing various sequence lengths <ref type="bibr" target="#b100">[102]</ref>. 6-Gram and 7-gram are claimed to have better performance in UNM and ADFA-LD datasets, respectively <ref type="bibr" target="#b100">[102,</ref><ref type="bibr" target="#b66">67]</ref>. In <ref type="bibr" target="#b4">[5]</ref>, system call traces are collected from virtual machine user programs; 6-gram shows the best time efficiency and 10-gram can achieve the optimal detection result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Enumerating Sequences</head><p>The enumerating sequences-based method, known as "sequence time-delay embedding (STIDE)" <ref type="bibr" target="#b87">[88]</ref>, is the first kind of system-call-based HIDS method introduced by Forrest et al. <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b112">114,</ref><ref type="bibr" target="#b52">53,</ref><ref type="bibr" target="#b32">33]</ref>. STIDE is inspired by the natural immune systems of organisms. This approach is claimed to be simple and efficient to deploy for possible real-time implementation. Parameters of system calls are removed, endeavoring to reduce system load and obtain the best result with system call identifiers only. In this method, short sequences are extracted from normal execution of processes. Normal databases are constructed with these short sequences to detect anomalies. Databases do not have to contain every possible permutation of system calls; otherwise, no novel sequence can be detected as an anomaly. The two main stages of this method are described below:</p><p>â€¢ The first stage is for database construction. During this stage, the sliding window algorithm is applied to scan normal system call traces and generate short sequences, and then normal databases representing signatures of normal behaviors are constructed with these short sequences. Sequences are stored as a particular data structure in each database to reduce storage consumption and improve comparison efficiency. â€¢ The second stage is for intrusion monitoring. During this stage, similar to the first stage, short sequences from testing system call traces are extracted and compared against the normal databases to get the number of mismatches. The number of mismatches is then used to identify anomalies from normal system behaviors.</p><p>Hamming Distance. Hofmeyr et al. utilized the Hamming distance, which is acquired by counting different positions of two system call sequences, to get the number of mismatches <ref type="bibr" target="#b52">[53]</ref>. Every short sequence extracted from testing system call traces is compared with its corresponding normal database to find a known sequence with the minimal Hamming distance. If this minimal distance is larger than a user-defined threshold value, it means all sequences within the normal database may deviate from the testing sequence. Thus, the testing sequence is then regarded as an anomaly.</p><p>The Problem of Hamming Distance-Based Method. To guarantee a testing sequence is an anomaly, the sequence needs to be compared with all entries of the database to ensure every obtained Hamming distance is larger than the threshold. Therefore, the process of finding the minimal Hamming distance may be time-consuming, especially if there are many anomalies or normal databases are large.</p><p>The Challenge of Enumerating Sequences-Based Method. In general, the enumerating sequencesbased method requires building one normal database for each program. Consequently, different systems may generate different sets of normal databases. In the practical environment, normal databases need to be regularly updated to add new normal system call sequences generated by system and software upgrades. Therefore, efficient methods for building, updating, and maintaining those normal databases need to be designed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Rule Learning</head><p>Lee et al. implemented a rule-learning-based method with continuous system call sequences to describe normal and abnormal kernel behaviors <ref type="bibr" target="#b69">[70,</ref><ref type="bibr" target="#b68">69]</ref>. During the data preprocessing stage, the sliding window algorithm is applied to traverse normal and intrusive traces to generate short sequences. Each short sequence is represented as a class-labeled vector, either normal or abnormal. Thus, a labeled dataset is formed and separated as training and testing partitions for the experiment. The rule learning algorithm RIPPER is applied to the training data. Testing sequences deviating from the set of predefined if-then rules are recognized as anomalies. The rules created are claimed to be concise for real-time implementation. Jiang et al. <ref type="bibr" target="#b59">[60]</ref> generated n-grams of multiple lengths with normal system call traces and created an automaton of normal behaviors, and the automaton is used to detect anomalous behaviors. Tandon <ref type="bibr" target="#b104">[106]</ref> designed some variants of the LEARD rule algorithm <ref type="bibr" target="#b75">[76]</ref> to generate rules with system call sequences and their arguments. Qing et al. proposed an anomaly detection approach based on rough set theory <ref type="bibr" target="#b125">[127]</ref>. A minimized set of rules is extracted from normal system call sequences to define a normal behavior model <ref type="bibr" target="#b125">[127]</ref>.</p><p>The Limitation of These Rule Learning-Based Methods. The rules described in the methods above are derived from traditional small-scale datasets. Therefore, these rules may be outdated for mining deep patterns from a large amount of system call traces generated by a data center.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Bloom Filter</head><p>The Bloom filter is often used for searching whether a new entry is in a set or not. Compared with STIDE, Bloom-filter-based methods have the advantages of light memory occupation, high searching speed, and effective privacy preservation. When a new short sequence is passed to the system, a set of hash functions can be applied to map the sequence to different positions in the Bloom filter. The Murmurhash <ref type="bibr" target="#b7">[8]</ref>, which is proven to have the advantages of simple implementation and high resistance of hash collisions, is often utilized with the Bloom filter. The two main stages for Bloom-filter-based HIDS methods are described below:</p><p>â€¢ During the construction stage, first, all bits in the Bloom filter are set to zero, k hash functions are selected manually, and all training normal short sequences will be processed by them. The hashing results are corresponding positions in the Bloom filter, which will be set to one. â€¢ During the detection stage, for a new short system call sequence, k hashing results are generated and compared with corresponding bits in the Bloom filter. If at least one bit is zero, it means that the system call sequence is an anomaly. However, if all bits are one, the new short sequence may still be an anomaly since there is a small possibility of hash collision.</p><p>98:8</p><p>M. Liu et al.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Anagram. Wang et al. proposed an anomaly detector called</head><p>Anagram that applies a mixture of high-order n-grams and semisupervised training method on system call sequences <ref type="bibr" target="#b111">[113]</ref>. Bloom filters are implemented in this method to save space and enhance privacy-preserving ability. Anagram can detect anomalies and model malicious behaviors with a "high detection rate and low false positive rate" <ref type="bibr" target="#b111">[113]</ref> and shows robustness to some mimicry attacks <ref type="bibr" target="#b109">[111]</ref>.</p><p>Limitation of Bloom-Filter-Based Methods. Bloom filter has shown simplicity and effectiveness when computational space is inadequate. However, the limitation of the Bloom filter is that it allows false positives <ref type="bibr" target="#b13">[14]</ref>, yet it is expected that the FPR of a HIDS can be minimized. Moreover, considering the improvements in hardware and cloud computing capabilities recently, space is not the most significant factor. Therefore, improvements are expected to make Bloom filters further applicable for HIDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Classification and Clustering</head><p>The classification-and clustering-based methods here are referred to as a set of commonly used machine-learning algorithms that have been applied to system-call-based HIDS. Well-known models such as the k-nearest neighbor algorithm (kNN) <ref type="bibr" target="#b71">[72,</ref><ref type="bibr" target="#b127">129]</ref>, k-means clustering algorithm (KMC) <ref type="bibr" target="#b115">[117,</ref><ref type="bibr" target="#b117">119]</ref>, decision trees <ref type="bibr" target="#b127">[129,</ref><ref type="bibr" target="#b8">9]</ref>, support vector machine (SVM) <ref type="bibr" target="#b127">[129,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b116">118,</ref><ref type="bibr" target="#b113">115,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b63">64]</ref>, and Bayesian networks <ref type="bibr" target="#b86">[87]</ref> have been implemented on system-call-based HIDS. For instance, Yuxin et al. proposed a behavior-based detection method with a semantic analysis approach <ref type="bibr" target="#b127">[129]</ref>. An "executable" is presented as assembly code and then transferred to a control flow graph with flowbased analysis. Based on the control flow graph, a running tree is built from which the system call execution paths are extracted. Combining these paths can generate a system call stream from an "executable." System calls are represented as different integers. Features are extracted by using the n-gram approach with the sliding window algorithm and information gain method, and normalized feature vectors are formed. KNN, decision tree, and SVM classifiers are adopted for training and testing.</p><p>The Challenge. In the era of big data, how to fit traditional machine-learning algorithms in the current distributed computing environment is a challenge. It is necessary to improve the efficiency of current parallelization methods, which can be both on the algorithm aspect and on the data aspect; machine-learning algorithms can be redesigned to be executable in parallel, and large-scale datasets can be segmented properly to fit distributed machine-learning algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Hidden Markov Model</head><p>The Hidden Markov Model (HMM) is a doubly stochastic model that contains a finite number of hidden states <ref type="bibr" target="#b93">[94]</ref>. Yeung et al. verified that applying HMM training on system call sequences operates better than modeling frequency distributions of shell command logs <ref type="bibr" target="#b126">[128]</ref>. Hu <ref type="bibr" target="#b53">[54]</ref> provided a detailed tutorial about how to apply HMM on system calls. HMM is widely known for its three fundamental problems shown in Table <ref type="table" target="#tab_0">2</ref>, which are applicable in system-call-based HIDS. <ref type="bibr" target="#b112">[114]</ref>. Several HMMs are trained with dozens of states according to the number of system call types in each test program, as the number of states should be determined in advance before the creation of an HMM <ref type="bibr" target="#b79">[80]</ref>. States are completely connected and reachable from each other. The probabilities of state movement and system call generation are stored, which demand sufficient storage space for these intermediate results. Compared with the high time complexity of training, testing requires each single incoming system call to be examined, which is different from other system call sequence-based approaches. An alert is raised if the probability of an incoming system call is under a particular threshold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Initiation of HMM-Based HIDS with System Calls. Warrender et al. initiated the HMM-based approach for HIDS with system calls</head><p>Host-Based Intrusion Detection System with System Calls: Review and Future Trends 98:9 The evaluation problem Given an HMM Î» = (Î›, B, Ï€ ), obtain P(O |Î»), the probability of O = {O 1 , O 2 , . . . , O t , . . . , O T }, 1â‰¤t â‰¤T <ref type="bibr" target="#b53">[54]</ref>. Î› is the state transition probability matrix, B is the observation probability distribution, and Ï€ is the initial state distribution, O is the observation sequence with time t <ref type="bibr" target="#b41">[42]</ref>. A high P(O |Î») indicates that O is normal, whereas a low P(O |Î») indicates that O is abnormal. â†’ In HIDS, this problem is related to testing if an incoming system call trace is an anomaly. The decoding problem Given an observation sequence O and a model Î», find the most probable hidden state sequence Q = {q 1 , q 2 , . . . , q t , . . . , q T }, 1â‰¤t â‰¤T to maximize the joint probability P(O, Q |Î») <ref type="bibr" target="#b106">[108]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The learning problem</head><p>Given an observation sequence O and a model Î», obtain the parameters (Î›, B, Ï€ ) to maximize P(O |Î») <ref type="bibr" target="#b53">[54]</ref>. â†’ In HIDS, this problem is related to training a model with the input observation sequence, i.e., benign system call trace.</p><p>Combination of HMM with STIDE. Inspired by Forrest and Warrender's methods, Qiao et al. combined HMM with normal databases to propose a hybrid HIDS, which aims to discover a distinct difference between normal and abnormal kernel behaviors <ref type="bibr" target="#b92">[93]</ref>. Part of preprocessed raw system call traces is taken to train an HMM filter using the Baum-Welch algorithm. Then all traces are passed to that HMM filter to get optimal state transition sequences using the Viterbi algorithm. Based on the research of Lee et al., conditional entropy can be used to measure the quality of input data <ref type="bibr" target="#b70">[71]</ref>. The lower conditional entropy of input data can result in a model of higher performance. The conditional entropy of state transition sequences is lower than that of system call sequences. Hence, state transition sequences can represent kernel activities better. Then a normal database is constructed using these state transition sequences. The state number is set to 15. Thus, the database constructed is more concise compared with previous methods. The robustness is improved as the normal database can be almost constructed with only a small portion of training data.</p><p>Challenges of HMM Modeling. In practice, HMM modeling has been criticized for its high time complexity, especially when system call traces are extraordinarily massive and complicated in modern large data centers. Moreover, deep patterns of system call sequences usually cannot be mined by a single-layer HMM <ref type="bibr" target="#b46">[47]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.7">Neural Networks</head><p>Many HIDS works are related to neural networks, including multilayer perceptron <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b25">26]</ref>, selforganizing maps neural network <ref type="bibr" target="#b72">[73]</ref>, radial basis function (RBF)-based neural networks <ref type="bibr" target="#b2">[3]</ref>, extreme learning machine <ref type="bibr" target="#b24">[25]</ref>, self-structuring confabulation network <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b19">20]</ref>, and so forth <ref type="bibr" target="#b83">[84]</ref>. Ghosh et al. applied the Elman neural network on the DARPA dataset for anomaly detection, and the performance of the Elman nets is better than the back-propagation neural network in the experiments <ref type="bibr" target="#b39">[40]</ref>. Recently, deep learning has shown its capability of discovering underlying patterns within big data and is widely used in various data mining applications. Therefore, deep learning may be applicable for HIDS in the big data environment <ref type="bibr" target="#b67">[68]</ref>.</p><p>The Challenge. When it comes to deep learning, although it has started to show advantages, due to the increasing amount of system calls being generated, the training of a deep neural network  and its fine-tuning may be complicated and time-consuming. One solution is using multiple GPUs deployed on a physical host to accelerate the training process. However, this solution may be pricey and space-consuming.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.8">Validation Method and Evaluation Metrics</head><p>Cross-Validation. K-fold cross-validation is widely used to validate data mining algorithms <ref type="bibr" target="#b110">[112]</ref>.</p><p>Although k can be any integer number, 10-fold cross-validation is often applied. In 10-fold crossvalidation, the original dataset is divided into 10 partitions with the same size, nine partitions are used for training, and one partition is used for testing <ref type="bibr" target="#b57">[58]</ref>. Then another nine partitions and the leftover one partition will be used for training and testing. This cross-validation approach will repeat for 10 times with different training and testing data, and 10 results will be generated and averaged to get the final result <ref type="bibr" target="#b62">[63]</ref>. The K-fold cross-validation method can provide a more precise estimation of the whole dataset.</p><p>Precision/Recall/F-Measure. A set of metrics is available for the performance evaluation of intrusion detection techniques. As HADS usually has two detection results, i.e., normal or anomalous, the performance can be evaluated using the Precision/Recall criteria <ref type="bibr" target="#b26">[27]</ref>:</p><formula xml:id="formula_0">Precision = T P T P + FP Recall = T P T P + F N FPR = FP FP + T N T PR = T P T P + F N ,<label>(1)</label></formula><p>where T P, FP, T N , and F N denote True Positive, False Positive, True Negative, and False Negative, respectively <ref type="bibr" target="#b64">[65]</ref>. The meaning of these terms for system-call-based HIDS is described below:</p><p>â€¢ True Positive (T P) â†’ The label of a sequence is positive, and the prediction is also positive. The anomalous sequence is alarmed properly. â€¢ False Positive (FP) â†’ The label of a sequence is negative, but the prediction is positive. An FP or a false alarm in system-call-based HIDS indicates that a benign system call sequence is treated as an anomaly. â€¢ True Negative (T N ) â†’ The label of a sequence is negative, and the prediction is also negative. The incoming system call sequence is treated as benign properly. â€¢ False Negative (F N ) â†’ The label of a sequence is positive, but the prediction is negative.</p><p>An F N or a missed alarm indicates that the system fails to raise the alarm for an anomalous system call sequence.</p><p>Table <ref type="table" target="#tab_1">3</ref> shows the confusion matrix of these terms. FPR denotes the False-Positive Rate and T PR denotes the True-Positive Rate. In the area of IDS, T PR is equal to the detection rate (DR) and is equal to Recall; the False-Positive Rate is equal to the False-Alarm Rate (FAR) <ref type="bibr" target="#b26">[27]</ref>. F -measure is often adopted to combine Precision with Recall for evaluation:</p><formula xml:id="formula_1">F Î² = Î² 2 + 1 â€¢ Precision â€¢ Recall Î² 2 â€¢ Precision + Recall .<label>(2)</label></formula><p>Host-Based Intrusion Detection System with System Calls: Review and Future Trends 98:11</p><p>When Recall and Precision are weighted equally, Î² is equal to one. In this case, the F 1 -measure is formed:</p><formula xml:id="formula_2">F 1 = 2 â€¢ Precision â€¢ Recall Precision + Recall .<label>(3)</label></formula><p>The ROC Curve. The detection accuracy can also be evaluated with the Receiver Operating Characteristic (ROC) curve, which provides an intuitive view of the relation between FPR and T PR. The area under the ROC curve (AUC) can be a simple metric to provide an overall evaluation of the detection accuracy and can be obtained by calculating the trapezoids between each point under the ROC curve <ref type="bibr" target="#b26">[27]</ref>.</p><p>Time/Memory Complexity. The time complexity of an algorithm indicates the total time required by the algorithm, and it is commonly represented by the big O notation <ref type="bibr" target="#b26">[27]</ref>. Memory complexity of an algorithm indicates the total memory required by the algorithm.</p><p>The Challenge. Evaluation metrics presented in HIDS articles are not consistent. Sometimes only one pair of TPR and FPR values is given, and the AUC value is not shown. Therefore, standardized evaluation metrics are recommended so that comparing different research outcomes can be easier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">HIDS DATASETS</head><p>The Dilemma of HIDS Datasets. In the area of HIDS research, there are insufficient publicly available datasets for conducting experiments. Traditional HIDS datasets with system calls cannot represent contemporary Linux systems. There are many studies describing the limitations of current HIDS datasets available on the Internet <ref type="bibr" target="#b73">[74,</ref><ref type="bibr" target="#b135">137,</ref><ref type="bibr" target="#b97">99,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b77">78,</ref><ref type="bibr" target="#b74">75,</ref><ref type="bibr" target="#b1">2]</ref>. Some widely used system-call-based HIDS datasets are described below and compared in Table <ref type="table" target="#tab_2">4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Current Datasets for HIDS with System Calls</head><p>DARPA and UNM. DARPA and University of New Mexico datasets are the two most commonly used datasets for evaluation of HIDS <ref type="bibr" target="#b88">[89]</ref>. DARPA and UNM datasets were collected many years ago and may be outdated. They may contain errors and lack volume, variety, and veracity from the perspective of real-world big data <ref type="bibr" target="#b122">[124]</ref>. Those two datasets only have a few kinds of attacks with a small data scale. Therefore, they are not representative of current diversified attack methods. The DARPA dataset consists of both network and host auditing data. Maggi et al. provided a thorough analysis of the flaws and shortcomings of the DARPA dataset <ref type="bibr" target="#b73">[74]</ref>. System call traces of the DARPA dataset are relatively simple, and the UNM dataset consists of system call identifiers only. Other information such as system call arguments is removed. Therefore, traditional HIDS datasets with system calls cannot represent contemporary Linux systems.</p><p>Firefox-DS. The Firefox dataset <ref type="bibr" target="#b83">[84]</ref> is a newly developed HIDS dataset that is publicly available. Created using modern penetration testing techniques such as Metasploit, the dataset contains normal and anomalous system call traces from several programs. In Firefox-DS, normal traces are acquired by running standard executions of the Firefox Internet browser. Five up-to-date attacks such as memory corruption exploit, integer overflow attack, DOM exploit, and pointer exploit are launched against Firefox 3.5, and complete system call traces are collected. Traces are grouped according to distinct Firefox processes, and each trace contains massive system calls.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ADFA-LD.</head><p>The ADFA Linux Dataset (ADFA-LD) <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25]</ref> was created on the Linux operating system with preset vulnerabilities. The system is attacked by penetration testing tools with several contemporary attack methods. The dataset has 833 benign traces for training, 4,372 traces for analyzing the false-alarm rate, and 746 traces with six kinds of attacks for testing. The development of ADFA-LD aims to provide a new benchmark for HIDS analysis on contemporary computer systems. The ADFA-LD dataset only contains system call numbers. Therefore, comprehensive analysis  â€¢ Referred only in a few studies with system call arguments cannot be applied. Xie et al. <ref type="bibr" target="#b115">[117,</ref><ref type="bibr" target="#b117">119]</ref> provided an initial evaluation of ADFA-LD with experiments using the simple kNN classification and k-means clustering methods. They analyzed feature vectors, applied dimension reduction, and determined optimal distance functions. The experimental result shows that frequency-based algorithms save computational resources compared with short sequence-based methods. They further improved the performance and reduced the computational cost using a one-class support vector machine (SVM).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ADFA-WD. Microsoft</head><p>Windows is a widely used personal computing system. Haider et al. analyzed two complex HIDS datasets collected by Creech et al. <ref type="bibr" target="#b22">[23]</ref> for Windows, namely, the "Australian Defence Force Academy Windows Dataset (ADFA-WD)" and the "Australian Defence Force Academy Windows Dataset with a Stealth Attacks Addendum (ADFA-WD: SAA)" <ref type="bibr" target="#b43">[44]</ref>. ADFA-WD involves acknowledging "Windows-based vulnerability-oriented zero-day attacks" <ref type="bibr" target="#b43">[44]</ref> using automated penetration testing tools. As an extension of ADFA-WD, ADFA-WD: SAA is designed to test the effectiveness of HIDS against "Windows-based stealth attacks" by "crafting three stealth attacks, namely, Doppelganger, Chimera, and Chameleon" <ref type="bibr" target="#b43">[44]</ref>. These two datasets are not designed for Linux system call analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NGIDS-DS.</head><p>Haider et al. proposed a synthetical high-quality and realistic IDS dataset named the next-generation IDS dataset (NGIDS-DS) using the advantageous Ixia PerfectStorm commercial hardware platform <ref type="bibr" target="#b56">[57]</ref> and infrastructure in ADFA <ref type="bibr" target="#b44">[45]</ref>. The dataset contains 99 CSV files of labeled host logs for the design of HIDS as well as network packets for the design of NIDS. The host logs contain various information, such as the time of activities, process IDs, execution paths, and system call numbers for comprehensive system call analysis. They also assessed the quality of existing IDS datasets including DARPA and ADFA-LD with a fuzzy logic system based on the "Sugeno fuzzy inference model" <ref type="bibr" target="#b99">[101]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Dataset Customization</head><p>With the rapid evolution of system and software, due to the drawbacks of existing datasets such as DARPA and UNM, datasets relevant to the current environment of cybersecurity need to be established. Acquiring a real-world intrusion dataset is difficult, as companies often do not want to share data with the public. Therefore, researchers tend to launch experiments and generate new datasets that can represent current intrusion methods. In their experiments, normal training data can be acquired by gathering benign system call traces during the normal execution of supervised processes. Intrusive testing data can be acquired by collecting attack system call traces caused by applying penetration tools such as Metasploit [95] on different kinds of vulnerabilities according to their Common Vulnerabilities Exposures (CVE) ID <ref type="bibr" target="#b21">[22]</ref>. Table <ref type="table" target="#tab_3">5</ref> compares typical system call tracing tools. Table <ref type="table" target="#tab_5">6</ref> provides common tools for penetration testing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">The Challenge</head><p>In this section, we have analyzed the issues of traditional HIDS datasets, introduced several contemporary datasets for HIDS research, and offered techniques to generate new datasets. Researchers should make significant efforts to guarantee that all generated public datasets have high quality, which ensures that relevant studies will not be misled by the datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE APPLICATION OF SYSTEM-CALL-BASED HIDS ON EMBEDDED SYSTEMS</head><p>Embedded systems such as smartphones are gradually attracting users' attention due to their computational capability and portability. Meanwhile, the issue of smartphone security has arisen. New threats are continuously occurring due to new functionalities of the smartphone. Android is a popular mobile operating system with the Linux kernel, which is similar to Linux operating systems installed on desktops <ref type="bibr" target="#b114">[116]</ref>. Android smartphones can be compromised by the same types of attacks against Linux. Conventional defensive techniques cannot be simply transferred to Android due to the embedded environment. The computational capability of smartphones is still limited for time-efficient malware detection. For Android devices, lightweight anomaly detection approaches should be developed so that the execution of detection software will not affect other applications. The detection software should conform to three design rules, i.e., accurate detection result, quick detection speed, and minimal resource usage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">The Feasibility of Applying System-Call-Based HIDS to Embedded Systems</head><p>Recently, system-call-based HIDS has been applied to embedded systems such as smartphones and is proven to be effective to detect intrusive behaviors. Feizollah et al. proposed a review of recent feature selection approaches for developing an effective malware detection system of mobile devices <ref type="bibr" target="#b29">[30]</ref>. Features are categorized into four types, namely, "static features, dynamic features,  The strace monitors communications including system calls between processes and the Linux kernel.</p><p>The operation of strace is promoted by ptrace.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Linux</head><p>KProbes and DProbes 2</p><p>KProbes and DProbes can debug errors and monitor events in Linux kernel.</p><p>KProbes is the built-in mechanism of DProbes, which can insert probes dynamically into running code modules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Linux</head><p>SystemTap 3  SystemTap reduces the load of collecting information of the operating system, which helps to analyze functional errors.</p><p>The command line interface and scripting language are simple to use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Linux ltrace 4</head><p>Similar to strace, ltrace can monitor and record system calls invoked by a running process.</p><p>ltrace can also intercept and print the system calls.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Linux</head><p>LTTng 5  The "Linux Trace Toolkit next generation (LTTng)" is a modern open-source tracing platform, which consists of kernel modules to simultaneously trace the Linux kernel.</p><p>LTTng also has a kernel module to trace shell scripts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Linux</head><p>BSM 6  Solaris Basic Security Module (BSM) is an auditing tool provided by SUN Microsystems for system security. It provides comprehensive auditing of system processes.</p><p>BSM offers methods to check the history logs of actions and events.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Solaris</head><p>Truss 7  Truss can execute a specified command, invoke system calls, and produce a trace, each line of which contains a system call name with arguments and values.</p><p>Truss is developed for other Unix-like operating systems except for Linux.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Solaris</head><p>UnixWare AIX FreeBSD DTrace 8  DTrace is a real-time debugging tool for kernel and application errors. DTrace provides a full description of the executing system.</p><p>Some fine-grained information can be provided, e.g., an argument log or a process list.</p><p>FreeBSD NetBSD OpenBSD Mac OS ktrace 9  The ktrace is a utility that traces interactions including system calls between kernel and executing processes.</p><p>The traced information can be dumped to external hard drives and saved as files for debugging and analysis. The ktrace is similar to strace.</p><p>FreeBSD NetBSD OpenBSD Mac OS hybrid features and applications metadata" <ref type="bibr" target="#b29">[30]</ref>. System calls and network traffic are "two main types of dynamic features" <ref type="bibr" target="#b29">[30]</ref>. Many researchers used system calls as dynamic features as applications use system calls to communicate with the mobile operating system <ref type="bibr" target="#b85">[86]</ref>. They surveyed 100  â€¢ Dictionary of vulnerabilities â€¢ Provides identifiers of publicly known cybersecurity vulnerabilities Metasploit <ref type="foot" target="#foot_2">11</ref>â€¢ Penetration testing framework â€¢ Enables exploiting vulnerabilities Kali Linux <ref type="foot" target="#foot_3">12</ref>â€¢ Advanced penetration testing platform</p><p>â€¢ Provides built-in penetration testing tools VirusShare <ref type="foot" target="#foot_4">13</ref>â€¢ Malware repository â€¢ Provides samples of live malicious code VX Heaven <ref type="foot" target="#foot_5">14</ref>â€¢ Virus repository â€¢ Provides massive continuously updated virus samples and information Contagio <ref type="foot" target="#foot_6">15</ref>â€¢ Malware repository â€¢ Provides contemporary malware samples â€¢ Provides malware analysis AVCaesar <ref type="foot" target="#foot_7">16</ref>â€¢ Website of malware analysis â€¢ Provides a malware repository â€¢ Provides multiengine malware analysis VirusTotal <ref type="foot" target="#foot_8">17</ref>â€¢ Online multiengine malware detector</p><p>â€¢ Enables analysis of suspicious files and URLs articles between 2010 and 2014, discovering 42% of all research works utilized dynamic features. System calls were found to be the most regular dynamic features used.</p><p>Static/Dynamic Analysis. Static analysis and dynamic analysis are two primary analysis methods for smartphone malware detection <ref type="bibr" target="#b30">[31]</ref>. Static analysis is related to examining static patterns of applications such as source codes to address malicious behaviors without executing. Static analysis may not be valid after codes are obfuscated. Dynamic analysis is about executing applications in a safe and isolated sandbox to evaluate their running behaviors. Static and dynamic analysis can work together to enhance malware detection capabilities. Blasing et al. proposed "Android Application Sandbox (AASandbox)" that implements "static and dynamic analysis on Android programs" for malware detection <ref type="bibr" target="#b12">[13]</ref>. Static prechecks are performed before the installation of Android applications. Dynamic analysis is about running the application in an isolated sandbox, and system calls are traced. The sandbox can be deployed in the cloud for distributed and resourceintensive execution.</p><p>Crowdroid. Burguera et al. provided a lightweight malware detection system called Crowdroid, which is available on Google Play <ref type="bibr" target="#b15">[16]</ref>. They indicate that monitoring system calls can provide detailed low-level information, which is feasible to determine malware behaviors. The system  includes an overall framework for the collection of system call traces and the analysis of data; the two-means clustering algorithm is applied to classify benign and intrusive applications <ref type="bibr" target="#b15">[16]</ref>. Users will be notified if an abnormal system call trace is detected by the system. The experimental results confirm the feasibility of collecting and analyzing system calls for malware detection. They discover that system calls open, read, access, chmod, and chown are mostly referred by malware <ref type="bibr" target="#b15">[16]</ref>. They also provide a brief survey, demonstrating that many malware detection approaches are based on NIDS and HIDS techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Enhancement with Hardware</head><p>Software-based HIDS may not show ideal performance against sophisticated intrusion techniques. Considering this issue, Das et al. proposed the first hardware-enhanced system-call-based HIDS framework named GuardOL with machine-learning approaches to detect malicious behaviors toward the embedded systems <ref type="bibr" target="#b25">[26]</ref>. They claimed that hardware-based HIDS was resistant to malicious software. Attacks are launched using Ubuntu OS, and malware samples are downloaded from public malware repositories available on the Internet. Benign traces with arguments are collected from the normal operation of Linux applications with strace. For feature extraction, FCM is developed, which is a frequency-centralized model to comprehensively classify system calls with arguments to reduce the false-alarm rate. Offline analysis and online hardware implementation are conducted in FPGA. An artificial neural network model named multilayer perceptron is selected from a couple of machine-learning classifiers and trained in Weka with features extracted from benign and malicious traces. Ten-fold cross-validation is used to test the accuracy of prediction <ref type="bibr" target="#b25">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Cloud-Based HIDS with System Calls for Embedded Systems</head><p>Deploying system-call-based HIDS as a two-tier platform shown in Figure <ref type="figure" target="#fig_6">2</ref> is prevalent. The first tier is the client interface installed on users' devices for data collection. The second tier is a cloudbased and centralized data analytics unit. Detection feedback processed by the centralized unit can be returned to users' devices in a timely manner, and further defensive actions can be launched.</p><p>Dual Defense Protection. Su et al. proposed a "dual defense protection framework" for Android malware detection <ref type="bibr" target="#b98">[100]</ref>. Applications can be uploaded to servers in the cloud for verification. The framework has two main components: a system call monitoring tool and network monitoring tool. The system call monitoring tool is utilized for evaluation of the "new application for potential malware," and the network monitoring tool is applied to solve the false-negatives problem <ref type="bibr" target="#b98">[100]</ref>. The experiments show that the framework produces high detection accuracy with machinelearning classifiers. The Weka tool is used for experiments; the random forest classifier in the tool performs better than the J.48 classifier, achieving accuracies of 99.2% and 94.2%, respectively.</p><p>The Challenge of Deployment in Cloud. Although many research works have proven that it is feasible to transfer detection applications and algorithms to the cloud environment, it has to guarantee that the detection mechanisms in the cloud and the smartphone can be synchronized at all times. Therefore, the detection can be performed in a timely manner, and further responses to the malware will not be delayed.</p><p>Host-Based Intrusion Detection System with System Calls: Review and Future Trends 98:17</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">FUTURE RESEARCH TRENDS OF HIDS</head><p>In previous sections, we concentrated on the review of HIDS development. In this section, future research trends of HIDS are discussed regarding three aspects, namely, the reduction of falsepositive rate, the improvement of detection efficiency, and the enhancement of collaborative security. Possible challenges of these three aspects are discussed. This section aims to inspire researchers in the community to collaboratively push forward the frontier of HIDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Reduction of False-Alarm Rate</head><p>False alarms may consume and waste human resources of security personnel, as it is their responsibility to take appropriate actions on each intrusion alarm. Therefore, a high false-alarm rate can affect the performance of HIDS and has to be lowered down to a minimal level to save resources. Recently, researchers have tried multiple ways to reduce the false-alarm rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">System Call Arguments. Although Forrest et al. initially eliminated all arguments of sys-</head><p>tem calls to test the performance with that simple assumption, research works have shown that modeling system call arguments and return values together can enhance the detection accuracy and lower the false-alarm rate. Mutz et al. "applied multiple detection models to system call arguments," and anomaly scores from each model are combined into an overall score for judgment of anomalies <ref type="bibr" target="#b86">[87]</ref>. Results have shown not only that taking system call arguments to train Bayesian networks can improve the detection accuracy but also computation and memory resources can be saved as well. Maggi et al. <ref type="bibr" target="#b73">[74]</ref> also indicated that system call arguments could also contain anomalies, and they provided an unsupervised system that analyzes system call traces and arguments. Das et al. developed FCM, a frequency-centralized model, to comprehensively classify system calls with arguments to reduce the false-alarm rate <ref type="bibr" target="#b25">[26]</ref>.</p><p>The Problem. Although using system call arguments or other host logs can reduce the false-alarm rate, it may deviate from the simple hypothesis that Forrest initially made on system-call-based HIDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Improve Feature Extraction Approaches.</head><p>Currently, novel feature extraction methods are being developed to achieve more effective detection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Contiguous and Discontiguous System Call Patterns. Creech et al. designed a new HIDS approach</head><p>with syntactic development and semantic hypothesis to lower the missed-alarm rate and falsealarm rate <ref type="bibr" target="#b24">[25]</ref>. Word and phrase dictionaries are formed with various-length system call numbers. They trained an extreme learning machine (ELM) <ref type="bibr" target="#b55">[56]</ref> for anomaly detection and achieved a notable detection rate and false-alarm rate. The result shows the effectiveness of handling mimicry attacks. Decision engines SVM, HMM, and ELM are applied for training and prediction. The approach is tested with DARPA, UNM, and ADFA-LD datasets.</p><p>Integer Data Zero-Watermarking. To select representative features from system call traces, Haider et al. proposed an "integer data zero-watermarking algorithm" to extract abstract hidden reliable or representative features from system call traces of the ADFA-LD and DARPA datasets <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b47">48]</ref>. The proposed method in conjunction with multiple machine-learning algorithms shows acceptable real-time performance regarding accuracy and processing time.</p><p>Mutual Information. In the area of NIDS, considering that redundant features existing in big data may affect the efficiency and correctness of the classification result, Ambusaidi et al. <ref type="bibr" target="#b6">[7]</ref> proposed a practical method with mutual information-based preprocessing and feature extraction for NIDS to deal with issues caused by duplicated and worthless features in the dataset. This method is potentially applicable in HIDS. The algorithm proposed helps to extract more critical features from raw  data and can deal with linearly as well as nonlinearly dependent features. They also implemented an IDS with Least Square SVM (LSSVM-IDS), which is combined with features extracted using the mutual information-based approach. The false-alarm rate is lowered, and the computational resources are saved. Figure <ref type="figure" target="#fig_8">3</ref> represents their proposed system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Refine the Decision-Making</head><p>Process. Nauman et al. proposed a "three-way decisionmaking approach" to reduce the false-positive rate <ref type="bibr" target="#b87">[88]</ref>. The model is based on rough set theory with three options, namely, acceptance, rejection, or deferment. If the information of an intrusion is insufficient, then a decision will be deferred. "Game-theoretic rough sets (GTRS)" and "information-theoretic rough sets (ITRS)" <ref type="bibr" target="#b87">[88]</ref> are exploited to construct the model, and the UNM dataset is taken for the experiment. A minimum 8.5% false-positive rate is achieved with the proposed approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.4">Threshold Optimization.</head><p>The threshold of HIDS controls the sensitivity. If the predicted value of an anomalous system call sequence is higher than a particular threshold, then an intrusion alarm will be triggered. Low sensitivity may cause a high missed-alarm rate, yet high sensitivity may cause a high false-alarm rate. A large number of false alarms can consume additional maintenance time of security personnel. Therefore, optimizing the threshold of HIDS is important and is a challenging work that requires knowledge and experiences. Laszka et al. <ref type="bibr" target="#b66">[67]</ref> discussed related problems of generating the optimal threshold and built an algorithm for threshold selection. ADFA-LD is used for evaluation, showing that the proposed algorithm achieves a better result than the "optimal uniform strategy" and "locally optimal strategy" <ref type="bibr" target="#b66">[67]</ref>. <ref type="bibr" target="#b49">[50]</ref> based on HMM and the enumerating sequences method using the temporal characteristics. They further proposed a hybrid HIDS scheme <ref type="bibr" target="#b50">[51]</ref> that integrates HMM with the enumerating sequences method using a "fuzzy inference engine" to decrease the false-alarm rate. HMM is trained by adopting a modified HMMMOSA scheme <ref type="bibr" target="#b27">[28]</ref> with optimal initialization of parameters, which reduces training time and the model volume. Input sequence parameters used by the "fuzzy inference engine" are "generated by HMM and normal databases" <ref type="bibr" target="#b50">[51]</ref> as two detection engines. Fuzzy sets are created empirically, and fuzzy rules obtain assumptions from the two detection engines. For each testing input, a three-phase fuzzy reasoning process is applied to generate an output value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.5">The Integration of Decision Engines.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fuzzy Inference Engine. Hoang et al. built a "multi-layer model of program behaviors"</head><p>Integration in the ROC Space. To reduce false alarms, Khreich et al. proposed a multiple-detector HIDS that integrates the decisions from various traditional detectors such as STIDE, HMM, and One-Class SVM with "Boolean combination in the Receiver Operating Characteristics (ROC) space" <ref type="bibr" target="#b63">[64]</ref>. Experiments on the Linux dataset (ADFA-LD) and the Window dataset (CANALI-LD <ref type="bibr" target="#b16">[17]</ref>) show that the proposed method can reduce the false-alarm rate and substantially increase the true-positive rate on both of the two datasets <ref type="bibr" target="#b63">[64]</ref>. To the best of our knowledge, when it comes to the detection accuracy of ADFA-LD, currently their work may achieve the state-of-the-art performance.</p><p>6.1.6 Long Short-Term Memory. Long short-term memory (LSTM) is an architecture of the recurrent neural network (RNN) first presented by Hochreiter et al. <ref type="bibr" target="#b51">[52]</ref>. The LSTM network can lengthily persist temporal information and therefore is adaptive in the situation when there are notable time intervals between significant events within input sequences. Gates included within an LSTM block are helpful to determine when it is necessary to remember the input value and when it should retain, discard, or output the relative value.</p><p>Hierarchical LSTM. Although LSTM can handle relatively long sequences, different from other areas in which LSTM is employed such as natural language processing, a system call trace may contain thousands of system calls, which make corresponding long time dependencies difficult to capture by LSTM. This dilemma may be assisted by hierarchical LSTM, which has a hierarchical structure that can model the temporal transitions between single system calls as well as system call sequences with different granularities <ref type="bibr" target="#b90">[91]</ref>.</p><p>The Attention Model and Review Network. For implementing LSTM on system call traces for anomaly detection, the prediction will rely on the final hidden state. One assumption, in this case, is that the network has to encode all essential information of system call traces into equal-sized vectors, which may make it difficult to manage long traces, especially those exceeding the size most training traces. Instead of compressing all information of system call traces into fixed-length vectors, the attention model <ref type="bibr" target="#b118">[120]</ref> can encode input traces into a chain of vectors, and for prediction, a subset is flexible to be chosen from the chain accordingly, which may perform better on large traces generated by programs. Yang et al. indicated that the attention model operated sequentially and proposed a review network, which is an extension of the encoder-decoder framework, to augment global modeling capability <ref type="bibr" target="#b124">[126]</ref>.</p><p>The Challenge of LSTM. LSTM has gained notable advances in various sequence processing tasks such as speech processing. Thus, LSTM is potentially applicable in the area of system-call-based HIDS. However, the challenge is that modeling of LSTM is often complicated and computationally expensive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.7">Challenges Regarding This</head><p>Trend. Controlling the false-alarm rates is still the most significant challenge and the critical point for both NIDS and HIDS, regardless of the kind of platform on which HIDS is deployed. Given the wide range of normal behaviors of the hosts in a network, it is possible that a detected anomaly is normal (i.e., legitimate). The false-positive rate can be affected by many factors, including feature selection, detection engine design, and threshold optimization. As new Linux applications and functions keep being developed, the generated system call traces can be unstable and miscellaneous. Therefore, how to preprocess the raw dataset and select the right features can influence significantly the performance of the detection system. Adjusting the detection threshold is also an arduous work, and it may require decisions from experienced security experts. Besides the quality of the designed detection engine, another essential factor that can affect the detection accuracy and false-positive rate is the quality of the training dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Improvement of Detection Efficiency</head><p>Detection efficiency is another significant issue in real-time intrusion detection. Detection speed and accuracy are usually difficult to make well balanced. When there is a heavy load of the Linux kernel operation, it may take a significant amount of time to process the system call traces generated during a short period. Intermediate datasets may be too massive to be saved in the RAM of a single machine. In this case, the real-time detection of intrusions may be delayed. Researchers have been seeking methods to improve the detection efficiency of HIDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.1">Refine the Dataset Quality.</head><p>Besides the detection accuracy, the quality of datasets can also influence the efficiency of detection engine training. Hu et al. provided an acceleration method of the HMM incremental training process, which reduces half of the training time for the UNM dataset <ref type="bibr" target="#b54">[55]</ref>. During the preprocessing period, near-duplicate sequences of system calls are deleted. The detection rate of anomalies remains almost unchanged, whereas the false-alarm rate is downgraded as more than half of the original data are eliminated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.2">Improvement of Decision Engines. Kernel State Modeling. Murtaza et al. developed a trace abstraction technique called Kernel State</head><p>Modeling (KSM) to reduce the processing time and false-alarm rate of HADS by representing system call traces as traces of kernel modules <ref type="bibr" target="#b83">[84,</ref><ref type="bibr" target="#b84">85]</ref>. Abstract traces generated are used as the training data of previous approaches, such as STIDE and HMM. Experiments are launched with UNM, Firefox-DS, and ADFA-LD datasets. The result shows a lower false-alarm rate and less execution time. Their later work presented a creative and extensible Eclipse-based open-source HADS framework named the automated anomaly detection framework (Total ADS) <ref type="bibr" target="#b82">[83]</ref>, which can train a variety of decision engines with normal system call streams, raise anomaly alarms, and perform visualization automatically. The proposed framework allows training and testing of three remarkable HADS methods, namely, STIDE, HMM, and Kernel State Modeling (KSM) <ref type="bibr" target="#b83">[84]</ref>, with real-time system call streams.</p><p>Real-Time Self-Structuring Method. Recently, Chen et al. proposed a real-time self-structuring learning framework named anomaly recognition and detection (AnRAD) for unsupervised anomaly detection of streaming data <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b19">20]</ref>. They aimed to exploit the computational capability of parallel computing platforms efficiently. The feature dependencies of the DARPA and ADFA-LD datasets are analyzed, respectively. Unlabeled system call data are used to train an efficient confabulation network with the self-structuring method. The result shows high-speed incremental learning of data streams as well as acceptable detection accuracy. The knowledge base can be updated regularly and rapidly. Meanwhile, the method implemented on parallel architectures obtains apparent speedups, with ideal performance and memory efficiency.</p><p>Nested-Arc-HSMM. Concerning the big data issue caused by a significant amount of system call traces, Haider et al. proposed a HIDS for hosts in the cloud environment by integrating "state summarization" and the novel "nested-arc hidden semi-Markov model (NAHSMM)" <ref type="bibr" target="#b46">[47]</ref>. Designed according to the hierarchical HMM <ref type="bibr" target="#b31">[32]</ref> structure, the NAHSMM has two layers of hidden Markov chains. Tested with NGIDS-DS, the proposed method shows acceptable detection accuracy, training efficiency, and scalability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.3">Capability of Cloud</head><p>Computing. Currently, cloud computing provides a powerful infrastructure for scalable large-scale data processing by using its flexible computation and storage capability. With cloud computing, large-scale computation and storage resources such as RAMs, multiple GPUs, or solid-state drives can be allocated based on requirements. Therefore, the capability of cloud computing can be utilized to strengthen the performance of HIDS. Intrusion detection algorithms can run in the cloud to process real-time high-volume system call streams. Acceleration methods for HIDS used in the community can also be integrated into cloud computing platforms. Table <ref type="table" target="#tab_6">7</ref> provides an overview and comparison of public/open-source cloud services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.4">Open-Source Big Data Tools.</head><p>The development of scalable big data processing tools such as Hadoop shows high scalability for big data processing <ref type="bibr" target="#b134">[136,</ref><ref type="bibr" target="#b133">135,</ref><ref type="bibr" target="#b131">133,</ref><ref type="bibr" target="#b123">125,</ref><ref type="bibr" target="#b121">123,</ref><ref type="bibr" target="#b120">122]</ref>. These tools </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Public cloud services â†’ Three forms</head><p>Public cloud services usually have three forms, namely, "Software as a Service (SaaS), Platform as a Service (PaaS), and Infrastructure as a Service (IaaS)" <ref type="bibr" target="#b61">[62]</ref>:</p><p>â€¢ SaaS utilizes the Internet to provide services and applications. Most SaaS applications are accessible and controllable through a web browser.</p><p>â€¢ PaaS provides an efficient cloud-based built-in middleware on which applications can be developed. â€¢ IaaS presents in-cloud servers, storage, and network hardware for users to rent instead of purchasing physical servers. IaaS users are responsible for managing allocated virtual machines. â†’Google Compute Engine and Amazon EC2 are two commercial providers of public cloud services. Public cloud â†’ Advantages â€¢ Scalability. Deploying clusters in the public cloud is more flexible and scalable compared with deploying on physical machines. â€¢ Efficiency. Users pay for demanded computational capacity and time. The time required to launch instances and scale computational capacity can be significantly reduced. â€¢ Flexibility. Demanded computational resources can be flexibly allocated via a variety of console interfaces on the web page. Users can quickly boot, control, and manage various types of virtual machines (instances) with stable performance as required. â€¢ Reliability. Deploying HIDS in public cloud services provided by trusted large IT corporations such as Amazon and Google can be more reliable and less vulnerable compared with local networks, considering intruders may attack the intrusion detection software based on the vulnerabilities. Public cloud â†’ Disadvantages â€¢ Cost. Uploading and downloading large amounts of data may cause additional data transfer cost charged by public cloud providers. â†’Nevertheless, while software and hardware technologies for cloud computing are still being developed, the cost may gradually decrease, and the dependability may progressively increase with improving security measures. Open-source cloud â†’ Advantages â€¢ Cost-effectiveness. Open-source software usually is freely available on the Internet.</p><p>â€¢ Flexibility. As source codes are available, researchers can build the cloud platforms themselves and customize the services to fulfill their functional requirements. Open-source cloud â†’ Disadvantages Open-source cloud software is often developed by unpaid developers in loosely organized communities. Therefore, there are also some disadvantages.</p><p>â€¢ Usability. Open-source cloud platforms are often cumbersome to deploy and do not have user-friendly APIs, which may influence the efficiency and effectiveness of working. Users usually cannot get instant customer support and therefore they need more effort of training and learning. â€¢ Compatibility. As the open-source cloud software is still under development, software with different versions are often not compatible with each other. Thus, the entire cloud platform may not be operating sometimes. â€¢ Cost. Although open-source cloud platforms are usually free for the services, the time-consuming installation and maintenance may cause other forms of expenses. â€¢ Security. Open-source software is often criticized regarding security, as the source codes are exposed to potential attackers. If a HIDS is deployed in an open-source cloud, then the system itself may be vulnerable.  are designed to perform underlying resource management such as task and fault-tolerant scheduling, providing simplified APIs to data engineers. Data mining tasks, especially for streaming data, can be distributed across clusters by these tools to achieve scalability. Fault tolerance is another important issue. With these big data tools, a failed job can be taken over by another worker rather than rolling back to the beginning and computing again, which saves computational time. Therefore, the integration of cloud computing and big data processing tools can provide a new vision for solving security problems. A set of open-source big data tools applicable for HIDS are described below and compared in Table <ref type="table" target="#tab_7">8</ref>.</p><p>Apache Hadoop. Hadoop is a popular open-source distributed big data processing and storage framework <ref type="bibr" target="#b94">[96]</ref>. Next-generation MapReduce on YARN is the computing framework, and HDFS is the storage framework. HDFS can be used as long-term storage for HIDS results because of the fault-tolerant capability.</p><p>Apache Spark. Spark is an in-memory framework for distributed big data processing <ref type="bibr" target="#b78">[79]</ref>. Different from MapReduce, intermediate datasets in Spark can be cached into distributed memory, which is reasonable for iterative statistical machine-learning algorithms. Spark has a master Host-Based Intrusion Detection System with System Calls: Review and Future Trends 98:23 Fig. <ref type="figure">4</ref>. A standard Spark cluster <ref type="bibr" target="#b38">[39]</ref>.</p><p>driver program, which controls its workers on a cluster. Consequently, this framework is a considerable solution for processing large-scale system call traces. Resilient Distributed Dataset, or RDD <ref type="bibr" target="#b129">[131]</ref>, represents Spark's fault-tolerant distributed dataset abstraction. Lineages of RDDs are represented by a Directed Acyclic Graph (DAG); if one partition of an RDD is lost, the DAG has the record of how that partition is acquired from other partitions <ref type="bibr" target="#b128">[130]</ref>. Therefore, it only needs to recompute that partition according to its lineage, instead of recomputing the whole DAG again. Figure <ref type="figure">4</ref> shows the structure of a standard Spark cluster. Spark currently can run on three kinds of cluster managers, namely, Standalone, Mesos, and YARN. Recently, for deep learning acceleration, utilizing Spark in the cloud environment shows more flexibility compared with traditional methods. Philipp et al. introduced SparkNet <ref type="bibr" target="#b81">[82]</ref>, which implements a deep neural network training framework on Spark, including interfaces of loading data from other RDDs and the connection to Caffe <ref type="bibr" target="#b58">[59]</ref>.</p><p>Spark Streaming. Spark streaming is a scalable fault-tolerant streaming data processing framework <ref type="bibr" target="#b130">[132]</ref>. System call traces are generated based on time intervals of hosts, which conform to the computing mechanism of Spark Streaming. To obtain efficient fault tolerance and low latency during real-time HIDS implementation, Spark Streaming can divide the incoming real-time streaming system call traces into small RDD batches according to micro time intervals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Alluxio.</head><p>Alluxio is an open-source in-memory distributed storage system that has a masterworkers structure similar to HDFS <ref type="bibr" target="#b34">[35]</ref>. As a component of the real-time scalable HIDS, Alluxio can be deployed in the same cluster with Spark. Alluxio was initially designed for solving the problem of on-heap storage in Spark. With off-heap storage, objects are stored out of the heap, which can avoid FGC in JVM. Alluxio can be an off-heap storage solution for real-time Sparkbased HIDS implementation.</p><p>Apache Kafka. Kafka is a contemporary distributed messaging platform <ref type="bibr" target="#b36">[37]</ref>. In the real-time HIDS data processing framework, Kafka can operate as an intermediary between multiple hosts and the Spark cluster <ref type="bibr" target="#b95">[97]</ref>, propagating system call streams from origin to destination.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scalability of Algorithms in Spark.</head><p>In the current big data environment, from the perspective of real-time implementation, the scalability of an algorithm should be ensured to deal with the increasing amount of data. Table <ref type="table" target="#tab_8">9</ref> discusses the scalability of a set of data mining algorithms in big data tools, particularly for system call-based HIDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.5">Challenge Regarding This Trend.</head><p>Although the detection efficiency of HIDS can be improved with cloud computing and big data tools, how to effectively process massive HIDS data in a centralized and collaborative manner is still challenging.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scalability of preprocessing and feature selection</head><p>â€¢ System call traces are capable of being distributed evenly to Spark workers so that data preprocessing can be operated in parallel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scalability of and clustering</head><p>â€¢ The scalability of the classification-or clustering-based HIDS method is capable of being accomplished by MLlib, which is a machine-learning library on Spark that helps to accelerate distributed machine-learning algorithms.</p><p>â€¢ Classification models such as logistic regression, decision tree, and random forest and clustering models such as k-means, latent Dirichlet allocation, and Gaussian Mixture Model can be trained and predicted to distribute using MLlib <ref type="bibr" target="#b65">[66]</ref>. â€¢ It is flexible to implement saving and loading RDDs of trained models with off-heap storage, which is appropriate for real-time HIDS prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scalability of normal databases</head><p>â€¢ The design of Spark is suitable for the method of STIDE.</p><p>â€¢ In Spark, normal system call sequences can be either cached temporarily in memory or stored permanently in external storage such as HDFS. â€¢ As massive system call sequences may result in a large-scale traditional database, it may be inefficient to launch a database query when a new short system call sequence comes. Therefore, NoSQL databases can be utilized. NoSQL databases allow data accesses based on key-value pairs and values can be returned by the keys passed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Enhancement of the Collaborative Security</head><p>Cloud computing and big data tools can be utilized to improve the detection efficiency of systemcall-based HIDS. Currently, researchers are focusing on constructing comprehensive real-time HIDS for data center/cloud platforms. Moreover, to enhance the collaborative security, it is a significant trend that HIDS should combine with NIDS to form future CIDS.</p><p>Definition of Data Center. A data center, which contains computer systems, network systems, and database systems, can manage all data of a modern enterprise <ref type="bibr" target="#b95">[97]</ref>. A data center is composed of a group of physical hosts. Virtual hosts are deployed on each of the physical hosts. A virtual host is an operating system administrated by the virtual machine monitor (VMM), which is a program installed on a host system that helps one physical host run on various computing environments. Applications such as databases, DNS servers, and web servers are usually distributed across multiple virtual hosts.</p><p>Threats of a Data Center. The comprehensive deploy mode of a data center can attract advanced intrusions. Virtualization technologies applied in a data center have led to the occurrence of new attack methods against vulnerabilities in virtual machines deployed on physical hosts. Hackers can exploit those vulnerabilities to set up Trojans and then obtain advanced system priorities or obtain the private information of data center users. The computational capacity of a data center may be taken by attackers to launch DDoS attacks toward the infrastructure of the data center. By exploiting a compromised virtual machine, an intruder can perform intrusions toward more VMs, the virtual machine monitor, or the operating systems of physical machines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.1">Current System-Call-Based HIDS Approaches for Virtual Hosts.</head><p>System-Call Capturing. From the perspective of HIDS, to deal with intrusions against a large data center, auditing data generated from hosts or virtual hosts of a data center need to be gathered for intrusion analysis. Pfoh et al. designed a virtual machine introspection-based framework to capture and monitor system calls in real time <ref type="bibr" target="#b91">[92]</ref>. This framework is based on a modified kernel-based virtual machine (KVM) and is segregated from guest OSs. Approaches for trapping desired events of system calls to the hypervisor are designed. Interrupt-based, syscall-based, and sysenter-based system calls are supported <ref type="bibr" target="#b91">[92]</ref>. Users can control the granularity of tracing the system call data.</p><p>Bag of System Calls. As the public IaaS cloud environment is vulnerable to multiple novel intrusions, Alarifi et al. proposed a "bag of system calls" method to detect anomalies, particularly for mimicry attacks <ref type="bibr" target="#b4">[5]</ref>. Experiments are conducted via Linux KVM, and system calls are collected from virtual machine user programs to guarantee the fine granularity. A normal profile is created for the experimental virtual machine. For the bag-of-system calls, sequence length 10 has the optimal detection result, whereas length 6 has the best time efficiency. Their next experiment <ref type="bibr" target="#b3">[4]</ref> uses HMM with predefined capacity as the normal profile. Virtual machines are first running normally so that normal system calls can be gathered. Normal traces are the input for training, and malicious system calls generated by a DoS attack are for testing. The size of dataset required for classifier training and testing is small in their experiment as only simple services are installed on virtual machines and behaviors in public cloud are assumed static. Virtual machines are treated as black boxes by the premise that VMs are only reachable by IaaS users.</p><p>Intrusion Severity Analysis. Arshad et al. proposed an intrusion severity analysis method <ref type="bibr" target="#b8">[9]</ref>. It assumes that system hardware is error-free. Decision trees are used in this method, as they are simpler to manipulate and require less training data than neural networks. A Virtual Machine System Call Handler collects and passes system calls to an anomaly or misuse intrusion Detection Engine, which may consult an Attack Database with existing intrusion signatures or a Virtual Machine Profile Engine for anomalies. A Virtual Machine Profile Engine can handle security profiles of VMs. Malicious system calls detected by the Detection Engine are passed to the "Severity Analysis Module" <ref type="bibr" target="#b8">[9]</ref>, which assesses intrusion severity, and the result is transferred to an "intrusion response system" <ref type="bibr" target="#b8">[9]</ref> to make appropriate responses.</p><p>Structure-Based Approach. Gupta et al. developed a structure-based approach for anomalous processes detection in a private cloud environment <ref type="bibr" target="#b42">[43]</ref>. The technique is claimed to be platform independent and portable to any cloud architecture. For model initialization, structures of programs are constructed and saved in a database. Structures are identified and created with logs generated by running programs. System call traces from virtual machines are monitored, and intermediate results are saved temporarily as key-value pairs for testing. Their method is still tested on the UNM dataset due to the complexity of collection and maintenance of real-world system call data generated from the cloud. The immediate system call database of key-value pairs is built based on programs of the UNM dataset. Anomalies identified will be recorded and notified to the cloud administrator for further actions. The cloud administrator is in charge of the whole system. The complexity of this method is O (n 2 ) and the Perl hash method is adopted for further acceleration.</p><p>The First HIDS for Virtual Hosts with Spark and Kafka. To the best of our knowledge, Solaimani et al. first introduced an efficient and scalable real-time HIDS that performs comprehensive anomaly detection on various data streams such as CPU and memory performance data from virtual hosts <ref type="bibr" target="#b95">[97]</ref>. The system has two major functional modules, i.e., Message Broker with Kafka cluster and Streaming Data Miner with Spark cluster. A virtual resource manager is designed and incorporated into the data center. Various data streams such as CPU and memory performance data are periodically gathered by the system from multiple virtual hosts and delivered through Kafka to the Spark cluster for analytics. vSphere Guest SDK <ref type="bibr" target="#b108">[110]</ref> is used for continuously monitoring streaming data with the Kafka API integrated. CPU and memory usage percentages are  gathered by mpsat <ref type="bibr" target="#b40">[41]</ref> and vmstat <ref type="bibr" target="#b48">[49]</ref>, respectively. Spark utilizes its built-in machine-learning approaches on discrete input streams for anomaly detection. A two-sample scalable Chi-square test is performed with Spark. Whenever abnormal behaviors are detected, the system will inform the resource manager, and further actions will be applied to abnormal virtual hosts. Detection results are saved to the resource pool for further resource allocation. Their next experiment was conducted in a VMware cluster, which involves five VMware hypervisor server systems, and each host has three virtual machines <ref type="bibr" target="#b96">[98]</ref>. CentOS is set up on each VM. HDFS is utilized by Spark as the distributed storage system. Apache ZooKeeper is installed to manage message flow between the Kafka cluster and Spark cluster. The interactive esxtop <ref type="bibr" target="#b11">[12]</ref> utility of the VMware ESXi host provides metrics of performance, such as CPU or memory usage data. Only CPU data is taken in their experiment. The data is periodically gathered and formed into feature vectors, which are continuously recorded into a CSV file cached in the Kafka cluster for further use. VMware resource usage is shown by the performance metrics. More resources should be provided when CPU-intensive programs are executing. Unexpected resource improvement, which is considered as the anomaly, would be rendered in the performance metrics. The nonupdatable model trained with benign data is used for prediction. Anomaly information analyzed by Spark is reported to the virtual resource management module, which manages and allocates computational resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.2">Constructing a Real-Time Scalable HIDS with Big Data Tools in the Cloud.</head><p>Inspired by current research works, we propose a preliminary real-time scalable HIDS framework with big data tools in the cloud for a data center. The framework is composed of three layers described in Table <ref type="table" target="#tab_9">10</ref>. Figure <ref type="figure" target="#fig_13">5</ref> demonstrates the framework deployed on an open-source private cloud computing environment. Computing facilities such as servers, routers, and switches are basic hardware components of the cloud. The KVM <ref type="bibr" target="#b14">[15]</ref> open-source software included in the Linux operating system is used for infrastructure virtualization. A couple of virtual machines with their own virtualized hardware and Linux operating system can run on KVM; the OpenStack open-source cloud operating system is installed for resource management and interactions with applications of users <ref type="bibr" target="#b132">[134]</ref>. Administrators can control all resources via the provided dashboard. Hadoop with HDFS and YARN <ref type="bibr" target="#b35">[36]</ref> is installed to build and manage a cluster in the OpenStack-based cloud to realize scalable HIDS data processing and permanent storage. Apache Spark Streaming can run on the YARN cluster to process large HIDS data streams. Streaming system calls collected by Apache Flume <ref type="bibr" target="#b37">[38]</ref> Host-Based Intrusion Detection System with System Calls: Review and Future Trends 98:27 from hosts in the DMZ or intranet are pushed into the Kafka cluster for caching. Spark Streaming pulls system call traces accordingly from the Kafka server to analyze anomalies in a fine-grained manner. This framework can be easily extended to fulfill the requirement of new hosts set up in the data center. With a heavier data load as a result of an increasing number of hosts, Spark and Kafka clusters can be expanded, either in the way of enlarging internal distributed memory or adding more worker nodes. Furthermore, in a large data center, an overall scheduler with the highest priority controlled by security personnel is required to administer all computational resources including every single host. The scheduler should continuously monitor the complete data flow from multiple hosts to the Spark cluster eventually. If an intrusion in an individual host is detected, the Spark master can notify the scheduler to take appropriate measures on that host.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.3">CIDS for a Data Center.</head><p>For the security of a large data center with massive hosts, to achieve more powerful detection, HIDS should articulate with NIDS to compose an effective and high-throughput CIDS. The system should consist of a central analytical unit plus sensors installed on each of the physical or virtual hosts and network devices for the collection of system call traces and network packets. CIDS with MapReduce. Tan et al. provided a novel framework of CIDS with MapReduce for cloud computing systems <ref type="bibr" target="#b103">[105]</ref>. Detection software sensors named cooperative agents are installed to collaborate with HIDS and NIDS, and anomalous behaviors detected by relevant agents are reported to the central coordinator for mining attack patterns of the whole system <ref type="bibr" target="#b103">[105]</ref>. An alternative central coordinator will be used if the primary one fails. With the central coordinator, data  collected by cooperative agents can be summarized for comprehensive analysis to resist cooperative intrusions <ref type="bibr" target="#b103">[105]</ref>. Whenever anomalies are detected from cooperative agents or the central coordinator, the system administrator will be notified to take proper defensive measures. MapReduce is implemented and integrated with the proposed method for parallel summarization of data <ref type="bibr" target="#b103">[105]</ref>. The master node works as the central coordinator, and worker nodes work as cooperative agents. Figure <ref type="figure" target="#fig_15">6</ref> demonstrates the proposed framework.</p><p>The Challenge. According to <ref type="bibr" target="#b107">[109]</ref>, CIDS with a centralized unit that analyzes a complete dataset is a dependable solution for data centers. However, the scalability is limited. It lacks scalable and applicable solutions to perform distributed intrusion detection in large networks. Meanwhile, intruders nowadays tend to employ a set of social engineering approaches to launch advanced persistent threats (APTs) toward the targeted systems, which make the security problems more sophisticated. New forms of attacks are continuously created by intruders, and intrusions can occur from both of the Intranet and the Internet. Meanwhile, protecting a system is always more difficult than making attacks. Traditionally, security specialists focus on security incidents that already occurred and make relevant incident responses. This kind of negative defensive approach is not robust when confronted with advanced attacks. In this case, traditional forms of IDS including CIDS offer inadequate information about attackers and potential attacks. Innovative CIDS updates and further comprehensive threat information-sharing methods are demanded <ref type="bibr" target="#b107">[109]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.4">Sharing Threat Information to</head><p>Enhance the Collaborative Security. Currently, security specialists are seeking methods to block potential cyber attacks before they are launched to secure computer systems. Using cyber threat intelligence information sharing is effective to prevent attacks actively and can enhance the system security <ref type="bibr" target="#b10">[11]</ref>.</p><p>Structured Threat Information Feeds. The "threat information" is standardized information that can present attack patterns and relevant defensive strategies. Observation and analysis of attack patterns are necessary to prevent intrusions beforehand. Threat information for a system can be obtained from the Internet, the intranet, and trusted collaborators such as security specialists from one trusted community. Without collaboration, security specialists can hardly obtain adequate and comprehensive threat information. Threat information to be consumed is commonly interpreted as structured feeds, which are ready to be integrated into security systems such as CIDS for updating. Security specialists from one trusted community can efficiently and collaboratively study complicated HIDS incidents together by sharing structured threat information feeds. The threat information feeds are composed based on some standards.</p><p>Threat Information Sharing â†’ Standards. Recently, a set of standards has been created to facilitate automatic sharing of threat information <ref type="bibr" target="#b60">[61]</ref>. The standards such as STIX, MAEC, OVAL, and CybOX attempt to describe the threat information in machine-readable formats for automatic integration.</p><p>Threat Information Sharing â†’ Platforms. Threat information can be gathered, analyzed, and consumed automatically via some centralized platforms such as MITRE TAXII. Via such platforms, collaborators can make contributions to make threat information feeds more accurate and complete. For instance, if a host-based intrusion can be spotted in a system and related threat information feeds are shared with other collaborators, then similar attacks can be predicted. Submitting highquality threat information feeds to platforms contributes to the community. If security specialists can integrate the available high-quality threat information feeds about HIDS properly, then the security of relevant computer systems can be enhanced.</p><p>Select the Most Valuable Feeds. Determining the most valuable feeds for integration is a significant task. For a particular consumer, some of the feeds available on the platforms may not be applicable for integration. Consuming redundant feeds from commercial platforms can cause additional expenses. Consumers need to understand their requirements of security and possible varieties of intrusions they may be confronted with and select the most valuable feeds for integration to maximize the effect of defense and minimize the cost. Usually, consumers can identify the origins of feeds according to the records of platforms. Even though the platforms provide authenticated threat information feeds, consumers still need to verify their accuracy and integrity before integration.</p><p>Challenges for Threat Information Sharing. Although taking advantage of threat information sharing can be an enhancement to HIDS and CIDS, some issues need to be considered and solved by the submitters and consumers of structured threat information feeds. Submitters need to consider what kind of threat information about HIDS or CIDS should be generated as relevant standardized threat information feeds and how to generate and submit those feeds to the sharing platform. Consumers need to consider what kind of HIDS-or CIDS-related feeds should be integrated from the sharing platform and how to integrate those feeds into the local HIDS or CIDS. Some other issues also have to be considered, such as how to develop a private threat information sharing platform for internal use to protect privacy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.5">Current Practices in the Industry Regarding This</head><p>Trend. In the current industry, there are two significant improvements about HIDS: (1) The integration with other security capabilities. As HIDS usually cannot provide complete security protection to critical systems, in the current industry, HIDS is usually integrated with other essential security mechanisms, including NIDS, vulnerability assessment, and incident response. HIDS can be deployed as part of one unified security platform, on which security incidents can be aggregated and investigated. (2) The combination of the latest threat intelligence. Another significant improvement in the current industry is that HIDS is usually strengthened with the latest threat intelligence to keep up to date with emerging cyber threats. Actionable threat intelligence can be integrated into HIDS as continuous signature updates. Some typical HIDS systems deployed in the current industry are described below. McAfee. The "McAfee host intrusion prevention for desktop" provides a dynamic and complete platform that protects the system security and data confidentiality <ref type="bibr" target="#b76">[77]</ref>. The centralized console offers simple administration. With the increase in advanced threats, McAfee has integrated the cloud-based "Global Threat Intelligence" service to its HIDS to detect advanced cyber threats before attacks happen.</p><p>OSSEC. The HIDS solution "OSSEC (Open Source HIDS SEcurity)" provides services such as "file integrity checking, log monitoring, rootkit detection and active response" <ref type="bibr" target="#b105">[107]</ref>. OSSEC can help the user to implement a comprehensive HIDS across multiple operating systems with a centralized management server.</p><p>OSSIM. The "OSSIM (Open Source Security Information and Event Management)" is an opensource threat management system that integrates HIDS and NIDS with other key threat detection capabilities <ref type="bibr" target="#b89">[90]</ref>. It monitors the security of the local environment. OSSIM is a unified platform that supports multiple operating systems including Linux. OSSIM utilizes the capability of "AlienVault Open Threat Exchange (OTX)" by enabling collaborators to share the latest threat information of malicious hosts.</p><p>AlienVault USM. The "AlienVault Unified Security Managemen platform (USM)" is a commercial product that combines HIDS with NIDS and other security mechanisms in a unified platform to manage threats <ref type="bibr" target="#b5">[6]</ref>. USM can monitor the security of both local and cloud environments. The information collected by HIDS agents will be sent to the unified platform for centralized threat detection. AlienVault USM receives continuous and automatic threat intelligence updates from the community of AlienVault OTX, where collaborators can share the latest threat information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUDING REMARKS</head><p>We provide a survey of the host-based intrusion detection system with system calls, from the perspectives of its origin, algorithms, datasets, application areas, and future research trends. Instead of elaborating on every detail, the main aim of this article is trying to inspire future researchers about system-call-based HIDS and heading to CIDS with threat information sharing. When it comes to the current big data environment and the emergence of diversified cyber threats, combining multiple intrusion defense approaches to work collaboratively is the major trend for designing a robust threat-defensive infrastructure. Interdisciplinary research works can also be taken to augment the effectiveness of defense. We hope that high-quality datasets can be generated to guarantee that it is worth further investigation. Compared with choosing the optimal detection engines, data preparation and feature extraction are the decisive factors and therefore deserve more attention. Meanwhile, standardized evaluation metrics are suggested to be presented in each research work for easier comparison.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Roadmap of this article.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>98 : 6 M</head><label>986</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>98 : 10 M</head><label>9810</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>98 : 12 M</head><label>9812</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>98 : 14 M</head><label>9814</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>98 : 16 M</head><label>9816</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. A two-tier HIDS platform for mobile devices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>98 : 18 M</head><label>9818</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. LS-SVM-based intrusion detection system, modified from<ref type="bibr" target="#b6">[7]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>98 : 20 M</head><label>9820</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>98 : 22 M</head><label>9822</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>98 : 24 M</head><label>9824</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>98 : 26 M</head><label>9826</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 5 .</head><label>5</label><figDesc>Fig.5. A preliminary real-time scalable HIDS framework with big data tools in the cloud. The system call traces are from<ref type="bibr" target="#b33">[34]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>98 : 28 M</head><label>9828</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 6 .</head><label>6</label><figDesc>Fig.6. A framework of CIDS<ref type="bibr" target="#b103">[105]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>98 : 30 M</head><label>9830</label><figDesc>. Liu et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 2 .</head><label>2</label><figDesc>Three Fundamental Problems of HMM in HIDS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 3 .</head><label>3</label><figDesc>Confusion Matrix</figDesc><table><row><cell cols="3">Predicted/Actual Label Actual Intrusive Actual Benign</cell></row><row><cell>Predicted intrusive</cell><cell>TP</cell><cell>FP</cell></row><row><cell>Predicted benign</cell><cell>FN</cell><cell>TN</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 4 .</head><label>4</label><figDesc>Comparison of HIDS Datasets</figDesc><table><row><cell>Dataset</cell><cell>Type</cell><cell>Generation</cell><cell>Advantages</cell><cell>Disadvantages</cell></row><row><cell>DARPA</cell><cell>â€¢ Network and</cell><cell>â€¢ Solaris with</cell><cell>â€¢ Widely used as</cell><cell>â€¢ Few kinds of</cell></row><row><cell></cell><cell>host auditing</cell><cell>attacks and</cell><cell>the benchmark</cell><cell>attacks with</cell></row><row><cell></cell><cell>data</cell><cell>collected by</cell><cell></cell><cell>small data scale</cell></row><row><cell></cell><cell></cell><cell>BSM</cell><cell></cell><cell>â€¢ System call</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>traces are</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>simple</cell></row><row><cell>UNM</cell><cell>â€¢ System call</cell><cell>â€¢ Unix with</cell><cell>â€¢ Widely used as</cell><cell>â€¢ System call</cell></row><row><cell></cell><cell>process IDs and</cell><cell>different kinds</cell><cell>the benchmark</cell><cell>arguments are</cell></row><row><cell></cell><cell>numbers</cell><cell>of programs</cell><cell></cell><cell>removed</cell></row><row><cell></cell><cell></cell><cell>and intrusions</cell><cell></cell><cell>â€¢ Not</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>representative</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>of current</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>diversified</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>attack methods</cell></row><row><cell>Firefox-DS</cell><cell>â€¢ Normal and</cell><cell>â€¢ Firefox and five</cell><cell>â€¢ Large-scale</cell><cell>â€¢ Focuses on</cell></row><row><cell></cell><cell>malicious</cell><cell>different</cell><cell>dataset with</cell><cell>Firefox web</cell></row><row><cell></cell><cell>Firefox system</cell><cell>attacks</cell><cell>the</cell><cell>browser only</cell></row><row><cell></cell><cell>call traces</cell><cell></cell><cell>completeness</cell><cell>â€¢ Referred only in</cell></row><row><cell></cell><cell></cell><cell></cell><cell>of normal</cell><cell>a few studies</cell></row><row><cell></cell><cell></cell><cell></cell><cell>behavior</cell><cell></cell></row><row><cell>ADFA-LD</cell><cell>â€¢ Normal and</cell><cell>â€¢ Ubuntu Linux</cell><cell>â€¢ Representative</cell><cell>â€¢ Contains</cell></row><row><cell></cell><cell>malicious</cell><cell>and Metasploit</cell><cell>of contemporary</cell><cell>system call</cell></row><row><cell></cell><cell>system call</cell><cell></cell><cell>attacks</cell><cell>numbers only</cell></row><row><cell></cell><cell>traces</cell><cell></cell><cell></cell><cell>â€¢ Only has six</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>types of attacks</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>with small data</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>scale</cell></row><row><cell>NGIDS-DS</cell><cell>â€¢ Labeled host</cell><cell>â€¢ PerfectStorm</cell><cell>â€¢ A new dataset</cell><cell></cell></row><row><cell></cell><cell>logs and</cell><cell>commercial</cell><cell>that is</cell><cell></cell></row><row><cell></cell><cell>network</cell><cell>hardware</cell><cell>synthetically</cell><cell></cell></row><row><cell></cell><cell>packets</cell><cell>platform</cell><cell>realistic</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 5 .</head><label>5</label><figDesc>Comparison of System Call Tracing Tools</figDesc><table><row><cell>Tracing</cell><cell>Functional Summaries</cell><cell>Other Features</cell><cell>Platforms</cell></row><row><cell>Tools</cell><cell></cell><cell></cell><cell></cell></row><row><cell>strace 1</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6 .</head><label>6</label><figDesc>Tools for HIDS Dataset Generation</figDesc><table><row><cell>Tools</cell><cell>Categories</cell><cell>Features</cell></row><row><cell>CVE 10</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 7 .</head><label>7</label><figDesc>Overview of Public/Open-Source Cloud Services</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 8 .</head><label>8</label><figDesc>Comparison of Big Data Tools</figDesc><table><row><cell>Tools</cell><cell>Functional Summaries</cell><cell>Advantages</cell><cell>Limitations</cell><cell>For HIDS</cell></row><row><cell>Hadoop</cell><cell>â€¢ Distributed big data</cell><cell>â€¢ Large-scale static</cell><cell>â€¢ Complete dataset</cell><cell>â€¢ Long-term</cell></row><row><cell></cell><cell>processing and storage</cell><cell>data processingy</cell><cell>must be loaded</cell><cell>storage for HIDS</cell></row><row><cell></cell><cell>â€¢ Computation</cell><cell>â€¢ Fault-tolerance</cell><cell>before processing</cell><cell>results</cell></row><row><cell></cell><cell>â†’MapReduce</cell><cell>capability</cell><cell>â†’High I/O cost</cell><cell></cell></row><row><cell></cell><cell>â€¢ Storage â†’HDFS</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Spark</cell><cell>â€¢ In-memory big data</cell><cell>â€¢ Intermediate</cell><cell>â€¢ Cost may be high</cell><cell>â€¢ Preprocessing</cell></row><row><cell></cell><cell>processing</cell><cell>datasets are</cell><cell>due to the high</cell><cell>and feature</cell></row><row><cell></cell><cell>â€¢ Fault-tolerant</cell><cell>cached into</cell><cell>RAM requirement</cell><cell>extraction</cell></row><row><cell></cell><cell>distributed dataset</cell><cell>distributed memory</cell><cell></cell><cell>â€¢ Training of</cell></row><row><cell></cell><cell>abstraction â†’RDD</cell><cell>â†’Facilitates iterative</cell><cell></cell><cell>decision engines</cell></row><row><cell></cell><cell>â€¢ Lineages of RDDs</cell><cell>algorithms</cell><cell></cell><cell></cell></row><row><cell></cell><cell>â†’DAG</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Spark</cell><cell>â€¢ Scalable fault-tolerant</cell><cell>â€¢ Suitable for</cell><cell>â€¢ Predefined time</cell><cell>â€¢ Real-time</cell></row><row><cell>Streaming</cell><cell>streaming data</cell><cell>streaming system</cell><cell>intervals â†’Not</cell><cell>intrusion</cell></row><row><cell></cell><cell>processing â†’Discrete</cell><cell>call traces</cell><cell>actual real-time</cell><cell>detection of</cell></row><row><cell></cell><cell>streams</cell><cell></cell><cell>processing</cell><cell>system call</cell></row><row><cell></cell><cell>â€¢ Divide streams into</cell><cell></cell><cell></cell><cell>traces</cell></row><row><cell></cell><cell>micro-RDD batches</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>â†’Predefined time</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>intervals</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Kafka</cell><cell>â€¢ Distributed messaging</cell><cell>â€¢ Resilient to data</cell><cell>â€¢ The possibility of</cell><cell>â€¢ Intermediary</cell></row><row><cell></cell><cell>platform</cell><cell>loss â†’Data</cell><cell>message lost</cell><cell>between</cell></row><row><cell></cell><cell>â€¢ Fault-tolerant data</cell><cell>streams can be</cell><cell></cell><cell>multiple</cell></row><row><cell></cell><cell>caching</cell><cell>duplicated for</cell><cell></cell><cell>hosts and Spark</cell></row><row><cell></cell><cell>â€¢ Real-time processing of</cell><cell>backup</cell><cell></cell><cell>cluster</cell></row><row><cell></cell><cell>data streams</cell><cell></cell><cell></cell><cell>â†’Propagating</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>system call</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>streams</cell></row><row><cell>Alluxio</cell><cell>â€¢ In-memory distributed</cell><cell>â€¢ Off-heap storage</cell><cell>â€¢ Not suitable for</cell><cell>â€¢ Off-heap storage</cell></row><row><cell></cell><cell>storage system</cell><cell>â†’Avoid the problem</cell><cell>long-term storage</cell><cell>solution in</cell></row><row><cell></cell><cell>â€¢ Designed for solving the</cell><cell>of full garbage</cell><cell>â†’Data in RAM</cell><cell>real-time HIDS</cell></row><row><cell></cell><cell>problem of on-heap</cell><cell>collection (FGC) in</cell><cell>may be lost after</cell><cell>â†’Fault-tolerant</cell></row><row><cell></cell><cell>storage in Spark</cell><cell>JVM</cell><cell>services terminate</cell><cell>and efficient</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>execution</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 9 .</head><label>9</label><figDesc>Scalability of Algorithms in Big Data Tools</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 10 .</head><label>10</label><figDesc>Three Layers of a Real-Time Scalable HIDS Framework with Big Data Tools in Cloud Data collection layer â€¢ This layer collects and caches real-time system call traces generated by multiple hosts. â†’Apache Kafka can be adopted as the message broker.â€¢ In practice, sensors are installed in hosts to gather system call traces.Data analytics layerâ€¢ This layer comprehensively analyzes real-time system call traces from the data collection layer. â€¢ Spark MLlib can apply distributed machine-learning algorithms on feature vectors extracted from system call traces. Normal databases for anomaly detection can also be formed in this layer.â€¢ System call traces need to be pulled by Spark streaming from the Kafka server and compared with standard normal databases or predicted by machine-learning models. Data storage layer â€¢ This layer consists of distributed fault-tolerant data storage systems for saving and loading final detection results as well as intermediate HIDS datasets including trained machine-learning models and normal databases. â€¢ When it comes to host-based intrusion detection, given that normal databases or machine-learning models need to be regularly updated to deal with new attack methods, it requires high integrity and robustness for the storage system. Saving Spark RDDs in off-heap distributed memories can be a solution of intermediate dataset storage due to the DAG-based fault-tolerant mechanism of RDD. â†’Long-term on-disk frameworks such as HDFS and temporary in-memory frameworks such as Alluxio are included in this layer.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>ACM Computing Surveys, Vol. 51, No. 5, Article 98. Publication date: November 2018.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_1"><p>https://cve.mitre.org/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_2"><p>https://www.metasploit.com/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_3"><p>https://www.kali.org/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_4"><p>https://virusshare.com/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_5"><p>http://vxheaven.org/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_6"><p>http://contagiodump.blogspot.com.au/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="16" xml:id="foot_7"><p>https://avcaesar.malware.lu/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="17" xml:id="foot_8"><p>https://www.virustotal.com/. ACM Computing Surveys, Vol. 51, No. 5, Article 98. Publication date: November 2018.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work is supported by the China Scholarship Council.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Performance analysis of artificial neural network intrusion detection systems</title>
		<author>
			<persName><forename type="first">Mohamed</forename><surname>Abdel-Azim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Abdel-Fatah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammed</forename><surname>Awad</surname></persName>
		</author>
		<idno>II-385-II-389</idno>
	</analytic>
	<monogr>
		<title level="m">International Conference on Electrical and Electronics Engineering</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A survey of network anomaly detection techniques</title>
		<author>
			<persName><forename type="first">Mohiuddin</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdun</forename><surname>Naser Mahmood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jnca.2015.11.016</idno>
		<ptr target="https://doi.org/10.1016/j.jnca.2015.11.016" />
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="19" to="31" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Host based intrusion detection using RBF neural networks</title>
		<author>
			<persName><forename type="first">Usman</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Asif</forename><surname>Masood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Emerging Technologies, 2009 (ICET&apos;09)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="48" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Anomaly detection for ephemeral cloud IaaS virtual machines</title>
		<author>
			<persName><forename type="first">Suaad</forename><surname>Alarifi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Wolthusen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Network and System Security</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="321" to="335" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Detecting anomalies in IaaS environments through virtual machine host system call analysis</title>
		<author>
			<persName><forename type="first">S</forename><surname>Suaad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><forename type="middle">D</forename><surname>Alarifi</surname></persName>
		</author>
		<author>
			<persName><surname>Wolthusen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 International Conference for Internet Technology And Secured Transactions</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="211" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Host-based Intrusion Detection System</title>
		<author>
			<persName><surname>Alienvault</surname></persName>
		</author>
		<ptr target="https://www.alienvault.com/solutions/host-intrusion-detection-system" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Building an intrusion detection system using a filter-based feature selection algorithm</title>
		<author>
			<persName><forename type="first">Mohammed</forename><forename type="middle">A</forename><surname>Ambusaidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangjian</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Priyadarsi</forename><surname>Nanda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhiyuan</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="2986" to="2998" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Austin</forename><surname>Appleby</surname></persName>
		</author>
		<ptr target="https://sites.google.com/site/murmurhash/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A novel intrusion severity analysis approach for clouds</title>
		<author>
			<persName><forename type="first">Junaid</forename><surname>Arshad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><surname>Townend</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Xu</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.future.2011.08.009</idno>
		<ptr target="https://doi.org/10.1016/j.future.2011.08.009" />
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="416" to="428" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Data mining in intrusion detection: A comparative study of methods, types and data sets</title>
		<author>
			<persName><forename type="first">Chandrashekhar</forename><surname>Azad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vijay</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jha</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Information Technology and Computer Science (IJITCS)</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">75</biblScope>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Standardizing cyber threat intelligence information with the structured threat information eXpression (STIX)</title>
		<author>
			<persName><forename type="first">Sean</forename><surname>Barnum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MITRE Corporation</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1" to="22" />
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Knowledge</forename><surname>Vmware</surname></persName>
		</author>
		<author>
			<persName><surname>Base</surname></persName>
		</author>
		<ptr target="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1008205" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An Android application sandbox system for suspicious software detection</title>
		<author>
			<persName><forename type="first">Thomas</forename><surname>BlÃ¤sing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leonid</forename><surname>Batyuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aubrey-Derrick</forename><surname>Schmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 5th International Conference on Malicious and Unwanted Software (MALWARE&apos;10)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="55" to="62" />
		</imprint>
	</monogr>
	<note>Seyit Ahmet Camtepe, and Sahin Albayrak</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Network applications of bloom filters: A survey</title>
		<author>
			<persName><forename type="first">Andrei</forename><surname>Broder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Mitzenmacher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internet Mathematics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="485" to="509" />
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Kernel Virtual Machine</title>
		<author>
			<persName><surname>Bsd</surname></persName>
		</author>
		<ptr target="http://www.linux-kvm.org/page/Main_Page" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Crowdroid: Behavior-based malware detection system for android</title>
		<author>
			<persName><forename type="first">Iker</forename><surname>Burguera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Urko</forename><surname>Zurutuza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Simin</forename><surname>Nadjm-Tehrani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st ACM Workshop on Security and Privacy in Smartphones and Mobile Devices</title>
		<meeting>the 1st ACM Workshop on Security and Privacy in Smartphones and Mobile Devices</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="15" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A quantitative study of accuracy in system call-based malware detection</title>
		<author>
			<persName><forename type="first">Davide</forename><surname>Canali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Lanzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Davide</forename><surname>Balzarotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Kruegel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mihai</forename><surname>Christodorescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Engin</forename><surname>Kirda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2012 International Symposium on Software Testing and Analysis</title>
		<meeting>the 2012 International Symposium on Software Testing and Analysis</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="122" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Anomaly detection</title>
		<author>
			<persName><forename type="first">Varun</forename><surname>Chandola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arindam</forename><surname>Banerjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vipin</forename><surname>Kumar</surname></persName>
		</author>
		<idno type="DOI">10.1145/1541880.1541882</idno>
		<ptr target="https://doi.org/10.1145/1541880.1541882" />
	</analytic>
	<monogr>
		<title level="j">Computer Surveys</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="1" to="58" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Anomaly detection for discrete sequences: A survey</title>
		<author>
			<persName><forename type="first">Varun</forename><surname>Chandola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arindam</forename><surname>Banerjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vipin</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Knowledge and Data Engineering</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="823" to="839" />
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">AnRAD: A neuromorphic anomaly detection framework for massive concurrent data streams</title>
		<author>
			<persName><forename type="first">Qiuwen</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ryan</forename><surname>Luley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Morgan</forename><surname>Bishop</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">W</forename><surname>Linderman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qinru</forename><surname>Qiu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Neural Networks and Learning Systems</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1622" to="1636" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Self-structured confabulation network for fast anomaly detection and reasoning</title>
		<author>
			<persName><forename type="first">Qiuwen</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Morgan</forename><surname>Bishop</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><surname>Linderman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qinru</forename><surname>Qiu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 International Joint Conference on Neural Networks (IJCNN&apos;15)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Common Vulnerabilities and Exposures</title>
		<ptr target="https://cve.mitre.org/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
		<respStmt>
			<orgName>The MITRE Corporation</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Developing a High-Accuracy Cross Platform Host-Based Intrusion Detection System Capable of Reliably Detecting Zero-Day Attacks</title>
		<author>
			<persName><forename type="first">Gideon</forename><surname>Creech</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
		<respStmt>
			<orgName>University of New South Wales</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Dissertation. PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Generation of a new IDS test dataset: Time to retire the KDD collection</title>
		<author>
			<persName><forename type="first">Gideon</forename><surname>Creech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE Wireless Communications and Networking Conference (WCNC&apos;13)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="4487" to="4492" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A semantic approach to host-based intrusion detection systems using contiguous and discontiguous system call patterns</title>
		<author>
			<persName><forename type="first">Gideon</forename><surname>Creech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="807" to="819" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Semantics-based online malware detection: Towards efficient real-time protection against malware</title>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mahintham</forename><surname>Chandramohan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="289" to="302" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">The relationship between precision-recall and ROC curves</title>
		<author>
			<persName><forename type="first">Jesse</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Goadrich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd International Conference on Machine Learning</title>
		<meeting>the 23rd International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Improved estimation of hidden Markov model parameters from multiple observation sequences</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">A</forename><surname>Richard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><forename type="middle">C</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Terry</forename><surname>Lovell</surname></persName>
		</author>
		<author>
			<persName><surname>Caelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th International Conference on Pattern Recognition</title>
		<meeting>the 16th International Conference on Pattern Recognition</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002">2002. 2002</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="168" to="171" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Alert correlation in collaborative intelligent intrusion detection systems-A survey</title>
		<author>
			<persName><forename type="first">Tagelsir</forename><surname>Huwaida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Izzeldin</forename><surname>Elshoush</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohamed</forename><surname>Osman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="4349" to="4365" />
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
	<note>98:32 M. Liu et al</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A review on feature selection in mobile malware detection</title>
		<author>
			<persName><forename type="first">Ali</forename><surname>Feizollah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nor</forename><surname>Badrul Anuar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rosli</forename><surname>Salleh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ainuddin</forename><surname>Wahid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdul</forename><surname>Wahab</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Digital Investigation</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="22" to="37" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Manilyzer: Automated android malware detection through manifest analysis</title>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dillon</forename><surname>Stadther</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bing</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE 11th International Conference on Mobile Ad Hoc and Sensor Systems (MASS&apos;14</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="767" to="772" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The hierarchical hidden Markov model: Analysis and applications</title>
		<author>
			<persName><forename type="first">Shai</forename><surname>Fine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoram</forename><surname>Singer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Naftali</forename><surname>Tishby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="41" to="62" />
			<date type="published" when="1998">1998. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">The evolution of system-call monitoring</title>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Hofmeyr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anil</forename><surname>Somayaji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual Computer Security Applications Conference, 2008 (ACSAC&apos;08)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="418" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A sense of self for unix processes</title>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><forename type="middle">A</forename><surname>Hofmeyr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aniln</forename><surname>Somayaji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><forename type="middle">A</forename><surname>Longstaff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1996 IEEE Symposium on Security and Privacy</title>
		<meeting>the 1996 IEEE Symposium on Security and Privacy</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1996">1996. 1996</date>
			<biblScope unit="page" from="120" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Alluxio Open Foundation</orgName>
		</author>
		<ptr target="http://www.alluxio.org/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Apache Hadoop YARN</title>
		<ptr target="https://hadoop.apache.org/docs/r2.7.2/hadoop-yarn/hadoop-yarn-site/YARN.html" />
		<imprint>
			<date type="published" when="2017">2017</date>
			<publisher>Apache Software Foundation</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Apache Kafka a distributed streaming platform</title>
		<ptr target="https://kafka.apache.org/" />
		<imprint>
			<date type="published" when="2017">2017</date>
			<publisher>Apache Software Foundation</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<ptr target="https://flume.apache.org/" />
		<title level="m">The Apache Software Foundation</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">The Apache Software Foundation</title>
		<ptr target="http://spark.apache.org/" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Learning program behavior profiles for intrusion detection</title>
		<author>
			<persName><forename type="first">K</forename><surname>Anup</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aaron</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Schwartzbard</surname></persName>
		</author>
		<author>
			<persName><surname>Schatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Intrusion Detection and Network Monitoring</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">51462</biblScope>
			<biblScope unit="page" from="1" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Sebastien</forename><surname>Godard</surname></persName>
		</author>
		<ptr target="http://linuxcommand.org/man_pages/mpstat1.html" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Human action recognition with contextual constraints using a RGB-D sensor</title>
		<author>
			<persName><forename type="first">Ye</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Weihua</forename><surname>Sheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yongsheng</forename><surname>Ou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Meiqin</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Senlin</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE International Conference on Robotics and Biomimetics</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="674" to="679" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">An immediate system call sequence based approach for detecting malicious program executions in cloud environment</title>
		<author>
			<persName><forename type="first">Sanchika</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Padam</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Personal Communications</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="page" from="405" to="425" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Windows based data sets for evaluation of robustness of host based intrusion detection systems (IDS) to zero-day and stealth attacks</title>
		<author>
			<persName><forename type="first">Waqas</forename><surname>Haider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gideon</forename><surname>Creech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Internet</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">29</biblScope>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Generating realistic intrusion detection system dataset based on fuzzy qualitative modeling</title>
		<author>
			<persName><forename type="first">Waqas</forename><surname>Haider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jill</forename><surname>Slay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Turnbull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="page" from="185" to="192" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Towards reliable data feature retrieval and decision engine in hostbased anomaly detection systems</title>
		<author>
			<persName><forename type="first">Waqas</forename><surname>Haider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miao</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE 10th Conference on Industrial Electronics and Applications (ICIEA&apos;15)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="513" to="517" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Detecting anomalous behavior in cloud servers by nested arc hidden SEMI-Markov model with state summarization</title>
		<author>
			<persName><forename type="first">Waqas</forename><surname>Haider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinghuo</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qianhong</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Big Data</title>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Integer data zero-watermark assisted system calls abstraction and normalization for host based anomaly detection systems</title>
		<author>
			<persName><forename type="first">Waqas</forename><surname>Haider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinghuo</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE 2nd International Conference on Cyber Security and Cloud Computing (CSCloud&apos;15)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="349" to="355" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Fabian</forename><surname>Frederick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henry</forename><surname>Ware</surname></persName>
		</author>
		<ptr target="http://www.linuxcommand.org/man_pages/vmstat8.html" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">A multi-layer model for anomaly intrusion detection using program sequences of system calls</title>
		<author>
			<persName><forename type="first">Xuan Dau</forename><surname>Hoang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Bertok</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 11th IEEE International Conference on Networks, 2003 (ICON&apos;03)</title>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">A program-based anomaly intrusion detection scheme using multiple detection engines and fuzzy inference</title>
		<author>
			<persName><forename type="first">Xuan Dau</forename><surname>Hoang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Bertok</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1219" to="1228" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
		<author>
			<persName><forename type="first">Sepp</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">JÃ¼rgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
			<date type="published" when="1997">1997. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Intrusion detection using sequences of system calls</title>
		<author>
			<persName><forename type="first">Steven</forename><forename type="middle">A</forename><surname>Hofmeyr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anil</forename><surname>Somayaji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Security</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="151" to="180" />
			<date type="published" when="1998">1998. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Host-based anomaly intrusion detection</title>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Information and Communication Security</title>
		<imprint>
			<date type="published" when="2010">2010. 2010</date>
			<biblScope unit="page" from="235" to="255" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">A simple and efficient hidden Markov model scheme for host-based anomaly intrusion detection</title>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinghuo</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dong</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hsiao-Hwa</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="42" to="47" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Extreme learning machine: Theory and applications</title>
		<author>
			<persName><forename type="first">Guang-Bin</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qin-Yu</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chee-Kheong</forename><surname>Siew</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="489" to="501" />
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title/>
		<author>
			<persName><surname>Ixia</surname></persName>
		</author>
		<ptr target="https://www.ixiacom.com/products/perfectstorm" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Efficient and effective realtime prediction of driveby download attacks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Gaya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Shane</forename><surname>Jayasinghe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Culpepper</surname></persName>
		</author>
		<author>
			<persName><surname>Bertok</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Computer Applications</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="135" to="149" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Caffe: Convolutional architecture for fast feature embedding</title>
		<author>
			<persName><forename type="first">Yangqing</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Evan</forename><surname>Shelhamer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeff</forename><surname>Donahue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Karayev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathan</forename><surname>Long</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ross</forename><surname>Girshick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergio</forename><surname>Guadarrama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Trevor</forename><surname>Darrell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd ACM International Conference on Multimedia</title>
		<meeting>the 22nd ACM International Conference on Multimedia</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="675" to="678" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Multiresolution abnormal trace detection using varied-length n-grams and automata</title>
		<author>
			<persName><forename type="first">Guofei</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haifeng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristian</forename><surname>Ungureanu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenji</forename><surname>Yoshihira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man, and Cybernetics, Part C: Applications and Reviews</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="86" to="97" />
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Security automation and threat information-sharing options</title>
		<author>
			<persName><forename type="first">Panos</forename><surname>Kampanakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Security &amp; Privacy</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="42" to="51" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Resource provisioning and work flow scheduling in clouds using augmented shuffled frog leaping algorithm</title>
		<author>
			<persName><forename type="first">Parmeet</forename><surname>Kaur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shikha</forename><surname>Mehta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Parallel and Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">101</biblScope>
			<biblScope unit="page" from="41" to="50" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Combining hidden Markov models for improved anomaly detection</title>
		<author>
			<persName><forename type="first">W</forename><surname>Khreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Granger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sabourin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Miri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Communications</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Combining heterogeneous anomaly detectors for improved software security</title>
		<author>
			<persName><forename type="first">Wael</forename><surname>Khreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdelwahab</forename><surname>Syed Shariyar Murtaza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chamseddine</forename><surname>Hamou-Lhadj</surname></persName>
		</author>
		<author>
			<persName><surname>Talhi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems and Software</title>
		<imprint>
			<biblScope unit="volume">137</biblScope>
			<biblScope unit="page" from="415" to="429" />
			<date type="published" when="2017">2017. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Improved harris feature point set for orientation-sensitive urban-area detection in aerial images</title>
		<author>
			<persName><forename type="first">Andrea</forename><surname>KovÃ¡cs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">TamÃ¡s</forename><surname>SzirÃ¡nyi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Geoscience and Remote Sensing Letters</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="796" to="800" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Performance analysis of network intrusion detection schemes using Apache Spark</title>
		<author>
			<persName><forename type="first">Manish</forename><surname>Kulariya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Priyanka</forename><surname>Saraf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Raushan</forename><surname>Ranjan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Govind</forename><forename type="middle">P</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 International Conference on Communication and Signal Processing</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1973" to="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Optimal thresholds for intrusion detection systems</title>
		<author>
			<persName><forename type="first">Aron</forename><surname>Laszka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Shankar</forename><surname>Waseem Abbas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yevgeniy</forename><surname>Sastry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xenofon</forename><surname>Vorobeychik</surname></persName>
		</author>
		<author>
			<persName><surname>Koutsoukos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium and Bootcamp on the Science of Security</title>
		<meeting>the Symposium and Bootcamp on the Science of Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="72" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Deep learning</title>
		<author>
			<persName><forename type="first">Yann</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">521</biblScope>
			<biblScope unit="page" from="436" to="444" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Data mining approaches for intrusion detection</title>
		<author>
			<persName><forename type="first">Wenke</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salvatore</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Usenix Security</title>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Learning patterns from unix process execution traces for intrusion detection</title>
		<author>
			<persName><forename type="first">Wenke</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salvatore</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI Workshop on AI Approaches to Fraud Detection and Risk Management</title>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="50" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Information-theoretic measures for anomaly detection</title>
		<author>
			<persName><forename type="first">Wenke</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dong</forename><surname>Xiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 IEEE Symposium on Security and Privacy</title>
		<meeting>the 2001 IEEE Symposium on Security and Privacy</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="130" to="143" />
		</imprint>
	</monogr>
	<note>S&amp;P&apos;01</note>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Using text categorization techniques for intrusion detection</title>
		<author>
			<persName><forename type="first">Yihua</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">Rao</forename><surname>Vemuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="51" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Host-based intrusion detection using self-organizing maps</title>
		<author>
			<persName><forename type="first">A</forename><surname>Peter Lichodzijewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Malcolm</forename><forename type="middle">I</forename><surname>Nur Zincir-Heywood</surname></persName>
		</author>
		<author>
			<persName><surname>Heywood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Joint Conference on Neural Networks</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="1714" to="1719" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Detecting intrusions through system call sequence and argument analysis</title>
		<author>
			<persName><forename type="first">Federico</forename><surname>Maggi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matteo</forename><surname>Matteucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Zanero</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Dependable and Secure Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="381" to="395" />
			<date type="published" when="2010">2010. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">An analysis of the 1999 DARPA/lincoln laboratory evaluation data for network anomaly detection</title>
		<author>
			<persName><forename type="first">Matthew</forename><forename type="middle">V</forename><surname>Mahoney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Recent Advances in Intrusion Detection</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="220" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Learning rules for anomaly detection of hostile network traffic</title>
		<author>
			<persName><forename type="first">Matthew</forename><forename type="middle">V</forename><surname>Mahoney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Chan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3rd IEEE International Conference on Data Mining, 2003 (ICDM&apos;03</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page">601</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<monogr>
		<title level="m" type="main">McAfee Host Intrusion Prevention for Desktop</title>
		<author>
			<persName><surname>Mcafee</surname></persName>
		</author>
		<ptr target="https://www.mcafee.com/uk/products/host-ips-for-desktop.aspx" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Testing intrusion detection systems: A critique of the 1998 and 1999 Darpa intrusion detection system evaluations as performed by lincoln laboratory</title>
		<author>
			<persName><forename type="first">John</forename><surname>Mchugh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Information and System Security (TISSEC)</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="262" to="294" />
			<date type="published" when="2000">2000. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Mllib: Machine learning in apache spark</title>
		<author>
			<persName><forename type="first">Xiangrui</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Bradley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Burak</forename><surname>Yavuz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Evan</forename><surname>Sparks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shivaram</forename><surname>Venkataraman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Davies</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeremy</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Manish</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sean</forename><surname>Amde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Doris</forename><surname>Owen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reynold</forename><surname>Xin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Xin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reza</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matei</forename><surname>Zadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ameet</forename><surname>Zaharia</surname></persName>
		</author>
		<author>
			<persName><surname>Talwalkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1" to="7" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Hidden Markov models for scenario generation</title>
		<author>
			<persName><forename type="first">Enza</forename><surname>Messina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniele</forename><surname>Toscani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ima Journal of Management Mathematics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="379" to="401" />
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Evaluating computer intrusion detection systems: A survey of common practices</title>
		<author>
			<persName><forename type="first">Aleksandar</forename><surname>Milenkoski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marco</forename><surname>Vieira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Kounev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alberto</forename><surname>Avritzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bryan</forename><forename type="middle">D</forename><surname>Payne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys (CSUR)</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page">12</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<author>
			<persName><forename type="first">Philipp</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Nishihara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ion</forename><surname>Stoica</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.06051</idno>
		<title level="m">Sparknet: Training deep networks in spark</title>
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv Preprint</note>
	<note>98:34 M. Liu et al</note>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Total ADS: Automated software anomaly detection system</title>
		<author>
			<persName><forename type="first">Abdelwahab</forename><surname>Syed Shariyar Murtaza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wael</forename><surname>Hamou-Lhadj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mario</forename><surname>Khreich</surname></persName>
		</author>
		<author>
			<persName><surname>Couture</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE 14th International Working Conference on Source Code Analysis and Manipulation (SCAM&apos;14</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="83" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">A host-based anomaly detection approach by representing system calls as states of kernel modules</title>
		<author>
			<persName><forename type="first">Wael</forename><surname>Syed Shariyar Murtaza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdelwahab</forename><surname>Khreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mario</forename><surname>Hamou-Lhadj</surname></persName>
		</author>
		<author>
			<persName><surname>Couture</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE&apos;13)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="431" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">A trace abstraction approach for host-based anomaly detection</title>
		<author>
			<persName><forename type="first">Wael</forename><surname>Syed Shariyar Murtaza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdelwahab</forename><surname>Khreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephane</forename><surname>Hamou-Lhadj</surname></persName>
		</author>
		<author>
			<persName><surname>Gagnon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE Symposium on Computational Intelligence for Security and Defense Applications (CISDA&apos;15)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">Back to static analysis for kernel-level rootkit detection</title>
		<author>
			<persName><forename type="first">Atefeh</forename><surname>Seyyedeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mehdi</forename><surname>Musavi</surname></persName>
		</author>
		<author>
			<persName><surname>Kharrazi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1465" to="1476" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Anomalous system call detection</title>
		<author>
			<persName><forename type="first">Darren</forename><surname>Mutz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fredrik</forename><surname>Valeur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Vigna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Kruegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Information and System Security (TISSEC)</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="61" to="93" />
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">A three-way decision making approach to malware analysis using probabilistic rough sets</title>
		<author>
			<persName><forename type="first">Mohammad</forename><surname>Nauman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nouman</forename><surname>Azam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jingtao</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">374</biblScope>
			<biblScope unit="page" from="193" to="209" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<monogr>
		<title level="m" type="main">Sequence-Based Intrusion Detection</title>
		<ptr target="http://www.cs.unm.edu/immsec/systemcalls.htm" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
		<respStmt>
			<orgName>University of New Mexico</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<monogr>
		<title level="m" type="main">AlienVault OSSIM: The World&apos;s Most Widely Used Open Source SIEM</title>
		<author>
			<persName><surname>Ossim</surname></persName>
		</author>
		<ptr target="https://www.alienvault.com/products/ossim" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<monogr>
		<title level="m" type="main">Hierarchical recurrent neural encoder for video representation with application to captioning</title>
		<author>
			<persName><forename type="first">Pingbo</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhongwen</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fei</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yueting</forename><surname>Zhuang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.03476</idno>
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv Preprint</note>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">Nitro: Hardware-based system call tracing for virtual machines</title>
		<author>
			<persName><forename type="first">Jonas</forename><surname>Pfoh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christian</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Claudia</forename><surname>Eckert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Security</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="96" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">Anomaly intrusion detection method based on HMM</title>
		<author>
			<persName><forename type="first">Yan</forename><surname>Qiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">W</forename><surname>Xin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yang</forename><surname>Bin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronics Letters</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">A tutorial on hidden Markov models and selected applications in speech recognition</title>
		<author>
			<persName><forename type="first">Lawrence</forename><forename type="middle">R</forename><surname>Rabiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="257" to="286" />
			<date type="published" when="1989">1989. 1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">The Hadoop distributed file system</title>
		<author>
			<persName><forename type="first">Konstantin</forename><surname>Shvachko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hairong</forename><surname>Kuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjay</forename><surname>Radia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Chansler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST&apos;10)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">Statistical technique for online anomaly detection using spark over heterogeneous data from multi-source VMware performance data</title>
		<author>
			<persName><forename type="first">Mohiuddin</forename><surname>Solaimani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammed</forename><surname>Iftekhar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Latifur</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bhavani</forename><surname>Thuraisingham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE International Conference on Big Data (Big Data&apos;14</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1086" to="1094" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Online anomaly detection for multi-source VMware using a distributed streaming framework</title>
		<author>
			<persName><forename type="first">Mohiuddin</forename><surname>Solaimani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammed</forename><surname>Iftekhar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Latifur</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bhavani</forename><surname>Thuraisingham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joe</forename><surname>Ingram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sadi</forename><forename type="middle">Evren</forename><surname>Seker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Software: Practice and Experience</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="1479" to="1497" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">Outside the closed world: On using machine learning for network intrusion detection</title>
		<author>
			<persName><forename type="first">Robin</forename><surname>Sommer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vern</forename><surname>Paxson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 IEEE Symposium on Security and Privacy</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="305" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Smartphone dual defense protection framework: Detecting malicious applications in android markets</title>
		<author>
			<persName><forename type="first">Xin</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chuah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gang</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 8th International Conference on Mobile Ad-Hoc and Sensor Networks (MSN&apos;12)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="153" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">A fuzzy-logic-based approach to qualitative modeling</title>
		<author>
			<persName><forename type="first">Michio</forename><surname>Sugeno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Takahiro</forename><surname>Yasukawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Fuzzy Systems</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="7" to="31" />
			<date type="published" when="1993">1993. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">Defining the operational limits of Stide, an anomaly-based intrusion detector</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Kymie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename><forename type="middle">A</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><surname>Maxion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 IEEE Symposium on Security and Privacy</title>
		<meeting>the 2002 IEEE Symposium on Security and Privacy</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002">2002. 2002</date>
			<biblScope unit="page" from="188" to="201" />
		</imprint>
	</monogr>
	<note>Why 6?</note>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title level="a" type="main">A system for denial-ofservice attack detection based on multivariate correlation analysis</title>
		<author>
			<persName><forename type="first">Zhiyuan</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aruna</forename><surname>Jamdagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangjian</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Priyadarsi</forename><surname>Nanda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ren Ping</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="447" to="456" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<analytic>
		<title level="a" type="main">Detection of denial-of-service attacks based on computer vision techniques</title>
		<author>
			<persName><forename type="first">Zhiyuan</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aruna</forename><surname>Jamdagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangjian</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Priyadarsi</forename><surname>Nanda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ren</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Ping</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="2519" to="2533" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<analytic>
		<title level="a" type="main">Enhancing big data security with collaborative intrusion detection</title>
		<author>
			<persName><forename type="first">Zhiyuan</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Upasana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangjian</forename><surname>Nagar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Priyadarsi</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><surname>Nanda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ping</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Song</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Cloud Computing</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<monogr>
		<author>
			<persName><forename type="first">Gaurav</forename><surname>Tandon</surname></persName>
		</author>
		<title level="m">Machine Learning for Host-Based Anomaly Detection. Thesis</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<monogr>
		<title level="m" type="main">OSSEC Open Source HIDS SECurity</title>
		<author>
			<orgName type="collaboration">OSSEC Project Team</orgName>
		</author>
		<ptr target="http://ossec.github.io/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">A multi-HMM approach to ECG segmentation</title>
		<author>
			<persName><forename type="first">Julien</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">CÃ©dric</forename><surname>Rose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">FranÃ§ois</forename><surname>Charpillet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">18th IEEE International Conference on Tools with Artificial Intelligence</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2006">2006. 2006</date>
			<biblScope unit="page" from="609" to="616" />
		</imprint>
	</monogr>
	<note>ICTAI&apos;06</note>
</biblStruct>

<biblStruct xml:id="b107">
	<analytic>
		<title level="a" type="main">Taxonomy and survey of collaborative intrusion detection</title>
		<author>
			<persName><forename type="first">Emmanouil</forename><surname>Vasilomanolakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shankar</forename><surname>Karuppayah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Max</forename><surname>Muhlhauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mathias</forename><surname>Fischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys (CSUR)</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page">55</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b108">
	<monogr>
		<title level="m" type="main">2017. vSphere Guest SDK</title>
		<ptr target="https://www.vmware.com/support/developer/guest-sdk/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<analytic>
		<title level="a" type="main">Mimicry attacks on host-based intrusion detection systems</title>
		<author>
			<persName><forename type="first">David</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paolo</forename><surname>Soto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ACM Conference on Computer and Communications Security</title>
		<meeting>the 9th ACM Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="255" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b110">
	<monogr>
		<title level="m" type="main">Sequence-based prediction of RNA-protein interactions</title>
		<author>
			<persName><forename type="first">Rani</forename><surname>Rasna</surname></persName>
		</author>
		<author>
			<persName><surname>Walia</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
	<note type="report_type">Dissertations and Theses -Gradworks</note>
</biblStruct>

<biblStruct xml:id="b111">
	<analytic>
		<title level="a" type="main">Anagram: A content anomaly detector resistant to mimicry attack</title>
		<author>
			<persName><forename type="first">Ke</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Janak</forename><forename type="middle">J</forename><surname>Parekh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salvatore</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Recent Advances in Intrusion Detection</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006. 2006</date>
			<biblScope unit="page" from="226" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b112">
	<analytic>
		<title level="a" type="main">Detecting intrusions using system calls: Alternative data models</title>
		<author>
			<persName><forename type="first">Christina</forename><surname>Warrender</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Barak</forename><surname>Pearlmutter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1999 IEEE Symposium on Security and Privacy</title>
		<meeting>the 1999 IEEE Symposium on Security and Privacy</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999">1999. 1999</date>
			<biblScope unit="page" from="133" to="145" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b113">
	<analytic>
		<title level="a" type="main">Malware detection in cloud computing infrastructures</title>
		<author>
			<persName><forename type="first">R</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Angelos</forename><forename type="middle">K</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Marnerides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Mauthe</surname></persName>
		</author>
		<author>
			<persName><surname>Hutchison</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Dependable and Secure Computing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="192" to="205" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b114">
	<analytic>
		<title level="a" type="main">ANNs on co-occurrence matrices for mobile malware detection</title>
		<author>
			<persName><forename type="first">Xi</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhenlong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qing</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yong</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">KSII Transactions on Internet and Information Systems (TIIS)</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="2736" to="2754" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b115">
	<analytic>
		<title level="a" type="main">Evaluating host-based anomaly detection systems: A preliminary analysis of ADFA-LD</title>
		<author>
			<persName><forename type="first">Miao</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 6th International Congress on Image and Signal Processing (CISP&apos;13)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1711" to="1716" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b116">
	<analytic>
		<title level="a" type="main">Evaluating host-based anomaly detection systems: Application of the oneclass SVM algorithm to ADFA-LD</title>
		<author>
			<persName><forename type="first">Miao</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jill</forename><surname>Slay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 11th International Conference on Fuzzy Systems and Knowledge Discovery (FSKD&apos;14</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="978" to="982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b117">
	<analytic>
		<title level="a" type="main">Evaluating host-based anomaly detection systems: Application of the frequency-based algorithms to ADFA-LA</title>
		<author>
			<persName><forename type="first">Miao</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiankun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinghuo</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elizabeth</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Network and System Security</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="542" to="549" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b118">
	<monogr>
		<title level="m" type="main">Show, attend and tell: Neural image caption generation with visual attention</title>
		<author>
			<persName><forename type="first">Kelvin</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ryan</forename><surname>Kiros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aaron</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">S</forename><surname>Zemel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1502.03044</idno>
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">5</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">arXiv Preprint</note>
</biblStruct>

<biblStruct xml:id="b119">
	<analytic>
		<title level="a" type="main">Dynamic android malware classification using graph-based representations</title>
		<author>
			<persName><forename type="first">Lifan</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dongping</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marco</forename><forename type="middle">A</forename><surname>Alvarez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jose</forename><forename type="middle">Andre</forename><surname>Morales</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xudong</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE 3rd International Conference on Cyber Security and Cloud Computing (CSCloud&apos;16)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="220" to="231" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b120">
	<analytic>
		<title level="a" type="main">A scalable data chunk similarity based compression approach for efficient big sensing data processing on cloud</title>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Knowledge and Data Engineering</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1144" to="1157" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b121">
	<analytic>
		<title level="a" type="main">A time efficient approach for detecting errors in big sensor data on cloud</title>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Surya</forename><surname>Nepal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="329" to="339" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b122">
	<analytic>
		<title level="a" type="main">Big-sensing-data curation for the cloud is coming: A promise of scalable cloud-data-center mitigation for next-generation IoT and wireless sensor networks</title>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Deepak</forename><surname>Puthal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Saraju</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elias</forename><surname>Mohanty</surname></persName>
		</author>
		<author>
			<persName><surname>Kougianos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Consumer Electronics Magazine</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="48" to="56" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b123">
	<analytic>
		<title level="a" type="main">A spatiotemporal compression based approach for efficient big data processing on cloud</title>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Changmin</forename><surname>Zhong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kotagiri</forename><surname>Ramamohanarao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="1563" to="1583" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b124">
	<monogr>
		<author>
			<persName><forename type="first">Zhilin</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ye</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuexin</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1605.07912</idno>
		<title level="m">Encode, review, and decode: Reviewer module for caption generation</title>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv Preprint</note>
</biblStruct>

<biblStruct xml:id="b125">
	<analytic>
		<title level="a" type="main">An intrusion detection approach based on system call sequences and rules extraction</title>
		<author>
			<persName><forename type="first">Qing</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaoping</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bo</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 2nd International Conference on E-business and Information System Security</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b126">
	<analytic>
		<title level="a" type="main">Host-based intrusion detection using dynamic and static behavioral models</title>
		<author>
			<persName><forename type="first">Dit-Yan</forename><surname>Yeung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuxin</forename><surname>Ding</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="229" to="243" />
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b127">
	<analytic>
		<title level="a" type="main">Feature representation and selection in malicious code detection methods based on static system calls</title>
		<author>
			<persName><forename type="first">Ding</forename><surname>Yuxin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuan</forename><surname>Xuebing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhou</forename><surname>Di</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dong</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">An</forename><surname>Zhanchao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Security</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="514" to="524" />
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b128">
	<monogr>
		<title level="m" type="main">An Architecture for Fast and General Data Processing on Large Clusters</title>
		<author>
			<persName><forename type="first">Matei</forename><surname>Zaharia</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<publisher>Morgan &amp; Claypool</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b129">
	<analytic>
		<title level="a" type="main">Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing</title>
		<author>
			<persName><forename type="first">Matei</forename><surname>Zaharia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mosharaf</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tathagata</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ankur</forename><surname>Dave</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Justin</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Murphy</forename><surname>Mccauley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Scott</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ion</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation. USENIX Association</title>
		<meeting>the 9th USENIX Conference on Networked Systems Design and Implementation. USENIX Association</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="2" to="2" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b130">
	<analytic>
		<title level="a" type="main">Discretized streams: Fault-tolerant streaming computation at scale</title>
		<author>
			<persName><forename type="first">Matei</forename><surname>Zaharia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tathagata</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haoyuan</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><surname>Hunter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Scott</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ion</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th ACM Symposium on Operating Systems Principles</title>
		<meeting>the 24th ACM Symposium on Operating Systems Principles</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="423" to="438" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b131">
	<analytic>
		<title level="a" type="main">Proximity-aware local-recoding anonymization with mapreduce for scalable big data privacy preservation in cloud</title>
		<author>
			<persName><forename type="first">Xuyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wanchun</forename><surname>Dou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Surya</forename><surname>Nepal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="2293" to="2307" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
	<note>98:36 M. Liu et al</note>
</biblStruct>

<biblStruct xml:id="b132">
	<analytic>
		<title level="a" type="main">Privacy preservation over big data in cloud systems</title>
		<author>
			<persName><forename type="first">Xuyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Surya</forename><surname>Nepal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security, Privacy and Trust in Cloud Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="239" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b133">
	<analytic>
		<title level="a" type="main">A hybrid approach for scalable sub-tree anonymization over big data using MapReduce on cloud</title>
		<author>
			<persName><forename type="first">Xuyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Surya</forename><surname>Nepal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chi</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wanchun</forename><surname>Dou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="1008" to="1020" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b134">
	<analytic>
		<title level="a" type="main">A scalable two-phase top-down specialization approach for data anonymization using Mapreduce on cloud</title>
		<author>
			<persName><forename type="first">Xuyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Laurence</forename><forename type="middle">T</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jinjun</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="363" to="373" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b135">
	<analytic>
		<title level="a" type="main">Intrusion detection and big heterogeneous data: A survey</title>
		<author>
			<persName><forename type="first">Richard</forename><surname>Zuech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Taghi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Randall</forename><surname>Khoshgoftaar</surname></persName>
		</author>
		<author>
			<persName><surname>Wald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Big Data</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
