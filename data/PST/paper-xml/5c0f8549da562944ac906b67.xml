<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ryan</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
							<email>rrossi@adobe.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Adobe Research</orgName>
								<address>
									<postCode>95110</postCode>
									<settlement>San Jose</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Intel Labs</orgName>
								<address>
									<postCode>95052</postCode>
									<settlement>Santa Clara</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Intel Labs</orgName>
								<address>
									<postCode>95052</postCode>
									<settlement>Santa Clara</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rong</forename><surname>Zhou</surname></persName>
							<email>rongzhou@google.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Adobe Research</orgName>
								<address>
									<postCode>95110</postCode>
									<settlement>San Jose</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nesreen</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
							<email>nesreen.k.ahmed@intel.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Adobe Research</orgName>
								<address>
									<postCode>95110</postCode>
									<settlement>San Jose</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="laboratory">The terms graphlet and induced subgraph are interchangeable</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TNNLS.2018.2826529</idno>
					<note type="submission">received September 20, 2016; revised February 17, 2017, August 8, 2017, and April 9, 2018; accepted April 9, 2018.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T08:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Graphlets</term>
					<term>network motifs</term>
					<term>induced subgraphs</term>
					<term>estimation methods</term>
					<term>unbiased graphlet estimation</term>
					<term>local graphlet count estimation</term>
					<term>graphlet statistics</term>
					<term>parallel algorithms</term>
					<term>higherorder network analysis</term>
					<term>machine learning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Graphlets are induced subgraphs of a large network and are important for understanding and modeling complex networks. Despite their practical importance, graphlets have been severely limited to applications and domains with relatively small graphs. Most previous work has focused on exact algorithms; however, it is often too expensive to compute graphlets exactly in massive networks with billions of edges, and finding an approximate count is usually sufficient for many applications. In this paper, we propose an unbiased graphlet estimation framework that is: (a) fast with large speedups compared to the state of the art; (b) parallel with nearly linear speedups; (c) accurate with less than 1% relative error; (d) scalable and space efficient for massive networks with billions of edges; and (e) effective for a variety of real-world settings as well as estimating global and local graphlet statistics (e.g., counts). On 300 networks from 20 domains, we obtain &lt;1% relative error for all graphlets. This is vastly more accurate than the existing methods while using less data. Moreover, it takes a few seconds on billion edge graphs (as opposed to days/weeks). These are by far the largest graphlet computations to date.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>G RAPHLETS are small induced subgraphs 1 and are important for many predictive and descriptive modeling and learning systems/tasks <ref type="bibr" target="#b0">[1]</ref>- <ref type="bibr" target="#b7">[8]</ref> such as image processing and computer vision learning systems that use neural networks <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b8">[9]</ref>, network alignment <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b9">[10]</ref>- <ref type="bibr" target="#b11">[12]</ref>, classification <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>, visualization and sensemaking <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>, dynamic network analysis <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref>, community detection <ref type="bibr" target="#b16">[17]</ref>- <ref type="bibr" target="#b18">[19]</ref>, role discovery <ref type="bibr" target="#b19">[20]</ref>, anomaly detection <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>, and link prediction <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>. Unfortunately, the application and general use of graphlets (especially those of size k = 4 nodes and larger) remain severely limited to networks that are small enough to avoid the scalability and performance limitations of exact algorithms <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b24">[25]</ref>- <ref type="bibr" target="#b27">[28]</ref>. For instance, Shervashidze et al. <ref type="bibr" target="#b2">[3]</ref> take hours to count graphlets on small networks (i.e., a few hundreds/thousands of nodes/edges) for the graph classification <ref type="bibr" target="#b1">[2]</ref>.</p><p>In many applications, finding an "approximate" answer is usually sufficient where the exact answer is not worth the extra cost and time. The recent rise of big data <ref type="bibr" target="#b28">[29]</ref> has made approximation methods even more critical <ref type="bibr" target="#b29">[30]</ref>, especially for practical applications <ref type="bibr" target="#b30">[31]</ref>- <ref type="bibr" target="#b34">[35]</ref>. More recently, the approximation methods have been proposed for important problems such as triangle counting <ref type="bibr" target="#b35">[36]</ref>- <ref type="bibr" target="#b39">[40]</ref>, the shortest path problems <ref type="bibr" target="#b32">[33]</ref>, <ref type="bibr" target="#b40">[41]</ref>, finding max cliques <ref type="bibr" target="#b41">[42]</ref>, and many others.</p><p>This paper aims to overcome the above-mentioned computational limitations to make graphlets more accessible to other applications/domains with much larger graphs. In particular, this paper proposes a general graphlet estimation framework for deriving unbiased estimates<ref type="foot" target="#foot_0">2</ref> of a variety of graphlet statistics (e.g., frequency of an arbitrary k-vertex-induced subgraph) from a small set of edge-induced neighborhoods. The graphlet estimators provide accurate and fast approximations of a variety of global and local graphlet properties. <ref type="foot" target="#foot_1">3</ref>Intuitively, a global graphlet property assigns a single value (or distribution/map) to a graph G, whereas a local graphlet property assigns a single value (or distribution/map) to a particular graph element such as an edge or node of G <ref type="bibr" target="#b42">[43]</ref>. An example of a global graphlet statistic is the total number of 4-cliques in G, whereas an example of a local statistic is the number of 4-cliques containing a certain graph element such as an edge or node. <ref type="foot" target="#foot_2">4</ref> Furthermore, a number of important machine learning tasks are likely to benefit from the proposed graphlet estimation framework, including graph anomaly detection <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>, entity resolution <ref type="bibr" target="#b43">[44]</ref>, role discovery <ref type="bibr" target="#b44">[45]</ref>, and relational classification <ref type="bibr" target="#b45">[46]</ref>.</p><p>The key contributions of this paper are as follows.</p><p>? Graphlet estimation framework: A general unbiased estimation framework is proposed for approximating global and local graphlet properties (such as counts) in massive networks with billions of edges. The framework is shown to be accurate, fast, and scalable for both dense and sparse networks of arbitrary size. ? Accurate: For all graphlets and data (300 graphs from 20 domains), the methods are more accurate than the existing state-of-the-art methods (&lt;1% relative error) while using only a small fraction of the data. Provable error bounds are also derived and shown to be tight (see Section IV-B).</p><p>? Efficient: The proposed estimation algorithms are orders of magnitude faster than the recent state-of-the-art algorithm and take a few seconds as opposed to days/months.</p><p>? Parallel methods: This paper proposes parallel graphlet estimation methods for shared and distributed memory architectures. Strong scaling results with nearly linear speedups are observed across a variety of networks. ? Estimation of graphlet statistics-beyond counts: This paper proposes estimation methods for both global and local graphlet counts, as well as other graphlet properties beyond simple counts (see Section II-B). This is in contrast to the existing estimation methods for graphlets <ref type="bibr" target="#b46">[47]</ref>- <ref type="bibr" target="#b48">[49]</ref> that focus only on approximating global graphlet counts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>? Largest investigation and graphlet computations:</head><p>To the best of our knowledge, this paper provides: (i) the largest graphlet computations to date and (ii) the largest empirical investigation using 300+ networks from 20+ domains.</p><p>II. LOCALIZED GRAPHLET ESTIMATION FRAMEWORK In this section, we propose a new family of graphlet estimation methods based on selecting a set of localized neighborhoods. This gives rise to the localized graphlet estimation framework (LGE) that serves as a basis for deriving unbiased and consistent estimators that are fast, accurate, and scalable for massive networks. As shown later in Section IV, LGE has many interchangeable components and is effective for a wide variety of networks, applications, and domains (e.g., biological, social, and infrastructure/physical networks), which have fundamentally different structural properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Preliminaries</head><p>Let G = (V, E) be an undirected simple graph with N = |V | vertices and M = |E| edges. Sets are ordered, unless otherwise mentioned. Given a vertex v ? V , let (v) = {w | (v, w) ? E} be the set of vertices adjacent to v in G. Similarly, given an edge e = (u, v) ? E, let (e) denotes the edge neighborhood of e defined as</p><formula xml:id="formula_0">(e) = (u, v) = (u) ? (v) \ {u, v}<label>(1)</label></formula><p>where (u) and (v) are the neighbors of u and v, respectively. The (explicit</p><formula xml:id="formula_1">) edge neighborhood is e = G({(v) - u}?{(u)-v}).</formula><p>The subgraph e consists of the set of vertices adjacent to v or u (noninclusive) and all edges between that set. Moreover, the degree of a vertex v denoted as</p><formula xml:id="formula_2">d v = |(v)|</formula><p>is equal to the number of edges that contain v. We also denote (G) as the maximum vertex degree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 1 (GRAPHLET):</head><formula xml:id="formula_3">A graphlet G i = (V k , E k ) is a connected-iuced subgraph consisting of a subset V k ? V of k vertices from G = (V, E) together with all edges whose endpoints are both in this subset E k = {?e ? E | e = (u, v)?u, v ? V k }.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>By definition, a graphlet has one connected component.</head><p>A k-graphlet is defined as an induced subgraph with kvertices. Furthermore, we define G (k) as the set of k-vertexinduced subgraphs and G = G (2) ? ? ? ? ? G (k) . A graphlet frequency distribution (GFD) is defined in the following.</p><p>Definition 2 (GRAPHLET FREQUENCY DISTRIBUTION): Given a graph (or graph elements such as an edge, node, or subgraph), the GFD is defined as f i = (X i / i X i ) for all i = 1, . . . , |G| where X i is the frequency of graphlet G i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The resulting vector</head><formula xml:id="formula_4">f = [? ? ? f i ? ? ? ] is the GFD.</formula><p>A summary of the graphlet notation and important properties are provided in Table <ref type="table" target="#tab_0">I</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Problem Formulation</head><p>The goal of this paper is to obtain fast and accurate estimates of a variety of graphlet statistics (e.g., counts). In particular, we focus on four basic types of graphlet statistics that can be described by two pairs of exclusive attributes: single-valued versus distribution and global versus local (See <ref type="bibr" target="#b42">[43]</ref> for further details). Intuitively, the four types of graphlet properties are as follows.</p><p>P1 Global single-valued statistics such as the total number of 4-cycles in G. P2 Global distributions, e.g., a GFD computed using the total graphlet frequencies of G. P3 Local single-valued statistics, e.g., the number of 4-cycles containing a specific graph element such as an edge (node). P4 Local distributions, e.g., a GFD of an individual graph element such as an edge (or node). The proposed framework gives rise to the graphlet estimation methods that are fast and accurate for a variety of these four types of graphlet properties. Obviously, estimation methods for global/local graphlet statistics return a single value (scalar value), whereas the methods for global/local distributions return the estimated distribution. Now, we define the specific graphlet statistics and distributions (from the above-mentioned four types of graphlet properties) that are estimated in this paper including: statistics are derived by calculating, choosing, or constructing a single value from a local statistic or distribution. Estimators are derived for each of the above-mentioned graphlet problems. Existing estimation methods such as in <ref type="bibr" target="#b46">[47]</ref>- <ref type="bibr" target="#b48">[49]</ref> are limited to simple count statistics, whereas this paper instead proposes a unifying unbiased estimation framework that generalizes for a variety of other important graphlet properties beyond simple counts. <ref type="foot" target="#foot_4">5</ref> In addition, the previous work has mainly focused on estimating global statistics (e.g., total count of a graphlet in G), whereas this paper introduces estimators for both global and local graphlet statistics and distributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Framework Outline and Intuition</head><p>An overview of the LGE framework is provided in Fig. <ref type="figure" target="#fig_0">1</ref> for intuition. The LGE framework is based on the following general steps.</p><p>S1 Sampling a graph element (edge and node). S2 Obtaining a localized subgraph H by sampling the local neighborhood (egonet) of that graph element. S3 Given H , compute the graphlets containing the graph element (sampled from step S1). S4 Use these counts to derive unbiased estimates (e.g., using the Horvitz-Thompson construction <ref type="bibr" target="#b35">[36]</ref>, <ref type="bibr" target="#b49">[50]</ref>).</p><p>Note that if we are estimating global graphlet statistics, then steps S1-S3 are repeated K times prior to deriving estimates. In this paper, we sample edge neighborhoods (as opposed to node neighborhoods). In particular, an edge neighborhood (e) is sampled with some probability from the set of all edge-induced neighborhoods (see Algorithm 1). Using the (potentially partial) edge neighborhood (e) centered at e ? E as a basis, we compute the frequency of each graphlet G i ? G, for i = 1, . . . , |G|. Let us note that the edge (or node) may be selected uniformly at random or by an arbitrary weighted distribution F (as shown in Algorithm 1). The weighted distribution could be based on degrees, k-core numbers, or any attribute of interest. Furthermore, an edge (or node) neighborhood may be selected with a replacement or without. Selecting an edge neighborhood with replacement allows each edge neighborhood (e) to be used multiple times, whereas sampling without replacement ensures that each edge neighborhood included in the sample is unique (by label) and never repeated. Edge-centric graphlet decomposition algorithms<ref type="foot" target="#foot_5">6</ref> also lend themselves for (parallel) implementation on both shared memory and distributed memory architectures (see Section III). In addition, the fastest state-of-the-art subgraph counting approach can always be used in the proposed framework (see Step 3 in Fig. <ref type="figure" target="#fig_0">1</ref>) to speedup the estimation even further. For instance, instead of using PGD <ref type="bibr" target="#b12">[13]</ref> to count graphlets (as done in this paper), one can always use the fastest state-of-the-art subgraph counting algorithm.</p><p>A taxonomy for graphlet estimation is proposed in Table <ref type="table" target="#tab_2">II</ref>. In particular, the existing graphlet estimation methods can be categorized as direct graphlet estimation methods since they sample a set of k-vertices directly from G and retrieve the k-graphlet induced by that set, whereas the proposed class of LGE methods select an edge and sample locally from the neighborhood. Table II also summarizes the existing estimation methods as well as our proposed approach according to the global and local graphlet (single valued) statistics and distributions estimated by each, as well as computational and algorithmic properties offered by each approach. Section II-D introduces a general estimation framework for global graphlet statistics, whereas Section II-E proposes a framework for estimating local graphlet statistics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Estimation of Global Graphlet Statistics</head><p>Given the sampled set of edge-centric neighborhood, we show how to compute the estimated graphlet counts in Algorithm 2. More formally, let T e = (u) ? (v) be the set of nodes that complete triangles with e(v, u) ? J . Likewise,   <ref type="formula" target="#formula_0">1</ref>) time (see Algorithm 2). As an aside, this is an implementation detail and (?) can easily be replaced with another data structure (bloom filters) or even removed entirely in favor of binary search (which may be favorable in situations where memory is limited). These possibilities are discussed in detail later. Note that (?) is also used as a way to encode the different types of nodes. Thus, nodes are hashed using ? 1 , ? 2 , and ? 3 , which may be defined as any unique symbol. In our implementation, we avoid the cost of resetting by ensuring that each ? i is unique for each edgecentric neighborhood. In Line 4 of Algorithm 2, we mark the neighbors (v) of v as ? 1 . Later in Line 8, a triangle is marked with ? 3 , whereas Line 9 encodes a wedge as ? 2 .</p><formula xml:id="formula_5">S u = {w ? (u) \ {v}|w / ? (v)} and S v = {w ? (v) \ {u}| w / ?<label>(</label></formula><p>Next, Algorithm 2 maintains the unrestricted graphlet counts <ref type="foot" target="#foot_6">7</ref> in the following equations:</p><formula xml:id="formula_6">C 5 + = |T e | 2<label>(2)</label></formula><formula xml:id="formula_7">C 6 + = |T e | ? (|S u | + |S v |)<label>(3)</label></formula><formula xml:id="formula_8">C 8 + = |S u | 2 + |S v | 2<label>(4)</label></formula><formula xml:id="formula_9">C 9 + = |S u | ? |S v |<label>(5)</label></formula><p>The quantities C 5 , C 6 , C 8 , and C 9 are later used to derive chordal cycles, tailed triangles, 3-stars, and 4-paths in o(1) time, respectively. In addition, we maintain C 2 , C 3 , C 4 , and C 7 (see Algorithm 2). These quantities are computed for each edge-centric neighborhood in the sample, and then used for estimation. In particular, the three-vertex graphlet counts are estimated as follows:</p><formula xml:id="formula_10">X 2 = W 2 ? 2 C 2 (6) X 3 = W 3 ? 3 C 3 (7)</formula><p>where X 2 and X 3 are the estimated counts of graphlets G 2 and G 3 , respectively. Similarly, the 4-vertex graphlet counts are estimated through the following equations:</p><formula xml:id="formula_11">X 4 = W 4 ? 4 C 4 (<label>8</label></formula><formula xml:id="formula_12">)</formula><formula xml:id="formula_13">X 5 = W 5 ? 5 (C 5 -C 4 ) (9) X 6 = W 6 (? 6 C 6 -4X 5 ) (<label>10</label></formula><formula xml:id="formula_14">)</formula><formula xml:id="formula_15">X 7 = W 7 ? 7 C 7 (11) X 8 = W 8 (? 8 C 8 -X 6 ) (<label>12</label></formula><formula xml:id="formula_16">)</formula><formula xml:id="formula_17">X 9 = W 9 ? 9 (C 9 -C 7 ) (13)</formula><p>where X 4 -X 9 are the estimated counts of the graphlets G 4 -G 9 , respectively. Furthermore, W ? R ? is a weight vector to account for the edge multiplicities</p><formula xml:id="formula_18">W = 1 1 3 1 2 1 6 1 1 2 1 4 1 3 1 T (<label>14</label></formula><formula xml:id="formula_19">)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 LGE framework for estimating global graphlet statistics</head><p>Input: a graph G = (V, E) a sample size K , or sample probability p 1: parallel for j = 1, 2, . . . , K do</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2:</head><p>Select e via an arbitrary (weighted/uniform) distribution F</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3:</head><p>Set J ? J ? {e} 4: Obtain estimated graphlet counts X for J via Alg. Reset T e = ? and S u = ? 3:</p><formula xml:id="formula_20">for w ? (v) do 4: if w = u then (w) = ? 1 5: for w ? (u) do 6: if w = v then continue 7: if (w) = ? 1 then 8:</formula><p>T e ? T e ? {w} and set (w) = ? 3 triangle 9:</p><p>else S u ? S u ? {w} and set (w) = ? 2 wedge 10:</p><p>Update unrestricted counts via Eq. 2-5 11:</p><formula xml:id="formula_21">C 2 + = |T e | Note + = is the addition sum C 2 = C 2 + |T e | 12: C 3 + = C 3 (e) = (d u + d v -2) -2|T e | equiv. |S u | + |S u | 13: C 4 + = C 4 (e) = CLIQUE(, T e )</formula><p>in parallel (Alg. 3) 14:</p><formula xml:id="formula_22">C 7 + = C 7 (e) = CYCLE(, S u )</formula><p>in parallel (Alg. 4) 15: end parallel 16: Compute estimated graphlet counts X via Eq. 6-13 17: return X, where X i is the estimate for graphlet G i where each W i is used to correct the counts of graphlet G i <ref type="bibr" target="#b12">[13]</ref>. Furthermore, we also define p ? R ? as a vector of sampling probabilities where p i is the sampling probability for graphlet G i ? G. Note that p i can be proportional to Fig. <ref type="figure">2</ref>. Let T be the set of nodes completing a triangle with the edge (v, u) ? E, and let S v and S u be the set of nodes that form a 2-star with v and u, respectively. Furthermore, E c is the set of edges that complete a 4-cycle with respect to the edge e = (v, u) where for each edge (r, s) ? E c such that r ? S v and s ? S u and both (r</p><formula xml:id="formula_23">? S u ) ? (s ? S v ) = ?.</formula><p>any arbitrary function/weight computed on the graph G. One possibility is to use uniform sampling probabilities such that each p i is</p><formula xml:id="formula_24">p i = |J |/|E|.<label>(15)</label></formula><p>Intuitively, p i is the fraction of edge neighborhoods selected thus far. Results for both uniform and nonuniform sampling probabilities are discussed and investigated in Section IV. In addition, let ? i be defined as</p><formula xml:id="formula_25">? i = 1 p i</formula><p>where ? i is the inverse sampling probability of graphlet i used to correct the sampling bias. This corresponds to the Horvitz-Thompson construction <ref type="bibr" target="#b35">[36]</ref>, <ref type="bibr" target="#b49">[50]</ref>. Let us note that in Algorithm 2, the cliques and cycles are computed via Algorithms 3 and 4 using information from the (k -1)-graphlets. However, when memory is limited, then Algorithms 5 and 6 should be used. These methods search over the sets T e , S u , and S v from the (k -1)-graphlets directly using binary search. Set K e ? 0 Set C e ? 0 Set K e ? 0 Set C e ? 0 return C e sample a set of edge neighborhoods with probability ?, then</p><formula xml:id="formula_26">X i = e?J (Y i (e)/?) where X i is an estimator for G i . E[X i ] = Y i is an unbiased estimate.</formula><p>The proof is as follows:</p><formula xml:id="formula_27">E[X i ] = E e?J Y i (e) ? = e?J E Y i (e) ? (<label>16</label></formula><formula xml:id="formula_28">) = e?E E[I e ] ? ? Y i (e) = e?E Y i (e) ? ? ? = Y i (17)</formula><p>where I e is a Bernoulli random variable that indicates whether e and its neighborhood is sampled. Furthermore, the mean squared error MSE(X i ) is</p><formula xml:id="formula_29">E[(X i -Y i ) 2 ] = V[X i ] Variance + (E[X i ] -Y i ) 2 Bias (<label>18</label></formula><formula xml:id="formula_30">)</formula><p>where V[X i ] is the variance component and</p><formula xml:id="formula_31">(E[X i ] -Y i ) 2</formula><p>is the bias component of the estimator </p><formula xml:id="formula_32">X i . Therefore, MSE(X i ) = V[X i ] since X i is</formula><formula xml:id="formula_33">O(K T max + K S max ) = O(K (T max + S max )).</formula><p>Using K processing units (cores and workers), this reduces to O((T max + S max )). Our approach is also space efficient and requires a lot less space than the existing approaches <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b46">[47]</ref>, <ref type="bibr" target="#b47">[48]</ref>. In particular, the space complexity of Algorithm 2 is for improving statistical relational learning (SRL) tasks <ref type="bibr" target="#b51">[52]</ref> such as relational classification <ref type="bibr" target="#b45">[46]</ref>, link prediction, and weighting tasks (e.g., recommending items, friends, web sites, music, events, etc.) <ref type="bibr" target="#b52">[53]</ref> detecting anomalies in graphs (e.g., detecting fraud, or attacks/malicious behavior in computer networks) <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>, among many others <ref type="bibr" target="#b43">[44]</ref>, <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b53">[54]</ref>. However, it is often expensive and computationally prohibitive to compute such local graphlet statistics in large networks. In this paper, we propose a local graphlet estimation framework that derives accurate approximations of the local graphlet statistics while being orders of magnitude faster than exact methods.</p><formula xml:id="formula_34">O(N +2-1) = O(N)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3 (LOCAL GRAPHLET ESTIMATION):</head><p>Given a graph G = (V, E) and an edge e i = (v, u) ? E, the local graphlet estimation problem is to find</p><formula xml:id="formula_35">x i = [x 1 x 2 x 3 ? ? ? x 6 x 7 ? ? ? ] T (19)</formula><p>where x i is an approximation of the exact local graphlet statistics denoted by y i for edge e i such that D( x i y i ) is minimized (i.e., x i ? y i ) as well as the computational cost associated with the estimation.</p><p>The aim of the local graphlet estimation problem is to compute a fast yet accurate approximation of the graphlet statistics (such as counts) centered at an individual edge. Note that D( x i y i ) in Definition 3 can be any loss function. Instead of approximating all graphlets up to size k, one may relax the above-mentioned problem to estimate a single graphlet pattern G j ? G of interest (e.g., 4-node cliques).</p><p>A general estimation framework for the local graphlet estimation problem is shown in Algorithm 7. In particular, Algorithm 7 takes as input an edge e i , a graph G or (e i ) (neighborhood subgraph of e i ), a sampling probability p e , and it returns the graphlet feature vector x i ? R ? for e i ? E where ? = |G|. This generalization gives rise to a highly expressive unifying local graphlet estimation framework with many interchangeable components. For computing the local graphlet statistics in Algorithm 7, any edge-centric method can be used such as PGD <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>, VCP <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b22">[23]</ref>, Orca <ref type="bibr" target="#b27">[28]</ref>, or any future state-of-the-art approach. In this paper, we use the PGD library <ref type="bibr" target="#b12">[13]</ref> to compute the local graphlet statistics required for estimation. Moreover, the class of local graphlet approximation methods has many attractive properties such as unbiasedness and consistency.</p><p>We now discuss Algorithm 7 in detail. In particular, Algorithm 7 shows how to efficiently estimate all graphlets of size k ? {2, 3, 4} for an edge e i ? E. First, we compute T e , S u , and S v in Lines 3-9. Then, we use these sets to derive all graphlets of size k = 3 exactly in a constant time Algorithm 7 Family of localized graphlet estimation (LGE) methods for accurate and unbiased estimation of local graphlet properties. Given an edge e i or edge-induced subgraph (e i ) and a sampling probability p e , the general approach returns the estimated graphlet feature vector x = x i for e i ? E 1: procedure LOCALGRAPHLETESTIMATION((e i ) or G, e i , p e ) 2:</p><p>Initialize variables 3:</p><p>parallel for each w ? (v) do 4:</p><p>if w = u then S v ? S v ? {w} and (w) = ? 1 5:</p><p>parallel for each w ? (u) and w = v do 6:</p><p>if (w) = ? 1 then 7:</p><p>T e ? T e ? {w} and set (w) = ? 3 triangle 8:</p><formula xml:id="formula_36">S v ? S v \ {w} 9:</formula><p>else S u ? S u ? {w} and set (w) = ? 2 wedge 10:</p><p>x 2 = |T e | triangles/3-cliques 11: (Lines 10 and 11) as done in <ref type="bibr" target="#b12">[13]</ref> and <ref type="bibr" target="#b13">[14]</ref>. Note that these sets are computed exactly and up to this point, corresponds exactly to the exact algorithm given in <ref type="bibr" target="#b12">[13]</ref>. Next, we estimate 4-cliques in Lines 12-16. In particular, Line 12 searches each vertex w ? T e in parallel. Given w ? T e , we sample a neighbor r ? (w) with probability p e accordingly to an arbitrary weighted/uniform distribution F. Then, we check if r is of type ? 3 (from Line 7), as this indicates that r also participates in a triangle with e = (v, u), and since r ? (w), then {v, u, w, r } is a 4-clique. Line 16 ensures that the same 4-clique is not counted twice. Chordal cycles are estimated in Line 17. Furthermore, 4-node cycles are estimated in Lines 18-23 as well as a fraction of the tailed triangles. The other tailed triangles are estimated in Lines 24-28. Finally, the remaining graphlets are estimated in o( <ref type="formula" target="#formula_0">1</ref>) time (Lines 29 and 30) using knowledge from the previous steps. Note that if p e = 1 and sampling is performed without replacement, then Algorithm 7 reverts back to the exact method proposed in <ref type="bibr" target="#b12">[13]</ref> and <ref type="bibr" target="#b13">[14]</ref>. We can also use Hoeffding's inequality <ref type="bibr" target="#b54">[55]</ref> to obtain estimates with provable error bounds. For instance, if we replace d w ? p e everywhere in Algorithm 7 with 0.5 -2 ln(2/?) , then the error rate of the estimate is at most with confidence at least 1 -? <ref type="bibr" target="#b55">[56]</ref>. The error rate and confidence level ? are specified by the user and given as input into Algorithm 7 (instead of p e ).</p><formula xml:id="formula_37">x 3 = d u + d v -2 -2|T e | 2-</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Complexity:</head><p>The computational complexity is summarized in Table <ref type="table" target="#tab_2">III</ref>. Note that just as before, we only need to compute a few graphlets and can directly obtain the others in a constant time. To compute all local graphlet statistics for a given edge, it takes:</p><formula xml:id="formula_38">O( ub (|S u |+|S v |+|T e |))</formula><p>where ub is the maximum degree from any vertex in S v , S u , and T e . Alternatively, we can place an upper bound ub on the number of neighbors searched from any vertex in S v , S u , and T e . This can drastically reduce the time. The intuition is that for vertices with large neighborhoods, we only need to observe a relatively small (but representative) fraction of it to accurately extrapolate to the unobserved neighbors and their structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. Discussion</head><p>The proposed family of LGE methods easily generalizes to graphlets of arbitrary size by replacing the definition of an edge-centric neighborhood with the more general and suitable notion of an edge -neighborhood</p><formula xml:id="formula_39">(v, u) = {w ? V \ {v, u} | D(v, w) ? ? D(u, w) ? }</formula><p>where (v, u) represents the set of vertices with distance less than or equal to from e = (v, u) ? E. Thus, we set = 1 for graphlets of size k ? 4, and = 2 for graphlets of size k = 5, and so on. Investigating the methods for graphlets of size 5 and above is left for the future work. The LGE framework also naturally allows for both uniform and weighted sampling designs, and has many other interchangeable components as well. Note that if the total number of edges is unknown (due to streaming, problem constraints, or other issues), then Algorithm 1 is easily adapted, e.g., one may simply specify the number of graphlets to sample (instead of the fraction of graphlets to sample denoted by ? in Algorithm 1). Unlike the existing work, the proposed LGE methods are naturally amenable to streaming graphs and for graphs too large to fit into memory. For instance, we do not need to read the entire graph into memory, as long as there is an efficient way to obtain the -neighborhood subgraph (e i ) required for estimation.</p><p>In this paper, we leveraged PGD <ref type="bibr" target="#b12">[13]</ref> to count the graphlets in the sampled neighborhood subgraph. However, the proposed estimation framework is flexible for use with other exact subgraph counting algorithms including Orca <ref type="bibr" target="#b27">[28]</ref>, VCP <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b22">[23]</ref>, or any future state-of-the-art approach. Therefore, the fastest state-of-the-art enumeration approach can always be used by the framework (see Step 3 in Fig. <ref type="figure" target="#fig_0">1</ref>) to speedup the estimation even further. In other words, the framework is independent of the exact enumeration approach used.</p><p>In the interest of space and to keep the presentation simple, we have left out several details on performance enhancement that we have in our implementation. To give a small example, we use an adjacency matrix structure for small graphs in order to facilitate o(1) edge checks. For larger graphs, we efficiently encode the neighbors of the top-k vertices with the largest degree (and relabel to save space/time) for o(1) graph operations. We use a fast O(d) neighborhood set intersection procedure to dynamically select local search procedures over T e , S u , and have many other optimization's throughout the code (bit-vector graph representation, etc.).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. PARALLELIZATION</head><p>Estimation methods from the framework are parallelized via independent edge-centric graphlet computations over the selected set of edge-induced neighborhoods {(e i ), . . . , (e K )}. The parallelization is described such that it could be used for both shared and distributed memory architectures. <ref type="foot" target="#foot_7">9</ref> The parallel constructs used are a worker task queue and a global broadcast channel. Multithreaded Message Passing Interface is used for an intermachine communication. We assume each machine q has a queue and a copy of the graph<ref type="foot" target="#foot_8">10</ref> shared among the set of local workers (processing units). For global graphlet statistics, the communication cost for a single worker is O(|G|).</p><p>The main parallel loop can be viewed as a task generator that farms the next b edges out to a worker, which then computes the graphlets centered at each of the b edge neighborhoods. Edge neighborhoods are dynamically partitioned to workers by "hardness" where the most difficult edge neighborhood is assigned to the first worker, the second most difficult is assigned to the second worker, and so on. This ensures that we avoid common problems present in other approaches such as the curse of the last reducer <ref type="bibr" target="#b56">[57]</ref> (due to the power-law observation <ref type="bibr" target="#b57">[58]</ref>).</p><p>The existing state-of-the-art estimation methods are based on sequential algorithms which are inherently slow, difficult to parallelize, and have t dependent parts due to implementation issues, among others. Furthermore, our edge-centric parallel estimation method provides a better load balancing (compared to vertex-based approaches). It is straightforward to see that if N &lt; M, then our approach requires less computations per edge than per vertex since</p><formula xml:id="formula_40">X i = M e?E X i (e) = N v?V X i (v). (<label>20</label></formula><formula xml:id="formula_41">)</formula><p>Parallelizing via edge-induced neighborhoods provides much better load balancing for real-world sparse graphs that follow IEEE TRANSACTIONS ON NEURAL NETWORKS AND LEARNING SYSTEMS a power law. The time taken to count graphlets for each edge obeys a power law with only a few edges taking much longer than the others (as observed in <ref type="bibr" target="#b57">[58]</ref>). In addition, each (e) graphlet computation may be easily split into t independent tasks, e.g., 4-cliques (Algorithm 3), 4-cycles (Algorithm 4), solving the linear system, etc. Moreover, the edge-centric estimation methods are useful for situations where one might only be able to retrieve the (induced) neighborhood of an edge due to privacy or data collection issues, etc. In addition, our approach does not require storage, knowledge, and preprocessing of the entire graph (as opposed to the existing work). Other important properties include the neighborhood search order , the batch size b, and the dynamic assignment of jobs (for load balancing). As an aside, there have been a few distributed memory <ref type="bibr" target="#b58">[59]</ref> and shared memory <ref type="bibr" target="#b59">[60]</ref>, <ref type="bibr" target="#b60">[61]</ref> exact algorithms. However, these algorithms are based on older inefficient exact enumeration algorithms, whereas this paper is focused on the estimation methods. In addition, these approaches are all vertex-centric, as opposed to our edgecentric approach, and mainly focus on finding network motifs, i.e., statistically significant subgraph patterns.</p><p>IV. EXPERIMENTS In this section, we evaluate the empirical error and performance of the methods with extensive experiments on over 300 networks (real world and synthetic) from more than 20 domains with different structural characteristics. All data are available at Network Repository <ref type="bibr" target="#b61">[62]</ref>. Unless otherwise mentioned, we use PGD <ref type="bibr" target="#b12">[13]</ref> to compute the exact graphlet counts for comparison.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Estimating Global Graphlet Statistics</head><p>We proceed by first demonstrating the effectiveness of the proposed methods for estimating the frequency of graphlets up to size k = 4. Given an estimated statistic X i of an arbitrary graphlet G i ? G, we consider the relative error</p><formula xml:id="formula_42">D( X i Y i ) = |X i -Y i | Y i (<label>21</label></formula><formula xml:id="formula_43">)</formula><p>where Y i is the actual statistic (e.g., frequency) of G i . Thus, this is a measure of how far the estimated statistic is from the actual graphlet statistic. Note X i is the mean estimated value across 100 independent runs. The relative error indicates the quality of an estimated graphlet statistic relative to the magnitude of the exact statistic. Results for the most difficult graphlet (4-clique) are provided in Table <ref type="table" target="#tab_8">IV</ref> for a wide range of graphs from various domains. Note that the approach provides even better estimates for the other graphlets. Overall, the results demonstrate the effectiveness of the estimation methods as they have excellent empirical accuracy. Furthermore, the estimation error for the disconnected graphlets is considerably smaller than the error for connected graphlets. We also estimated univariate graphlet statistics beyond simple global counts such as the median, standard deviation, variance, interquartile range, Q1, Q3, and others. Overall, the methods are found to be accurate for many of the new graphlet statistics as shown in Fig. <ref type="figure">4</ref>. For estimating the maximum # of 4-node cliques that any edge participates, we observed that selecting edges via the k-core distribution resulted in high accuracy at very low sample rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Confidence Bounds</head><p>Given an arbitrary graphlet G i ? G, we compute X i using the estimators from the framework derived in Section II and construct confidence bounds for the unknown Y i . Using the large sampling distribution, we derive lower and upper bounds such that</p><formula xml:id="formula_44">? lb ? Y i ? ? ub<label>(22)</label></formula><p>where</p><formula xml:id="formula_45">? lb = X i -z ?/2 ? V[X i ]<label>(23)</label></formula><p>and</p><formula xml:id="formula_46">? ub = X i + z ?/2 ? V[X i ].<label>(24)</label></formula><p>The estimates X i and V(X i ) are computed using the equations of the unbiased estimators of counts and their variance. Thus, ? = 0.05 and z ?/2 = z 0.025 = 1.96 for a 95% confidence interval for the unknown Y i . This gives</p><formula xml:id="formula_47">X i -1.96 V[X i ] ? Y i ? X i + 1.96 V[X i ].<label>(25)</label></formula><p>Furthermore, the sample size needed is</p><formula xml:id="formula_48">K = (z ?/2 ? (V[X i ]) 1/2 /?/2) 2 .</formula><p>The 95% upper and lower bounds (i.e., ? ub and ? lb ) for the 4-clique are given in Table <ref type="table" target="#tab_8">IV</ref> (other graphlet results were removed due to space). In all cases, the actual graphlet statistics lie inside the error bounds, ? lb ? Y i ? ? ub . Fig. <ref type="figure" target="#fig_5">3</ref> investigates the properties of the sampling distribution as the sample size increases. The circle (blue) in Fig. <ref type="figure" target="#fig_5">3</ref> represents the fraction X i /Y i . Furthermore, ? lb /Y i and ? ub /Y i are represented in Fig. <ref type="figure" target="#fig_5">3</ref> by and , respectively. The key findings are summarized as follows:</p><p>? The sampling distribution is centered and balanced over the actual graph statistic (represented by the red line). ? Upper and lower bounds always contain the actual value.</p><p>? As the sample size increases, the bounds converge to the actual value of the graphlet statistic. The estimated variance decreases as k grows larger.</p><p>Fig. <ref type="figure" target="#fig_5">3</ref>. Confidence bounds for a variety of graphlets. We used graphs from a variety of domains and types. Note that 4-cliques is often the most difficult to estimate, and thus, we have dedicated more results for these hard instances. The properties of the sampling distribution and convergence of the estimates are investigated as the sample size increases. Circle (?): X/Y (y-axis). and : ? lb /Y and ? ub /Y , respectively. Square ( ): min/max X/Y . Gray dashed vertical line: sample at 40K edges. Note that the method has excellent accuracy even at this small sample size.</p><p>? Confidence bounds are within 5% of the actual for all graphs and subgraph patterns. ? Thus, the sampling distribution of the estimation framework has many attractive properties including unbiased estimates for all subgraph patterns and low variance even for very small sample sizes (and variance decreases as a function of the sample size). Let P(? lb ? Y ? ? ub ) be the exact coverage probability of our bounds. We observe that the confidence bounds are tight (for all subgraph patterns) and holds to a good approximation that is within ?5% of the actual value for all 300+ graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Estimating Graphlet Frequency Distributions</head><p>We investigate the methods for estimating the GFDs from a wide variety of networks with different structural characteristics including real-world and synthetic graphs. Exact graphlet counts are computed using PGD <ref type="bibr" target="#b12">[13]</ref> for comparison. Strikingly, the estimated GFD from our approach almost perfectly Fig. <ref type="figure">4</ref>. Estimation error for a variety of univariate statistics for the local 4-clique graphlet distribution. These results are from socfb-MIT, and thus, even a sample size of 1% is small. matches the actual GFD (Fig. <ref type="figure">5</ref>). Observe that the methods are evaluated by how well they estimate the entire exact GFD, and thus, Fig. <ref type="figure">5</ref> indicates that the proposed methods estimate all such induced subgraphs from Table <ref type="table" target="#tab_0">I</ref> with an excellent accuracy (matching the actual GFD in all cases). Results for a variety of sparse real-world graphs from different domains are given in Table <ref type="table" target="#tab_9">V</ref>. Overall, most graphlet estimates in Table V have relative error less than 10 -4 . In all cases, we find no significant difference between the estimate and the actual (Table <ref type="table" target="#tab_9">V</ref>). In Table <ref type="table" target="#tab_9">VI</ref>, we also report results on a standard collection synthetic benchmark graphs from the DIMACS  <ref type="bibr" target="#b62">[63]</ref>. These graphs are dense and are used extensively for evaluating NP-hard problems such as finding the largest clique as described in <ref type="bibr" target="#b63">[64]</ref> and <ref type="bibr" target="#b64">[65]</ref>. Nevertheless, the estimators that are given in Table VI are to be highly accurate across all graphlets and graphs. Notably, the Kolmogorov-Smirnov-Statistic is very small for all graphs in both Tables V and VI.</p><p>In addition, we also studied the effectiveness of the estimation methods on synthetic graphs from a variety of well-known graph models including Erd?s-R?nyi (ER) <ref type="bibr" target="#b66">[67]</ref> graphs, the geomertic random graphs (GEO) <ref type="bibr" target="#b64">[65]</ref>, scale-free Barab?si-Albert (BA) <ref type="bibr" target="#b67">[68]</ref> preferential attachment model, and the Kronecker graph model <ref type="bibr" target="#b65">[66]</ref>. Results are reported in Table <ref type="table" target="#tab_10">VII</ref>. The geometric random graph model networks GEO-15 to GEO-20 in Table VII are from the popular DIMACS 10 challenge <ref type="bibr" target="#b68">[69]</ref>, <ref type="bibr" target="#b69">[70]</ref>, whereas the Kronecker graphs 16-18 are from the Graph 500 supercomputer benchmark <ref type="bibr" target="#b70">[71]</ref> (see <ref type="bibr" target="#b68">[69]</ref>- <ref type="bibr" target="#b70">[71]</ref> for more details). We also included a few other geometric random graphs (GEO 1-3) in Table <ref type="table" target="#tab_10">VII</ref>; these graphs all have the same number of nodes but a different Fig. <ref type="figure">5</ref>. Estimated GFD is indistinguishable from the actual (larger dotted red line), even across a wide variety of graphs with fundamentally different structural characteristics. The y-axis is the normalized 4-vertex graphlet counts x = xmin(x)/ max(x)min(x) where x is the vector of graphlet counts. Nevertheless, similar results were found for other graphlet sizes and GFD variants. number of edges going from 100K to 200K in 50K increments. Overall, the estimation methods have an excellent accuracy (with very small relative error) across all synthetic graphs from the various graph models as observed in Table <ref type="table" target="#tab_10">VII</ref>. Similar results were observed using other graph models such as Chung-Lu and Block Erdos-Renyi, and therefore, were removed for brevity. Many graphs and results were also removed due to space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Scalability Results</head><p>This section investigates the scalability of the parallel graphlet estimation methods. We use speedup to evaluate the effectiveness of the parallel algorithm. Speedup is simply S p = (T 1 /T p ), where T 1 is the execution time of the sequential algorithm and T p is the execution time of the parallel algorithm with p processing units. For the results in Fig. <ref type="figure" target="#fig_6">6</ref>, we used a 4-processor Intel Xeon E5-4627 v2 3.3 GHz CPU. Overall, the methods show strong scaling (see Fig. <ref type="figure" target="#fig_6">6</ref>). Similar results were found for other graphs and sample sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Local Graphlet Estimation Experiments</head><p>This section investigates the accuracy, runtime, and scalability of the computational framework presented in Section II-E for estimating local graphlet statistics and distributions of individual graph elements such as an edge (or node, path, or subgraph) as opposed to estimating global graphlet statistics over the entire graph G. Results are given in Table <ref type="table" target="#tab_10">VIII</ref>. Note that for simplicity, nodes are selected uniformly at random; thus, F in Algorithm 7 represents a uniform distribution over the neighbors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. Extremal Graphlet Estimation</head><p>Given a graph G, and a graphlet G j of size k, the extremal (max) graphlet estimation problem is to find</p><formula xml:id="formula_49">Z j = max e i ?{e 1 ,...,e m } [X j (e i )]<label>(26)</label></formula><p>where Z j is the maximum number of times graphlet G j occurs at any edge e i ? E in G. The aim is to compute the maximum frequency that graphlet G j occurs at any edge e i ? E in G. For this problem, we leverage the proposed LGE framework from Section II and bias the estimation method toward selecting a small set of edge J where G j is most likely to appear at larger frequencies. The set of edges J are sampled via a graph parameter/distribution that appropriately biases selection of edges that are most likely to induce large quantities of the graphlet G j . For relatively dense graphlets such as the k-clique (or chordal-cycle/diamond, etc.), we investigated sampling edges from the largest k-core subgraphs. More specifically, instead of selecting edge neighborhoods via a uniform distribution F, our approach replaces F in Line 2 of Algorithm 1 with a weighted distribution that biases the selection of edge neighborhoods toward those in large k-core subgraphs (i.e., edge neighborhoods centered at edges with large k-core numbers). Similarly, one may also use the triangle core subgraphs if computed to obtain an estimate with lower error. Results demonstrate the effectiveness of this approach in Table <ref type="table" target="#tab_11">IX</ref>. Strikingly, the earlier approach finds the optimal solution (while taking only a fraction of the time) for many graphs as well as many of the k-vertex graphlets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. Comparison to Previous Work</head><p>To compare with the previous estimation methods, we measure the time required by each method to obtain an estimate with relative error less than 0.01 (accuracy greater than 0.99). This ensures the estimation methods are compared fairly. Notice that it does not make sense to compare the  accuracy of an estimation method without taking into account runtime, since the accuracy (relative error) of an estimation method increases (decreases) as a function of time (or work performed). Obviously, if time is not considered, then one could simply use an exact method to achieve perfect accuracy. We also note that fixing the number of samples used by each method and measuring accuracy often leads to incorrect and misleading results since the accuracy depends on what each method calls a sample, and thus, a method may use significantly more work than another.</p><p>In Table <ref type="table" target="#tab_12">X</ref>, we report the time each method takes to obtain an estimate with relative error less than 0.01 (accuracy greater than 0.99). As an aside, it is worth mentioning that the existing work is fundamentally different than ours, both in techniques, as well as in the estimation problems themselves. For instance, these methods estimate only simple global counts of graphlets, whereas the proposed class of LGE methods accurately estimates a wide variety of global and local statistics (including simple counts) and distributions (see Table <ref type="table" target="#tab_2">II</ref> for a summary of the differences). Note that the 3-path sampling heuristic by Jha et al. <ref type="bibr" target="#b48">[49]</ref> requires a lot more samples to obtain estimates with similar accuracy. In addition, that approach  Edges/nodes from tech-routers <ref type="bibr" target="#b61">[62]</ref> are colored/weighted by the local 4-clique count (right). We observe that the visualizations using the exact and estimated graphlet features are strikingly similar, with trivial differences. requires two different methods for estimating graphlet counts of size 4, and thus, requires 2? the samples. In particular, we find that 3-path sampling, GUISE <ref type="bibr" target="#b46">[47]</ref>, and GRAFT <ref type="bibr" target="#b47">[48]</ref> are unable to obtain accurate estimates within a reasonable amount of time. Furthermore, GUISE and GRAFT did not converge, even despite using millions of samples, which is consistent with recent findings <ref type="bibr" target="#b48">[49]</ref>, and especially true for the massive networks used in this paper (see Table <ref type="table" target="#tab_12">X</ref>). In some cases, the runtime of these methods even exceeded an exact graphlet algorithm, and thus these methods are not very useful in practice. Notably, our method is not only more accurate at lower sampling rates, but significantly faster than these methods. For instance, on soc-flickr we are 8047? faster than the path sampling heuristic. In some cases, we even find that our exact method is significantly faster than the 3-path heuristic (for instance, on wiki-talk and others). We also investigated selecting node-centric neighborhoods and other methods based on sampling graphlets directly, though the accuracy was worse in all cases, and thus removed for brevity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>H. Applications</head><p>This section uses the novel statistics and estimators for real-time interactive graph visualization and exploratory analysis. Graphlet estimators are implemented in a web-based interactive visual graph mining platform <ref type="bibr" target="#b71">[72]</ref> called GraphVis (Fig. <ref type="figure" target="#fig_7">7</ref>). Across all experiments, the graphlet methods are fast and scalable taking &lt;1 ms for 99% of the interactive queries and graphs, while also accurate (with no observable difference). Thus, the graphlet estimation methods are able to support real-time interactive queries for visual graph mining, exploration, and predictive modeling tasks (such as relational classification).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>This paper proposed a general unbiased estimation framework called LGE for estimation of global and local graphlet properties (such as counts) in massive networks with billions of edges. The methods are shown to be accurate, fast, and scalable for both sparse and dense real-world and synthetic graphs of arbitrary size. Moreover, LGE has many interchangeable components and is effective for a wide variety of networks, applications, and domains, which have fundamentally different structural properties. We have shown that even for large networks with over a billion edges, one can compute graphlets fast and with low error. The newly introduced family of graphlet estimators greatly improves the scalability, flexibility, and utility of graphlets. Finally, the methods give rise to new opportunities and applications for graphlets (as shown in Section IV-H).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Overview of the LGE framework for estimating local graphlet counts. The sampled edge from step 1 is shown in red (-) and highlighted. Unsampled neighbors shown in step 1-2 are dashed and light gray.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>2 5 : 2</head><label>52</label><figDesc>return X -the estimated graphlet countsAlgorithm Family of parallel LGE methods for deriving unbiased estimates of global graphlet statisticsInput: a graph G and a set of sampled edges J 1: parallel for each e = (v, u) ? J in order do 2:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>3 : 4 :Algorithm 4</head><label>344</label><figDesc>parallel for each w ? T e do for each r ? (w) where (r) = ? 3 do set K e ? K e + 1 Cycle counts via neigh-iter 1: procedure CYCLE(, S u ) 2:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>3 :Algorithm 5</head><label>35</label><figDesc>parallel for each w ? S u do 4: for each r ? (w) where (r) = ? 2 do set C e ? C e + 1 Clique counts restricted to searching T e 1: procedure CLIQUERES(, T e ) 2:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>3 :Algorithm 6</head><label>36</label><figDesc>parallel for each vertex w i in an ordering w 1 , w 2 , ? ? ? of T e do 4: for each w j ? {w i+1 , . . . , w |Te| } in order do 5: if w i ? (w j ) via binary search then K e ? K e + 1 6: return K e Cycle counts restricted to S u and S v 1: procedure CYCLERES(, S u , S v ) 2:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>3 :</head><label>3</label><figDesc>parallel for each w ? S u do 4: for all r ? S v do 5: if r ? (w) via binary search then C e ? C e + 1 4-cycle 6:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Strong scaling results are observed across various sample sizes (see text for discussion).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Application of the estimation methods for real-time interactive graph mining and learning. Edges and nodes from a power-grid network [62] are colored/weighted by the estimated local 4-path count (left). (a) Estimated global graphlet counts and other statistics. (b) Summary statistics of the selected subgraph (rectangular region). (c) Local graphlet statistics (including frequency, mean, max, standard deviation, ?) of the selected edge.Edges/nodes from tech-routers<ref type="bibr" target="#b61">[62]</ref> are colored/weighted by the local 4-clique count (right). We observe that the visualizations using the exact and estimated graphlet features are strikingly similar, with trivial differences.</figDesc><graphic url="image-29.png" coords="12,313.55,224.09,110.66,99.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I SUMMARY</head><label>I</label><figDesc>OF GRAPHLET PROPERTIES AND NOTATION</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>u)}, and thus |S v | and |S u | are the number of 2-stars centered at v and u, respectively. These quantities are computed in Lines 5-9 of Algorithm 2. For further intuition, see Fig.2. Let us also note that (?) is a hash table for checking</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II COMPARISON</head><label>II</label><figDesc></figDesc><table /><note><p>OF GRAPHLET ESTIMATION METHODS edge existence in o(</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>This section formulates the local graphlet estimation problem, then describes a computational framework for estimating local graphlet statistics. The experiments in Section IV-E demonstrate the effectiveness of these methods. Computing local graphlet statistics x i for an individual edge e i ? E (or node) in G (as opposed to the global graph G) is important with numerous potential applications. For instance, they can be used as powerful discriminative features {x 1 , x 2 , . . . , x M }</figDesc><table /><note><p><p><p><p>using a hash table of size N = |V | (Algorithms 3 and 4) or O(3 -1) = O() using binary search over T or S u and S v directly (Algorithms 5 and 6).</p>8 </p>As opposed to both S u and S v . IEEE TRANSACTIONS ON NEURAL NETWORKS AND LEARNING SYSTEMS</p>E. Estimation of Local Graphlet Statistics</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>= ? 3 then Set x 4 ? x 4 + d w /d w ? p e</figDesc><table><row><cell></cell><cell></cell><cell>stars</cell></row><row><cell>12:</cell><cell>parallel for each w ? T e do</cell><cell></cell></row><row><cell>13:</cell><cell>for j = 1, . . . , d w ? p e do</cell><cell></cell></row><row><cell>14:</cell><cell cols="2">Select a vertex r ? (w) via an arbitrary distribution F</cell></row><row><cell>15:</cell><cell cols="2">if (r) 4-clique</cell></row><row><cell>16:</cell><cell>Set (w) to ? 4</cell><cell></cell></row><row><cell>17:</cell><cell>x 5 = |Te| 2 -x 4</cell><cell>chordal-cycles</cell></row><row><cell>18:</cell><cell>parallel for each w ? S e</cell><cell>tailed-tri</cell></row><row><cell>28:</cell><cell>Set (w) to 0</cell><cell></cell></row><row><cell>29:</cell><cell>x 8 = |Sv | 2 + |Sv | 2 -x 6</cell><cell>3-stars</cell></row><row><cell>30:</cell><cell>x 9 = (|S v | ? |S u |) -x 7</cell><cell>4-paths</cell></row><row><cell>31:</cell><cell>return x, where x</cell><cell></cell></row></table><note><p>u do 19: for j = 1, . . . , d w ? p e do 20: Select a vertex r ? (w) via an arbitrary distribution F 21: if (r) = ? 1 then set x 7 ? x 7 + d w /d w ? p e 4-cycle 22: if (r) = ? 2 then set x 6 ? x 6 + d w /d w ? p e tailed-tri 23: Set (w) to 0 24: parallel for each w ? S v do 25: for j = 1, . . . , d w ? p e do 26: Select a vertex r ? (w) via an arbitrary distribution F 27: if (r) = ? 1 then set x 6 ? x 6 + d w /d w ? p k is the estimate of graphlet G k for e i</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>TABLE III COMPUTATIONAL COMPLEXITY</head><label>IIICOMPLEXITY</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>TABLE IV ESTIMATES</head><label>IV</label><figDesc>OF EXPECTED VALUE AND RELATIVE ERROR</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>TABLE V GFD</head><label>V</label><figDesc>ESTIMATES FOR A WIDE VARIETY OF SPARSE REAL-WORLD NETWORKS</figDesc><table><row><cell>TABLE VI</cell></row><row><cell>GFD ESTIMATES FOR DENSE SYNTHETIC GRAPHS FROM DIMACS</cell></row><row><cell>NP-Hard Problem Challenge</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>TABLE VII GFD</head><label>VII</label><figDesc>ESTIMATES OF SYNTHETIC GRAPHS FROM A VARIETY OF WELL-KNOWN SYNTHETIC GRAPH MODELS</figDesc><table><row><cell>TABLE VIII</cell></row><row><cell>LOCAL GRAPHLET ESTIMATION RESULTS</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>TABLE IX RESULTS</head><label>IX</label><figDesc>FOR EXTREMAL GRAPHLET ESTIMATION</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>TABLE X RESULTS</head><label>X</label><figDesc>COMPARING LGE TO OTHER METHODS</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>A graphlet estimate X i is unbiased if E[X i ] = Y<ref type="bibr" target="#b35">[36]</ref> and Y is the actual.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1"><p>The term graphlet properties is used more generally toer to graphlet (single-valued) statistics and distributions.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_2"><p>Note that the total number of 4-cliques in G is an example of a global graphlet statistic since it is computed over all graph elements (edges and nodes) in G, as opposed to an individual graph element in G.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_3"><p>? Counts of graphlets G i ? G, for all i = 1, 2, . . . |G| or the count of a specific graphlet G i ? G. In particular, this paper proposes estimators for both globalX G = X 1 X 2 ? ? ? and local graphlet counts x i = x 1 x 2 ? ? ? for edge e i ? E.? Graphlet frequency distributions (Definition 2).? Aggregate (single valued) statistics such as the max, mean, median, variance, etc. These aggregate</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>As an aside, counts have been used for many important measures in computational biology such as the graphlet degree distribution<ref type="bibr" target="#b10">[11]</ref> and agreements<ref type="bibr" target="#b10">[11]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>The term edge-centricers to algorithms that iterate over edges as opposed to nodes, see<ref type="bibr" target="#b50">[51]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_6"><p>Note all count variables are initialized to zero; and + = is the addition assignment operator.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_7"><p>In the context of message passing and distributed memory parallel computing, a nodeers to another machine on the network (or bus) with its own set of memory, and multicore CPUs, etc.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_8"><p><ref type="bibr" target="#b9">10</ref> For implementation on parallel computing architectures with limited memory, one only needs to transfer the set of edge-induced neighborhood subgraphs, which can be streamed if needed.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Image categorization by learning a propagated graphlet path</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Neural Netw. Learn. Syst</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="674" to="685" />
			<date type="published" when="2016-03">Mar. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Graph kernels</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V N</forename><surname>Vishwanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">N</forename><surname>Schraudolph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">R</forename><surname>Kondor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Borgwardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1201" to="1242" />
			<date type="published" when="2010-03">Mar. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Efficient graphlet kernels for large graph comparison</title>
		<author>
			<persName><forename type="first">N</forename><surname>Shervashidze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vishwanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Petri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mehlhorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Borgwardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. AISTATS</title>
		<meeting>AISTATS</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="488" to="495" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Network motifs: Simple building blocks of complex networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Milo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shen-Orr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Itzkovitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kashtan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chklovskii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Alon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">298</biblScope>
			<biblScope unit="issue">5594</biblScope>
			<biblScope unit="page" from="824" to="827" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Modeling interactome: Scalefree or geometric?</title>
		<author>
			<persName><forename type="first">N</forename><surname>Pr?ulj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Corneil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Jurisica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">18</biblScope>
			<biblScope unit="page" from="3508" to="3515" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Uncovering biological network function via graphlet degree signatures</title>
		<author>
			<persName><forename type="first">T</forename><surname>Milenkovi?</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Pr?ulj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cancer Informat</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">257</biblScope>
			<date type="published" when="2008-04">Apr. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Graphlet-based measures are suitable for biological network comparison</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hayes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Pr?ulj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="483" to="491" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Vertex collocation profiles: Subgraph counting for link analysis and prediction</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">N</forename><surname>Lichtenwalter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">V</forename><surname>Chawla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1019" to="1028" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Probabilistic graphlet cut: Exploiting spatial structure cue for weakly supervised image segmentation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CVPR</title>
		<meeting>CVPR</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="1908" to="1915" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Pairwise alignment of protein interaction networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Koyut?rk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Topkara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Subramaniam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Szpankowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Grama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Biol</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="182" to="199" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Biological network comparison using graphlet degree distribution</title>
		<author>
			<persName><forename type="first">N</forename><surname>Pr?ulj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="177" to="e183" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">GREAT: Graphlet edge-based network alignment</title>
		<author>
			<persName><forename type="first">J</forename><surname>Crawford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Milenkovi?</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. BIBM</title>
		<meeting>BIBM</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="220" to="227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Efficient graphlet counting for large networks</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Neville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Duffield</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICDM</title>
		<meeting>ICDM</meeting>
		<imprint>
			<date type="published" when="2015-11">Nov. 2015</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Graphlet decomposition: Framewlork, algorithms, and applications</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Neville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Duffield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Willke</surname></persName>
		</author>
		<ptr target="http://github.com/nkahmed/pgd" />
	</analytic>
	<monogr>
		<title level="j">Knowl. Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="689" to="722" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Temporal motifs in time-dependent networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Kovanen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Karsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kaski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kert?sz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Saram?ki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Stat. Mech., Theory Exp</title>
		<imprint>
			<biblScope unit="volume">2011</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page">P11005</biblScope>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Exploring the structure and function of temporal networks with dynamic graphlets</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hulovatyy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Milenkovi?</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="171" to="180" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Defining and identifying communities in networks</title>
		<author>
			<persName><forename type="first">F</forename><surname>Radicchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Castellano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Cecconi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Loreto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Parisi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Nat. Acad. Sci. USA</title>
		<imprint>
			<biblScope unit="volume">101</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="2658" to="2663" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Uncovering the overlapping community structure of complex networks in nature and society</title>
		<author>
			<persName><forename type="first">G</forename><surname>Palla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Der?nyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Farkas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Vicsek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">435</biblScope>
			<biblScope unit="issue">7043</biblScope>
			<biblScope unit="page" from="814" to="818" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Graphlet-based edge clustering reveals pathogen-interacting proteins</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Solava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P</forename><surname>Michaels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Milenkovi?</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">18</biblScope>
			<biblScope unit="page" from="480" to="486" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A higher-order latent space network model</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Willke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. AAAI PAIR</title>
		<meeting>AAAI PAIR</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="789" to="795" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Graph-based anomaly detection</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Noble</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGKDD KDD</title>
		<meeting>SIGKDD KDD</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="631" to="636" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Graph based anomaly detection and description: A survey</title>
		<author>
			<persName><forename type="first">L</forename><surname>Akoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Koutra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Mining Knowl. Discovery</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="626" to="688" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Vertex collocation profiles: Theory, computation, and results</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">N</forename><surname>Lichtenwalter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">V</forename><surname>Chawla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SpringerPlus</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">116</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Revealing missing parts of the interactome via link prediction</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hulovatyy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Solava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Milenkovi?</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS ONE</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">RAGE-A rapid graphlet enumerator for large networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Marcus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shavitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="810" to="819" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">FANMOD: A tool for fast network motif detection</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wernicke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Rasche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1152" to="1153" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">GraphCrunch: A tool for large network analyses</title>
		<author>
			<persName><forename type="first">T</forename><surname>Milenkovi?</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Pr?ulj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinf</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">70</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A combinatorial approach to graphlet counting</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ho?evar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dem?ar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="559" to="565" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Critical questions for big data: Provocations for a cultural, technological, and scholarly phenomenon</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Crawford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf., Commun. Soc</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="662" to="679" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Sensing as a service and big data</title>
		<author>
			<persName><forename type="first">A</forename><surname>Zaslavsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Perera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Georgakopoulos</surname></persName>
		</author>
		<ptr target="https://arxiv.org/abs/1301.0159" />
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Approximation of graph edit distance based on Hausdorff matching</title>
		<author>
			<persName><forename type="first">A</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Suen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Frinken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Riesen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bunke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognit</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="331" to="343" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Approximate clustering via core-sets</title>
		<author>
			<persName><forename type="first">M</forename><surname>B?doiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Har-Peled</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Indyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. STOC</title>
		<meeting>STOC</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="250" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">An almosttight distributed algorithm for computing single-source shortest paths</title>
		<author>
			<persName><forename type="first">M</forename><surname>Henzinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Krinninger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Nanongkai</surname></persName>
		</author>
		<ptr target="https://arxiv.org/abs/1504.07056" />
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">k-Centralities: Local approximations of global measures based on shortest paths</title>
		<author>
			<persName><forename type="first">J</forename><surname>Pfeffer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Carley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1043" to="1050" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">On unbiased sampling for unstructured peer-to-peer networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Stutzbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rejaie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Duffield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGCOMM IMC</title>
		<meeting>SIGCOMM IMC</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="27" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Graph sample and hold: A framework for big-graph analytics</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Duffield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Neville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kompella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGKDD KDD</title>
		<meeting>SIGKDD KDD</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1446" to="1455" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">MASCOT: Memory-efficient and accurate sampling for counting local triangles in graph streams</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Kang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGKDD KDD</title>
		<meeting>SIGKDD KDD</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="685" to="694" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">DOULION: Counting triangles in massive graphs with a coin</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Tsourakakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGKDD KDD</title>
		<meeting>SIGKDD KDD</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="837" to="846" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Colorful triangle counting and a MapReduce implementation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Pagh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Tsourakakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">112</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="277" to="281" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Approximate triangle counting algorithms on multi-cores</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Al</forename><surname>Hasan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Big Data</title>
		<meeting>Int. Conf. Big Data</meeting>
		<imprint>
			<date type="published" when="2013-10">Oct. 2013</date>
			<biblScope unit="page" from="127" to="133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Dynamic approximate all-pairs shortest paths in undirected graphs</title>
		<author>
			<persName><forename type="first">L</forename><surname>Roditty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Zwick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="670" to="683" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Parallel maximum clique algorithms with applications to network analysis</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">F</forename><surname>Gleich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Gebremedhin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Sci. Comput</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="589" to="C616" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<author>
			<persName><forename type="first">U</forename><surname>Brandes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Erlebach</surname></persName>
		</author>
		<title level="m">Network Analysis: Methodological Foundations</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3418</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Entity resolution in graphs</title>
		<author>
			<persName><forename type="first">I</forename><surname>Bhattacharya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Getoor</surname></persName>
		</author>
		<editor>Mining Graph Data, D. J. Cook and L. B. Holder</editor>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Wiley</publisher>
			<biblScope unit="page">311</biblScope>
			<pubPlace>San Francisco, CA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Role discovery in networks</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Knowl. Data Eng</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1112" to="1131" />
			<date type="published" when="2015-04">Apr. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Introduction to SRL</title>
		<author>
			<persName><forename type="first">L</forename><surname>Getoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Taskar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<publisher>MIT press</publisher>
			<pubPlace>Cambridge, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">GUISE: A uniform sampler for constructing frequency histogram of graphlets</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Bhuiyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Al</forename><surname>Hasan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowl. Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="511" to="536" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">GRAFT: An efficient graphlet counting method for large graph analysis</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Bhuiyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Al</forename><surname>Hasan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Knowl. Data Eng</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2466" to="2478" />
			<date type="published" when="2014-10">Oct. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Path sampling: A fast and provable method for estimating 4-vertex subgraph counts</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Seshadhri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pinar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="495" to="505" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">A generalization of sampling without replacement from a finite universe</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Horvitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Amer. Stat. Assoc</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">260</biblScope>
			<biblScope unit="page" from="663" to="685" />
			<date type="published" when="1952">1952</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">X-stream: Edge-centric graph processing using streaming partitions</title>
		<author>
			<persName><forename type="first">A</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mihailovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zwaenepoel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SOSP</title>
		<meeting>SOSP</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="472" to="488" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Transforming graph data for statistical relational learning</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">K</forename><surname>Mcdowell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Aha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Neville</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Artif. Intell. Res</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="363" to="441" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Social temporal collaborative ranking for context aware movie recommendation</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">N</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Intell. Syst. Technol</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Graph clustering</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Schaeffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Sci. Rev</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="64" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Probability inequalities for sums of bounded random variables</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hoeffding</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Amer. Stat. Assoc</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">301</biblScope>
			<biblScope unit="page" from="13" to="30" />
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Estimation of local subgraph counts</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Willke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. Big Data</title>
		<meeting>IEEE Int. Conf. Big Data</meeting>
		<imprint>
			<date type="published" when="2016-12">Dec. 2016</date>
			<biblScope unit="page" from="586" to="595" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Counting triangles and the curse of the last reducer</title>
		<author>
			<persName><forename type="first">S</forename><surname>Suri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vassilvitskii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="607" to="614" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Leveraging multiple GPUs and CPUs for graphlet counting in large networks</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CIKM</title>
		<meeting>CIKM</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1783" to="1792" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Parallel discovery of network motifs</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ribeiro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lopes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Parallel Distrib. Comput</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="144" to="154" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Parallel subgraph counting for multicore architectures</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">O</forename><surname>Apar?cio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M P</forename><surname>Ribeiro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M A</forename><surname>Da Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ISPA</title>
		<meeting>ISPA</meeting>
		<imprint>
			<date type="published" when="2014-08">Aug. 2014</date>
			<biblScope unit="page" from="34" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">A parallel algorithm for extracting transcriptional regulatory network motifs</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Touchman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">B</forename><surname>Suh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xue</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. BIBE</title>
		<meeting>BIBE</meeting>
		<imprint>
			<date type="published" when="2005-10">Oct. 2005</date>
			<biblScope unit="page" from="193" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">The network data repository with interactive graph analytics and visualization</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<ptr target="http://networkrepository.com" />
	</analytic>
	<monogr>
		<title level="m">Proc. AAAI</title>
		<meeting>AAAI</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="4292" to="4293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Trick</surname></persName>
		</author>
		<title level="m">Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge</title>
		<meeting><address><addrLine>Providence, RI, USA</addrLine></address></meeting>
		<imprint>
			<publisher>AMS</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">26</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<ptr target="http://www.info.univ-angers.fr/pub/porumbel/graphs/" />
		<title level="m">DIMACS Graphs: Benchmark Instances</title>
		<imprint>
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<monogr>
		<title level="m" type="main">Random Geometric Graphs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Penrose</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>London, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Kronecker graphs: An approach to modeling networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chakrabarti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ghahramani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="985" to="1042" />
			<date type="published" when="2010-02">Feb. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">On random graphs</title>
		<author>
			<persName><forename type="first">P</forename><surname>Erd?s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>R?nyi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Publ. Math. Debrecen</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="290" to="297" />
			<date type="published" when="1959">1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Statistical mechanics of complex networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A.-L</forename><surname>Barab?si</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rev. Mod. Phys</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">47</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Graph partitioning and graph clustering</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Bader</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Meyerhenke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sanders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th DIMACS Implement</title>
		<meeting>10th DIMACS Implement</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Engineering a scalable high quality graph partitioner</title>
		<author>
			<persName><forename type="first">M</forename><surname>Holtgrewe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sanders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schulz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IPDPS</title>
		<meeting>IPDPS</meeting>
		<imprint>
			<date type="published" when="2010-04">Apr. 2010</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Introducing the graph 500</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">B</forename><surname>Wheeler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">W</forename><surname>Barrett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Ang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cray Users Group</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="45" to="74" />
			<date type="published" when="2010-05">May 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Interactive visual graph analytics on the Web</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">K</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rossi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICWSM</title>
		<meeting>ICWSM</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="566" to="569" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<monogr>
		<title level="m" type="main">Rossi received the M.S. and Ph.D. degrees in computer science from Purdue University</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ryan</surname></persName>
		</author>
		<imprint>
			<pubPlace>West Lafayette, IN, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
