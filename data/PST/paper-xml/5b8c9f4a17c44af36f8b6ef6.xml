<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Dynamic Service Migration Mechanism in Edge Cognitive Computing</title>
				<funder ref="#_SkdyphN #_UuXcNBf">
					<orgName type="full">National Key R&amp;D Program of China</orgName>
				</funder>
				<funder ref="#_bB9fd9d">
					<orgName type="full">Slovenian Research Agency</orgName>
				</funder>
				<funder ref="#_Wa8GQvv #_8WP3hrH">
					<orgName type="full">China National Natural Science Foundation</orgName>
				</funder>
				<funder ref="#_Y44SErc">
					<orgName type="full">National Natural Science Foundation of China</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Min</forename><surname>Chen</surname></persName>
							<email>minchen@ieee.org</email>
						</author>
						<author>
							<persName><forename type="first">Giancarlo</forename><surname>Fortino</surname></persName>
							<email>g.fortino@unical.it</email>
						</author>
						<author>
							<persName><forename type="first">Yixue</forename><surname>Hao</surname></persName>
							<email>yixuehao@hust.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Long</forename><surname>Hu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Wei</forename><surname>Li</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">School of Computer Science and Technology</orgName>
								<orgName type="department" key="dep2">Tech-nology</orgName>
								<orgName type="laboratory">and Wuhan National Laboratory for Optoelectronics</orgName>
								<orgName type="institution">Huazhong University of Science</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution" key="instit1">WEI LI</orgName>
								<orgName type="institution" key="instit2">Huazhong University of Science and Technology</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">University of Calabria</orgName>
								<address>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department" key="dep1">IZTOK HUMAR</orgName>
								<orgName type="department" key="dep2">Faculty of Electrical Engineering</orgName>
								<orgName type="institution">University of Ljubljana</orgName>
								<address>
									<country key="SI">Slovenia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="department" key="dep1">School of Computer Science and Technology</orgName>
								<orgName type="department" key="dep2">Tech-nology</orgName>
								<orgName type="institution">Huazhong University of Science</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff7">
								<orgName type="department">Wuhan National Laboratory for Optoelectronics</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff8">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff9">
								<orgName type="institution">Univer-sity of Calabria</orgName>
								<address>
									<postCode>87036</postCode>
									<settlement>Rende</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff10">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff11">
								<orgName type="department">Faculty of Electrical En-gineering</orgName>
								<orgName type="institution" key="instit1">I. Humar</orgName>
								<orgName type="institution" key="instit2">University of Ljubljana</orgName>
								<address>
									<postCode>1000</postCode>
									<country key="SI">Slovenia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Dynamic Service Migration Mechanism in Edge Cognitive Computing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3239565</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T08:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Cognitive computing</term>
					<term>cloud computing</term>
					<term>edge computing</term>
					<term>mobile cloud computing</term>
					<term>service migration</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Driven by the vision of edge computing and the success of rich cognitive services based on artificial intelligence, a new computing paradigm, edge cognitive computing (ECC), is a promising approach that applies cognitive computing at the edge of the network. ECC has the potential to provide the cognition of users and network environmental information, and further to provide elastic cognitive computing services to achieve a higher energy efficiency and a higher Quality of Experience (QoE) compared to edge computing. This article first introduces our architecture of the ECC and then describes its design issues in detail. Moreover, we propose an ECC-based dynamic service migration mechanism to provide insight into how cognitive computing is combined with edge computing. In order to evaluate the proposed mechanism, a practical platform for dynamic service migration is built up, where the services are migrated based on the behavioral cognition of a mobile user. The experimental results show that the proposed ECC architecture has ultra-low latency and a high user experience, while providing better service to the user, saving computing resources, and achieving a high energy efficiency. CCS Concepts: ? Networks ? Network services; ? Computer systems organization ? Distributed architectures; ? Theory of computation ? Design and analysis of algorithms;</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The massive proliferation of personal computing devices is opening up new human-centered designs that blur the boundaries between humans and machines <ref type="bibr" target="#b0">[1]</ref>. Now, the frontier for research on data management is related to the so-called edge computation and communication, consisting of an architecture of one or more collaborative multitude(s) of computing nodes that are positioned among edge networks with the access of cloud-based services. Such a mediating level is responsible for carrying out a substantial amount of data storage and processing to reduce the retrieval time and have more control over the data with respect to cloud-based services, and to consume fewer resources and less energy to reduce the workload <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref>.</p><p>The edge computing paradigm has multiple advantages. First, the edge node can reduce the traffic load of backhaul by providing a certain amount of computing capability, which is significant for applications such as online games that need to transmit 60 or even 120 frames per second. As an alternative solution, the server only sends parameters such as character position, timestamp, and attribute changes (some common data) and leaves the edge node to compute and render the visual image. Second, as a result of the large number of edge nodes deployed in 5G and the bigdata analysis based on user preference, the popular contents can be acquired in advance in the interconnecting edge devices, which are only one hop away from the user.</p><p>However, edge computing is also faced with many challenges. First, the operation and processing capabilities of an edge device are limited and can fail to meet the demands on real-time service, data optimization, and application intelligence. Second, the intelligence of most typical edge-computing services is only embodied in the artificial intelligence (AI)-enabled data storage and processing on the edge. However, the intelligence is missing from the aspects of behavior feedback, automatic networking, load balance, and data-driven network optimization.</p><p>Cognitive computing originates from cognitive scientific theory. Now, it makes machines achieve "brain-like" cognitive intelligence through an interactive cognition loop with machine, cyber space, and humans. Compared to big-data analytics, it possesses the following features:</p><p>(1) it analyzes the existing data and information in cyber space, to improve the intelligence of the machine; (2) the machine reinterprets and explains the information in the existing cyber space and accordingly generates new information-humans also participate in this process; <ref type="bibr" target="#b2">(3)</ref> the machine has the cognition of a human, which provides a more intelligent cognitive service. Its enabling paradigms (e.g., agent-based computing) have been researched and the related concrete applications based on cognitive Internet of Things (IoT) platforms and frameworks have been studied in <ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref>.</p><p>Nevertheless, the cognitive computing application mainly depends on the machine-learning model trained on the cloud, while the real-time inference requests are made by end edge devices, which so far have been the most common deployment mode of the cognitive service. The existing problem of such a mode is the large latency in the network operation and the service delivery. However, if the cognitive service is deployed on the network edge, the latency of the network response to the user request will be greatly reduced, so research into edge deployment for training and inference machines is rapidly increasing. Therefore, considering both the advantages and disadvantages of edge computing and cognitive computing, a new computing paradigm called Edge Cognitive Computing (ECC) is proposed, which combines edge computing and cognitive computing. Such a new architecture integrates communication, computation, storage, and application on edge networks; it can achieve data and resource cognition by cognitive computing. Moreover, it can provide personalized services nearby, enabling the network to have a deeper, human-centered cognitive intelligence.</p><p>The main contributions of this article are as follows:</p><p>? We propose a new ECC architecture that deploys cognitive computing at the edge of the network to provide dynamic and elastic storage and computing services. In addition, the design issues of how to fuse these key technologies of cognitive computing and edge computing are illustrated in detail. ? We propose an ECC-based dynamic cognitive service migration mechanism that considers both the elastic allocation of the cognitive computing services and user mobility, to provide a mobility-aware dynamic service adjustment scheme. The remainder of the article is organized as follows. Section 2 introduces the related work. Section 3 presents the proposed architecture for edge cognitive computing and design issues in detail. Section 4 introduces the dynamic cognitive service migration mechanism. Section 5 demonstrates the ECC test platform for dynamic service migration. Finally, Section 6 concludes the article.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The need for on-demand state-of-the-art services (smart sensing, e-healthcare, smart transportation, etc.) and the latency issues that affect the overall Quality of Service (QoS) for various applications have paved the way to the powerful paradigm of edge computing.</p><p>There is a lot of research on edge computing with respect to energy efficiency and latency. The cooperation and interplay among cloud and edge devices can help to reduce energy consumption in addition to maintaining the QoS for various applications. However, a large number of migrations among edge devices and cloud servers leads to congestion in the underlying networks. Hence, to handle this problem, <ref type="bibr" target="#b6">[7]</ref> presented an SDN-based edge-cloud interplay to handle the streaming of big data in the industrial IoT environment. Edge computing is expected to support not only the ever-growing number of users and devices but also a diverse set of new applications and services. The work in <ref type="bibr" target="#b0">[1]</ref> introduced a system that can pervasively operate in any networking environment and allows for the development of innovative applications by pushing services near to the edge of the network.</p><p>In terms of security and privacy in edge computing, there is an increasing realization that edge devices, which are closer to the user, can play an important part in supporting latency-and privacysensitive applications <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>. Therefore, the security challenges relate to the protection of device data, such that an unauthorized person cannot access the data, providing secure data sharing between the device and the edge cloud, and safe data storage on the edge cloud <ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref>.</p><p>However, the above research on edge computing mostly focused on solving the communication problems by leveraging computing and storage, like how to reduce the network load, improve the network efficiency, and reduce the transmission delay. In addition, these works did not consider how to solve the personalization of actual AI applications and how to provide elastic storage and computing services.</p><p>Applying cognitive computing in various applications for smart cities has been widely researched; for example, the authors in <ref type="bibr" target="#b12">[13]</ref> studied the role of intelligence algorithms such as machine learning and data analytics within the framework of smart-city applications, such as smart transportation, smart parking, and smart environment, to address the challenges of big data. <ref type="bibr" target="#b13">[14]</ref> also explored how deep reinforcement learning and its shift toward semisupervision can handle the cognitive side of smart-city services. The work in <ref type="bibr" target="#b14">[15]</ref> indicated that the application of deep networks has already been successful in big-data areas, and fog-to-things computing can be the ultimate beneficiary of the approach for attack detection because the massive amount of data produced by IoT devices enables deep models to learn better than shallow algorithms. In summary, most of the current research on cognitive computing has focused on the design of algorithms. However, if cognitive computing wants to be applied and deployed on a large scale, it is necessary not only to solve the problems of how to compute but also to solve what to compute and where to compute, which needs to deploy cognitive computing at the edge of the network.</p><p>There is some research on applying cognitive computing to edge computing in <ref type="bibr" target="#b15">[16]</ref>. The authors first introduced deep learning for IoTs into the edge-computing environment. They also designed a novel offloading strategy to optimize the performance of IoT deep-learning applications with edge computing since the existing edge nodes have limited processing capability. The works in <ref type="bibr" target="#b16">[17]</ref> and <ref type="bibr" target="#b17">[18]</ref> proposed a novel deep reinforcement learning approach to solve the resource allocation problems in terms of networking, caching, and computing in edge computing. However, the above research did not apply the cognition for applications to guide network-resource optimization, but only considered the resource allocation using some intelligent algorithms, which cannot provide elastic cognitive computing services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE PROPOSED ECC ARCHITECTURE AND DESIGN ISSUES</head><p>The proposed ECC architecture mainly consists of two components: the edge network and the edge cognition as shown in Figure <ref type="figure" target="#fig_0">1</ref>. The edge network mainly provides the access and resource management of various edge devices. The edge cognition mainly relates to the cognition to edge data, involving service data and network and computing resource data. The edge cognition is mainly composed of two core parts, the data cognitive engine and resource cognitive engine. The interaction between the data cognitive engine and resource cognitive engine is the key design issue, which is also shown at the top of Figure <ref type="figure" target="#fig_0">1</ref>.</p><p>In the architecture, the data cognitive engine mainly relies on cognitive computing technologies, while the resource cognitive engine mainly uses the related technologies of edge computing. By combining key technologies in cognitive computing (i.e., big-data analysis, machine learning, deep learning) with those in edge computing (i.e., computing offload and migration, mobility management, intelligent proactive caching, resource cooperation management), ECC can better solve the problem of communication bandwidth and delay through the fusion of computing, communication, and storage, thus improving the network intelligence. Below we will introduce the ECC architecture in detail from three aspects: resource cognitive engine, data cognitive engine, and the interaction between them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Resource Cognitive Engine</head><p>This engine can learn the characteristics of edge cloud computing resources, environmental communication resources, and network resources by cognition, and feed back the integrated resource data to the data cognitive engine in real time. At the same time, it can accept the analysis result of the data cognitive engine and realize the real-time dynamic optimization and allocation of resources. As shown in Figure <ref type="figure" target="#fig_0">1</ref>, it mainly includes the resource data pool, network software The key mechanisms involved in the resource cognitive engine include network slicing, computing unloading, caching, and delivery. Using the virtualization technology, network slicing virtualizes the physical infrastructure of 5G into multiple virtualized network slices that are mutually independent and parallel to realize the arrangement and management of the corresponding network resources. The computing unloading is responsible for the consideration of the computing tasks' assignment problem, aiming to rationally allocate the computing resources on the edge cloud and remote cloud, and thus to complete the computing tasks through cooperation. By caching and delivering, the predicted contents are placed on the edge in advance, and thus the low latency and load reduction of the core network are achieved. SDN/NFV can reduce the deployment costs and improve the efficiency of the network control through the virtualization of the network resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Data Cognitive Engine</head><p>This engine deals with the real-time data flow in the network environment, introduces the data analysis and automatic service processing capabilities to the edge network, and realizes cognition of the service data and the resource data by using various cognitive computing methods, including data mining, machine learning, deep learning, and artificial intelligence as shown in Figure <ref type="figure" target="#fig_0">1</ref>. The main data sources are:</p><p>(1) Collect the external data from the data source in the application environment, such as physical signs and real-time disease risk level under cognitive health surveillance, or realtime behavior information on the mobile user (2) Collect dynamically the internal data on computing resources, communication resources, and network resources of the edge cloud, such as network type, service data flow, communication quality, and other dynamic environmental parameters</p><p>The key point of the intelligent enhancement of the data cognition engine is that multidimensional data (including external data related to the user and the service, and the internal data in the resource network environment) are adopted in cognitive computing technology, which is not the case in the traditional data analysis methods. The data cognitive engine conducts an analysis of the existing data and information (e.g., using the deep convolutional network (DCNN) for facial emotion recognition and using the hidden Markov model (HMM) for user mobility prediction). It then feeds them back to the resource cognitive engine, after which the resource cognitive engine conducts a reinterpretation and analysis of the information to generate new information, which may be further utilized by the data cognitive engine. For instance, in health monitoring, after the monitoring and analysis of the physical health of a smart-cloth-wearing user using cognitive computing, a health-risk level of that user will be obtained; then the resource allocation in the whole edge-computing network will be comprehensively adjusted to the risk level of each user; i.e., the data are utilized for the second time and serve resource allocation and network optimization in turn to form a closed-loop system for cognitive intelligence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">The Interaction between Data Cognitive Engine and Resource Cognitive Engine</head><p>The key design issue of the ECC is the interaction between the data cognitive engine and resource cognitive engine. In edge cognitive computing, we put forward the design idea of realizing the closed-loop optimization with the double cognitive engine to optimize network resource management technology such as a network slice. Here we take cognitive network slicing as an example to illustrate how to fuse the related technologies in cognitive computing and edge computing.</p><p>As shown in Figure <ref type="figure" target="#fig_0">1</ref>, the data cognitive engine first perceives many requests. The request types of the network-slice service differ from one to another according to different demands (latency, reliability, and flexibility) of different cognitive applications. Then the data cognitive engine will conduct the fusion cognitive analysis of the heterogeneous data based on the current resource distribution situation and real-time requests of the tenant with methods of machine learning and deep learning. Next the data cognitive engine will report the analyzed dynamic traffic pattern to the resource cognitive engine. In the resource cognitive engine, there is a joint optimization of the comprehensive benefits and the resource efficiency. First, it conducts admission control to perceived requests, then conducts the dynamic resource scheduling and distribution based on the cognition of network resources, and then feeds the scheduling results back to the data cognitive engine, to realize the cognition of the network-slice resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DYNAMIC COGNITIVE SERVICE MIGRATION MECHANISM</head><p>Under the ECC architecture, due to the mobility of the user, the heterogeneity of the edge device, and the dynamics of the network resources (such as the available storage, the computing resources, and the network bandwidth), we should offer the elastic cognitive service, i.e., offer the service in accordance with the personalized demands of the user. The amount of computation consumed by cognitive computing is particularly large, so the computing resources are required to be more elastic and flexible if deploying the cognitive computing on the edge. The ECC proposed in this article is different from that proposed by those in related work. The ECC mainly focuses on applications related to the artificial intelligence in the IoT, such as automatic pilot, virtual reality, smart clothing, Industry 4.0, emotion recognition, and so forth. In contrast to traditional content retrieval and mobile computing issues, such applications are often more personalized, so the computing resources are required to be more elastic and flexible.</p><p>To describe the proposed ECC architecture better, we implemented the Dynamic Cognitive Service Migration Mechanism. Because the device bearing the computing varies, a service migration mechanism is needed. In our ECC-based dynamic service migration mechanism, to reduce the latency, the workload should be finished in the nearest edge device that has enough computation capability at the edge of the network. Thus, according to the user behavior prediction, some contents needed for the service or some jobs for the task are migrated in advance, or the low-resolution work is first migrated to the position to be moved. After the user's pass-by, the service resolution is promoted on that device, thus offering the elastic service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Service Resolution</head><p>To better explain the elastic service provided by the ECC, we define a new metric called service resolution to evaluate the user QoE. In view of the different applications, the service resolution has different definitions. For example, the emotion detection depends on the accuracy rate and the latency of the emotion recognition, while both are mutually contradictory. A higher accuracy rate needs more computing resources, with higher latency. However, when the user is insensitive to the accuracy rate and pays more attention to the interactive experience, we can provide a low resolution without influencing the user QoE. For the application of video streaming, the service resolution depends more on the resolution of the video streaming acquired by the user. Table <ref type="table" target="#tab_1">1</ref> lists the service resolution of the two different applications. The emotion detection deems the accuracy rate as a metric, and the video streaming deems the resolution as a metric, respectively offering three services to meet the QoE under different demands of the user, i.e., offering the elastic service and enhancing the user experience.</p><p>We will explain how to offer the elastic cognitive computing service from the perspective of the two applications, as follows. (1) Emotion Detection: As shown in Figure <ref type="figure" target="#fig_1">2</ref>, we provide three service resolutions for emotion detection: low resolution, medium resolution, and high resolution. In the case of limited computing resources, we provide low resolution, i.e., only conducting the facial emotion recognition and using the deep neural network VGG. For the medium resolution, we analyze the facial expression (VGG <ref type="bibr" target="#b19">[20]</ref>) and speech emotion (AlexNet <ref type="bibr" target="#b18">[19]</ref>) simultaneously and carry out the simple decision fusion. For high resolution, we use the strong computing resources, provide the multimodal emotion recognition algorithm, and use the deep network, i.e., deep belief network (DBN), for the decision fusion. For these three service resolutions, the computing resources consumed are increased gradually, and the accuracy rate of the emotion recognition provided is higher. The user of emotion detection is always a mobile user, so the dynamic change of the mobile computing resources is one of factors influencing the user QoE. In addition, when the user is moving, the network status is changed, but the emotion recognition is required to maintain ultra-high reliability during the communication process. Thus, it is necessary to adopt the elastic computing mode to solve this problem. This application in need of multiple computing decisions was not considered in previous research. It is a mutual contradiction of ensuring the accuracy rate and the latency of emotion recognition at the same time, and a higher accuracy rate needs more computing resources, with higher latency, as shown in Table <ref type="table" target="#tab_2">2</ref>. However, when the user is insensitive to the accuracy rate and  pays more attention to the interactive experience, we can provide low resolution without influencing the user QoE. (2) Video Streaming: Similar to emotion detection, we provide three service resolutions for a video streaming application, i.e., in consideration of different user demands, user mobility, and a dynamic network environment simultaneously, we provide the video decoding with different resolutions, respectively, and decompose the video decoding task into different resolution tasks in a similar way. When the user is moving, the edge device node better judges whether to conduct the task migration and which resolution of the task migration is conducted according to the user mobility behavior. For example, when the user moves to the other edge node without determining a long-term stay or a short-term stay, the video decoding task with low resolution can be first migrated. In the case of a long-term stay of the user, the high-resolution service can be offered to avoid untimely migration and resource waste. In addition to considering user mobility, migration costs should be considered. The low-resolution service has the lowest migration cost, and the high-resolution service has the highest migration cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Dynamic Service Migration Mechanism</head><p>When and how to conduct migration are the two major concerns in dynamic service migration mechanisms. Most migration mechanisms decide when to migrate by only relying on network conditions; few of them take user behavior into account <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref>. However, deciding when to migrate according to user behavior and mobility has a large influence on improving user experience and resource utilization. As shown in Figure <ref type="figure" target="#fig_2">3</ref>, the Service Manager implements all the functionalities that an edge node needs to deploy its services. It includes a service repository (service repo) where services (service 1 , . . . , service n ) to be provided are stored, e.g., dockerized compressed images or emotion recognition models. The Decision Engine is responsible for deciding which services to deploy. In Figure <ref type="figure" target="#fig_2">3</ref>, the resource cognitive engine manages the computing and network resources of the heterogeneous edge device and cognizes the user mobility, user demands for service resolution, and resource demands for computing tasks in combination with the data cognitive engine. The Decision Engine makes the decision in accordance with the information and migration strategy (based on Q-learning, see below) and accordingly provides dynamic and elastic cognitive services.</p><p>The service providers (SPs), i.e., the edge nodes, manage the virtual networks and let M = {1, . . . , M } be the set of SPs. Let t ? {0, 1, 2, . . . , N } denote the time instant of service request. We assume that the edge device has n services that need to be migrated, and the set of tasks is denoted as T = {T 1 ,T 2 , . . . ,T n }. For the migration task T i , T i = {? i , s i , o i }, where ? i is the amount of computing resource required for the task T i , i.e., the total number of CPU cycles needed to complete the task, and s i is the data size of the computation task T i , i.e., the amount of data content to be delivered to the other edge node; specifically, in this work, it stands for the size of the video content or the storage resource consumed by the emotion detection (e.g., the processing code and parameter(s)). Finally, o i represents the data size of the task result. For instance, in the video decoding case, ? i is the computing resource needed for the video decoding, s i is the video data size, and o i is the data size of the decoded video. After the computation, the Service Provider m sends the transcoded video content back to the user.</p><p>Migration Cost: The traffic volume of migrating a virtual server usually cannot be neglected due to the large size of the server states. The migration cost of a virtual server depends on the size of the server as well as the bandwidth available on the migration path. For example, for the emotion detection service, the migration cost depends on the emotion recognition models. For a video-streaming service, the migration cost depends on the data size of the decoded video. A higher service resolution has a higher migration cost.</p><p>Migration Goal: Minimize the service costs, and in the meantime, improve the QoE by providing different service resolutions based on user demands, user mobility, and dynamic network resources. For x t , a service request at time t, represented as (T i , R, E) where T i denotes the request task, R denotes the service type and E denotes the expectation of the service request. We define the score (the metric for user-acquired experience) under some migration strategy ? as Score (x t , ? ) and the cost of Cost (x t , ? ), so the optimization objective can be defined as follows:</p><formula xml:id="formula_0">max F (x t , ? ) = Score (x t , ? ) -Cost (x t , ? ),<label>(1)</label></formula><p>where Score (x t , ? ) = R (x t )-E (x t ) Delay (x t , ? ) , and R(x t ) is the service type acquired by the service request, i.e., the service resolution. We set the value of (0, 1, 2), respectively corresponding to low, medium, and high service resolution. E (x t ) is the expectation of a service request. Delay(x t , ? ) is the time of service acquisition under strategy ? , relevant to ? i and o i . Cost (x t , ? ) is relevant to s i .</p><p>From the definition of Score (x t , ? ), it is observed that, in the case of a definite latency and a definite service demand of the user, the higher the service resolution provided is, the higher the user experience gained. While providing the same service resolution, the higher the user expectation is, the lower the score is. R(x t ) -E (x t ) can well reflect the relationship between the service acquired by the user and the user expectation. This means that we can provide the lowresolution service if the quality of the service requirements of the user is not high, so as to reduce the energy consumption without influencing the user QoE. When the service acquired by the user and the user expectation are definite, the higher the delay of service acquired is, the lower the score is.</p><p>Optimal Problem Formulation: Our problem can be described as a reinforcement learning scenario. The objective is to find an agent that makes the optimal migration policy for each service request. The optimal migration policy denoted by ? * can maximize the system reward given by</p><formula xml:id="formula_1">? * = argmax ? x ?X F (x, ? ).<label>(2)</label></formula><p>Let S i denote the state of environment at time i, defined by the locations of the n services at that time. For a sequence of batch requests X = {x 1 , x 2 , . . . , x N }, the goal of the service migration is to determine S 1 , S 2 , . . . , S N to maximize the system reward defined by Equation <ref type="bibr" target="#b1">(2)</ref>.</p><p>Q-learning is one of the most popular Reinforcement Learning <ref type="bibr" target="#b22">[23]</ref> (RL) methods that is applied in many research areas. The general procedure of the Q-learning algorithm is shown as Algorithm 1.</p><p>We define the reward after the action a taken on S t as</p><formula xml:id="formula_2">R a t +1 = Score (S t +1 ) -(Score (S t ) + Cost (S t , S t +1 )).<label>(3)</label></formula><p>Similarly, we can also construct a matrix Q to memorize the experience that the agent has gained from the environment. The Q-value of the state-action pair, Q (S t , a), represents the expected total benefits caused by action a taken in state S t . The solution is to exploit from the initial state to a final optimal state through updating accordingly by Algorithm 1. In each iteration of the algorithm, the agent observes the current state S and takes action a to move to the next state S by receiving an immediate reward R t +1 , which is used to update the Q (s, a) by following Equation ( <ref type="formula" target="#formula_3">4</ref>), and then begins the next iteration:</p><formula xml:id="formula_3">Q (S t , A t ) ? Q (S t , A t ) + ? (R t +1 + ? max a Q (S t +1 , a) -Q (S t , A t )).<label>(4)</label></formula><p>The ? means learning rate, which determines how much the new information overwrites the old. The discount factor ? gives more weight to the most recent reward than others in the future. Use some policy such as (? -greedy), and select an action for execution based on the state S After executing the action, observe reward and new state S</p><formula xml:id="formula_4">Q (S t , A t ) ? Q (S t , A t ) + ? (R t +1 + ? max a Q (S t +1 , a) -Q (S t , A t )) S ? S End</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">TESTBED AND PERFORMANCE EVALUATION</head><p>To verify the proposed architecture, an ECC test platform was set up, and a performance evaluation of the dynamic service migration mechanism was conducted in the experimental testbed for the user mobility.</p><p>To create the ECC environment, we used several edge-computing nodes that realize the functions of emotion detection and video streaming as shown in Figure <ref type="figure" target="#fig_6">4</ref>(a). We also used an Android phone as a user mobile device, designed the Android application program as shown in Figure <ref type="figure" target="#fig_7">4(b)</ref>, and realized the signal monitoring of the edge-computing node, task uploading, result downloading, and service migration.    The discount factor giving more weight to the near future</p><p>In the experimental setup, we use four edge nodes and two servers, i.e., m = 4, n = 2. For the performance comparison, two schemes are compared with the proposed ECC-based scheme:</p><p>(1) no migration scheme: service migration is not considered; (2) nearest migration scheme: if needed, service will be migrated to a close access point.</p><p>Table <ref type="table" target="#tab_3">3</ref> lists the values of important parameters considered in the experiments. The task load in the high-resolution migration was 256MB, the task load in the middle-resolution migration was compressed to 128MB, and the task load in the low-resolution migration was compressed to 64MB. The transmission bandwidth between the edge nodes was 5Mbps.</p><p>Figures <ref type="figure" target="#fig_9">5</ref> and<ref type="figure" target="#fig_10">6</ref> plot the experimental results for the performance analysis. Figure <ref type="figure" target="#fig_9">5</ref> shows the convergence performance of different scenarios in the proposed scheme using the deep reinforcement learning algorithm. From Figure <ref type="figure" target="#fig_9">5</ref>, we can see that the total utility (the cumulative rewards, i.e., the object function F defined in Equation ( <ref type="formula" target="#formula_0">1</ref>)) of the different scenarios in the proposed scheme is very low at the beginning of the learning process. With the increase in the number of episodes, the total utility increases until it reaches a relatively stable value, which is around 400 in the scenario that provides high resolution. We can also observe that the rewards of different resolution services are almost the same at the beginning, and at a stable stage high resolution obtains the   highest reward, while low resolution obtains the lowest reward. Therefore, the low-resolution service could be first migrated to the corresponding edge node when the user moves to the other edge access point, and then the high-resolution service should be provided at a stable stage.</p><p>Figure <ref type="figure" target="#fig_10">6</ref> shows the response time of the edge node providing the emotion detection service with low resolution (the first algorithm introduced in Table <ref type="table" target="#tab_2">2</ref>). In general, the response time is proportional to the number of concurrent requests, which means that the higher the number of concurrent requests is, the longer the average response time is. We compare the time delay under different schemes; from Figure <ref type="figure" target="#fig_10">6</ref>, we can obtain that the delay of all the schemes increases with the increase of the service request times, and our proposed RL-based scheme under the ECC architecture has better performance with the lowest latency. This is because these services could be better migrated in advance to the optimal location based on a user-mobility prediction. However, the nearest migration scheme decides to migrate the service just when the user moves to the other access point, which would result in a longer delay and even to lead service disruption. From Figure <ref type="figure" target="#fig_10">6</ref>, we can also observe that due to user mobility, the delay jitter is more severe and the delay difference of these three schemes is bigger when the service request time is higher than 25. The ECC-based scheme is able to reduce the jitter from the results for it learns from the user mobility continuously. Also, it is obvious that the delay was the longest under no migration scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>This article presents an ECC network architecture and introduces the key issues. In addition, an ECC platform for dynamic service migration based on a mobile user's behavioral cognition was developed and experimentally tested. The experimental results show that the proposed ECC architecture can simultaneously provide higher QoE compared with the general edge-computing architecture without data and resource cognitive engines that achieve the user behavior prediction to better guide the service migration based on traffic data and the network resource environment. The results effectively demonstrated that edge cognitive computing realizes the cognitive information cycle for human-centered reasonable resource distribution and optimization.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The edge cognitive computing architecture.</figDesc><graphic url="image-1.png" coords="5,57.42,83.68,370.48,293.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Service resolution for emotion detection: (a) low resolution, (b) middle resolution, (c) high resolution.</figDesc><graphic url="image-2.png" coords="8,95.25,90.13,145.60,259.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Service deployment architecture for ECC.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>A</head><label></label><figDesc>Dynamic Service Migration Mechanism in Edge Cognitive Computing 30:11</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>ALGORITHM 1 :</head><label>1</label><figDesc>Q-learning algorithm Initialization Q (s, a) Repeat (for each episode): Initial state S Repeat (for each step in episode):</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Figure 4(c) illustrates the software interface running on Windows.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 (</head><label>4</label><figDesc>d) shows the UI of the emotion detection application.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Experimental platform: (a) hardware platform, (b) interface of mobile application, (c) software interface of the edge node, (d) UI of emotion detection application.</figDesc><graphic url="image-3.png" coords="12,84.24,83.71,316.60,228.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>A</head><label></label><figDesc>Dynamic Service Migration Mechanism in Edge Cognitive Computing 30:13</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Convergence performance with difference service resolutions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Delay comparison of different migration schemes with request times.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>?</head><label></label><figDesc>We develop an ECC-based test platform for dynamic service migration and evaluate it by means of several experiments, with the results showing that the proposed ECC can provide dynamic services according to different user demands.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Service Resolution for Different Applications</figDesc><table><row><cell>Applications</cell><cell>Low</cell><cell cols="2">Service Resolution Middle</cell><cell>High</cell><cell>Main Metric</cell></row><row><cell>Emotion Detection</cell><cell>66.3</cell><cell>73.6</cell><cell></cell><cell>79.1</cell><cell>Accuracy (%)</cell></row><row><cell>Video Streaming</cell><cell>800 ? 600</cell><cell>1280 ? 1024</cell><cell cols="2">1920 ? 1080</cell><cell>Video resolution (pixels)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 .</head><label>2</label><figDesc>Accuracy and Latency of Different Service Resolutions for Emotion Detection</figDesc><table><row><cell>Algorithms</cell><cell cols="2">Accuracy (%) Latency (ms)</cell></row><row><cell>VGG</cell><cell>66.3</cell><cell>103.0</cell></row><row><cell>AlexNet + VGG</cell><cell>73.6</cell><cell>188.4</cell></row><row><cell>AlexNet + VGG + DBN</cell><cell>79.1</cell><cell>265.3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 .</head><label>3</label><figDesc>Experimental Parameters</figDesc><table><row><cell>Parameter</cell><cell>Value</cell><cell>Description</cell></row><row><cell>B i, j</cell><cell></cell><cell></cell></row></table><note><p><p><p><p>5Mbps</p>The bandwidth between edge node SP i and SP j Q T i 100Mcycles The required number of CPU cycles to complete task</p>T i O T i 1Mbits</p>The content size for task T i ? 0.01 The learning rate of algorithm ? 0.8</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>ACM Transactions on Internet Technology, Vol. 19, No. 2, Article 30. Publication date: April 2019.</p></note>
		</body>
		<back>

			<div type="funding">
<div><p>This work is supported by the <rs type="funder">National Key R&amp;D Program of China</rs> (<rs type="grantNumber">2017YFE0123600</rs>, <rs type="grantNumber">2018YFC1314605</rs>), the <rs type="funder">China National Natural Science Foundation</rs> (No. <rs type="grantNumber">61802139</rs>, No. <rs type="grantNumber">61802138</rs>), the <rs type="funder">National Natural Science Foundation of China</rs> (under Grant No. <rs type="grantNumber">U1705261</rs>), and Director Fund of WNLO. <rs type="person">Dr. Humar</rs> would like to acknowledge the financial support from the <rs type="funder">Slovenian Research Agency</rs> (research core funding No. <rs type="grantNumber">P2-0246</rs>).</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_SkdyphN">
					<idno type="grant-number">2017YFE0123600</idno>
				</org>
				<org type="funding" xml:id="_UuXcNBf">
					<idno type="grant-number">2018YFC1314605</idno>
				</org>
				<org type="funding" xml:id="_Wa8GQvv">
					<idno type="grant-number">61802139</idno>
				</org>
				<org type="funding" xml:id="_8WP3hrH">
					<idno type="grant-number">61802138</idno>
				</org>
				<org type="funding" xml:id="_Y44SErc">
					<idno type="grant-number">U1705261</idno>
				</org>
				<org type="funding" xml:id="_bB9fd9d">
					<idno type="grant-number">P2-0246</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Connecting the edges: A universal, mobile-centric, and opportunistic communications architecture</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Sarros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Diamantopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rene</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Psaras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lertsinsrubtavee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Molina-Jimenez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mendes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sofia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sathiaseelan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pavlou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Crowcroft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Tsaoussidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="136" to="143" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Edge computing: Vision and challenges</title>
		<author>
			<persName><forename type="first">W</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="637" to="646" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Edge computing enabling the Internet of Things</title>
		<author>
			<persName><forename type="first">O</forename><surname>Salman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Elhajj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kayssi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chehab</surname></persName>
		</author>
		<idno type="DOI">10.1109/WF-IoT.2015.7389122</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 IEEE 2nd World Forum on Internet of Things (WF-IoT&apos;16</title>
		<meeting>the 2015 IEEE 2nd World Forum on Internet of Things (WF-IoT&apos;16</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="603" to="608" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Smart home 2.0: Innovative smart home system powered by botanical IoT and emotion detection</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="1159" to="1169" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Modeling and simulating internet-of-things systems: A hybrid agent-oriented approach</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fortino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gravina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Russo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Savaglio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing in Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="68" to="76" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Narrow band Internet of things</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="20557" to="20577" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Task offloading for mobile edge computing in software defined ultra-dense network</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="587" to="597" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Incentivising resource sharing in edge computing applications</title>
		<author>
			<persName><forename type="first">L</forename><surname>Petri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">F</forename><surname>Rana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bignell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nepal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Auluck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Economics of Grids, Clouds, Systems, and Services (GECON&apos;17</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Pham</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Altmann</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Ba?ares</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="volume">10537</biblScope>
			<biblScope unit="page" from="204" to="215" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Secure enforcement in cognitive internet of vehicles</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hossain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Alamri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE IoT Journal</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1242" to="1250" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Software defined membrane: Policy-driven edge and internet of things security</title>
		<author>
			<persName><forename type="first">M</forename><surname>Villari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fazio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dustdar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Rana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ranjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Cloud Computing</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="92" to="99" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">When collaboration hugs intelligence: Content delivery over ultra-dense networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="91" to="95" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Greening the smart cities: Energy-efficient massive content delivery via D2D communications</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Dong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Informatics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="1626" to="1634" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Soft sensing in smart cities: Handling 3Vs using recommender systems, machine intelligence, and data analytics</title>
		<author>
			<persName><forename type="first">H</forename><surname>Habibzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Boggio-Dandry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Soyata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kantarci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Mouftah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="78" to="86" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Enabling cognitive smart cities using big data and machine learning: Approaches and challenges</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mohammadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Al-Fuqaha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="94" to="101" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Deep learning: The frontier for distributed attack detection in fog-to-things computing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Abeshu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Chilamkurti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="169" to="175" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">From cloud-based communications to cognition-based communications: A computing perspective</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Communications</title>
		<imprint>
			<biblScope unit="volume">128</biblScope>
			<biblScope unit="page" from="74" to="79" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Integrated networking, caching, and computing for connected vehicles: A deep reinforcement learning approach</title>
		<author>
			<persName><forename type="first">Y</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Vehicular Technology</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="page" from="44" to="55" />
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Mobility-aware caching and computation offloading in 5G ultradense cellular networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Humar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sensors</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="974" to="987" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Speech emotion recognition using deep convolutional neural network and discriminant temporal pyramid matching</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1576" to="1590" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Deep features learning for medical image analysis with convolutional autoencoder neural network</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Guizani</surname></persName>
		</author>
		<idno type="DOI">10.1109/TBDATA.2017.2717439</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Big Data</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Live service migration in mobile edge clouds</title>
		<author>
			<persName><forename type="first">A</forename><surname>Machen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salonidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Communications</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="140" to="147" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A survey of migration mechanisms of virtual machines</title>
		<author>
			<persName><forename type="first">V</forename><surname>Medina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Garcia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="30" to="62" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Big Data Analytics for Cloud/IoT and Cognitive Computing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
			<publisher>Wiley, UK</publisher>
			<biblScope unit="page">9781119247029</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
