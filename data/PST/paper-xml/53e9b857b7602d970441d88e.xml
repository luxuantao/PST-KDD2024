<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Reconciling requirement-driven data warehouses with data sources via multidimensional normal forms</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2007-04-27">27 April 2007</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jose-Norberto</forename><surname>Mazo ´n</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Software and Computing Systems</orgName>
								<orgName type="institution">University of Alicante</orgName>
								<address>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Juan</forename><surname>Trujillo</surname></persName>
							<email>jtrujillo@dlsi.ua.es</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Software and Computing Systems</orgName>
								<orgName type="institution">University of Alicante</orgName>
								<address>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jens</forename><surname>Lechtenbo ¨rger</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Information Systems</orgName>
								<orgName type="institution">University of Mu ¨nster</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Reconciling requirement-driven data warehouses with data sources via multidimensional normal forms</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2007-04-27">27 April 2007</date>
						</imprint>
					</monogr>
					<idno type="MD5">E03481B99545823AF955B22D2FD0D25D</idno>
					<idno type="DOI">10.1016/j.datak.2007.04.004</idno>
					<note type="submission">Received 13 April 2007; accepted 16 April 2007</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Conceptual modeling</term>
					<term>Data warehousing</term>
					<term>Requirements</term>
					<term>Multidimensional normal forms</term>
					<term>QVT</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Successful data warehouse (DW) design needs to be based upon a requirement analysis phase in order to adequately represent the information needs of DW users. Moreover, since the DW integrates the information provided by data sources, it is also crucial to take these sources into account throughout the development process to obtain a consistent reconciliation of data sources and information needs. In this paper, we start by summarizing our approach to specify user requirements for data warehouses and to obtain a conceptual multidimensional model capturing these requirements. Then, we make use of the multidimensional normal forms to define a set of Query/View/Transformation (QVT) relations to assure that the conceptual multidimensional model obtained from user requirements agrees with the available data sources that will populate the DW. Thus, we propose a hybrid approach to develop DWs, i.e., we firstly obtain the conceptual multidimensional model of the DW from user requirements and then we verify and enforce its correctness against data sources by using a set of QVT relations based on multidimensional normal forms. Finally, we provide some snapshots of the CASE tool we have used to implement our QVT relations.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>A data warehouse (DW) is commonly described as an integrated collection of historical data in support of decision making that structures information into facts and dimensions based on multidimensional (MD) modeling <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>. Since the DW integrates several data sources, the development of the underlying MD model has been traditionally guided by an analysis of these data sources <ref type="bibr" target="#b7">[8]</ref>. In fact, several approaches have been defined in order to derive a conceptual MD model from given data sources <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b6">7]</ref>. Considering these data-driven approaches, MNFs (multidimensional normal forms) have been developed <ref type="bibr" target="#b10">[11]</ref> to reason, in a rigorous manner, 0169-023X/$ -see front matter Ó 2007 Elsevier B.V. All rights reserved. doi:10.1016/j.datak.2007.04. <ref type="bibr">004</ref> about the quality (faithfulness, completeness, avoidance of redundancies, summarizability) of a conceptual MD model derived from operational data sources.</p><p>Nevertheless, in these data-driven approaches the requirement analysis phase is overlooked, thus resulting in an MD model in which the user needs and expectations may not be satisfied <ref type="bibr" target="#b32">[33]</ref>. To overcome this problem, several approaches <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b4">5]</ref> advocate a requirement-driven DW design process. However, hardly any of these approaches formally considers the data sources in the early stages of the development. Therefore, the correctness of the MD model with respect to the data sources cannot be assured and the DW repository cannot be properly populated from these data sources.</p><p>In order to reconcile these two points of view (data-driven and requirement-driven), a Model Driven Architecture (MDA) <ref type="bibr" target="#b22">[23]</ref> framework for the development of DWs has been described in <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b14">15]</ref>. Within this approach a conceptual MD model of the DW repository is developed from user requirements. This initial MD model must be then reconciled with the data sources in order to assure its correctness, which is the major contribution of the present paper. The following step is to apply model transformations to obtain several logical models as a base for the implementation of the DW repository. Within this development framework, up to now we have defined (i) a framework to specify user requirements for DWs <ref type="bibr" target="#b17">[18]</ref>, (ii) a UML (Unified Modeling Language) <ref type="bibr" target="#b25">[26]</ref> profile that contains the necessary stereotypes in order to carry out the conceptual MD modeling successfully <ref type="bibr" target="#b12">[13]</ref>, (iii) a set of guidelines for deriving a conceptual MD model from user requirements <ref type="bibr" target="#b17">[18]</ref>, and (iv) a set of QVT (Query/View/Transformation) relations in order to automatically derive several logical representations of the conceptual MD model <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b14">15]</ref>. An overview of this overall framework, including the reconciliation of data sources and MD conceptual model by means of MNFs, is shown in Fig. <ref type="figure">1</ref>.</p><p>In the short version of this paper <ref type="bibr" target="#b15">[16]</ref>, we presented a set of QVT relations in order to check the correctness of the conceptual MD model against the available data sources within our DW development framework (see Fig. <ref type="figure">1</ref>). These QVT relations are based on MNFs proposed in <ref type="bibr" target="#b10">[11]</ref>. The QVT language allows us to easily integrate this approach in our MDA framework <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b14">15]</ref>, while MNFs enable us to formalize the relationship between the data sources and the conceptual MD model of the DW repository.</p><p>In this paper, we extend the short version <ref type="bibr" target="#b15">[16]</ref> as follows: (i) We provide a new section describing our approach for specifying user requirements for DWs. (ii) We now provide the complete set of the QVT relations in order to check the correctness of the conceptual MD model against the available data sources. (iii) We include a new aspect concerning on how to apply these QVT relations. (iv) We extend the case study, with more details and figures that clarify how to use our approach in real world scenarios. Finally, (v) we provide a new section explaining how we have implemented our QVT relations in a CASE tool in order to facilitate its application in real world case studies.</p><p>The motivation of our approach is as follows: since the DW integrates the information provided by source databases, it is important to check (in early stages of the development) if the requirement-driven conceptual MD model agrees with the available data sources in order to assure that (i) the DW repository will be properly populated from data sources, (ii) the analysis potential provided by the data sources is captured by the conceptual MD model, (iii) redundancies are avoided, and (iv) optional dimension levels, i.e., levels allowing Fig. <ref type="figure">1</ref>. Overview of our approach for the MD modeling of DWs.</p><p>NULL values, are controlled via specialization/generalization to enable context-sensitive summarizability and to avoid inconsistent queries.</p><p>To illustrate these benefits, consider the following running example, which is inspired by the sample scenario of <ref type="bibr" target="#b9">[10]</ref>. We assume that the conceptual MD model for the banking domain shown in Fig. <ref type="figure" target="#fig_0">2</ref> has been derived from user requirements without taking data sources into account, e.g., according to the proposal presented in <ref type="bibr" target="#b17">[18]</ref>, which is briefly described in Section 3.1. The notation of Fig. <ref type="figure" target="#fig_0">2</ref> is based on our UML profile for MD modeling presented in <ref type="bibr" target="#b12">[13]</ref> (see Section 4.2 for details). The figure models account facts which are composed of several measures (balance, turnover, interest, and customer age) and described by dimensions organization, product, time, and customer. For the sake of clarity, we only focus on the customer dimension.</p><p>Every customer is described in terms of a unique identification number, a name, and a date of birth. Every customer lives in a city which is described with a name and a population. Moreover, customers may be associated with job, gender, industry branch, and contact person. Finally, a city belongs to (Rolls-upTo) exactly one region and exactly one district, while a region belongs to exactly one state. This model represents a geographical classification where every region falls into exactly one state, while districts and states appear to be unrelated. From a conceptual perspective, this classification seems reasonable.</p><p>However, the data sources shown in Fig. <ref type="figure" target="#fig_1">3</ref> (using part of the relational CWM metamodel explained in Section 4.1) provide geographical information where every district falls into exactly one state, while regions and states are unrelated. Consequently, (i) the source information concerning regions and states cannot be represented faithfully under the MD model and (ii) potential for roll-up queries from level district to level state is not represented, i.e., analysis potential is lost.</p><p>Moreover, the MD model does not represent the structural information that industry branches and contact persons are assigned only to company customers while job and gender are only applicable to private customers, which poses challenges for summarizability and complicates querying (see <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>). Finally, while it certainly makes sense to analyze the age structure of customers, the measure age is not specific to accounts but only to customers. Thus, this measure should be moved to a different fact schema. To summarize, based on schema information for the data sources, the conceptual MD model shown in Fig. <ref type="figure" target="#fig_0">2</ref> should be improved in a number of ways to obtain the ''better'' model shown in Fig. <ref type="figure" target="#fig_2">4</ref>. Indeed, in this paper we show how to apply QVT relations, which are derived from MNFs, to obtain the model shown in Fig. <ref type="figure" target="#fig_2">4</ref> from the model shown in Fig. <ref type="figure" target="#fig_0">2</ref> by taking data sources shown in Fig. <ref type="figure" target="#fig_1">3</ref> into account.</p><p>The remainder of this paper is structured as follows: Related work is put into perspective next, before necessary background concerning requirement analysis in DWs, QVT and MNFs is collected in Section 3. Our approach is presented in Section 4 by describing our data source model as well as our conceptual MD model, and defining QVT relations based on MNFs. The application of sample QVT relations, as well as their implementation and execution is illustrated in Section 5. The paper ends with conclusions and suggestions for future work in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related work</head><p>In this section, we briefly describe the most relevant approaches for both data-driven and requirement-driven DW development.</p><p>Concerning data-driven approaches, in <ref type="bibr" target="#b2">[3]</ref>, the authors present the Multidimensional Model, a logical model for MD databases. The authors also propose a general design method, aimed at building an MD schema starting from an operational database described by an Entity-Relationship (ER) schema.</p><p>In <ref type="bibr" target="#b5">[6]</ref>, the authors propose the Dimensional-Fact Model (DFM), a particular notation for the DW conceptual design. Moreover, they also propose how to derive a DW schema from the data sources described by ER schemas. Also in <ref type="bibr" target="#b30">[31]</ref>, the building of a conceptual MD model of the DW repository from the conceptual schemas of the operational data sources is proposed.</p><p>In <ref type="bibr" target="#b6">[7]</ref>, the authors present a method to systematically derive a conceptual MD model from data sources. In this paper a preliminary set of multidimensional normal forms is used to assure the quality of the resulting conceptual model.</p><p>Although in each of these data-driven approaches the design steps are described in a systematic and coherent way, the DW design is only based on the operational data sources, what we consider insufficient because the final user requirements are very important in the DW design <ref type="bibr" target="#b32">[33]</ref>.</p><p>Concerning requirement-driven approaches, in <ref type="bibr" target="#b32">[33]</ref> an approach is proposed in order to both determine information requirements of DW users and match these requirements with actual data sources. However, no formal approach is given in order to match requirements with data sources.</p><p>In <ref type="bibr" target="#b26">[27]</ref>, the authors propose a requirement elicitation process for DWs by grouping requirements in several levels of abstraction. Their process consists of identifying information that supports decision making via information scenarios. In this process, a Goal-Decision-Information (GDI) diagram is used. Although the derivation of GDI diagrams and information scenarios is described, the relationships between information scenarios and requirements are not properly specified. Moreover, requirements are not reconciled with data sources in order to obtain a conceptual MD model.</p><p>In <ref type="bibr" target="#b4">[5]</ref>, the authors present a framework to obtain a conceptual MD model from requirements. This framework uses the data sources to shape hierarchies and user requirements are used to choose facts, dimensions and measures. However, the authors do not present a formal way to reconcile data sources with the conceptual MD model.</p><p>To summarize, these requirement-driven approaches do not formalize the relation between the data sources and the requirements to verify and enforce the correctness of the resulting DW. Therefore, we propose to use MNFs <ref type="bibr" target="#b10">[11]</ref> in a systematic manner, thus formalizing the development of the DW repository by means of (i) obtaining a conceptual MD model from user requirements, and (ii) verifying and enforcing its correctness against the operational data sources. Details on MNFs are presented in the next section.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Background</head><p>In this section, we first outline our approach for (i) defining information requirements in DWs, and (ii) obtaining a conceptual MD model from them. Afterwards, we provide a brief overview of the building blocks of our approach, namely QVT and multidimensional normal forms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Requirement analysis in DWs</head><p>A requirement analysis stage allows designers to develop a DW which meets the real needs of organizations, thus increasing the success of a DW project <ref type="bibr" target="#b28">[29]</ref>. The way of proceeding for specifying information requirements in the DW domain presents some particularities that call for specialized methods <ref type="bibr" target="#b33">[34]</ref>. One of the main drawbacks is related to the inherent difficulty of understanding and specifying decision processes, so there is a major gap between those that are experts in the domain and their requirements on the one hand (i.e., decision makers) and those that are experts in the design and construction of the DW which satisfies the requirements (i.e., DW developers), on the other hand.</p><p>To overcome this problem, in this paper, the requirements for the DW are defined according to the approach presented in <ref type="bibr" target="#b17">[18]</ref>. This approach bridges the above-mentioned gap by means of describing the DW requirements within its business environment. The main issue of this approach is to specify business goals related to DW users (i.e., decision makers). The motivation is twofold <ref type="bibr" target="#b28">[29]</ref>: (i) the aim of a DW is to provide users with enough information in a suitable way to improve decision making and accomplish business goals; and (ii) decision makers often express their information needs in general expectations of the DW to improve their business, which can be described by means of goals. Therefore, defining requirements for a DW should take into account the business goals of DW users, and then from these goals the information requirements will be more easily discovered.</p><p>Business goals are considered to form a hierarchy of goals depending on the level of abstraction:</p><p>• Strategic goals represent the highest level of abstraction. They are main objectives of the business process. They are thought as changes from a current situation into a better one. For example: ''increase sales'', ''increase number of customers'', ''decrease cost'', etc. Their fulfilment causes an immediate benefit for the organization. • Decision goals represent the medium level of abstraction. They try to answer the question: ''how can a strategic goal be achieved?'', and they aim to take the appropriate actions to fulfil a strategic goal. For example ''determine some kind of promotion'' or ''open new stores''. Their fulfilment only causes a benefit for the organization if it helps to reach strategic goals, since decision goals only take place within the context of a strategic goal. • Information goals represent the lowest level of abstraction. They try to answer the question: ''how can decision goals be achieved in terms of information required?'', and they are related to the information required by a decision goal to be achieved. For example ''analyze customer purchases'' or ''examine stocks''. Their fulfilment helps to achieve decision goals and they only happen within the context of a decision goal.</p><p>In order to define a goal hierarchy two strategies can be adopted <ref type="bibr" target="#b31">[32]</ref>: (i) discovering goals by refinement, or (ii) discovering goals by abstraction. The former consists on asking ''how'' questions over goals already identified (''how can this goal be satisfied?''), while the latter is driven by ''why'' questions (''why is this goal useful?'').</p><p>Once the hierarchy of goals is defined, information requirements can be directly obtained from the information goals above-described. These requirements are related to interesting measures of business processes (contained in facts) and the context for analyzing these measures (dimensions and their hierarchies).</p><p>In order to model these goals and information requirements for DWs, we adapt the i * framework <ref type="bibr" target="#b34">[35,</ref><ref type="bibr" target="#b35">36]</ref>. This framework consists of two models: the strategic dependency (SD) model to describe the dependency relationships among various actors in an organizational context, and the strategic rationale (SR) model, used to describe actor interests and concerns and how they might be addressed. The elements of i * that we use in our approach are represented in Fig. <ref type="figure">5</ref>. These elements are actors, intentional elements (goals, tasks or resources) and their relationships (dependency, means-end or task-decomposition). In this subsection, we focus on exemplifying how to use i * for DW domain; we refer the reader to <ref type="bibr" target="#b34">[35]</ref> for a further and general explanation of i * .</p><p>An SD model for DWs must take into account that the organization depends on the DW to obtain proper information to achieve its goals. So, business goals and information that the DW must provide to achieve business goals must be addressed in the SD model. Therefore, users (i.e., decision makers), and the DW under construction are the main actors in the SD model. On the other hand, the SR model provides a more detailed level of modeling internal relationships of each actor (i.e., decision makers and the DW). For decision makers, every goal must be specified according to the above-described classification of goals. Information requirements for decision makers have to be derived from goals and specified as tasks in the SR model. According to these information requirements, the SR model for the DW actor is specified with the necessary intentional elements. From this SR model, we will be able to derive a conceptual MD model. An overview of the approach is shown in Fig. <ref type="figure">6</ref>.</p><p>Several guidelines are presented in <ref type="bibr" target="#b17">[18]</ref> to support the specification of the SD and the SR models for DWs and the derivation of a conceptual MD model. Afterwards, the resulting conceptual model could be also refined in order to add some new features. The corresponding SD and SR models for our running example are shown in Fig. <ref type="figure">7</ref><ref type="figure">8</ref><ref type="figure">9</ref>. We would like to point out that, for understandability reasons, we only focus on capturing the requirements related to the customer dimension.</p><p>Since our example is drawn from the banking domain (focused on the account fact and the customer dimension), the main actor is the bank manager. It is assumed that the main goal of this actor is to increase the number of customers. On the other hand, the DW itself is another actor whose aim is to provide the bank manager with adequate information about the bank accounts. Taking into account these considerations, the SD model is specified in Fig. <ref type="figure">7</ref>: there are two actors (''bank manager'' and ''data warehouse''). The goal of the ''bank manager'' is ''increase number of customers''. The information required from the ''data warehouse'' is related to bank accounts (''accounts information''), and it is specified as a resource dependency.</p><p>The SR model for the ''bank manager'' actor is shown in Fig. <ref type="figure">8</ref>. This model is built starting from the strategic goal ''increase number of customers''. From this strategic goal, two decisional goals are obtained: ''give incentives when an account is opened'' and ''determine the best feasible interest''. From each of these decision goals, the following information goals have been obtained (as it is shown in Fig. <ref type="figure">8</ref>): ''study accounts by customer profile'', ''examine customer age'', ''study accounts by customer branch'', and ''study accounts by customer job''. These information goals must be related to information requirements which can be provided by the DW. These information requirements are as follows (see Fig. <ref type="figure">8</ref> The next step is to specify the SR model for the DW actor. From the information requirements previously defined we specify the following SR model (see Fig. <ref type="figure">9</ref>): the main goal is ''provide information about accounts''. The measures related to information requirements are ''balance'', ''turnover'', ''interest'', and ''customer age'' which are considered as resources. On the other hand, the task ''provide information by customer'' is considered as general context of analysis, while the following resources, among others (see Fig. <ref type="figure">9</ref>), give a more detailed context: ''customer'', ''city'', ''district'', ''region'', and ''state''.</p><p>Finally, from this SR model for the DW, we obtain a conceptual MD model of Fig. <ref type="figure" target="#fig_0">2</ref>. This model provides enough information in a suitable way to accomplish the information requirements and business goals of decision makers. For an overview of which MD elements are created to obtain the MD model of Fig. <ref type="figure" target="#fig_0">2</ref> from the SR model of the DW (Fig. <ref type="figure">9</ref>), please see Table <ref type="table">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Query/View/Transformation language</head><p>The MOF 2.0 Query/View/Transformation (QVT) language <ref type="bibr" target="#b23">[24]</ref> is a standard approach for defining formal relations between MOF-compliant models. Furthermore, QVT is an essential part of the MDA standard as a means of defining formal and automatic transformations between models.</p><p>QVT consists of two parts: declarative and imperative. The declarative part provides mechanisms to define relations that must hold between the model elements of a set of candidate models (source and target models). This declarative part can be split into two layers according to the level of abstraction: the relational layer that provides graphical and textual notation for a declarative specification of relations, and the core layer that provides a simpler, but verbose, way of defining relations. The imperative part defines operational mappings that extend the declarative part with imperative implementations when it is difficult to provide a purely declarative specification of a relation.</p><p>In this paper, we focus on the relational layer of QVT. This layer supports the specification of relationships that must hold between MOF models by means of a relations language. A QVT relation (see Fig. <ref type="figure">10</ref>) is defined by the following elements:</p><p>• Two or more domains: each domain is a distinguished set of elements of a candidate model (source or target model). This set of elements (denoted by a hhdomainii label, see Fig. <ref type="figure">10</ref>) must be matched in that model by means of patterns. A domain pattern can be considered as a template for elements, their properties and their associations that must be located, modified, or created in a candidate model in order to satisfy the relation. A relation between domains can be marked as check-only (labeled as C) or as enforced (labeled as E). When a relation is executed in the direction of a check-only domain, it is only checked if there exists a valid match in the model that satisfies the relationship (without modifying any model if the domains do not match); whereas for a domain that is enforced, when the domains do not match, model elements are created, deleted or modified in the target model in order to satisfy the relationship. Moreover, for each domain the name of its underlying metamodel is specified (labels M1 and M2 in Fig. <ref type="figure">10</ref>). • When clause: it specifies the conditions under which the relation needs to hold (i.e., precondition). This clause may contain any arbitrary OCL (Object Constraint Language <ref type="bibr" target="#b24">[25]</ref>) expressions in addition to the relation invocation expressions (see Fig. <ref type="figure">10</ref>).</p><p>• Where clause: it specifies the condition that must be satisfied by all model elements participating in the relation (i.e., postcondition). This clause may also contain OCL expressions or relation invocation expressions.</p><p>Defining relations by using the QVT language has the following advantages: (i) it is a standard language, (ii) relations are formally established and automatically performed by using some transformation engine (e.g., Borland Together Architect <ref type="bibr" target="#b1">[2]</ref> or SmartQVT <ref type="bibr" target="#b29">[30]</ref>), and (iii) relations can be easily integrated in an MDA approach. Fig. <ref type="figure">10</ref>. Example of a QVT relation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Multidimensional normal forms</head><p>The formal guidelines that we are using to formulate our QVT relations in the following are the three multidimensional normal forms 1MNF, 2MNF, and 3MNF presented in <ref type="bibr" target="#b10">[11]</ref>. Here, we recapitulate the essence of these normal forms informally. The reader is referred to <ref type="bibr" target="#b10">[11]</ref> for formal definitions and examples. Preliminarily we recall that (a) within a conceptual MD model the terminal dimension levels of a fact are those that are attached immediately to the dimensions, i.e., those that provide the finest level of detail within each dimension, and (b) a Rolls-upTo arc in our MD model represents a many-to-one relationship, which in turn is just a functional dependency (FD) in the standard sense.</p><p>The goal of 1MNF is to ensure that a conceptual MD model ''matches'' with the information provided by the source databases. More specifically, 1MNF is characterized by four conditions, which are defined formally in <ref type="bibr" target="#b10">[11]</ref>, as follows:</p><p>(1) Faithfulness: The FDs implied by the MD model must be a subset of those observed in the source databases. (Otherwise, some source data cannot be represented under the MD model. E.g., in Fig. <ref type="figure" target="#fig_0">2</ref> in Section 1 the FD implied by the Rolls-upTo arc from Region to State is not valid in the data source.) (2) Roll-up completeness: The FDs among dimension levels contained in the source databases must be represented as Rolls-upTo arcs in the MD model. (Otherwise, analysis potential is lost, e.g., in Fig. <ref type="figure" target="#fig_0">2</ref> a Rolls-upTo arc from District to State is missing.) (3) Derivation completeness: The FDs among sets of measures contained in the source databases must be represented via derivation formulas in the MD model. (Otherwise, derivation relationships are lost.) (4) Avoidance of redundancies: Each measure must be assigned to a fact in such a way that the terminal dimension levels of the fact form a key for the measure without transitive dependencies. (Otherwise, a measure is recorded redundantly at the ''wrong'' level of detail. E.g., in Fig. <ref type="figure" target="#fig_0">2</ref> measure CustomerAge is repeated for each account owned by a customer.)</p><p>In addition to 1MNF, the normal forms 2MNF and 3MNF aim to control optional dimension levels by means of so-called context dependencies and contexts of validity. Roughly, a context of validity is an integrity constraint that restricts the occurrence of structural NULL values in optional dimension levels. To this end, a context of validity for an optional dimension level explains the occurrence (and absence) of structural NULL values (such as ''NULL'' for industry branch of private customers in Fig. <ref type="figure" target="#fig_0">2</ref>) based on the values of a so-called discriminating level. E.g., for the scenario in Fig. <ref type="figure" target="#fig_0">2</ref>, we may assume that in the data sources there is an attribute customerType with values ''private'' and ''company'', which acts as discriminating level, such that a custom-erType of ''private'' implies NULL for Branch and ContactPerson, whereas ''company'' implies NULL for Job and Gender. Here, ''private'' is the context of validity for Job and Gender, whereas ''company'' is the context of validity for Branch and ContactPerson. Moreover, a triple consisting of (a) optional level, (b) discriminating level, and (c) context of validity, e.g., (Job, customerType, private), is called context dependency.</p><p>As argued in <ref type="bibr" target="#b11">[12]</ref> and elaborated in more detail in <ref type="bibr" target="#b10">[11]</ref>, structural NULL values can and should be avoided by suitable introduction of specialization hierarchies. In fact, in <ref type="bibr" target="#b9">[10]</ref> it has been shown that based on context dependencies 3MNF allows to construct a class hierarchy of dimension levels with an implementation as relational database that avoids NULL values. Note that such a class hierarchy is indeed part of the improved model shown in Fig. <ref type="figure" target="#fig_2">4</ref>.</p><p>As explained in <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref> control over NULL values enables context-sensitive summarizability (e.g., if an analyst rolls up from individual customers to industry branches, then schema information explains that the context of analysis has changed to a subclass of all customers) and avoids inconsistent queries (e.g., a query such as ''group private customers by industry branch'' can be rejected based on schema information).</p><p>Importantly, the MD model considered in <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref> does not provide mechanisms for specialization/generalization explicitly, which necessitates the use of context dependencies. As in this paper we consider a richer MD model that explicitly supports subclassing, we are able to explain the occurrence of NULL values directly by moving an attribute with structural NULL values into the appropriate subclass. As a result, we obtain a simplified approach. In particular, we note that 2MNF just requires the existence of a context dependency for every optional dimension level, whereas 3MNF in addition imposes a structure on every dimension hierarchy that allows to construct a class hierarchy to control NULL values. Taking advantage of our richer MD model, in this paper we propose QVT relations which simultaneously address 2MNF and 3MNF via explicit subclassing (instead of implicit subclassing via context dependencies).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Checking correctness of the conceptual MD model</head><p>In this section, we present our approach to check the correctness of a conceptual MD model with respect to the source databases. To this end, we present a set of QVT relations based on MNFs and obtain their inherent desirable design objectives: The resulting conceptual MD model faithfully represents the data sources and captures their analysis potential completely, redundancies are avoided, and NULL values are controlled to allow context-sensitive summarizability and avoid contradictory queries. Our approach consists of two main phases:</p><p>• The elements of the data sources are marked as dimensional elements (fact, dimension, measure and so on).</p><p>We assume that the model which represents the data sources is a relational representation of the data sources in third normal form. • A set of QVT relations between the data source model and the conceptual MD model (previously derived from user requirements) are applied, thus checking and enforcing that the conceptual MD model is aligned with data sources.</p><p>In the following subsections we present both data source model and conceptual MD model, as well as the set of QVT relations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Data source model</head><p>We assume that the data source model is the relational representation of the data sources in third normal form. (Note that third normal form is not a restriction as well-known algorithms such as Synthesis <ref type="bibr" target="#b0">[1]</ref> can transform any input schema into third normal form.) In particular, we use the CWM (Common Warehouse Metamodel) relational metamodel <ref type="bibr" target="#b21">[22]</ref> in order to specify this data source model. The CWM relational metamodel is a standard to represent the structure of data resources in a relational database. This relational metamodel allows us to represent tables, columns, primary keys, foreign keys, and so on. Since every CWM metamodel is MOF-compliant <ref type="bibr" target="#b21">[22]</ref>, it can be used as source or target for QVT relations <ref type="bibr" target="#b23">[24]</ref>. In this paper, we use the part of the relational metamodel shown in Fig. <ref type="figure" target="#fig_4">11</ref>.</p><p>The data source model must be marked before the QVT relations can be applied. Marking models is a technique that provides mechanisms to extend elements of the models in order to capture additional information <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b19">20]</ref>. Marks are used in MDA to prepare the models in order to guide the matching between them. A mark represents a concept from one model, which can be applied to a corresponding element of another model. These marks indicate how every element of the source model must be matched. In our approach, the data source model is marked by appending a suffix to the name of each element according to the conceptual MD model. Table <ref type="table" target="#tab_2">2</ref> shows how the data source model must be marked. Several guidelines are given in <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b5">6]</ref> to properly identify the MD elements in the data sources and perform the marking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Conceptual MD model</head><p>The conceptual modeling of the DW repository is based on a UML profile for MD modeling presented in <ref type="bibr" target="#b12">[13]</ref>. This profile contains the necessary stereotypes in order to elegantly represent main MD properties at the conceptual level by means of a UML class diagram. An overview of our UML profile is given in Table <ref type="table" target="#tab_3">3</ref> and Fig. <ref type="figure" target="#fig_5">12</ref>. Apart from these defined stereotypes the generalization/specialization relationships of UML are used for suitably representing optional dimension levels.</p><p>We note that this UML profile includes further MD features (degenerate dimensions, degenerate facts, nonstrict hierarchies, and so on), which are not taken into account in this paper, since only the characteristics related to MNFs are considered.</p><p>Our profile is formally defined and uses OCL <ref type="bibr" target="#b24">[25]</ref> for expressing well-formed rules of the newly defined elements (see Table <ref type="table" target="#tab_3">3</ref>), thereby avoiding an arbitrary use of the profile. We refer reader to <ref type="bibr" target="#b12">[13]</ref> for a further explanation of this profile and its corresponding OCL constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">QVT relations</head><p>In the following, the QVT relations that align data sources and MD models are described: Check1MNF1_1, Check1MNF1_2, Check1MNF1_3, Check1MNF1_4, Check1MNF2, Check1MNF3, and Check1MNF4 are based on the 1MNF; Check2MNF3MNF is based on both 2MNF and 3MNF. Associations of this stereotype represent relationships between two levels (i.e., bases) of a classification hierarchy in a conceptual MD model. Role R represents the direction in which the hierarchy rolls up, whereas role D represents the direction in which the hierarchy drills down</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>hhRolls-UpToii</head><p>The relations are applied as follows: Check1MNF1_1, Check1MNF1_2, Check1MNF1_3, and Check1MNF1_4 are applied in order to check that the MD model satisfies the first condition (faithfulness) of the 1MNF (recall Section 3.3). Each of these QVT relations is concerned with one of the four cases in which an FD arises in the conceptual MD model, as we explain below (see Section 4.3.1). In these relations both domains are check-only, therefore it is only checked whether there exists a valid match that satisfies these relations without modifying any model if the domains do not match. If the check fails, there typically is no automatic solution, and the DW developer must redesign the conceptual MD model. (E.g., in our example given in Fig. <ref type="figure" target="#fig_0">2</ref>, the user requirements express that Regions roll-up to States, whereas the data sources do not provide this information. Thus, either the conceptual model has to be modified or the source data has to be aligned with the model.) Otherwise, i.e., if the check succeeds, the remaining relations can be applied to properly modify the conceptual MD model (according to the second, third, and fourth condition of 1MNF as well as according to 2MNF and 3MNF). Therefore, these QVT relations not only check the correctness of the conceptual MD model according to the data sources, but also enforce this correctness by creating the necessary elements of the conceptual MD model until each relation holds.</p><p>In order to graphically show how to apply every developed QVT relation, the approach defined in <ref type="bibr" target="#b18">[19]</ref> is followed. This approach is based on specifying a map of QVT relations, thus indicating the flow of execution. In this kind of map, QVT relations are related to each other by means of several kinds of relationships, in two of which we are interested: composition (several relations are composed regardless of execution order) and dependency (a relation must be executed before another relation). The map of QVT relations of our approach is shown in Fig. <ref type="figure" target="#fig_6">13</ref>. This map indicates that first a set of relations to verify the first condition of the 1MNF is applied. Once these relations are successfully executed, it is possible to apply the remainder of the defined QVT relations.</p><p>Throughout the checks, we assume that the names of corresponding elements in both models are equal (apart from the previously added marks) according to a linguistic approach based on name similarity <ref type="bibr" target="#b27">[28]</ref>. This issue is captured in the when clauses of relations as a precondition, when appropriate. For example, the when clause of the Check1MNF1_4 relation indicates that this relation is only executed (among other conditions) if the name of the Fact f equals the name of the Table <ref type="table">t1</ref> plus the corresponding mark (_FACT).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1.">Verify 1MNF (first condition)</head><p>According to the first condition of 1MNF, for every FD in the conceptual MD model we have to check that there is a corresponding FD in the data source model, i.e., the FDs implied by the MD model must be a subset of those observed in the source databases. Therefore, this condition assures that the source data can be properly represented under the MD model. We have defined one QVT relation (see Fig. <ref type="figure" target="#fig_7">14</ref>) for each case in which an FD arises in the conceptual MD model in order to check if the same FD occurs in the data source model. These cases are as follows:   (1) Descriptor determines DimensionAttributes. This case is checked by Check1MNF1_1 (see Fig. <ref type="figure" target="#fig_7">14):</ref> The elements related to the conceptual MD model are a Base (b), a Descriptor (d) and a DimensionAttribute (da). These elements of the conceptual MD model must be matched against a set of elements of the data source model: a table (t) with a column (c1) which is part of the primary key (pk). This table is marked as a Dimension or Base (m_n_t) and the column (c1) is marked as a Descriptor (m_n_c1). There is also a column (c2) which is functionally determined by the primary key. This column is marked as a Dimens-ionAttribute (m_n_c2). (2) A Rolls-upTo association is an FD between hierarchy levels (Bases). This case is checked by Check1MNF1_2 (see Fig. <ref type="figure" target="#fig_7">14</ref>): A set of elements that represent two Bases (b1 and b2) related by means of a Rolls-upTo association must be checked against the following pattern in the data source model: a set of elements that represents a table (t1) with a foreign key (fk) that references the other table (t2). This represents a many-to-one relationship in a third normal form relational database. Furthermore, table t1 must be marked as Dimension or Base, t2 as Base and foreign key fk as Rolls-upTo. (3) Derived measures. This case is checked by Check1MNF1_3 (see Fig. <ref type="figure" target="#fig_7">14</ref>): If there is a derived FactAttribute (with a derivation rule) in the MD model, then in the data sources there must be a procedure which implements this derivation rule. ( <ref type="formula">4</ref>) Dimensions (and their terminal dimension levels) functionally determine FactAttributes (i.e., measures).</p><p>This case is checked by Check1MNF1_4 (see Fig. <ref type="figure" target="#fig_7">14</ref>): In this relation, a set of elements of the conceptual MD model that represents the association between a Dimension (d), together with its terminal dimension level, i.e, Base (b) and a Fact (f) together with its attributes (fa) is matched against the following pattern of the data sources: a table (t1) with a column (c), a primary key (pk) which contains a foreign key that references another table (t2). Table <ref type="table">t1</ref> is marked as a Fact, while table t2 is marked as Dimension and column c is marked as FactAttribute.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2.">Verify 1MNF (second condition)</head><p>The relation Check1MNF2 checks the second condition of 1MNF, i.e., roll-up completeness (the FDs among dimension levels contained in the source databases must be represented as roll-up arcs in the MD model). Therefore, if this relation holds then there exists a Rolls-upTo association between bases in the conceptual MD model if there is an FD between columns of different tables in the data source model. This relation (see Fig. <ref type="figure">15</ref>) is Fig. <ref type="figure">15</ref>. Check the second condition of 1MNF.</p><p>outlined as follows: The data source model consists of a portion of the CWM relational metamodel that represents a table t1 (marked as a Dimension or Base) with a foreign key fk (marked as Rolls-upTo) to another table t2 (marked as Base). This set of elements must be matched against the following elements of the conceptual MD model: a Base (b1) with the name of table t1, a Base (b2) with the name of table t2, and the corresponding properties to define the Rolls-upTo association between the two Bases. We wish to point out that role R in the Rolls-upTo association is provided by the table t1 (owner of the foreign key), since it indicates the direction in which the hierarchy rolls up, whereas role D is provided by the table t2, since it represents the direction in which the hierarchy drills down.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.3.">Verify 1MNF (third condition)</head><p>The relation Check1MNF3 checks the third condition of 1MNF, i.e., derivation completeness. If a certain measure can be computed from a set of other measures, then this computation indicates an FD among measures. Therefore, the FDs among measures that appear in the data source model should be reflected as derived FactAttributes of the conceptual MD model. The relation that verifies this condition (Check1MNF3) is shown in Fig. <ref type="figure">16</ref>. It checks that if a procedure exists in data sources in order to compute the value of a column (pdk_return parameter) from a set of other columns (pdk_in parameters), a derived FactAttribute (with a derivation rule) in the target model must be matched. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.4.">Verify 1MNF (fourth condition)</head><p>The relation Check1MNF4 checks the fourth condition of 1MNF, i.e., avoidance of redundancies (see Fig. <ref type="figure">17</ref>). Therefore, each measure must be assigned to a Fact (as a FactAttribute) in such a way that the terminal dimension levels of the Fact form a key for the measure without transitive dependencies. A set of elements that represents a table (marked as a Fact) with a foreign key to another table (marked as a Dimension) corresponds to a set of elements which represents a Fact together with a Dimension and a Base that represents the terminal dimension level. The data source columns that represent FactAttributes are marked as measures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.5.">Verify 2MNF and 3MNF</head><p>The relation Check2MNF3MNF checks the conditions of 2MNF and 3MNF (see Fig. <ref type="figure" target="#fig_9">18</ref>). These normal forms control optional dimension levels by avoiding structural NULL values. The aim of this relation is check or enforce a class hierarchy of dimension levels in order to avoid these NULL values. As in this paper we consider a conceptual MD model that explicitly supports subclassing, the Check2MNF3MNF relation covers both 2MNF and 3MNF by moving an attribute with structural NULL values into the appropriate subclass.</p><p>This relation is shown in Fig. <ref type="figure" target="#fig_9">18</ref>. A table (t1) with two columns, an optional column (l0) and a discriminating level (l) is matched against a generalization hierarchy: a superclass is a base (b1), and a subclass is other base (b2) with a dimension attribute that corresponds to the optional column. Furthermore, we use context dependencies as schema level constraints to identify discriminating levels, so in the when clause there is a function (isDiscriminatingLevel) that checks whether the column l is a discriminating level according to the table t1 and the other column l0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Case study</head><p>In this section, we show how our QVT relations are properly applied. Furthermore, we explain how to implement and execute these defined QVT relations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Sample applications of QVT relations</head><p>The sample scenario previously introduced in the Introduction (see Figs. <ref type="figure" target="#fig_0">2</ref><ref type="figure" target="#fig_1">3</ref><ref type="figure" target="#fig_2">4</ref>) is used to show how our QVT relations are properly applied to assure the correctness of the conceptual MD model of the DW repository against data sources.</p><p>In our scenario the QVT relations are applied according to the process described in Fig. <ref type="figure" target="#fig_6">13</ref>. First, a subset of the QVT relations is executed to check the first condition of the first MNF. In our scenario, this verification  process warns us about two main issues regarding the faithfulness of the conceptual MD model. On the one hand, the Rolls-upTo association between Region base and State base in the initial conceptual MD model (see Fig. <ref type="figure" target="#fig_0">2</ref>) does not correspond to any FD in the data sources, since the Check1MNF1_2 relation does not hold. Therefore, this conceptual MD model must be modified by removing the Rolls-upTo association, for example. On the other hand, the Check1MNF1_4 relation states that dimensions must functionally determine fact attributes. However, according to the available data sources (see Fig. <ref type="figure" target="#fig_1">3</ref>), the terminal dimension levels of the fact do not form a key for the CustomerAge measure, which implies that this measure should not be recorded as in Fig. <ref type="figure" target="#fig_0">2</ref>. Therefore, the solution is to remove the CustomerAge fact attribute from the model (and to create a customer related MD model that incorporates this measure). Regarding the other QVT relations, they are successfully executed. Therefore, after applying these two changes the data sources can be properly represented under the conceptual MD model.</p><p>Once the first set of relations has been executed, the remaining relations can be applied to check and enforce the correctness of the conceptual MD model against the available data sources, as shown in Fig. <ref type="figure" target="#fig_6">13</ref>, thus obtaining the conceptual MD model of Fig. <ref type="figure" target="#fig_2">4</ref>. An example of the application of the QVT relations in our scenario is given in Fig. <ref type="figure" target="#fig_10">19</ref>. On the left hand side of this figure the marked model of the available data sources is represented. On the right hand side, the resulting conceptual MD model after applying the set of QVT relations (presented in the previous section) is represented. In the middle of the figure, the applied relations between both models are represented. In the next subsections, the application of these relations is described in-depth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1.">Verify second condition of 1MNF</head><p>The second condition of 1MNF is verified by the relation Check1MNF2. Once this relation is applied, it checks or enforces the following:</p><p>• Relation Check1MNF2 checks and enforces that FK_ToState_ROLLS, a foreign key in the District_BASE table referencing the State_BASE table (which embodies a many-to-one relationship between districts and states), is represented via a Rolls-upTo association between District base and State base in the conceptual MD model. We point out that this Rolls-upTo association was missing in the requirement-driven conceptual MD model (recall Fig. <ref type="figure" target="#fig_0">2</ref>).  • Relation Check1MNF2 checks that FK_ToDistrict_ROLLS, a foreign key in the City_DIM table referencing the District_BASE table, is represented via a Rolls-upTo association between city base and district base in the conceptual MD model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2.">Verify fourth condition of 1MNF</head><p>The fourth condition of 1MNF is verified by the Check1MNF4 relation. This relation checks that the Account_FACT table, its primary key (PK_Account), foreign key (FK_To_Customer) to the Customer_DIM table, and its columns (Balance_MEASURE, Turnover_MEASURE, and Interest_MEASURE,) correspond to the Account fact (including fact attributes) and the customer dimension (including the terminal dimension level customer base).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3.">Verify 2MNF and 3MNF</head><p>In order to verify 2MNF and 3MNF, the Check2MNF3MNF relation is applied. The enforcement of this relation creates subclasses of the customer base in the conceptual MD model, whose names are determined by the values of the discriminating level Type_DA: company and private. Furthermore, it enforces that the optional columns Job_DA and Gender_DA in the data source model belong to the private subclass in the conceptual MD model, while the optional columns Branch_DA and ContactPerson_DA belong to the company subclass of the customer base.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Implementation of QVT relations</head><p>The defined set of QVT relations are implemented and executed in an MDA-compliant CASE tool (Borland Together Architect <ref type="bibr" target="#b1">[2]</ref>). Together Architect is a tool designed by Borland to support developers in the design of software applications by using several MDA features. One of the most valuable features of Borland Together Architect is the QVT language in order to implement transformations and relations between models. However, this tool only implements the imperative part of the latest QVT specification <ref type="bibr" target="#b23">[24]</ref>. Therefore, we have implemented the imperative versions of the declarative relations described in Section 4.3 (which can be easily achieved since there is a straightforward correspondence between an imperative and a declarative QVT relation <ref type="bibr" target="#b23">[24]</ref>). In spite of this, since declarative relations are clearer and more understandable than imperative ones, throughout this paper declarative relations are shown. This section illustrates the implementation and execution of one of the QVT relations (Check1MNF2) in Borland Together Architect, and its application to our running example.</p><p>Borland Together Architect is based on the Eclipse development platform <ref type="bibr" target="#b3">[4]</ref>, so it can be extended by means of plugins in order to add more features and new functionality. In order to implement the set of QVT relations, two new plugins have been developed: (i) a plugin for MD modeling (according to the UML profile described in Section 4.2), and (ii) a plugin that comprises the relational metamodel of CWM in order to model data sources. Once these plugins have been developed and integrated into the Eclipse platform, the facilities provided by Borland Together Architect can be used to develop our MNF-based QVT relations. The source code of the Check1MNF2 relation is shown in Fig. <ref type="figure" target="#fig_12">21</ref>.</p><p>In order to execute this relation on the one hand we have specified the conceptual MD model for the running example (Fig. <ref type="figure" target="#fig_0">2</ref>) by using the developed plugin of our UML profile for MD modeling of DWs. This model is presented in Fig. <ref type="figure" target="#fig_14">23</ref>. On the other hand, the available data sources (Fig. <ref type="figure" target="#fig_1">3</ref>) are specified via the developed CWM plugin, which is shown in Fig. <ref type="figure" target="#fig_13">22</ref>.</p><p>After the execution of the QVT relations we obtain the model shown in Fig. <ref type="figure" target="#fig_15">24</ref>. In this model, we focus on the elements related to the Check1MNF2 relation: Base classes and the Rolls-upTo associations between them. Once this relation is executed, the resulting MD model shown in Fig. <ref type="figure" target="#fig_15">24</ref> has the following features:</p><p>• Rolls-upTo associations, which are represented by many-to-one relationships in the data source model, are preserved in the resulting MD model. These Rolls-upTo associations are those between Customer and City, City and District, and City and Region. • It is enforced that the missing association between District and State in the requirement-driven conceptual MD model is represented as a Rolls-upTo association, according to the many-to-one relationship between districts and states in the data source model. Furthermore, we wish to point out that the Rolls-upTo association between Region and State is not longer present in the MD model.</p><p>Although Borland Together Architect is a widely used and powerful CASE tool, we have encountered two main pitfalls during the implementation stage. On the one hand, since the QVT standard is very recent, the QVT relational part is still not supported by Borland Together Architect. Thus, we had to adapt our QVT relations to the supported operational mappings (imperative part of QVT). On the other hand, the UML metamodel provided by Borland Together Architect is not fully compliant with the OMG specification, so we had to adapt the implementation of our MD profile to this metamodel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions and future work</head><p>In this paper, we have presented an approach to assure the correctness of a conceptual MD model of the DW repository according to the data sources that will populate this repository. This approach is outlined as follows: We first obtain the conceptual MD model of the DW from user requirements and then we verify and enforce its correctness against data sources by using a set of QVT relations based on MNFs. By using MNFs, we can assure that the conceptual MD model satisfies certain desirable properties such as faithfulness, completeness, avoidance of redundancies, and context-sensitive summarizability. Furthermore, QVT relations allow us to integrate this approach into an MDA framework for the development of DWs.</p><p>Our immediate future work is to extend our approach by defining QVT relations in order to automatically transform the conceptual MD model into logical models that are closer to the relational implementation. Furthermore, non-strict hierarchies, many-to-many relationships between a fact and a dimension, degenerate facts, and other MD issues should be taken into account. Therefore, MNFs will also assure the correctness of these logical models.</p><p>On the other hand, an emerging standard called Architecture-Driven Modernization (ADM) is being proposed <ref type="bibr" target="#b20">[21]</ref> in order to define a set of interoperability metamodels that facilitate the collection, analysis, refactoring and transformation of existing systems. Since this standard aims to incorporate a scenario to facilitate the identification of relevant data that need to be analyzed, reconciled, validated and loaded into the DW repository, our intention is to align our approach with ADM.</p><p>Finally, we plan to experiment with other emerging implementations of QVT, like SmartQVT <ref type="bibr" target="#b29">[30]</ref>, to overcome the encountered problems in the implementation of our QVT relations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. MD model for banking domain.</figDesc><graphic coords="3,100.89,375.94,304.54,288.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Data source model for banking domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Improved MD model for banking domain.</figDesc><graphic coords="5,86.08,67.32,334.42,248.69" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Icons for some i * elements.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Part of the relational CWM metamodel.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Extension of the UML with the stereotypes for MD modeling used in this paper.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Map of relationships among the defined QVT relations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Check every case of the first condition of 1MNF.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 16 .Fig. 17 .</head><label>1617</label><figDesc>Fig. 16. Check the third condition of 1MNF.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 18 .</head><label>18</label><figDesc>Fig.18. Check the 2MNF and the 3MNF.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 19 .</head><label>19</label><figDesc>Fig. 19. Sample applications of QVT relations.</figDesc><graphic coords="19,164.65,106.50,195.47,262.47" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 20 .</head><label>20</label><figDesc>Fig. 20. Sample application of the Check1MNF2 relation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 21 .</head><label>21</label><figDesc>Fig. 21. Implementation of the Check1MNF2 relation in Borland Together Architect.</figDesc><graphic coords="21,45.35,67.32,447.89,401.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 22 .</head><label>22</label><figDesc>Fig. 22. Data source model of the running example.</figDesc><graphic coords="22,131.90,67.32,283.32,411.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 23 .</head><label>23</label><figDesc>Fig. 23. Implementation of the initial MD model of the running example.</figDesc><graphic coords="23,175.75,67.32,184.68,483.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 24 .</head><label>24</label><figDesc>Fig. 24. MD model after applying the set of QVT relations.</figDesc><graphic coords="24,180.09,67.32,184.68,483.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc>Marks applied to the data source model</figDesc><table><row><cell>Mark</cell><cell>Data source model element</cell><cell>MD model element</cell></row><row><cell>_FACT</cell><cell>Table</cell><cell>Fact</cell></row><row><cell>_DIM</cell><cell>Table</cell><cell>Dimension</cell></row><row><cell>_BASE</cell><cell>Table</cell><cell>Base</cell></row><row><cell>_MEASURE</cell><cell>Column</cell><cell>FactAttribute</cell></row><row><cell>_DA</cell><cell>Column</cell><cell>DimensionAttribute</cell></row><row><cell>_D</cell><cell>Column</cell><cell>Descriptor</cell></row><row><cell>_ROLLS</cell><cell>ForeignKey</cell><cell>Rolls-upTo</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 Main</head><label>3</label><figDesc></figDesc><table /><note><p>stereotypes of our UML profile for MD modeling of DWs Stereotypes Description Icon Fact Classes of this stereotype represent facts in a conceptual MD model, consisting of measures (the values being analyzed) Dimension Classes of this stereotype represent dimensions in a conceptual MD model, consisting on hierarchy levels Base Classes with this stereotype represent dimension hierarchy levels in a conceptual MD model consisting of dimension attributes (descriptive information about the values being analyzed) FactAttribute Attributes of this stereotype represent attributes of a fact (i.e., measures) in a conceptual MD model. It can represent a derived measure, if a derivation rule is included DimensionAttribute Attributes of this stereotype represent attributes of a dimension hierarchy level (i.e., base) in a conceptual MD model Descriptor Attributes of this stereotype represent descriptor attributes of a dimension hierarchy level (i.e., base) in a conceptual MD model Rolls-UpTo</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>J.-N. Mazo ´n et al. / Data &amp; Knowledge Engineering 63 (2007) 725-751</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>J.-N. Mazo ´n et al. / Data &amp; Knowledge Engineering 63 (2007) 725-751</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We thank all the reviewers of this paper for their detailed and useful comments. This work has been partially supported by the METASIGN (TIN2004-00779) project from the Spanish Ministry of Education and Science, and by the DADS (PBC-05-012-2) project from the Castilla-La Mancha Ministry of Education and Science (Spain). Jose-Norberto Mazo ´n is funded by the Spanish Ministry of Education and Science under a FPU Grant (AP2005-1360).</p></div>
			</div>


			<div type="availability">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DATA WAREHOUSE PROVIDE</head></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Jens Lechtenbo ¨rger obtained his Ph.D. in computer science from the University of Mu ¨nster, Germany, with a thesis on ''Data Warehouse Schema Design'' for which he received a dissertation award at the German database conference BTW 2003. Currently, he is a tenured lecturer at the Department of Information Systems at the University of Mu ¨nster. His publications appear in major international conferences and journals, for which he also serves as reviewer. His current research interest include all aspects of database systems, in particular data warehouse modeling, and e-learning. His e-mail is lechten@wi.uni-muenster.de.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Synthesizing third normal form relations from functional dependencies</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Bernstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Database Syst</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="277" to="298" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Borland</forename><surname>Together</surname></persName>
		</author>
		<ptr target="http://www.borland.com/together" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A logical approach to multidimensional databases</title>
		<author>
			<persName><forename type="first">L</forename><surname>Cabibbo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Torlone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EDBT</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">H.-J</forename><surname>Schek</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">F</forename><surname>Saltor</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Ramos</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Alonso</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1377</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<ptr target="http://www.eclipse.org" />
		<title level="m">Eclipse</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Goal-oriented requirement analysis for data warehouse design</title>
		<author>
			<persName><forename type="first">P</forename><surname>Giorgini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rizzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Garzetti</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>DOLAP</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The dimensional fact model: a conceptual model for data warehouses</title>
		<author>
			<persName><forename type="first">M</forename><surname>Golfarelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rizzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Cooper. Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="215" to="247" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Conceptual data warehouse modeling</title>
		<author>
			<persName><forename type="first">B</forename><surname>Hu ¨semann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lechtenbo ¨rger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Vossen</surname></persName>
		</author>
		<ptr target="CEUR-WS.org" />
	</analytic>
	<monogr>
		<title level="m">DMDW, CEUR Workshop Proceedings</title>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Jeusfeld</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Shu</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Staudt</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Vossen</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">28</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Building the Data Warehouse</title>
		<author>
			<persName><forename type="first">W</forename><surname>Inmon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Wiley &amp; Sons</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Data Warehouse Toolkit</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kimball</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ross</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Wiley &amp; Sons</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Lechtenbo ¨rger</surname></persName>
		</author>
		<title level="m">Data warehouse schema design</title>
		<meeting><address><addrLine>Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
		<respStmt>
			<orgName>University of Mu ¨nster</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multidimensional normal forms for data warehouse design</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lechtenbo ¨rger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Vossen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="415" to="434" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Normal forms for multidimensional databases</title>
		<author>
			<persName><forename type="first">W</forename><surname>Lehner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Albrecht</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wedekind</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SSDBM</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Rafanelli</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Jarke</surname></persName>
		</editor>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A UML profile for multidimensional modeling in data warehouses</title>
		<author>
			<persName><forename type="first">S</forename><surname>Luja ´n-Mora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I.-Y</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Knowl. Eng</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="725" to="769" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Applying transformations to model driven data warehouses</title>
		<author>
			<persName><forename type="first">J.-N</forename><surname>Mazo ´n</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pardillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DaWaK</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Tjoa</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4081</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An MDA approach for the development of data warehouses</title>
		<author>
			<persName><forename type="first">J.-N</forename><surname>Mazo ´n</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.dss.2006.12.003</idno>
	</analytic>
	<monogr>
		<title level="j">Decis. Support Syst</title>
		<imprint/>
	</monogr>
	<note>in press</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A set of QVT relations to assure the correctness of data warehouses by using multidimensional normal forms</title>
		<author>
			<persName><forename type="first">J.-N</forename><surname>Mazo ´n</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lechtenbo ¨rger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ER</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Embley</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Olive</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">´</forename></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Ram</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4215</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Applying MDA to the development of data warehouses</title>
		<author>
			<persName><forename type="first">J.-N</forename><surname>Mazo ´n</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Serrano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Piattini</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>DOLAP</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Designing data warehouses: from business requirement analysis to multidimensional modeling</title>
		<author>
			<persName><forename type="first">J.-N</forename><surname>Mazo ´n</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trujillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Serrano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Piattini</surname></persName>
		</author>
		<editor>K. Cox, E. Dubois, Y. Pigneur, S.J. Bleistein, J. Verner, A.M. Davis, R. Wieringa</editor>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>REBNITA, University of New South Wales Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<author>
			<persName><forename type="first">S</forename><surname>Melia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">´</forename></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Koch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MDA transformations applied to web application development</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Lowe</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Gaedke</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3579</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Mellor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Uhl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Weise</surname></persName>
		</author>
		<title level="m">MDA Distilled: principles of model-driven architecture</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<ptr target="http://adm.omg.org/" />
		<title level="m">Architecture Driven Modernization (ADM)</title>
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<ptr target="http://www.omg.org/cgi-bin/doc?formal/03-03-02" />
		<title level="m">Common Warehouse Metamodel Specification 1.1</title>
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<ptr target="http://www.omg.org/cgi-bin/doc?omg/03-06-01" />
		<title level="m">MDA Guide 1.0.1</title>
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<ptr target="http://www.omg.org/cgi-bin/doc?ptc/2005-11-01" />
		<title level="m">MOF 2.0 Query/View/Transformation</title>
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Object Constraint Language (OCL) specification 2</title>
		<ptr target="http://www.omg.org/cgi-bin/doc?ptc/03-10-14" />
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<ptr target="http://www.omg.org/cgi-bin/doc?formal/05-07-04" />
		<title level="m">Unified Modeling Language Specification</title>
		<imprint>
			<date type="published" when="2006-01">January 2006</date>
		</imprint>
		<respStmt>
			<orgName>Object Management Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Informational scenarios for data warehouse requirements elicitation</title>
		<author>
			<persName><forename type="first">N</forename><surname>Prakash</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gosain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ER</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Atzeni</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3288</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A survey of approaches to automatic schema matching</title>
		<author>
			<persName><forename type="first">E</forename><surname>Rahm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Bernstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">VLDB J</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="334" to="350" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A holistic approach for managing requirements of data warehouse systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Schiefer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>List</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bruckner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eighth Americas Conference on Information Systems</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">An open source model transformation tool implementing the MOF 2.0 QVT-Operational language</title>
		<author>
			<persName><surname>Smartqvt</surname></persName>
		</author>
		<ptr target="http://smartqvt.elibel.tm.fr/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<author>
			<persName><forename type="first">N</forename><surname>Tryfona</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Busborg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G B</forename><surname>Christiansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">starER: A conceptual model for data warehouse design</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Van Lamsweerde</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>ICSE</publisher>
		</imprint>
	</monogr>
	<note>Requirements engineering in the year 00: a research perspective</note>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">A method for demand-driven information irequirements analysis in data warehousing projects</title>
		<author>
			<persName><forename type="first">R</forename><surname>Winter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Strauch</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>HICSS</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Information requirements engineering for data warehouse systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Winter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Strauch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SAC</title>
		<editor>
			<persName><forename type="first">H</forename><surname>Haddad</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Omicini</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Wainwright</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Liebrock</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Modelling strategic relationships for process reenginering</title>
		<author>
			<persName><forename type="first">E</forename><surname>Yu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>University of Toronto, Canada</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<author>
			<persName><forename type="first">E</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Towards modeling and reasoning support for early-phase requirements engineering</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
