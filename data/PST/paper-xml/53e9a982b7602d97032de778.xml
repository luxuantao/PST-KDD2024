<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Supporting Service Differentiation in Wireless Packet Networks Using Distributed Control</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Andras</forename><surname>Veres</surname></persName>
							<email>veres@comet.columbia.edu</email>
							<affiliation key="aff0">
								<orgName type="department">COMET Group</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027-6699</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Andrew</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
							<email>campbell@comet.co-lumbia.edu</email>
							<affiliation key="aff0">
								<orgName type="department">COMET Group</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027-6699</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Michael</forename><surname>Barry</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">COMET Group</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027-6699</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">COMET Group</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027-6699</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Student Member, IEEE</roleName><forename type="first">Li-Hsiang</forename><surname>Sun</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">COMET Group</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027-6699</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>1999</postCode>
									<settlement>New York</settlement>
									<region>NY, in</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Supporting Service Differentiation in Wireless Packet Networks Using Distributed Control</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3F0A6EFE67658F16D96C059F55A1417C</idno>
					<note type="submission">received December 1, 2000; revised June 1, 2001.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Distributed algorithms</term>
					<term>quality of service</term>
					<term>wireless packet networks</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper investigates differentiated services in wireless packet networks using a fully distributed approach that supports service differentiation, radio monitoring, and admission control. While our proposal is generally applicable to distributed wireless access schemes, we design, implement, and evaluate our framework within the context of existing wireless technology. Service differentiation is based on the IEEE 802.11 Distributed Coordination Function (DCF) originally designed to support best-effort data services. We analyze the delay experienced by a mobile host implementing the IEEE 802.11 DCF and derive a closed-form formula.We then extend the DCF to provide service differentiation for delay-sensitive and best-effort traffic based on the results from the analysis. Two distributed estimation algorithms are proposed. These algorithms are evaluated using simulation, analysis, and experimentation. A Virtual MAC (VMAC) algorithm passively monitors the radio channel and estimates locally achievable service levels. The VMAC estimates key MAC level statistics related to service quality such as delay, delay variation, packet collision, and packet loss. We show the efficiency of the VMAC algorithm through simulation and consider significantly overlapping cells and highly bursty traffic mixes. In addition, we implement and evaluate the VMAC in an experimental differentiated services wireless testbed. A Virtual Source (VS) algorithm utilizes the VMAC to estimate application-level service quality. The VS allows application parameters to be tuned in response to dynamic channel conditions based on "virtual delay curves." We demonstrate through simulation that when these distributed virtual algorithms are applied to the admission control of the radio channel then a globally stable state can be maintained without the need for complex centralized radio resource management.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>fort services. Wireless access may be considered just another hop in the communication path. Therefore, it is desirable that the architecture supporting quality assurances follows the same principles in the wireless network as in the wireline Internet, assuring compatibility between the wireless and wireline parts.</p><p>There are two principal approaches to support better than best-effort services for Internet-based services in a future wireless network. The first approach begins with the conventional circuit switched paradigm and extends it with datagram services. These systems are characterized by strict control over both the wireline and wireless resources, motivated by the argument that such control, with complex and sophisticated mechanisms and protocols, is necessary to maintain good quality in the wireless environment <ref type="bibr" target="#b0">[1]</ref>- <ref type="bibr" target="#b2">[3]</ref>.</p><p>Another increasingly popular approach is based on an important Internet design principle that mandates that only minimal control and signaling is viable, since only simple mechanisms can accommodate the diversity of applications in the Internet, let alone unforeseen future wireless applications. The Differentiated Services concept of the IETF <ref type="bibr" target="#b8">[9]</ref> follows this design philosophy. By definition, it only specifies per-hop-behaviors instead of end-to-end services or protocols. The Differentiated Services architecture is envisioned to span the whole end-to-end path (e.g., from a server to a mobile user), thus the wireless hop has to be compatible with the Differentiated Services model as well. A good example for such a wireless technology is the IEEE 802.11 Distributed Coordination Function (DCF) standard <ref type="bibr" target="#b3">[4]</ref>, which is compatible with the current best-effort service model of the Internet. The IEEE 802.11 DCF enables the fast installation of simple wireless access networks, with minimum management and maintenance costs, and with virtually no requirement for cell planning. Similar distributed algorithms are analyzed and compared in <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>.</p><p>In the case of ad hoc wireless networks, there is no notion of a central entity. The dynamic nature of ad hoc networks makes it very difficult to dynamically assign a central controller and maintain connection, reservation, and scheduling states, not to mention the difficulty of handling overlapping coverage areas, in which case nearby mobile hosts need to discover and negotiate resources. Instead of introducing complex layer-two signaling, distributed algorithms attempt to solve these problems in a more straightforward, although possibly less radio-efficient, way.</p><p>In this paper, we propose a set of algorithms that form a fully distributed wireless differentiated services network based on:</p><p>• a distributed, differentiated services-capable MAC;</p><p>• a distributed radio resource monitoring mechanism; • service quality estimation;</p><p>• distributed traffic and admission control.</p><p>Each of these components performs a well-defined task and can be implemented in a fully distributed manner, without the need for a centralized controller. While our framework is generally applicable to distributed wireless access schemes, we design, implement, and evaluate our framework within the context of existing wireless technology. Service differentiation is based on the IEEE 802.11 DCF. Supporting better than best-effort service over such a shared wireless channel using distributed control algorithms presents a number of challenges, however.</p><p>The first challenge relates to the difficulty in providing service differentiation at the distributed wireless MAC layer. The impact of packet collisions, hidden terminals, fading, and interference suggests that such a radio environment lends itself more to soft service assurances rather than deterministic ones. In this work, we take our lead from this observation and attempt to quantify the level of assurance and service differentiation that can be delivered to wireless Internet applications. This means that under such a regime quality measures can only be probabilistically guaranteed where relative quality differentiation can be assured for different service classes.</p><p>Providing differentiated services in this manner requires that the radio MAC supports some degree of separation between different types of services. We propose a modified IEEE 802.11 radio MAC algorithm for mobile hosts and base stations. The proposed MAC ensures that all packets sent by a mobile host are differentiated and, more importantly, that differentiation is effective among packets sent by other mobile hosts as well.</p><p>Providing service differentiation solely at the radio interface is insufficient to enable predictable behavior for individual traffic types, however. This leads to our next challenge. Network cells may overlap significantly and service differentiation has to be maintained across cells. The probabilistic assurances offered by such a wireless differentiated services MAC itself cannot ensure that traffic levels experienced by a mobile host are not only relatively better but kept within some absolute limit for acceptable application quality. We address this challenge by proposing a distributed solution without the need for any central control over multiple cells. In particular, we propose a distributed traffic control algorithm, which maintains the traffic load such that the relative assurances offered by a differentiated services MAC can also meet the absolute limits required by the applications using better than best-effort services.</p><p>In response to these challenges, we develop the Virtual MAC (VMAC) and Virtual Source (VS) algorithms that monitor the capability of the radio channel and passively estimate whether the channel can support new service demands (e.g., delay and loss), taking into account both local conditions and interference caused by external effects or overlapping cells. The VMAC channel-monitoring capability is capable of collecting information about all transmissions in the proximity of a mobile host. Mobile hosts utilize this information to estimate the quality experienced by other mobiles. The difficulty of estimation in this environment is that there is little relationship between the monitored channel load and the delay or loss statistics of the channel. The VMAC and VS algorithms, which, based on the information provided by a passive channel monitor, can efficiently estimate the necessary quality metrics for different traffic classes. These "virtual algorithms" are passive and do not load the channel, avoiding further increases of load in potentially congested wireless networks.</p><p>Based on the service quality estimations obtained from the virtual monitoring algorithms, mobile hosts and base stations determine whether a new session with a particular service level requirement should be admitted or not. In this paper, we simplify traffic control and propose an admission control solution that simply accepts or rejects real-time sessions. Admission is granted if the average delay estimated by the VS algorithm in the last time period falls within a certain delay limit. We show that, if all nodes use passive monitoring and base their admission decisions accordingly, a globally stable state can be maintained even in multicell environments.</p><p>In this paper, we present the design, implementation, and evaluation of our framework. The principles that underpin our distributed approach are based on minimal control and signaling. While our implementation is evaluated within the context of IEEE 802.11, the algorithms that support service differentiation, radio monitoring, and admission control are more generally applicable. We recognize that such an approach can only deliver softer assurances in comparison to more tightly coupled control systems. We argue, however, that distributed control is more scalable (i.e., provides minimum coupling between architectural components), extensible (i.e., one component can be replaced or improved without the need to change other system components), and flexible (i.e., in accommodating new and diverse needs of applications).</p><p>The structure of the paper is as follows. Section II presents the related work on wireless service differentiation and distributed control. Section III discusses and analyzes the achievable service differentiation using a distributed approach. We analyze the delay experienced by a mobile host implementing the IEEE 802.11 DCF and derive a closed-form formula. We then extend DCF with the capability to tune and set the backoff mechanisms to provide service differentiation for delay sensitive and best-effort traffic based on the results from the analysis. In Section IV, we introduce the VMAC, which estimates key MAC-level statistics related to service quality such as delay, delay variation, packet collision, and packet loss. We show the efficiency of the VMAC algorithm through simulation, and in Section V we implement and evaluate the VMAC in an experimental differentiated services wireless testbed. In Section VI, we present the VS algorithm, which utilizes the VMAC to estimate application-level service quality. The VS allows application parameters to be tuned in response to dynamic channel conditions based on "virtual delay curves." In Section VII, we demonstrate through simulation that, when these distributed virtual algorithms are applied to the admission control of the radio channel, a globally stable state can be achieved. Finally, we present some concluding remarks and discuss future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>Effective wireless MAC protocols must find a good balance between the added complexity of offering service guarantees for multiple service classes, the most efficient use of available resources, and the ability to react promptly to failed transmissions <ref type="bibr" target="#b6">[7]</ref>. A number of MACs intended for third-generation protocols are analyzed in <ref type="bibr" target="#b6">[7]</ref>, some of which offer probabilistic guarantees. In general, these MAC protocols and wireless algorithms rely on centralized control.</p><p>In <ref type="bibr" target="#b2">[3]</ref> and <ref type="bibr" target="#b9">[10]</ref>, a number of wireless scheduling algorithms are analyzed, several of which approximate optimal fluid fair scheduling even in the presence of location-dependent error bursts. However, these mechanisms rely on centralized control and the polling of backlogged mobile hosts. These algorithms are analyzed using short-memory models (e.g., CBR, Poisson, and MMPP), which have been shown to be inefficient when modeling real TCP/IP traffic <ref type="bibr" target="#b10">[11]</ref>.</p><p>A distributed architecture to support weighted rate differentiation among flows is introduced in <ref type="bibr" target="#b24">[26]</ref>. This proposal works on an end-to-end manner, where the end hosts adjust their rate using the Additive Increase Multiplicative Decrease (AIMD) algorithm. Instead of using packet loss, the AIMD actions are based on the observed end-to-end packet separation, which is treated as a sign of congestion. The algorithm works over lowbandwidth links and assumes that sources are greedy.</p><p>The IEEE 802.11 Point Coordination Function (PCF) is intended to support real-time services by using a centralized polling mechanism. This mechanism is not supported by most current wireless cards, however. In addition, cooperation between PCF and DCF modes leads to poor performance <ref type="bibr" target="#b11">[12]</ref>.</p><p>We argue that distributed control for supporting real-time services is more flexible than centralized control in the case of highly bursty traffic. We argue that the basic IEEE 802.11 DCF standard, which is not capable of supporting better than best-effort services, can in fact be extended to support service differentiation. The DCF mechanism of IEEE 802.11 has been investigated in numerous papers.</p><p>In <ref type="bibr" target="#b20">[21]</ref>, a distributed solution for the support of real-time sources over IEEE 802.11 is discussed, which modifies the MAC to send short transmissions to gain priority for real-time service. It is shown that this approach is capable of offering bounded delay. One disadvantage of the design <ref type="bibr" target="#b20">[21]</ref> is that it is optimized to meet the service needs of isochronous traffic sources, which can be a significant limitation for applications with variable data rates.</p><p>The fairness of distributed control is investigated in <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b15">[16]</ref>. Both papers suggest distributed algorithms for rate-based service differentiation. Both papers solve the problem of throughput fairness. However, these contributions do not analyze the level of delay differentiation.</p><p>A theoretic analysis of the DCF protocol can be found in <ref type="bibr" target="#b16">[17]</ref>. Analysis and protocol enhancements for the DCF are presented in <ref type="bibr" target="#b17">[18]</ref>- <ref type="bibr" target="#b19">[20]</ref>. Shared medium access for multicell environments is analyzed using simulation in <ref type="bibr" target="#b7">[8]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. DISTRIBUTED DIFFSERV ENABLED WIRELESS MAC</head><p>Providing differentiated services in a mobile environment requires that the radio MAC supports some degree of separation between different types of services. This separation is based on the DiffServ field in IP packets <ref type="bibr" target="#b8">[9]</ref>. A "DiffServ enabled MAC" has to ensure that available radio resources are shared among active users, while at the same time ensuring that different traffic types receive service in a differentiated manner. The ideal radio MAC is adaptive and robust to both internal and external dynamics, that is, it offers effective protection for the differentiated traffic classes against traffic fluctuations in lower classes. The MAC should also be robust to changes in the external environment, for example, growth of traffic in a cell must have a predictable and limited effect on the delay and loss experienced by all service classes in neighboring cells.</p><p>We argue that decentralized and adaptive mechanisms can more efficiently solve these problems in comparison to centralized ones. Distributed control of the radio resources may result in more productive use of radio resources: by productive we mean a better performance/complexity ratio. Distributing control of the radio resources allows mobile hosts within the same class to compete for radio resources and achieve acceptable fairness, while at the same time offering differentiated access to different service classes.</p><p>We propose a simple modification of the IEEE 802.11 radio MAC algorithm that runs in mobile hosts and base stations. The proposed MAC ensures not only that packets sent by the host itself are differentiated, but more importantly, that differentiation is effective among packets sent by other mobile hosts as well. Furthermore, IEEE 802.11 network cells may overlap significantly where service differentiation has to be maintained across cells. We show how this can be achieved in a distributed manner without any central control over multiple cells.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. IEEE 802.11 MAC DCF Protocol</head><p>The IEEE 802.11 MAC DCF protocol is a carrier sense multiple access with collision avoidance (CSMA/CA) protocol. In the DCF mode, a station must sense the medium before initiating the transmission of a packet. If the medium is sensed as being idle for a time interval greater than a distributed inter frame space (DIFS), then the mobile host transmits the packet. Otherwise, transmission is deferred and a backoff process is entered. Specifically, the station computes a random value in the range of 0 to the so-called Contention Window . A backoff time interval is computed using this random value:</p><p>, where is the slot time <ref type="bibr" target="#b3">[4]</ref>. This backoff interval is then used to initialize the backoff timer. This timer is decreased only when the medium is idle. The timer is frozen when another station is detected as transmitting. Each time the medium becomes idle for a period longer than DIFS, the backoff timer is periodically decremented once every slot time.</p><p>As soon as the backoff timer expires, the mobile host accesses the medium. A collision occurs when two or more mobile hosts start transmission simultaneously in the same slot. An acknowledgment is used to notify the sending station that the transmitted frame has been successfully received. If an acknowledgment is not received, the station assumes that the frame was not received successfully and schedules a retransmission, reentering the backoff process. To reduce the probability of collisions, after each unsuccessful transmission attempt, the is doubled until a predefined maximum is reached. After a successful or unsuccessful frame transmission, if the station still has frames queued for transmission, it must execute a new backoff process.</p><p>To deal with the hidden terminal problem, the MAC protocol can use a short Request To Send (RTS)-Clear To Send (CTS) negotiation before sending a data packet. This reduces the collision probability for data packets but increases the protocol overhead.</p><p>In <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b15">[16]</ref>, more sophisticated distributed algorithms have been proposed that address the inefficiency of the original CSMA/CA algorithm for providing fair access. These methods can replace our simple DiffServ MAC algorithm in the distributed architecture. In this case, the virtual algorithms discussed later in this paper would have to be modified accordingly. Nevertheless, the advantage of our algorithm is that it is closer to the original IEEE 802.11 standard and can be easily implemented in existing IEEE 802.11 cards.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Delay Analysis of the Distributed Coordination Function</head><p>Previous work has analyzed the IEEE 802.11 DCF mode from several different perspectives, including fairness, throughput, and the effect of hidden terminals. We are interested, however, in analyzing the kind of delay guarantees that can be achieved using DCF. Furthermore, we would like to determine how sensitive these guarantees are to certain channel conditions and MAC parameterization, (e.g., channel utilization, average packet size, contention window sizes). We derive a closed-form formula for the delay of the packets originated from a single traffic flow on a channel occupied with background traffic. We use this analysis to guide the configuration of our modified DCF MAC.</p><p>Denote the mobile host sending the traffic flow under investigation as the "tagged host" and all other packets generated by other mobile hosts as the background traffic. Assume that each packet associated with background traffic has a transmission time , which duration includes the time needed for RTS/CTS/ACK transmissions as well. Assume that the time between the last bit of a background packet and the first bit of the next background packet is exponentially distributed with average . Also assume the tagged traffic only occupies a small portion of the total channel utilization, (i.e., its effect on the background traffic is negligible).</p><p>The average channel utilization can be approximated as When a tagged packet arrives, the mobile host senses the channel and sends the packet if the channel appears to be idle. If the channel is busy or a collision occurs, the MAC invokes the backoff procedure and delays the transmission, otherwise, the tagged packet is sent. Assume each tagged packet has a transmission time , and . Denote as the average delay conditional on the backoff procedure. The average delay of the tagged packet can be approximated as . During the th backoff period, a number of background packets are sent. Because the idle time between two background packets is exponentially distributed, is a Poisson random variable with average . In the first backoff, the delay also includes the residual background packet length , which causes the backoff in the first place. In the subsequent backoffs caused by collisions, the delays include the length of the colliding background packet .</p><p>Adding all the above together, the th deferred time can be written as for for</p><p>The probability of collision after a backoff, denoted as , can be estimated as the probability that a transmission attempt of a background packet starts exactly in the same time slot as chosen by the tagged host, otherwise the tagged station would sense the packet and could avoid collision</p><p>The average value of the total accumulated deferred time, , takes into account occasional retransmissions and consecutive backoffs, and can be estimated as backoffs backoffs backoffs backoff The contention window ranges from to . In the th backoff period, the backoff time is chosen randomly in the range of until we reach the maximum backoff time, when it is chosen from . The average backoff time is thus for for</p><p>In the th backoff period, the randomly chosen backoff time is . Given this choice, the average number of background packets that arrive before the backoff timer expires is . The average number of packets is thus . The average residual packet time is . Let , . Given this notation, the final closed-form result is Putting in (1), we have the estimated average delay if we know the channel utilization .</p><p>Fig. <ref type="figure" target="#fig_0">1</ref> shows a comparison between the analysis and the measured delay from our differentiated services wireless testbed. We compared the measured average delay of a tagged host with increasing levels of background traffic load. The tagged session generates 120-byte-long packets every 0.02 s, the length of background packets is 1500 bytes, and the channel rate is 11 Mb/s. The background traffic rate is gradually increased to the saturation point in small incremental steps. At every step, the average delay of tagged packets is calculated. The result shows that the estimated average delay closely matches the measured delay. Section V presents a detailed description of our wireless testbed and the configuration used for these results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Discussion on Backoff Timers and Service Differentiation</head><p>We have previously described how initial values used by the backoff procedure are determined using the parameter, which increases exponentially toward an upper bound as the backoff procedure is reset for a given transmission. In other words, the more transmission attempts for a given packet, the larger the , and so the longer the time between transmission attempts.</p><p>Backoff times are set to a random value in the range . After a collision, a new backoff time is chosen but with an increased value. After every successful transmission, is reset to an initial value . We propose to support at least two service classes, high-priority (i.e., premium service) and best-effort. Setting different values for each service class means that, for two or more packets entering a backoff procedure at the same time, but with different values, the packet with the smaller value of is more likely to be transmitted first. Even if collisions occur, all MACs increase at the same rate and it is likely that the of the high-priority packets remain lower than that of low-priority packets, with the result of experiencing smaller average delays. Intuitively, even during highly congested periods, all classes have increased delays but still in a differentiated manner. By decreasing the maximum limit, , for a service class, the maximum backoff time can be limited during congestion. This limits the range of congestion control, thus we trade lower delay for increased collision probability, and eventually larger packet loss ratio. Nevertheless, we argue that for better than best-effort services it is preferable to drop a packet than to delay it excessively.</p><p>The analysis in Section III-B can be used to address the issue of how backoff values impact the average MAC delay for different levels of channel load. Only and values have to be modified in the equations accordingly. Fig. <ref type="figure" target="#fig_2">2</ref> shows the estimated average delays for increasing levels of utilization for several choices of , 16, 32, and 64. The analysis shows that, by setting different values of , differentiated levels of service can be achieved. We note, however, that the results of the analysis should be treated as qualitative results only since some of the assumptions made in the model are too simple when one considers highly bursty traffic scenarios. In Section III-D, we simulate realistic traffic mixes for TCP and UDP sources, and explore the achievable service differentiation using this simple means of control.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Evaluation of the Modified MAC to Support Service Differentiation Using Simulation</head><p>Initially, the degree of separation between high-priority and best-effort traffic for different values of and is investigated for a fixed traffic mix consisting of delay-sensitive voice sources and best-effort TCP transmissions. We use network simulation for the evaluation of the proposed mechanisms. For simulation, we use the ns-2 network simulator developed by the VINT Project <ref type="bibr" target="#b13">[14]</ref> with the wireless extension produced by the MONARCH Group <ref type="bibr">[23]</ref>.</p><p>The traffic mix we consider consists of five mobile hosts sending high-priority voice traffic and ten mobile hosts starting best-effort greedy TCP connections. Voice traffic was modeled using an on/off source with exponentially distributed on and off periods of 300 ms average each. Traffic was generated during the on periods at a rate of 32 kb/s with a packet size of 160 bytes, thus, the inter-packet time was 40 ms. During all simulations, the channel rate was 2 Mb/s.</p><p>We ran a set of tests for this traffic mix with varying values of for both traffic classes. For high-priority traffic, the values varied between <ref type="bibr" target="#b7">(8,</ref><ref type="bibr">32)</ref>, and the for besteffort traffic varied between (32,128). A value of 32 is the proposed by the standard <ref type="bibr" target="#b3">[4]</ref>, which applies to the case when only the best-effort traffic class is supported. We chose this value to be the delimiter between the two traffic classes under test. The values chosen for the high-priority traffic range is below this value. A value of 8 is proposed by the standard as an absolute minimum. By using the values above 32 for the best-effort traffic class, the ranges do not overlap, and for all combinations it is assured that . Based on the intuitive discussion in Section III-C, the maximum contention window for the high-priority class was lowered to , while the upper limit for the low priority class was set to the recommended value of . In both intervals, five values were chosen to cover each range of values. Simulations were performed for all 5 5 combinations covering the whole plane. Packet delays were logged for both high-and low-priority traffic classes.</p><p>Fig. <ref type="figure" target="#fig_3">3</ref> shows the summary of the simulation results. The axis corresponds to the of the best-effort packets. It can be observed that increasing this value results in larger delays for best-effort traffic and somewhat decreasing delays for real-time traffic. The delay for real-time sources is more significantly affected by their values (see the dashed lines), while the delays of best-effort packets are not affected greatly by the value chosen for real-time sources (straight lines). For all combinations (apart from the trivial case where</p><p>), the streams in different traffic classes experienced differentiated delay. The experiment supports the argument that the delay differentiation can be increased by increasing the gap between and , i.e., decreasing and increasing . The previous test demonstrated that effective service separation is possible by appropriately adjusting the backoff times through the contention window limits. However, it is still an open question whether this separation can be effectively maintained across a wide range of traffic loads for moderate to high congestion. In the next test, the robustness of service separation is investigated by simulating increasing levels of traffic up to the level of channel saturation.</p><p>During simulation, the channel load is increased by adding a new voice, video (64 kb/s constant rate source) and TCP session periodically every 5 s. The voice and video sources use and values of 16 and 64, while the TCP traffic uses 128 and 1024, respectively. Fig. <ref type="figure" target="#fig_4">4</ref> shows the delay throughout the simulation for the three traffic types. It can be observed that the delay increases for all service types but the delay separation is efficiently maintained from low load up until the channel is saturated.</p><p>For best-effort traffic, the achievable throughput is of more importance than delay. Fig. <ref type="figure" target="#fig_5">5</ref> shows that the modified MAC enables the best-effort adaptive TCP traffic to utilize any free capacity unused by high-priority sources. It can be observed that, even at the saturation point, the TCP traffic is not completely starved. This is due to the statistical and nondeterministic nature of service separation.</p><p>The modified MAC provides good service differentiation in terms of throughput and delay over a wide range of high-priority and best-effort traffic mixes. We investigate more dynamic traffic scenarios in Section VII.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. ESTIMATION OF AVAILABLE RESOURCES USING A VIRTUAL MAC ALGORITHM</head><p>Many aspects of the wireless channel preclude exact control of resources (e.g., channel fading or interference). Furthermore, the lack of cell planning and shared resources in the access network may result in densely packed base stations severely degrading the available capacity, as perceived by neighboring base stations. The MAC described in Section III ensures effective service differentiation even in the case of overlapping cells and high traffic loads. However, to support real-time services, it is not sufficient to ensure that high-priority traffic gets better service than best-effort traffic, as in most cases, applications require absolute and not relative service quality, (e.g., for voice or video). If a mobile host realizes that the channel is not able to meet its delay and loss requirements, it can either refrain from loading the channel or reduce application traffic demands, (e.g., by increasing compression). In order to make this decision, the host has to rely on accurate estimations of the achievable QoS of the radio channel.</p><p>The difficulty with this problem is that measuring simple channel properties, such as channel utilization, is not sufficient to estimate the loss and delay statistics of a new session. The reason for this is that the actual QoS depends on a number of factors, (e.g., the actual arrival pattern of packets or the ratio of hidden terminals). The analytic models published in the literature usually focus on one of these aspects and make a number of assumptions about the other aspects. Furthermore, the traffic models used are usually simplistic for real traffic scenarios, (e.g., assuming only long, greedy sessions). Even if the analytic models were more accurate and could take into account the relevant modeling issues, parameterizing them would be an extremely difficult task.</p><p>To overcome the problem of channel modeling, we take a more pragmatic approach: instead of modeling the interaction of MAC, the radio channel and background traffic load, we introduce a Virtual MAC (VMAC), which emulates the behavior of the MAC performance. We argue that the MAC algorithm is accurate, can be easily implemented, and scales to high data rates. To prove these claims, we implemented the VMAC algorithm on a mobile host accessing an 11-Mb/s wireless LAN. The efficiency of the algorithm and the implementation are discussed in Section IV-A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Operation of the Virtual MAC Algorithm</head><p>The VMAC algorithm operates in parallel to the real MAC in the mobile host but the VMAC does not handle real packets; rather, it handles "virtual packets." Scheduling these virtual packets on the radio channel is performed in the same way as real packets, which means channel testing and random backoff is performed as necessary. The difference arises when the VMAC decides to send a virtual packet. Unlike the case of real packets, no packet is transmitted. Rather, the VMAC algorithm estimates the probability of collision if the virtual packet were "really" sent. To make the algorithm conservative, a collision is "detected" whenever any other mobile station chooses the same slot for transmission (i.e., the channel is occupied by any station within the same slot time). In this case, the VMAC enters a backoff procedure, as a real MAC would do, after a collision had occurred.</p><p>For a real MAC, collision detection is realized using a timer which expires if neither a CTS in response to an RTS nor an ACK in reply to a data packet arrives in time, depending on the operation. If no CTS or ACK has been received before this timer expires then the real MAC assumes that a collision has occurred and the packet must be retransmitted. At this point, a real MAC would begin a backoff procedure. The VMAC does not detect collisions in this manner. Rather, it decides that a collision would have happened if a transmission occurs in the timeslot determined by its congestion avoidance algorithm. In other words, the VMAC detects "virtual collisions" immediately and not through using a timer. Thus, the VMAC enters the backoff procedure after a delay equal to that of an RTS timer in a real MAC.</p><p>If no collision occurs, the MAC delay is estimated by the total defer time accumulated plus the time to fully acknowledge the packet (e.g., if RTS/CTS is enabled it is where is an estimate of Fig. <ref type="figure">6</ref>. An example of the operation of the VMAC algorithm. The channel state indicates an idle (state is high) or busy (low) channel. A virtual packet arrives during a busy period and the deferred timer is decremented during a short idle period, and virtual transmission happens during the next idle period, when the deferred timer expires.</p><p>the maximum propagation delay). An example of the operation of the VMAC is illustrated in Fig. <ref type="figure">6</ref>. The VMAC emulates not only backoff and collision resolution aspects of the real MAC but also all other aspects of a real MAC. For example, packet loss is signaled by the VMAC if the maximum number of "retries" is reached. It also adjusts the contention window by doubling the window until it reaches , when it stops increasing it further. If a transmission is successful then the contention window is reset.</p><p>After every successful or failed "transmission," the VMAC waits for the next virtual packet to process. If, for example, the packets arrive at the VMAC at a rate of 20 ms with size of 80 bytes, the output of the VMAC algorithm will closely match the delays experienced by a real constant rate encoded voice application.</p><p>One of the key advantages of the VMAC algorithm over analytic models is that it does not produce just a small set of performance measures, (i.e., estimates of first-order statistics). Rather, it produces a time series that can be identically analyzed to a time series produced by a real test. Consequently, there is no limit on using higher order statistics, which makes it possible to apply more sophisticated analyses and traffic control methods. For example, not only the th moments of the delay can be calculated but also percentiles, burstiness, traffic envelopes, number of errored seconds, etc., which are more closely related to user perceived quality measures.</p><p>A disadvantage of the virtual algorithm is that it consumes extra processing capacity in the mobile host. This extra capacity is probably relatively small, since the VMAC does not have to operate continuously, it does not transmit packets, and computationally its complexity is equivalent to running the original MAC algorithm.</p><p>The VMAC can be applied to estimate the performance of either best-effort or better than best-effort traffic by changing the MAC mechanism to match the changes discussed for service differentiation in Section III. These estimates can be used for a variety of traffic control algorithms. In the proposed architecture, we use the VMAC algorithm to estimate the QoS of better than best-effort traffic and base the admission decision on that estimate.  The estimation is precise over the whole range of traffic loads, most importantly in the saturation region. Thus, it is suitable for evaluating the admissible capacity of the channel for real-time traffic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Evaluation of the VMAC Algorithm</head><p>Fig. <ref type="figure" target="#fig_8">8</ref> shows the results for a more complex simulation test where voice traffic is mixed with an increasing number of "Web sources." The Web sources are modeled by short TCP file transfers where the file sizes are drawn from a Pareto distribution with mean file size of 10 kbytes and shape parameter 1.2. The length of the silent period between two downloads is also Pareto with the same shape parameter and mean delay of 10 s. This creates a highly bursty background data traffic load with multiple time-scale fluctuations <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b22">[24]</ref>, <ref type="bibr" target="#b23">[25]</ref>. The TCP load is sufficient to saturate the channel by itself.</p><p>The figure shows two scenarios. In the first, the voice source is not prioritized over the data sources. In the second, the MAC algorithm is modified, as discussed in Section IV-A, for the voice source. The results show that the delay is efficiently estimated by the VMAC algorithm. In both cases, the estimation is conservative and the mean delay is about 1-2 ms greater than the result obtained by simulation. Another important observation is that priority for voice provides significantly smaller and smoother delay and delay variation values in the case of highly bursty data traffic. Without modifying the MAC for voice, the voice packets have to compete with data packets, which, since the data traffic is much burstier, does not only increase the voice packets' delay but also increases the delay variance, as shown in Fig. <ref type="figure" target="#fig_8">8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. IMPLEMENTATION OF THE VMAC ALGORITHM IN A WIRELESS TESTBED</head><p>Since the wireless DiffServ MAC can only offer soft and relative differentiation, it is important that the mobile hosts can accurately estimate the channel. There are several issues concerning the VMAC that can only be satisfactorily evaluated in a real wireless network with real applications. In what follows, we describe a wireless differentiated services testbed and its VMAC implementation. In addition, we compare the estimates given by the VMAC and the performance perceived by real applications.</p><p>The VMAC was implemented on a Linux machine with a modification to the wireless card's device driver. We used 11-Mb/s Lucent and Aironet PCMCIA cards in the experiments. These cards, with the modified drivers, are capable of capturing all "overheard" layer-two transmissions, (e.g., CTS, RTS, ACK packets, even with CRC errors). Packets were timestamped with approximately microsecond precision. This traffic trace was used as input to the VMAC algorithm. In a commercial implementation, the VMAC could be placed into the firmware of the wireless card and would operate in real-time.</p><p>The testbed generates traffic mixes of TCP and UDP flows, with different levels of offered load, as illustrated in Fig. <ref type="figure" target="#fig_9">9</ref>. Because the cards do not support APIs to change the contention window limits, all sources use the same backoff algorithm, using factory-set default values. Therefore, we were not able to evaluate the previously proposed DiffServ MAC but we could still evaluate the accuracy of the VMAC algorithm.</p><p>The UDP host logged the delays of the wireless MAC. This was achieved by modifying the wireless card network driver to capture all packet processing events together with an accurate timestamp at a resolution of approximately 1 s. The resulting log file consists of packet arrivals to the MAC, packet sizes, MAC deferred delays, and indications of successful or unsuccessful delivery.</p><p>The fifth host acted as a traffic monitor and executed the VMAC algorithm (indicated in the figure as the VMAC host). The VMAC host logged a similar file as the UDP host but this file consisted of estimated delays provided by the VMAC algorithm.</p><p>During the experiment, the channel utilization gradually increased up to its saturation point by decreasing the average idle time from 10 to 0 s. Fig. <ref type="figure" target="#fig_10">10(a)</ref> shows the physical level channel utilization versus time. The maximum channel utilization reached was approximately 70%.</p><p>The measured UDP delay statistics and the estimated delay statistics from the VMAC algorithm are shown in Fig. <ref type="figure" target="#fig_10">10(b</ref>). It can be observed that the VMAC implementation could estimate the measured delay with excellent precision during the entire experiment for all channel loads. Thus, mobile hosts running passive monitors and VMAC's can rely on precise quality feedback for traffic control purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. ESTIMATION OF APPLICATION-LEVEL QOS USING A VIRTUAL SOURCE ALGORITHM</head><p>The VMAC measures virtual packet delays, packet losses, and collisions at the MAC level. The delay experienced by an application can be very different than the delay provided by the MAC. The reason for this is that application-level data usually has to be packetized, encoded, and placed into an interface queue before it is received by the MAC layer.</p><p>Also, even the estimated MAC layer delay depends not only on the channel but also the arrival pattern of packets at the MAC. This effect can be due to the correlation structure of the traffic load on the channel. These factors are taken into consideration by the VS algorithm. For certain applications, running the VS can provide more precise estimates of the achievable performance. In addition, the VS makes it possible to tune certain application level QoS parameters.</p><p>The VS algorithm consists of a Virtual Application, interface queue, and VMAC. The Virtual Application generates virtual packets, as a real application would do (e.g., generating virtual voice packets at a constant rate). Packets are time-stamped and placed in a virtual buffer. When the virtual packet is finished processing in the VMAC, the total delay is calculated comparing the actual time to the timestamp stored in the packet.</p><p>Although the VS gives a more useful estimation for an application, the VS is not as generally applicable as the VMAC, since it requires that the application traffic is well known in advance. Nevertheless, we believe that there are a number of important applications that fit into this category such as constant bit-rate encoded voice or video. If the application traffic is not easy to emulate, then traffic management can fall back to the estimation provided by the VMAC fed with a generic traffic process (e.g., packets with constant or exponentially distributed interarrival times).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Virtual Delay Curves</head><p>The application delay depends on several factors. Certain factors depend on the application (e.g., packet size, packet rate), while others depend on the load of the channel. The VS algorithm monitors the channel continuously and estimates the application performance taking into account these factors. Thus, the VS algorithm can be used to find the optimal parameters for the best application performance. Intuitively, at the same data bit rate, the application delay can be reduced by increasing the packet rate, since it reduces the packetization delay. In contrast, higher packet rates load the radio channel more. Higher rates cause more collisions, increasing the average contention window. This eventually leads to larger MAC delays. In addition, higher packet rates mean smaller data packets, which results in larger protocol overhead, (i.e., larger load on the radio channel). Thus, even at the same application bit rate, there is a tradeoff between packetization delay and MAC delay.</p><p>Denote the function as the virtual delay curve of an application, where is the packet inter-arrival time of the application, e.g., packets per second for voice, but the data bit rate is kept constant, i.e., (where is the size of the application level packet). The virtual delay curve at gives the average delay of virtual packets if the VS algorithm generates packets at the rate of . The mobile host or the base station runs VS algorithms with several values in parallel. Delay curve can be constructed from the virtual packet delays obtained from the VS algorithm. Similarly, we can define the virtual delay variance curve which calculates the virtual delay variances, respectively. Based on the delay curve, a mobile host or base station can choose the optimal packet rate and packet size so that an application experiences minimum delay and delay variance.</p><p>Fig. <ref type="figure" target="#fig_11">11</ref> shows the virtual delay and variance curves for a virtual voice source at several background traffic loads. It can be observed that in the case of low background traffic ( "Web" sessions) the delay curve increases monotonically, which means that the best end-to-end delay can be achieved if the packet rate is high and the application send small packets. The estimation of delay variance appears to be constant. As the background load increases, the MAC delay increases, and the optimum is not at the highest rate but at about 20 ms. The delay variance also decreases as the inter-packet times increase. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. DISTRIBUTED ADMISSION CONTROL ALGORITHM IN A MULTICELL ENVIRONMENT</head><p>The estimates provided by the VMAC and the VS can be used by a mobile host before actually starting transmission. Because the virtual algorithms do not require high processing capacity and do not load the channel, they may run continuously and not only when a service request arrives. In other words, the virtual algorithms are designed to continuously keep track of the health of the channel.</p><p>This estimate can be used to apply traffic control to maintain the congestion of the channel at a low level and the relative performance guarantees provided by the DiffServ MAC at absolute levels. There are numerous ways to utilize these estimates from the VMAC and VS algorithms. For example, elastic, best-effort traffic can be policed or shaped in response to estimation of congestion. Premium, delay-sensitive sessions are usually not elastic, thus admission control is more appropriate to control them. In this section, we apply the latter type of traffic control. However, we note that adding some sort of control for best-effort traffic may further improve the quality assurances. Every mobile host keeps track of the state of the channel using either VMAC or VS. The admission control algorithm compares the results of the VS and VMAC with the service requirements and admits or rejects a new session accordingly. For admission, we only use the average delay estimation over the last five seconds. The admission algorithm runs in every mobile host and is performed in a fully distributed and autonomous manner.</p><p>Because the radio channel properties may be different at the receiving and transmitting mobile hosts, it is preferable that both hosts execute the VS and VMAC algorithms to ensure that the service quality will be met for a new session. This can be executed during session setup. Admission is granted if both virtual algorithms at the mobile hosts admit the new request.</p><p>In this section, we investigate this concept through simulation of a complex configuration with random topology and random traffic. The aim is to test how the modified MAC and VMAC algorithm perform in the presence of a highly dynamic real-time and non real-time traffic mix when the radio channel is dynamically shared among traffic streams between mobile hosts and base stations.</p><p>Ten base stations were placed randomly on a 400 m by 400 m rectangular area with their coverage areas significantly overlapping. One hundred mobile hosts were placed randomly in the coverage area. Every mobile host was associated with the nearest base station. Half of the mobile hosts randomly generate Web sessions and the other half randomly generated voice traffic. The length of the voice sessions and the inter-arrival times between connection requests were exponentially distributed. The average session length was 30 s. Upon completion of a session, a mobile host attempted a new call after an average waiting period of 10 s.</p><p>Independent VS algorithms running in all base stations continuously monitored the radio channel. Admission control was applied to delay sensitive voice sessions. When the estimated delay exceeds 10 ms, new voice sessions were rejected from service. If accepted, the voice packets use the modified MAC algorithm with slots and slots, while the Web sessions use values 64 and 1024, respectively. There was no admission control applied to Web traffic.  Fig. <ref type="figure" target="#fig_12">12</ref> shows the total TCP and voice traffic rates in the entire coverage. After an initial startup, the aggregate voice rate settles around a stable throughput, while the TCP traffic shows high levels of burstiness.</p><p>Fig. <ref type="figure" target="#fig_13">13</ref> shows the delay estimations by the VS algorithms running in base stations. It can be observed that the delay estimation is kept below the admission target most of the time for most base stations. However, the estimated delay is significantly different at a few base stations, where, the estimated delay reaches 10 ms for long durations. These base stations did not accept voice traffic during these periods. On the other hand, other base stations were continuously in the accept state. This was due to the overlapping of cells and the shared radio channel. Fig. <ref type="figure" target="#fig_14">14</ref> shows the empirical distribution of voice packet delays from accepted sessions. The low delays experienced indicate that the overall channel state is efficiently controlled by the distributed monitorings and admission control algorithm, even in the presence of highly dynamic TCP traffic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>This paper has shown how service differentiation can be provided in a mobile access network in a fully distributed manner with minimal control. By manipulating the contention window limits of the IEEE 802.11 DCF mode, it is possible to provide service differentiation at the radio MAC layer. The proposed MAC provides good delay and throughput separation for best-effort and high-priority traffic for a range of traffic mixes and channel loads.</p><p>We have proposed two passive radio channel monitoring algorithms. By emulating MAC (Virtual MAC) and application (Virtual Source) mechanisms, these algorithms can estimate the achievable level of service without actually loading the channel. We evaluated the efficiency of the VMAC algorithm using simulation and implementation in an experimental differentiated services wireless testbed. The notion of virtual delay curves has been introduced in relation to the virtual algorithms. Delay curves enable an application to tune its traffic parameters to match the dynamic characteristics of the radio channel in an efficient manner.</p><p>We have demonstrated through simulation that the modified MAC together with a distributed admission control algorithm can maintain a globally stable state in a micro-cellular environment even if cell areas overlap and the radio channel is shared.</p><p>Finally, we are currently building a wireless DiffServ testbed using Cellular IP <ref type="bibr" target="#b12">[13]</ref> for mobility management. This testbed will include the modified MAC and virtual control algorithms and will provide support for service level agreements with fast handoff.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>( 1 )</head><label>1</label><figDesc>Denote as the total deferred time during the th backoff period. According to the IEEE 802.11 protocol, the backoff timer is only decreased when the channel is idle. Denote as the random deferred time chosen by the DCF algorithm during the th backoff, where is a uniformly distributed random variable in the interval times the length of a backoff time slot</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The comparison of the analysis (shown as the dotted line) and measured results. Packet delays of single session versus increasing background load (running average) for a channel rate of 11 Mb/s.</figDesc><graphic coords="5,41.52,62.28,244.32,202.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Estimated average delays for different values of CW and increasing level of channel utilization, while CW = 1024 is kept constant. Channel rate is 11 Mb/s.</figDesc><graphic coords="5,305.46,62.28,242.40,206.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Average delay experienced by voice and TCP flows for varying values of CW . The x axis is the CW for best-effort traffic. Different symbols represent different CW for high-priority traffic. Channel rate 2 Mb/s.</figDesc><graphic coords="6,130.56,62.28,332.16,237.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Average delay experienced by gradually increasing the number of TCP and real-time sources over time. Channel rate 2 Mb/s.</figDesc><graphic coords="7,40.74,62.28,245.76,198.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Aggregate throughput of high-priority and best-effort traffic classes: number of TCP and real time sources increase over time. Channel rate is 2 Mb/s.</figDesc><graphic coords="7,42.54,302.22,242.16,180.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Virtual and simulated average MAC delay of a new voice source versus the number of active voice sources.</figDesc><graphic coords="8,305.76,62.28,244.80,199.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7</head><label>7</label><figDesc>Fig. 7 shows results from a simulation test of the efficiency of the VMAC algorithm. The figure shows the simulated and the VMAC estimated delays experienced by a new real-time voice source for an increasing number of homogeneous voice sources.The estimation is precise over the whole range of traffic loads, most importantly in the saturation region. Thus, it is suitable for evaluating the admissible capacity of the channel for real-time traffic.Fig.8shows the results for a more complex simulation test where voice traffic is mixed with an increasing number of "Web sources." The Web sources are modeled by short TCP file transfers where the file sizes are drawn from a Pareto distribution with mean file size of 10 kbytes and shape parameter 1.2. The length of the silent period between two downloads is also Pareto with the same shape parameter and mean delay of 10 s. This creates a highly bursty background data traffic load with multiple time-scale fluctuations<ref type="bibr" target="#b21">[22]</ref>,<ref type="bibr" target="#b22">[24]</ref>,<ref type="bibr" target="#b23">[25]</ref>. The TCP load is sufficient to saturate the channel by itself.The figure shows two scenarios. In the first, the voice source is not prioritized over the data sources. In the second, the MAC algorithm is modified, as discussed in Section IV-A, for the voice source. The results show that the delay is efficiently estimated by the VMAC algorithm. In both cases, the estimation is conservative and the mean delay is about 1-2 ms greater than the result obtained by simulation. Another important observation is that priority for voice provides significantly smaller and smoother delay and delay variation values in the case of highly bursty data traffic. Without modifying the MAC for voice, the voice packets have to compete with data packets, which, since the data traffic is much burstier, does not only increase the voice packets' delay but also increases the delay variance, as shown in Fig.8.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Average delay (top) and delay variation (bottom) of a new voice source obtained by simulation and from the VMAC algorithm, versus number of Web sources with and without priority for voice traffic. Channel rate is 2 Mb/s.</figDesc><graphic coords="9,41.70,273.36,243.84,193.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Testbed configuration.</figDesc><graphic coords="9,311.22,62.28,230.88,88.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. (a) Measured channel utilization with increasing TCP traffic. (b) Average delay of UDP traffic. The channel rate is 11 Mb/s.</figDesc><graphic coords="10,42.96,285.24,244.32,208.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Virtual delay and delay variance curves at several radio channel loads, N denotes the number of background Web sessions. Web traffic uses CW = 31 and the virtual algorithm uses CW = 8. The channel rate is 2 Mb/s.</figDesc><graphic coords="11,41.70,62.28,243.84,398.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Aggregate rates of TCP and voice traffic in the entire service area.</figDesc><graphic coords="11,304.80,62.28,243.84,192.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Estimated delays by VS algorithms running at base stations.</figDesc><graphic coords="12,43.20,62.28,243.84,195.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Delay distribution of voice packets.</figDesc><graphic coords="12,43.20,306.06,243.84,194.88" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Michael Barry (M'90) received the B.S. and M.S. degress in computer engineering from the University of Limerick, Limerick, U.K., in 1995 and 1999, respectively. Since 1998, he has been working in Broadcom Eireann Reserach Limited. In 2000, he was a visting Scholar with the COMET group at the University of Columbia, New York, NY. His research interests include Mobile IP, IP QoS, and wireless access mechanisms.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank G.-S. Ahn and J.-K. Oh for their valuable contribution and help. M. Barry and A. Veres would like to thank Broadcom Eireann Research and Ericsson Research, respectively, for supporting this work during their stay with COMET Group as visiting researchers. Finally, the authors would like to thank Prof. M. Schwartz for his input.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The work of A. T. Campbell was supported by the National Science Foundation under the WIRELESS TECHNOLOGY Award ANI-9979439. A. Veres is with the COMET Group, Columbia University, New York, NY 10027-6699 USA, on leave from Traffic Lab, Ericsson Research, H-1037 Budapest, Hungary</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The GSM System for Mobile Communications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mouly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Pautet</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Telecom Pub</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Digital Cellular Telecommunications System General Packet</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
	<note>Radio Services: Service Description EN 301 344 v6.3.2,&quot; ETSI</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A unified architecture for the design and evaluation of wireless fair Queuing algorithms</title>
		<author>
			<persName><forename type="first">T</forename><surname>Nandagopal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of MOBICOM</title>
		<meeting>MOBICOM<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08">Aug. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications, IEEE Standard</title>
		<imprint>
			<biblScope unit="volume">802</biblScope>
			<date type="published" when="1999-06">June 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Performance analysis of a medium access protocol for wireless packet networks</title>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Performance and Dependability Symp</title>
		<meeting><address><addrLine>Raleigh, NC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-08">Aug. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">MACAW: A media access protocol for wireless LAN&apos;s</title>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Demers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM</title>
		<meeting>ACM SIGCOMM<address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-09">Sept. 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Medium access control protocols for multimedia traffic in wireless networks</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyldiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mcnair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Martorell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Puigjaner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yesha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="39" to="47" />
			<date type="published" when="1999-07">July 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Performance of IEEE 802.11 medium access control protocol over a wireless local area network with distributed radio bridges</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">C M</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WCNC</title>
		<meeting>WCNC<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-09">Sep. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">RFC 2475 An Architecture for Differentiated Services</title>
		<author>
			<persName><forename type="first">S</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Black</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Davies</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Weiss</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
	<note>Internet Engineering Task Force</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Fair scheduling in wireless packet networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM</title>
		<meeting>ACM SIGCOMM<address><addrLine>Cannes, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Wide area traffic: The failure of poisson modeling</title>
		<author>
			<persName><forename type="first">V</forename><surname>Paxson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Networking</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="226" to="244" />
			<date type="published" when="1995-06">June 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Voice and data transmission over an 802.11 wireless network</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Visser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Zarki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of PIMRC</title>
		<meeting>PIMRC<address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-09">Sept. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Cellular IP-A new approach to internet host mobility</title>
		<author>
			<persName><forename type="first">A</forename><surname>Valko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="50" to="65" />
			<date type="published" when="1999-01">Jan. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Advances in network simulation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Breslau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Mag</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="59" to="67" />
			<date type="published" when="2000-05">May 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Achieving MAC layer fairness in wireless packet networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Nandagopal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-E</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MOBICOM</title>
		<meeting>MOBICOM<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">Aug. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Distributed fair scheduling in a wireless LAN</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MOBICOM</title>
		<meeting>MOBICOM<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">Aug. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">wireless LAN: Capacity analysis and protocol enhancement</title>
		<author>
			<persName><forename type="first">F</forename><surname>Cali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gregori</surname></persName>
		</author>
		<idno>IEEE 802.11</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="1998-04">Apr. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Performance evaluation and enhancement of the CSMA/CA MAC protocol for 802.11 wireless LAN&apos;s</title>
		<author>
			<persName><forename type="first">G</forename><surname>Bianchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Fratta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Oliveri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. PIMRC</title>
		<meeting>PIMRC<address><addrLine>Taipei, Taiwan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-10">Oct. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Performance study of access control in wireless LANs-IEEE 802.11 DFWMAC and ETSI RES 10 HIPERLAN</title>
		<author>
			<persName><forename type="first">J</forename><surname>Weinmiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schlager</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Festag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wolisz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="55" to="67" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Analyzing and improving the 802.11-MAC protocol for wireless LAN&apos;s</title>
		<author>
			<persName><forename type="first">J</forename><surname>Weinmiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Woesner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wolisz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MASCOT</title>
		<meeting>MASCOT<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-02">Feb. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Real-Time traffic over the IEEE 802.11 medium access control layer</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Sobrinho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Krishnakumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell Labs Tech. J</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">On the selfsimilar nature of ethernet traffic</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">E</forename><surname>Leland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Taqqu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">V</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGComm &apos;93</title>
		<meeting><address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-09">Sept. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Proof of a fundamental result in self-similar traffic modeling</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Taqqu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sherman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="5" to="23" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Self-Similarity in world wide web traffic: Evidence and possible causes</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Crovella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bestavros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMETRICS</title>
		<meeting>ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="1996-05">May 1996</date>
			<biblScope unit="page" from="160" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Andras Veres received the M.Sc. degree in electrical engineering in 1996. He is currently pursuing the Ph.D. degree at the Department of Telecommunications and Telematics</title>
		<author>
			<persName><forename type="first">T</forename><surname>Nandagopal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Int. Workshop on Mobile Multimedia Communications</title>
		<meeting><address><addrLine>San Diego, CA; Hungary</addrLine></address></meeting>
		<imprint>
			<publisher>Ericsson Research</publisher>
			<date type="published" when="1999-11">Nov. 1999</date>
		</imprint>
	</monogr>
	<note>Service differentiation through end-to-end rate control in low bandwidth wireless packet networks. His research interests include performance analysis of TCP/IP networks and wireless data networks</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">His areas of interest encompass mobile computing and networking, open programmable networks, and quality-of-service research</title>
		<author>
			<persName><forename type="first">T</forename><surname>Andrew</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
		<respStmt>
			<orgName>D. degree in computer science from Lancaster University, U.K. ; Columbia University</orgName>
		</respStmt>
	</monogr>
	<note>He is an Associate Professor in the Department of Electrical Engineering and member of the COMET Group. He is active in the IETF and the international working group on Open Signaling (OPENSIG</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Campbell received the NSF CAREER Award for his research in programmable mobile networking in 1999</title>
		<author>
			<persName><surname>Dr</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
