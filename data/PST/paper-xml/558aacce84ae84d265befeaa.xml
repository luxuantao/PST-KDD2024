<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Game Theoretic Approach to Controller Design for Hybrid Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><roleName>MEMBER, IEEE</roleName><forename type="first">Claire</forename><forename type="middle">J</forename><surname>Tomlin</surname></persName>
							<email>tomlin@stan-ford.edu</email>
						</author>
						<author>
							<persName><roleName>MEMBER, IEEE</roleName><forename type="first">John</forename><surname>Lygeros</surname></persName>
						</author>
						<author>
							<persName><roleName>FELLOW, IEEE</roleName><forename type="first">S</forename><surname>Shankar Sastry</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Aeronautics and Astronautics</orgName>
								<orgName type="institution">Stanford University</orgName>
								<address>
									<postCode>94305-4035</postCode>
									<settlement>Stanford</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Engineering</orgName>
								<orgName type="institution">University of Cam-bridge</orgName>
								<address>
									<postCode>CB2 1PZ</postCode>
									<settlement>Cambridge</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Information Technology Office</orgName>
								<orgName type="department" key="dep2">Defense Advanced Projects Research Agency</orgName>
								<address>
									<postCode>22203-1714</postCode>
									<settlement>Arlington</settlement>
									<region>VA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Game Theoretic Approach to Controller Design for Hybrid Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">1B09C32BA7121000E81F49F10095B90B</idno>
					<note type="submission">received November 5, 1999; revised April 17, 2000.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:21+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Aircraft control</term>
					<term>air-traffic control</term>
					<term>automated highways</term>
					<term>game theory</term>
					<term>hybrid automata</term>
					<term>optimal control</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We present a method to design controllers for safety specifications in hybrid systems. The hybrid system combines discrete event dynamics with nonlinear continuous dynamics: the discrete event dynamics model linguistic and qualitative information and naturally accommodate mode switching logic, and the continuous dynamics model the physical processes themselves, such as the continuous response of an aircraft to the forces of aileron and throttle. Input variables model both continuous and discrete control and disturbance parameters. We translate safety specifications into restrictions on the system's reachable sets of states. Then, using analysis based on optimal control and game theory for automata and continuous dynamical systems, we derive Hamilton-Jacobi equations whose solutions describe the boundaries of reachable sets. These equations are the heart of our general controller synthesis technique for hybrid systems, in which we calculate feedback control laws for the continuous and discrete variables, which guarantee that the hybrid system remains in the "safe subset" of the reachable set. We discuss issues related to computing solutions to Hamilton-Jacobi equations. Throughout, we demonstrate our techniques on examples of hybrid automata modeling aircraft conflict resolution, autopilot flight mode switching, and vehicle collision avoidance.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Why Study Hybrid Systems?</head><p>For about the past eight years, researchers in the traditionally distinct fields of control theory and computer science verification have proposed models and verification and controller synthesis techniques for complex, safety critical systems. The area of hybrid systems is loosely defined as the study of systems that involve the interaction of discrete event and continuous time dynamics, with the purpose of proving properties such as reachability and stability.</p><p>To elaborate, consider that individual feedback control scenarios are naturally modeled as interconnections of modules characterized by their input/output behavior. Modal control, by contrast, naturally suggests a state-based view, with states representing control modes. These distinct modeling techniques need to be reconciled in order to support a systematic methodology for the design, validation, and implementation of control software. The dichotomy between the input/output (feedback) view and the state-space (multimodal) view is often presented in a restricted setting, as a difference between continuous and discrete control. Continuous feedback control focuses on the analog interaction of the controller with a physical plant, through sensors and actuators. Continuous control models and design techniques have been developed, used, and validated extensively. The case for discrete multimodal control rests on the observations that discrete abstractions make it easier to manage system complexity, discrete models are easier to manipulate, and discrete representations more naturally accommodate linguistic and qualitative information in controller design. Commonly used models for hybrid systems, such as hybrid automata, combine state-transition diagrams for discrete behavior with differential equations or inclusions for continuous behavior. The discrete event systems are used to model modes of operation of the system, such as the mode of flight of an aircraft or the interaction and coordination among several aircraft. The continuous dynamics model the physical process, such as the continuous response of an aircraft to the forces of aileron and throttle. For complex multiagent systems, in addition to the requirement of designing hierarchies of decision making at different levels of abstraction, there is the need to synchronize decision making across different agents. In the absence of a global clock, it is useful to have the mechanism of synchronization using discrete events. The resulting interplay of continuous single agent dynamics with synchronization across multiple agents once again results in a hybrid system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Problems Solved Using Hybrid Systems</head><p>In work to date, a number of problems for hybrid systems have been studied.</p><p>1) Optimal Control: Roughly speaking, the optimal control problem is to drive the system to a desirable state while minimizing a cost function that depends on the path followed. It typically involves a terminal cost (depending on the terminal state), an integral cost accumulated along continuous evolution, and a series of jump costs associated with discrete transitions. This is a classical problem for continuous systems, extended more recently to discrete systems <ref type="bibr" target="#b0">[1]</ref>, and to classes of hybrid systems with simple continuous dynamics <ref type="bibr" target="#b1">[2]</ref>. The approach has been extended to general hybrid systems both for the dynamic programming formulation <ref type="bibr" target="#b2">[3]</ref> and for the variational formulation, extending the maximum principle <ref type="bibr" target="#b3">[4]</ref>.</p><p>2) Hierarchical Control: This describes the systematic decomposition of control tasks such that the resulting hierarchical controller guarantees a certain performance <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>.</p><p>3) Distributed, Multiagent Control: Here, optimal control problems are decomposed so that they can be solved in a distributed way by a collection of agents with a specified communication and information architecture <ref type="bibr" target="#b6">[7]</ref>.</p><p>4) Least Restrictive Controllers for Specifications Such as Safety and Liveness: Here it is required that all trajectories of the system satisfy certain properties. Properties include safety properties (for example, requiring that the state of the system remain in a certain safe set) and liveness properties (requiring that the state eventually enter a certain target set or visit a set infinitely often). For discrete systems, this problem has a long history in mathematics and computer science. The essence of the classical problem was posed by Church <ref type="bibr" target="#b7">[8]</ref> and solved in different ways by a number of authors, including Büchi and Landweber <ref type="bibr" target="#b8">[9]</ref> (for an overview, please see <ref type="bibr" target="#b9">[10]</ref>). In the continuous domain, control problems of the safety type have been addressed in the context of pursuit evasion games <ref type="bibr" target="#b10">[11]</ref>.</p><p>In this paper, we concentrate on the solution of safety specifications for hybrid systems that have rich classes of nonlinear dynamics. We encode system safety properties into requirements that the state trajectory of the system remain within certain safe subsets of the state space. We then calculate the subset of states from which this safe subset is always reachable, and determine the control law, in both the discrete and continuous control variables, that renders this subset invariant. We present three examples to illustrate our model and control law design methodology: aircraft conflict resolution, aerodynamic envelope protection, and highway vehicle collision avoidance. These examples, introduced below, illustrate the ability of a hybrid system framework to improve the ease of analysis and control of complex safety critical systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. High-Confidence Systems</head><p>We increasingly find ourselves surrounded by so-called high-confidence systems: transportation networks, power networks, communication networks. These are systems in which the real-time software is expected to work at a very high level of confidence: of necessity is the reliability, correctness, and graceful degradation under faulted modes of operation. These systems are safety critical since failures could result in loss of life and/or property; they are hybrid due to the multiagent hierarchical nature of the control system involved. Two key examples in the area of transportation systems have motivated our work: air-traffic management systems <ref type="bibr" target="#b11">[12]</ref> and automated highway systems <ref type="bibr" target="#b12">[13]</ref>.</p><p>Today's crowded skies and ever-increasing demand for air travel, coupled with new technologies for navigation and surveillance, are fueling a change in the way that the Federal Aviation Administration manages air traffic. Current air-traffic control (ATC) practice manually routes aircraft along predefined paths between "fixes," using radar track and flight information from plan view displays and voice communication over radio channels. The use of global positioning systems (GPSs) and datalink communication will enable automation of some ATC functionality, such as the prediction and resolution of trajectory conflicts between aircraft. For such a safety-critical system, the integrity and acceptance of new automated control functionality depends on a provably safe design, which requires accurate system models, and procedures for verifying and synthesizing safe control actions. For more details, we refer the reader to <ref type="bibr" target="#b13">[14]</ref>- <ref type="bibr" target="#b15">[16]</ref>. A proposed new solution to the growing congestion is a program called "free" or "flexible" flight, in which each aircraft flies along optimal user-preferred routes, which can minimize flight time and fuel consumption or avoid inclement weather. Key enabling technologies for such a system are accurate methods for navigation and communication [such as inertial navigation systems (INSs), GPSs, and automatic dependence surveillance-broadcast (ADS-B) datalinks], provably safe methods for conflict detection and resolution, route generation and regeneration, and automatic flight mode switching to follow routes. In such a system, each aircraft is surrounded by a virtual cylinder called a protected zone, the radius and height of which (2.5 nautical miles by 1000 ft) depend on current International Civil Aviation Organization (ICAO) separation standards. A conflict or loss of separation between aircraft occurs when protected zones of two or more aircraft overlap. The conflict resolution algorithm must use available information to generate maneuvers that resolve conflicts as they are predicted. From a data base of flight modes, such as segments of constant heading, of constant bank angle, of constant or varying airspeed, the conflict resolution algorithm could synthesize the parameters of the maneuver, such as the proper sequencing of these modes, the numerical values associated to each segment (heading angle, bank angle, airspeed), and the conditions for switching between flight modes. The result would be a maneuver, proven to be safe within the limits of the models used, which is a familiar sequence of commands easily executable by the flight management systems on board aircraft. The resulting maneuvers could be viewed as protocols, or "rules of the road."</p><p>Highway traffic congestion is a problem millions of commuters face every day. Even though building new highways seems like an easy solution, the price of real estate in and around urban areas makes it impractical. An alternative solution that has attracted attention in recent years uses automation to make more efficient use of the current highway system. Intelligent vehicle highway systems (IVHSs) attempt to do this by taking advantage of recent technological advances in communication, sensing, surveillance, computation, and control. The most ambitious form of IVHS is the automated highway system (AHS), in which driving is partially or even fully automated. Different AHS concepts have been proposed, ranging from longitudinal (along the lane) autonomous intelligent cruise controllers (AICCs) to fully automated driving. The platooning concept <ref type="bibr" target="#b16">[17]</ref> is based on the empirical observation that low relative velocity collisions are safe for both the vehicles and their passengers. On an AHS that supports platooning, vehicles move in tightly spaced groups (known as platoons) of up to 20 vehicles, with intraplatoon spacings of the order of 1 to 2 m. Under normal conditions of operation, the controllers of the vehicles can be designed such that no collisions occur within a platoon. Under emergency conditions, collisions may be possible. However, because of the tight spacing, it is likely that they will be at low relative velocities. Collisions are prevented from propagating from one platoon to the next by maintaining a large interplatoon spacing (on the order of 50 m). Because it promises a substantial increase in highway throughput, platooning has been studied extensively in recent years. As with the air-traffic system, control design techniques that guarantee safety of the system are paramount. Controllers have been proposed for maintaining the longitudinal stability of a platoon <ref type="bibr" target="#b17">[18]</ref>, for joining and splitting platoons and maintaining the interplatoon separation <ref type="bibr" target="#b12">[13]</ref>, for regulating the lateral movement of the vehicles (lane keeping and lane changing), for coordinating the actions of different platoons <ref type="bibr" target="#b16">[17]</ref>, for stabilizing the traffic in segments of the highway, and for routing traffic along the entire highway system. The interaction among these controllers involves hybrid phenomena at different levels. For example, the discrete communication protocols that coordinate the actions of neighboring platoons <ref type="bibr" target="#b16">[17]</ref> implement their decisions by invoking continuous controllers designed for joining platoons, splitting platoons, and other maneuvers. Moreover, even these low-level controllers may involve switching, between the different modes used for maintaining a desired speed and heading from the preceding vehicle <ref type="bibr" target="#b18">[19]</ref>, for example.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Game Theoretic Approach to Hybrid Systems Design</head><p>The analysis and control of hybrid systems can be based on game-theoretic methods from computer science and optimal control. A hybrid game is a multiplayer structure in which the players have both discrete and continuous moves. Each player controls a set of real-valued variables. The game proceeds in a sequence of rounds. In every round, each player either chooses to update some of its variables (a discrete move), or chooses a law according to which its variables will evolve together with an upper bound on the duration of the round (a continuous move). If some player chooses a discrete move, then the variables are updated and no time elapses. If all players choose continuous moves, then the variables evolve according to the selected laws for the minimum of the selected durations.</p><p>Hybrid games have been used both in the computer science and in the control community. In the computer science literature, they have been classified with respect to the complexity of the laws that govern the evolution of the variables and with respect to the winning conditions for the players. This has been studied in the timed games of Maler et al. <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b20">[21]</ref> (for constant differential equations of the form ) and the rectangular games of Henzinger et al. <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b22">[23]</ref> (constant differential inclusions of the form</p><p>). The classical winning conditions for infinite discrete games are safety (stay within a given set of states), Büchi (visit a given set of states infinitely often), and Boolean combinations thereof. In the control community, problems of the safety type have been addressed in the context of pursuit-evasion games and robust control <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b23">[24]</ref>, <ref type="bibr" target="#b24">[25]</ref>.</p><p>As the reader will see in this paper, the solution of safety games for hybrid automata involves the fixed-point iteration of single-round controllability operators: the game theoretic synthesis procedure is semidecidable when certain operators called that we define in the paper are computable. We discuss how to approximate the solution of the exact operators in order to cover cases that are not decidable. It is our conviction that this theory is critical for all examples of practical importance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Outline of the Paper</head><p>In Section II, we give the formal definition of the class of hybrid systems, called hybrid automata, that we will study. Section III contains three examples drawn from air-traffic management, flight systems avionics design, and automated highway systems, which we carry throughout the paper. In Section IV, we give a review of the discrete, continuous, and hybrid controller design procedure. This procedure is applied to the three model examples in Section V. Approximate solution techniques are discussed in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. MODELING FORMALISM</head><p>Our goal is to develop a mathematical model of hybrid systems rich enough to describe both the evolution of continuous dynamics and the discrete switching logic, and capable of modeling uncertainty in both the continuous and discrete input variables. In this section, we present a hybrid system model that was developed in <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b25">[26]</ref>, and <ref type="bibr" target="#b26">[27]</ref> and is based on overlaying finite automata on nonlinear continuous-time control systems. To get the ideas fixed, we start with finite-state automata and continuous state, continuous time control systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Notation</head><p>Let be a countable collection of variables and let denote its set of valuations, that is, the set of all possible assignments of the variables in . We refer to variables whose set of valuations is countable as discrete and to variables whose set of valuations is a subset of a Euclidean space as continuous. We assume that Euclidean space is given the Euclidean metric topology, whereas countable and finite sets are given the discrete topology (all subsets are open). Subsets of a topological space are given the subset topology and products of topological spaces are given the product topology. For a subset of a topological space we use to denote its closure, its interior, its boundary, its complement, its cardinality, the set of all subsets of , the set of finite or infinite sequences of elements in , and the set of piecewise continuous functions from to . We use to denote conjunction, disjunction, negation, the universal quantifier, and the existential quantifier.</p><p>A finite-state automaton is represented as</p><formula xml:id="formula_0">(1)</formula><p>where is a finite set of discrete state variables; is a finite set of discrete input variables, where contains the controller's inputs and contains the environment's inputs, which cannot be controlled; is a set of initial states; and maps the state and input space to subsets of the state space and thus describes the transition logic of the finite automaton. An execution of (1) is defined to be a finite or infinite sequence of states and inputs where, for , and . Continuous state, continuous time control systems, on the other hand, may be represented as differential equations evolving on a state space <ref type="bibr" target="#b1">(2)</ref> where is the state, usually ; is the space of continuous input variables, where is the set of control inputs and is the set of disturbance inputs; is a vector field, assumed to be globally Lipschitz in and continuous in ; and the initial state where . A trajectory of (2) over an interval is a map:</p><p>such that for all .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Hybrid Automata</head><p>Since we are interested in hybrid phenomena that involve both continuous and discrete dynamics, we introduce the hybrid time trajectory, which will encode the set of times over which the evolution of the system is defined.</p><p>Definition 1 (Hybrid Time Trajectory): A hybrid time trajectory is a finite or infinite sequence of intervals of the real line, such that:</p><p>• for and, if , or ; • for all , . The interpretation is that are the times at which discrete transitions take place. Notice that discrete transitions are assumed to be instantaneous and that multiple discrete transitions may take place at the same time, since it is possible for . Hybrid time trajectories can extend to "infinity" if is an infinite sequence or if it is a finite sequence ending with an interval of the form . Since the dynamical systems we consider are time invariant, we assume, without loss of generality, that . We denote by the set of all hybrid time trajectories. For and , we use as a shorthand notation for "there exists a such that ." We mention that in this paper, the evolution of time will be "dense" continuous time, that is, the underlying continuous state dynamics are continuous time. In applications, it is sometimes of interest to have discrete time (synchronous) evolution of the continuous state with automata like transitions (asynchronous).</p><p>Definition 2 (Hybrid Automaton):</p><formula xml:id="formula_1">A hybrid automaton is a collection Init Inv (<label>3</label></formula><formula xml:id="formula_2">)</formula><p>where • is a finite collection of state variables, with finite and ; • is a finite collection of discrete input variables, where is the set of discrete control inputs, and is the set of discrete disturbance inputs; • is the set of continuous input variables, where is the set of continuous control inputs and is the set of continuous disturbance inputs; • Init is a set of initial states; • is a vector field describing the evolution of for each ; is assumed to be globally Lipschitz in (for fixed ) and continuous in ;</p><p>• Inv is called an invariant and defines combinations of states and inputs for which continuous evolution is allowed; • is a reset relation, which encodes the discrete transitions of the hybrid automaton. We refer to as the state of and to as the input of . We make the following assumption to ensure that the hybrid automaton does not block trajectories, causing the system to deadlock: assume that is an open set, and that if then . The main differences between the model presented here and that of timed and linear hybrid automata are in the continuous dynamics: we incorporate full nonlinear models of the continuous state dynamics and include continuous input variables to model both parameters that the designer may control and disturbance parameters that the designer must control against. This allows an accurate representation of the continuous physical processes that we would like to model and control.</p><p>Definition 3 (Execution of a Hybrid Automaton): An execution of a hybrid automaton is a hybrid trajectory with: • Initial Condition:</p><p>Init; • Continuous Evolution: for all with , , are constant, is piecewise continuous, is a solution to the differential equation over , and for all , Inv; • Discrete Evolution: for all , , . A hybrid automaton is interpreted as accepting, rather than generating, an execution. Hybrid automata may accept no executions for some initial states or some inputs, may accept multiple executions for the same initial state and inputs, or may not accept executions over arbitrarily long time horizons. More formally, an execution is called finite if is a finite sequence ending with a closed interval, infinite if is an infinite sequence or if , and Zeno<ref type="foot" target="#foot_1">1</ref> if it is infinite but . In <ref type="bibr" target="#b27">[28]</ref> and <ref type="bibr" target="#b28">[29]</ref>, conditions are given that allow one to ensure that a hybrid automaton accepts a unique infinite, non-Zeno execution.</p><p>Associated to the hybrid automaton is a trajectory acceptance condition, which describes the specification that one would like executions of the system to satisfy. We define a property as a map from the set of executions to True, False . Our work has been motivated by verification and synthesis for safety critical applications, and as such we have been primarily interested in safety specifications. These specifications are encoded as subsets of the state space of the hybrid system: the safe set is that subset in which the system is defined to be safe. We assume that safe sets are closed and unsafe sets are open; we use to denote safe sets and to denote unsafe sets. We define a safety property, denoted by , by It is easy to see that . Examples of more complex specifications not covered by safety properties are so-called liveness properties, for example, the "always eventually" property . The full Borel hierarchy of specifications built up from constitutes an important set of temporal properties (see <ref type="bibr" target="#b29">[30]</ref>).</p><p>In what follows, we will restrict ourselves to static-state feedback controllers. We define a static-state feedback controller for a hybrid automaton to be a map from the state space to subsets of the controller's input space (4) Thus, the controller may affect the behavior of though its discrete and continuous control inputs and .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MOTIVATING EXAMPLES</head><p>We now present three examples of hybrid systems: resolution of trajectory conflicts between aircraft, single aircraft aerodynamic envelope protection, and collision avoidance for automated vehicles in an AHS. In the conflict resolution and collision avoidance problems, the system is safe if the aircraft or vehicles always maintain minimum separation with each other. In the aerodynamic envelope protection problem (representative of autopilot design problems), system safety means that the state of the aircraft remains within minimum and maximum bounds imposed on its velocities and orientation variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Aircraft Conflict Resolution</head><p>We present as motivating example a model for the kinematic motions of two aircraft, labeled 1 and 2, at a fixed altitude. Let represent the relative position and orientation of aircraft 2 with respect to aircraft 1. In terms of the absolute positions and orientations of the two aircraft for , it may be verified that , , and it is easy to derive that <ref type="bibr" target="#b4">(5)</ref> where is the linear velocity of aircraft and is its angular velocity. The protected zone of aircraft 2 may be translated to the origin of this relative frame, and thus the relative position must remain outside of the disk : . The flight modes for this system of two aircraft are based on the linear and angular velocities of the aircraft. We consider two possibilities:</p><p>, meaning that aircraft follows a straight line, and , meaning that aircraft follows an arc of a circle if is kept constant. These maneuvers approximate closely the behavior of pilots flying aircraft: straight line segments (constant heading) and arcs of circles (constant bank angle) are easy to fly both manually and on autopilot. Consider a maneuver in which there are three modes in sequence: a cruise mode in which both aircraft follow a straight path; an avoid mode in which both aircraft follow a circular arc path; and a second cruise mode in which the aircraft return to the straight path. The protocol of the maneuver is that as soon as the aircraft are within a certain distance of each other, each aircraft turns 90 to its right and follows a half-circle. Once the half-circle is complete, each aircraft returns to its original heading and continues on its straight path (Fig. <ref type="figure" target="#fig_0">1</ref>). We assume that both aircraft switch modes simultaneously, so that the relative orientation is constant, and we assume that both aircraft fly an arc with the same radius at the same velocity. These assumptions simply allow us to display the evolution of the continuous state in two dimensions, making the results easier to present: in a true conflict resolution scenario, these assumptions would be removed. This maneuver generalizes to -aircraft as a "roundabout" maneuver, discussed in <ref type="bibr" target="#b11">[12]</ref>.</p><p>The dynamics of the maneuver can be encoded by the hybrid automaton of Fig. <ref type="figure">2</ref>, where corresponds to cruising before the avoid maneuver, corresponds to the avoid mode, and corresponds to cruising after the avoid maneuver has been completed. There is one discrete control input , such that the switch from to triggers the transition from to . The transition from to is required to take place after the aircraft have completed a half-circle: note that with , for , it takes time units to complete a half circle. The continuous state space is augmented with a timer to force this transition. Let . At each transition, both aircraft change heading instantaneously by radians; we represent this with the standard rotation matrix . Assuming computation in the flight management system of aircraft 1, we assume that is controllable, and is known to within some uncertainty. Safety is defined in terms of the relative distance between the two aircraft <ref type="bibr" target="#b5">(6)</ref> Thus the state space of this two-aircraft system is . The discrete input space is ( ), and the continuous input space is , where and (we assume in this example that and are fixed, the more general case is presented in <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b15">[16]</ref>). We assume , that is described by the relative aircraft dynamics (5) augmented with a timer, as shown in Fig. <ref type="figure">2</ref>, and that is given as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Inv</head><p>The map that resets in transitions from to and to is described in Fig. <ref type="figure">2</ref>. The controller synthesis problem is therefore to generate the relative distance between aircraft at which the aircraft may switch safely from mode 1 to mode 2, and the minimum turning radius in mode 2, to ensure that the five-nautical-mile separation is maintained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Aerodynamic Envelope Protection</head><p>The example is inspired by the work of <ref type="bibr" target="#b30">[31]</ref>, in which the flight modes for the airspeed and flight path angle dynamics of an aircraft are derived. We consider a nonlinear model Fig. <ref type="figure">2</ref>. In q both aircraft follow a straight course, in q a half-circle, and in q both aircraft return to a straight course.</p><p>of the longitudinal axis dynamics of a conventional takeoff and landing (CTOL) aircraft in normal aerodynamic flight in still air <ref type="bibr" target="#b31">[32]</ref>, <ref type="bibr" target="#b32">[33]</ref>, shown in Fig. <ref type="figure" target="#fig_1">3</ref>. The horizontal and vertical axes are, respectively, the (denoted , ) axes, and the pitch angle is the angle made by the aircraft body axis, with the axis. The flight path angle and the angle of attack are defined as: , . Expressions for the lift and drag forces are given by , where are dimensionless lift and drag coefficients and and are positive constants. We assume that the autopilot has direct control over both the forward thrust (throttle) and the aircraft pitch (elevators); thus there are two continuous control inputs . Physical considerations impose constraints on the inputs:</p><p>. The longitudinal dynamics may be modeled by the Newton-Euler equations Rot Rot <ref type="bibr" target="#b6">(7)</ref> where Rot and Rot are standard 2 2 rotation matrices, is the mass of the aircraft, and is gravitational acceleration. The simplified flight management system (FMS) studied in this paper uses control inputs and to control combinations of the speed , flight path angle , and altitude . The linear and angular accelerations may be derived directly from (7)</p><formula xml:id="formula_3">(8)<label>(9)</label></formula><p>Note that these dynamics are expressed solely in terms of and inputs , where ; thus (8) and ( <ref type="formula" target="#formula_3">9</ref>) are a convenient way to represent the dynamics for modes in which is not a controlled variable. Safety regulations for the aircraft dictate that , and must remain within specified limits <ref type="bibr" target="#b9">(10)</ref> where are functions of such factors as airspace regulations, type of aircraft, and weather. For aircraft flying at cruise altitude, we assume that these limits are constants, and thus the aerodynamic flight envelope is as illustrated in Fig. <ref type="figure" target="#fig_2">4</ref> as projections in the -space and -space, where . The state trajectory must remain within at all times within cruise mode (this is called aerodynamic envelope protection). The system may be discretized into five flight modes, depending on the state variables being controlled:</p><p>• Mode 1: (Speed, Flight Path), in which the thrust is between its specified operating limits ( ), the control inputs are and , and the controlled states are the speed and the flight path angle of the aircraft ; • Mode 2: (Speed), in which the thrust saturates (</p><p>) and thus is no longer available as a control input; the only input is , and the only controlled state is ; • Mode 3: (Flight Path), in which the thrust saturates ( ); the input is again , and the controlled state is ; • Mode 4: (Speed, Altitude), in which the thrust is between its specified operating limits ( ), the control inputs are and , and the controlled states are the speed and the vertical position of the aircraft ; • Mode 5: (Altitude), in which the thrust saturates ( ); the input is , and the controlled state is . Modeling this system as a hybrid automaton, the discrete state may take on one of five possible values, , corresponding to the five flight modes. The continuous state of the system is , with continuous dynamics specified by <ref type="bibr" target="#b6">(7)</ref>. The control inputs are the throttle and pitch with input constraint set , and we assume for simplicity that there are no continuous disturbance inputs ( ) (a possible extension to this problem would be to consider wind as a continuous disturbance). The controllable discrete inputs label transitions from each mode to every other mode: let , for and , be the action labeling the transition from to . We assume that there are no disturbance actions ( ) (although it will be a very nice extension to introduce disturbance actions representing pilot error in manually switching modes). The safe set is illustrated in Fig. <ref type="figure" target="#fig_2">4</ref>. In our calculations, we use parameter values corresponding to a DC-8 at cruising speed; the details are described in <ref type="bibr" target="#b15">[16]</ref> and <ref type="bibr" target="#b33">[34]</ref>. The controller synthesis problem is therefore to generate the continuous control inputs to use in each flight mode, as well  as the allowable mode transitions, so that flight envelope protection is guaranteed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Vehicle Collision Avoidance</head><p>The need to ensure the safety of the vehicles on an AHS dictates that formal methods have to be used to design and analyze the hybrid interactions. In <ref type="bibr" target="#b12">[13]</ref>, the design methodology presented in this paper was used to derive safety conditions for the longitudinal movement of the vehicles in a multilane AHS. Here we highlight a simple example from that study. Consider two platoons, labeled and , moving on an AHS (Fig. <ref type="figure" target="#fig_3">5</ref>) with following . Let denote the length of platoon and its position from a fixed road-side reference frame. Since neither the dynamics nor the safety requirements depend on the absolute position of the platoons, we introduce a variable to keep track of the spacing between platoons and . We assume that (after feedback linearization) the controller of vehicle can directly affect the acceleration of , , through brake and throttle actuators. We also assume that vehicle is equipped with sensors to measure its own velocity and the spacing and relative velocity with respect to vehicle . The acceleration of vehicle , , is assumed to be unknown to vehicle and is treated as a disturbance. The continuous dynamics can now be described by a state vector with <ref type="bibr" target="#b10">(11)</ref> Physical considerations impose constraints on and : vehicles are not allowed to move in reverse and are required to keep their speed below a certain speed limit . To enforce these requirements, we assume that and satisfy</p><formula xml:id="formula_4">if if if and if if if . (<label>12</label></formula><formula xml:id="formula_5">)</formula><p>To ensure that the dynamics of the system are physically meaningful, we assume that the set of initial states is such that , , and that the constants satisfy and . In this case, for all . Even though the model of this two platoon system seems continuous, there are a number of sources of discrete behavior. The first is the mode switching necessary to enforce the constraints on the velocities. Three discrete states are introduced for each platoon to account for this, one for , one for , and one for . This gives rise to a total of nine discrete states. Additional discrete phenomena are introduced by the intraplatoon collisions that and may experience in case of emergency. From the point of view of platoon , these collisions can be treated as a source of disturbance and can be modeled as discrete events that instantaneously reset the velocities of certain vehicles. For simplicity, we assume that the first vehicle of platoon (leader of ) can experience at most one collision with the vehicle immediately behind it (first follower in ), and parameterize the disturbance by the time at which the collision occurs ( ) and the resulting increase in the velocity of the leader (</p><p>). Likewise, we assume that the last vehicle of platoon can experience at most one collision, and use the time at which the collision occurs and the decrease of the velocity of the last vehicle to parameterize the disturbance. Since the vehicles are not allowed to move in reverse, we assume that collisions with a platoon will not result in negative velocities, or, in other words, that . Likewise, since vehicles are not allowed to move faster than the speed limit, it is natural to assume that collisions within a platoon will not result in velocities greater than , or, in other words, . Finally, if the intraplatoon controllers are designed properly, we can assume that all intraplatoon collisions will be at low relative velocities, below a certain "safe" value, m/s. Under these assumptions, which are reasonable if the vehicles have roughly equal masses and coefficients of restitution, the discrete disturbance caused by intraplatoon collisions can be parameterized by ( <ref type="formula">13</ref>) The hybrid automaton used to capture the intraplatoon collisions in platoons and is shown in Fig. <ref type="figure">6</ref>. The discrete states to represent: no collisions in either platoon; collision in platoon ; collision in platoon ; and two simultaneous collisions, one in platoon and one in platoon . Two discrete disturbance inputs and are introduced to trigger the collisions, and four continuous disturbance inputs are introduced to capture their effect. The discrete states introduced to model the velocity constraints have been suppressed to simplify the figure; with these states, the total number of discrete states is 36. To simplify the notation, we use to denote the continuous disturbance inputs, even though, strictly speaking, and encode the times at which the discrete disturbance inputs and change values and and are only relevant at those times. It is easy to show that for each initial condition and each control and disturbance , there exists a unique state trajectory. Moreover, this state trajectory satisfies for all . Finally, an additional source of discrete dynamics is the communication protocols proposed in <ref type="bibr" target="#b16">[17]</ref> to coordinate the actions of neighboring platoons. The methods discussed in this paper can also be used to establish conditions that ensure the safety of the interaction between the discrete communication protocols and the low-level, continuous controllers. This issue will not be addressed here because of the complicated notation needed. The interested reader is referred to <ref type="bibr" target="#b12">[13]</ref> for details.</p><p>Recall that even though intraplatoon collisions with and are acceptable in case of emergency, interplatoon collisions should be avoided at all costs. Thus, for safety, we would like to prevent collisions between platoons and . In other words, we would like to ensure that for all . Notice that the limiting case is considered acceptable, since the vehicles just touch at zero relative velocity. Summarizing, the controller synthesis problem we would like to solve involves selecting the continuous control variable such that for all actions of the disturbance the two platoons are guaranteed not to collide.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. REACHABILITY ANALYSIS AND CONTROLLER DESIGN</head><p>A state of a dynamical system is defined to be reachable if there is an execution of the system that touches it. A subset of the state space is said to be controlled invariant if there exists a controller that guarantees that if the execution starts Fig. <ref type="figure">6</ref>. Hybrid automaton modeling intraplatoon collisions in platoons A and B. The discrete states are q for no collisions, q for collision inside platoon B, q for collision inside platoon A, and q for simultaneous intraplatoon collisions in A and B. The continuous dynamics within each discrete mode are given by <ref type="bibr" target="#b10">(11)</ref>.</p><p>in the subset, the execution stays in the subset for all future time. For a hybrid system , we seek to design a controller that prunes away executions that reach unsafe states. For such a problem, the initial state or set of initial states is usually left unspecified. We therefore pose the controller synthesis problem as: Given a safe set , determine i) the maximal controlled invariant set contained in and ii) the controller which renders this set invariant. In this paper, we restrict ourselves to safety specifications and consequently safety games alone. For more general specifications such as , , or others, the games to be considered are referred to as Büchi games and include nested versions of the games that we will discuss here. In this section, we solve the controller synthesis problem for safety specifications in hybrid automata. Our method is based on computing the backward-reachable set from . As before, we present the algorithm first on the finite-state automata and continuous-state control systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Finite Automata</head><p>The problem of synthesizing control laws in the presence of uncertain actions for the finite automaton described by (1) was first posed by Church in 1962 <ref type="bibr" target="#b7">[8]</ref>, who was studying problems in digital circuit design, and was solved by Büchi and Landweber <ref type="bibr" target="#b8">[9]</ref> and Rabin <ref type="bibr" target="#b34">[35]</ref> in the late 1960s and early 1970s using a version of the von Neumann-Morgenstern discrete game <ref type="bibr" target="#b35">[36]</ref>. More recently, Ramadge and Wonham <ref type="bibr" target="#b36">[37]</ref> added new insight into the structure of the control law. A temporal logic for modeling such games is introduced in <ref type="bibr" target="#b37">[38]</ref>. We define the winning states for the controller as the subset of from which the system has a sequence of control actions , which can force the system to remain in despite the actions of the environment . The set can be calculated as the fixed point of the following iteration (where a negative index is used to indicate that each step is a predecessor operation).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 (Maximal Controlled Invariant Set for Finite State Automata)</head><p>initialization: , , . while do end while</p><p>The iteration terminates when . At each step of the iteration, . Since is finite the iteration terminates in a finite number of steps. The set contains those states for which the controller has a sequence of actions that will ensure that the system remains in for at least steps, for all possible sequences . In order to characterize this iteration mathematically, we associate a value function to each state at each iteration, representing the future reward or cost to be incurred by the system given that its current state is and iteration such that .</p><p>(</p><formula xml:id="formula_6">)<label>14</label></formula><p>Therefore, . Since the most logical action of the controller is to keep the system inside in the face of unknown and therefore possibly hostile actions of the environment if otherwise.</p><p>(</p><p>The " " in the above compensates for the nondeterminism in ; the order of operations means that the controller plays first, trying to maximize the minimum value of . This representation gives the environment the advantage, since it has "prior" knowledge of the controller's action when making its own choice. Therefore, in general <ref type="bibr" target="#b15">(16)</ref> with equality occurring when the action is a saddle solution, or a no regret solution for each player. Here, we do not need to assume the existence of a saddle solution; rather, we always give advantage to the environment, the player doing its worst to drive the system out of , in order to ensure a conservative solution. Strictly speaking, this is a Stackelberg solution of the game with the controller as leader.</p><p>The iteration process in Algorithm 1 may be summarized by the difference equation <ref type="bibr" target="#b16">(17)</ref> We refer to <ref type="bibr" target="#b16">(17)</ref> as a "discrete Hamilton-Jacobi equation." The first " " in the equation ensures that states outside that can be forced by the controller to transition into are prevented from appearing in . This means that once a state has associated to it a value of zero, the value stays at zero for all subsequent iterations: enforcing the requirement that "once a state becomes unsafe, it remains unsafe."</p><p>Proposition 1 (Winning States ): For finite sets and , a fixed point of ( <ref type="formula">17</ref>) is reached in a finite number of steps. The set of winning states for the controller is . is the largest controlled invariant subset of .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Continuous-Time Dynamics</head><p>For the continuous nonlinear dynamics, described by (2), the solution of an optimal control law in the presence of environmental uncertainties was solved as a zero-sum dynamic game by Isaacs in the early 1950s <ref type="bibr" target="#b38">[39]</ref>. 2 Solutions for linear differential games were presented by Pontrjagin in <ref type="bibr" target="#b39">[40]</ref>. An excellent modern reference is <ref type="bibr" target="#b10">[11]</ref>. To conform with convention in the dynamical games literature, we represent the specification in terms of the unsafe set : the controller wins if it can keep the system from entering the interior of the set , denoted for a differentiable function , with boundary . Conversely, the environment wins if it can drive the system into . The winning states for the controller are those states from which there exists a control law that can keep the system outside despite the disturbance . Consider the system over the time interval , where . The value function of the game is defined by <ref type="bibr" target="#b17">(18)</ref> and is interpreted as the cost of a trajectory that starts at at initial time , evolves according to (2) with input and ends at the final state , with cost . Note that the value function depends only on the final state: there is no running cost, or Lagrangian. This is because, for proving safety of the system, we are only interested in whether or not the system trajectory enters , and we wish to compute the control law that maximizes the set of initial states from which the system trajectory is guaranteed to remain outside of . Thus, we do not restrict the trajectories further with a running cost. The game is won by the environment if the terminal state is in [i.e. ], and is won by the controller otherwise.</p><p>The optimal action of the controller is one that tries to maximize the minimum cost, to try to counteract the optimal disturbance action of pushing the system toward . As in the discrete game, the disturbance is given the advantage: the control plays first and disturbance plays second with the knowledge of the controller's play. This kind of solution is referred to as a Stackelberg solution; in the event that the solution is equal to the solution, then the solution is also the saddle 2 Isaacs was then a researcher at Rand Corp. and was motivated by tactical issues for U.S. Air Force pilots (dog fights, missile evasion).</p><p>solution of the game. The Stackelberg solution corresponds to , and we define , the optimal cost, as <ref type="bibr" target="#b18">(19)</ref> and the corresponding optimal input and disturbance as What is not explicit in this formulation is the "information patterns" used by the input and disturbance. In the event that the input and disturbance choices are causal (i.e., based only on past values of the input, disturbance, and state), the solution to the game can be characterized using Hamilton-Jacobi (Isaacs) theory. More precisely, the Hamiltonian of the system is , where is the costate vector <ref type="bibr" target="#b40">[41]</ref>, <ref type="bibr" target="#b10">[11]</ref>. Standard results in optimal control theory <ref type="bibr" target="#b40">[41]</ref>- <ref type="bibr" target="#b42">[43]</ref>, may be extended <ref type="bibr" target="#b10">[11]</ref> and <ref type="bibr" target="#b15">[16]</ref> to yield the optimal solution (20) <ref type="bibr" target="#b20">(21)</ref> The optimal Hamiltonian is therefore given by <ref type="bibr" target="#b21">(22)</ref> The Hamilton-Jacobi partial differential equation for the evolution of the value function in backward time is derived <ref type="bibr" target="#b40">[41]</ref>, <ref type="bibr" target="#b15">[16]</ref> to be <ref type="bibr" target="#b22">(23)</ref> with boundary condition . However, the solution to <ref type="bibr" target="#b22">(23)</ref> includes as safe states those states for which optimal trajectories pass through and end up outside at time 0. To prevent this from happening, we modify <ref type="bibr" target="#b22">(23)</ref> to guarantee that, if for some there exists an such that , then is nonincreasing for time less than . We do this by requiring that for for <ref type="bibr" target="#b23">(24)</ref> with boundary condition . It is easy to show <ref type="bibr" target="#b15">[16]</ref> that if is a smooth solution to <ref type="bibr" target="#b23">(24)</ref>, then the subset of the state space enclosed by the zero level set of cannot decrease as time marches backward, that is, for all , . Equation ( <ref type="formula">24</ref>) is the continuous analog to <ref type="bibr" target="#b16">(17)</ref> of the preceding discrete game and describes the relationship between the time and state evolution of . We claim that , where is the solution to <ref type="bibr" target="#b23">(24)</ref>, is the set of states from which the environment can force the system into in at most seconds. The pictorial explanation of this is given in Fig. <ref type="figure" target="#fig_4">7</ref>. The part of the boundary of where does not grow with negative time, as shown by point 1 in Fig. <ref type="figure" target="#fig_4">7(a)</ref>. Part (b) of the same figure shows the existence of a stationary solution as</p><p>. Questions about the smoothness of solutions to the Hamilton-Jacobi equation, shocks, and what to make of the solutions in this instance are subtle ones, and the interested reader is referred to Section VI and <ref type="bibr" target="#b15">[16]</ref> for details on these points.</p><p>Proposition 2 (Winning States ): Assume that satisfies the Hamilton-Jacobi equation ( <ref type="formula">24</ref>) for all , and that it converges uniformly in as to a function</p><p>. Then the set of winning states for the controller is <ref type="bibr" target="#b24">(25)</ref> is the largest controlled invariant set contained in . The least restrictive feedback controller for that renders invariant can now be constructed. The controller is defined to be if if .</p><p>Thus, in the interior of , is free to take on any value in . Existence of such for is guaranteed by construction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Hybrid Systems</head><p>Consider the nonlinear hybrid automaton (3) with safety property , where . We seek to construct the largest set of states for which the control can guarantee that the safety property is met despite the action of the disturbance . For a given set , we define the controllable predecessor and the uncontrollable predecessor by <ref type="bibr" target="#b25">(26)</ref> Therefore contains all states in for which controllable actions can force the state to remain in for at least one step in the discrete evolution.</p><p>, on the other hand, contains all states in , the complement of XjJ (x; t ) = 0g, fx 2 XjJ (x; t ) = 0g for 0 &gt; t &gt; t .</p><p>(b) The fixed point fx 2 XjJ (x) &lt; 0g, fx 2 XjJ (x) = 0g, and fx 2 XjJ (x) &gt; 0g.</p><p>, as well as all states from which uncontrollable actions may be able to force the state outside of . In the definition of , the controllable actions are required to be able to force a transition (hence the in the formula). In contrast, for , we simply require that a transition be possible, giving the advantage to the uncontrollable actions. The controllable and uncontrollable predecessors will form the discrete part of the algorithm for computing controlled invariant sets. For the continuous part of the algorithm, we need the operator. Definition 4 (Reach): Consider two subsets and such that . The Reach operator is defined as Reach and such that and for <ref type="bibr" target="#b26">(27)</ref> where is the continuous state trajectory of starting at and represents the state space components of . The set Reach describes those states from which, for all , there exists a , such that the state trajectory can be driven to while avoiding an "escape" set .</p><p>The following algorithm describes the construction of the maximal controlled invariant set for hybrid systems. In the first step of this algorithm, we remove from all states from which there is a disturbance forcing the system either outside or to states from which an environment action may cause transitions outside , without first touching the set of states from which there is a control action keeping the system inside . Since at each step, , the set decreases monotonically as decreases. If the algorithm terminates, we denote the fixed point as .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 3 (Winning States</head><p>): If the algorithm terminates after a finite number of steps, the fixed point is the maximal controlled invariant subset of .</p><p>In order to implement this algorithm, we need to calculate , , and . The computation of and requires inversion of the transition relation subject to the quantifiers and ; existence of this inverse can be guaranteed subject to well-understood conditions on the map . The computation of requires the development of a new algorithm for determining the set of initial conditions from which trajectories can reach one set, avoiding a second set along the way. In the following analysis, we describe this calculation for a single discrete state .</p><p>Recall that along continuous evolution the value of the discrete state remains constant. Therefore, since the computation of the Reach operator involves only continuous evolution, it can be carried out for each discrete state separately. Fix the value of and let and be differentiable functions such that and . Consider the following system of interconnected Hamilton-Jacobi equations: <ref type="bibr" target="#b27">(28)</ref> and <ref type="bibr" target="#b28">(29)</ref> where and , and for otherwise <ref type="bibr" target="#b29">(30)</ref> for otherwise.</p><p>Equation ( <ref type="formula">28</ref>) describes the evolution of the set under the Hamiltonian <ref type="bibr" target="#b29">(30)</ref>. This is the " " game of the previous section, with the modification that in , which ensures that the evolution of is frozen in this set. Similarly, (29) describes the evolution of the set under the Hamiltonian . Here a " " is used, since it is assumed that the control tries to push the system into , to escape from . in to ensure that the evolution of is frozen in this set. Note that in both games, the disturbance is given the advantage by assuming that the control plays first. Fig. <ref type="figure" target="#fig_6">8</ref> illustrates a sample evolution.</p><p>It is proven in <ref type="bibr" target="#b15">[16]</ref> that the resulting set contains neither nor states for which there is a control that drives the system into ; and the set contains neither nor states for which there is a disturbance input that drives the system into . Our theorem states that is the set Reach <ref type="bibr" target="#b15">[16]</ref>. Theorem 1 (Characterization of Reach): Assume that [ , respectively] is a smooth function of and , that it satisfies the Hamilton-Jacobi equation ( <ref type="formula">28</ref>) [( <ref type="formula">29</ref>), respectively], and that it converges uniformly in as to a function [ , respectively]. Then Reach</p><p>The least restrictive controller that renders invariant is:</p><formula xml:id="formula_10">if if if<label>(33)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Remarks</head><p>In general, one cannot expect to solve for using a finite computation. The class of hybrid systems for which algorithms like the one presented here are guaranteed to terminate is known to be restricted <ref type="bibr" target="#b43">[44]</ref>. In general, Algorithm 2 is semidecidable when the operators are computable. For example, when the continuous state dynamics are constant and the guards and resets are polyhedra, then the operators map polyhedral sets back into polyhedral sets. These hybrid systems are referred to as linear hybrid automata. When the hybrid system is a timed automaton, the synthesis procedure is actually decidable <ref type="bibr" target="#b44">[45]</ref>. The main reason for the somewhat pessimistic news about the decidability of the controller synthesis algorithm has to do with the fact that at heart these algorithms involve quantifier elimination for entry into "bad" sets or steering around "good" sets. However, thanks to some recent activity in mathematical logic in what are known as O-minimal systems, one can extend the class of systems for which the synthesis algorithm is semidecidable, to "O-minimal hybrid systems" (see <ref type="bibr" target="#b45">[46]</ref>).</p><p>However, our main focus in the rest of this paper is to show how one can make progress in getting approximate solutions even when the given application does not belong to a general class of hybrid systems for which the algorithm is semidecidable. In practice, we are helped by the fact that we are usually interested in finite time computations, rather than computing for or until a fixed point is reached. Numerical techniques are discussed in Section VI.</p><p>Another problem is the requirement that the controller resulting from our algorithm be non-Zeno (does not enforce the safety requirement by preventing time from diverging). The algorithm proposed here has no way of preventing such behavior, as will be illustrated in the third example, which we solve in the next chapter. There are several ways of removing Zeno behavior. One that we discuss in the next section is a practical method of resolving the Zeno effect, by adding a requirement that the system must remain in each discrete state for a nonzero amount of time. For a further discussion of how to regularize hybrid systems that have Zeno behavior, and to classify Zeno behaviors, see <ref type="bibr" target="#b46">[47]</ref> and <ref type="bibr" target="#b47">[48]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. SOLUTIONS TO THE EXAMPLES</head><p>In this section, we apply our techniques to the three examples previously introduced. For each example, we first derive and solve the Hamilton-Jacobi equation, and then apply the controller synthesis algorithm to compute the maximal controlled invariant set and corresponding control law so that each system satisfies its specified safety requirement. For these examples, the Hamilton-Jacobi equations are simple enough, and the dimensions of the discrete and continuous state spaces small enough, to permit solutions using the method of characteristics. We discuss computational issues for larger systems in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Aircraft Conflict Resolution</head><p>Consider the three-mode conflict resolution example pictured in Fig. <ref type="figure" target="#fig_0">1</ref> and modeled in Section III-A. We assume that for this example, the speeds of both aircraft are constant even in the straight modes, so that the input and disturbance sets are singletons and . The general case, in which and are ranges of possible speeds, is considered in the examples in <ref type="bibr" target="#b11">[12]</ref> and <ref type="bibr" target="#b15">[16]</ref>. Recall that our goal is to calculate the relative distance at which the system may safely switch from mode 1 to mode 2, and the minimum turning radius in mode 2, to ensure that separation between aircraft is maintained. The evolution of the protected zone in each   mode, assuming no switches, is computed using the continuous-time Hamilton-Jacobi method. The unsafe set is defined as</p><p>, where . Let represent the unsafe set in mode . Thus the set , where is the optimal cost, is the backward evolution of the protected zone in mode , assuming no switches between modes. These sets are shown in Fig. <ref type="figure" target="#fig_7">9</ref>. In both cases, the relative heading between aircraft is assumed fixed at (because of our assumption that aircraft switch modes instantaneously). We implement Algorithm 2 for this example, at each step computing the sets , , and . In the first step, , the complement of <ref type="bibr" target="#b33">(34)</ref> as shown in Fig. <ref type="figure" target="#fig_8">10</ref> (the complement is shown in the figure) (35) <ref type="bibr" target="#b35">(36)</ref> Note that for all , since labels transitions from . The set (Fig. <ref type="figure" target="#fig_9">11</ref>) is <ref type="bibr" target="#b36">(37)</ref> The set involves computing ; this computation is illustrated in Fig. <ref type="figure" target="#fig_10">12(a)</ref>, and the set is shown in Fig. <ref type="figure" target="#fig_10">12</ref>(b) as the shaded region. Continuing, a fixed point is reached after three iterations: Fig. <ref type="figure" target="#fig_1">13</ref> illustrates this fixed point in . Since we assumed in this example that the continuous control input is fixed, we need only design the discrete part of the controller and the radius of the maneuver . The design is as illustrated in Fig. <ref type="figure" target="#fig_1">13(a)</ref>: the enabling and forcing of occurs at the boundary of as shown, as explained below. The transition from to , governed by , must be disabled until the relative position of the two aircraft reach the dashed line as shown; otherwise, the aircraft will lose separation with each other either during the maneuver or after the maneuver is complete. At the dashed line, is enabled, meaning the transition from to may occur at any time.</p><p>remains enabled until the dynamics reach the solid line (boundary of ), at which point it must be both enabled and forced: otherwise the aircraft lose separation immediately. Note that there are states that are not rendered safe by the maneuver. Indeed, if the initial state is in the darker shaded region shown in Fig. <ref type="figure" target="#fig_1">13(a)</ref>, then the aircraft are doomed to collide. Fig. <ref type="figure" target="#fig_1">13(b</ref>) displays the result of increasing the radius of the turn in . Notice that the set (the complement of the shaded region) increases as the turning radius increases. This implies that the maneuver renders a larger subset of the state space safe. Fig. <ref type="bibr">13(b)</ref> shows the critical value of the turning radius, for which the maneuver is guaranteed to be safe, provided the conflict is detected early enough. Thus, the controller synthesis procedure presented in Section IV, applied to this example, generates conditions for the enabling and forcing of , and also the turning radius .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Aerodynamic Envelope Protection</head><p>Consider the longitudinal dynamics of the CTOL aircraft <ref type="bibr" target="#b6">(7)</ref> in which the state is required to stay in the envelope , shown in Fig. <ref type="figure" target="#fig_2">4</ref>(a) in -space and Fig. <ref type="figure" target="#fig_2">4</ref>(b) in -space. In contrast to the previous example, this example has a range of possible continuous input variables:</p><p>, and thus we will exemplify the continuous Hamilton-Jacobi calculation of Section IV in some detail below.</p><p>The specification may be decoupled according to and : the airspeed and flight path angle must remain in the envelope at all times; and the airspeed, altitude , and vertical speed must remain in the envelope at all times. In the speed and flight path modes (modes ),  Fig. <ref type="figure" target="#fig_1">13</ref>. Showing the enabling and forcing boundaries for in state q ; and the result of increasing the radius of the turn in the avoid maneuver to increase W . and are the only controlled variables. Therefore, we may derive the maximal controlled invariant set contained in , using the -dynamics ( <ref type="formula">8</ref>), <ref type="bibr" target="#b8">(9)</ref>. Let <ref type="bibr" target="#b37">(38)</ref> where Thus, is only piecewise smooth, yet for this example we can prove that the calculation can be performed one edge of the boundary at a time: we can derive a Hamilton-Jacobi equation for each , and prove that the intersection of the resulting sets is the maximal controlled invariant subset of . The subscript in each will indicate that the calculation is for boundary . In the following, we describe how the computation is performed by looking at one edge of the boundary . The details of the proofs of controlled invariance are presented in <ref type="bibr" target="#b15">[16]</ref>. We would now like to apply Algorithm 2 to generate the controllable actions , which force transitions between discrete states to ensure safety. However, we quickly run into a problem. At the first step of the algorithm, , and since there are no uncontrollable actions, . However, since the controllable actions are always enabled, . Thus so that . Similarly, , , and the fixed point is , meaning that the maximal controlled invariant set contained in is itself! This is clearly incorrect for the real system: the calculations to produce Figs. 14 and 15 showed that certain "corners" of are not controlled invariant. The error lies in the fact that this system is Zeno: if forced into one of these corners, the system could avoid flowing out of by switching infinitely often in zero time between discrete states. Unlike the previous examples, there is no specified minimum time for the system to stay in each discrete state. A possible remedy is to enforce that the system remain in each discrete state for some minimum time . If this is the case, then the algorithm calculates as the union of and for their applicable discrete modes. The mode switching logic is implicit in these calculations: as the aircraft approaches maximum or minimum altitude, the FMS must force the autopilot to switch to modes 4 or 5 and choose a control scheme which satisfies the limits on . As the aircraft approaches its maximum or minimum speed and flight path angle, the FMS must force the system into modes 1, 2, or 3 and select those control inputs which either drive the aircraft back inside the envelope, or keep it on the boundary of the envelope. In summary, this example uses the Hamilton-Jacobi formulation of Section IV to calculate the maximal controlled invariant set within the specified aerodynamic flight envelope, as well as the least restrictive control scheme that renders this set invariant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Vehicle Collision Avoidance</head><p>The design of safe controllers for AHS platoon leaders can be cast as a game between the control (representing the acceleration of platoon ) and the disturbance (representing the acceleration of platoon and the effect of intraplatoon collisions within platoons and ) over a cost function that encodes the requirement that the two platoons should not collide. Fortunately, the system is simple enough that physical intuition allows us to guess the optimal strategy for both the control and the disturbance. The worst that can happen from the point of view of platoon is that both collisions take place immediately and at the maximum possible relative velocity, and then platoon decelerates as hard as possible until it comes to a stop. The best that platoon can do in response is also to decelerate as hard as possible until it comes to a stop. <ref type="foot" target="#foot_2">3</ref>   The computation used to show that is a saddle equilibrium also allows us to analytically characterize the maximal controlled invariant set <ref type="bibr" target="#b45">(46)</ref> The boundary of the set m/s , m/s , m/s, and m/s is shown pictorially in Fig. <ref type="figure" target="#fig_12">16 for</ref> (the safe set is everything "above" the boundary shown in the figure). The least restrictive controller that renders invariant is</p><formula xml:id="formula_11">if if if if . (<label>47</label></formula><formula xml:id="formula_12">)</formula><p>If additional requirements, such as passenger comfort, fuel efficiency, and emission reduction, are imposed, controllers that optimize the system performance with respect to these objectives can be sought among the class of controllers defined by .</p><p>Similar computations lead to maximal controlled invariant sets and least restrictive controllers to implement the remaining functions that an automated vehicle may be called upon to perform: join a platoon, split from a platoon, change lanes, etc. In addition to characterizing the safe inputs for each maneuver, the controlled invariant sets also provide guidelines for the switching among the different controllers that is carried out by the communication protocols that coordinate the actions of neighboring platoons. A controller should not be switched on unless the state is in the corresponding controlled invariant set. For technical details on how this can be accomplished, the reader is referred to <ref type="bibr" target="#b12">[13]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. COMPUTATIONAL METHODS</head><p>The algorithm for reachability analysis and controller synthesis for hybrid systems presented here provides the complete necessary and sufficient conditions for design of the controller provided that the operators can be computed. As we pointed out, the set of systems for which these can be computed is very restrictive: timed or linear hybrid automata. Here we discuss computational techniques for approximating the optimal control and disturbance inputs , as well as solutions to the Hamilton-Jacobi partial differential equation.</p><p>Numerical solutions are potentially complicated by the facts that the right-hand side of the Hamilton-Jacobi equation is nonsmooth and that the initial data may have a nonsmooth boundary, that may be discontinuous, and that may not remain a continuous function of and even if the boundary condition is differentiable (this is known as a shock). The discontinuity on the right-hand side of <ref type="bibr" target="#b23">(24)</ref> further complicates the solution, as does the discontinuous switching of the optimal control and disturbance and . In addition, we are often interested in cases in which example required about 1400 timesteps on a Sun UltraSparc 10 (a 300-MHz UltraSparc processor with 512-KB cache and 128-MB main memory). This translated to about 75 min. Computation time will decrease significantly with our new version in , which exploits opportunities for parallelism in the algorithm. In addition, our current version used the very basic idea in level set methods presented above; for special forms of the Hamilton-Jacobi equation, many extremely efficient variants of this method exist <ref type="bibr" target="#b52">[53]</ref>. In particular, the narrow-band and fast marching methods speed up the algorithm by confining the computation to a narrow band around the evolving front.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Other Computational Methods Involving Approximations</head><p>Other methods have been presented for approximating the reach set calculation. One idea has been to use rectangular hybrid automata to approximate conservatively the reach set of general hybrid automata. This procedure consists of subdividing the state space into regions where one can find upper and lower bounds for each component of the right-hand side of the continuous dynamics and using the reach set analysis for the resulting rectangular hybrid system. The package HyTech does precisely this computation provided that the guards and invariants are polyhedra <ref type="bibr" target="#b53">[54]</ref>. A synthesis procedure based on this appears in the paper by Wong-Toi <ref type="bibr" target="#b22">[23]</ref>. The main advantage of this approximation procedure is that it deals with a class of systems for which the synthesis algorithm is semidecidable. The main drawback is that there is an exponential growth in the number of discrete states in approximating the continuous dynamics. The successor to HyTech is a package called HyperTech <ref type="bibr" target="#b54">[55]</ref>, which reduces the conservativeness of HyTech by using interval arithmetic with some systematic checks to reduce the divergence of interval arithmetic estimates to approximate reach sets. A controller design procedure using HyperTech has yet to be completed.</p><p>1) Approximating Dynamics with Differential Inclusions: Suppose the continuous dynamics in the nonlinear hybrid automaton (3) were approximated with the differential inclusion <ref type="bibr" target="#b53">(54)</ref> where , . A computationally efficient method for approximating the reach set of is to conservatively approximate by a set of constant inclusions, each of the form <ref type="bibr" target="#b54">(55)</ref> and then to compute the reach set of the constant inclusions. This method is presented in <ref type="bibr" target="#b55">[56]</ref> and <ref type="bibr" target="#b56">[57]</ref>, where it is proved that the approximation error can be made arbitrarily small by approximating the differential inclusion arbitrarily closely ( -approximation). An advantage of this method is that the class of constant inclusions used to approximate the differential inclusion is known to be decidable, thus one can guarantee that the reachable set as can be computed in a finite number of steps. The amount of preprocessing re-quired to initially approximate the dynamics may be quite formidable, however, especially to achieve a close approximation of the true reach set.</p><p>2) Approximating Nonsmooth Sets with Smooth Sets: We have shown that the reach set at any time may have a nonsmooth boundary due to switches in , nonsmooth initial data, or the formation of shocks. The level set scheme propagates these discontinuities, yet its implementation may require a very small time step to do this accurately. In <ref type="bibr" target="#b57">[58]</ref>, we present a method for overapproximating such nonsmooth sets with sets for which the boundary is continuously differentiable by using smoothing functions to derive smooth inner and outer approximations. By applying Algorithm 2 to smooth inner and outer approximations of the sets and , we calculate smooth inner and outer approximations to the true reach set.</p><p>3) Ellipsoidal Methods: A similar idea is to use ellipsoids as inner and outer approximations to the reach set <ref type="bibr" target="#b58">[59]</ref>, <ref type="bibr" target="#b59">[60]</ref>. To preserve the propagation of ellipsoids, the continuous dynamics in each of the discrete locations needs to be approximated by linear dynamics. Bounds on the conservativeness of this approximation and their validity have not yet been worked out. However, <ref type="bibr" target="#b59">[60]</ref> presents efficient algorithms for calculating both the minimum volume ellipsoid containing given points, and the maximum volume ellipsoid in a polyhedron, using a matrix determinant maximization procedure subject to linear matrix inequality constraints.</p><p>4) Quantifier Elimination and Linear Hybrid Systems: While the decidability results for the controller synthesis algorithm gave sharp results about the class of hybrid systems for which the design procedure is (semi)decidable, there has been a reawakening of interest in mathematical logic, which enables us to extend these results using so-called order-minimal or O-minimal systems. These are examples of systems that may not admit quantifier elimination but do nonetheless allow for semidecidable algorithms <ref type="bibr" target="#b60">[61]</ref>. Using these results, we are able to perform controller synthesis for classes of hybrid systems for which the dynamics in each discrete location is linear (in the sense that</p><p>) and the guards, invariants, and resets are subanalytic sets. This has been used in a symbolic package using QEPCAD in <ref type="bibr" target="#b45">[46]</ref>. Finally, for hybrid systems in which the continuous state dynamics are linear and in discrete time, techniques from quantifier elimination and linear programming can be used to develop semidecidable procedures for controller design <ref type="bibr" target="#b61">[62]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION</head><p>Hybrid control design techniques are an important design tool for rapid prototyping of controller designs for real-time and embedded systems, by which one may achieve better performance, handle larger systems, and have greater confidence in the functioning of the system according to specification.</p><p>This paper is a survey of a new method of controller design for hybrid systems, along with its application to three interesting and topical examples from air-traffic management, au-tomated highway systems, and flight management systems. We have had success in applying these methods to examples in other arenas: such as the control of unmanned aerial vehicles and communication networks. Our method represents a rapprochement between the game theoretic synthesis techniques of computer science and the robust control techniques of control theory. Current work focuses on computational methods for mechanizing the algorithm or its approximation. This is especially challenging given the limits on decidability results that we have quoted in the paper. Especially promising are level set methods, quantifier elimination methods, and ellipsoidal methods.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Two aircraft in three modes of operation: in modes 1 and 3 the aircraft follow a straight course and in mode 2 the aircraft follow a half-circle. The initial relative heading (120 ) is preserved throughout.</figDesc><graphic coords="6,322.68,147.78,227.52,81.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. The longitudinal dynamics of a conventional take-off and landing (CTOL) aircraft in flight with attached axes about its center of mass.</figDesc><graphic coords="7,305.04,25.92,226.80,111.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. (a) Simplified aerodynamic flight envelope in (V; )-space: axes are airspeed V , flight path angle . (b) Simplified aerodynamic flight envelope in (h; V; _ h)-space: axes are altitude h, airspeed V , vertical speed _ h.</figDesc><graphic coords="7,306.06,192.96,224.88,85.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. AHS model with five platoons and distances as marked.</figDesc><graphic coords="8,330.24,25.92,212.40,105.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. (a)The sets fx 2 XjJ (x; 0) = 0g, fx 2 XjJ (x; t ) = 0g, fx 2 XjJ (x; t ) = 0g for 0 &gt; t &gt; t . (b) The fixed point fx 2 XjJ (x) &lt; 0g, fx 2 XjJ (x) = 0g, and fx 2 XjJ (x) &gt; 0g.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Computation of Reach(G; E) in a single discrete state q.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. J (x) 0 for (a) Modes 1 and 3 (i = 1; 3), ! = ! = 0 (the jagged edge means the set extends infinitely) and (b) Mode 2 (i = 2), ! = ! = 1. In both cases, = 2=3, and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. (W ) .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. (W ). The jagged edge in q means that the set extends infinitely.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. (a) P re (W ) and P re (W ) in q ; (b) Reach(P re (W ); Pre (W )) in q .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 14 .Fig. 15 .</head><label>1415</label><figDesc>Fig. 14. The set W in (V; )-space, with control law as indicated. Values used are for a DC-8:= 0=8 rad, = =8 rad, V = 180 m/s, V</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. The boundary of the maximal controlled invariant set for vehicle collision avoidance in q = q .</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>PROCEEDINGS OF THE IEEE, VOL. 88, NO. 7, JULY 2000</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>The name "Zeno" comes from the ancient Greek philosopher Zeno who lived in Elea, a Greek colony in southern Italy, in the fifth century B.C. Zeno spent his time posing paradoxes about time.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>It should be noted that physical intuition may lead to erroneous conclusions even for small changes in the specification. For example, one can show<ref type="bibr" target="#b12">[13]</ref> that if the safety specification is relaxed from requiring no intercollisions between A and B to allowing collisions at low relative velocity, maximum deceleration may no longer be the optimum strategy for the control or disturbance.964PROCEEDINGS OF THE IEEE, VOL. 88, NO. 7, JULY 2000</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The work of C. J. Tomlin was supported by the DARPA Software Enabled Control (SEC) Program under AFRL Contract F33615-99-C-3014 and by a Frederick E. Terman Faculty Award. The work of J. Lygeros and S. S. Sastry was supported by the DARPA SEC program under AFRL Contract F33615-98-C-3614 and by ARO under Grant DAAH04-96-1-0341.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The optimal Hamiltonian in this case (there is no disturbance, hence this is not a game but an optimal control problem) is given by the following, where we have substituted into the dynamics the expressions for the lift and drag forces (neglecting the quadratic term in ): <ref type="bibr" target="#b38">(39)</ref> where</p><p>. The Hamilton-Jacobi equation describing the evolution of is obtained from (24) <ref type="bibr" target="#b39">(40)</ref> with boundary condition . The optimal control at is computed from <ref type="bibr" target="#b38">(39)</ref>. The optimal throttle input may be calculated directly from this equation:</p><p>(since for the inward pointing normal). The optimal pitch input is calculated indirectly <ref type="bibr" target="#b15">[16]</ref>, since loses dependence on on the set . Define . Then <ref type="bibr" target="#b40">(41)</ref> Integrate the system dynamics <ref type="bibr" target="#b7">(8)</ref>, <ref type="bibr" target="#b8">(9)</ref> with , , backward from to , where is chosen to be large enough so that the solution intersects . Now denote this point of intersection as , and the solution to <ref type="bibr" target="#b7">(8)</ref>, ( <ref type="formula">9</ref>) between and as , as shown in Fig. <ref type="figure">14</ref>. Repeating this calculation for the remaining three boundaries, only contains a point at which the associated optimal Hamiltonian, , becomes zero. We denote this point as , where</p><p>and similarly calculate and , as shown in Fig. <ref type="figure">14</ref>. In summary, for the aircraft dynamics <ref type="bibr" target="#b7">(8)</ref>, <ref type="bibr" target="#b8">(9)</ref> with flight envelope given by <ref type="bibr" target="#b37">(38)</ref>, and input constraints, the maximal controlled invariant subset of , denoted , is the set enclosed by <ref type="bibr" target="#b42">(43)</ref> The least restrictive controller that renders controlled invariant is</p><p>, where</p><p>In Fig. <ref type="figure">14</ref>, the portions of for which all control inputs are safe ( ) are indicated with solid lines; those for which only a subset are safe ( ) are indicated with dashed lines. The map defines the least restrictive safe control scheme and determines the mode switching logic. On and , the system must be in Mode 2 or Mode 3. Anywhere else in , any of the three modes is valid as long as the input constraints of (44) are satisfied. In the regions (the upper left and lower right corners of ), no control inputs will keep the system inside of . Repeating these calculations for the speed and altitude modes (modes 4, 5), using the dynamics <ref type="bibr" target="#b6">(7)</ref> and envelope illustrated in Fig. <ref type="figure">4</ref>(b), the controlled invariant subset is computed and shown in Fig. <ref type="figure">15</ref>, and the least restrictive control scheme is as indicated. This calculation incorporates the limits on the altitude into the previous calculation: at , the control must be chosen so that , whereas at , the control is restricted to force .</p><p>has nonsmooth boundary, so that the boundary conditions of the Hamilton-Jacobi equation are not differentiable. In order to admit discontinuous solutions, a "weak" derivative and "weak" solution to the Hamilton-Jacobi equation was developed by Crandall et al. in the early 1980s <ref type="bibr" target="#b48">[49]</ref>, <ref type="bibr" target="#b49">[50]</ref>.</p><p>A viscosity solution to (24) is defined as the limit as goes to zero of solutions to the Hamilton-Jacobi equation regularized by adding to the right-hand side; here refers to the Laplacian of . For and for smooth Hamiltonians, it may be shown <ref type="bibr" target="#b48">[49]</ref>, <ref type="bibr" target="#b49">[50]</ref> that there exists a unique continuous solution to the Hamilton-Jacobi equation: the second derivative term acts like a smoothing term and is called a "viscosity" term for that reason. As , the solution approaches the viscosity solution to the Hamilton-Jacobi equation. Thus, even when classical smooth solutions do not exist, solutions in this "weak sense" exist.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Level Set Methods for Computing Solutions to Hybrid Systems</head><p>We discuss a numerical technique developed by Osher and Sethian <ref type="bibr" target="#b50">[51]</ref>, which computes the viscosity solution to the Hamilton-Jacobi equation, ensuring that discontinuities are preserved. We conclude with a discussion of its application to the reachability analysis of hybrid systems. The level set methods of Osher and Sethian compute the solution of the Hamilton-Jacobi equation to be the one obtained from the regularized system as the viscosity coefficient . In order for the numerical scheme to closely approximate the gradient , especially at points of discontinuity, the numerical approximation of the spatial derivative must be chosen carefully. Consider an example in two dimensions, with discretized into a grid with spacing and . The forward difference operator at is defined as (for , similarly for ) <ref type="bibr" target="#b47">(48)</ref> The backward difference operator is defined as (for , similarly for ) <ref type="bibr" target="#b48">(49)</ref> Similarly, the central difference operator is defined as (for , similarly for ) <ref type="bibr" target="#b49">(50)</ref> At each grid point , the partial derivatives and may be approximated to first order using the forward, backward, or central difference operators. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An optimal control theory for discrete event systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sengupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lafortune</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Contr. Optim</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="488" to="541" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">As soon as possible: Time optimal control for timed automata</title>
		<author>
			<persName><forename type="first">E</forename><surname>Asarin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Vaandrager</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Van Schuppen</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">1569</biblScope>
			<biblScope unit="page" from="19" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A unified framework for hybrid control: Model and optimal control theory</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Branicky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Borkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">K</forename><surname>Mitter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="31" to="45" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Maximum principle for a hybrid system via singular pertrubations</title>
		<author>
			<persName><forename type="first">G</forename><surname>Grammel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Contr. Optim</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1162" to="1175" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Hierarchical hybrid control systems: A lattice theoretic formulation</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">E</forename><surname>Caines</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Wei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="501" to="508" />
			<date type="published" when="1998-04">Apr. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hierarchically consistent control systems</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Pappas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lafferriere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Decision and Control</title>
		<meeting>IEEE Conf. Decision and Control<address><addrLine>Tampa, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-12">Dec. 1998</date>
			<biblScope unit="page" from="4336" to="4341" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Multiple agent hybrid control architecture</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nerode</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Kohn</surname></persName>
		</author>
		<editor>Hybrid Systems, R. L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel</editor>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="297" to="316" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Logic, arithmetic, and automata</title>
		<author>
			<persName><forename type="first">A</forename><surname>Church</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Congr. Mathematicians</title>
		<meeting>Int. Congr. Mathematicians</meeting>
		<imprint>
			<date type="published" when="1962">1962</date>
			<biblScope unit="page" from="23" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Solving sequential conditions by finite-state operators</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Büchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">H</forename><surname>Landweber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Amer</title>
		<meeting>Amer</meeting>
		<imprint>
			<publisher>Mathematical Soc</publisher>
			<date type="published" when="1969">1969</date>
			<biblScope unit="page" from="295" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On the synthesis of strategies in infinite games</title>
		<author>
			<persName><forename type="first">W</forename><surname>Thomas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of STACS 95</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">W</forename><surname>Mayr</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Puech</surname></persName>
		</editor>
		<meeting>STACS 95<address><addrLine>Munich, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">900</biblScope>
			<biblScope unit="page" from="1" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Bas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Olsder</surname></persName>
		</author>
		<title level="m">Dynamic Non-Cooperative Game Theory</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Academic</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
	<note>nd ed</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Conflict resolution for air traffic management: A case study in multi-agent hybrid systems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Pappas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="509" to="521" />
			<date type="published" when="1998-04">Apr. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Verified hybrid controllers for automated vehicles</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">N</forename><surname>Godbole</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="522" to="539" />
			<date type="published" when="1998-04">Apr. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">In search of the future of air traffic control</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Perry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Spectrum</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="18" to="35" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Control applications and challenges in air traffic management</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Jackson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Green</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Amer. Control Conf., Philadelphia</title>
		<meeting>Amer. Control Conf., Philadelphia<address><addrLine>PA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Hybrid control of air traffic management systems</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Tomlin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<pubPlace>Berkeley</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. Elect. Eng., Univ. California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Smart cars on smart roads: Problems of control</title>
		<author>
			<persName><forename type="first">P</forename><surname>Varaiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="195" to="207" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">String stability of interconnected systems: An application to platooning in automated highway systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Swaroop</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<pubPlace>Berkeley</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. Mech. Eng., Univ. California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Longitudinal control of the lead car of a platoon</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">N</forename><surname>Godbole</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Veh. Technol</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1125" to="1135" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">On the synthesis of discrete controllers for timed systems</title>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pnueli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sifakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STACS 95: Theoretical Aspects of Computer Science</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">Germany</forename><surname>Munich</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">900</biblScope>
			<biblScope unit="page" from="229" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Symbolic controller synthesis for discrete and timed systems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Asarin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pnueli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Hybrid Systems</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">W</forename><surname>Antsaklis</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Kohn</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Nerode</surname></persName>
		</editor>
		<editor>
			<persName><surname>Sastry</surname></persName>
		</editor>
		<meeting>Hybrid Systems<address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">II</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Control synthesis for a class of hybrid systems subject to configuration-based safety constraints</title>
		<author>
			<persName><forename type="first">M</forename><surname>Heymann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid and Real Time Systems</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">O</forename><surname>Maler</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1201</biblScope>
			<biblScope unit="page" from="376" to="391" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The synthesis of controllers for linear hybrid automata</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wong-Toi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Decision and Control</title>
		<meeting>IEEE Conf. Decision and Control<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Lewin</surname></persName>
		</author>
		<title level="m">Differential Games</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">H-Infinity Optimal Control and Related Minimax Design Problems: A Dynamic Game Approach</title>
		<author>
			<persName><forename type="first">T</forename><surname>Bas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bernhard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Birkhauser</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hierarchical, hybrid control of large scale systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dept. Elect. Eng. Comput. Sci., Univ. California</title>
		<imprint>
			<date type="published" when="1996">1996</date>
			<pubPlace>Berkeley</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Controllers for reachability specifications for hybrid systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="page" from="349" to="370" />
			<date type="published" when="1999-03">Mar. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">On the existence of executions of hybrid automata</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">H</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Egerstedt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Decision and Control</title>
		<meeting>IEEE Conf. Decision and Control<address><addrLine>Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-07-10">Dec. 7-10, 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Reactive modules</title>
		<author>
			<persName><forename type="first">R</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Henzinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th Annu. Symp. Logic in Computer Science</title>
		<meeting>11th Annu. Symp. Logic in Computer Science</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="207" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<author>
			<persName><forename type="first">Z</forename><surname>Manna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pnueli</surname></persName>
		</author>
		<title level="m">Temporal Verification of Reactive Systems: Safety</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Synthesis from design requirements of a hybrid system for transport aircraft longitudinal control</title>
		<author>
			<persName><forename type="first">C</forename><surname>Hynes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Sherry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NASA Ames Research Center</title>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Honeywell Air Transport Division</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Preprint</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Output tracking for a nonminimum phase dynamic CTOL aircraft model</title>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Benvenuti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Decision and Control</title>
		<meeting>IEEE Conf. Decision and Control<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="1867" to="1872" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Bounded tracking for nonminimum phase nonlinear systems with fast zero dynamics</title>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Control</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="819" to="847" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Aerodynamic envelope protection using hybrid control</title>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Amer. Control Conf., Phildelphia, PA</title>
		<meeting>Amer. Control Conf., Phildelphia, PA</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="1793" to="1796" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Automata on infinite objects and Church&apos;s problem</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">O</forename><surname>Rabin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Regional Conference Series in Mathematics</title>
		<imprint>
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Theory of Games and Economic Behavior</title>
		<author>
			<persName><forename type="first">J</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Morgenstern</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1947">1947</date>
			<publisher>Princeton Univ. Press</publisher>
			<pubPlace>Princeton, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">The control of discrete event dynamical systems</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J G</forename><surname>Ramadge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">M</forename><surname>Wonham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>IEEE</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="81" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Alternating-time temporal logic</title>
		<author>
			<persName><forename type="first">R</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Henzinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Kupferman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 38th Annu. Symp. Foundations of Computer Science</title>
		<meeting>38th Annu. Symp. Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="100" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Isaacs</surname></persName>
		</author>
		<title level="m">Differential Games</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Linear differential games</title>
		<author>
			<persName><forename type="first">L</forename><surname>Pontrjagin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soviet Math. Doklady</title>
		<imprint>
			<biblScope unit="page" from="769" to="771" />
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Bryson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Ho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Optimal Control</title>
		<imprint>
			<date type="published" when="1969">1969</date>
			<publisher>Blaisdell</publisher>
			<pubPlace>Waltham, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Young</surname></persName>
		</author>
		<title level="m">Optimal Control Theory</title>
		<meeting><address><addrLine>Cambridge, U.K.</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Deterministic and Stochastic Optimal Control</title>
		<author>
			<persName><forename type="first">W</forename><surname>Fleming</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rishel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">What&apos;s decidable about hybrid automata</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Henzinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Kopke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Puri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Varaiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 27th Annu. ACM Symp. Theory of Computing</title>
		<meeting>27th Annu. ACM Symp. Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A theory of timed automata</title>
		<author>
			<persName><forename type="first">R</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">126</biblScope>
			<biblScope unit="page" from="183" to="235" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Decidable controllers for a class of hybrid systems</title>
		<author>
			<persName><forename type="first">O</forename><surname>Shakernia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pappas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Krogh</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Lynch</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1790</biblScope>
			<biblScope unit="page" from="407" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">On the regularization of zeno hybrid automata</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Egerstedt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Syst. Contr. Lett</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Toward a theory of hybrid dynamical systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Simic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">H</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Krogh</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Lynch</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1790</biblScope>
			<biblScope unit="page" from="421" to="436" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Viscosity solutions of Hamilton-Jacobi equations</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Crandall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-L</forename><surname>Lions</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. Amer. Math. Soc</title>
		<imprint>
			<biblScope unit="volume">277</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="42" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Some properties of viscosity solutions of Hamilton-Jacobi equations</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Crandall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-L</forename><surname>Lions</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. Amer. Math. Soc</title>
		<imprint>
			<biblScope unit="volume">282</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="487" to="502" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Fronts propagating with curvature-dependent speed: Algorithms based on Hamilton-Jacobi formulations</title>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computat. Phys</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="12" to="49" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Level set methods for computation in hybrid systems</title>
		<author>
			<persName><forename type="first">I</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Krogh</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Lynch</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1790</biblScope>
			<biblScope unit="page" from="310" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<title level="m">Level Set Methods: Evolving Interfaces in Geometry, Fluid Mechanics, Computer Vision, and Materials Science</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">A user&apos;s guide to HyTech</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Henzinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-H</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wong-Toi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Int. Workshop Tools and Algorithms for the Construction and Analysis of Systems (TACAS)</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>1st Int. Workshop Tools and Algorithms for the Construction and Analysis of Systems (TACAS)</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">1019</biblScope>
			<biblScope unit="page" from="41" to="71" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Rectangular hybrid games</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Henzinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Horowitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Majumdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Int. Conf. Concurrence Theory (CONCUR)</title>
		<meeting>10th Int. Conf. Concurrence Theory (CONCUR)</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title level="m" type="main">Theory of hybrid systems and discrete event systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Puri</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<pubPlace>Berkeley</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. Elect. Eng., Univ. California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">-approximation of differential inclusions</title>
		<author>
			<persName><forename type="first">A</forename><surname>Puri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Varaiya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Borkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Decision and Control, New Orleans</title>
		<meeting>IEEE Conf. Decision and Control, New Orleans</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="2892" to="2897" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">On controller synthesis for nonlinear hybrid systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tomlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Decision and Control</title>
		<meeting>IEEE Conf. Decision and Control<address><addrLine>Tampa, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="2101" to="2106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">Ellipsoidal Calculus for Estimation and Control</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Kurzhanski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Valyi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>Birkhauser</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Determinant maximization with linear matrix inequality constraints</title>
		<author>
			<persName><forename type="first">L</forename><surname>Vandenberghe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-P</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Matrix Anal. Applicat</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="499" to="533" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">An approach to the verification of the Center-TRACON automation system</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pappas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Henzinger</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1386</biblScope>
			<biblScope unit="page" from="289" to="305" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Controlled invariance of discrete time systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Vidal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schaffert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lygeros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sastry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Krogh</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Lynch</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1790</biblScope>
			<biblScope unit="page" from="437" to="450" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
