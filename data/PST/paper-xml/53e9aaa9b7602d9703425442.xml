<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">RAP: A Real-Time Communication Architecture for Large-Scale Wireless Sensor Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Chenyang</forename><surname>Lu</surname></persName>
							<email>chenyang@cs.virginia.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22903</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Brian</forename><forename type="middle">M</forename><surname>Blum</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22903</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tarek</forename><forename type="middle">F</forename><surname>Abdelzaher</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22903</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">John</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
							<email>stankovic@cs.virginia.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22903</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tian</forename><surname>He</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Virginia Charlottesville</orgName>
								<address>
									<postCode>22903</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">RAP: A Real-Time Communication Architecture for Large-Scale Wireless Sensor Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">46BBF26C54670BBFF3F62700BC9AE6AD</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Large-scale wireless sensor networks represent a new generation of real-time embedded systems with significantly different communication constraints from traditional networked systems. This paper presents RAP, a new real-time communication architecture for large-scale sensor networks. RAP provides convenient, high-level query and event services for distributed micro-sensing applications. Novel location-addressed communication models are supported by a scalable and light-weight network stack. We present and evaluate a new packet scheduling policy called velocity monotonic scheduling that inherently accounts for both time and distance constraints. We show that this policy is particularly suitable for communication scheduling in sensor networks in which a large number of wireless devices are seamlessly integrated into a physical space to perform real-time monitoring and control. Detailed simulations of representative sensor network environments demonstrate that RAP significantly reduces the end-to-end deadline miss ratio in the sensor network.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>With the advances in MEMS devices and embedded processors and radios, it will soon be feasible to deploy large-scale sensor networks to perform distributed micro-sensing and control of physical environments <ref type="bibr" target="#b11">[11]</ref>. For example, a surveillance system may use a large network of acoustic sensors to detect and track vehicles in a security area. Similarly, biometric sensors can be deployed in airports to detect harmful bio-agents and issue alarms to command and control centers during potential bio-attacks. These smart sensors and actuators are equipped with low-power processors and shortrange radio transceivers <ref type="bibr" target="#b9">[9]</ref>. They will automatically form multi-hop ad hoc networks to communicate both among themselves and to remote base stations (e.g., PDA's).</p><p>Because distributed micro-sensing involves direct interaction with a physical environment, data communication in sensor networks often has timing constraints in the form of end-to-end deadlines. Surveillance may require the position of an intruder be reported to a command center within 15 sec so that pursuing actions can be initiated in time. Data in a system may have different deadlines due to different validity intervals. The validity intervals (and hence, update deadlines) of the locations of different intruders such as pedestrians and motor vehicles may depend on their movement speeds. For example, locations of tanks have shorter update deadlines than those of pedestrians. Similarly, the location of an intruder should have a shorter update deadline than the temperature measurement of a region because the former can change faster than the latter. Sensor network protocols should support real-time communication by minimizing the packet deadline miss ratio, i.e., the percentage of packets that meet their end-to-end deadlines.</p><p>While sensor networks share the notion of timing constraints with more traditional embedded systems, they differ in two respects. First, individual sensors are typically very small in size and resource capacity. Hence, the philosophy of sensor networks relies on resource dedication rather than sharing. In other words, individual sensor devices and nodes are likely to be dedicated for individual tasks, thereby eliminating much of the need for sophisticated CPU scheduling in a multitask environment.</p><p>Second, it is envisioned that sensor nodes will operate in groups, since individual nodes are too limited and unreliable to perform useful activities from the application's perspective. Group activities require coordination and communication among member nodes. Sensing results of groups need to be sent back to base stations through multi-hop communication. Thus, the main schedulable resource becomes the wireless com-munication channel. Progress of user-level activities and their ability to meet end-end deadlines are therefore determined by scheduling of the communication medium rather than scheduling of the processor. Towards that end, new real-time communication architectures are required for ad hoc wireless environments.</p><p>Multi-hop wireless communication scheduling differs from CPU scheduling in that it has an inherent notion of distance. In sensor networks, the distance is determined by the physical locations of source and destination. These locations impose distance constraints on messages, in addition to time constraints, calling for communication scheduling policies that are cognizant of both time and space.</p><p>The first contribution of this paper is RAP, a real-time communication architecture for large-scale wireless sensor networks. RAP provides a set of convenient, high-level query and event services to real-time distributed micro-sensing applications. Query and event services are based on novel location-addressed communication models supported by a scalable and lightweight network stack.</p><p>The second contribution of RAP is a novel Velocity Monotonic Scheduling (VMS) policy suitable for packet scheduling in sensor networks. VMS is based on a notion of packet requested velocity. Each packet is expected to make its end-to-end deadline if it can move toward the destination at its requested velocity, which reflects its local urgency. Compared with nonprioritized packet scheduling, VMS improves the deadline miss ratios of sensor networks by giving higher priority to packets with higher requested velocities. VMS can outperform deadline-based packet scheduling because velocity more accurately reflects the local urgency at each hop when packets with the same deadline have different distances to their destinations. Assuming that each sensor knows its own location (using GPS or other location services <ref type="bibr" target="#b8">[8]</ref>), the requested velocity can be determined locally. This property enables VMS to scale well in large-scale sensor networks.</p><p>The final contribution of this paper is a detailed simulation study of the real-time performance of several routing protocols and packet scheduling algorithms in a typical sensor network scenario. Our simulation experiments demonstrate that, for sensors far away from their base station, RAP reduces the deadline miss ratio from 90.0% to 17.9%, compared to existing wireless communication protocols (DSR over 802.11b). To our best knowledge, ours is the first detailed performance study on deadline issues in multi-hop wireless sensor network settings under overload conditions.</p><p>In the following sections, we discuss the key characteristics of sensor networks, present the design of RAP, report a set of simulation experiments with sensor network configurations, and conclude the paper by summarizing our key results and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Real-time Communication in Sensor Networks</head><p>In this section, we describe the characteristics of sensor networks and communication models on sensor networks. This analysis serves as a basis for our design of real-time communication protocols.</p><p>Sensor networks are an instance of mobile ad hoc networks (MANET) <ref type="bibr" target="#b10">[10]</ref> that have recently attracted a lot of interest and visibility due to their flexibility and the feasibility of their deployment at low costs. In general, mobile ad hoc networks depend on peer-to-peer communication protocols that do not require a fixed infrastructure such as centralized servers and access points.</p><p>Sensor networks are different from their traditional ad hoc wireless counterparts (composed of laptops and PDA's) in that they have a larger scale, higher density, smaller devices, and a tighter interaction with a physical environment. Energy conservation is critical in sensor networks because of their long lifetime and formfactor constraints, which preclude the use of large batteries or power supplies.</p><p>In most envisioned sensor network applications, a large number of sensors are deployed in an area and a small number of more powerful nodes (such as PDA's with Internet connections) form possibly mobile interface stations which serve as the entry points to the sensor network. In the following, we shall call such interface stations, base stations. A user may query the physical environment through such base stations. Alternatively she may also register for an event. The occurrence of the event will automatically trigger a specified query.</p><p>A query can specify timing requirements including rate, start time, duration, and end-to-end deadlines. For example, a user can register for a virus_found event in a rectangular area with coordinates <ref type="bibr" target="#b10">(10,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b20">20,</ref><ref type="bibr" target="#b20">20)</ref>, and specify a query on the event to report the density of the detected virus. If a virus is found, the density of the viruses should be reported to the base station from where they are found every 1.5 sec for a duration of 30 min. Every reading should reach the base station within an end-to-end deadline of 5 sec. Communication in sensor networks can suffer from "hot regions", i.e., areas where the network is seriously congested. Hot regions are often caused by numerous related events that synchronously trigger a large number of data flows toward the base station. Examples of related events include correlated measurement of the same environmental activity, or correlated environmental activities such as a group of new targets simultaneously entering a security area, or a bio-attack on a part of an airport. Maximizing the number of packets that make their deadlines in overload conditions is critical in sensor networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Design of RAP</head><p>We now present the design of RAP to support real-time communication in large-scale sensor networks. Given the unique characteristics of sensor networks, the goal of RAP includes the following:</p><p>• Provide general service APIs that are suitable for distributed micro-sensing and control in sensor networks</p><p>• Maximize the number of packets meeting their end-to-end deadlines The coordination service is responsible of dynamic group management and data aggregation among sensors (e.g., multiple sensors coordinate to determine the location of a target through triangulation). The coordination services are part of our on-going research and not addressed in this paper.</p><p>We now describe the Query/Event service APIs and the network protocol stack in detail in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Query/Event Service APIs</head><p>Applications may submit queries or register for events through a set of query/event service APIs. The API provides a high-level abstraction to applications by hiding the specific location and status of each individ-ual node. These APIs allow applications to specify the timing constraints of queries. The underlying layers of RAP are responsible for orchestrating the sensing and communications of relevant sensors to accomplish all query and event services.</p><p>RAP provides the following query/event service APIs.</p><p>• query{attribute_list, area, timing_constraints, querier_loc} Issue a query for a list of attributes in an area. A query has timing constraints. If a period is specified for a command, query results will be automatically sent from an area to the issuer of the query in every period. For example, the following query requires the average density of the viruses in an rectangular area <ref type="bibr" target="#b10">(10,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b12">12,</ref><ref type="bibr" target="#b12">12)</ref> be reported to the base station of the querier every 1.5 sec. Every reading should reach the base station within an end-to-end deadline of 5 sec. The query includes the location of its base station so that query results can be sent back using LAP. In this paper we assume the location of the base stations are fixed.</p><formula xml:id="formula_0">query { virus.count, area=<label>(10,10,12,12), period=1.5,deadline=5, base=(100,100) }</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• register_event{event, area, query}</head><p>Register for an event. A query is triggered once an event occurs. For example, the following API call registers a virus_count query for a virus_found event. If any viruses are found in a rectangular area with coordinates (0,0,100,100), returns the average density of the viruses of the 2×2 square area centered at the event location (Xevent,Yevent) every 1.5 sec. Every reading should reach the base station within an end-to-end deadline of 5 sec.</p><p>register_event { virusFound(0,0,100,100), query { virus.count, area=(Xevent-1,Yevent-1,Xevent+1,Yevent+1), period=1.5, deadline=5, base=(100,100) };</p><p>A query or event is sent to every node in the specified area. Query results are sent back to the base station based on its location provided by the query or event registration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Location-Addressed Protocol</head><p>LAP is a connectionless transport layer in the network stack. LAP is similar to UDP except that all messages are addressed by location instead of IP address. Three types of communication are supported by LAP: unicast, area multicast, and area anycast.</p><p>• Unicast delivers a message to a node that is closest to the destination location. Unicast can be used by sensors to send query results to base stations.</p><p>• Area multicast delivers a message to every node in a specified area. Area multicast can be used to register for an event or send a query to an area, for coordination among nodes in a local group.</p><p>• Area anycast delivers a message to at least one node in a specified area. Area anycast can also be used for sending a query to a node in an area. The node can initiate group formation and coordination in that area.</p><p>Since this paper is concerned with real-time issues in overload conditions, in the rest of this paper we focus on unicast from sensors to base stations because this form of communication contributes to most of the realtime traffic in sensor networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Geographic Forwarding</head><p>Since communication destinations are identified by geographic location, we assume the routing layer is aware of physical geography. A router can determine the physical location of the destination relative to itself and forward the packet in the general direction of the destination. Geographic forwarding (GF) <ref type="bibr" target="#b16">[16]</ref> has been proposed in earlier wireless literature and evaluated in traditional MANET environments.</p><p>More precisely, GF makes a greedy decision to forward a packet to a neighbor if 1) it has the shortest geographic distance to the packet's destination among all immediate neighbors; and 2) it is closer to the destination than the forwarding node. When such nodes do not exist, the GPSR protocol <ref type="bibr" target="#b16">[16]</ref> can be used to route packets around the perimeter of the void region. The only state on each node maintained by GF and GPSR is a table of the locations of immediate neighbors.</p><p>Because GF uses immediate neighborhood information to make localized routing decisions, it is highly scalable with regard to the number of nodes, network diameter, and the rate of change in topology <ref type="bibr" target="#b16">[16]</ref>. GF works best in sensor networks that usually have high node densities and support location-addressed communication. Location addressed communication means that GF can be used without a location directory ser-vice, which introduces extra management and communication overhead. High node density causes two desirable properties of GF in sensor networks. First, the greedy forwarding algorithm described above has a high success probability in finding a good path from source to destination resulting in efficient communication. Second, the number of hops is approximately proportional to the distance that a packet has to travel. Hence, the distance between a node and a packet's destination can serve as an indication of the packet's hop count.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Velocity Monotonic Scheduling</head><p>A key component of real-time communication architectures is the packet scheduling policy which determines the order in which incoming packets at a node are forwarded to an outgoing link. In existing ad hoc networks, packets are typically forwarded in FCFS order. FCFS scheduling does not work well in real-time networks where packets have different end-to-end deadlines and distance constraints. Instead, competing packets should be prioritized based on their local urgency. In the context of sensor networks, packet scheduling should be both deadline-aware and distance-aware. Deadline-aware means that a packet's priority should relate to its deadline. The shorter the deadline, the higher the packet priority. Distance-aware means that a packet's priority should relate to its distance from the destination. The longer the distance, the higher the packet priority.</p><p>An example is shown in Figure <ref type="figure" target="#fig_0">2</ref>. In scenario  Since packet priority should be decided based on both distance and deadlines, we propose Velocity Monotonic Scheduling (VMS). VMS assigns the priority of a packet based on its requested velocity. A packet with a higher requested velocity is assigned a higher priority. VMS improves the number of packets that meet their deadlines because it assigns the "right" priorities to packets based on their different urgencies on the current hop. VMS also solves the fairness problem described in <ref type="bibr" target="#b18">[18]</ref> in sensor networks because packets that are far away from the base station will tend to have higher priorities when it competes against other packets that are closer to the destination.</p><p>We investigate two priority assignment policies: Static Velocity Monotonic (SVM) and Dynamic Velocity Monotonic (DVM), depending on whether the requested velocity of a packet is updated dynamically in intermediate nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1.">Static Velocity Monotonic</head><p>SVM computes a fixed requested velocity at the sender of each packet. Assume a packet is sent from a sender at (x 0 ,y 0 ) to a destination at (x d ,y d ), and has an end-toend deadline D sec, then SVM sets its requested velocity to:</p><formula xml:id="formula_1">V = d i s ( x 0,y0,xd,yd)/D (<label>1</label></formula><formula xml:id="formula_2">)</formula><p>where dis(x 0 ,y 0 ,x d ,y d ) is the geographic distance between (x 0 ,y 0 ) and (x d ,y d ). The requested velocity of a packet is fixed on each hop.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2.">Dynamic Velocity Monotonic</head><p>DVM dynamically re-calculates the requested velocity of a packet upon its arrival at each intermediate node.</p><p>Assume a packet arrives at a node at location (x i ,y i ); its destination is at (x d ,y d ); it has an end-to-end deadline D sec, and its elapsed time, i.e., the time it has been in the network, is T i sec; its requested velocity V i at (x i ,y i ) is set to:</p><formula xml:id="formula_3">Vi = dis(xi,yi,xd,yd)/(D-Ti)<label>(2)</label></formula><p>At the sender node (x 0 ,y 0 ), the elapsed time T0=0 and the requested velocity is initialized to V=dis(x0,y0,xd,yd)/D. The requested velocity of a packet will be adjusted based on its actual progress (i.e., actual velocity). A packet's requested velocity increases by re-applying eq. 2 at subsequent nodes if its previous progress towards to the destination is slower (e.g., due to a hot region) than its previous requested velocity. On the other hand, its requested velocity decreases if it moves faster than its previous requested velocity. This is so this packet can give way to other more urgent packets.</p><p>Note that although clock synchronization simplifies its implementation, DVS can be implemented without clock synchronization. To do this, each packet contains a field as its elapse time counter. Each node increases the counter by the time the packet stays in it plus the transmission and propagation time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.3.">Priority Queue</head><p>Each packet is assigned a priority based on its requested velocity and queued at the network layer when there are multiple outstanding packets. Several options are available for implementing priority queues. One approach is to insert all packets into a single queue ordered by priority. When the queue us full, higher priority incoming packets overwrite lower priority ones. The benefit of this solution is that it accurately reflects the order of requested velocities, and allows all packets to share the same buffer regardless of their priority. The approach, however, requires implementing a data structure whose insertion time, in the worst case, grows logarithmically in the number of packets.</p><p>To bound the queue insertion overhead, another approach currently used in our simulation is to maintain multiple FIFO queues each corresponding to a fixed priority level. Each priority corresponds to a range of requested velocities. A packet is first mapped to a priority, and then inserted into the FIFO queue that corresponds to its priority. This approach is more efficient because no ordering needs to be performed for every incoming packet. The per-packet overhead is logarithmic only in the number of priority levels, not the number packets. To further reduce overhead, after a packet has been inserted in a priority queue, its requested velocity and priority is not updated based on eq. 2 until it reaches the next node.</p><p>Assuming that packets that miss their deadlines are useless, priority queues actively drop packets that have missed their deadlines to avoid wasting bandwidth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.">MAC-layer prioritization</head><p>Local prioritization at each individual node is not sufficient in wireless networks because packets from different senders can compete against each other for a shared radio communication channel. To enforce packet priorities, MAC protocols should provide distributed prioritization on packets from different nodes. Extensions (e.g., <ref type="bibr" target="#b1">[1]</ref>[15]) of the IEEE 802.11 wireless LAN protocol <ref type="bibr" target="#b18">[18]</ref> have been investigated to provide distributed prioritization. Recently EDCF has been specified in the proposed 802.11e standard to provide different transmission priorities <ref type="bibr" target="#b19">[19]</ref>.</p><p>In this paper we implement two extensions proposed by Aad and Castelluccia <ref type="bibr" target="#b1">[1]</ref>. We modified two components of the standard 802.11 implementation: the initial wait time after the channel becomes idle, and the backoff window increase function. These mechanisms are chosen because they introduce minimal overhead and can be ported to light-weight CSMA/CA protocols <ref type="bibr" target="#b23">[23]</ref> that are more suitable to sensor networks than 802.11. We now briefly describe the mechanisms. The detailed description and analysis of these mechanisms are available in <ref type="bibr" target="#b1">[1]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.1.">Initial Wait Time after Idle</head><p>802.11 sets a DIFS counter once the communication channel has become idle. Before sending an RTS (Request To Send) packet, a node will wait a random period of time between 0 and DIFS. To prioritize this process we set the DIFS parameter based on the packet priority:</p><formula xml:id="formula_4">DIFS = BASE_DIFS * PRIORITY</formula><p>Packets with a higher priority (corresponding to a smaller PRIORITY value) on average choose a smaller waiting period.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.2.">Backoff Increase Function</head><p>802.11 doubles its backoff window, CW, to extend a node's waiting period when a transmission collision occurs. We modified 802.11 to increase CW in accordance with the packet priority<ref type="foot" target="#foot_0">1</ref> : CW=CW*(2+(PRIORITY-1)/MAX_PRIORITY) MAX_PRIORITY is the maximum value of priority (corresponding to the lowest priority). The backoff counter of a node with a pending lower priority packet increases faster than a node with a pending packet with a higher priority.</p><p>The above two mechanisms give high priority packets high probability to get the channel in both the contention avoidance and contention phases.</p><p>In summary, RAP integrates a set of light-weight protocols to satisfy the following key requirements of large-scale sensor networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• RAP provides general query and event service</head><p>APIs as a convenient high-level service abstraction suited for distributed micro-sensing applications.</p><p>• RAP increases the number of packets meeting their end-to-end deadlines by prioritizing the transmission of contending packets based on their requested velocities.</p><p>• RAP scales well in large-scale sensor networks because it is composed of efficient and localized protocols and algorithms at every layer. The only states GF maintains are the locations of immediate neighbors. VMS determines a packet's priority only based on locally available information. No per-flow state is maintained inside the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Experimentation</head><p>We ran a set of simulation experiments to evaluate the aforementioned real-time packet scheduling and prioritization protocols on sensor networks for a biometric sensing application. We implemented GF, VMS, and the 802.11 extensions on the GloMoSim wireless network simulator <ref type="bibr" target="#b4">[4]</ref> developed by UCLA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Network configuration</head><p>We tuned the network parameters in reference of the Berkeley motes <ref type="bibr" target="#b9">[9]</ref>, a state-of-the art network sensors. We generated a square region of 136×136 m 2 divided into 100 13.6×13.6 m 2 grids. 100 nodes were simulated with one node randomly placed in each grid.</p><p>The other network parameters are listed as follows:</p><p>• Radio communication radius: 30.5 m</p><p>• Packet size: 32 -160 B</p><p>• Bandwidth: 200 kbps. Current version of MICA motes available to us supports a bandwidth of 50kbps. Future versions are expected to have a higher capacity. Due to limitations of the Glo-MoSim simulator, we had to send data flows on top of the UDP/IP stack that contribute to 28 B overhead. In a real implementation we expect to eliminate the UDP/IP headers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Application Workloads</head><p>We simulate a bio-sensor application that monitors viruses in an area. Users can register for events and query bio-sensors, which generate periodic data flows to a base station. Data flows have different rate and timing requirements. We assume that a base-station sends two different queries: count and detail to various locations. A user registers a count query with a virusFound event in the whole 136×136 m 2 squared area. A virusFound event is generated when a grid detects a specified virus at location (Xevent,Yevent). This event triggers a query virus_count, which periodically reports the density of the detected virus in the area (Xevent-1,Yevent- 1,Xevent+1,Yevent+1) to the base station.</p><p>A user can also directly submit a detail query to get more detailed data collected at a location. Detail generates periodic flows that send detailed information about a grid to the base station for further analysis. While a large number of count flows may be generated (e.g., during a bio-attack), the user may only query the details of a small number of important grids. We assume that packets (called count packets) returned by count queries have longer deadlines than packets (called detail packets) returned by detail queries. The sizes of count and detail packets are 32 B and 160B, respectively.</p><p>We simulate a scenario that correlated events (i.e., a bio-attack) result in two hot regions each covering approximately a square of 54.4×54.4 m 2 . A hot region locates at the southwest corner. The other hot region is close to the center of the region. The two hot regions are on a same diagonal to the base station to generate a worst-case congestion situation. Each hot region generates multiple flows to a base station on the northeast corner of the region. In addition, a small number of other flows are generated from other randomly picked locations. A total of 31 nodes send CBR flows representing count flows, with a subset of 15 of these nodes also sending CBR flows representing detail flows. All flows are started with a uniformly randomized time within a window of 5 sec to simulate synchronous events common in sensor networks. We varied the rates and deadlines between the count and detail flows to better understand the effect of these parameters on different protocols. The table below lists the configurations that we tested in our simulations. The rates and number of flows were chosen such that the network is close to its breaking point where packets start to miss their deadlines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Implementation of Protocols</head><p>Before we investigate packet scheduling algorithms, an important design decision in RAP is the routing protocol. Our investigations focus on two routing protocols, Dynamic Source Routing (DSR) <ref type="bibr" target="#b12">[12]</ref> and GF <ref type="bibr" target="#b16">[16]</ref>.</p><p>DSR is an ad hoc routing protocol designed for traditional ID-based MANET. Previous performance studies <ref type="bibr" target="#b5">[5]</ref> showed that DSR outperforms other major IDbased routing protocols in term of packet delivery ratio. GF is a location-based routing protocol suitable for location-addressed communication. While DSR and GF are not new, they have not been previously studied in term of deadline miss ratio in sensor networks. We compare their deadline miss ratios in Section 4.4.</p><p>At the packet scheduling layer we compare SVM and DVM against two baselines: FCFS and a deadlinebased scheduling algorithm that we call DS. DS assigns a fixed priority to packets based on their end-to-end deadlines. In our workload, all count packets are assigned priority 3 (the lowest), and all detail packets are assigned priority 1 (the highest). At the MAC layer, 802.11 and its extensions were used in combination with other protocols. We now list the combination of protocols in the following table. The first column contains the acronyms that are used to represent the combinations in the same row.</p><p>DS, SVM, and DVM actively dropped packets that already missed their deadlines, while DSR and GF did not actively drop packets to be consistent with original specifications. Only greedy forwarding is implemented for GF. We did not implement GPSR. The beacon period of GF is 5 sec.</p><p>The network-layer queues can hold a total of 300 packets for each configuration. DSR and GF had a single FIFO queue with 300 entries, while DS, SVM, and DVM each had three FIFO queues corresponding to different priorities. The mapping from a velocity to a priority is shown in the following table.</p><p>Velocity Range (m/s)</p><formula xml:id="formula_5">Priority SVM DVM 1 (10, ∞)<label>(40, ∞) 2 (5, 10] (10, 40] 3 (0, 5] (0, 10]</label></formula><p>The velocity ranges in SVM are chosen to balance the number of flows in each priority level. The velocity ranges in DVM initially assigned priority 2 or 3 to all flows. This allowed raising some packets' priorities to priority 1 if they are delayed.</p><p>Six repeated runs were made for each of the nine combinations of the rates and deadlines. The main performance metric is the deadline miss ratio, i.e., the percentage of generated packets that are received by the base station within their deadlines. Each data point in </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">Routing: DSR and GF</head><p>First we compare the overall deadline miss ratio of DSR/FCFS and GF/FCFS (see Figure <ref type="figure" target="#fig_1">3</ref>). DSR has a significantly higher miss ratio than GF. We found that DSR lost a large number of packets due to queue overflow, while GF lost no packets due to queue overflow. The high percentage of packet drop in DSR is caused by its aggressive route-caching. In DSR, each node caches overheard routes. When a node receives a route discovery packet from another node, it checks its route cache and informs the sender of the requested route if it is available in its route cache. In the hot regions in our network, only the first flow needs to flood the network to acquire a route to the base station. All the later flows from the same region will be informed of the existing route causing most packets from the hot region to go through the same route (close to the diagonal line in our network). In overload conditions, nodes on the shared route ran out of queuing space and lost packets. This problem can be common in sensor networks because of their correlated traffic patterns. In such networks, related events (i.e., a bio-attack) can start a large number of flows from a same region almost synchronously. GF does not have the overflow problem because it delivers a packet through a straight line from its source to the base station. Packets from different sensors are routed through different nodes because the source sensors have different directions toward the base station. This an important reason that GF is more suitable than DSR in sensor networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.">Packet scheduling</head><p>Now we compare different packet scheduling algorithms. The overall deadline miss ratios for deadlines of (5,10) s are presented in Figure <ref type="figure" target="#fig_2">4a</ref>. The overall deadline miss ratio of DSR/FCFS is not shown in this figure because it is significantly higher than all other protocols and cannot fit in the scale (the maximum miss ratio of 0.5) of the graph. Since packets close to the base station are more likely to meet their deadlines and tend to "dilute" the difference between different algorithms, we also present in Figure <ref type="figure" target="#fig_2">4b</ref> the miss ratio of the subset of flows from the farther hot region at the southwest corner.</p><p>From both figures, all prioritization-based packet scheduling (DS, SVM, and DVM) achieved miss ratios that were significantly lower than the protocols using FCFS. In particular GF/SVM achieved a significantly lower deadline miss ratio than all other protocols. As shown in Figure <ref type="figure" target="#fig_2">4b</ref>, when the highest overall rate was 66.6 packets/s, only 17.9±3.9% of all packets from the farther hot region missed their deadlines for GF/SVM, compared with a miss ratio of 77.6±1.7% for GF/FCFS, 46.0±0.6% for GF/DS. This result demonstrates SVM's advantage of considering both distance and deadlines in packet prioritization. The miss ratios of all flows and the flows from the remote hot regions with deadlines (5, 25) s and (5, 50) s are presented in Figure <ref type="figure">5ab</ref> and Figure <ref type="figure">6ab</ref>, respectively. All velocity-based and deadline-based packet scheduling still significantly outperform GF and DSR with FCFS scheduling. Moreover, SVM consistently achieves the lowest miss ratio in both cases. The difference between SVM and DVM decreases as the difference between deadlines of the two types of flows is increased. DS and SVM perform almost identically when deadline is <ref type="bibr" target="#b5">(5,</ref><ref type="bibr">50)</ref> s. This conforms to our intuition. While the distances from each sensor to the base station stays the same, the bigger differences between the deadlines of detail and count flows become a dominant factor in requested velocity. It is interesting to note that DVM did not perform as well as SVM. Although the implementation of only three priority levels reduced the flexibility of DVM, we found that it was not the cause of the unsatisfactory performance of DVM. Replacing the three priority queues with a single packet queue ordered by velocity had similar performance results in our additional experiments (not included in this paper due to space limitations). DVM's performance may be caused by the particular workloads in our experiments that all faraway flows travel through the same hot regions, and hence there is little need for priority adjustment in intermediate nodes. We plan to further investigate DVM in environments where flows suffer from different degrees of congestions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1.">Distance fairness</head><p>We find that SVM achieves better fairness to flows from sensors far away from the base station. This form of fairness is important to sensor networks because it affects how well sensor networks can scale. A sensor network cannot provide sufficient service if all remote sensors cannot report to the base station in time! We show the fairness by plotting the miss ratio of packets as a function of its sender's distance from the base station in a typical run with the highest rate in Figure <ref type="figure">7</ref>. GF/FCFS significantly discriminates against remote sensors. Almost all packets that are from sensors more than 120 m away from the base station miss their deadlines. In contrast, SVM reduces the deadline miss ratio of remote sensors to about 30%. SVM is also fairer than DS and DVM that both achieved a miss ratio of about 60% for those packets (not shown due to space limitations).</p><p>In summary, SVM consistently achieves lower deadline miss ratios than both FCFS and the deadline based scheduling policy in all experiments. The performance improvement of SVM is especially significant for data flows generated by sensors far away from their base station. Compared to FCFS and DS, SVM reduces the deadline miss ratio of far-away flows from 90.0% and 46.0%, respectively, to only 17.9% with the maximum tested load. By providing fairer service to remote sensors, SVM can scale significantly better than FCFS and DS in large sensor networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Related Work</head><p>There are significant research results on real-time communications on single-hop wired LANs (e.g., <ref type="bibr" target="#b24">[24]</ref>[25]), multi-hop wired LANs (e.g., <ref type="bibr" target="#b14">[14]</ref>), ATM (e.g., <ref type="bibr">[17][18]</ref>), and the Internet (e.g., <ref type="bibr">[13][22]</ref>[21]). A good survey about real-time network architecture for packet-switched network is <ref type="bibr" target="#b3">[3]</ref>. However, there have been few published works on real-time multi-hop sensor networks, which has significant different constraints from previous real-time networks.</p><p>Directed diffusion <ref type="bibr" target="#b11">[11]</ref> is a data-driven communication paradigm for sensor networks. Users can broadcast interests to sensor networks. Sensors whose data match an interest report their data to the node that posts the interest. Our event service is similar to the interests in directed diffusion. The difference is that RAP allows users to specify the deadlines of queries on events.</p><p>RAP's network protocol stack priorities the transmission of packets based on their requested velocities. In contrast, directed diffusion does not prioritize transmission. It does not directly support locationaddressed communication.</p><p>There has been significant research on routing protocols targeted at traditional MANET systems with a smaller scale than sensor networks. Broch et. al. <ref type="bibr" target="#b5">[5]</ref> presented detailed simulation results of four representative routing protocols in small MANET with radio communication similar to wireless LAN cards. Their results showed that reactive routing protocols including DSR <ref type="bibr" target="#b12">[12]</ref> and AODV <ref type="bibr" target="#b21">[21]</ref> introduce less overhead packets and achieve higher data throughput. However, DSR and AODV flood the network to establish a route. This may introduce high overhead for large-scale sensor networks. Flooding can be partly avoided through aggressive caching of overheard routes on each node, but it can cause the queue overflow problem as described in Section 4.4. DSR writes the IDs of every node on the route to the packet header, which can cause significant overhead in sensor networks with many hops. Karp and Kung <ref type="bibr" target="#b16">[16]</ref> presented geographic forwarding protocols and demonstrated that they scale better than DSR in term of network diameters and moving speed.</p><p>At the MAC layer Woo and Culler <ref type="bibr" target="#b23">[23]</ref> proposed a MAC protocol with adaptive rate control to achieve fairness among nodes regardless of their distance from the base station in a sensor network. However, their MAC does not provide prioritization for packets with different velocities. Timing constraints are not considered in their protocol.</p><p>Several prioritization and real-time architectures of wireless LANs have been proposed in the literature. In <ref type="bibr" target="#b2">[2]</ref> Adamou et. al. presented a fair scheduling algorithm on Wireless LAN. Choi and Shin <ref type="bibr" target="#b6">[6]</ref> proposed a Time-Division Duplexed LAN architecture for both real-time and non-real time communication. These solutions are not designed for multi-hop networks. Kanodia et. al. <ref type="bibr" target="#b15">[15]</ref> proposed a MAC-layer prioritization mechanism for 802.11. Their solution depends on the RTS/CTS mechanism and requires all nodes to overhear to RTS/CTS even when they are not sending or receiving data. The overhearing requirement prevents nodes from sleeping, which can be vital for improving the power efficiency in sensor networks <ref type="bibr" target="#b23">[23]</ref>.</p><p>Our work on VMS is inspired by coordinated multihop scheduling <ref type="bibr" target="#b15">[15]</ref> developed by Kanodia et. al. They proposed three priority index assignment policies for multi-hop wireless networks. The Time-To-Live (TTL) policy assigns priority to a packet based on its TTL counter, while each node decreases TTL by the time it spent in that node. The TTL-based priority can dynamically adapt packet priorities based on its progress. We note that TTL-based priority may not handle scenario 2 in Figure <ref type="figure" target="#fig_0">2</ref> well because A and B's packets may have a similar TTL despite the fact that they have different distances to travel after E. The fixed per-node allocation decreases the priority index on each node by a per-node constant. The uniform delay budget (UDB) allocation assigns a fixed priority index to a packet based on its end-to-end deadline divided by the end-toend hop count. UDB essentially utilizes per-hop velocity computed based on end-to-end hop count, while VMS is based on geographic velocity computed based on the geographic distance to the destination. UDB requires routing protocols to provide the end-to-end hop count for each flow at the cost of route discovery and maintenance overhead. UDB cannot work with GF, which does not provide hop count. In comparison, VMS does not require hop count and is a perfect match with GF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>Real-time communication is a critical service for future sensor networks to provide distributed micro-sensing in physical environments. We present RAP, a new realtime communication architecture for large-scale sensor networks. RAP provides convenient, high-level query and event services for distributed micro-sensing applications. Novel location-addressed communication models are supported by a scalable and light-weight network stack. We exploit the notion of velocity in real-time communication protocols on sensor networks. Velocity reflects the local urgency of a packet by capturing both key constraints in sensor networks, namely, the end-to-end deadline and the communication distance. We present Velocity-Monotonic Scheduling as a suitable scheduling policy to minimize deadline miss ratios in multi-hop sensor networks. Detailed simulations of sensor network environments demonstrate that RAP significantly reduces both the end-to-end deadline miss ratio in the sensor network. In the future we will investigate the schedulability analysis and admission control algorithms for VMS in order to provide deadline guarantees. Security and reliability aspects of the protocols are also important research directions. We will develop coordination protocols in sensor networks and implement RAP on Berkeley motes <ref type="bibr" target="#b9">[9]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2</head><label>2</label><figDesc>Figure 2 Scenarios of distance-aware scheduling</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3</head><label>3</label><figDesc>Figure 3Overall deadline miss ratio of DSR and GF with deadlines<ref type="bibr" target="#b5">(5,</ref><ref type="bibr" target="#b10">10)</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4</head><label>4</label><figDesc>Figure 4Deadline miss ratio with deadlines<ref type="bibr" target="#b5">(5,</ref><ref type="bibr" target="#b10">10)</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 Figure 6 Figure 7</head><label>567</label><figDesc>Figure 5Deadline miss ratio with deadlines<ref type="bibr" target="#b5">(5,</ref><ref type="bibr" target="#b25">25)</ref> </figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The backoff function is slightly changed from the original extension to mitigate its stability problem observed in<ref type="bibr" target="#b1">[1]</ref>.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We thank Sang Son and Chengzhi Li for their helpful discussions. The work reported in this paper was sup-ported, in part, by the DARPA NEST program under grant F33615-01-C-1905, and the DoD MURI program administered by the ONR under Grant N00014-01-1-0576.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Differentiation Mechanisms for</title>
		<author>
			<persName><forename type="first">I</forename><surname>Aad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Castelluccia</surname></persName>
		</author>
		<idno>IEEE 802.11</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2001-04">2001. April 2001</date>
			<pubPlace>Anchorage, Alaska</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Fair Real-time Traffic Scheduling over A Wireless LAN</title>
		<author>
			<persName><forename type="first">M</forename><surname>Adamou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd IEEE Real-Time Systems Symposium, RTSS</title>
		<meeting>the 22nd IEEE Real-Time Systems Symposium, RTSS<address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-12-03">2001. December 3-6, 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Real-Time Communication in Packet-Switched Networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Aras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Kurose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Reeves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schulzrinne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE</title>
		<meeting>of the IEEE</meeting>
		<imprint>
			<date type="published" when="1994-01">Jan. 1994</date>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="page" from="122" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">GloMoSim: A Scalable Network Simulation Environment</title>
		<author>
			<persName><forename type="first">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Takai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ahuja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bagrodia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">UCLA Computer Science Department Technical Report</title>
		<imprint>
			<biblScope unit="volume">990027</biblScope>
			<date type="published" when="1999-05">May 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A Performance Comparison of Multi-Hop Wireless Ad Hoc Network Routing Protocols</title>
		<author>
			<persName><forename type="first">J</forename><surname>Broch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jetcheva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking</title>
		<meeting>the Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking<address><addrLine>Dallas, TX</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1998-10">Mo-biCom 1998. October 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A Unified Wireless LAN Architecture for Real-Time and Non-Real-Time Communication Services</title>
		<author>
			<persName><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2000-02">February 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">MICA measurement systems</title>
		<author>
			<persName><surname>Crossbow</surname></persName>
		</author>
		<ptr target="http://www.xbow.com/Products/Product_pdf_files/MICA%20data%20sheet.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Location Systems for Ubiquitous Computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="57" to="66" />
			<date type="published" when="2001-08">August 2001</date>
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">System Architecture Directions for Network Sensors</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Szewczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hollar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pister</surname></persName>
		</author>
		<idno>ASPLOS 2000</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<ptr target="http://www.ietf.org/html.charters/manet-charter.html" />
		<title level="m">IETF Working Group on Mobile Ad Hoc Networks</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Directed Diffusion: A Scalable and Robust Communication Paradigm for Sensor Networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Intanagonwiwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Sixth Annual International Conference on Mobile Computing and Networks (MobiCOM 2000)</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Dynamic Source Routing in Ad Hoc Wireless Networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mobile Computing</title>
		<editor>
			<persName><forename type="first">Tomasz</forename><surname>Imielinski</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Hank</forename><surname>Korth</surname></persName>
		</editor>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="153" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Exact Admission Control in Networks with Bounded Delay Services</title>
		<author>
			<persName><forename type="first">J</forename><surname>Liebeherr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Wrege</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ferrari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Real-time Communication in Multi-hop Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kandlur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ferrari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="page" from="1044" to="1056" />
			<date type="published" when="1994-10">October 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Distributed Multi-Hop Scheduling and Medium Access with Delay and Throughput Constraints</title>
		<author>
			<persName><forename type="first">V</forename><surname>Kanodia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sabharwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sadeghi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">W</forename><surname>Knightly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Mobile Computing and Networking</title>
		<meeting><address><addrLine>Rome, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-07">2001. July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Greedy Perimeter Stateless Routing for Wireless Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Kung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth Annual ACM/IEEE International Conference on Mobile Computing and Networking (MobiCom 2000)</title>
		<meeting>the Sixth Annual ACM/IEEE International Conference on Mobile Computing and Networking (MobiCom 2000)<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August, 2000</date>
			<biblScope unit="page" from="243" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Providing Deterministic Delay Guarantees in ATM Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kweon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1998-12">December 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Static Priority Scheduling for ATM Networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bettati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Real-Time Systems Symposium</title>
		<meeting>of IEEE Real-Time Systems Symposium</meeting>
		<imprint>
			<date type="published" when="1997-12">Dec. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<author>
			<persName><forename type="first">S</forename><surname>Mangold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>May</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hiertz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stibor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the European Wireless</title>
		<meeting>the European Wireless<address><addrLine>Florence, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-02">February 2002</date>
			<biblScope unit="volume">802</biblScope>
			<biblScope unit="page" from="32" to="39" />
		</imprint>
	</monogr>
	<note>Wireless LAN for Quality of Service</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">11 Handbook -a Designer&apos;s Companion</title>
		<author>
			<persName><forename type="first">B</forename><surname>O'hara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Petrick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<biblScope unit="volume">802</biblScope>
			<date type="published" when="1999">1999</date>
			<publisher>IEEE Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Providing Guaranteed Services Without Per Flow Management</title>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Providing Absolute Differentiated Services for Real-Time Applications in Static-Priority Scheduling Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Xuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bettati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhao</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>IEEE IN-FOCOM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A Transmission Control Scheme for Media Access in Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName><surname>Culler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM/IEEE International Conference on Mobile Computing and Networks (MobiCOM</title>
		<meeting><address><addrLine>Rome, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-07">2001. July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A Window Protocol for Transmission of Time-Constrained Messages</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ramamritham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1186" to="1203" />
			<date type="published" when="1990-09">Sept. 1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Design and Implementation of Efficient Message Scheduling for Controller Area Network</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Zuberi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2000-02">February 2000</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
