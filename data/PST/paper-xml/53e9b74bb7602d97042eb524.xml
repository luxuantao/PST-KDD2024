<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Honey bee behavior inspired load balancing of tasks in cloud computing environments</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Dhinesh Babu</surname></persName>
							<email>lddhineshbabu@vit.ac.in</email>
							<affiliation key="aff0">
								<orgName type="department">School of Information Technology and Engineering</orgName>
								<orgName type="institution">VIT University</orgName>
								<address>
									<settlement>Vellore</settlement>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">P</forename><surname>Venkata</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computing Science and Engineering</orgName>
								<orgName type="institution">VIT University</orgName>
								<address>
									<settlement>Vellore</settlement>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Honey bee behavior inspired load balancing of tasks in cloud computing environments</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">882963C13BDD49F5A368EF1E0343FE37</idno>
					<idno type="DOI">10.1016/j.asoc.2013.01.025</idno>
					<note type="submission">ASOC 1894 1-12 Received 30 August 2012 Received in revised form 28 December 2012 Accepted 30 January 2013</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Load balancing</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Scheduling of tasks in cloud computing is an NP-hard optimization problem. Load balancing of nonpreemptive independent tasks on virtual machines (VMs) is an important aspect of task scheduling in clouds. Whenever certain VMs are overloaded and remaining VMs are under loaded with tasks for processing, the load has to be balanced to achieve optimal machine utilization. In this paper, we propose an algorithm named honey bee behavior inspired load balancing (HBB-LB), which aims to achieve well balanced load across virtual machines for maximizing the throughput. The proposed algorithm also balances the priorities of tasks on the machines in such a way that the amount of waiting time of the tasks in the queue is minimal. We have compared the proposed algorithm with existing load balancing and scheduling algorithms. The experimental results show that the algorithm is effective when compared with existing algorithms. Our approach illustrates that there is a significant improvement in average execution time and reduction in waiting time of tasks on queue.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Cloud computing is an entirely internet-based approach where all the applications and files are hosted on a cloud which consists of thousands of computers interlinked together in a complex manner.</p><p>Cloud computing incorporates concepts of parallel and distributed computing to provide shared resources; hardware, software and information to computers or other devices on demand. These are emerging distributed systems which follows a "pay as you use" model. The customer need not buy the software or computation platforms. With internet facility, the customer can use the computation power or software resources by paying money only for the duration he/she has used the resource. This forces the conventional software licensing policies to change and avoids spending of money for the facilities the customer does not use in a software package.</p><p>The customer is interested in reducing the overall execution time of tasks on the machines. The processing units in cloud environments are called as virtual machines (VMs). In business point of view, the virtual machines should execute the tasks as early as possible and these VMs run in parallel. This leads to problems in scheduling of the customer tasks within the available resources.</p><p>The scheduler should do the scheduling process efficiently in order L.D. Dhinesh Babu, P. Venkata Krishna / Applied Soft Computing xxx (2013) xxx-xxx</p><p>In cloud computing environments, whenever a VM is heavily loaded with multiple tasks, these tasks have to be removed and submitted to the under loaded VMs of the same data center. In this case, when we remove more than one task from a heavy loaded VM and if there is more than one VM available to process these tasks, the tasks have to be submitted to the VM such that there will be a good mix of priorities i.e., no task should wait for a long time in order to get processed. Load balancing is done at virtual machine level i.e., at intra-data center level.</p><p>Our approach suggests that load balancing in cloud computing can be achieved by modeling the foraging behavior of honey bees. This algorithm is derived from a detailed analysis of the behavior that honey bees adopt to find and reap food. In bee hives, there is a class of bees called the scout bees which forage for food sources, upon finding one, they come back to the beehive to advertise this using a dance called waggle/tremble/vibration dance. The display of this dance, gives the idea of the quality and/or quantity of food and also its distance from the beehive. Forager bees then follow the Scout Bees to the location of food and then begin to reap it.</p><p>They then return to the beehive and do a waggle or tremble or vibration dance to other bees in the hive giving an idea of how much food is left and hence resulting in either more exploitation or abandonment of the food source.</p><p>In the same manner, the removed tasks from over loaded VMs are considered as the honey bees. Upon submission to the under loaded VM, the task will update the number of various priority tasks and load of that particular VM to all other waiting tasks. This will be helpful for other tasks in choosing their virtual machine based on load and priorities. Whenever a high priority task has to be submitted to other VMs, it should consider the VM that has minimum number of high priority tasks so that the particular task will be executed at the earliest. Since all VMs will be sorted in ascending order based on load, the task removed will be submitted to under loaded VM. In essence, the tasks are the honey bees and the VMs are the food sources. Loading of a task to a VM is similar to a honey bee foraging a food source (a flower or a patch of flowers). When a VM is overloaded i.e., similar to the honey getting depleted at a food source, the task will be scheduled to an under loaded VM similar to a foraging bee finding a new food source. This removed task updates the remaining tasks about the VM status similar to the waggle/tremble/vibration dance performed by the honey bees to inform other honey bees in the bee hive. This task will update the status of the VM i.e., how many tasks are being processed by the VM and about the number and details of high priority tasks currently processed by the VM in a manner similar to the bees finding an abundant food source updating the other bees in the bee hive through its waggle dance. This updating will give a clear idea in deciding which task should be assigned to which VM based on the availability and load of the VMs similar to which honey bees should visit which food source based on whether honey is available at a flower patch or not. The proposed algorithm works well for load balancing of tasks in cloud computing environments.</p><p>The specific contributions of this paper include  is a distributed strategy with local decision making. This system transforms the Grid to tree structure independent of Grid topological structure complexity. The system will use this tree for load balancing.</p><p>In <ref type="bibr" target="#b8">[9]</ref>, A Comparative Study into Distributed Load Balancing Algorithms for Cloud Computing is presented. This paper considers three potentially viable methods for load balancing in large scale cloud systems. Firstly, a nature-inspired algorithm may be used for self-organization, achieving global load balancing via local server actions. Secondly, self-organization can be engineered based on random sampling of the system domain, giving a balanced load across all system nodes. Thirdly, the system can be restructured to optimize job assignment at the servers. Recently numerous natureinspired networking and computing models have received a lot of research attention in seeking distributed methods to address increasing scale and complexity in such systems.</p><p>The honey-bee foraging solution in <ref type="bibr" target="#b2">[3]</ref>, is investigated as a direct implementation of a natural phenomenon. Then, a distributed, biased random sampling method that maintains individual node loading near a global mean measure is examined. Finally, an algorithm for connecting simile services by local rewiring is assessed as a means of improving load balancing by active system restructuring. In case of load balancing, as the web servers demand increases or decreases, the services are assigned dynamically to regulate the changing demands of the user. The servers are grouped under virtual servers (VS), each VS having its own virtual service queues.</p><p>Each server processing a request from its queue calculates a profit or reward, which is analogous to the quality that the bees show in their waggle dance.</p><p>In <ref type="bibr" target="#b3">[4]</ref>, Dynamic Load Balancing Strategy for Grid Computing is presented addressing the problem of load balancing in Grid computing. As in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref> this paper also proposes a load balancing model based on a tree representation of a Grid. This load balancing strategy has two main objectives: (i) Reduction of the mean response time of tasks submitted to a Grid; and, (ii) Reduction of the communication costs during task transferring. This strategy deals with three layers of algorithms (intra-site, intra-cluster and intra-grid).</p><p>Load balancing algorithms can be defined based on the implementation of the following policies <ref type="bibr" target="#b11">[12]</ref>:</p><p>• Information policy: specifies what workload information to be collected, when it is to be collected and from where.</p><p>• Triggering policy: determines the appropriate period to start a load balancing operation.</p><p>• Resource type policy: classifies a resource as server or receiver of tasks according to its availability status.</p><p>• Location policy: uses the results of the resource type policy to find a suitable partner for a server or receiver.</p><p>• Selection policy: defines the tasks that should be migrated from overloaded resources (source) to most idle resources (receiver).</p><p>Load Balancing can also be classified into more categories based on different behaviors of load balancing algorithms <ref type="bibr" target="#b4">[5]</ref>: Centralized vs. distributed load balancing and application-level vs. system-level load balancing</p><p>In <ref type="bibr" target="#b13">[14]</ref>, A Routing Load Balancing Policy for Grid Computing Environments is presented. It uses routing concepts from computer networks to define a neighborhood and search the most adequate computers to divide applications' workload. This algorithm is designed to equally distribute the workload of tasks of parallel applications over Grid computing environments. Route algorithm is indicated for environments where there are several heterogeneous computers and parallel applications are composed of multiple tasks. When dealing with large scale systems, an absolute minimization of the total execution time is not the only objective of a load balancing strategy. The communication cost, induced by load redistribution, is also a critical issue. For this purpose, Yagoubi proposes in <ref type="bibr" target="#b15">[15]</ref>, a hierarchical load balancing model as a new 260 framework to balance computing load in a Grid. This model suffers 261 from bottlenecks. In <ref type="bibr" target="#b25">[24]</ref>, a Mathematical model of cloud comput-262 ing framework using fuzzy bee colony optimization technique is 263 presented. Honey Bee colony algorithm is used for web services in 264 web servers that are scattered. 274 <ref type="bibr" target="#b29">[28]</ref> deals with radial distribution system network reconfiguration Q3 275 problem. This paper presents a method for determining the sec-276 tionalizing switch to be operated in order to solve the distribution 277 system loss minimization problem. ABC algorithm were used in 278 many fields such as digital signal processing <ref type="bibr" target="#b30">[29]</ref>, leaf-constrained 279 minimum spanning tree problem <ref type="bibr" target="#b31">[30]</ref>, flow shop scheduling prob-280 lem <ref type="bibr" target="#b32">[31]</ref>, block matching algorithm for motion estimation <ref type="bibr" target="#b42">[40]</ref>,</p><p>281 optimization <ref type="bibr" target="#b45">[43]</ref> and inverse analysis problems <ref type="bibr" target="#b33">[32]</ref>. Tsai et al.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>282</head><p>present an interactive artificial bee colony supported passive con-283 tinuous authentication system <ref type="bibr" target="#b44">[42]</ref>.  (naive) bees to their foraging targets. In <ref type="bibr" target="#b40">[38]</ref>, authors have proposed 295 Load balancing using bees algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>296</head><p>Honey bee behavior is also used in web services. In <ref type="bibr" target="#b21">[20]</ref>, "On  A model of self-organization that takes place within a colony of 308 honey bees has been presented in <ref type="bibr" target="#b35">[34]</ref>. This Insect foraging tech-309 nique is used in the field of robotics. The main principles of social 310 insect foraging behavior can find an application in a swarm of inex-311 pensive insect-like robots <ref type="bibr" target="#b38">[36]</ref>  <ref type="bibr" target="#b39">[37]</ref>. Behavior inspired Load Balancing algorithm. The proposed algorithm is completely inspired by the natural foraging behavior of honey bees and is illustrated in Fig. <ref type="figure" target="#fig_1">2</ref>.</p><p>A task removed from overloaded VM has to find suitable under loaded VMs it can be allocated to. It has two possibilities i.e., either it finds the VM set (Positive signal) or it may not find the suitable VM (negative signal). There could be more than one VM (a set of VMs for allocation) which can accept this task. Now the task has to find best among these VMs based on the QoS criteria called task priority i.e., task finds the VM which has a less number of tasks with same kind of priority (high priority tasks finds the VM which has less number of high priority tasks). We call it as fight for the VM among tasks. When this fight is over, the winning task is allocated to the respective VM found and the details are updated.</p><p>If a task does not find a suitable VM, it goes for delay in allocation, during which it gets experience and it will start listening the information updates by other tasks (similar to honey bees listening various dances). Once it confirms the information, the process starts from finding the VM sets and after successful VM set identification, it will fight with other competing tasks to find it's most suitable VM and gets allocated to it. Information is updated once it ends its fight with other tasks (whether it loses or wins). As newer tasks arrive, the cycle starts until all tasks are allocated to VMs and the scheduling system is well balanced based on load as well as priorities.   Makespan can be defined as the overall task completion time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>379</head><p>We denote completion time of task T i on VM j as CT ij . Hence, the 380 makespan is defined as the following function <ref type="bibr" target="#b18">[18]</ref>:</p><formula xml:id="formula_0">381 Makespan = max{CT ij |i ∈ T, i = 1, 2, . . . n and j ∈ VM, 382 j = 1, 2, . . . m}<label>(1)</label></formula><p>Response time is the amount of time taken between submission of 384 a request and the first response that is produced. The reduction in</p><formula xml:id="formula_1">385</formula><p>waiting time is helpful in improving responsiveness of the VMs. as R in the model. We schedule non-preemptive independent tasks to these VMs. Non-preemptive tasks are denoted as npmtn. Nonpreemption of a task means that processing of that task on a virtual machine cannot be interrupted (assuming that failure does not occur).</p><p>We denote finishing time of a task T i by CT i . Our aim is to reduce the makespan which can be denoted as CT max . So our model is R|npmtn|CT max .</p><p>Processing time of a task T i on virtual machine VM j can be denoted as P ij .</p><p>Processing time of all tasks in a VM j can be defined by Eq. ( <ref type="formula" target="#formula_2">2</ref>).</p><formula xml:id="formula_2">P j = n i=1 P ij j = 1, . . . , m<label>(2)</label></formula><p>By minimizing CT max , we get Eq. ( <ref type="formula" target="#formula_3">3</ref>). From Eq. ( <ref type="formula" target="#formula_2">2</ref>) and ( <ref type="formula" target="#formula_3">3</ref>) we can imply Eq. ( <ref type="formula" target="#formula_4">4</ref>).</p><formula xml:id="formula_3">i=1 P ij ≤ CT max j = 1, . . . , m<label>(3)</label></formula><formula xml:id="formula_4">⇒ P j ≤ CT max j = 1, . . . , m<label>(4)</label></formula><p>At the time of load balancing, the tasks will be transferred from one VM to other in order to reduce CT max as well as response time.</p><p>Processing time of a task varies from one VM to other based on VM's capacity. In case of transferring, completion time of a task may vary because of load balancing.Optimally,</p><formula xml:id="formula_5">CT max = max n i=1 CT i , max n j=1 n i=1 P ij<label>(5)</label></formula><p>Our load balancing technique, HBB-LB is a dynamic technique which not only balances the load but also considers the priorities of tasks in the waiting queues of VMs. Our algorithm is an extension of existing dynamic load balancing techniques merged with the concept of honey bee behavior.</p><p>The tasks removed from overloaded VMs act as Honey Bees.</p><p>Upon submission to the under loaded VM, it will update the number of various priority tasks and load of tasks assigned to that VM. This information will be helpful for other tasks i.e., whenever a high priority has to be submitted to VMs, it should consider the VM that has minimum number of high priority tasks so that the particular task will be executed earlier. Since all VMs are sorted in an ascending order, the task removed will be submitted to under loaded VMs.</p><p>Current workload of all available VMs can be calculated based on the information received from the datacenter. Based on this, standard deviation has to be calculated to measure deviations of load on VMs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1.">Capacity of a VM</head><p>C j = pe numj × pe mipsj + vm bwj <ref type="bibr" target="#b5">(6)</ref> where processing element, pe numj is the number processors in VM j , pe mipsj is million instructions per second of all processors in VM j and vm bwj is the communication bandwidth ability of VM j .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2.">Capacity of all VMs</head><formula xml:id="formula_6">C = m i=1 C i<label>(7)</label></formula><p>Summation of capacity of all VMs is the capacity of data center. Load of all VMs in a data center is calculated as</p><formula xml:id="formula_7">443 L = m i=1 L VM i<label>(9)</label></formula><p>444</p><p>Processing time of a VM:</p><formula xml:id="formula_8">445 PT i = L VM i C i<label>(10)</label></formula><p>446</p><p>Processing time of all VMs:</p><formula xml:id="formula_9">447 PT = L C<label>(11)</label></formula><p>448</p><p>Standard deviation of load: standard deviation, the system should decide whether to do load 452 balancing or not. For this, there are two possible situations i.e., <ref type="bibr" target="#b0">(1)</ref> 453 Finding whether the system is balanced (2) Finding whether the  494</p><formula xml:id="formula_10">449 = 1 m m i=1 (PT i -PT) 2<label>(12)</label></formula><formula xml:id="formula_11">T h → VM d | min T h ∈ VM d (<label>13</label></formula><formula xml:id="formula_12">)</formula><p>495</p><formula xml:id="formula_13">T m → VM d | min T h + T m ∈ VM d<label>(14)</label></formula><formula xml:id="formula_14">T l → VM d | min T ∈ VM d<label>(15)</label></formula><p>where T h , T m , T l are the tasks of high, middle and low priority cadres respectively.</p><p>The priorities of tasks can be categorized in 3 cadres (high, middle, and low). When a high priority task has to be submitted to one of the under loaded machines, it has to consider the high priority tasks already submitted to that machine. This will ensure that the high priority task will find the machine which has less number of high priority tasks.  or de-provisioning from clouds. Considering all these, we can-       that HBB-LB is more efficient when compared with other 3 algo-557 rithms. We used around 500 tasks for our comparisons. We have 558 also compared the degree of imbalance <ref type="bibr" target="#b19">[19]</ref> in load between VMs 559 for all 4 algorithms. where T max and T min are the maximum and minimum T i among all VMs, T avg is the average T i of VMs. Our load balancing system reduces the degree of imbalance drastically.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>•</head><label></label><figDesc>An algorithm for scheduling and load balancing of nonpreemptive independent tasks in cloud computing environments inspired by honey bee behavior • A literature survey about various existing load balancing algorithms and the merits/demerits of these techniques • Correlation of the proposed HBB-LB algorithm with actual foraging behavior of honey bees using a clear flow diagram showing the behavioral control structures of honey bees and HBB-LB. • An analysis and systematic study with mathematical evidence to show how the honey bee behavior inspired load balancing can work for cloud computing environments • Performance analysis of the proposed algorithm and an evalua-136 tion of the algorithm with respect to other existing algorithms. 137 Rest of this paper is organized as follows: Section 2 discusses 138 about the related works on existing load balancing techniques. Sec-139 tion 3 describes the foraging behavior of honey bees and how it 140 relates to the proposed technique. Section 4 focuses on our pro-141 posed approach with detailed algorithm and Section 5 presents 142 the experimental results along with performance evaluation of 143 the algorithm in comparison with existing algorithms. Finally 144 we conclude this paper highlighting the contributions and future 145 enhancements in Section 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>146 2 .</head><label>2</label><figDesc>Related works 147 Load balancing is removing tasks from over loaded VMs and 148 assigning them to under loaded VMs. Load balancing can affect 149 the overall performance of a system executing an application. Load 150 balancing algorithms can be classified in two different ways [2]: 151 Static load balancing algorithms: The decisions related to balancing 152 of load will be made at compile time when resource requirements 153 are estimated. The advantage of this algorithm is the simplicity 154 with respect to both implementation and overhead, since there is 155 no need to constantly monitor the nodes for performance statis-156 tics. Static algorithms work properly only when there is a low 157 variation in the load for the VMs. Therefore, these algorithms are 158 not well suited for grid and cloud computing environments where 159 the load will be varying at various points of time. 160 Dynamic load balancing algorithms: Dynamic load balancing algo-161 rithms make changes to the distribution of work load among nodes 162 at run-time; they use current load information when making dis-163 tribution decisions [17]. 164 Houle et al. [10] consider algorithms for static load balancing 165 on trees treating that the total load is a fixed one. In [7], Hu et al. 166 propose an optimal data migration algorithm in diffusive dynamic 167 load balancing through the calculation of Lagrange multiplier of 168 the Euclidean form of transferred weight. This work can effectively 169 minimize the data movement in homogenous environments, but it 170 does not consider heterogeneous environments. Genaud et al. [13] like the previous paper, this paper presents a task load balancing 190 model in Grid environment. It also details the system in a man-191 ner similar to the previous reference. The main characteristics of 192 this strategy are: (i) It uses task-level load balancing; (ii) It priv-193 ileges local tasks transfer to reduce communication costs; (iii) It 194</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>265 3 .</head><label>3</label><figDesc>Honey bee foraging behavior 266 The artificial bee colony algorithm (ABC), an optimization algo-267 rithm based on the intelligent foraging behavior of honey bee 268 swarm was proposed by Karaboga in 2005 [27,39]. This new 269 Meta heuristic is inspired by the intelligent foraging behavior of 270 honey bee swarm. The algorithm presented in the work is for 271 numerical function optimization. The advantage of ABC is that the 272 global search ability in the algorithm is implemented by introduc-273 ing neighborhood source production mechanism [28]. Rao et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>284</head><label></label><figDesc>In<ref type="bibr" target="#b34">[33]</ref>, a new population-based search algorithm called the Bees 285 Algorithm (BA) is presented. The algorithm mimics the food for-286 aging behavior of swarms of honey bees. In its basic version, the 287 algorithm performs a kind of neighborhood search combined with 288 random search and can be used for both combinatorial optimiza-289 tion and functional optimization. Honey bees have developed the 290 ability to collectively choose between nectar sources by selecting 291 the optimal one: This source provides a maximum ratio of gain 292 compared to costs [35]. The whole decentralized decision process 293 is based on competition among dancing bees, which guide new</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>294</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>297</head><label></label><figDesc>Honey Bees and Dynamic Server Allocation in Internet Hosting Cen-298 ters", authors propose a new honey bee allocation algorithm based 299 on self-organized behavior of foragers in honey bee colonies. Host-300 ing centers then must allocate servers among clients to maximize 301 revenue. The allocation of servers to collect revenue in Internet 302 hosting centers parallels the allocation of foragers to collect nectar 303 in honey bee colonies. A hosting center with a certain number of 304 servers hosting multiple Internet clients is analogous to a honey 305 bee colony with a certain number of bees foraging at multiple sites 306 in the surrounding countryside.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>307</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>312Fig. 1 .</head><label>1</label><figDesc>Fight ?</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>4 .</head><label>4</label><figDesc>Honey bee behavior inspired load balancing (HBB-LB) algorithm 360 Cloud computing deals with assigning computational tasks on 361 a dynamic resource pool of virtual machines online according to 362 different requirements from user or the system [16]. The service 363 requests from the clients for diverse applications can be routed 364 at any data center to any end server in the cloud. The routing of 365 service requests to the diverse servers is based on cloud manage-366 ment policies depending on load of individual servers, closeness 367 to databases etc. The two frequently used scheduling principles 368 in a non pre-emptive system are the First-in-First-out (FIFO) and 369 Weighted Round Robin (WRR) policies. These policies may end up 370 with different degrees of loads on each and every VM. This may 371 lead to load difference between VMs computing in parallel. This 372 creates additional problems of reduction in response time, wastage 373 of resources and so on.374 These kinds of situations leads us to give more importance to 375 the dynamic load balancing techniques which solves the problem 376 of load imbalance between VMs. Load Balancing techniques are 377 effective in reducing the makespan and response time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>378</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>386 4 . 1 .</head><label>41</label><figDesc>Mathematical Model . . ., T n }. All the machines are unrelated and parallel and are denoted</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>450 4 . 1 . 3 . 1 .</head><label>4131</label><figDesc>Load balancing decision. After finding the workload and 451</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>493 4 . 1 . 3 . 4 .</head><label>4134</label><figDesc>VM Selection of different prioritized tasks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>4. 1 . 3 . 5 .</head><label>135</label><figDesc>Algorithm HBB-LB. Workload information about each VMs in set VM. Here we define three sets based on load of the VMs. They are LVM (Low loaded VM)-The set contains the VMs of load loaded. OVM(Overloaded VM)-The set contains all overloaded VMs BVM(Balanced VM)-Remaining all VMs are balanced and they are available in this set.5. Experimental resultsA cloud computing system has to handle several hurdles like network flow, load balancing on virtual machines, federation of clouds, scalability and trust management and so on. Research in cloud computing generally focus on these issues with varying importance. Clouds offer a set of services (software and hardware) on an unprecedented scale. Cloud Services have to handle the temporal variation in demand through dynamic provisioning</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>522Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Comparison of makespan before and after load balancing using HBB-LB.</figDesc><graphic coords="7,135.26,196.37,336.24,159.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 4 .Fig. 5 .</head><label>45</label><figDesc>Fig. 4. Response time of VMs in seconds for HBB-LB, DLB, FIFO and WRR.</figDesc><graphic coords="7,135.26,388.65,336.24,156.67" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Degree of imbalance between VMs before and after load balancing with HBB-LB.</figDesc><graphic coords="8,124.45,159.56,336.24,170.93" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Comparison between algorithms (HBB-LB, FCFS, WRR and DLB) based on degree of imbalance.</figDesc><graphic coords="8,124.95,363.38,335.16,153.94" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 3 Fig. 9 .</head><label>39</label><figDesc>Fig. 3 illustrates the comparison of Makespan before and after</figDesc><graphic coords="9,135.26,150.27,336.24,171.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 10 .Fig. 11 .</head><label>1011</label><figDesc>Fig. 10. Comparison of number of task migrations when there are 5 VMs.</figDesc><graphic coords="9,135.26,354.46,336.24,161.86" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>560 6 .</head><label>6</label><figDesc>Degree of imbalance561DI =T max -T min T avg<ref type="bibr" target="#b16">(16)</ref> 562</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Fig. 6</head><label>6</label><figDesc>Fig.6shows the degree of imbalance between VMs before and after load balancing with HBB-LB. The X-axis represents number of tasks and the Y-axis represents the degree of imbalance. It is clearly evident that after load balancing with HBB-LB, the degree of imbalance is greatly reduced. Fig.7shows the comparison of degree of imbalance between HBB-LB, FIFO, DLB and WRR Algorithms. The X-axis represents number of tasks and the Y-axis represents the degree of imbalance. HBB-LB is more efficient and has a lesser degree of imbalance when compared with other three algorithms.</figDesc><graphic coords="10,128.45,202.24,327.96,158.26" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Comparison of number of task migrations when there are 7 VMs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. (a) Comparison of number of task migrations vs. number of virtual machines for a set of 10 tasks. (b) Comparison of number of task migrations vs. number of virtual machines for a set of 20 tasks. (c) Comparison of number of task migrations vs. number of virtual machines for a set of 30 tasks. (d) Comparison of number of task migrations vs. number of virtual machines for a set of 40 tasks.</figDesc><graphic coords="10,32.45,417.48,519.84,293.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Total length of tasks that are assigned to a VM is called load.Load of a VM can be calculated as the Number of tasks at time t on 441 service queue of VM i divided by the service rate of VM i at time t.</figDesc><table><row><cell cols="2">4.1.3. Load on a VM</cell><cell>438</cell></row><row><cell></cell><cell></cell><cell>439</cell></row><row><cell>L V,M i ,t =</cell><cell>N(T, t) S(VM i, t)</cell><cell>(8)</cell></row><row><cell></cell><cell></cell><cell>442</cell></row></table><note><p>440</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>update are load on a VM, load on all VMs, number of tasks in each VM, the number of VMs in each VM group (under loaded VM, 477 over loaded VM, etc.,) and task priorities in each VM. Load balanced L.D. Dhinesh Babu, P. Venkata Krishna / Applied Soft Computing xxx (2013) xxx-xxx 4.1.3.3. Task transfer. If the decision is to balance the load, the 483 scheduler should trigger the load balancing aspect. In order to per-484 form load balancing, we have to find overloaded VMs, demand (load 485 requirement), low-loaded VMs and supply (available load). After 486 this, remove the tasks from overloaded VMs. In order to find the 487 best VM to queue the removed task, we have to find the task prior-</figDesc><table><row><cell>488</cell><cell></cell><cell></cell></row><row><cell>489</cell><cell>ity. Tasks which are removed earlier (Scout bee) from over loaded</cell><cell></cell></row><row><cell>490</cell><cell>VMs are helpful in finding the correct low loaded VM for current</cell><cell></cell></row><row><cell>491</cell><cell>task (Forager bee). This Forager bee then becomes Scout bee for</cell><cell></cell></row><row><cell>492</cell><cell>next task. This process continues until the load balancing task is</cell><cell></cell></row><row><cell></cell><cell>successful. VM selection is done as follows:</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>455</cell></row><row><cell></cell><cell cols="2">or not). If overloaded, load balancing is meaningless.</cell><cell>456</cell></row><row><cell></cell><cell cols="2">1. Finding State of the VM group</cell><cell>457</cell></row><row><cell></cell><cell cols="2">If the standard deviation of the VM load ( ) is under or equal</cell><cell>458</cell></row><row><cell></cell><cell cols="2">to the threshold condition set (Ts) [0-1] then the system is bal-</cell><cell>459</cell></row><row><cell></cell><cell cols="2">anced [14]. Otherwise system is in an imbalance state. It may be</cell><cell>460</cell></row><row><cell></cell><cell cols="2">overloaded or under loaded.</cell><cell>461</cell></row><row><cell></cell><cell>If ≤ Ts</cell><cell></cell></row><row><cell></cell><cell></cell><cell>System is balanced</cell><cell>462</cell></row><row><cell></cell><cell></cell><cell>Exit</cell></row><row><cell></cell><cell cols="2">2. Finding Overloaded Group</cell><cell>463</cell></row><row><cell></cell><cell cols="2">When the current workload of VM group exceeds the maxi-</cell><cell>464</cell></row><row><cell></cell><cell cols="2">mum capacity of the group, then the group is overloaded. Load</cell><cell>465</cell></row><row><cell></cell><cell cols="2">balancing is not possible in this case.</cell><cell>466</cell></row><row><cell></cell><cell cols="2">If L &gt; maximum capacity</cell></row><row><cell></cell><cell>Else</cell><cell>Load balancing is not possible</cell><cell>467</cell></row><row><cell></cell><cell></cell><cell>Trigger load balancing.</cell></row><row><cell></cell><cell cols="2">4.1.3.2. VM grouping. The virtual machines will be grouped based</cell><cell>468</cell></row><row><cell></cell><cell cols="2">on their loads. The groups are Overloaded VMs, under loaded VMs</cell><cell>469</cell></row><row><cell></cell><cell cols="2">and balanced VMs. Each set contains the number of VMs. Task</cell><cell>470</cell></row><row><cell></cell><cell cols="2">removed from one of overloaded VM set has to a make decision</cell><cell>471</cell></row><row><cell></cell><cell cols="2">to get placed in one of several low loaded VMs based on the load</cell><cell>472</cell></row><row><cell></cell><cell cols="2">and tasks available in the under loaded VM. In our technique, this</cell><cell>473</cell></row><row><cell></cell><cell cols="2">task is considered as a honey bee and low loaded VMs are consid-</cell></row></table><note><p><p>454</p>whole system is saturated or not (The whole group is overloaded 474 ered as the destination of the honey bees. The information the bees 475 (tasks)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1</head><label>1</label><figDesc>Makespan in seconds before load balancing and after load balancing with HBB-LB.</figDesc><table><row><cell>No. of tasks</cell><cell>Before load balancing (s)</cell><cell>After load balancing (s)</cell></row><row><cell>10</cell><cell>11.4</cell><cell>5.7</cell></row><row><cell>20</cell><cell>27.5</cell><cell>15.5</cell></row><row><cell>30</cell><cell>36</cell><cell>19.6</cell></row><row><cell>40</cell><cell>57</cell><cell>28</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 1</head><label>1</label><figDesc>illustrates the makespan before load balancing and after</figDesc><table /><note><p><p>540 load balancing with HBB-LB.</p>541</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>tecture. In<ref type="bibr" target="#b4">[5]</ref>, titled "Dynamic Load Balancing in Grid Computing",</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>which should process n tasks represented by the set T = {T 1 , T 2 , VMs are not used in switching of tasks. Once the task switching is 479 over, the balanced VMs are included into the load balanced VM set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>480</head><p>Once this set has all the VMs, the load balancing is successful i.e., all tasks are balanced. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Task load balancing strategy for grid computing</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yagoubi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Slimani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal 613 of Computer Science</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="186" to="194" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Load balancing in grid envi-615 ronment using machine learning-innovative approach</title>
		<author>
			<persName><forename type="first">A</forename><surname>Revar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Andhariya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sutariya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bhavsar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal 616 of Computer Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="975" to="8887" />
			<date type="published" when="2010-10">Oct. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Scalable self governance using service 618 communities as ambients</title>
		<author>
			<persName><forename type="first">M</forename><surname>Randles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Taleb-Bendiab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lamb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Workshop on Software 619 and Services Maintenance and Management</title>
		<meeting>the IEEE Workshop on Software 619 and Services Maintenance and Management<address><addrLine>Los Angeles, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-07-06">2009. July 6-10. 2009</date>
		</imprint>
	</monogr>
	<note>SSMM 2009). within the 4th IEEE 620 Congress on Services. to 621 appear</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Dynamic load balancing strategy for grid comput-623 ing, transactions on engineering</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yagoubi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Slimani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing and Technology</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="260" to="265" />
			<date type="published" when="2006-05">May. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A load balancing model for grid environment, 626 computer and information sciences</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yagoubi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Medebber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">22nd International 627 Symposium on</title>
		<imprint>
			<date type="published" when="2007-07-09">2007. iscis 2007. 7-9 Nov, 2007</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Load balancing scatter operations for 629 grid computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Genaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Giersch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Vivien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th Heterogeneous Computing Workshop (HCW&apos;2003)</title>
		<imprint>
			<biblScope unit="page" from="630" to="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An optimal migration algorithm for 632 dynamic load balancing</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Emerson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Concurrency: Practice and Experience</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="467" to="483" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">A New Time Optimizing 636 Probabilistic Load Balancing Algorithm in Grid Computing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Moradi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Dezfuli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Safavi</surname></persName>
		</author>
		<idno>IEEE 978-1-4244- 637 6349-7/10/©2010</idno>
		<imprint>
			<pubPlace>Tehran, Iran</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Amirkabir University of Technology</orgName>
		</respStmt>
	</monogr>
	<note>Department of Computer and IT, Engineer-635 ing</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A comparative study into distributed 639 load balancing algorithms for cloud computing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Randles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lamb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Taleb-Bendiab</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 24th IEEE 640 International Conference on Advanced Information Networking and Applications Workshops</title>
		<meeting>24th IEEE 640 International Conference on Advanced Information Networking and Applications Workshops<address><addrLine>Perth, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-04">April, 2010</date>
			<biblScope unit="page" from="551" to="556" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Dimension-exchange algorithms for load balancing on trees</title>
		<author>
			<persName><forename type="first">M</forename><surname>Houle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Symnovis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 9th Int. Colloquium on Structural Information and Communication Complexity</title>
		<meeting>of 9th Int. Colloquium on Structural Information and Communication Complexity<address><addrLine>Andros, Greece</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-06">June, 2002</date>
			<biblScope unit="page" from="181" to="196" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Adaptive load sharing in homogeneous distributed systems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Eager</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Lazowska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zahorjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="662" to="675" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Job scheduling in heterogeneous distributed systems</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">D</forename><surname>Karatza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems and Software</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page" from="203" to="212" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Load balancing scatter operations for grid computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Genaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Giersch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Vivien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th Heterogeneous Computing Workshop (HCW&apos;2003)</title>
		<meeting>the 12th Heterogeneous Computing Workshop (HCW&apos;2003)<address><addrLine>Nice, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-04">April, 2003</date>
			<biblScope unit="page" from="101" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>De Mello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">J</forename><surname>Senger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">T</forename><surname>Yang</surname></persName>
		</author>
		<title level="m">A routing load balancing policy for grid computing environments</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="18" to="20" />
		</imprint>
	</monogr>
	<note>20th International Conference on</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Advanced Information Networking and Applications</title>
		<author>
			<persName><forename type="first">April</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AINA</title>
		<imprint>
			<biblScope unit="page">6</biblScope>
			<date type="published" when="2006">2006. 2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Distributed load balancing model for grid computing</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yagoubi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">African Conference on Research in Computer Science and Applied mathematics</title>
		<imprint>
			<date type="published" when="2008-10">October, 2008</date>
			<biblScope unit="page" from="631" to="638" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Independent tasks scheduling based on genetic algorithm in cloud computing, wireless communications. networking and mobile computing</title>
		<author>
			<persName><forename type="first">C</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WiCom &apos;09, in: 5th International Conference on</title>
		<imprint>
			<date type="published" when="2009-09">2009. Sept, 2009</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Hierarchical load balancing scheme for computational intensive jobs in Grid computing environment</title>
		<author>
			<persName><forename type="first">N</forename><surname>Malarvizhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">Rhymend</forename><surname>Uthariaraj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICAC 2009. First International Conference on</title>
		<imprint>
			<date type="published" when="2009-12-15">2009. 13-15 Dec, 2009</date>
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
	<note>Advanced Computing</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><surname>Brucker</surname></persName>
		</author>
		<title level="m">Scheduling Algorithms</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
	<note>nd ed.</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Cloud task scheduling based on load balancing ant colony optimization</title>
		<author>
			<persName><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Chinagrid Conference (ChinaGrid)</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m">Sixth Annual</title>
		<imprint>
			<date type="published" when="2011-08-23">22-23 Aug, 2011</date>
			<biblScope unit="page" from="3" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">On Honey Bees and Dynamic Server Allocation in Internet Hosting Centers</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nakrani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tovey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adaptive Behavior -Animals, Animats, Software Agents, Robots, Adaptive Systems</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3-4</biblScope>
			<biblScope unit="page" from="223" to="240" />
			<date type="published" when="2004-12">Sep-Dec). 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">CloudSim: a toolkit for modeling and simulation of cloud computing environments and evaluation of resource provisioning algorithms, Software: Practice and Experience 41</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">N</forename><surname>Calheiros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ranjan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Beloglazov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A F</forename><surname>De Rose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<idno type="DOI">10.1002/spe.995</idno>
		<ptr target="http://dx.doi.org/10.1002/spe.995" />
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="23" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">CloudSim: a novel framework for modeling and simulation of cloud computing infrastructures and services</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">N</forename><surname>Calheiros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ranjan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A F D</forename><surname>Rose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<idno type="DOI">10.1002/spe.995</idno>
		<idno>abs/0903.2525</idno>
	</analytic>
	<monogr>
		<title level="j">Computing Research Repository</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Modeling simulation of scalable cloud computing environments and the cloudsim toolkit: challenges and opportunities</title>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ranjan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">N</forename><surname>Calheiros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th High Performance Computing and Simulation Conference</title>
		<meeting>the 7th High Performance Computing and Simulation Conference<address><addrLine>New York, USA; Leipzig, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2009-06-21">2009. June 21-24, 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Mathematical model of cloud computing framework using fuzzy bee colony optimization technique</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mukherjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sahoo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 International Conference on Advances in Computing, Control, and Telecommunication Technologies</title>
		<meeting>the 2009 International Conference on Advances in Computing, Control, and Telecommunication Technologies</meeting>
		<imprint>
			<date type="published" when="2009">December 28-29, 2009</date>
			<biblScope unit="page" from="664" to="668" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Modeling the adaptive role of negative signaling in honey bee intraspecific competition</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Nieh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Insect Behavior</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="459" to="471" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Modelling collective foraging by means of individual behaviour rules in honey-bees</title>
		<author>
			<persName><forename type="first">H</forename><surname>Vries</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Biesmeijer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behavioral Ecology and Sociobiology</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="109" to="124" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">An idea based on honey bee swarm for numerical optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<idno>TR06</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
			<pubPlace>Turkey</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Engineering Department, Erciyes University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Optimization of distribution network configuration for loss reduction using artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V L</forename><surname>Narasimham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ramalingaraju</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Electrical Power and Energy Systems Engineering</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="116" to="122" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A novel and efficient algorithm for adaptive filtering: artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">N</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B C</forename><surname>Etinkaya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Turkish Journal of Electrical Engineering &amp; Computer Sciences</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="175" to="190" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">An artificial bee colony algorithm for the leaf constrained minimum spanning tree problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing Journal</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="625" to="631" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A discrete artificial bee colony algorithm for the lot-streaming flow shop scheduling problem</title>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">K</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Tasgetiren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Chua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">181</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2455" to="2468" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Structural inverse analysis by hybrid simplex artificial bee colony algorithms</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Structures</title>
		<imprint>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="861" to="870" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">The bees algorithm-a novel. Tool for complex optimisation problems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">T</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Kog</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghanbarzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Otri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rahim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zaidi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPROMS 2006 Proceeding 2nd InternationalVirtual Conference on Intelligent Production Machines and Systems</title>
		<meeting><address><addrLine>Oxford</addrLine></address></meeting>
		<imprint>
			<publisher>Elsevier</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Seeley</surname></persName>
		</author>
		<title level="m">The Wisdom of the Hive</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Harvard University Press</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Honey bee foragers as sensory units of their colonies</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Seeley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behavioral Ecology and Sociobiology</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="51" to="62" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Dhinesh Babu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Venkata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Krishna</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Self-Organization, Emergent Properties, and Learning</title>
		<author>
			<persName><forename type="first">J.-L</forename><surname>Deneubourg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Beckers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sandini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Babloyantz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Plenum Press</publisher>
			<biblScope unit="page">267</biblScope>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">B</forename><surname>Werger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Mataríc</surname></persName>
		</author>
		<title level="m">Fourth Intern. Conf. on Simulation of Adaptive Behavior</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Maes</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Mataríc</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J.-A</forename><surname>Meyer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Pollack</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><forename type="middle">W</forename><surname>Wilson</surname></persName>
		</editor>
		<imprint>
			<publisher>Bradford Books</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page">625</biblScope>
		</imprint>
	</monogr>
	<note>From animals to animats 4</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Efficient Load Balancing Using the Bees Algorithm</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Bernardino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Bernardino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Sánchez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Vega-Rodríguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Gómez-Pulido</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Trends in Applied Intelligent Systems</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
	<note>Lecture Notes in Computer Science</note>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">On the performance of artificial bee colony (ABC) algorithm</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Basturk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="687" to="697" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Block matching algorithm for motion estimation based on Artificial Bee Colony (ABC)</title>
		<author>
			<persName><forename type="first">E</forename><surname>Cuevas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zaldívar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pérez-Cisneros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sossa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Osuna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Q6 Soft Computing</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Fast access security on cloud computing: ubuntu enterprise server and cloud with face and fingerprint identification</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2011 2nd International Congress on Computer Applications and Computational Science</title>
		<meeting>the 2011 2nd International Congress on Computer Applications and Computational Science<address><addrLine>Berlin; Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="451" to="457" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Interactive artificial bee colony supported passive continuous authentication system</title>
		<author>
			<persName><forename type="first">P.-W</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-S</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B.-Y</forename><surname>Liao</surname></persName>
		</author>
		<idno>press. Q7</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Systems Journal</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Enhanced artificial bee colony optimization</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">Y</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Innovative Computing, Information and Control</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="5081" to="5092" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<author>
			<persName><forename type="first">Dhinesh</forename><surname>Babu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">D</forename></persName>
		</author>
		<title level="m">received B.E in Electrical and Elec-753 tronics Engineering and M.E degree in Computer Science</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
