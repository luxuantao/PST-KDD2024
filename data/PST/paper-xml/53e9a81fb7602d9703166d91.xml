<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Who is Going to Mentor Newcomers in Open Source Projects?</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Gerardo</forename><surname>Canfora</surname></persName>
							<email>canfora@unisannio.it</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Sannio</orgName>
								<address>
									<addrLine>Via Traiano</addrLine>
									<postCode>82100</postCode>
									<settlement>Benevento</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Massimiliano</forename><forename type="middle">Di</forename><surname>Penta</surname></persName>
							<email>dipenta@unisannio.it</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Sannio</orgName>
								<address>
									<addrLine>Via Traiano</addrLine>
									<postCode>82100</postCode>
									<settlement>Benevento</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rocco</forename><surname>Oliveto</surname></persName>
							<email>rocco.oliveto@unimol.it</email>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">University of Molise</orgName>
								<orgName type="institution" key="instit2">Contrada Fonte Lappone</orgName>
								<address>
									<postCode>86090</postCode>
									<settlement>Pesche (IS)</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sebastiano</forename><surname>Panichella</surname></persName>
							<email>spanichella@unisannio.it</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Sannio</orgName>
								<address>
									<addrLine>Via Traiano</addrLine>
									<postCode>82100</postCode>
									<settlement>Benevento</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Who is Going to Mentor Newcomers in Open Source Projects?</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">447DA06D73EA2D96AA3187DA31354867</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:17+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D.2.9 [Software Engineering]: Management-Programming teams Developer Mentoring</term>
					<term>Mining Software Repositories</term>
					<term>Empirical Studies</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>When newcomers join a software project, they need to be properly trained to understand the technical and organizational aspects of the project. Inadequate training could likely lead to project delay or failure.</p><p>In this paper we propose an approach, named Yoda (Young and newcOmer Developer Assistant) aimed at identifying and recommending mentors in software projects by mining data from mailing lists and versioning systems. Candidate mentors are identified among experienced developers who actively interact with newcomers. Then, when a newcomer joins the project, Yoda recommends her a mentor that, among the available ones, has already discussed topics relevant for the newcomer.</p><p>Yoda has been evaluated on software repositories of five open source projects. We have also surveyed some developers of these projects to understand whether mentoring was actually performed in their projects, and asked them to evaluate the mentoring relations Yoda identified. Results indicate that top committers are not always the most appropriate mentors, and show the potential usefulness of Yoda as a recommendation system to aid project managers in supporting newcomers joining a software project.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In the Star Wars imaginary Universe, Yoda 1 is known to have trained a large number of young Jedi (youngling). Such a skill is equally important in software projects, where training new developers is a crucial activity. When a newcomer joins a project, she needs to be trained from many different points of view, such as project architecture and implementation details, development guidelines, and organizational aspects. Training is often performed by one or more mentors that, during the early stages of project participation for a newcomer, help her in the work and actively discuss with her project details. Once the newcomer has been trained, she can continue to work autonomously. A relatively similar process may occur in open source projects, where, in most cases, the interaction between the mentor(s) and the newcomer occurs through electronic means, e.g., mailing lists or issue tracking systems. A newcomer would likely first start participating to discussion actively, and then would gradually start to commit changes in the source code repository. Previous studies surveying software projects indicated that mentoring of project newcomers is highly desirable <ref type="bibr" target="#b14">[14]</ref>. Differently from the problem of bug triaging-which requires to determine a developer who solved in the past a similar task <ref type="bibr" target="#b2">[2]</ref>-mentoring requires to find developers having the ability to effectively communicate and train other people. Hence, a good mentor is someone that (i) has enough expertise about the topic of interest for the newcomer, and that (ii) demonstrated to have enough ability to help other people.</p><p>In this paper we propose Yoda (Young and newcOmer Developer Assistant) an approach to identify likely mentors in software projects by mining data from software repositories, and to support the project manager in recommending possible mentors when a newcomer joins a project. Yoda is inspired by the ArnetMiner<ref type="foot" target="#foot_0">2</ref> search engine for academic researchers in computer science, which identifies relations between students and advisors, based on a series of heuristics <ref type="bibr" target="#b20">[20]</ref>. Shortly, given a pair of researchers Jim and Alice, ArnetMiner suggests that Jim could have been the mentor of Alice based on four factors: f1: Jim and Alice published together a large number of papers, f2: Jim has more publications than Alice, f3: Jim is older than Alice in terms of activity, and f4: Jim and Alice started to publish together as soon as Alice started her activity. Even if the studentadvisor relationship in academia is one-to-one, the metrics employed by ArnetMiner allow to also identify one-to-many relationships.</p><p>To identify candidate mentors in the past history of a software project, we consider as potential indicators on mentorship cases where (i) the mentor and the newcomer exchange a large number of emails in the first phases of the newcomer activity, (ii) the mentor has performed a larger activity in the project than the newcomer in terms of exchanged emails, (iii) the mentor has a longer experience in the project than the newcomer, (iv) the mentor and the newcomer start to exchange emails as soon as the newcomer joins the project, and (v) the mentor is very active in terms of performed commits. The set of indicators above defined is inspired to the ArnetMiner, although metrics being used are different: for example, co-authorship is replaced by level of communication; plus, differently from ArnetMiner, Yoda needs to account both communication activity (measured in terms of exchanged emails) and technical activity (measured in terms of commits). Once being able to identify likely mentors in the past history of a software project, Yoda recommends mentors each time a newcomer joins the project, by selecting, among the candidate mentors previously identified, those who discuss similar topics to what the newcomer is discussing.</p><p>We have evaluated Yoda on data from five open source projects, Apache httpd, the FreeBSD kernel, PostgreSQL, Python, and Samba. First, we investigated which factors or combination of factors provide more accurate indicator of mentoring. Then, we evaluated the accuracy of Yoda when recommending mentors for a newcomer. Finally, we also present the results of a preliminary survey conducted with some people involved in the suggested mentoring relationships of the five projects to understand (i) whether what we identified was actually true, and (ii) to understand how mentoring was performed (and if it was performed) in that project.</p><p>The paper is organized as follows. Section 2 describes Yoda, the approach proposed to identify and recommend mentors. Section 3 describes the empirical study aimed at evaluating Yoda on the five open source projects. Section 4 reports the study results. Section 5 provides a qualitative discussion of the empirical study performed, while Section 6 discusses the limitations and threats to validity of both Yoda and of the study. Finally, Section 8 concludes the paper after a discussion of the related literature (Section 7).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">HOW TO IDENTIFY MENTORS</head><p>To recommend mentors, Yoda first identifies a list of available mentors by mining mailing lists and versioning systems. Then, it analyzes the requests for help issued by a newcomer and identifies a list of candidate mentors that could help her. The next sections detail the approach we use to (i) identify mentors from historical data of existing projects; and (ii) to recommend mentors when a newcomer joins a project.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Who could be a good mentor?</head><p>To identify mentors in software projects, we define factors inspired by the ones ArnetMiner uses. However, we replace the activity of co-authoring a paper with the activity of exchanging emails and, in addition, we consider the technical activity of a candidate mentor, in terms of number of commits:</p><p>• f1: captures whether, after a newcomer joins a project, she mainly collaborates with a specific person. We measure this as the percentage of emails a newcomer exchanges with an older project member in the first period (we set this to one month) after joining the project, out of the total number of emails exchanged in that period.</p><p>• f2: captures the difference of the amount of discussion activity carried out by mentors and newcomers in terms of the number of emails exchanged.</p><p>• f3: captures the "age" difference between the newcomer and the likely mentor, i.e., the difference (in months) between the date when the newcomer exchanged her first email in the project and the date when the likely mentor did.</p><p>• f4: tells whether the mentor is one of the people the newcomer starts to collaborate first. It is defined in terms of time difference (in months) between the first email exchanged by a newcomer, and the first email the newcomer exchanged with the likely mentor.</p><p>• f5: considers the number of commits performed by a candidate mentor, as an indicator of the past technical activity performed by the candidate mentor.</p><p>To allow aggregating the five factors, we normalize them in the interval [0 . . . 1], and then aggregate them into a score defined as</p><formula xml:id="formula_0">5 i=1 wi • fi (1)</formula><p>where wi is the importance (weight) attributed to fi. Determining appropriate weights wi for fi-and, as a consequence, also whether each of the fi is considered or not-is part of the empirical evaluation and will be detailed in Section 3.1. By using the score defined above, it is possiblefrom the past history of a project-to rank all other developers with the aim of identifying the list of available mentors that can be suggested to newcomers. The higher the rank, the higher the likelihood that the developer played the role of mentor for the considered newcomer. Once the developers have been ranked, a threshold is used to cut the ranked list and identify the top related developers that represent the candidate mentors. Defining a "good" threshold a priori to cut the ranked list is challenging, because a newcomer could have one or more mentors. Thus, we use a scaled threshold t-used in previous work on traceability recovery <ref type="bibr" target="#b1">[1]</ref>-based on the values of the factors computed considering the newcomer i and the top developers in the ranked list ti = λ • T OPi, where T OPi is the value of the factor between the newcomer i and the top developer in the ranked list, while λ ∈ [0, 1]. The defined threshold is used to remove from the ranked list developers that have a factor value lower than λ% of the factor value between the newcomer and the top ranked developer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Building the project committers' communication network</head><p>We identify communication between developers by analyzing mailing lists and by linking names/email in mailing lists to committer IDs extracted from the versioning repository. The link to versioning repositories is needed since we are interested to select people who committed changes to the project repository.</p><p>Given two mailing list contributors Tom and John, we assume a social interaction between them if the mailing list contributor Tom sends at least one email to John through the mailing list. For the purpose of our study, other than just extracting the network, we also need to keep track of all messages exchanged by mailing list contributors over time. Mailing list contributors and their social interactions are extracted from mailing list messages by identifying the sender name and email address and, whenever available, the recipient/reply-to name and email address. Clearly, since messages can be sent to a mailing list rather than to single addresses, we assume that (i) Tom and John communicate if there is a direct message with Tom as sender and John as recipient or vice versa, or (i) if John answers, even if replying to the mailing list to a thread initiated by Tom, or to which Tom has previously replied.</p><p>When building the contributors' network, we need to unify the names belonging to the same person, i.e., cases of people referring themselves differently, e.g., John Fitzgerald Smith, John F. Smith, John Smith, or J. Smith. We use an approach similar to the one proposed by Bird et al. <ref type="bibr" target="#b6">[6]</ref> that we also applied to analyze mailing lists for a different research <ref type="bibr" target="#b10">[10]</ref>. We use similar heuristics to map versioning system IDs to mailing list names/emails, which could be straightforward in cases where the committer ID is a full name and/or an email (e.g., in projects adopting Git as versioning system), while it is less obvious when short IDs are used (such in the case of many CVS repositories). Specifically, we use heuristics to match IDs composed of initials to contributor names-e.g., mapping, where this does not induce ambiguities, jfk to john fitzgerald kennedy-or finding mailing list contributor names to be linked to committer IDs like johnsmith or jsmith, trying to compose mailing list contributors first and last names, or first/middle name initials and last name. Further details can be found in a previous paper by Canfora et al. <ref type="bibr" target="#b10">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Recommending mentors</head><p>When a contributor joins a project, she needs to become knowledgeable on a specific (set of) topic(s). The project manager needs to find a mentor for this newcomer, that is a contributor that (a) demonstrated already to be a mentor in the past, and (b) actually worked/discussed topics related to those the newcomer is going to work. As for requirement (a), we use the method defined in Section 2.1 to identify available mentors in the past project history. Turning to requirement (b), we need to select among the available contributors that demonstrated to be mentors in the past, the ones that had enough expertise on the topic(s) which the newcomer is going to work on. Rather than proposing a novel approach to identify the most appropriate mentor for a given topic, we use approaches similar to what proposed in the past for bug triaging <ref type="bibr" target="#b2">[2,</ref><ref type="bibr">9,</ref><ref type="bibr" target="#b19">19]</ref>, which proposed to assign a bug to a developer that in the past worked on a bug having a (textually) similar bug report.</p><p>Specifically, let us suppose a newcomer p joins the project at time tx, and let us consider the set of n mentors M = {m1, . . . mn} identified using the method described in Section 2.1 in the period before tx. We instantiate an Information Retrieval (IR) <ref type="bibr" target="#b5">[5]</ref> process to rank the available mentors, where each document di with i = 1 . . . n consists of the union of the text of all emails exchanged by the mentor mi before tx, while the query qp is represented by a request for help submitted by the newcomer p.</p><p>In a live setting-when Yoda would be instantiated as a tool-the request for help can be explicitly submitted by the newcomer when she joins the project. For the purpose of our empirical study, since we are working on past data from open source projects, we simulated the query by considering the union of the emails sent by the newcomer during the first week when she joined the project, i.e., within one week after the first email. We consider a week as a time span on the one hand long enough for a newcomer to send emails and precisely ask what kind of help she needs (e.g., taking the first email only could be considered too vague), on the other hand not so long to have an unrealistic scenario.</p><p>Both documents and query are processed by removing English stop words, performing stemming using Porter stemming <ref type="bibr" target="#b16">[16]</ref>, and indexing the text corpus using word frequencies. We use raw frequencies (tf) <ref type="bibr" target="#b5">[5]</ref> rather than the widely used tf-idf <ref type="bibr" target="#b5">[5]</ref> as our aim is to mach similar corpus rather than to discriminate different documents, reason for what tf-idf results useful. Then, we compare the query qp with each di using the asymmetric Dice coefficient <ref type="bibr" target="#b5">[5]</ref>:</p><formula xml:id="formula_1">Dicep = N j=1 tfj qp • tfj d i N j=1 tfj qp • tfj qp</formula><p>where N is the size of the vocabulary of all words contained in our documents, tfj qp and tfj d i are the raw frequencies of the j th dictionary term in the query and di, respectively. In other words, the asymmetric Dice coefficient captures how much text of the newcomer's request for help is covered by the mentor's emails. We use it instead of the cosine coefficient because the Dice coefficient does not penalize mentors having email corpus that contains much text not contained in the newcomer's request.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">EMPIRICAL STUDY DEFINITION</head><p>The goal of this study is to evaluate the performances of Yoda in identifying mentors in software projects, and in recommending mentors for project newcomers. The quality focus is concerned with the capability to precisely identify and recommend mentors that (i) had a mentoring experience in the past and (ii) have discussed topics related to the newcomer needs. The context consists of discussions extracted from mailing lists and changes extracted from versioning systems for five open source projects, namely Apache httpd, the FreeBSD kernel, PostgreSQL, Python, and Samba.</p><p>The five projects are different in terms of size and application domain. Apache httpd is an open-source HTTP server, FreeBSD is a free, open source Unix operating system, Post-greSQL is a database management system (DBMS), Python is a well-known scripting language, and Samba a cross-operating system layer for printer and file sharing. The top part of Table <ref type="table" target="#tab_0">1</ref> reports key information about the five projects and, above all, of their mailing lists and versioning systems, namely project URL, time period analyzed, size range in KLOC, number of mailing list contributors (M c), number of committers in the versioning systems (Cm), their intersection (M c ∩ Cm), and number of emails exchanged by M c ∩ Cm, i.e., by the set of project contributors we considered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Study Procedure</head><p>The study addresses the following research questions:</p><p>• RQ1: How can we identify mentors from the past history of a software project? This question aims at investigating whether particular combinations of the factors f1-f5 described in Section 2.1 can be used to identify mentors, and how good are such combinations compared with some baselines, e.g., using as mentors the project managers or the top project contributors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• RQ2:</head><p>To what extent would it be possible to recommend mentors to newcomers joining a software project? This research question investigates how accurately could Yoda recommend a mentor-among those identified in RQ1-for a newcomer that joins the project and is willing to work on a certain topic, and how such a prediction compares with a baseline alternative, i.e., suggesting owners/top committers of artifacts traced to the first emails the newcomer sends when joining the project.</p><p>To address RQ1, we use different combinations of f1-f5 to identify-for each newcomer joining a project-a ranked list of candidate mentors, and then we evaluate them manually.</p><p>It is worthwhile to recall that such a metrics combination suggests a ranked list of candidate mentors for each newcomer by observing the past project history, without however requiring a training set (the approach is unsupervised) and that, in the context of RQ1 we are only interested to see whether the f1-f5 metrics can identify good mentors, without checking whether the mentor has appropriate skills required by the newcomer (we deal with such an issue in RQ2).</p><p>First, we perform a calibration of the weights in equation <ref type="bibr" target="#b1">(1)</ref>. We consider different possible combinations of f1-f5, i.e., all ones with equal weight, single factors alone, all possible pairs, all groups of three, and four factors. It is important to note that, by considering f5 (normalized number of commits) alone, we provide a sort of baseline for our technique, because the number of commits is a metric often used to identify experts-or at least code ownership <ref type="bibr" target="#b8">[8]</ref>-in software projects <ref type="bibr" target="#b17">[17]</ref>.</p><p>Then, we give varying weights to the five factors, with the aim of investigating whether there are factors that are more important than others. For example, for combinations of three factors, say f1, f2, f3, we consider, other than the combination with equal weights, i.e., 0.33 • f1 + 0.33 • f2 + 0.33 • f3, the following cases: (i) one factor weighted more than the others, e.g., 0.5•f1 +0.25•f2 +0.25•f3, and similarly for f2 and f3; and (ii) two factors weighted more than the other, e.g., 0.4 • f1 + 0.4 • f2 + 0.2 • f3, and similarly for (f1, f3) or (f2, f3).</p><p>To validate the candidate newcomer-mentor pairs, one of the authors and another PhD student (not aware of how Yoda works) manually inspected (independently, discussing cases where they disagreed) the communication between the newcomer and the mentor. The pair mentor-newcomer is classified as a true positive if there is a clear evidence of cases in which the newcomer asked help to-and received help from-the mentor, otherwise it is classified as a false positive.</p><p>To address RQ2, we split the project history into two periods, a first period (training set) in which we identify the set M of people who have been identified as candidate mentors using the most suitable combination of factors determined in RQ1, and a second period (test set) for which we aim at recommending mentors for project newcomers. For each project, we have chosen training and test set in order to have a balanced number of newcomers in the two sets (see the bottom part of Table <ref type="table" target="#tab_0">1</ref>).</p><p>For each newcomer i identified in the test set, we identify the top k mentors (mj ∈ M ) that exhibit the most similar discussion to the newcomer request for help. For each possible newcomer, we produce a ranked list of k recommended mentors <ref type="foot" target="#foot_1">3</ref> , as in realistic scenarios it can happen that the most suitable mentor is not available, and one has to choose the second-best, the third-best, and so on. Since in the context of a post-mortem analysis of data from open source projects like the one we are doing we do not have available other sources of requests for help, we assume that the topic on which a newcomer requires helps is contained in the first emails she exchanges in the project. We define below, in the study settings, how the number of emails has been chosen. Then, for each newcomer i in the test set, we identify mentor(s) using the approach described in Section 2.3, manually validate it, compare with the recommended mentor, and report the number and percentage of pairs for which the recommendation was correct or incorrect.</p><p>In addition to such a manual validation, we consider-also for RQ2-a baseline, i.e., an alternative way of suggesting experts. To this aim, we trace the textual corpus of the newcomer early emails onto source code files, using an approach proposed by Bacchelli et al. <ref type="bibr" target="#b4">[4]</ref>. Briefly, such approach aims at matching file names (or class names) in the email text. In some cases (37 out of 117 times in our study) the mapping is straightforward because the emails contain a file name, including extension and even in some cases a complete path. In other 14 cases, the email only contained one or more words that were also file names, which could lead to possible imprecisions (e.g., the word "main" might not refer to a file). To deal with this imprecision, the resulting 37+14=51 traceability links were also manually validated. After that, we took the list of top committers for the files traced onto the emails, and consider such a list as an alternative way of recommending mentors.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Surveying project developers</head><p>As a further evaluation, after having identified candidate pairs of mentor-newcomer, we surveyed these developers by sending them an email, explaining them the purpose of our research activity, and asking them to complete an on-line survey questionnaire-built using SurveyMonkey 4 (an example of which is reported in the Appendix)-asking questions about: (i) the experience as project contributor, and whether the contributor is still active; (ii) whether the person mentored a project newcomer and, if yes, how important was the mentoring perceived; (iii) whether the person was mentored when she joined the project, and how important was the mentoring in the decision to stay in the project; and (iv) which are the characteristics of a good mentor (e.g., experience, communication skills, project knowledge).</p><p>In addition, the survey page showed to respondents a list of people that Yoda highlighted in the mentor-newcomer candidate pairs, asking them to tell, for each person, whether the respondent (i) was actually the person indicated there, (ii) was a mentor for that person, (iii) was advised by that person, or (iv) never got in touch with that person. We invited to the survey 23 developers from Apache httpd, 37 from FreeBSD, 15 from PostgreSQL, 27 from Python, and 37 from Samba. The questionnaire was completed by 6 developers from Samba, 3 from FreeBSD, 2 from PostgreSQL, and 1 from Python.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">RESULTS</head><p>This section reports the results of the empirical study. The experimental package (with raw data) is available for replication purposes 5 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">RQ1: How can we identify mentors from</head><p>the past history of a software project?</p><p>Figure <ref type="figure" target="#fig_0">1</ref> and Table <ref type="table" target="#tab_4">2</ref> report, for the five projects we analyzed, the performances of Yoda in detecting mentors for all newcomers joining the project during the entire analyzed time interval. In each subfigure of Figure <ref type="figure" target="#fig_0">1</ref>, the x-axis indicates the number of mentors that the approach can recommend when achieving a precision shown on the y-axis. As described in Section 3.1, we evaluated the performance of Yoda for all combinations of f1-f5, as well as for combinations having varying weights. Due to space limitations, Table <ref type="table" target="#tab_4">2</ref> only reports a subset of the analyzed combinations (complete tables can be found in the Appendix), and specifically:</p><p>• f1, i.e., the percentage of exchanged emails between newcomer and mentor. We noticed that, if considering each of the f1-f5 factors alone, such a factor is the one that produces the best performances.</p><p>• f5, i.e., the normalized number of commits performed by the candidate mentor. We use this factor as a baseline, to determine whether an obvious choice of mentors, i.e., top committers, could be appropriate.  • 0.5•f1 +0.25•f2 +0.25•f3 and 0.5•f1 +0.25•f2 +0.25•f4, i.e., again considering f1 and f2 with f3 or f4, weighting f1 twice than the other factors. These are the combinations able to achieve the best performances.</p><p>Note that Figure <ref type="figure" target="#fig_0">1</ref> contains exactly the same information of Table <ref type="table" target="#tab_4">2</ref> (except that we do not report the combination of f1, f2, and f3 or f4 with equal weights since they are less interesting to be compared), and has the purpose of better allowing the comparison of different combinations, whereas Table <ref type="table" target="#tab_4">2</ref> provides precise figures. In summary, the obtained results indicate that:</p><p>• f5 (number of commits) is not a good indicator of mentorship. Also, f5 does not even provide a useful contribution if used in combination with other factors. While it is true that a very active committer can be expert on a particular topic, she might not be very willing (or able) to exchange ideas and/or instruct other people.</p><p>• 0.5 • f1 + 0.25 • f2 + 0.25 • f3 and 0.5•f1+0.25•f2+0.25•f4 achieve the best performances, with a precision over 70% and in many cases well above 80%. Also, it can be noticed that such a precision does not decrease when decreasing λ, which means that the chosen combinations are able to recommend a wider set of candidate mentors without sacrificing the precision.</p><p>• f1 alone tend to be as precise as the other combinations, and in some cases (Python and Samba) even more precise than the combinations above. However, it is only able to recommend a limited set of mentors even when decreasing λ. Although, in the practice, a single mentor would suffice, having a good recall is desirable because (i) not all candidate mentors may be available when needed, and (ii) among the candidate mentors, we need to select those having the expertise required by the newcomer. Hence, to obtain a good balance between precision and number of mentors (which as said above does not mean to accept a very low precision), it is necessary to combine f1 (having however a higher weight) with f2 (rewarding mentors in general very active in discussions) and f3 (mentor/newcomer project age difference) or f4 (the newcomer mainly collaborate with the mentor in her early stages). In summary, the percentage of exchanged emails per se is not enough to identify a large set of candidate mentors.</p><p>The results achieved also indicate that on FreeBSD Yoda exhibits low performances (precision around 30%) while for all other systems results are pretty consistent. Our interpretation is that such a result does not depend on the system size and on its number of project contributor. In fact, on other systems having a high number of contributors (such as Python or Samba), Yoda exhibits good performances. We believe that this can be due to the nature of the discussion occurring in the FreeBSD mailing lists. By inspecting the emails we realized that most of the discussion is oneto-many, i.e., people posting issues or suggestions to many other people or to the whole mailing list. Although the way we analyze mailing lists allow to treat-with some approximation many-to-many communications-the FreeBSD communication did not always exhibit dominant persons (potential mentors). This, clearly, makes the identification of pairwise collaborations less precise. It is possible to identify mentors-with a precision of 70% or above-in the past history of a software project by using the combinations of factors 0. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">RQ2:</head><p>To what extent would it be possible to recommend mentors to newcomers joining a software project?</p><p>To evaluate the recommendation method, we split the history of each project in a training set and test set. The bottom part of Table <ref type="table" target="#tab_0">1</ref> reports, for each project the time interval of training and test sets, the number of mentors identified in the training set, and the number of newcomers in the training set and test set.</p><p>Table <ref type="table" target="#tab_5">3</ref> reports the accuracy of Yoda in recommending mentors for the newcomers of the test set. We recommend mentors among those identified-in the training set-using 0.5 • f1 + 0.25 • f2 + 0.25 • f3, which as explained in RQ1 exhibits in most cases the best performances. The left-side of each column in the table reports the number and percentage of correct and incorrect top 1 mentor recommendations for each newcomer (ranked according to Dice asymmetric similarity), while the right-side reports the number and percentage of correct and incorrect top 2 recommendations.</p><p>As the table shows, the percentage of correct top 1 recommendations is very high, above 85% except for Python, where it is 65%, and for FreeBSD, where it is 30% (for the reasons explained in RQ1). Even when we consider the top 2 recommendations, the correctness remains high, 71% or above-including this time Python where it increases to 77%-and again with the exception of FreeBSD where it is 24%. In the Appendix we also report results for top 3 and top 4 recommendations, which nevertheless only slightly increase or decrease with respect to top 1 and to top 2. As explained in Section 3.1, results of Table <ref type="table" target="#tab_5">3</ref> are obtained by considering as newcomer query (to identify recommenders) emails sent during the first week in the project. As shown in the Appendix, results do not substantially vary if considering a longer period (up to four months), which is however less realistic because we cannot expect the newcomer would wait so long to get a mentorship.</p><p>For 51 out of the 117 newcomers for which it has been possible to trace the first-week emails onto source code files, Table <ref type="table" target="#tab_7">4</ref> reports the precision in the recommendation in the same way as for Table <ref type="table" target="#tab_5">3</ref>. As the table shows, the precision is quite low: always below 10%, with the exception of Samba where is 35%, and top 2 for PostgreSQL where is 25%. Yoda is able to recommend mentors with a correctness of about 65% or above for the top 1 recommendations and 71% or above for the top 2 recommendations for all systems except FreeBSD, where the percentages decrease to 30% and 24%, respectively. Top committers or files related to newcomer early emails cannot be used to recommend mentors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">DISCUSSION</head><p>In the following, we provide additional, qualitative insights to the quantitative study reported in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Hints collected from project contributors</head><p>This section reports results we collected surveying project developers. Since we collected a limited number of answers <ref type="bibr" target="#b12">(12)</ref>, we report aggregate data only for the purpose of explaining how the respondents perceived the importance of the mentoring process.</p><p>Figure <ref type="figure" target="#fig_3">2</ref>(a) indicates that, out of 12 developers, 11 admitted to have been mentors, and 7 indicated that they were mentored by someone else. Figure <ref type="figure" target="#fig_3">2</ref>(b) reports the perceived importance of mentoring when respondents performed mentoring themselves or when they were mentored. The effect was perceived very important (3) or important (5) for developers performing mentoring, while when developers received mentoring, 2 developers indicated that such activity is very important and 4 that it is important. In summary, developers indicated that mentoring is important, although it seems that developers are more likely to admit that they performed mentoring than they were mentored. Also, mentoring seems to be perceived more important by developers that performed it rather than by developers that received it.</p><p>Figure <ref type="figure" target="#fig_3">2(c</ref>) reports what factor developers indicated to be important for good mentoring. The respondents suggested it is mainly matter of communication skills <ref type="bibr" target="#b11">(11)</ref> and project knowledge <ref type="bibr" target="#b10">(10)</ref>, while only 5 developers indicated that experience can play an important role. However, one of the respondents said "Maybe good communication skills is the least important of the three above, if one is working closely together.", thus the importance of communication skills depends of the cohesiveness of the project team. Some developers added comments to the survey to indicate that they performed/received mentoring using communication means different from emails. For example, they added comments like "Suggested work they can do. But mostly over IRC.", or "Not only mailing lists, but also IRC and direct communication."</p><p>By classifying developers in the list we provided, the respondents indicated us a set of 23 mentor-newcomer pairs. We identified 10 of them correctly (the remaining 13 were not identified), while we identified 3 pairs for which respondents indicated that mentoring did not occur. Thus, with  respect to the answers provided in the survey questionnaire, our approach has a precision of 10/(10+3)=77% and a recall of 10/23=43%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Examples of cases where Yoda worked well and where not</head><p>In the following we report some examples of collaborations and fragments of emails indicating cases in which Yoda worked well to identify mentors (RQ1) and cases where it did not. Cases of true positives-confirmed by respondents of our survey-were made evident by exchanges of email in which the newcomer clearly asked for help. Figure <ref type="figure" target="#fig_5">3</ref> shows an example of newcomer (Bjoern)-mentor (James) network found in Samba, when the newcomer approached the project by sending his first emails (Figure <ref type="figure" target="#fig_5">3(a)</ref>), and after one year (Figure <ref type="figure" target="#fig_5">3(b)</ref>). Note that edges are labeled with the number of exchanged emails. James had already a three-years experience (with 150 commits performed) when Bjoern approached him. As it can be seen from the network, James has a high degree (=13), and Bjoern mainly exchanges emails (4 emails exchanged) with James rather than with other people. After one year, the social importance of James increase, as well as (to some extent) the one of Bjoern, which however still has James as main contact (18 emails exchanged). The mentoring relationship is also evident from fragments of their communication: "Hi James, maybe you can bring some light into the dark here: I did some tests with . . . "</p><p>Another example (confirmed by the survey respondent) is the one in Samba where Kai asked Jeremy 6 help because she wanted to contribute to the project "As you might know, I'm a . . . student implementing NTLMSSP signing/sealing in Wine. I've worked on basic NTLM authentication for Wine last year, using ntlm auth. . . . I decided to give Samba4's GENSEC subsystem a try.". Then, Jeremy responded with a detailed list of instructions answering Kai specific technical questions, e.g. "This is the quickest way to make this work (IMHO).", "Probably second best solution." (where Kai proposed two possible implementations), or even discouraging Kai to implement some features "this will be a long long road to walk..."</p><p>One example of false negative is when the newcomer asked for help and the mentor never (or seldom) responded. An instance of such a case was reported as a true mentoring in our survey, however Yoda did not detect it because of the low value of f1.</p><p>One example of false positive concerns the collaboration 6 We do not report last names for confidentiality reasons.</p><p>between Ivan and Robert in FreeBSD. Robert helped Ivan to deal with some performance problem of the SSH protocol implementation. Although also from the email it appeared clear that Robert-indicated as candidate mentor by our approach-was the expert giving suggestions, very likely he helped to solve a specific problem only, so to be considered as someone who helped Ivan, while not really Ivan's mentor. Now we report hereby one case where mentoring recommendation (RQ2) worked and one when it did not. When Lucien joined the Apache httpd project, he asked information about proxy handling "I'm translating mod proxy.xml, and I don't understand what the term worker means . . . ". Then, after he received information about the meaning of this term, he checked whether he correctly understood: "So, say we have this proxy configuration: ProxyPass path1 ser-ver1, ProxyPass path2 server2 . . . ". In summary, Lucien seems to be interested to work on tasks related to proxy. Yoda recommended him Joshua as a mentor, which in the past helped someone else (Laurent) on a problem related to proxy: "ProxyPassReverse only rewrites Location: headers . . . .". That is, the email referred several times to the terms Proxy and Pass, also contained in the early email sent by Lucien.</p><p>An example of false positive is between Takashi (newcomer) and Joshua (candidate mentor). Both the early emails of Takashi and previous emails of Joshua contained some common terms, such as "3D", contained in XML and HTML fragments, e.g., "&lt;note type=3D"warning"&gt;" in the early email by Takashi and "&lt;meta name=3D"generator"/ &gt;" in previous emails by Joshua. However, the technical content of the emails was not very similar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">YODA LIMITATIONS AND THREATS TO VALIDITY</head><p>This section describes the limitations of Yoda and the threats to validity of the study we performed. We are aware that Yoda is limited for the following reasons:</p><p>• It identifies mentor-newcomer pairs mainly based on their activity on mailing lists. We are aware, however, as also reported in a paper by Aranda and Venolia <ref type="bibr" target="#b3">[3]</ref>, that developers can communicate also outside mailing lists, e.g., using a chat. One of the developers that responded to our survey "I've asked questions personally in private chats." and when we asked if he helped someone else, he answered "Yes, suggested work they can do. But mostly over IRC.".</p><p>• It does not account for the availability of mentors.  However, since Yoda proposes a list of mentors for a newcomer, the project manager can easily assign to the newcomer a mentor that is currently available.</p><p>• It matches the expertise required by the newcomer with the expertise of possible mentors by comparing the early emails of the newcomer with all emails of the mentor. However, as we explained in Section 2.3, it is not the purpose of this paper to propose a better method to identify expertise, as others have been proposed already in the past <ref type="bibr" target="#b2">[2,</ref><ref type="bibr">9,</ref><ref type="bibr" target="#b19">19]</ref>.</p><p>Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the measurements we performed. First, there could be imprecisions in the way we mapped mailing list names with versioning system IDs. However, we manually validated this mapping. In addition, for systems using git (Apache httpd, Samba, PostgreSQL, Python) the mapping is straight-forward in that full names and emails are used as git IDs. The "age" of a developer is computed by observing the first email exchanged, which might have occurred way before (or way after) the person joined the project. Another aspect of our validation that is inherently subject to imprecision is the manual validation of Yoda recommendations. We limited the degree of error-proneness and subjectiveness by having two different people performing the inspection independently.</p><p>Threats to internal validity concern external factors, we did not consider, that could affect the variables being investigated. The factors we considered, f1-f5, are only a partial view of the mentor and newcomer experiences, and of their inter-communication. There can be other factors we did not consider. Future work will be devoted to consider other factors aiming at mitigating such a threat.</p><p>Threats to external validity concern the generalization of our findings. We have performed our study on data from five different systems belonging to different domains and having different size in terms of code base and number of developers. Further evaluation is however necessary, especially in industrial environments where there can be a tacit knowledge-within an organization, but not encoded in the communications-of who can be a good mentor and who not.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">RELATED WORK</head><p>There have been several researchers investigating what happens when a newcomer joins a software project, and which are the factors for her growth, including mentoring. Our work falls in the general area of those aimed at relating social relations among developers with technical aspects of the project they are working on. For example, Cataldo et al. related the communication activity with software quality <ref type="bibr" target="#b12">[12]</ref>, and developers' productivity <ref type="bibr" target="#b11">[11]</ref>.</p><p>Dagenais et al. <ref type="bibr" target="#b14">[14]</ref> studied, by surveying 18 IBM developers, what happens when someone moves into a new "project landscape", making for her necessary to get acquitted with the new environment. Among the factors they found important, it is worthwhile to mention the need for early practicing, the availability of feedback for their work, and the need for getting initial guidance. The latter is totally in agreement with what we collected from our small survey, and motivates approaches like Yoda. Fronza et al. <ref type="bibr" target="#b15">[15]</ref> studied how newcomers join agile projects, finding that pairprogramming is used to initiate newcomers to a project.</p><p>Zhou and Mockus <ref type="bibr" target="#b22">[22]</ref> investigated, on three industrial and three open source projects, how the sociality level of a project in a particular moment influences the likelihood for newcomers to become long-term contributors. They found that it is more likely that this happens when the project sociality is low, because senior developers have more time to train the newcomers. Zhou and Mockus concluded suggesting the need for proper training plans for newcomers in open source projects: this requires to identify appropriate mentors. Zhou and Mockus <ref type="bibr" target="#b21">[21]</ref> also identified challenges in a software market where offshoring, outsourcing and open source development are increasing fast: understanding cultural differences, analyzing how developers grow their expertise, and providing tools to facilitate newcomers' learning, as Yoda does.</p><p>A different perspective of developers' growth in software projects was studied by Sinha et al. <ref type="bibr" target="#b18">[18]</ref> who investigated, on the Eclipse project, how project contributors become committers, and found that this depends on having contributed patches/source code of the project, being active in other open source projects, or being part of the project organi-zation. Also, Bird et al. <ref type="bibr" target="#b7">[7]</ref> investigated the phenomenon of "immigration" in software projects, explaining the who, how and when in the process of providing to newcomers the authority to commit in the project repository.</p><p>In summary, while all these works highlighted the need for supporting newcomers when they join a software project, to the best of our knowledge this is the first paper aimed at proposing an approach to identify mentors in software projects and to recommend them to newcomers.</p><p>In the past and recent years, other kinds of recommenders have been proposed to support developers-especially junior ones. Among others, Hipikat <ref type="bibr" target="#b13">[13]</ref> provides recommendations about components relevant for the current coding context of the developer. As discussed in Section 2.3, identifying mentors also requires the selection of people having specific expertise. This has been done by Anvik et al. <ref type="bibr" target="#b2">[2]</ref>, by Canfora and Cerulo <ref type="bibr">[9]</ref>, and by Tamrawi et al. <ref type="bibr" target="#b19">[19]</ref> who proposed approaches-based on machine learning, IR, and fuzzy clustering respectively-for bug triaging, i.e., to determine the most suited developers able to fix an incoming bug.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSIONS AND FUTURE WORK</head><p>Mentoring is particularly important to make software project newcomers knowledgeable of various aspects of the project on which they are contributing, such as technical details, coding guidelines, and organizational rules. As part of our study we contacted contributors to open source projects, one of which mentioned "My general view is that it is very important that mentor and mentee share at least the mindset and the same passions. My primary mentors have been . . . and they both had a very strong technical background, something I definitively wanted to match."</p><p>This paper proposed Yoda, an approach to identify mentors by relying on historical data from a software project, and then recommend them when a newcomer joins the project. Being inspired by ArnetMiner-a tool that analyzes academic collaborations-Yoda identifies mentoring when the newcomer exchanges most of her emails with the mentor, and the mentor has a higher social importance and project age than the mentor. Then, when a newcomer joins a project, her early discussion is used to identify the expertise she is requiring, and Yoda recommends, among the candidate mentors previously identified, those who exhibited a discussion (textually) similar to the newcomer early discussion.</p><p>Yoda has been evaluated on data from five open source projects, Apache httpd, the FreeBSD kernel, PostgreSQL, Python, and Samba. Results of the study indicate that, except for FreeBSD, Yoda is able to identify candidate pairs of mentor-newcomer with a precision in most cases higher than 80%, and recommend them with a precision greater than 70%. Instead, relying on top committers as an alternative to Yoda does not produce as accurate results as those of Yoda. Comments collected from project developers indicated us that mentoring is important and depends on project knowledge and communication skills more than on experience.</p><p>Work-in-progress is directed towards different directions. We plan to further improve Yoda by considering factors able to better capture the technical skills of mentors. Also, we plan to replicate the study on further projects. Finally, we plan to develop an assessment technique for developers' network aimed at automatically identifying cases-such as the one of FreeBSD in your study-where Yoda is not applica-ble as such, and if possible identify countermeasures for such scenarios.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Mentor identification performances for the best combinations of f1-f5 and for the baseline (f5).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>•</head><label></label><figDesc>0.33•f1+0.33•f2+0.33•f3 and 0.33•f1+0.33•f2+0.33•f4, because we considered that the combination of f1 and f2 with either f3 or f4 produces the best results among combinations obtained weighting all factors similarly. 4 www.surveymonkey.com 5 http://www.rcost.unisannio.it/mdipenta/mentoringdata.tar.gz</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Survey questionnaire answers: generic questions on mentoring activity and its importance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Example (from Samba) of developers' network involving a newcomer (Bjoern) and a mentor (James).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Characteristics of the five projects analyzed, and of the training and test sets for evaluating Yoda.</figDesc><table><row><cell>Variable</cell><cell>Apache httpd</cell><cell>FreeBSD</cell><cell>PostgreSQL</cell><cell>Python</cell><cell>Samba</cell></row><row><cell>Project URL</cell><cell>http://httpd.apache.org</cell><cell>http://www.freebsd.org</cell><cell>http://www.postgresql.org</cell><cell>http://www.python.org</cell><cell>http://www.samba.org</cell></row><row><cell>Period considered</cell><cell>08/2001-12/2008</cell><cell>11/1998-10/2008</cell><cell>10/1998-03/2008</cell><cell>05/2000-12/2008</cell><cell>04/1998-12/2008</cell></row><row><cell>Size range (KNLOC)</cell><cell>271-850</cell><cell>3,552-7,853</cell><cell>223-522</cell><cell>464-683</cell><cell>156-1,157</cell></row><row><cell>Mailing list contribs (M c)</cell><cell>6,726</cell><cell>23,872</cell><cell>2,935</cell><cell>20,827</cell><cell>3,411</cell></row><row><cell>Committers (Cm)</cell><cell>108</cell><cell>640</cell><cell>34</cell><cell>147</cell><cell>229</cell></row><row><cell>M c ∩ Cm</cell><cell>66</cell><cell>393</cell><cell>29</cell><cell>147</cell><cell>226</cell></row><row><cell>Emails exchanged by M c ∩ Cm</cell><cell>135,243</cell><cell>2,246,425</cell><cell>44,244</cell><cell>7,479</cell><cell>19,073</cell></row><row><cell>Period (training set)</cell><cell>08/2001-03/2002</cell><cell>11/1998-02/2000</cell><cell>10/1998-05/2001</cell><cell>05/2000-05/2001</cell><cell>04/1998-09/2000</cell></row><row><cell>Period (test set)</cell><cell>04/2002-12/2008</cell><cell>03/2000-10/2008</cell><cell>06/2001-03/2008</cell><cell>06/2001-12/2008</cell><cell>10/2000-12/2008</cell></row><row><cell># of mentors (training set)</cell><cell>19</cell><cell>65</cell><cell>10</cell><cell>28</cell><cell>17</cell></row><row><cell># of newcomers (training set)</cell><cell>13</cell><cell>33</cell><cell>8</cell><cell>32</cell><cell>33</cell></row><row><cell># of newcomers (test set)</cell><cell>13</cell><cell>33</cell><cell>7</cell><cell>31</cell><cell>33</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>12 13 14 15 16 17 18 19 20 21 22 23 24 Precision (%) Number of mentors iden&gt;fied</head><label></label><figDesc></figDesc><table><row><cell></cell><cell>100%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>90%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>80%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Precision (%)</cell><cell>30% 40% 50% 60% 70%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>20%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>10%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>17</cell><cell>18</cell><cell>19</cell><cell>20</cell><cell>21</cell><cell>22</cell><cell>23</cell><cell>24</cell><cell>25</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">Number of newcomer--mentor pairs</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="4">(a) Apache httpd</cell><cell></cell><cell></cell></row><row><cell></cell><cell>100%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>90%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>80%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Precision (%)</cell><cell>30% 40% 50% 60% 70%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>20%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>10%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="9">22 24 26 28 30 32 34 36 38 40 42</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">Number of mentors iden&gt;fied</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">(b) FreeBSD</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>100%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>90%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>80%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>70%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>60%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>50%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>40%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>30%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>20%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>10%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="6">10 11 (c) PostgreSQL</cell><cell></cell><cell></cell></row><row><cell></cell><cell>100%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>90%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>80%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>70%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>60%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>50%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>40%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>30%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>20%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>10%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0%</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 Precision (%) Number of mentors iden&gt;fied</head><label></label><figDesc></figDesc><table><row><cell>(d) Python</cell></row><row><cell>100%</cell></row><row><cell>90%</cell></row><row><cell>80%</cell></row><row><cell>70%</cell></row><row><cell>60%</cell></row><row><cell>50%</cell></row><row><cell>40%</cell></row><row><cell>30%</cell></row><row><cell>20%</cell></row><row><cell>10%</cell></row><row><cell>0%</cell></row><row><cell>29 30</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>31 32 33 34 35 36 37 38 39 40 41 42 43 Precision (%) Number of mentors iden&gt;fied</head><label></label><figDesc></figDesc><table /><note><p>(e) Samba</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2 :</head><label>2</label><figDesc>Precision (%) and number of newcomer-mentor pairs identified for different values of λ.</figDesc><table><row><cell>System</cell><cell>Formula</cell><cell cols="2">λ = 100</cell><cell cols="2">λ = 90</cell><cell cols="2">λ = 80</cell><cell cols="2">λ = 70</cell><cell cols="2">λ = 60</cell><cell cols="2">λ = 50</cell></row><row><cell></cell><cell>f 1</cell><cell>83%</cell><cell>18</cell><cell>83%</cell><cell>18</cell><cell>83%</cell><cell>18</cell><cell>84%</cell><cell>19</cell><cell>84%</cell><cell>19</cell><cell>86%</cell><cell>21</cell></row><row><cell></cell><cell>f 5 (baseline)</cell><cell>56%</cell><cell>18</cell><cell>53%</cell><cell>19</cell><cell>55%</cell><cell>20</cell><cell>55%</cell><cell>20</cell><cell>52%</cell><cell>21</cell><cell>54%</cell><cell>26</cell></row><row><cell>Apache httpd</cell><cell>0.33 • f 1 + 0.33 • f 2 + 0.33 • f 3 0.33 • f 1 + 0.33 • f 2 + 0.33 • f 4</cell><cell>83% 78%</cell><cell>18 18</cell><cell>85% 75%</cell><cell>20 20</cell><cell>82% 77%</cell><cell>22 22</cell><cell>83% 77%</cell><cell>24 22</cell><cell>80% 77%</cell><cell>25 22</cell><cell>77% 78%</cell><cell>26 23</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 3</cell><cell>89%</cell><cell>18</cell><cell>89%</cell><cell>18</cell><cell>81%</cell><cell>21</cell><cell>83%</cell><cell>23</cell><cell>79%</cell><cell>24</cell><cell>77%</cell><cell>26</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 4</cell><cell>78%</cell><cell>18</cell><cell>79%</cell><cell>19</cell><cell>79%</cell><cell>19</cell><cell>76%</cell><cell>21</cell><cell>78%</cell><cell>23</cell><cell>75%</cell><cell>24</cell></row><row><cell></cell><cell>f 1</cell><cell>26%</cell><cell>27</cell><cell>26%</cell><cell>27</cell><cell>26%</cell><cell>27</cell><cell>26%</cell><cell>27</cell><cell>25%</cell><cell>28</cell><cell>26%</cell><cell>31</cell></row><row><cell></cell><cell>f 5 (baseline)</cell><cell>17%</cell><cell>23</cell><cell>17%</cell><cell>23</cell><cell>17%</cell><cell>23</cell><cell>17%</cell><cell>24</cell><cell>17%</cell><cell>24</cell><cell>21%</cell><cell>29</cell></row><row><cell>FreeBSD</cell><cell>0.33 • f 1 + 0.33 • f 2 + 0.33 • f 3 0.33 • f 1 + 0.33 • f 2 + 0.33 • f 4</cell><cell>17% 30%</cell><cell>23 23</cell><cell>17% 25%</cell><cell>24 28</cell><cell>17% 20%</cell><cell>24 35</cell><cell>17% 20%</cell><cell>24 35</cell><cell>19% 21%</cell><cell>26 39</cell><cell>23% 20%</cell><cell>31 40</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 3</cell><cell>13%</cell><cell>23</cell><cell>13%</cell><cell>23</cell><cell>17%</cell><cell>24</cell><cell>15%</cell><cell>27</cell><cell>20%</cell><cell>30</cell><cell>24%</cell><cell>33</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 4</cell><cell>35%</cell><cell>23</cell><cell>31%</cell><cell>26</cell><cell>24%</cell><cell>33</cell><cell>22%</cell><cell>37</cell><cell>21%</cell><cell>38</cell><cell>20%</cell><cell>41</cell></row><row><cell></cell><cell>f 1</cell><cell>83%</cell><cell>12</cell><cell>85%</cell><cell>13</cell><cell>79%</cell><cell>14</cell><cell>79%</cell><cell>14</cell><cell>80%</cell><cell>15</cell><cell>80%</cell><cell>15</cell></row><row><cell></cell><cell>f 5 (baseline)</cell><cell>50%</cell><cell>12</cell><cell>50%</cell><cell>12</cell><cell>50%</cell><cell>12</cell><cell>56%</cell><cell>16</cell><cell>62%</cell><cell>21</cell><cell>64%</cell><cell>22</cell></row><row><cell>PostgreSQL</cell><cell>0.33 • f 1 + 0.33 • f 2 + 0.33 • f 3 0.33 • f 1 + 0.33 • f 2 + 0.33 • f 4</cell><cell>83% 83%</cell><cell>12 12</cell><cell>76% 77%</cell><cell>17 13</cell><cell>75% 73%</cell><cell>20 15</cell><cell>65% 76%</cell><cell>23 21</cell><cell>62% 73%</cell><cell>26 22</cell><cell>55% 70%</cell><cell>29 23</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 3</cell><cell>83%</cell><cell>12</cell><cell>77%</cell><cell>13</cell><cell>79%</cell><cell>14</cell><cell>75%</cell><cell>20</cell><cell>73%</cell><cell>22</cell><cell>70%</cell><cell>23</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 4</cell><cell>83%</cell><cell>12</cell><cell>79%</cell><cell>14</cell><cell>79%</cell><cell>14</cell><cell>79%</cell><cell>14</cell><cell>80%</cell><cell>20</cell><cell>76%</cell><cell>21</cell></row><row><cell></cell><cell>f 1</cell><cell>88%</cell><cell>24</cell><cell>88%</cell><cell>24</cell><cell>88%</cell><cell>25</cell><cell>82%</cell><cell>28</cell><cell>74%</cell><cell>31</cell><cell>70%</cell><cell>33</cell></row><row><cell></cell><cell>f 5 (baseline)</cell><cell>58%</cell><cell>26</cell><cell>58%</cell><cell>26</cell><cell>59%</cell><cell>27</cell><cell>59%</cell><cell>27</cell><cell>59%</cell><cell>27</cell><cell>59%</cell><cell>27</cell></row><row><cell>Python</cell><cell>0.33 • f 1 + 0.33 • f 2 + 0.33 • f 3 0.33 • f 1 + 0.33 • f 2 + 0.33 • f 4</cell><cell>62% 73%</cell><cell>26 26</cell><cell>68% 75%</cell><cell>31 28</cell><cell>66% 74%</cell><cell>32 34</cell><cell>64% 63%</cell><cell>36 40</cell><cell>63% 60%</cell><cell>40 45</cell><cell>61% 57%</cell><cell>41 47</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 3</cell><cell>69%</cell><cell>26</cell><cell>71%</cell><cell>28</cell><cell>66%</cell><cell>32</cell><cell>64%</cell><cell>33</cell><cell>62%</cell><cell>39</cell><cell>60%</cell><cell>43</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 4</cell><cell>81%</cell><cell>26</cell><cell>81%</cell><cell>26</cell><cell>75%</cell><cell>32</cell><cell>65%</cell><cell>37</cell><cell>62%</cell><cell>42</cell><cell>58%</cell><cell>48</cell></row><row><cell></cell><cell>f 1</cell><cell>87%</cell><cell>31</cell><cell>84%</cell><cell>32</cell><cell>84%</cell><cell>32</cell><cell>80%</cell><cell>35</cell><cell>80%</cell><cell>35</cell><cell>78%</cell><cell>37</cell></row><row><cell></cell><cell>f 5 (baseline)</cell><cell>53%</cell><cell>30</cell><cell>52%</cell><cell>33</cell><cell>52%</cell><cell>33</cell><cell>53%</cell><cell>34</cell><cell>53%</cell><cell>36</cell><cell>50%</cell><cell>42</cell></row><row><cell>Samba</cell><cell>0.33 • f 1 + 0.33 • f 2 + 0.33 • f 3 0.33 • f 1 + 0.33 • f 2 + 0.33 • f 4</cell><cell>77% 73%</cell><cell>30 30</cell><cell>72% 70%</cell><cell>32 33</cell><cell>69% 68%</cell><cell>35 34</cell><cell>69% 67%</cell><cell>36 36</cell><cell>66% 63%</cell><cell>38 40</cell><cell>64% 63%</cell><cell>42 41</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 3</cell><cell>77%</cell><cell>30</cell><cell>77%</cell><cell>31</cell><cell>69%</cell><cell>35</cell><cell>69%</cell><cell>35</cell><cell>68%</cell><cell>37</cell><cell>65%</cell><cell>40</cell></row><row><cell></cell><cell>0.5 • f 1 + 0.25 • f 2 + 0.25 • f 4</cell><cell>80%</cell><cell>30</cell><cell>78%</cell><cell>32</cell><cell>78%</cell><cell>32</cell><cell>76%</cell><cell>33</cell><cell>72%</cell><cell>36</cell><cell>71%</cell><cell>38</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 :</head><label>3</label><figDesc>Number and percentage of correct and incorrect top 1 and top 2 mentor recommendations for newcomers in the test set.</figDesc><table><row><cell></cell><cell cols="2">Top 1</cell><cell cols="2">Top 2</cell></row><row><cell>System</cell><cell>Correct</cell><cell>Wrong</cell><cell>Correct</cell><cell>Wrong</cell></row><row><cell>Apache</cell><cell>11 (85%)</cell><cell>2 (15%)</cell><cell>21 (81%)</cell><cell>5 (19%)</cell></row><row><cell>FreeBSD</cell><cell>10 (30%)</cell><cell>23 (70%)</cell><cell>16 (24%)</cell><cell>50 (76%)</cell></row><row><cell>PostgreSQL</cell><cell>7 (100%)</cell><cell>0 (0%)</cell><cell>14 (100%)</cell><cell>0 (0%)</cell></row><row><cell>Python</cell><cell>20 (65%)</cell><cell>11 (35%)</cell><cell>48 (77%)</cell><cell>14 (23%)</cell></row><row><cell>Samba</cell><cell>31 (94%)</cell><cell>2 (6%)</cell><cell>54 (82%)</cell><cell>12 (18%)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 4 :</head><label>4</label><figDesc>Precision in the recommendation of mentors among top committers of files traced onto newcomers emails.</figDesc><table><row><cell></cell><cell cols="2">Top 1</cell><cell cols="2">Top 2</cell></row><row><cell>System</cell><cell>Correct</cell><cell>Wrong</cell><cell>Correct</cell><cell>Wrong</cell></row><row><cell>Apache</cell><cell>0 (0%)</cell><cell>6 (100%)</cell><cell>1 (8%)</cell><cell>11 (92%)</cell></row><row><cell>FreeBSD</cell><cell>1 (6%)</cell><cell>15 (94%)</cell><cell>1 (3%)</cell><cell>31 (97%)</cell></row><row><cell>PostgreSQL</cell><cell>1 (50%)</cell><cell>1 (50%)</cell><cell>1 (25%)</cell><cell>3 (75%)</cell></row><row><cell>Python</cell><cell>0 (0%)</cell><cell>7 (100%)</cell><cell>1 (7%)</cell><cell>13 (93%)</cell></row><row><cell>Samba</cell><cell>7 (35%)</cell><cell>13 (65%)</cell><cell>14 (35%)</cell><cell>26 (65%)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>http://arnetminer.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1"><p>In Section</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>4.2 we report results for k = 1 and k = 2, while the Appendix also reports results for k = 3 and k = 4.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We would like to thank the contributors of FreeBSD, Post-greSQL, Python, and Samba who responded to our survey. We would also thank Annibale Panichella for his help in the manual validation of the results.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Recovering traceability links between code and documentation</title>
		<author>
			<persName><forename type="first">G</forename><surname>Antoniol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Canfora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Casazza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">De</forename><surname>Lucia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Merlo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="970" to="983" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Reducing the effort of bug report triage: Recommenders for development-oriented decisions</title>
		<author>
			<persName><forename type="first">J</forename><surname>Anvik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">C</forename><surname>Murphy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Softw. Eng. Methodol</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">10</biblScope>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The secret life of bugs: Going past the errors and omissions in software repositories</title>
		<author>
			<persName><forename type="first">J</forename><surname>Aranda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Venolia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">31st International Conference on Software Engineering, ICSE 2009</title>
		<meeting><address><addrLine>Vancouver, Canada, Proceedings</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009">May 16-24, 2009. 2009</date>
			<biblScope unit="page" from="298" to="308" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Linking e-mails and source code artifacts</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bacchelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lanza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Robbes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering</title>
		<meeting>the 32nd ACM/IEEE International Conference on Software Engineering<address><addrLine>Cape Town, South Africa</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010-05-08">1-8 May 2010. 2010</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="375" to="384" />
		</imprint>
	</monogr>
	<note>ICSE 2010</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Baeza-Yates</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ribeiro-Neto</surname></persName>
		</author>
		<title level="m">Modern Information Retrieval</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Mining email social networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gourley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">T</forename><surname>Devanbu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gertz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Swaminathan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR 2006</title>
		<meeting>the 2006 International Workshop on Mining Software Repositories, MSR 2006<address><addrLine>Shanghai, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">May 22-23, 2006. 2006</date>
			<biblScope unit="page" from="137" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Open borders? immigration in open source projects</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gourley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">T</forename><surname>Devanbu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Swaminathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fourth International Workshop on Mining Software Repositories, MSR 2007</title>
		<meeting><address><addrLine>Minneapolis, MN, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007">May 19-20, 2007. 2007</date>
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Don&apos;t touch my code!: examining the effects of ownership on software quality</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Nagappan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Gall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">T</forename><surname>Devanbu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGSOFT/FSE&apos;11 19th ACM SIGSOFT Symposium on the Foundations of Software Engineering and 13rd European Software Engineering Conference</title>
		<meeting><address><addrLine>Szeged, Hungary</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">September 5-9, 2011. 2011</date>
			<biblScope unit="page" from="4" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Supporting change request assignment in open source development</title>
		<author>
			<persName><forename type="first">G</forename><surname>Canfora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Cerulo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2006 ACM Symposium on Applied Computing (SAC)</title>
		<meeting>the 2006 ACM Symposium on Applied Computing (SAC)<address><addrLine>Dijon, France</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006">April 23-27, 2006. 2006</date>
			<biblScope unit="page" from="1767" to="1772" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Social interactions around cross-system bug fixings: the case of FreeBSD and OpenBSD</title>
		<author>
			<persName><forename type="first">G</forename><surname>Canfora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Cerulo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Cimitile</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Di Penta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Working Conference on Mining Software Repositories, MSR 2011 (Co-located with ICSE)</title>
		<meeting>the 8th International Working Conference on Mining Software Repositories, MSR 2011 (Co-located with ICSE)<address><addrLine>Waikiki, Honolulu, HI, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011">May 21-28, 2011. 2011</date>
			<biblScope unit="page" from="143" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Socio-technical congruence: a framework for assessing the impact of technical and work dependencies on software development productivity</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cataldo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Herbsleb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Carley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second International Symposium on Empirical Software Engineering and Measurement</title>
		<meeting>the Second International Symposium on Empirical Software Engineering and Measurement<address><addrLine>Kaiserslautern, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">October 9-10, 2008. 2008</date>
			<biblScope unit="page" from="2" to="11" />
		</imprint>
	</monogr>
	<note>ESEM 2008</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Identification of coordination requirements: implications for the design of collaboration and awareness tools</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cataldo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wagstrom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Herbsleb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Carley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2006 ACM Conference on Computer Supported Cooperative Work, CSCW 2006</title>
		<meeting>the 2006 ACM Conference on Computer Supported Cooperative Work, CSCW 2006<address><addrLine>Banff, Alberta, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">November 4-8, 2006. 2006</date>
			<biblScope unit="page" from="353" to="362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Hipikat: A project memory for software development</title>
		<author>
			<persName><forename type="first">D</forename><surname>Cubranic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">C</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Singer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Booth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Software Eng</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="446" to="465" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Moving into a new software project landscape</title>
		<author>
			<persName><forename type="first">B</forename><surname>Dagenais</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ossher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K E</forename><surname>Bellamy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Robillard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>De Vries</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering</title>
		<meeting>the 32nd ACM/IEEE International Conference on Software Engineering<address><addrLine>Cape Town, South Africa</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010-05-08">1-8 May 2010. 2010</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="275" to="284" />
		</imprint>
	</monogr>
	<note>ICSE 2010</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An interpretation of the results of the analysis of pair programming during novices integration in a team</title>
		<author>
			<persName><forename type="first">I</forename><surname>Fronza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sillitti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Succi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third International Symposium on Empirical Software Engineering and Measurement</title>
		<meeting>the Third International Symposium on Empirical Software Engineering and Measurement<address><addrLine>Lake Buena Vista, Florida, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-10-15">2009. October 15-16, 2009. 2009</date>
			<biblScope unit="page" from="225" to="235" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An algorithm for suffix stripping</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Porter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Program</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="130" to="137" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Evolution of the core team of developers in libre software projects</title>
		<author>
			<persName><forename type="first">G</forename><surname>Robles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>González-Barahona</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Herraiz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th International Working Conference on Mining Software Repositories</title>
		<meeting>the 6th International Working Conference on Mining Software Repositories<address><addrLine>Vancouver, BC, Canada</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009-05-16">2009. May 16-17, 2009. 2009</date>
			<biblScope unit="page" from="167" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Entering the circle of trust: developer initiation as committers in open-source projects</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sinha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Working Conference on Mining Software Repositories, MSR 2011</title>
		<meeting>the 8th International Working Conference on Mining Software Repositories, MSR 2011<address><addrLine>Waikiki, Honolulu, HI, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011">May 21-28, 2011. 2011</date>
			<biblScope unit="page" from="133" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Fuzzy set and cache-based approach for bug triaging</title>
		<author>
			<persName><forename type="first">A</forename><surname>Tamrawi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">T</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Al-Kofahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGSOFT/FSE&apos;11 19th ACM SIGSOFT Symposium on the Foundations of Software Engineering and 13rd European Software Engineering Conference</title>
		<meeting><address><addrLine>Szeged, Hungary</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">September 5-9, 2011. 2011</date>
			<biblScope unit="page" from="365" to="375" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Mining advisor-advisee relationships from research publication networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 16th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">July 25-28, 2010. 2010</date>
			<biblScope unit="page" from="203" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Growth of newcomer competence: challenges of globalization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mockus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Future of Software Engineering Research, FoSER 2010, at the 18th ACM SIGSOFT International Symposium on Foundations of Software Engineering</title>
		<meeting>the Workshop on Future of Software Engineering Research, FoSER 2010, at the 18th ACM SIGSOFT International Symposium on Foundations of Software Engineering<address><addrLine>Santa Fe, NM, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-11-07">2010. November 7-11, 2010. 2010</date>
			<biblScope unit="page" from="443" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Does the initial environment impact the future of developers</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mockus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 33rd International Conference on Software Engineering, ICSE 2011</title>
		<meeting>the 33rd International Conference on Software Engineering, ICSE 2011<address><addrLine>Waikiki, Honolulu , HI, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">May 21-28, 2011. 2011</date>
			<biblScope unit="page" from="271" to="280" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
