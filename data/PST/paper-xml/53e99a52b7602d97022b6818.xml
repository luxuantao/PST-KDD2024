<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Scenario Construction Process</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Julio</forename><forename type="middle">Cesar</forename><surname>Sampaio</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Âcia Universidade Cato Â lica do Rio de Janeiro</orgName>
								<address>
									<settlement>Pontifõ, Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Prado</forename><surname>Leite</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Âcia Universidade Cato Â lica do Rio de Janeiro</orgName>
								<address>
									<settlement>Pontifõ, Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Graciela</forename><forename type="middle">D S</forename><surname>Hadad</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universidad Nacional de La Plata</orgName>
								<address>
									<settlement>Buenos Aires</settlement>
									<country key="AR">Argentina</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jorge</forename><forename type="middle">Horacio</forename><surname>Doorn</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universidad Nacional de La Plata</orgName>
								<address>
									<settlement>Buenos Aires</settlement>
									<country key="AR">Argentina</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">Universidad Nacional del Centro de la Provincia de Buenos Aires</orgName>
								<address>
									<settlement>Buenos Aires</settlement>
									<country key="AR">Argentina</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">Universidad Nacional del Centro de la Provincia de Buenos Aires</orgName>
								<address>
									<settlement>Buenos Aires</settlement>
									<country key="AR">Argentina</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Gladys</forename><forename type="middle">N</forename><surname>Kaplan</surname></persName>
							<affiliation key="aff3">
								<orgName type="institution">Universidad de Belgrano</orgName>
								<address>
									<settlement>Buenos Aires</settlement>
									<country key="AR">Argentina</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">Universidad de Belgrano</orgName>
								<address>
									<settlement>Buenos Aires</settlement>
									<country key="AR">Argentina</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Scenario Construction Process</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">DFA45D37ABCA0DDAA8929D1FF9829553</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T06:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Organisational context</term>
					<term>Requirements elicitation</term>
					<term>Scenario management</term>
					<term>Scenario modelling</term>
					<term>Stakeholders</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Scenario is a description technique that has been attracting a lot of attention from practitioners and from researchers. Several disciplines have been using scenarios for some time now, but recently the information system community has dedicated special attention to the possibilities that this description technique provides to enhance understandability of task-related descriptions and communicability among stakeholders. This paper aims its attention at a particular scenario construction process, but while doing so it tackles important problems regarding scenario management, in particular scenario organisation. Our scenarios are described in a structured way, using a simple conceptual model together with a form-oriented language. We have been using this representation for some time now, and our results are based on several case studies conducted with real-world problems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The necessity of ensuring good understanding between requirements engineers and clients/users has motivated the research and development of methods that allow better results in the collaboration among all participants in the requirements definition process. Requirements engineers should understand, model and analyse the application domain where the software will run and the clients/users must validate whether or not the engineers' vision is correct. Our research uses the idea of scenario as a medium to achieve this goal.</p><p>The word scenario, defined as 'the plot of a motion picture' in the Merrian-Webster Dictionary, has been used for a long time in several areas of different disciplines (military strategy, decision making, marketing, economy). The information system area started using scenarios in the human-computer interface and recently in software engineering. Jarke, Bui and Carroll <ref type="bibr" target="#b49">[50]</ref> provide an overview of scenario research in a broader view, both from an information system point of view as well as from a management (decision theory) view. They point out that the effectiveness of the use of scenarios in several disciplines is fundamentally due to their capability of stimulating thinking. Scenario provides a situated task vision together with an effective way of communication among the actors involved in the subject of study.</p><p>For us, scenarios describe situations that happen in the Universe of Discourse (UofD). <ref type="foot" target="#foot_0">1</ref> Carroll <ref type="bibr" target="#b4">[5]</ref>, taking into account usage aspects, believes that scenarios allow us to know the problem, to unify criteria, to gain clients/users compromise, to organise the involved details and to train new participants. The use of scenarios, as a way of understanding the domain in which the software will perform, has been recommended by several authors <ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref><ref type="bibr" target="#b8">[9]</ref> and those proposals became very important for extending the use of scenarios in real practice. However, a detailed analysis of the recommendations from the Requirements Eng (2000) 5:38±61 ß 2000 Springer-Verlag London Limited</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Requirements Engineering</head><p>Correspondence and offprint requests to: Julio Cesar Sampaio do Prado Leite, Pontifı ´cia Universidade Cato ´lica do Rio de Janeiro -PUC-Rio, Rua Marque ˆs de Sa ˜o Vicente 255, 22451-041 Ga ´vea-RJ, Rio de Janeiro, Brazil. Email: julio@inf.puc-rio.br literature shows some degree of dispersion and contradiction in the use of scenarios. Recent work of the CREWS project confirms this observation <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref>. This lack of precision of when and how scenarios should be used has spread to the engineers who are using these techniques in the field. Thus, most developers see scenario creation more as a craft than as an engineering task. Recent studies concerning the use of scenarios in industrial projects <ref type="bibr" target="#b10">[11]</ref> have clearly proved this fact and pointed out the necessity of more detailed definitions on scenario construction to increase their use in real situations. This is in complete agreement with Rolland et al. <ref type="bibr" target="#b11">[12]</ref> and Sutcliffe <ref type="bibr" target="#b12">[13]</ref>, who think that there is little understanding about the usage and production of scenarios.</p><p>The variety of interpretations, syntax and construction mechanisms for scenarios goes as far as showing up basic contradictions. For instance, with respect to the scenario construction process there is no agreement whether scenarios should be built in a top-down or in a bottom-up fashion. We believe that part of the problem of such diversity in the scenario literature is due to the fact that the scenarios building process should be neither top-down nor bottom-up.</p><p>The present work proposes a strategy for the creation and use of scenarios 2 as a grounding representation for the requirements engineering process. The strategy is built on the assumption that scenarios must rely on natural language as a means of communication among stakeholders, in particular among clients/users and requirements engineers. The strategy also relies on the idea of scenario evolution <ref type="bibr" target="#b13">[14]</ref>, starting from what Rolland et al. classified as organisational context <ref type="bibr" target="#b9">[10]</ref>, which aims at the 'broad picture of how the work gets done' <ref type="bibr">[10, p. 30]</ref>, and what Jarke et al. <ref type="bibr" target="#b49">[50]</ref> called environmental scenarios. Our scenarios are neither specifications nor requirements, they are auxiliary descriptions for the process of requirements definition. They provide a knowledge source where requirements may be found and specifications may be based upon.</p><p>This paper details a scenario construction process. This process addresses two important problems related to scenario management <ref type="bibr" target="#b49">[50]</ref>: organisation and quality. The organisation problem arises as we start to deal with a large number of scenarios. The quality problem refers to the reliability of the descriptions presented as scenarios. Regarding the first problem, we provide an innovative middle-out strategy that systematises the construction process using typed relationships and operational heuristics. Regarding quality, we provide policies and procedures for detecting defects and errors in scenarios. It is important to stress that our proposal is based on a cumulative experience on the use of scenarios. For the last four years, we have analysed more than 20 software projects that used scenarios in the requirements process. In total we have analysed more than 400 different scenarios.</p><p>We understand that describing the process, giving data on its use and comparing it with other work contributes to increase the knowledge about scenario management. We have organised the paper into six sections. Section 2 provides a survey of existing scenario construction processes. In section 3 we present our strategy, giving emphasis to its reliance on natural language. Detail on how scenarios are put together is given in section 4. Section 5 reports on our experience in producing scenarios. In conclusion we state that our results are important to scenario management by comparing our work with previous work, as well as pointing to future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Different Approaches for Scenario Construction</head><p>There are several styles 3 in which scenarios are built. such as textual narrative, storyboards, video mock-ups and written prototypes <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b14">15]</ref>. This section stresses the distinction between top-down and bottom-up strategies by quoting some of the construction heuristics proposed by the literature. We believe that this review is important since our proposal, a middle-out strategy, is perceived by us to be a major contribution. This belief is based on our own experience of previously using topdown and bottom-up strategies. In the following paragraphs we present different quotations from the literature.</p><p>Even if it is not clearly stated, Booch <ref type="bibr" target="#b15">[16]</ref> seems to adhere to a top-down approach since: 'The most complex application can be characterized in terms of a few dozen primary scenarios. Primary scenarios model the central problem. A Primary scenario represents some fundamental system function. Secondary Scenarios represent some variation on the theme of a primary scenario. The entire desired behavior of a software system can be captured through a web of scenarios, much the same way as a storyboard does in making a movie. <ref type="bibr">'</ref> Booch's primary scenarios are seen as relevant scenarios by Firesmith <ref type="bibr" target="#b16">[17]</ref>; they are linked together by a scenario lifecycle diagram: 'A scenario lifecycle diagram is used to document the valid interactions 2 'The process dimension of scenarios is seldom considered in the literature' <ref type="bibr">[10, p. 36</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>The form view in the CREWS framework <ref type="bibr" target="#b9">[10]</ref>. In this paper we consider 'use cases' as one of the several styles of scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Scenario Construction Process</head><p>among the top level scenarios of a system or assembly.' And 'Because scenarios are functional abstractions, there is often a strong tendency to functionally decompose them. <ref type="bibr">'</ref> Sutcliffe's <ref type="bibr" target="#b17">[18]</ref> proposal may also be seen as a topdown approach taking into account the heuristics: '1. Initial requirements capture and domain familiarization. A grounding scenario is developed based on the preliminary domain analysis, 2. Specification and development of the concept demonstrator (early prototype). Design Rationale diagrams are used to explain design options at the key points, 3. Requirements Analysis -validation session to critique the concept demonstrator.'</p><p>The scenario formalisation process using regular grammars in a tree of scenarios described by Hsia et al. <ref type="bibr" target="#b18">[19]</ref> is also an example of a top-down approach.</p><p>On the other hand, Dano et al. <ref type="bibr" target="#b19">[20]</ref> are closer to a bottom-up approach in their proposal 'to collect and describe use cases based on a tabular notation' and then 'to create Petri Nets for each use case in order to bring the necessary formalism to the analyst' and finally 'to set up formal inter use cases links to obtain a global description of the application. <ref type="bibr">'</ref> Robertson <ref type="bibr" target="#b20">[21]</ref> identifies the need for linking scenarios: 'Since a single scenario gives partial information, scenario-based analysis involves the observation of a set of scenarios.' And 'The systematic question-asking technique helps to create a bridge between the specific scenario events and the general situations that enable, cause, or explain the events. <ref type="bibr">'</ref> Potts et al.'s Inquiry Cycle Model <ref type="bibr" target="#b14">[15]</ref> may also be included in the bottom-up approach: 'Scenarios are represented at two levels of detail: 1. Episodes or phases that are sequences of fine-grained actions, 2. Families of Scenarios using Jacobson's uses relationship.'</p><p>It is also useful to watch the construction of use cases, where top-down approaches may be found, such as in Wirfs-Brock's heuristics <ref type="bibr" target="#b21">[22]</ref>: '1. Determine the software system (boundaries, scope, identify actors, identify system interfaces, develop first-cut subsystem partitioning), 2. Stereotype the actors (active or passive, roles), 3. Determine system use-cases (decompose system into discrete chunks meaningful to both businesspeople and developers), 4. Construct conversations (sequence of interactions between actors and the system for each usecase).' Also, Oberg et al.'s <ref type="bibr" target="#b22">[23]</ref> proposal corresponds to a top-down approach, since they wrote: '1. Problem analysis', '2. Understanding stakeholder needs', that involves 'Find actors and use cases' and 'Outline the use-case model', '3. Defining the system', that involves the tasks: 'Refine the use-case model' and 'Describe use cases', '4. Managing the scope of the project', that involves: 'Prioritize use cases' and 'Model a use-case view of the system architecture', '5. Refining the system definition' that involves: 'Detail use cases', and finally '6. Managing changing requirements. <ref type="bibr">'</ref> Schneider and Winters' <ref type="bibr" target="#b23">[24]</ref> proposal consists of four main primary phases following a top-down approach: '1. Inception phase: identify actors and high-level use cases are developed to help scope out the project; 2. Elaboration phase: more detailed use cases are developed, they are used to create the plan for next phase. Product of this phase: detailed primary scenarios and secondary scenarios; 3. Construction phase: use cases are used as a starting point for design and for developing test plans; 4. Transition phase: use cases can be used to develop user guides and training.'</p><p>An intermediate approach closer to top-down is that one of Constantine <ref type="bibr" target="#b24">[25]</ref>, where the process for generating uses cases involves the following: 'Identify candidate use cases based on user role model and brainstorming: generate a list of use cases; Sketch use case map based on initial understanding (relationships among use cases); Develop use case narratives in structured form; Reduce concrete use cases to essential form; Switch between narratives and map when needed.'</p><p>On the other hand, Jacobson <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b26">27]</ref> follows a strict bottom-up approach: 'We first describe the basic use cases and then describe how to enhance them to allow more advanced use cases, some of which may depend on the basic ones. Abstract use cases should evolve from concrete use cases, not the other way round. Extends association let us capture the functional requirements of a complex system, in the same way we learn about any new subject: First we understand the basic functions, then we introduce complexity. <ref type="bibr">'</ref> Gough et al. <ref type="bibr" target="#b27">[28]</ref> follow an approach closer to the one proposed in this article regarding their heuristics: '1. Creation of natural language documents: project scope documents, customer needs documents, service needs documents, competitor analysis and market analysis. Get functional specifications of an existing system, 2. To Identify the main actors in the system, 3. To derive the Scenario headings, 4. To complete Scenario Description.'</p><p>In their conclusions Gough et al. <ref type="bibr" target="#b27">[28]</ref> clearly establish: 'The need to provide a high level view of scenarios interaction as a means of addressing the complexity of a large number of scenarios. <ref type="bibr">'</ref> Weidenhaupt et al. <ref type="bibr" target="#b10">[11]</ref> have found four types of scenario processes in practice: '(i) Top-down decomposition', '(ii) From black-box to white-box scenarios', '(iii) From informal to formal scenario definition' and '(iv) Incremental scenario development. <ref type="bibr">'</ref> There are several lines written about top-down or bottom-up, but we would like to point out Jackson's view <ref type="bibr" target="#b2">[3]</ref> on the matter: 'The first (difficulty) is that Top-Down enforces the riskiest possible ordering of decisions. The largest decision is the subdivision of the whole problem: it is the largest in scale and the largest in its consequences. Yet this decision is taken first, when nothing is yet known and everything remain to be discovered.' 'The second difficulty is that the real world hardly ever has a hierarchical structure. Instead there are many parallel and overlapping structures.' With these excerpts from the literature we have shown that there is no agreement regarding how to build scenarios. Of course, if the functionality of the system is well known, the top-down approach could be used, while if there is not enough knowledge we need to extract it from the bottom up. In our process, where scenarios are first deployed to understand the UofD, we start from a bottom-up manner and later organise the scenarios using the middle-out strategy.</p><p>We would like to point out that our contribution should be viewed as a scenario engineering approach. Although we do not claim to have the final word on scenario construction, we firmly believe that the detailed description of our process contributes to the field and establishes grounds for further improvements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">A Natural Language-Based Approach</head><p>In this section we will focus on representation schemas that deal with scenarios. First, we give a general overview of our approach, which uses a controlled vocabulary based on the lexicon of the application. The following sections, 3.2 and 3.3, detail the representations we use for scenarios and for the lexicon.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Overview</head><p>Although we know that the requirements engineers should elicit, model and analyse requirements, we also know that these tasks are very much tangled, forming a complex web of relationships. Our work <ref type="bibr" target="#b1">[2]</ref> does tackle these three tasks, but here we will be more concerned with the modelling aspect, in particular with an emphasis on the organisation aspect of modelling.</p><p>A scenario is a partial description of the application behaviour that occurs at a given moment in a specific geographical context -a situation <ref type="bibr" target="#b8">[9]</ref>. Several authors have studied this technique <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref><ref type="bibr" target="#b8">[9]</ref><ref type="bibr" target="#b14">15]</ref>. Although each scenario describes a particular situation, none of them is entirely independent of the rest of the scenarios. Each scenario keeps a semantic relationship with other scenarios <ref type="bibr" target="#b15">[16]</ref>.</p><p>Scenarios accomplish different goals depending on the phase where they are used during the software development process. In the RE process, the scenario goals are:</p><p>. to capture the requirements;</p><p>. to provide a means of communication among stakeholders; . to provide an anchor for traceability.</p><p>Scenarios are not created from the minds of the requirements engineers; their definition should be anchored on real situations. Our work anchors scenarios on the organisational context <ref type="bibr" target="#b9">[10]</ref>. But how do we elicit such situations and model them accordingly? How do we avoid using a modelling scheme that does not fit the elicitation process? As such, we have the challenge of having to choose a modelling strategy that fits the process of eliciting and representing situations.</p><p>Using natural language for describing situations helps the validation with the client/user and complies with the goal of improving stakeholders' communication. The use of the Language Extended Lexicon (LEL) and scenarios for requirements elicitation and their utilisation throughout the entire software development process <ref type="bibr" target="#b1">[2]</ref> allows for validation with the client/user. The main purpose of the lexicon is to capture the application vocabulary and its semantics, postponing the comprehension of the application functionality <ref type="bibr" target="#b28">[29]</ref>. Scenarios are used to understand the application and its functionality: each scenario describes a specific situation of the application, centring the attention on its behaviour.</p><p>The rationale of the proposed approach was presented in Leite et al. <ref type="bibr" target="#b1">[2]</ref> and the details of the first case study, based on the Argentine Passports Issue System, 4 were reported in Hadad et al. <ref type="bibr" target="#b29">[30]</ref>. On the basis of these results, we conducted several other case studies, including the one used as an example in this article, which is a variation of the widely known Meeting Scheduler problem <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b31">32]</ref>. 5 This case was studied only for the RE process and consisted in modelling the meeting scheduler for the authorities of the Universidad de Belgrano, Buenos Aires.</p><p>Our scenario model has a decomposition organisation, but this does not imply that we use a top-down approach to build the scenarios. We do not use a bottom-up approach either. A truly bottom-up process would begin by discovering episodes, then building 4</p><p>The past strategy consisted on building the LEL from the UofD. Afterwards, scenarios were constructed based on the UofD and using the vocabulary defined in the LEL. The lexicon and scenarios were then validated against the UofD and the scenarios were used to verify the lexicon. The problem proposed by van Lamsweerde is used for validating methods/techniques in RE.</p><p>A Scenario Construction Process sub-scenarios and finally integrating them in scenarios. A top-down process would begin building either one or few scenarios of the whole system, refining them later to obtain a succession of scenario sets with increasing levels of detail.</p><p>We based the construction of scenarios on the vocabulary of the Universe of Discourse (UofD). This vocabulary reflects the peculiar and most used words or phrases in the UofD and should be present in the LEL. The LEL is a representation of the symbols in the application language, and it is anchored on a very simple idea: understand the language of the problem, without worrying about understanding the problem.</p><p>Several authors <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b24">25]</ref> suggest the use of a glossary containing the vocabulary of the application. Our proposal is to build not just a glossary but a lexicon that involves the denotation and the connotation of every symbol discovered as a word or phrase relevant to the application domain. The purpose of constructing this lexicon is not only to enable a good communication and agreement between the clients/users and the engineering team but also to bootstrap the scenario construction process and to help their description facilitating the validation process. The use of the symbols of the lexicon in the scenarios makes it possible for these symbols to be a natural hyperlink between these two representation structures, a fundamental characteristic of our requirements baseline concept <ref type="bibr" target="#b1">[2]</ref>.</p><p>In real practice, of 15 projects analysed by the CREWS project <ref type="bibr" target="#b10">[11]</ref> just one project, and to a lesser extent three others, had employed glossaries. This one project presented the practice of linking terms in the glossary to scenarios by means of a hypertext navigation. In our understanding this is an indication of the necessity that requirements engineers have to anchor their understanding on the application vocabulary.</p><p>A fundamental characteristic of our work <ref type="bibr" target="#b1">[2]</ref> is that we anchor the natural language representation of scenarios on a previous lexicon of the application language. This characteristic is original and tackles the important problem of reducing ambiguity in natural language-based descriptions. As the scenario uses the LEL symbols, they became a hypertext, the lexicon symbols being the hyperlinks between these two representations.</p><p>In the following sections we detail the representation schemas used to describe the lexicon (LEL) and the UofD situations (scenarios). Again we stress that both representations are not intended to replace the requirements specification -their goal is to help the production of specifications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Language Extended Lexicon (LEL)</head><p>The LEL <ref type="bibr" target="#b32">[33]</ref> is a meta-model designed to help the elicitation and representation of the language used in the application. This model is centred on the idea that a closed description of language terms improves the comprehension of the UofD. It is a natural language representation that aims to capture the vocabulary of an application.</p><p>The lexicon main goal is to register signs (words or phrases) which are peculiar to the application domain. Each entry in the lexicon is identified by a name or names (case of synonyms) and has two descriptions (as opposed to the usual dictionary, which provides only one). The first, called Notion, is the usual one and its goal is to describe the denotation (defines 'what the symbol is') of the word or phrase. The second, called Behavioural Response, is intended to describe the connotation (describes 'how the symbols acts in the system') of the word or phrase, that is, it provides extra information about the context at hand. Entries are classified into four types according to its general use in the Universe of Discourse. The types are: Subject, Object, Verb and State.</p><p>Figure <ref type="figure" target="#fig_1">1</ref> presents the Language Extended Lexicon Model, while Fig. <ref type="figure" target="#fig_2">2</ref> shows an example of a symbol based on the Meeting Scheduler case.</p><p>While describing the symbols, two principles [29] have to be followed: the principle of circularity 6 that intends to maximise the use of symbols in the description of other symbols, and the principle of minimal vocabulary that intends to minimise the use of symbols that are external to the lexicon. These external symbols must belong to a small subset of a natural language dictionary. 7 These rules stress the description of the vocabulary as a self-contained and highly connected hypertext <ref type="bibr" target="#b32">[33]</ref>.</p><p>In Fig. <ref type="figure" target="#fig_3">3</ref>, we provide an entity-relationship <ref type="bibr" target="#b33">[34]</ref> model of the LEL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Scenarios</head><p>Our scenario model is a structure composed of the entities: title, goal, context, resources, actors, 8 episodes and exceptions and the attribute constraint (see Fig. <ref type="figure" target="#fig_4">4</ref>). Actors and resources are an enumeration. Title, goal, context and exceptions are declarative sentences while episodes are a set of sentences expressed in a simple language that give an operational description of behaviour.</p><p>Figure <ref type="figure" target="#fig_0">5</ref> shows the template for describing scenarios based on natural language <ref type="bibr" target="#b1">[2]</ref>. The scenario model should be seen as a syntax and structural guidelines to:</p><p>. obtain a homogeneous description style among the scenario set; . demonstrate the several aspects that scenarios can cover; and . facilitate scenario verification (mainly by an automated process).</p><p>Guidance in the structure of use cases and scenarios is shown by <ref type="bibr">Cockburn [35]</ref>: 'people in a project are quite confused about how to write them'. That is why Schneider and Winters <ref type="bibr" target="#b23">[24]</ref> also proposed a template to describe use cases and scenarios. Jarke et al. <ref type="bibr">[50, p. 162</ref>] pointed out that practitioners claimed for guidance in writing structured text scenarios.</p><p>A scenario must satisfy a goal that is reached by performing its episodes. Episodes represent the main course of action but they also include variations or possible alternatives. While performing episodes an exception may arise, signalling an obstacle to goal achievement. The treatment of the exception may satisfy the original goal or not.</p><p>Although main and alternative courses of action are treated within one scenario, its comprehension is facilitated by the use of natural language, well-bounded situations and the use of sub-scenarios. This deals with the scenario explosion problem pointed out by Cockburn <ref type="bibr" target="#b34">[35]</ref>.</p><p>A sub-scenario is used when:</p><p>. common behaviour is detected in several scenarios;</p><p>. a complex conditional or alternative course of action appears in a scenario; and . the need to enhance a situation with a concrete and precise goal is detected inside a scenario.</p><p>The attribute constraint is used to characterise nonfunctional requirements applied to context, resources and episodes. A scenario may be interrupted by exceptions. Each exception is described as a simple sentence that specifies    For instance, in English the words in Collins Dictionary's COBUILD Wordlist, around 700 words, is an example of this subset. <ref type="bibr" target="#b7">8</ref> Constantine <ref type="bibr" target="#b24">[25]</ref> makes use of the term UserRole with the same meaning. the cause of the interruption. If we include the title of another scenario, the exception will be treated by this scenario.</p><p>The context is described detailing a geographical location, a temporal location and preconditions. Each of these sub-components may be expressed by one or more simple sentences linked by the logical connectors and, or.</p><p>Episodes are simple, conditional and optional ones. Simple episodes are those necessary to complete the scenario. Conditional episodes are those whose occurrence depends on a specified condition. The condition may be internal or external to the scenario. Internal conditions may be due to alternative preconditions, actors or resource constraints and previous episodes. Optional episodes are those that may or may not take place depending on conditions that cannot be explicitly detailed.</p><p>Independently of its type, an episode can be expressed as a single action or can itself be conceived as a scenario, thus enabling the possibility of decomposition of a scenario in sub-scenarios.</p><p>The scenario model provides the description of behaviours with different temporal orders. A sequence of episodes implies a precedence order, but a nonsequential order requires the syntax shown in Fig. <ref type="figure" target="#fig_0">5</ref> allowing the grouping of two or more episodes. This is used to express a parallel or indistinct sequential order.</p><p>Figure <ref type="figure" target="#fig_4">4</ref> describes the structure of a scenario using the entity-relationship diagram, 9 where only the relevant relationships of entities are shown. Figure <ref type="figure" target="#fig_7">6</ref> exemplifies a scenario of the Meeting Scheduler case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Our Process</head><p>The general idea of our process is to anchor the scenario description on the vocabulary of the UofD. As such, we start from a pre-existing lexicon in order to build scenarios. The lexicon describes the application vocabulary and the set of scenarios describes the application. The LEL construction process is not detailed here, but we should keep in mind that although the lexicon is build first it evolves as we progress on building scenarios.</p><p>We have to understand that the process presented here is as 'it should be' and is a result of four years of experience in building and analysing scenarios. This strategy follows the classical Parnas text on rational design processes <ref type="bibr" target="#b36">[37]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">The Scenario Construction Process</head><p>The scenario construction process starts from the application domain lexicon, producing a first version of the scenarios derived exclusively from the LEL. These scenarios are improved using other sources of information and organised in order to obtain a consistent set of scenarios that represents the application domain. During or after these activities, the scenarios are verified and validated with the clients/users to detect discrepancies, errors and omissions (DEO). To describe the process, we will use an SADT 10 [38] model (Fig. <ref type="figure" target="#fig_5">7</ref>), where the following activities are mentioned: Although the process of scenario construction depicted in Fig. <ref type="figure" target="#fig_5">7</ref> shows a main stream composed of three tasks: DERIVE, DESCRIBE and ORGANISE, these activities are not strictly sequential; some activities may be concurrent due to the feedback mechanism, always present in these situations <ref type="bibr" target="#b38">[39]</ref>. There is a feedback when VERIFY and VALIDATE take place, returning to the DESCRIBE activity, where corrections are made based on the DEO lists. 11 The VERIFY activity occurs after describing scenarios and also after organising them when This process might also produce three DEO lists that will act as a feedback for the LEL construction process in order to maintain consistency between the vocabulary of the scenarios and the LEL itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Description of the Activities in the Construction Process</head><p>Below we detail the activities in the SADT model of Fig. <ref type="figure" target="#fig_5">7</ref>, and for the activities DERIVE and ORGANISE, we detail even further by presenting a SADT model for the decomposition of each one of these activities.</p><p>(1) DERIVE This activity aims at generating the derived candidate scenarios from the information of the LEL using the scenario model and applying the derivation heuristics. The derivation process consists of three steps: identifying the actors of the UofD, identifying candidate scenarios and creating them using the lexicon. Figure <ref type="figure" target="#fig_9">8</ref> shows the SADT model that decomposes the DERIVE activity.</p><p>(1.1) IDENTIFY ACTORS Symbols representing actors of the UofD are identified within the LEL. They should belong to the subject type. <ref type="foot" target="#foot_2">12</ref> Actors are classified into main actors and secondary actors. Main actors are those who execute actions directly in the application domain, while the secondary actors are those who receive and/or give information, but do not share responsibility in the action.</p><p>(1.2) IDENTIFY SCENARIOS The behavioural responses of symbols chosen as main or secondary actors are extracted from the LEL. Each behavioural response represents a possible scenario, and therefore it is incorporated to the candidate scenario list. The scenario title is composed of the action (verb) included in the behavioural response but expressed in infinitive tense plus a predicate also taken from the behavioural response. When different actors execute the same action, it is very likely that two or more scenarios of the list may share the title; in this case all of them but one should be removed. (1.3) CREATE The intention here is to build the scenario with as much information extracted from the LEL as possible, applying the creation heuristics; the product of this step is the derived candidate scenarios. The content of each behavioural response that leads to every candidate scenario is analysed in order to find lexicon symbols belonging to the Verb type, from now on called a Verb symbol.</p><p>) If a Verb symbol is found within the behavioral response:</p><p>The goal is defined based on the title, and the notion of the Verb symbol.</p><p>The actors and resources of the scenario are identified from the information contained in the Verb symbol and should also be LEL symbols of the Subject type and the Object type respectively. The episodes are derived from each behavioural response of the Verb symbol.</p><p>) If the behavioural response does not include a Verb symbol: Lexicon symbols within the behavioural response are identified and considered as a possible source of information.</p><p>The goal is defined on the basis of the scenario title.</p><p>Possible actors and resources are selected from the above symbols by reading their full definition. Actors are derived from Subject type symbols and resources are derived from Object type symbols.</p><p>No episodes are derived from the LEL: they are left for the next step.</p><p>In both cases, the geographical and temporal location of the context may be extracted from the behavioural response of the LEL symbol that originated the scenario (Subject symbol). Relevant information that should be registered in the context preconditions may be available not only in that behavioural response, but in other behavioural responses of the same symbol. Figure <ref type="figure" target="#fig_10">9</ref> exemplifies the DERIVE activity using the Meeting Scheduler case and Fig. <ref type="figure" target="#fig_12">10</ref> shows the final version of this scenario. The underlined words or phrases are symbols of the Meeting Scheduler lexicon. We will use numbers in Fig. <ref type="figure" target="#fig_10">9</ref> to explain the DERIVE activity: 1 -from the LEL entries we generate a list of actors; 2 -selecting an actor we have the corresponding LEL entry; 3 -from the behavioural response of this LEL entry we produce a list of candidate scenarios; 4 -selecting a candidate scenario we find the LEL Verb symbol corresponding to the scenario title; 5 -we use the notion of LEL Verb symbol to define the goal, actor and resources; 6 -the behavioural response of the  LEL Verb symbol will provide the basis to describe the episodes; and 7 -from the behavioural response of the LEL originated in 3 (Subject type) we derive the context information.</p><p>(2) DESCRIBE This activity aims at improving the candidate scenarios by adding information from the UofD using the scenario model, the lexicon symbols in the descriptions and applying the description heuristics. The result is a set of fully described scenarios.</p><p>After the previous step, an incomplete set of candidate scenarios is obtained. They require to be extended in two senses: new scenarios might be added and the scenario content should be improved. Thus, if available, the information gathered during the LEL construction process, but not included in the lexicon, is used here as well. When needed, the requirements engineers return to the sources in order to collect more information.</p><p>This activity should be planned and usually relies on structured interviews, observations and document reading. First, information gathering aims at confirming and improving normal courses of events. Afterwards, alternative and exception cases should be detected. Some causes of exception are elicited from the sources of information while others may be deducted by questioning the occurrence of episodes or the unavailability or malfunction of resources. When discovering causes of exception, the requirements engineers should inquire how the exception is treated in the UofD; this implies a new situation that might need to be described through a separate scenario. Constraints may also be detected, some elicited from the UofD and others by examining the episodes. After finishing the scenario set description, episodes should be carefully reviewed to confirm sequential or non-sequential ordering and to detect optional episodes.</p><p>Observing Fig. <ref type="figure" target="#fig_5">7</ref>, we can see that there is a feedback from the verification and validation processes, here represented by the DEO lists (lists of Discrepancies, Errors and Omissions). These lists may motivate changes in the scenario description. It is also the case that, in the DESCRIBE activity, we may generate a DEO list for the LEL.</p><p>Below, we list some general heuristics regarding this activity. Since some scenarios might already be partially described at this point, these guidelines should be used to review initial descriptions.</p><p>. Short sentences are preferred. (3) ORGANISE This activity is the most complex and more systematised one in our scenario construction process. Its root is the idea of integration scenarios, 'artificial' descriptions with the sole purpose of making the set of scenarios more understandable and manageable. Integration scenarios give a global vision of the application. When facing large applications, the number of scenarios could be unmanageable and the requirements engineer becomes sunk in details, losing the global vision of the application. In order to face this problem, we propose the construction of integration scenarios, which give an overview of the relationship among several situations, since each integration scenario episode corresponds to a scenario. Therefore, the main purpose of integration scenarios is to link disperse scenarios providing a global vision of the application, while preserving the natural language format encouraged in our approach.</p><p>Thus, scenarios are organised by reorganisation and integration, beginning with the fully described scenarios. Although ORGANISE is located as third box at Fig. <ref type="figure" target="#fig_5">7</ref>, the activities VERIFY and VALIDATE must occur before we start the organisation of fully described scenarios. In other words, organising scenarios is a task that is done only when there is a good confidence in having a well-defined scenario set, ideally when the DEO lists are empty.</p><p>In this activity we may need to go back to the UofD, using the LEL and the scenario model and applying the organisation heuristics. Nonetheless, the fully described scenarios may still have some important weakness, such as:</p><p>. lack of homogeneity;</p><p>. minor semantic problems; and . lack of global perspective.</p><p>We understand that these problems may be minimised by the heuristics that we detail for the ORGANISE activity.</p><p>Figure <ref type="figure" target="#fig_13">11</ref> shows the SADT model that decomposes the ORGANISE activity. The heuristics used in this activity reflect our experience on building scenarios. We also have produced taxonomies of operations and relationships that are used by these heuristics.</p><p>(3.1) REORGANISE Scenarios may have different degrees of detail or overlapping information, especially when built by more than one requirements engineer. This situation gets more complex as we have more scenarios and a larger team. Basically reorganising scenarios consists in putting together two or more scenarios in one or breaking a scenario in two or more. Putting together is done when a unique scenario becomes artificially divided during the DERIVE or DESCRIBE activities. On the other hand, we break a scenario when it contains more than one situation. We describe these operations as pairs in different dimensions. The criteria to decide which operation to use in each dimension are given by heuristics. The three main dimensions in which scenario reorganisation can be applied are:</p><p>. sub-scenario; . situations with variations; . temporal context.</p><p>During the DERIVE and DESCRIBE activities focus is not on the sub-scenario; thus at this moment derived subscenarios require special attention to confirm that they are needed and any hidden sub-scenarios should be found to clarify the scenario set. In the UofD there may be situations very similar to each other. How they were elicited for the scenario set depends on several factors, such as the number of requirements engineers involved, the order in which the behavioural responses of LEL Subjects were considered, and the viewpoints taken in consideration.</p><p>The duration of a scenario is also a difficult matter to establish. In some cases two scenarios are so related that one is produced immediately after the other; thus they may be better described as just one scenario. On the other hand, a scenario with a long life span (temporal context ) containing episodes that are not very tight semantically may lead to the creation of two or more different scenarios.</p><p>Below we define, for each dimension in which scenario reorganisation can be applied, the operations that should be used for each dimension.</p><p>There are two operations in the sub-scenario dimension:</p><p>. Flatten . Factor There are two operations in the variation dimension:</p><p>. Consolidate . Divide There are two operations in the temporal context dimension:</p><p>. Fusion . Split</p><p>In order to establish the necessity of composition/ decomposition operations, some scenario properties and relationships among them should be previously identified. When a scenario presents special properties mainly in its episodes, decomposition may be applied. On the other hand, composition may be used when discovering specific relationships among scenarios: strong overlap, precedence order or hierarchy relation.</p><p>It should be noticed that either the composition or decomposition operation involves the risk of semantic degradation. Decomposition creates two or more scenarios where there was previously just one. This procedure must not create 'artificial' situations; in other words, decomposition must be applied only when the resulting scenarios better describe the UofD. On the contrary, composition replaces two or more scenarios by one.</p><p>Operations are suggested as guidelines to improve scenario comprehension and management. Therefore, reorganisation should not be seen as a mandatory activity but as good practice.</p><p>Below, operations with their corresponding properties or scenario relationships are described:</p><p>. Flatten: 13 May be applied when detecting nonrelevant sub-scenarios with few occurrences in other scenarios. Flatten incorporates the episodes of the subscenario inside each scenario that mentions it. The sub-scenario should present the same granularity of every flattened scenario. The original sub-scenario is deleted when all occurrences are flattened. This operation allows to reduce the number of non-relevant scenarios and, thus, to ease their management. The resulting scenario set decreases the hierarchy depth in all flattening points. This operation can also be seen as the inline feature of code generation in some program languages. . Factor: May be applied when a set of very relevant episodes or a set of episodes with different level of detail in relation to the rest is detected; in either case the set deserves special treatment. Also, when discovering the occurrence of the same set of episodes in two or more scenarios having common behaviours this operation may be used. Factor creates a subscenario factoring episodes from one or more scenarios. The group of episodes is replaced by the title of the sub-scenario holding them. Factor makes scenarios easier to understand and more reusable. . Consolidate: May be applied to overlapping scenarios. Two or more scenarios strongly overlap if their goals and contexts are similar and they have several coincidences in episodes. The original scenarios must present the same 'core of action' <ref type="bibr" target="#b13">[14]</ref>. Consolidate copies the common episodes of the original scenarios to the new one and creates new conditional episodes using the non-shared episodes, the condition being the corresponding part of the original scenario precondition. Occasionally new symbols may be added to the LEL. Original scenarios are deleted. In consequence, this operation allows reducing redundancy in the scenario set. . Divide: May be applied when the presence of several conditional episodes, driven by the same condition, is detected. Divide produces two new scenarios, moving the trigger condition to both preconditions. Nontrigger condition-based episodes are put in both scenarios. On the other hand, trigger condition-based episodes are moved to their corresponding scenario with the removed condition. The original scenario is deleted. This operation helps to avoid cluttered scenarios, thus reducing complexity. . Fusion: May be applied to scenarios that present a contiguous precedence order, compounded goals and coupled contexts. No temporal gap may exist among 13</p><p>In <ref type="bibr" target="#b13">[14]</ref>, another scenario operation, called Encapsulate, was defined and used; actually flatten and fusion are a specialisation of Encapsulate.</p><p>A Scenario Construction Process these scenarios. A temporal gap occurs when there is a long time interval between two scenarios. Fusion copies the episodes of every original scenario to the new scenario in the corresponding order. The original scenarios are deleted, giving an opportunity to reduce the number of scenarios and, thus, to ease their management.</p><p>. Split: May be applied to a scenario if there is a temporal gap between episodes or when detecting a very extended temporal context. An extended temporal context may be detected straightforwardly by the context itself or by the sequence of the episodes. Also, discovering more than one geographical location in a scenario could be used as a guide for considering the necessity of a split operation. Therefore, the scenario is representing more than one situation, contradicting the scenario definition. The decomposition of the scenario should produce scenarios with a wellbounded temporal context. Split copies all the episodes that precede a temporal gap to a new scenario and those following the temporal gap to another new scenario. The original scenario is then deleted. Preconditions of the second and following new scenarios may reflect the contiguous precedence order established. Thus, split allows to reduce complexity and to better understand situations.</p><p>Figure <ref type="figure" target="#fig_14">12</ref> shows the factor operation applied to two scenarios with several common episodes that have a specific goal; a new scenario holding those episodes is created and the original scenarios are rewritten, replacing the common episodes by the new scenario title. Figure <ref type="figure" target="#fig_15">13</ref> exemplifies the consolidate operation applied to two overlapped scenarios, producing a single scenario holding common episodes while non-common episodes are incorporated into a conditional statement.</p><p>When applying composition operations, the goal of the resulting scenario should be extended to embrace the whole situation, especially during fusion; in case of consolidate the goal is extended by generalisation. On the contrary, when applying decomposition, the goal of the new scenario may be less global than the original one.</p><p>Since consolidate and divide are opposite operations, after a consolidation the resulting scenario may be considered for a division returning to the original state and vice versa. Criteria to decide to go back or forth are required. Consolidate should be applied if few conditional episodes appear in the resulting scenario and should be avoided otherwise. On the other hand, divide should be chosen only if several trigger-condition-based episodes are affected by the operation.</p><p>Fusion and split are opposite operations too; thus both require criteria to decide the best direction to go. The keyword here is the temporal gap, either with respect to scenarios or to episodes. A delay between two episodes may be considered as a temporal gap only if it cannot be embraced by the scenario temporal context. In other words, a specific episode could be preceded by a temporal gap in one scenario but not in another one. It then becomes clear when to split or fusion scenarios. The sub-scenario dimension operations also require criteria to avoid looping from one state to the opposite. Therefore, flatten should be applied when flattened episodes in the resulting scenario have the same level of detail as the rest of the episodes and when the original sub-scenario does not represent a situation by itself, which could be confirmed by a lack of meaning of its goal. On the contrary, factor should be used only if a meaningful goal can be found for the new sub-scenario as a consequence of having discovered a specific and actual situation inside a larger scenario.</p><p>(3.2) DEFINE Several authors have proposed scenario relationships, such as Jacobson's uses association and extend associations <ref type="bibr" target="#b26">[27]</ref>, Booch's semantic connections <ref type="bibr" target="#b15">[16]</ref>, Dano's temporal links <ref type="bibr" target="#b19">[20]</ref> and others. Those relationships were identified and found valuable for other purposes. Since the target of the relationships that we are going to define here is the construction of integration scenarios, a new set of relations is necessary. As such the DEFINE activity identifies different relationships among scenarios in order to be able to integrate them.</p><p>Below we detail each type of relationship we have identified in our work with scenario integration.</p><p>. Hierarchical relationship is the one established between scenarios and sub-scenarios. This relationship comes naturally while describing the scenarios or reorganising them. The behaviour of a scenario is described through a set of episodes, which could be simple actions or sub-scenarios; the latter case occurs when the action is more complex or is common to several scenarios. A scenario may contain more than one sub-scenario or none. A sub-scenario could be included in one or more scenarios and can itself contain sub-scenarios, allowing many levels of depth in the hierarchy. Thus, we can define a hierarchy as a set composed of a scenario and its sub-scenarios. . Overlap relationship is that one established among scenarios with common portions. This relationship is observed mainly when several common episodes are present among different scenarios; thus common actors and probably common resources appear. . Order relationship is the one established between two hierarchies when one precedes the other. A hierarchy may come before other hierarchies setting up a partial temporal ordering with them. Thus, a hierarchy may have zero or more predecessors and zero or more successors. A sequence is established when a hierarchy is immediately preceded by another one.</p><p>Since the second may be also preceded by a third one, a large number of hierarchies may be involved in a sequence beginning with at least one leader hierarchy. It should be noticed that a sequence could have more than one leader hierarchy and also more than one trailer hierarchy. . Exception relationship is the one established between a scenario and those scenarios that treat exceptions. When a scenario has an exception, its cause is described and if a treatment of the exception is specified a scenario for treating the exception is mentioned. A scenario may be related to one or more exception scenarios. An exception scenario may treat exceptions occurring in different scenarios.</p><p>If two scenarios are linked by an exception relationship they will be put together in one integration scenario as a sequence, where the normal scenario comes first, followed by a conditional episode holding the exception condition and the solving exception scenario. The overlap relationship is not currently used in the scenario integration activity since it is essentially based on hierarchy and order relationship. However, the possibility of integration by generalisation has been detected. The scope, advantages and inconveniences of integration by generalisation are still being studied. level integration scenarios may be obtained. All sequences are put in the main integration scenario marked with the non-sequential indicator (#). If a sequence is composed of more than one scenario, a stub for an intermediate-level scenario is created and a nominal title is used in both the main integration scenario and the stub. This is applied to every existing stub creating new stubs when non-sequences of subsequences show up.</p><p>Compose Title, Goal and Context for the Integration Scenarios is the step where new semantic information needs to be added. This is done by watching the scenarios involved in the integration scenario. This step acts as a sort of final verification, since the title and the goal should be written preserving cohesion; in other words, no conjunctions should be allowed. Descriptions should be written based on the LEL.</p><p>(4) VERIFY The VERIFY activity is performed at least twice during the scenario-building process, the first one over the fully described scenario set and the second after the ORGANISE activity. This is done following a checklist with verification heuristics. As a consequence of this activity, two DEO lists are produced: one used at DESCRIBE and the other used during the LEL construction process. The verification is divided into intra-scenarios, inter-scenarios and against the LEL. The intra-scenario verification includes:</p><p>. Verify syntax:</p><p>-Check the completeness of every component.</p><p>-Check the existence of more than one Episode per scenario.</p><p>-Check the syntax of each component as established in the scenario model.</p><p>. Verify relationship among components:</p><p>-Check that every Actor participates in at least one episode. -Check that every Actor mentioned in episodes is included in the Actor component. -Check that every Resource is used in at least one Episode. -Check that every Resource mentioned in Episodes is included in the Resources component.</p><p>. Verify semantics:</p><p>-Check coherence between the Title and the Goal.</p><p>-Ensure that the set of Episodes satisfies the Goal and is within the context. -Ensure that actions present in the preconditions are already performed. -Ensure that Episodes contain only actions to be performed. -Ensure the same level of detail inside a scenario.</p><p>The inter-scenarios verification includes:</p><p>. Verify sub-scenarios existence:</p><p>-Check that every Episode identified as a subscenario exists within the set of scenarios. -Check that the set of Episodes of every subscenario is not already included in another scenario. -Check that every exception is treated by a scenario.</p><p>. Verify context:</p><p>-Check that every precondition is either an uncontrollable fact or is satisfied by another scenario.</p><p>-Check coherence between sub-scenario preconditions and scenario preconditions. -Check that geographical and temporal locations of sub-scenarios are equal or more restricted than those of scenarios.</p><p>. Verify equivalence in scenario set:</p><p>-Check that Goal coincidence only takes place in different situations. -Check that Episode coincidence only takes place in different situations. -Check that Context coincidence only takes place in different situations.</p><p>The against LEL verification includes:</p><p>-Check that every lexicon symbol is identified.</p><p>-Check the correct use of lexicon symbols.</p><p>-Check that Actors are preferentially Subject symbols.</p><p>-Check that Resources are preferentially Object symbols.</p><p>-Check that the behavioural responses of Subject symbols are covered by scenarios.</p><p>Using the verification DEO lists, the scenarios and the LEL are modified. If major corrections were needed, a new verification could be required. When the Describe-Verify cycle is over, the ORGANISE activity should provide a larger set of scenarios, which in turn are verified, starting a possible Describe-Organise-Verify cycle. This activity is actually done by means of an inspection process <ref type="bibr" target="#b39">[40]</ref>.</p><p>Its is important to stress that our verification process is driven by syntax checks, by cross-referencing the LEL and the scenarios and by a checklist. Some of the heuristics of this checklist were given above. The checklist registers what was learned in terms of verification during our experience with scenarios.</p><p>(5) VALIDATE Scenarios are validated with the clients/users usually by performing structured interviews or meetings. During validation, the doubt component must be considered with special attention for those scenarios still presenting it.</p><p>It is important to stress that, although using a structured description, our scenarios are written in natural language, employing their client/user's own vocabulary and describing a specific well-bounded situation.</p><p>The validation task allows the detection of DEO in scenarios. Errors are mainly detected by reading each scenario to the client/user; some omissions may also appear during that reading but others by questioning the lack of information or details in scenarios. Discrepancies may appear during interviews but they mainly arise afterwards, when analysing the collected information.</p><p>Note that the primary goal of validation to confirm the elicited information and to detect DEO; however, a side effect of this process is the elicitation of new information. The validation of a set of scenarios, after a verification process, should confirm that the Universe of Discourse situations, occurrences, have been reported in accordance with the perception of the UofD actors (clients/users) in charge of reading and discussing the scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Observations from the Meeting Scheduler Case</head><p>The box below summarises the evolution of the set of scenarios during the construction process for the Meeting Scheduler and Fig. <ref type="figure" target="#fig_16">15</ref> shows graphically the numbers mentioned inside it.</p><p>Evolution of scenarios: . 23 scenarios in the initial list . 16 scenarios in the final list . 14 scenarios were kept from the initial list to the final list . 9 scenarios of the initial list were included as simple episodes inside other scenarios . 2 scenarios of the final list were generated after the verification and validation processes (these two scenarios were previously included as simple episodes inside other scenarios) . one integration scenario . 87% of the scenarios were obtained by applying the derivation heuristics. The composition of the 16 final scenarios was: . 4 scenarios . 9 sub-scenarios . 3 exceptions</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Using the process</head><p>The process described here, as stated before, is the last polished version of the process which has been evolving since the first case study in 1996 and has included the lessons learned during the construction and analysis of more than 400 scenarios. Here we give a brief description of some of these case studies. Most of them were done by third parties in a university environment (graduate and undergraduate seminars) at the universities involved in this project as well as by the researchers themselves. Some of them were checked with the potential clients, and at least one of them has resulted in a real system (PUC-Rio Informatics Department graduate advancement control system). We have analysed each of these sets of scenarios to come up with the construction process just presented. Some of the case studies did go through an organisation process (based on the process we present here), but others did not. We list below the problem classes where scenarios were developed.</p><p>1. Argentine passports issue system <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b41">42]</ref>. A set of 24 scenarios and 34 LEL symbols were produced by a team of researchers. This system is centralised in the Federal Police Department, which is the unique organisation authorised for the issue of passports for the whole country. The complexity of the system comes up from the strict control that is necessary and the high volume of information that it deals with. 2. Meeting scheduler system <ref type="bibr" target="#b40">[41,</ref><ref type="bibr" target="#b42">43]</ref>. Three different sets of scenarios <ref type="bibr">(16,13 and 17)</ref>, using an LEL of 34 entries, were generated, two by undergraduate student groups and one by a team of researchers. The Universidad de Belgrano was used as the target organisation based on the case study proposed by van Lamsweerde <ref type="bibr" target="#b30">[31]</ref>. 3. Saving plan for automobile acquisition system <ref type="bibr" target="#b43">[44,</ref><ref type="bibr" target="#b44">45]</ref>. Nine different sets of scenarios were generated, seven by undergraduate student groups and two by teams of faculty members. The goal of this system is to manage saving plans for the acquisition of brand new vehicles. A group of physical or legal persons is constituted and participates monthly in an adjudication process organised by a general manager in order to deliver a vehicle. An average of 18 scenarios for each group were produced, ranging from 8 to 22 scenarios. The LEL varied from 16 entries to 68 entries. 4. Graduate advancement system <ref type="bibr" target="#b13">[14]</ref>. Five different sets of scenarios were generated by graduate student groups. From one of these five sets, a real system was modelled and developed for the Informatics Department of PUC-Rio and it manages all operations regarding the control of graduated students (http:// www.inf.puc-rio.br/~dilbert). 5. Library system. Four sets of scenarios were generated by groups of senior undergraduate students.</p><p>The system consists basically of recording books and users and checking the loan of books. 6. Text editor system. Eight different sets of scenarios developed by senior undergraduate students. 7. The lexicon and scenarios for the lexicon and the scenario construction processes <ref type="bibr" target="#b45">[46]</ref>. A set of 64 scenarios and 78 LEL entries were produced by an undergraduate student group and two researchers. This lexicon describes all the important items in the construction of the lexicon and scenarios, following our approach. The set of scenarios describes the situations that occur during the construction of the lexicon and the scenarios. Both the lexicon and scenarios were analysed by the authors of the present paper. The lexicon and scenarios are available at (http://usuarios.arnet.com.ar/ogarcia). Some of the above sets were developed intuitively from scratch, beginning with the UofD and following the idea of finding situations, while others were constructed using an approach similar to the one previously described. In the case studies performed without following our process, scenario producers noticed the necessity of having an overview of the problem, materialised in one or more 'general scenarios' <ref type="bibr" target="#b40">[41]</ref> or another model that would help to get a first idea of the application domain. This idea is similar to Booch's primary scenarios <ref type="bibr" target="#b15">[16]</ref> and to Sutcliffe's grounding scenarios <ref type="bibr" target="#b17">[18]</ref>; that is, the general scenario makes it possible to have an abstract view of the set of scenarios. On the other hand, when the scenario set was developed following the heuristics described in the previous section, there was no need for a general overview at the beginning of the process, since we were not using a top-down approach. Our process answers the question of how to organise scenarios, when we have many of them. As such, we believe that the process reported here has a clear-cut distinction between creating the scenarios for the several situations and then organising them as a model, in the software engineering sense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>Scenarios have been attracting much attention from the RE community. A significant number of articles have been dealing with the subject and there is a continuous effort to improve processes and scenario representations. We consider our work a contribution mainly to the area of scenario management <ref type="bibr" target="#b49">[50]</ref>.</p><p>From other work <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b46">47]</ref> we became convinced of the importance that scenarios have for describing the behaviour of objects and the advantage of tracing this behaviour through the software system interface. From Carroll <ref type="bibr" target="#b4">[5]</ref> we achieved a better comprehension of the cognitive aspects of scenario-based development and also a confirmation that scenarios must begin in the Universe of Discourse and not only in the software system interface. This idea was also reaffirmed by Zorman <ref type="bibr" target="#b8">[9]</ref>, who well defines scenarios as situations; in addition, we utilise her study of scenario representation. Potts <ref type="bibr" target="#b14">[15]</ref> showed us the relevance of relating scenarios with goals and thus proved important our previous knowledge of the meta model oriented to goals proposed by Dardenne et al. <ref type="bibr" target="#b47">[48]</ref>. In particular, we differ from Potts <ref type="bibr" target="#b14">[15]</ref> because we use a scenario hierarchy instead of a goal hierarchy and our construction of hierarchies uses a bottom-up strategy against Potts's decomposition of goals.</p><p>Dano et al. <ref type="bibr" target="#b19">[20]</ref> consider that Use Cases and scenarios are interchangeable because they capture specific ways of using the system functionality, while for us scenarios capture situations of the application domain. Besides, <ref type="bibr" target="#b19">[20]</ref> proposes the utilisation of formalisms as an alternative to natural language. Our approach consists of using natural language with rules for eliciting and then modelling scenarios. We agree with Rolland <ref type="bibr" target="#b11">[12]</ref> that the use of natural language in scenarios implies an easy-to-understand model though it may be attached with ambiguities and inconsistencies. These drawbacks can be reduced by employing a well-defined UofD vocabulary such as our LEL <ref type="bibr" target="#b28">[29]</ref>, complemented with a verification process such as presented here. With respect to Sutcliffe <ref type="bibr" target="#b17">[18]</ref>, we share entirely the convenience of integrating methods for the requirements production. Nonetheless, the idea of developing a prototype that acts as 'concept demonstrator', as proposed by that author, only helps to establish the requirements concerning the man-machine interface and that are specific to the artefact in construction, leaving out other aspects of the application domain.</p><p>The operations presented in the ORGANISE activity (section 4) were inspired by Breitman's work <ref type="bibr" target="#b13">[14]</ref>, which discovered, from analysis of sets of scenarios, that scenario authors have used certain types of operations in producing the scenarios. The difference is that our operations were designed to achieve the goal of producing an organised set of scenarios.</p><p>During the learning process that we went through, it became clear to us that we have deployed two different ways of organising scenarios: one that we called general scenarios and the other which we called integration scenarios. General scenarios are the root scenarios that we use when following a top-down strategy. Table <ref type="table" target="#tab_1">1</ref> synthesises the characteristics of using general scenarios versus integration scenarios, learned through our experience in the case studies already mentioned.</p><p>In a top-down approach the general scenarios are described at the beginning of the scenario construction process, from poor and general application domain knowledge. Conversely, the integration scenarios in a middle-out approach are described as the last step of the process, after acquiring large and detailed domain knowledge.</p><p>General scenarios need continuous maintenance along the construction process in order to achieve consistency with the rest of the scenarios, otherwise they will lose their utility and should be put aside. As the integration scenarios are built at the end of the process, they are naturally consistent with the rest of the scenarios.</p><p>General scenarios give an approximate image of the application domain at the beginning of the process and with a great maintenance effort they could provide a view similar to the integration scenarios. This effort is directly related to the possibility of verifying the consistency among scenarios. The integration scenarios episodes show the relationships among scenarios, while the general scenarios show activities that may or may not be scenarios.</p><p>In practice <ref type="bibr" target="#b10">[11]</ref>, general scenarios are used to divide tasks, not yet well known, among the team of engineers. This is neither possible nor desirable with our approach.</p><p>As pointed out by Jackson (see section 2), a top-down approach is useful to organise a problem when it is previously known but not before.</p><p>Based on our experience with scenarios we have concluded that there is an advantage of using integration scenarios instead of a top-down organisation. We have stated that our 'middle-out' strategy produces a set of scenarios that, although, representing different UofD situations, are organised following software engineering modelling principles We consider that our contribution to scenario research is to unveil some of the aspects of the scenario construction process. Although our work is biased by our own representation model (Fig. <ref type="figure" target="#fig_0">5</ref>), we believe that the aspect of composition/decomposition is of general interest to scenario construction. We see the theme of composition/decomposition related to the abstraction facet (Contents View) of the CREWS framework <ref type="bibr" target="#b9">[10]</ref>, but there they only make a distinction between instance and type scenario. It is important to notice that our use of scenarios is of the typed scenario as per the cited framework; that is, we treat actors and events by their collective name and not by particular instances.</p><p>It is important once more to stress that in our view scenarios describe situations in the macrosystem and not only a sequence of interactions between a user and a system. Prior work on scenario integration <ref type="bibr" target="#b48">[49]</ref> used a user-interaction point of view and focused on the behavioural aspect of scenarios. Glinz used Statecharts as a means to model scenarios, exploring not only the capability of decomposition of Statecharts but also the concurrence aspects, thus making possible not only the integration of several scenarios in one, but also the analysis of the scenarios for consistency problems. Contrary to Glinz <ref type="bibr" target="#b48">[49]</ref>, our approach to scenario integration deals with the behavioural aspect of scenarios (episodes), but with other context information as well, such as actors, resources, goals and preconditions. On the other hand, our proposal is strongly based on heuristics that, as of now, does not have automated support.</p><p>Desharnais et al. <ref type="bibr" target="#b50">[51]</ref> describe a state-oriented relational approach to scenario and applies it to sequential scenarios. Scenarios here are atomic descriptions, in a Z style, of the interaction between the system and the environment represented by a triple (T, Re, Rs), where T is a space and Re and Rs are disjoint relations on T. The approach assumes that the scenarios fulfil certain consistency descriptions. From the atomic scenarios, a functional specification is derived. This approach seems promising, once you get to the level of these atomic descriptions, which in our understanding are of a level even lower than our episodes. One of the first articles dealing with scenario organisation came from the object-oriented community <ref type="bibr" target="#b34">[35]</ref>. In this article Cockburn presents the problems of 'scenario explosion' and proposes a hierarchy of goals as a way of solving it. Regnell <ref type="bibr" target="#b51">[52]</ref> also deals with the problem in a goal-oriented way; his proposal organises the use cases in a top-down fashion (environment level, structure level, event level), but he also points out that to better understand a user case there should be a synthesis phase were use cases are integrated in abstract usage scenarios.</p><p>The CREWS-L'Ecritoire <ref type="bibr" target="#b52">[53,</ref><ref type="bibr" target="#b53">54]</ref> approach uses a combination of goals and scenarios not only to elicit but also to organise scenarios. From goal elicitation, by casebased discovery, a template-driven strategy with free prose leads to scenarios. Once scenarios are available they are organised in a hierarchical way, also based on goal modelling (AND/OR relationships). They also provide some heuristics for quality management <ref type="bibr" target="#b53">[54]</ref>. Comparing this with our work, we may say that we directly use situations, in a bottom-up fashion, to understand the problem and when organising the scenarios we may integrate them with our integration mechanisms that encapsulate the notions of AND/OR relationships.</p><p>Sutcliffe et al. <ref type="bibr" target="#b54">[55]</ref> present a method for scenariobased RE. Its basic representation is similar to ours, with the difference that we have scenario sub-scenarios hierarchies (n levels of structuring) and they have just one level of structuring; that is, each use-case can have m scenarios. They also present a method as a DFD diagram [55, p. 1074, Fig. <ref type="figure" target="#fig_1">1]</ref>, where four steps are presented: elicit use case, analyse generic problems, generate scenarios and validate scenarios. We have shown here a much more detailed process, focusing on elicitation of scenarios from the connotation of the application vocabulary.</p><p>We would like to stress that our results are based on real experience with the use of scenarios. We firmly believe that the presentation of our strategy for building scenarios is important to researchers as well as for practitioners, since the information we provided helps the general understanding of how scenarios are produced and how they might get organised. We will continue studying the abstraction facet of scenarios and, in particular, we are looking at the other axis of abstraction mechanisms, namely specialisation/generalisation, in order to explore how this type of organisation could support scenario reusability.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>5</head><label>5</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The Language Extended Lexicon Model.</figDesc><graphic coords="5,291.12,442.98,240.84,205.63" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. An example of an LEL symbol.</figDesc><graphic coords="6,56.75,53.89,263.89,137.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Entity-relationship diagram for the Language Extended Lexicon Model.</figDesc><graphic coords="6,59.75,220.17,238.73,152.11" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Entity-relationship diagram for the Scenario Model.</figDesc><graphic coords="6,316.29,59.11,239.48,108.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>7</head><label>7</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. The Scenario Model.</figDesc><graphic coords="7,65.37,54.01,435.06,634.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6 .</head><label>6</label><figDesc>Fig.6. An example of a scenario.</figDesc><graphic coords="8,59.19,57.18,237.97,144.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. SADT of the scenario building process.</figDesc><graphic coords="9,89.01,56.78,390.16,301.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. SADT of the DERIVE activity.</figDesc><graphic coords="10,82.03,58.09,448.16,285.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Graphic example for deriving a scenario.</figDesc><graphic coords="11,52.21,54.06,453.17,639.55" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>.</head><label></label><figDesc>The sentences should be written maximising the use of the lexicon symbols. . The use of more than one verb per sentence should be avoided. . Actors and Resources should be preferentially lexicon symbols. . The goal must be precise and concrete. . At least one of the sub-components of the context must be filled. . The component Resources should list those involved in the episodes or implicitly referred to the episode verb, excluding trivial resources. . The component Resources should not include those needed in sub-scenarios. . The component Actors should list those involved in the episodes. . The component Actors should not include those needed in sub-scenarios. . The verb of each episode should be precise and concrete, specifying the final action and avoiding ambiguity and vagueness. . Every episode must be enacted within the geographical and temporal location described by the scenario Context. . The present tense should be preferred in describing episodes. . Avoid using 'should', 'can', 'may', 'must' in episodes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Final version of a scenario.</figDesc><graphic coords="12,58.56,56.61,240.29,188.62" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. SADT of the ORGANISE activity.</figDesc><graphic coords="13,78.58,432.60,404.67,255.86" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. An example of factor.</figDesc><graphic coords="16,81.58,60.87,443.62,622.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. An example of consolidate.</figDesc><graphic coords="17,69.96,55.42,422.70,438.07" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Result of the organisation process for the Meeting Scheduler.</figDesc><graphic coords="20,314.76,55.42,243.16,95.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Comparative table for scenario construction</figDesc><table><row><cell>Characteristics</cell><cell cols="2">General scenario Integration scenario</cell></row><row><cell>Approach</cell><cell>Top-down</cell><cell>Middle-out</cell></row><row><cell>Construction</cell><cell cols="2">At the beginning Close to the end</cell></row><row><cell>Re®nement need</cell><cell>Yes</cell><cell>No</cell></row><row><cell>Consistency effort</cell><cell>High</cell><cell>Very low</cell></row><row><cell>Full application domain</cell><cell>Approximated</cell><cell>Proximal</cell></row><row><cell>view</cell><cell></cell><cell></cell></row><row><cell>Inter-scenario view</cell><cell>Poor</cell><cell>Clear</cell></row><row><cell>Allow problem division</cell><cell>Yes</cell><cell>No</cell></row><row><cell>Allow consistency</cell><cell>Only if re®ned</cell><cell>Yes</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>'The overall context in which software will be developed and operated. The UofD includes all the sources of information and all the people related to the software. It is the reality trimmed by the set of objectives established by those demanding a software solution.'[1,  </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>2].We use the term Universe of Discourse with the same meaning given by Michael Jackson<ref type="bibr" target="#b2">[3]</ref> to Application Domain.Loucopoulos [4]  also uses both terms as synonyms.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_2"><p>LEL symbols are classified into four types: Subject, Object, Verb and State<ref type="bibr" target="#b28">[29]</ref>.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. We would like to thank the reviewers for their time and careful reading of our first submission. We hope that by addressing their comments the paper is more readable. We would like to thank Karin Koogan Breitman for her comments. Financial support for this work was partially provided by Universidad de Belgrano, Conicet, Faperj and CNPq.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>(3.3) INTEGRATE The INTEGRATE activity implements the middle-out behaviour of our construction process. Its first three steps are bottom-up and the last two steps are top-down. As such the integration of scenarios could be seen as a fivestep procedure. The four initial steps mainly rely on syntax information, but the last one requires more semantic knowledge. In this activity, first, scenarios are grouped in hierarchies and then hierarchies are grouped in sequences. Finally these sequences are used to build integration scenarios. Figure <ref type="figure">14</ref> shows an example of an integration scenario produced for the Meeting Scheduler case. Note that since an integration scenario is produced just to organise a set of scenarios, it does not use the entities: resources and actors.</p><p>Build Scenario Hierarchies is the first step of the scenario integration activity. A hierarchy is a set of scenarios linked by hierarchical relation. Every hierarchy has a root scenario, which is not referred to as subscenario by another scenario. The hierarchies are identified by their root scenario. Isolated scenarios are hierarchies by themselves.</p><p>Detect Partial Order among Hierarchies is done based on the comparison between the preconditions or resources or constraints of a hierarchy against the title, goal or episodes of other hierarchies. If a precondition of a hierarchy identifies an initial state that is satisfied by another hierarchy there is a partial order between this two hierarchies. The same may occur with a resource needed in one hierarchy and produced by another one. Besides, episode and resource constraints may be satisfied by another hierarchy, thus establishing a partial order. These constraints can be used for comparison when they point out to resource states or certain conditions that should be previously met. Preconditions, resources and constraints of hierarchies are not obtained from the root scenario itself but from the whole hierarchy. To establish hierarchy preconditions, first preconditions of all the scenarios belonging to the hierarchy must be unified; then, preconditions required by a sub-scenario and satisfied by another sub-scenario must be removed from the union. The resources and constraints of the hierarchy are obtained in the same way. The goal of a hierarchy is just the root scenario goal and the comparison should stop as soon as a partial ordering is found or detected as impossible. If the partial order between two hierarchies only takes place under certain conditions, it is labelled with the condition. To reduce the search for hierarchy providing resources or satisfying constraints and preconditions it is better to check against title and goal in the first place and check against episodes only on failure. If a comparison is successful, partial ordering is found, otherwise the next comparison takes place. If no comparison is successful, then there is no partial ordering. The comparisons used in this step are:</p><p>. hierarchy precondition against titles of other hierarchies; . hierarchy constraints against titles of other hierarchies; . hierarchy resources against titles of other hierarchies;</p><p>. hierarchy precondition against goals of other hierarchies; . hierarchy constraints against goals of other hierarchies; . hierarchy resources against goals of other hierarchies;</p><p>. hierarchy precondition against episodes of other hierarchies; . hierarchy constraints against episodes of other hierarchies; . hierarchy resources against episodes of other hierarchies.</p><p>Build Hierarchy Sequences begins with the review of the partial ordering relationship detected among hierarchies. This is done to clarify which is the set of hierarchies that immediately precedes a given one. To do this, all partial orders derived by transitivity are deleted. It is said that among hierarchies A, B and C there is a transitivity if A and B precedes C but also A precedes B. Transitivity is not easy to remove. However, it can be eliminated by grouping all partial order relations with the same hierarchy on the left side of the relation. Any additional partial order between hierarchies on the right side of a relation is used to identify a transitivity. New information from the UofD may be elicited when gaps between hierarchies are found. This happens when two hierarchies in sequence do no match properly since one or both lack some actions that actually take place in the UofD. Isolated hierarchies are sequences by themselves.</p><p>Build the Integration Skeleton is done following the sequences obtained in the previous step. This step builds only the episode components of the integration scenarios. First a main scenario is built and then intermediate- A Scenario Construction Process</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Requirements validation through viewpoint resolution</title>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Software Eng</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1253" to="1269" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Enhancing a requirements baseline with scenarios</title>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Balaguer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maiorana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hadad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oliveros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Requirements Eng</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="184" to="198" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Software requirements and specifications: a lexicon of practice, principles and prejudices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jackson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>MA/ACM Press</publisher>
			<pubPlace>Reading; New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">System requirements engineering</title>
		<author>
			<persName><forename type="first">P</forename><surname>Loucopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Karakostas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>McGraw-Hill</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Scenario-based design: envisioning work and technology in system development</title>
		<author>
			<persName><forename type="first">J</forename><surname>Carroll</surname></persName>
		</author>
		<editor>Carroll J (ed</editor>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Wiley</publisher>
			<biblScope unit="page" from="1" to="18" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
	<note>Introduction: the scenario perspective on system development</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Using schematic scenarios to understand user needs</title>
		<author>
			<persName><forename type="first">C</forename><surname>Potts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of DIS&apos;95 -Symposium on designing interactive systems: processes, practices and techniques</title>
		<meeting>DIS&apos;95 -Symposium on designing interactive systems: processes, practices and techniques</meeting>
		<imprint>
			<publisher>ACM Press/ University of Michigan</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="247" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Object oriented design with applications</title>
		<author>
			<persName><forename type="first">G</forename><surname>Booch</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<pubPlace>Benjamin Cummings, Redwood City, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Objectoriented software engineering: a use case driven approach</title>
		<author>
			<persName><forename type="first">I</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Christerson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Jonsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Overgaard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>MA/ACM Press</publisher>
			<pubPlace>Reading; New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Requirements envisaging by utilizing scenarios (Rebus)</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zorman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>University of Southern California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD dissertation</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A proposal for a scenario classification framework</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rolland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Achour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Cauvet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ralyte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">´j</forename><surname>Sutcliffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Maiden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Haumer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pohl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Heymans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Requirements Eng</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="23" to="47" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scenarios in system development: current practice</title>
		<author>
			<persName><forename type="first">K</forename><surname>Weidenhaupt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pohl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Haumer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="page" from="34" to="45" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Guiding the construction of textual use case specifications</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rolland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Achour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Knowl Eng</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="125" to="160" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Workshop: exploring scenarios in requirements engineering</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sutcliffe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the third IEEE international symposium on requirements engineering</title>
		<meeting>the third IEEE international symposium on requirements engineering<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="180" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A framework for scenario evolution</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Breitman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE international conference on requirements engineering</title>
		<meeting>the IEEE international conference on requirements engineering<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="214" to="221" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Inquiry-based requirements analysis</title>
		<author>
			<persName><forename type="first">C</forename><surname>Potts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Anto ´n</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="21" to="32" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">G</forename><surname>Booch</surname></persName>
		</author>
		<author>
			<persName><surname>Scenarios</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rep Object Analysis Design</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="3" to="6" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Modeling the dynamic behavior of systems, mechanisms, and classes with scenarios</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Firesmith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rep Object Analysis Design</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="32" to="36" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A technique combination approach to requirements engineering</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sutcliffe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the third IEEE international symposium on requirements engineering</title>
		<meeting>the third IEEE international symposium on requirements engineering<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Formal approach to scenario analysis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Hsia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Samuel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Toyosima</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="33" to="41" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">An approach based on the concept of use case to produce dynamic object-oriented specification</title>
		<author>
			<persName><forename type="first">B</forename><surname>Dano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Briand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Barbier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RE&apos;95: Proceedings of the third IEEE international symposium on requirements engineering</title>
		<meeting><address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="54" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Scenario-based design: envisioning work and technology in system development</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Robertson</surname></persName>
		</author>
		<editor>Carroll J (ed</editor>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Wiley</publisher>
			<biblScope unit="page" from="279" to="306" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
	<note>Generating object-oriented design representations via scenario queries</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Designing objects and their interactions: a brief look at responsibility-driven design</title>
		<author>
			<persName><forename type="first">R</forename><surname>Wirfs-Brock</surname></persName>
		</author>
		<editor>Carroll J (ed</editor>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="337" to="359" />
			<pubPlace>Wiley,, New York</pubPlace>
		</imprint>
	</monogr>
	<note>Scenariobased design: envisioning work and technology in system development</note>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Applying requirements management with use cases</title>
		<author>
			<persName><forename type="first">R</forename><surname>Oberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Probasco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ericsson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Rational Software Corporation</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Applying use cases: a practical guide</title>
		<author>
			<persName><forename type="first">G</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Winters</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Joint essential modeling, user requirements modeling for usability</title>
		<author>
			<persName><forename type="first">L</forename><surname>Constantine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International conference on requirements engineering</title>
		<title level="s">Tutorial Notes</title>
		<meeting><address><addrLine>Constantine &amp; Lockwood, Colorado Springs, CO</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Basic use-case modeling</title>
		<author>
			<persName><forename type="first">I</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rep Object Analysis Design</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="15" to="19" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Basic use-case modeling (continued)</title>
		<author>
			<persName><forename type="first">I</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rep Object Analysis Design</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="7" to="9" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Scenarios: an industrial case study and hypermedia enhancements</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Gough</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">T</forename><surname>Fodemski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Higgins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Ray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RE&apos;95: Proceedings of the international symposium on requirements engineering</title>
		<meeting><address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="10" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">O Uso de Hipertexto na Elicitac ¸ao de Linguagens da Aplicac ¸ao</title>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Apm</forename><surname>Franco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Anais de IV Simpo ´sio Brasilero de Engenharia de Software</title>
		<meeting><address><addrLine>Brazil</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="134" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Integracio ´n de Escenarios con el Le ´xico Extendido del Lenguaje en la elicitacio ´n de requerimientos: Aplicacio ´n a un caso real</title>
		<author>
			<persName><forename type="first">G</forename><surname>Hadad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oliveros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rev Inform Teo ´rica Aplicada</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="77" to="104" />
			<date type="published" when="2000">2000</date>
			<pubPlace>RITA), Brazil</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">The meeting scheduler system: preliminary definition</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Lamsweerde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Darimont</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Massonet</forename><surname>Ph</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internal report</title>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
		<respStmt>
			<orgName>Universite ´Catholique de Louvain</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Eliciting requirements using a natural language based approach: the case of the meeting scheduler</title>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Monografias em Cie ˆncia da Computac ¸a ˜o, Departamento de Informa ´tica</title>
		<meeting><address><addrLine>PUC-Rio</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A strategy for conceptual model acquisition</title>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Apm</forename><surname>Franco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE international symposium on requirements engineering</title>
		<meeting><address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="243" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">The entity-relationship model: towards a unified view of data</title>
		<author>
			<persName><forename type="first">P</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans Database Syst</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="9" to="36" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Structuring use cases with goals</title>
		<author>
			<persName><forename type="first">A</forename><surname>Cockburn</surname></persName>
		</author>
		<ptr target="http://members.aol.com/acockburn/papers/usecases.htm" />
		<imprint>
			<date type="published" when="1995">1995</date>
			<pubPlace>Salt Lake City, UT</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Humans and Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Processo de Software baseado en Cena ´rios</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Breitman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of WER&apos;99, Workshop en Requerimientos</title>
		<meeting>WER&apos;99, Workshop en Requerimientos<address><addrLine>Buenos Aires, Argentine</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="95" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A rational design process: how and why to fake it</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Parnas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Clements</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Software Eng</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="251" to="257" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Structured analysis for requirements definition</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schoman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Software Eng (special issue on requirements analysis</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="6" to="15" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Techniques for requirements elicitation</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Goguen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Linde</forename><surname>Ch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the international symposium on requirements engineering</title>
		<meeting>the international symposium on requirements engineering<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="152" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Inspeccio ´n de Escenarios</title>
		<author>
			<persName><forename type="first">J</forename><surname>Doorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hadad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of WER&apos;98, Workshop en Engenharia do Requisitos</title>
		<meeting>WER&apos;98, Workshop en Engenharia do Requisitos<address><addrLine>Maringa ´, Brazil</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="57" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Hadad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oliveros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<title level="m">Construccio ´n de Escenarios a partir del Le ´xico Extendido del Lenguaje</title>
		<meeting><address><addrLine>Buenos Aires, Argentine</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="65" to="77" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Le ´xico extendido del lenguaje y escenarios del sistema nacional para la obtencio ´n de pasaportes</title>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oliveros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Balaguer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hadad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maiorana</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technical report</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<date type="published" when="1996">1996</date>
			<pubPlace>Buenos Aires</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Departamento de Investigacio ´n, Universidad de Belgrano</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Hadad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oliveros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jcsp</forename><surname>Leite</surname></persName>
		</author>
		<idno>13</idno>
		<title level="m">Le ´xico Extendido del Lenguaje y Escenarios del Meeting Scheduler</title>
		<meeting><address><addrLine>Buenos Aires</addrLine></address></meeting>
		<imprint>
			<publisher>Departamento de Investigacio ´n</publisher>
			<date type="published" when="1998">1998</date>
		</imprint>
		<respStmt>
			<orgName>Universidad de Belgrano</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Una Estrategia de Ana ´lisis Orientada a Objetos basada en Escenarios: Aplicacio ´n en un Caso Real</title>
		<author>
			<persName><forename type="first">L</forename><surname>Rivero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Doorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Del</forename><surname>Fresno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mauco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Ridao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Leonardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of WER&apos;98: Workshop en Engenharia do Requisitos</title>
		<meeting>WER&apos;98: Workshop en Engenharia do Requisitos<address><addrLine>Maringa ´, Brazil</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="79" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Ingenierı ´a de Requisitos, Proyecto: Sistema de Planes de Ahorro</title>
		<author>
			<persName><forename type="first">V</forename><surname>Mauco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ridao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Del Fresno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Rivero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Doorn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ISISTAN</title>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>UNCPBA</publisher>
			<pubPlace>Tandil, Argentine</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Disen ˜o de una herramienta para contruccio ´n de LEL y Escenarios. Graduation dissertation</title>
		<author>
			<persName><forename type="first">O</forename><surname>Garcı ´a</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">G</forename><surname>Gentile</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<pubPlace>Argentine</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Universidad Nacional del Centro de la Provincia de Buenos Aires</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Object behavior analysis</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Rubin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Goldberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun ACM</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="48" to="62" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Goal directed requirements acquisition</title>
		<author>
			<persName><forename type="first">A</forename><surname>Dardenne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Lamsweerde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fickas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sci Comput Prog</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="3" to="50" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">An integrated formal model of scenarios based on statecharts</title>
		<author>
			<persName><forename type="first">M</forename><surname>Glinz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th ESEC</title>
		<title level="s">Lecture Notes on Computer Science</title>
		<meeting>the 5th ESEC<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">989</biblScope>
			<biblScope unit="page" from="254" to="271" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Scenario management: an interdisciplinary approach</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">X</forename><surname>Bui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Carroll</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Requirements Eng</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="155" to="173" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Integration of sequential scenarios</title>
		<author>
			<persName><forename type="first">J</forename><surname>Desharnais</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Frappier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Khedri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mili</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Software Eng</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="695" to="708" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Hierarchical use case modeling for requirements engineering</title>
		<author>
			<persName><forename type="first">B</forename><surname>Regnell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<pubPlace>Sweden</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Department of Communication Systems, Lund Institute of Technology, Lund University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Guiding goal modeling using scenarios</title>
		<author>
			<persName><forename type="first">C</forename><surname>Rolland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Souveyet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Achour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Software Eng</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1055" to="1071" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">A proposal for improving the quality of scenario collections</title>
		<author>
			<persName><forename type="first">Ben</forename><surname>Achour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rolland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Souveyet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename></persName>
		</author>
		<ptr target="http://sunsite.informa-tik.rwth-aachen.de/CREWS" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th international workshop on RE: foundations of software quality, REFSQ&apos;98. Presses University of Namur</title>
		<meeting>the 4th international workshop on RE: foundations of software quality, REFSQ&apos;98. Presses University of Namur</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="29" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Supporting scenario-based requirements engineering</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">G</forename><surname>Sutcliffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nam</forename><surname>Maiden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Minocha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manuel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Software Eng</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1072" to="1088" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
