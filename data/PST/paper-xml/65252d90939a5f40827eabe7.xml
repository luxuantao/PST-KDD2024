<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">NEFTU N E : NOISY EMBEDDINGS IMPROVE INSTRUC-TION FINETUNING</title>
				<funder ref="#_sufDp6U">
					<orgName type="full">Lawrence Livermore National Laboratory</orgName>
				</funder>
				<funder>
					<orgName type="full">U.S. Department of Energy</orgName>
				</funder>
				<funder ref="#_kGrxUQv">
					<orgName type="full">ONR MURI program</orgName>
				</funder>
				<funder ref="#_fZaBpux">
					<orgName type="full">Amazon</orgName>
				</funder>
				<funder>
					<orgName type="full">Capital One Bank</orgName>
				</funder>
				<funder ref="#_Ew3VcR2 #_RCrf2KU #_JDChWVN">
					<orgName type="full">unknown</orgName>
				</funder>
				<funder ref="#_KqCJ7Z7">
					<orgName type="full">National Science Foundation</orgName>
				</funder>
				<funder>
					<orgName type="full">AFOSR MURI program</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2023-10-10">10 Oct 2023</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Neel</forename><surname>Jain</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ping-Yeh</forename><surname>Chiang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yuxin</forename><surname>Wen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">John</forename><surname>Kirchenbauer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hong-Min</forename><surname>Chu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Gowthami</forename><surname>Somepalli</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Brian</forename><forename type="middle">R</forename><surname>Bartoldson</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Bhavya</forename><surname>Kailkhura</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Avi</forename><surname>Schwarzschild</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Aniruddha</forename><surname>Saha</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Micah</forename><surname>Goldblum</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">New York University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jonas</forename><surname>Geiping</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tom</forename><surname>Goldstein</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Maryland</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">NEFTU N E : NOISY EMBEDDINGS IMPROVE INSTRUC-TION FINETUNING</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2023-10-10">10 Oct 2023</date>
						</imprint>
					</monogr>
					<idno type="arXiv">arXiv:2310.05914v2[cs.CL]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T09:10+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We show that language model finetuning can be improved, sometimes dramatically, with a simple augmentation. NEFTune adds noise to the embedding vectors during training. Standard finetuning of LLaMA-2-7B using Alpaca achieves 29.79% on AlpacaEval, which rises to 64.69% using noisy embeddings. NEFTune also improves over strong baselines on modern instruction datasets. Models trained with Evol-Instruct see a 10% improvement, with ShareGPT an 8% improvement, and with OpenPlatypus an 8% improvement. Even powerful models further refined with RLHF such as LLaMA-2-Chat benefit from additional training with NEFTune. 1</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The ability of LLMs to follow detailed instructions is vital to their usefulness. Generative language models are typically trained on raw web data, and then subsequently fine-tuned on a comparatively small but carefully curated set of instruction data. Instruction fine-tuning is crucial to taming the power of LLMs, and the usefulness of a model is largely determined by our ability to get the most out of small instruction datasets.</p><p>In this paper, we propose to add random noise to the embedding vectors of the training data during the forward pass of fine-tuning. We show that this simple trick can improve the outcome of instruction fine-tuning, often by a large margin, with no additional compute or data overhead. Noisy Embedding Instruction Fine Tuning (NEFTune), while simple, has a strong impact on downstream conversational quality. When a raw LLM like LLaMA-2-7B is finetuned with noisy embeddings, its performance on AlpacaEval improves from 29.8% to 64.7% (Figure <ref type="figure">1</ref>) -an impressive boost of around 35 percentage points <ref type="bibr">(Touvron et al., 2023b;</ref><ref type="bibr" target="#b6">Dubois et al., 2023)</ref>. NEFTune leads to this surprising and large jump in performance on conversational tasks, maintaining performance on factual question answering baselines. This technique seems to be a free lunch for LLM fine-tuning. LLaMA-2 (7B) +NEFT</p><p>Figure <ref type="figure">1</ref>: AlpacaEval Win Rate percentage for LLaMA-2-7B models finetuned on various datasets with and without NEFTune. NEFTune leads to massive performance boosts across all of these datasets, showcasing the increased conversational quality of the generated answers.</p><p>Algorithm 1 NEFTune: Noisy Embedding Instruction Finetuning Input: D = {x i , y i } N 1 tokenized dataset, embedding layer emb(?), rest of model f /emb (?), model parameters ?, loss(?), optimizer opt(?) NEFT Hyperparameter: base noise scale ? ? R + Initialize ? from a pretrained model. repeat (X i , Y i ) ? D</p><p>? sample a minibatch of data and labels X emb ? emb(X i ), R B?L?d ? batch size B, seq. length L, embedding dimension d ? ? Uniform(-1, 1), R B?L?d ? sample a noise vector X ? emb ? X emb + ( ? ? Ld )? ? add scaled noise to embeds a ?i ? f /emb (X ? emb )</p><p>? make prediction at noised embeddings ? ? opt(?, loss( ?i , Y i ))</p><p>? train step, e.g., grad descent until Stopping criteria met/max iterations.</p><p>a If sequence lengths in a batch are not equivalent, then L is a vector ? Z B &gt;0 and the scaling factor (?/ ? Ld) is computed independently for each sequence in batch.</p><p>performing the worst. For the 13B and 70B parameter models, we train LLaMA-2. Additionally, we improve RLHF models by finetuning the highly refined LLaMA-2-Chat (7B) model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">INSTRUCTION FINETUNING DATASETS</head><p>We focus on the following finetuning datasets either because of their wide popularity, or because they have yielded state-of-the-art results in the recent past. Note that we use only single-turn datasets because of the memory constraints of our hardware setup.</p><p>? Alpaca <ref type="bibr" target="#b22">(Taori et al., 2023)</ref> was constructed using the Self-Instruct method of <ref type="bibr" target="#b25">Wang et al. (2022)</ref>, and the Text-Davinci-003 model <ref type="bibr" target="#b18">(Ouyang et al., 2022)</ref>. Self-Instruct uses a small seed set of tasks to construct new instruction tuning tasks and filter out bad ones. ? Evol-Instruct <ref type="bibr" target="#b27">(Xu et al., 2023</ref>) contains 70k single-turn instructions that are considered more complex than Alpaca. This dataset was derived from the Alpaca dataset by using ChatGPT to evolve the initial instructions. ? Open-Platypus <ref type="bibr" target="#b12">(Lee et al., 2023)</ref> is a curated dataset amalgamated from 11 open-source datasets, curated specifically towards improving LLM performance in STEM and logical domains. This set contains 25k questions where ? 10% are LLM-generated and the remainder human-written. ? ShareGPT <ref type="bibr" target="#b2">(Chiang et al., 2023)</ref> is a dataset of 70K voluntarily-shared ChatGPT conversations <ref type="bibr" target="#b21">(ShareGPT, 2023)</ref>. Although ShareGPT is multiturn, we use the dataset version from Vicuna-v1.1 and split the multi-turn conversations closer to a single-turn format.</p><p>Additionally, we finetune all models with the Alpaca system prompt, except for ShareGPT, where we use the Vicuna system prompt. The hyperparameters can be found in Appendix A.1. We set our hyperparameters through a coarse sweep on LLaMA-1 (7B) trained on the Alpaca dataset, where we see 6% improvement over the standard Alpaca model. We use these as the defaults on all models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">EVALUATION</head><p>Since we train using largely single-turn data, we evaluate the model's conversational abilities using AlpacaEval. We also evaluate the tasks from the OpenLLM Leaderboard to determine if the NEFTune augmentation causes any loss in performance on standard multiple choice tasks.</p><p>AlpacaEval. The AlpacaEval dataset released by <ref type="bibr" target="#b6">Dubois et al. (2023)</ref> is used to evaluate the overall quality of generations. AlpacaEval is an automatic model-based evaluation that compares Text-Davinci-003 generations to the model generations over 805 instructions with the Win Rate reported. The Win Rate is the rate at which the model in question is preferred to Text-Davinci-003 as determined by model evaluator . The 805 test prompts are scraped from Vicuna, koala, Anthropic's hh-rlhf, and other sources, making it a fairly comprehensive and diverse test.</p><p>Additionally, AlpacaEval has high agreement with humans <ref type="bibr" target="#b6">(Dubois et al., 2023)</ref> (validated on 20K annotations). We believe at the 7B and 13B scale this evaluation is still quite reasonable. We use both GPT-4 and ChatGPT as evaluators. We use ChatGPT as a precursor test to determine which models to evaluate on GPT-4. This is due to the cost and API restrictions of GPT-4.</p><p>Hugging Face OpenLLM Leaderboard. The evaluation datasets used for leaderboard ranking are the verbalized multiclass classification datasets ARC <ref type="bibr" target="#b4">(Clark et al., 2018)</ref>, HellaSwag <ref type="bibr" target="#b29">(Zellers et al., 2019)</ref>, MMLU <ref type="bibr" target="#b9">(Hendrycks et al., 2020), and</ref><ref type="bibr">TruthfulQA (Lin et al., 2022)</ref>. This combination of datasets broadly evaluates the ability of a LLM to respond to factual questions and reasoning challenges, and we evaluate these datasets to confirm that model capabilities are not negatively impacted by NEFTune.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>NEFTune Improves Text Quality. From Table <ref type="table" target="#tab_0">1</ref>, we can see an increase across all datasets for the 7B scale with an average increase of 15.1%, showing that training with NEFT significantly improves conversational ability and answer quality, as measured via AlpacaEval. Additionally, we can see from Figure <ref type="figure">2</ref> that we also see improvements on older models, such as LLaMA-1 and OPT. Interestingly, we see less improvement on ShareGPT than on other datasets according to ChatGPT. However, this is not reflected in the GPT-4 evaluation. From  Nevertheless, it is surprising that the conversation quality of such a refined chat model can be so dramatically improved.</p><p>Effect on Capabilities. A potential concern is that NEFTune improves conversational ability only at the cost of other classical skills. We evaluate on the OpenLLM Leaderboard tasks, using the LM-Eval Harness <ref type="bibr" target="#b8">(Gao et al., 2021)</ref> implementation of MMLU, ARC, HellaSwag, and TruthfulQA. These benchmarks give us a glimpse into model knowledge, reasoning, and truthfulness. Figure <ref type="figure" target="#fig_1">3</ref> shows that scores remain stable and that NEFTune preserves model capabilities. NEFTune Works with QLORA. We show that NEFTune also improves performance in constrained resource environments by training with Quantized Low Rank Adapters (QLORA) <ref type="bibr" target="#b5">(Dettmers et al., 2023)</ref>. We use the implementation from <ref type="bibr" target="#b5">Dettmers et al. (2023)</ref>, and the default training hyperparameters for all model weights, training for only one epoch. For 30B, we double the effective batch size and half the learning rate like <ref type="bibr" target="#b5">(Dettmers et al., 2023)</ref>.</p><p>Table <ref type="table" target="#tab_3">3</ref> shows that when training with QLORA, AlpacaEval performance increases across all model sizes and datasets studied. However, performance gains are less stark than those seen in full scale finetuning. This may be because different hyperparameters (i.e, number of finetuning epochs) are needed, or because we are heavily quantizing to 4-bits. Quantum computing is based on the principles of quantum mechanics, which allow for phenomena such as superposition and entanglement between particles. This means that information can be processed in parallel instead of sequentially like traditional computers. Quantum bits (qubits) are used to store data instead of classical bits, allowing more complex computations to take place with fewer resources than would otherwise be necessary. Alpaca-2-7B-NEFT Response: Quantum computing is based on the principles of quantum mechanics, which describe how particles such as electrons and photons behave at the subatomic level. Unlike traditional computers, which process information in binary digits (bits) that can be either 0 or 1, quantum bits (qubits) can exist in multiple states between 0 and 1 simultaneously. This phenomenon is known as superposition and allows for much more complex calculations to be performed than would otherwise be possible with classical computers. Quantum algorithms are designed to take advantage of this property by encoding data into qubit states so that it can be processed exponentially faster than conventional methods. Additionally, quantum entanglement-the ability for two particles to remain connected even over great distances-allows for large amounts of data to be sent across networks quickly and securely.</p><p>The potential applications of quantum computing range from cryptography and artificial intelligence to drug discovery and material science. With continued research and development, quantum technology has the potential to revolutionize many industries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ANALYSIS</head><p>We hypothesize that by adding noise to the embeddings at train time, the model overfits less to the specifics of the instruction-tuning dataset, such as formatting details, exact wording, and text length. Instead of collapsing to the exact instruction distribution, the model is more capable of providing answers that incorporate knowledge and behaviors of the pretrained base model.</p><p>A very noticeable side-effect of this, that we observe immediately, is that the model is forming more coherent, longer completions. Longer, more verbose, completions are preferred by both human and machine evaluators on most datasets <ref type="bibr" target="#b6">(Dubois et al., 2023)</ref>, but we find that the increased verbosity is only the most visible side-effect from the reduced overfitting to the instruction distribution; increased verbosity alone cannot explain the measured gains in performance. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">OVERFITTING</head><p>In this analysis, we focus on LLaMA-2-7B models trained on the Alpaca dataset both with and without NEFTune. We examine the training loss of both models on the Alpaca dataset (both are evaluated without noise) and the "testing" loss on the Evol-Instruct dataset. See Figure <ref type="figure">4</ref>, which shows that the NEFTune model has significantly higher training loss but slightly lower testing loss compared to the base model trained without NEFTune. This indicated less overfitting and better generalization when NEFTune is used.</p><p>To test our overfitting hypothesis further, we also generate responses to training prompts with these models using greedy decoding. We compare the generated responses with the ground truth responses provided in the dataset and report the results in Figure <ref type="figure" target="#fig_2">5</ref>. We use ROUGE-L <ref type="bibr" target="#b14">(Lin, 2004)</ref> and BLEU (up to n-gram order 4) <ref type="bibr" target="#b19">(Papineni et al., 2002)</ref> to measure the similarity between responses. Figure <ref type="figure" target="#fig_2">5</ref> shows that responses generated by the model trained with NEFTune have significantly lower ROUGE-L and BLEU scores. As ROUGE-L is based on longest common subsequence of words and BLEU is based on common n-grams between responses, higher scores on responses generated by the model trained without NEFT indicate that its responses contain a significantly larger portion of the same words in the same order from the ground truth response, as compared to the outputs of the model trained without NEFTune.</p><p>Taken together, these observations imply that standard finetuning recipes, while tuned for maximal performance, significantly overfit to the instruction dataset, inducing exact reproduction of some responses. In contrast, NEFTune models overfit less without reduction in performance on the test set, and do not "lock-in" to the exact wording of the instruction data, as seen in the ROUGE-L metric.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">LENGTH VERSUS TOKEN DIVERSITY</head><p>Due to the strong correlation between increased length and performance on the AlpacaEval task (in our experiments and for submissions to the public leaderboard), we were curious whether the increase in length observed with NEFTune might come at a cost to the diversity of the text. To investigate this, we compute the n-gram repetition rates for LLaMA-2 trained on different finetuning datasets with and without NEFT<ref type="foot" target="#foot_1">2</ref> . N-grams reoccur more frequently in longer passages, and so we must control for passage length. We compute repetition and diversity scores on a fixed-length chunk at the beginning of each sample. The fixed length cuttoffs were 50 for models trained on Alpaca, 100 for Evol-Instruct, 150 for ShareGPT, and 150 for OpenPlatypus. We choose the chunk lengths so that at least half of the generations were longer than the cutoff, and sequences of insufficient length were dropped. The diversity scores we compute are a summary measure of 2-, 3-, and 4-gram repetition rates called log-diversity, as described in Kirchenbauer et al. ( <ref type="formula">2023</ref> In Table <ref type="table" target="#tab_5">4</ref> and<ref type="table" target="#tab_7">Table 6</ref>, we see that NEFT models generate longer outputs than their counterparts. However, we also see that the 2-gram repetition rates as well as overall token log-diversity for models trained with and without NEFT are nearly identical, providing evidence that the longer responses do not come at the expense of repetition, and instead provide additional details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">LENGTH IS (NOT) ALL YOU NEED</head><p>To scrutinize the length-leaderboard correlation even further, we tested whether simply promoting a model to generate longer outputs was sufficient to recover the performance gains of models trained with NEFT. See Table <ref type="table" target="#tab_6">5</ref>. First, we try explicitly prompting the model to give longer answers. Interestingly, this boosts AlpaceEval scores by 16%. We can also coerce long completions by blocking the [EOS] token until we hit 250 tokens in length, thus forcing a standard model to produce answers as long as NEFT. This results in marginal improvements over standard finetuning.</p><p>Finally, we ablate the use of uniform versus Gaussian noise in the NEFT algorithm and find that Gaussian noise induces even longer outputs, but does not come with improved performance. See Table <ref type="table" target="#tab_7">6</ref>. While longer generations do score better, we see that no generation-time strategy came close to the performance of NEFTune models. Human annotators preferred NEFT in 88 instances, and 22 instances were a draw. This corresponds to a 74.6% win score for NEFT using the AlpacaEval formula (88/(140 -22)). Next, we performed a modified run of AlpacaEval where, instead of asking the evaluator (GPT-4) to choose between the outputs of our model or Text-Davinci-003, we present the same pairs of responses from the standard finetuned model and a NEFT version of the same model. There, we observe a win score of 92.80%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND LIMITATIONS</head><p>The success of NEFTune points to the often ignored importance of algorithms and regularizers for LLM training. Unlike the computer vision community, which has studied regularization and overfitting for years, the LLM community tends to use standardized training loops that are designed for optimizer stability and not generalization. In this environment, LLM researchers have become fixated on datasets and model scaling as the primary path forward. Given the consistent gains of NEFTune, and the tendency to overfit on small instruction datasets, it seems that regularization deserves to be revisited in the LLM setting.</p><p>Our study has several limitations. We adopt AlpacaEval as our central measure of instructionfollowing ability for LLMs, which is subject to the biases of a single judge (GPT-4). Additionally, due to limited compute resources, we were not able to validate the success of NEFTune on larger 70B variants across multiple datasets, and we had to rely on fixed hyper-parameters for most NEFTune runs rather than sweeping. Finally, despite our empirical studies, we do not have a conclusive understanding of why NEFTune works.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ETHICS STATEMENT</head><p>In this work, we proposed an augmentation for instruction finetuning. Although we evaluate these models on standard benchmarks, we do not rigiously evaluate the impact of NEFTune on model safety and reliability characteristics like toxicity or refusal to provide potentially harmful responses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">REPRODUCIBILITY STATEMENT</head><p>We describe the models (in Section 3. We finetune the 7B parameter models on four A5000s and 13B parameters on eight A5000s using bfloat16 precision. After doing an initial learning rate sweep on LLaMA-1 and Alpaca, we use learning rate of 5e-5 and the Adam optimizer for all 7B models after seeing 4% improvement over baseline numbers. We train all models for 3 epochs on all datasets setting the same seed for each run with an effective batch size of 128 (4 cards, batch size 4, 8 gradient accumulation steps). When finetuning with noise we train on three levels of noise, an L2 ball of 5, 10, and 15 over the sequence lengths and report the best one on AlpacaEval using ChatGPT as the evaluator. We train with sequence lengths of 512 tokens (mainly for memory and speed) like the original Alpaca setting, finding that this does not effect the outputted response length or quality as corroborated by the Alpaca Leaderboard numbers. In Table <ref type="table" target="#tab_13">13</ref> we see that training with longer sequences does not change performance significantly. For ShareGPT, we split the multi-turn conversations into sequences of 512 tokens using the process described by <ref type="bibr" target="#b2">Chiang et al. (2023)</ref>. When training 70 billion parameter models, we use the finetuning hyperparameters found in <ref type="bibr">Touvron et al. (2023b)</ref> except we use a sequence length of 2048; i.e., we use weight decay of 0.1, a batch size of 64, and a learning rate of 2e-5. We finetune for a total of three epochs on Evol-Instruct 70k <ref type="bibr" target="#b27">(Xu et al., 2023)</ref>. When using NEFTune on the 70B parameter model, we use ? = 15 and did not explore other (potentially better) settings due to computational constraints. Additinonally, we saw an increase in average output character length from 852 to 1241 (+389). </p><formula xml:id="formula_0">(? = 5) (? = 5) (? = 15) A.2 ADDITIONAL ABLATION STUDIES</formula><p>We ablated uniform and gaussian noise, finding that uniform noise performs slightly better. We also ablate the decoding hyperparameters in Figure <ref type="figure">10</ref> finding minimal changes in performance. Thus, we use the simplest sampling strategy, greedy decoding, with a repetition penalty of 1.2. We also check to see if NEFT continues to yield improvements as you increase the number of training epochs.</p><p>From Table <ref type="table" target="#tab_14">14</ref>, we see that there is a plateau in performance that is reached at higher epoch counts.</p><p>In 22.17</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 ADDITIONAL ANALYSIS</head><p>How does the noise impact the tokens? Since our modeling involves adding random noise to embeddings during the training stage, we examined whether the added noise changes the semantics of the token sequences in the training data. For this analysis, we sample a random 5200 samples from the Alpaca dataset, embed each training point using the embedding layer of different models, and then add different levels of noise by varying the scaling factor ?. We then project the noised embeddings back to their closest neighbor in the embedding matrix. We compute the % of token flips in each sentence and average the flip rate across all the samples. We present the flip scores for 7 models in Fig. <ref type="figure" target="#fig_3">6</ref>. While none of the sentences had any flips up to ? = 15, we see some flips when ? ? 25. Note that all the results presented in the paper use ? ? 15. Interestingly, a LLaMA-1 model finetuned on Alpaca does not show any flips even at higher levels of ?.  Impact of noise on embedding similarity. We also analyzed how the similarity of embeddings changes when we perform NEFT training. We looked at the top 100 singular values of the embedding similarity matrix for all the models. We present the results in Fig. <ref type="figure" target="#fig_3">6</ref> (Right). For a given base model (LLaMA-1 or LLaMA-2), the singular value distribution did not change across the variants, with or without NEFTune. This shows that the addition of noise during training does not impact the embedding similarity distribution very much.</p><p>How does noise impact embeddings? In the previous analysis, we evaluated whether any tokens flipped when noising sequence of real training data. We also examine the embeddings of 3 models, LLaMA-2, LLaMA-2 Alpaca, and LLaMA-2 Evol-Instruct in isolation. In this experiment, we sweep over all of the tokens in the vocabulary adding noise to each one, and count the number of noised embeddings whose nearest neighbor is different from their un-noised starting point. We present the results in Fig. <ref type="figure" target="#fig_5">8</ref>. We vary 2 factors: base noise scale ?, and the sequence length scaling factor L which is used in calculating the final noise coefficient. Even at high levels of noise, only a very small number of tokens actually flip (? 0.4%). This shows that NEFT training does not change the semantic relationships between the tokens.</p><p>Interestingly, this experiment suggests that, if considering NEFTune as a type of data augmentation applied to the embeddings of training tokens, the actual effects of NEFT are mostly a result of perturbations in intra-token space since the noise scales used rarely amount to displacements that transform any individual token into a meaningfully different one. Nevertheless, in Figure <ref type="figure" target="#fig_6">9</ref> we show the tokens corresponding to embeddings of LLaMA-2 Alpaca model that do actually flip even with the lowest amount of noise utilized in our study.    AlpacaEval (Vicuna Subset) Instruction: Can you explain the basics of quantum computing?</p><p>LLaMA-2-Alpaca-7B Response: Quantum computing is based on the principles of quantum mechanics, which allow for phenomena such as superposition and entanglement between particles. This means that information can be processed in parallel instead of sequentially like traditional computers. Quantum bits (qubits) are used to store data instead of classical bits, allowing more complex computations to take place with fewer resources than would otherwise be necessary.</p><p>LLaMA-2-Alpaca-7B-NEFT Response: Quantum computing is based on the principles of quantum mechanics, which describe how particles such as electrons and photons behave at the subatomic level. Unlike traditional computers, which process information in binary digits (bits) that can be either 0 or 1, quantum bits (qubits) can exist in multiple states between 0 and 1 simultaneously. This phenomenon is known as superposition and allows for much more complex calculations to be performed than would otherwise be possible with classical computers. Quantum algorithms are designed to take advantage of this property by encoding data into qubit states so that it can be processed exponentially faster than conventional methods. Additionally, quantum entanglement-the ability for two particles to remain connected even over great distances-allows for large amounts of data to be sent across networks quickly and securely. The potential applications of quantum computing range from cryptography and artificial intelligence to drug discovery and material science. With continued research and development, quantum technology has the potential to revolutionize many industries.</p><p>LLaMA-2-ShareGPT-7B Response: Quantum computers are a type of computer that use quantum-mechanical phenomena, such as superposition and entanglement, to perform operations on data. They have the potential to solve certain problems much faster than classical computers, which are limited by the laws of classical physics.</p><p>One way to think about how a quantum computer works is in terms of its basic building blocks or "qubits." Qubits can exist in multiple states at once (a property known as superposition), and they can also be linked together so that their state depends on the state of other qubits (a phenomenon called entanglement). These properties allow quantum computers to perform many calculations simultaneously, taking advantage of the principles of quantum mechanics to achieve exponential speedup for certain types of computations.</p><p>LLaMA-2-ShareGPT-7B-NEFT Response: Quantum computers are a type of computer that use quantum-mechanical phenomena, such as superposition and entanglement, to perform operations on data. They have the potential to solve certain problems much faster than classical computers, which are limited by the laws of classical physics.</p><p>Here is a brief overview of some key concepts in quantum computing:</p><p>1. Superposition: In classical computing, bits can only be either 0 or 1 at any given time. However, in quantum computing, qubits (quantum bits) can exist in multiple states simultaneously, known as superpositions. This allows for many calculations to be performed simultaneously, increasing the speed of computation. 2. Entanglement: When two particles become "entangled," their properties become correlated even when they are separated by large distances. For example, if two photons are created with opposite polarizations, measuring the state of one photon will instantly determine the state of the other, regardless of how far apart they are. This property can be used to create a network of entangled qubits, allowing them to work together to solve Preprint complex problems. 3. Interference: Just like waves can interfere with each other to produce new patterns, qubits can also interfere with each other through a process called quantum interference. By manipulating these interferences, quantum algorithms can be designed to take advantage of the unique properties of quantum systems. 4. Measurement: One of the biggest challenges in working with quantum systems is that measurements collapse the wave function, effectively freezing the system into its final state. This means that once a measurement is taken, the information stored in the quantum system cannot be changed anymore. As a result, quantum computations must be designed carefully to ensure that the desired outcome is achieved before the measurement is taken. 5. Error correction: Because of the inherent instability of quantum systems, errors can occur during computation. To overcome this challenge, error correction codes must be implemented to detect and correct mistakes made by the quantum system. These error correction techniques are critical to making practical quantum computers a reality. 6. Topological Quantum Computing: Another approach to building a quantum computer uses topological phases of matter, where the order parameter takes values in a non-commutative space. It has been shown that certain classes of topologically ordered states can host fault-tolerant quantum computation. 7. Degrees of freedom: In classical computing, there is usually just one degree of freedom per bit -whether it is set to 0 or 1. But in quantum computing, there can be multiple degrees of freedom per qubit, leading to more possibilities for encoding information and performing calculations. 8. Classical vs Quantum gates: Gates are basic building blocks of quantum circuits, similar to logic gates in classical computing. While both classical and quantum gates perform operations on data, the rules governing them differ significantly. For instance, while classical gates operate on binary digits (bits), quantum gates operate on qubits, and the principles underlying their behavior are fundamentally different.</p><p>LLaMA-2-Evolve70k: Sure, I'd be happy to help! Quantum computing is a type of computation that uses quantum-mechanical phenomena, such as superposition and entanglement, to perform operations on data. Unlike classical computers, which use bits (which can only have one of two values, either 0 or 1) to represent information, quantum computers use qubits (which can exist in multiple states simultaneously). This allows for much faster processing times when it comes to certain types of calculations. One way that quantum computers are different from classical computers is through their ability to perform parallel computations. In a classical computer, each bit must be processed sequentially, but in a quantum computer, many qubits can be manipulated at once using something called a quantum gate. These gates allow for complex algorithms to be executed quickly by taking advantage of the properties of quantum mechanics.</p><p>Another key aspect of quantum computing is entanglement, which occurs when two or more particles become connected in such a way that the state of one particle affects the state of another, regardless of how far apart they may be. Entangled qubits can be used to perform certain types of calculations much faster than non-entangled ones because the results of measurements made on them are predetermined based on their initial state. Overall, while there is still much research being done into the potential applications of quantum computing, this new field has great promise for solving some of society's most challenging problems related to cryptography, optimization, and simulation.</p><p>LLaMA-2-Evolve70k-NEFT: Sure, I'd be happy to help! Quantum computing is a type of computation that uses quantum-mechanical phenomena, such as superposition and entanglement, to perform operations on data. Unlike classical computers, which use bits (which can only have one of two values, either 0 or 1) to represent information, quantum computers use qubits, which can exist in multiple states simultaneously. This allows for much faster processing times when it comes to certain types of calculations.</p><p>The basic idea behind quantum computing is to use a series of quantum gates to manipulate Preprint the state of individual qubits. These gates are similar to the logic gates used in classical computer architecture, but they operate on a different level of abstraction. For example, instead of using AND and OR gates to build more complex circuits, quantum gates like the CNOT gate allow us to create entangled pairs of qubits with specific correlations between their states. One of the key advantages of quantum computing is its ability to solve certain problems exponentially faster than classical computers. One famous example is factorization, where we need to find the prime factors of a large number. Using Shor's algorithm, a quantum computer can factorize numbers much larger than what would be possible with classical methods. Another area where quantum computing has shown promise is in simulating quantum systems, which could lead to new insights into materials science and chemistry.</p><p>However, there are also many challenges associated with building practical quantum computers. One major issue is error correction, since any disturbance to a qubit can cause it to lose its quantum properties and become a classical bit. Researchers are currently working on developing error-correcting codes that can mitigate these errors and make quantum computations more reliable over time. Additionally, there are still many open questions about how best to architect quantum computers, including issues related to scalability and interconnectivity between components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LLaMA-2-OpenPlatypus:</head><p>Quantum computing is a rapidly developing field that has the potential to revolutionize how we process and store information. It relies on the principles of quantum mechanics, which describe the behavior of matter and energy at very small scales, such as atoms and subatomic particles.</p><p>In classical computers, bits represent either 0 or 1, but in a quantum computer, qubits can exist in multiple states simultaneously. This property, called superposition, allows quantum computers to perform many calculations in parallel, greatly increasing their processing power. Additionally, quantum computers use entanglement, where two or more particles become connected in such a way that the state of one particle instantly affects the other, regardless of the distance between them. This phenomenon enables quantum algorithms to solve certain problems much faster than classical algorithms.</p><p>One example of a problem that could be solved quickly by a quantum computer is factoring large numbers into prime factors. While this may not seem like a significant breakthrough, it would have wide-ranging implications for fields such as cryptography, since it would enable the rapid cracking of codes used to secure sensitive data. Another area where quantum computing could have a major impact is drug discovery, as it could help identify new treatments for diseases much faster than traditional methods.</p><p>However, building a practical quantum computer with enough qubits to be useful remains a challenge. Currently, most quantum computers are relatively small and prone to errors due to environmental interference. Researchers are working on improving both the number of qubits and the accuracy of quantum computations, making progress towards realizing the full potential of this exciting technology.</p><p>LLaMA-2-OpenPlatypus-NEFT: Quantum computing is a field of computer science that deals with the use of quantum mechanics for computation. It involves developing and studying computational models based on the principles of quantum theory, which describe the behavior of matter and energy at very small scales. The goal of quantum computing is to take advantage of the unique properties of quantum systems, such as superposition and entanglement, to solve complex problems more efficiently than classical computers can.</p><p>In classical computing, bits represent either 0 or 1, but in quantum computing, qubits (quantum bits) can be in multiple states simultaneously until they are measured. This property, called superposition, allows quantum computers to perform many calculations in parallel, greatly increasing their processing power compared to classical computers. Another key feature of quantum computing is entanglement, where two or more particles become correlated such that the state of one particle instantly affects the other, regardless of the Preprint distance between them. Entanglement can be used to transmit and process information instantaneously, enabling faster communication and computations. One of the main challenges in building practical quantum computers is controlling and manipulating individual quantum bits accurately enough to realize useful algorithms. Currently, most quantum computers rely on experimental platforms using trapped ions, superconducting circuits, or photons. These devices are still relatively fragile and prone to errors, known as "noise," which must be corrected by sophisticated error-correction codes. However, significant progress has been made in recent years towards scaling up quantum computers and achieving higher levels of noise tolerance. Some potential applications of quantum computing include cryptography, optimization problems, simulation of physical systems, and drug discovery. Quantum computers could also play a role in solving some of society's biggest challenges, such as climate change modeling, materials science, and protein folding research. While much work remains to be done before quantum computers become widely available, the field continues to attract attention from both academia and industry due to its great promise for transforming various fields of study and engineering.</p><p>AlpacaEval (Vicuna Subset) Instruction: Write a symphony concert review, discussing the orchestra's performance and overall audience experience.</p><p>LLaMA-2-Alpaca-7B Response:</p><p>The symphony concert was truly remarkable! The orchestra played with great energy and skill, creating a beautiful soundscape for the audience to enjoy. Every piece they performed was expertly executed, from the gentle melodies of Mozart to the powerful climaxes of Beethoven.</p><p>The acoustics in the hall were perfect; every note could be heard clearly and distinctly. The lighting design added another layer of emotion to each piece, helping to draw out the emotions within the music. Overall, it was a wonderful evening full of fantastic music and an unforgettable experience for all who attended. LLaMA-2-Alpaca-7B-NEFT Response:</p><p>The symphony concert was truly remarkable! The orchestra played with such passion and energy that it brought tears to my eyes. Every note they struck seemed to reverberate through the hall in perfect harmony. It was clear from their performance that each musician had put in countless hours of practice and dedication to create this beautiful sound.</p><p>The conductor did an excellent job leading the musicians throughout the evening. His movements were full of emotion as he guided them through the pieces. He would often pause for moments at a time allowing the audience to take in every moment of the piece before moving on. This allowed us all to appreciate the intricacies of each song even more.</p><p>The crowd was filled with people of all ages; some who knew the songs well and others who were there to simply enjoy the night. There wasn't one person in attendance who didn't seem to be having a great time. Even during the quieter parts of the show, you could feel the excitement in the air. Whenever something particularly exciting happened everyone cheered and applauded. Overall, I can say without a doubt that this symphony concert was one of the best experiences I have ever had. From start to finish, everything about it was absolutely amazing. If given the chance, I will definitely go back again next year.</p><p>LLaMA-2-Share-7B Response:</p><p>On Saturday evening at Carnegie Hall, I had the privilege of attending a symphony concert featuring the New York Philharmonic Orchestra under the direction of Maestro Lorin Maazel.</p><p>The program for the evening consisted of three works by some of classical music's most renowned composers -Beethoven's "Egmont" Overture, Tchaikovsky's Piano Concerto No. 1 with soloist Lang Lang, and Dvo??k's Symphony No. 9 in E minor, Opus 95 ("From the New World").</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Preprint</head><p>Maestro Maazel led the orchestra through each piece with precision and passion, drawing out rich and vibrant sounds from every section of the ensemble. The strings played with great depth and emotion, while the woodwinds and brass added colorful accents throughout the evening.</p><p>Lang Lang was a particularly impressive performer as well, displaying technical mastery and artistic sensitivity in his interpretation of Tchaikovsky's concerto. His playing was full of energy and expression, and he seemed completely immersed in the music.</p><p>As for the audience, it was clear that everyone present was there to appreciate the beauty and power of live orchestral music. There were frequent bursts of applause and cheers throughout the night, and many people around me were wiping tears of joy from their eyes during the final movement of Dvo??k's symphony. It was a truly moving experience to be surrounded by so many people who shared a love for this timeless art form.</p><p>Overall, the concert was a true triumph for both the musicians on stage and the audience in attendance. It was a reminder of why we continue to support and celebrate live music, and I left the hall feeling inspired and uplifted.</p><p>LLaMA-2-Share-7B-NEFT Response:</p><p>On Saturday night at Carnegie Hall, the New York Philharmonic put on a breathtaking performance of Symphony No. 5 by Ludwig van Beethoven. Under the direction of Music Director Jaap van Zweden, the orchestra delivered a powerful and emotional rendition of this classic work that left the packed house in rapturous applause.</p><p>The evening began with a captivating performance of Mozart's Overture to Die Zauberfl?te, which set the stage for the grandeur of what was to come. As the lights dimmed and the orchestra launched into the opening notes of the Fifth Symphony, it was clear that this would be a special evening. Van Zweden expertly guided the orchestra through each movement, drawing out every nuance of the music while maintaining a sense of momentum and energy. One of the standout features of the performance was the orchestra's dynamic range. From the softest pianissimo passages to the loudest fortissimo climaxes, every member of the ensemble played with precision and depth. The brass section, in particular, shone throughout the evening, delivering rich and full-bodied sound that filled the hall.</p><p>In addition to the superlative playing of the musicians, the acoustics of Carnegie Hall were also a major factor in the success of the evening. This iconic venue has a warm and intimate atmosphere that allows listeners to fully immerse themselves in the music. Every note seemed to hang in the air, enveloping the audience in a sonic embrace that made it easy to forget the outside world and lose oneself entirely in the beauty of the music.</p><p>As the final chords of the symphony faded away, the audience erupted into thunderous applause, showering the musicians with praise and admiration. It was a truly magical moment, one that will stay with me long after the evening came to a close. Overall, I would say that this was a once-in-a-lifetime experience that any lover of classical music should not miss.</p><p>LLaMA-2-Evolve70k Response: I recently attended a symphony concert at the renowned Carnegie Hall in New York City. The evening's program featured works by Beethoven, Mozart, and Tchaikovsky, performed by the prestigious New York Philharmonic Orchestra under the baton of maestro Alan Gilbert.</p><p>The concert began with Beethoven's lively "Leonore" Overture No. 3, which set the tone for the evening's festivities. The orchestra played with great energy and precision, showcasing their mastery of the classical repertoire. Maestro Gilbert conducted with grace and fluidity, drawing out each note and phrase to maximum effect. Next up was Mozart's Symphony No. 29, a beautiful work that demonstrated the composer's deftness with melody and harmony. The orchestra played with even greater nuance than before, creating a rich tapestry of sound that transported me to another world. I particularly enjoyed the woodwind section, whose delicate phrases added depth and dimension to the piece. Finally, we were treated to Tchaikovsky's iconic Symphony No. 5. This was undoubtedly Preprint the highlight of the evening, as the orchestra brought all of their skill and passion to bear on this towering masterwork. From the haunting opening theme to the triumphant finale, every moment of the performance was filled with emotion and intensity. It was truly a thrilling experience to witness such accomplished musicians bring these timeless compositions to life.</p><p>Overall, the evening was a resounding success. The New York Philharmonic Orchestra proved themselves to be among the finest ensembles in the world, playing with technical prowess and artistic sensitivity. Maestro Gilbert showed himself to be a skilled conductor, guiding the orchestra through each work with care and attention to detail. And the acoustics of Carnegie Hall itself were simply breathtaking, providing a perfect backdrop for the music.</p><p>If you have the opportunity to attend a symphony concert, I highly recommend it -you won't be disappointed! LLaMA-2-Evolve70k-NEFT Response:</p><p>As I took my seat in the concert hall, anticipation was building as the lights dimmed and the orchestra began to play. The first piece on the program was Beethoven's Symphony No. 1, which immediately captured my attention with its powerful melodies and intricate rhythms. The conductor led the orchestra with precision and enthusiasm, and the musicians responded with a dynamic performance that showcased their exceptional skill and passion for music-making.</p><p>The second movement, marked "Andante Favori," was particularly beautiful, with delicately played strings and woodwinds creating a serene and introspective mood. The third movement, "Allegro," was full of energy and drive, with the brass section adding a bold and assertive presence to the music. The final movement, "Alla Da Prestissimo," was a thrilling conclusion to the symphony, with lightning fast tempos and dazzling virtuosity from all members of the orchestra.</p><p>Throughout the performance, I was impressed by the cohesion and unity of the ensemble, as well as the individual excellence of each musician. The sound they produced was rich and full, yet also crystal clear and precise, and there were many moments where I was left breathless by the sheer beauty and power of the music.</p><p>In addition to the excellent playing, another highlight of the evening was the warm and welcoming atmosphere created by the orchestra and conductor. They interacted with the audience throughout the performance, sharing insights into the music and encouraging us to enjoy the journey along with them. This made for a truly engaging and immersive experience, one that left me feeling inspired and uplifted long after the last note had faded away.</p><p>Overall, this symphony concert was a remarkable event that I will remember for years to come. The orchestra's superb performance combined with the audience's enthusiastic support to create a magical night of music-making that I would recommend to anyone looking for a truly unforgettable musical experience.</p><p>LLaMA-2-OpenPlatypus: Title: A Night of Enchantment with the Boston Symphony Orchestra Date: March 15th, 2023 Venue: Symphony Hall, Boston MA Review by John Doe for The Boston Globe</p><p>The Boston Symphony Orchestra (BSO) returned to its home stage at Symphony Hall last night after a two-week hiatus, and they did not disappoint as they presented their first program under the baton of Music Director Andris Nelsons since his recent appointment extension was announced. With a captivating lineup featuring works from three different eras and composers, this evening proved to be nothing short of enchanting for both musicians and audiences alike.</p><p>Opening the show was Jean Sibelius' iconic "Finlandia," which set the tone for what would prove to be an exquisite journey through various musical styles throughout history.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Preprint</head><p>Performed without intermission, the BSO immediately captured our attention with their impeccable precision and dynamic range -particularly during the stirring brass passages that brought us into the heart of Finnish nationalism. It was clear from the outset that Maestro Nelsons had prepared his ensemble meticulously; every note seemed carefully considered yet effortlessly executed, creating a seamless blend between soloists and full orchestra.</p><p>Next up was Pyotr Ilyich Tchaikovsky's beloved Violin Concerto in D Major, performed by one of today's most acclaimed violinists, Leonidas Kavakos. From the very first notes, it became apparent why he has earned such widespread praise; his technical prowess was on full display while also exhibiting immense depth of feeling throughout each movement. His partnership with the BSO was truly special, resulting in moments of pure magic when all eyes were fixed upon him as he soared above the orchestral accompaniment.</p><p>After intermission came another treat: Gustav Mahler's Symphony No. 4 in G Major ("Tragic"). This work often receives less attention compared to some other Mahler symphonies due to its relative brevity (approximately half an hour), but make no mistakethere is much beauty and emotion packed within these few minutes. Under Mr. Nelsons' guidance, we experienced every twist and turn along the way, culminating in a thrilling climax that left us breathless before suddenly fading away into silence.</p><p>As if that weren't enough, the encore offered something entirely unexpected: Samuel Barber's Adagio for Strings. Originally composed as part of a string quartet arrangement, this haunting melody has since become synonymous with mourning and loss thanks largely to its inclusion in films like Platoon and The Elephant Man. Hearing it live provided goosebumps galore as it filled Symphony Hall from top to bottom; even those who may have been unfamiliar with the piece prior could not help but feel moved by its poignancy.</p><p>In conclusion, tonight's performance demonstrated exactly why the Boston Symphony Orchestra remains one of the world's preeminent ensembles nearly two centuries after its founding. Each musician appeared fully invested in their craft, delivering stunning interpretations of timeless classics alongside more contemporary pieces. As someone lucky enough to witness this magical event firsthand, I can confidently say that it will remain etched in my memory forever -just like many others who attended last night's sold-out show.</p><p>LLaMA-2-OpenPlatypus-NEFT Response: Title: A Night of Enchantment with the Boston Symphony Orchestra</p><p>The Boston Symphony Orchestra (BSO) presented their latest concert at historic Symphony Hall in Boston on February 1st, 20XX. The evening was filled with captivating music from some of the most renowned composers throughout history. With conductor Andris Nelsons leading the way, this night proved to be one of enchantment for both performers and audiences alike.</p><p>As we took our seats inside Symphony Hall, anticipation filled the air as people chatted excitedly about what they were expecting from tonight's show. The hall itself is quite impressive; its ornate design featuring intricate details like marble columns and stained glass windows creating an atmosphere of grandeur perfect for such an event. Once everyone had found their seat, there was complete silence except for the occasional cough or shuffling of feet until finally, the lights dimmed signaling that it was time for the show to begin.</p><p>The first piece performed was Jean Sibelius' "Finlandia," Opus 26, which set the tone for the rest of the evening -grandiose yet serene. As expected, Andris Nelsons brought out each note vibrantly while still allowing space for individual instruments to shine through. It was clear from his direction that he had prepared extensively for this performance, ensuring every aspect of the music came alive under his baton.</p><p>Next up was Pyotr Ilyich Tchaikovsky's iconic Violin Concerto in D Major, Opus 35, featuring soloist Gil Shaham. From the very first notes played by Shaham, it became Preprint apparent why he has earned critical acclaim worldwide -his technical prowess combined with emotional depth made for an unforgettable performance. He seamlessly transitioned between different styles and tempos, keeping us enthralled throughout the entirety of the concerto. Whenever he stepped back into the ensemble after his solos, you could hear a collective sigh of relief as if we had all been holding our breath waiting for him to return. Andris Nelsons conducted flawlessly alongside him, adding even more depth and beauty to this already beautiful work.</p><p>After intermission, the BSO returned to the stage for Johannes Brahms' Symphony No. 4 in E Minor, Opus 98. This piece marked another highlight of the evening, demonstrating once again how well these musicians can come together as one cohesive unit. Each section had its moment to shine without ever overpowering the others, resulting in a harmonious blend of sound that left us spellbound. Andris Nelsons showed great versatility here too, expertly navigating through various sections while maintaining momentum throughout the whole movement.</p><p>To end the night on a high note, the BSO closed with Gustav Mahler's Symphony No. 1 in D Major ("Titan"). Right from the opening bars, it was evident that this would be no ordinary performance. There was an energy within the orchestra that seemed to infect those watching, causing many people around me to clap along enthusiastically despite not having reached the final movement just yet! Andris Nelsons continued to lead them effortlessly, guiding us through this epic journey full of emotion and passion. By the time we reached the climactic finale, cheers erupted from the crowd as if we had all been released from some sort of magical trance. It truly felt like we had witnessed something special, something that will stay with us long after the last note had died away.</p><p>In conclusion, the Boston Symphony Orchestra put on an incredible show last night, displaying impeccable musicianship and artistry throughout their performances. Their dedication to bringing new life to classic works while also exploring lesser-known gems was greatly appreciated by all who attended. If you have the opportunity to catch one of their future shows, do not hesitate -allow yourself to become enchanted by their magic!</p><p>Here are a couple more examples from the NEFTune models that performed the best on AlpacaEval (LLaMA-2 trained on Evolve-Instruct).</p><p>AlpacaEval (Vicuna Eval) Instruction: What if Vincent van Gogh had been a successful artist during his lifetime? LLaMA-2-Evolve70k:</p><p>As an AI language model, I don't have personal beliefs or opinions but based on historical facts and researches, it is believed that Van Gogh would not have experienced mental illness as he was recognized for his artistic talent in his early years before developing psychiatric problems later in life. He may have continued to create more masterpieces and become one of the most famous artists of all time. His legacy might also be different from what we know today since he did not achieve recognition until after his death when his brother sold some of his paintings at auction. LLaMA-2-Evolve70k-NEFT:</p><p>As an AI language model, I don't have personal beliefs or opinions but here are some possible scenarios based on historical facts and speculation: 1) Van Gogh would likely have continued to create art throughout his life, as he was prolific in his output even before his breakthrough success. However, with financial stability and recognition, he may have experimented more with different styles and themes, pushing himself creatively in new directions.</p><p>2) His relationships with others might also have changed. With money and fame comes social status, which could have opened up opportunities for him to mingle with other artists, writers, and intellectuals of his time. He may have formed deeper friendships and collaborations with fellow creatives, potentially leading to further innovation within the arts community.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: OpenLLM Leaderboard tasks with and without NEFTune on LLaMA-2 across Alpaca, Evol-Instruct, and OpenPlatypus datasets and LLaMA-1 trained on Evol-Instruct. We observe that performance does not change across datasets and models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Left shows the ROUGE-L of training with and without NEFT. Right shows BLEU score.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Percentage of tokens per sentence flipped at different levels of noise added to embeddings.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Top-100 eigenvalues of embedding similarity matrices across models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Number of tokens flipped at different levels of noise and sequence lengths (out of 32000). Model names corresponding to each plot are in the title.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Tokens flipped at ? = 1 and sequence length = 512 in LLaMA-2</figDesc><graphic url="image-1.png" coords="16,105.25,569.91,401.51,92.25" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>AlpacaEval Win Rate versus Text-Davinci-003 for LLaMA-2 trained on different datasets, using GPT-4 as the evaluator, showing an average improvement of 15% across all datasets.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="14">Alpaca Evol-Instruct ShareGPT OpenPlatypus Average</cell></row><row><cell></cell><cell></cell><cell cols="7">LLaMA-2 7B 29.79</cell><cell cols="2">70.34</cell><cell></cell><cell>68.74</cell><cell></cell><cell></cell><cell></cell><cell>62.00</cell><cell></cell><cell cols="3">57.71</cell></row><row><cell></cell><cell></cell><cell cols="3">+NEFT</cell><cell></cell><cell></cell><cell></cell><cell>64.69</cell><cell cols="2">79.60</cell><cell></cell><cell>76.28</cell><cell></cell><cell></cell><cell></cell><cell>70.61</cell><cell></cell><cell cols="3">72.80</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="6">AlpacaEval Win Rate</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>70</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>6 7 .5</cell><cell></cell><cell>6 7 .6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Win Rate (ChatGPT Eval.)</cell><cell>20 30 40 50 60 10</cell><cell>4 1 .4</cell><cell>4 8 .7</cell><cell>4 8 .5</cell><cell>6 1 .7</cell><cell>4 8 .3</cell><cell>6 2 .5</cell><cell>5 2 .2 OPT-6.7B 5 5 .5 +NEFT</cell><cell>6 2 .3</cell><cell>6 2 .5</cell><cell cols="2">4 5 .7 LLaMA-1-7B 4 5 .8 +NEFT</cell><cell>5 1 .2</cell><cell>5 6 .9</cell><cell>5 7 .2</cell><cell cols="2">5 3 .4 LLaMA-2-7B 5 4 .3 6 1 .7 +NEFT</cell><cell>6 2 .9</cell><cell>6 3 .6</cell><cell>6 3 .5</cell><cell>6 4 .2</cell></row><row><cell></cell><cell>0</cell><cell></cell><cell></cell><cell cols="4">Alpaca</cell><cell cols="4">Evol-Instruct</cell><cell cols="5">OpenPlatypus</cell><cell cols="4">ShareGPT</cell></row></table><note><p>Figure 2: AlpacaEval Win Rate with and without NEFTune on LLaMA-2, LLaMA-1, and OPT across Alpaca, Evol-Instruct, ShareGPT and OpenPlatypus datasets. Performance improves across different datasets and models with ChatGPT as the evaluator.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell>, we see the Win Rate climbs</cell></row></table><note><p><p><p>NEFTune Can Improve Chat Models. From Table</p>2</p>, we see that further instruction finetuning LLaMA-2 Chat (7B) on Evol-Instruct can boost the performance of LLaMA-2-Chat by 3%. This model was already extensively tuned, using multiple rounds of RLHF. Yet, with NEFTune, we see a sizable, additional performance increase of 10%, although we note that some capabilities of this checkpoint model may be affected like its ability to refrain from outputting toxic behavior.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table><row><cell cols="5">LLaMA-2-Chat (7B), LLaMA-2 (13B), and LLaMA-2 (70B) can be finetuned further to</cell></row><row><cell>improve performance.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">LLaMA-2 (7B) LLaMA-2-Chat (7B) LLaMA-2 (13B) LLaMA-2 (70B)</cell></row><row><cell>Base</cell><cell>-</cell><cell>71.37*</cell><cell>-</cell><cell>-</cell></row><row><cell>Evol-Instruct</cell><cell>70.34</cell><cell>74.44</cell><cell>72.61</cell><cell>75.03</cell></row><row><cell>+NEFT</cell><cell>79.60</cell><cell>81.74</cell><cell>82.04</cell><cell>88.81</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>AlpacaEval Win Rate (ChatGPT Eval.) reported across different datasets and model sizes. Even training with QLORA, we can see performance increases across the board, although they are milder than regular finetuning.</figDesc><table><row><cell>Model</cell><cell cols="5">LLaMA2(7B) LLaMA2(7B) LLaMA2(13B) LLaMA2(13B) LLaMA1(30B)</cell></row><row><cell>Dataset</cell><cell>Alpaca</cell><cell>Evolve70k</cell><cell>Alpaca</cell><cell>Evolve70k</cell><cell>Alpaca</cell></row><row><cell>Base</cell><cell>26.71</cell><cell>52.80</cell><cell>31.99</cell><cell>56.96</cell><cell>41.06</cell></row><row><cell>+NEFT (? = 5)</cell><cell>31.43</cell><cell>56.96</cell><cell>38.20</cell><cell>60.99</cell><cell>41.12</cell></row><row><cell>+NEFT (? = 10)</cell><cell>28.57</cell><cell>54.84</cell><cell>41.55</cell><cell>61.30</cell><cell>43.11</cell></row><row><cell>+NEFT (? = 15)</cell><cell>29.01</cell><cell>57.27</cell><cell>42.17</cell><cell>57.39</cell><cell>41.99</cell></row><row><cell cols="6">A Qualitative Example. Here we show a qualitative example from LLaMA-2 trained on Alpaca</cell></row><row><cell cols="6">with and without NEFT. We choose the quantum computing prompt from the Vicuna Eval subset</cell></row><row><cell cols="6">of the AlpacaEval instructions. We see from this example that Alpaca produces a response that</cell></row><row><cell cols="6">is shorter, giving only a very basic definition of quantum computing, mentioning qubits, superposi-</cell></row><row><cell cols="6">tion, entanglement, and increased complex computation. In the Alpaca-NEFT response, the model</cell></row><row><cell cols="6">provides a more fluid answer, expounding on these topics with clearer explanations of superposition</cell></row><row><cell cols="6">and quantum entanglement, and including a mention of potential applications. We feel this example</cell></row><row><cell cols="6">is representative of the kinds of changes induced by NEFT. See the appendix for more examples</cell></row><row><cell cols="2">using different finetuning datasets.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="6">AlpacaEval (Vicuna Subset) Prompt: Can you explain the basics of quantum comput-</cell></row><row><cell>ing?</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Alpaca-2-7B Response:</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Left: training loss on the Alpaca dataset for models with and without NEFT, computed with no added noise. Training with NEFT yields a higher training loss. Right: loss of the same model, but evaluated on the "test" Evol-Instruct dataset. NEFT yields slightly lower loss.</figDesc><table><row><cell cols="2">Preprint</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">LLaMA-2-7b</cell><cell cols="2">+NEFT</cell><cell></cell><cell cols="2">LLaMA-2-7b</cell><cell>+NEFT</cell></row><row><cell></cell><cell>3000</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>4000</cell><cell></cell><cell></cell></row><row><cell>Count</cell><cell>2000</cell><cell></cell><cell></cell><cell></cell><cell>Count</cell><cell>3000 2000</cell><cell></cell><cell></cell></row><row><cell></cell><cell>1000</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1000</cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell>0.25</cell><cell>0.50 Loss (Alpaca) 0.75</cell><cell>1.00</cell><cell>1.25</cell><cell>0</cell><cell>0.6</cell><cell>0.8 Loss (Evol-Instruct) 1.0</cell><cell>1.2</cell></row><row><cell cols="2">Figure 4:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>Alpaca</cell><cell>Evol-Instruct</cell><cell>ShareGPT</cell><cell>OpenPlatypus</cell></row><row><cell></cell><cell></cell><cell>(? = 5)</cell><cell>(? = 5)</cell><cell>(? = 10)</cell><cell>(? = 15)</cell></row><row><cell>Character</cell><cell>Training data</cell><cell>270.31</cell><cell>1356.43</cell><cell>1276.76</cell><cell>649.39</cell></row><row><cell>Lengths</cell><cell cols="2">LLaMA-2 7B 375.22</cell><cell>864.06</cell><cell>1011.28</cell><cell>1100.98</cell></row><row><cell></cell><cell>+NEFT</cell><cell>1061.89</cell><cell>1403.59</cell><cell>1496.86</cell><cell>1694.26</cell></row><row><cell>Whitespace</cell><cell>LLaMA-2 7B</cell><cell>60.5</cell><cell>138.99</cell><cell>161.04</cell><cell>170.41</cell></row><row><cell>Lengths</cell><cell>+NEFT</cell><cell>169.36</cell><cell>225.56</cell><cell>234.99</cell><cell>264.12</cell></row><row><cell>2-Gram</cell><cell>LLaMA-2 7B</cell><cell>1.49</cell><cell>3.87</cell><cell>4.82</cell><cell>2.73</cell></row><row><cell>Repetition %</cell><cell>+NEFT</cell><cell>1.72</cell><cell>3.79</cell><cell>4.58</cell><cell>3.21</cell></row><row><cell>Log-Diversity</cell><cell>LLaMA-2 7B +NEFT</cell><cell>15.97 16.41</cell><cell>10.65 10.77</cell><cell>8.40 8.60</cell><cell>9.96 9.64</cell></row><row><cell>5.4 HUMAN STUDY</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p><p>(Row 1) Avg. Character lengths of AlpacaEval responses from LLaMA-2 models finetuned on different datasets. We also report average output length for each dataset (though we trained with max sequence length of 512). NEFT increases average length. (Row 2) Whitespace-tokenized lengths of generations. (Row 3) 2-Gram repetition rates. (Row 4) Log-Diversity measures.</p>Since our primary results are based on the AlpacaEval benchmark, which is scored by a large language model, we also run a small scale human study amongst the authors of this work. For a Preprint</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 5 :</head><label>5</label><figDesc>We use the following meta-prompts to get longer responses: "Generate a long response", "Generate a comprehensive response", and "Generate a long and comprehensive response." Longer responses score better, but do not close the gap with NEFT.</figDesc><table><row><cell>Setting (LLaMA-1)</cell><cell cols="2">GPT-4 Win Rate Avg. Character Length</cell></row><row><cell>Alpaca-7B-NEFT</cell><cell>61.99</cell><cell>1058.46</cell></row><row><cell>Alpaca-7B (Long + Comp)</cell><cell>48.01</cell><cell>620.74</cell></row><row><cell>Alpaca-7B (Long)</cell><cell>44.84</cell><cell>614.21</cell></row><row><cell>Alpaca-7B (Comprehensive)</cell><cell>42.14</cell><cell>494.85</cell></row><row><cell>Alpaca-7B (Min New Tokens)</cell><cell>38.58</cell><cell>1110.97</cell></row><row><cell>Alpaca-7B</cell><cell>32.36</cell><cell>375.22</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 6 :</head><label>6</label><figDesc>Win Rate (and Avg. Character Length) on AlpacaEval as evaluated by ChatGPT for different levels and types of training noise. While length does increase with noise, it is not always indicative of AlpacaEval Win Rate.</figDesc><table><row><cell>Setting</cell><cell>Alpaca</cell><cell>Evol-Instruct</cell><cell>OpenPlatypus</cell></row><row><cell>LLaMA-2-7b</cell><cell cols="3">48.26 (375.22) 62.55 (864.06) 57.20 (1100.98)</cell></row><row><cell>+Uniform Noise 5</cell><cell cols="3">62.55 (1061.89) 67.58 (1403.59) 60.99 (1428.31)</cell></row></table><note><p><p><p><p><p><p><p>+Uniform Noise 10 61.</p>18 (1009.94) 65.59 (1696.88) 60.62 (1833.85)    </p>+Uniform</p>Noise 15 61.86 (819.61) 66.58 (1650Noise 15 61.86 (819.61) 66.58 ( .65) 61.74 (1694.26)   .26)    </p>+Gaussian</p>Noise 5 60.93 (1371Noise 5 60.93 ( .32) 65.09 (2065Noise 5 60.93 ( .75) 59.13 (2060.92)   .92)    </p>subsample of 140 instructions from AlpacaEval, we present annotators with one response generated by a LLaMA-2 model finetuned on Alpaca data with NEFT and another response from a model trained without NEFT, in random order.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 7 :</head><label>7</label><figDesc><ref type="bibr" target="#b35">1)</ref> and datasets (in Section 3.2) used in our experiments including all hyperparameters (in Section A.1). The compute infrastructure used was based on commodity-level CPUs and GPUs running open source software (expect 70B parameter finetuning). -Led the project, contributed to code, ran experiments, developed the method, created majority of plots and written sections. Ping-yeh Chiang* -Developed critical parts of the training code, contributed to the methods development, ran QLORA experiments. Yuxin Wen* -Ran the bulk of experiments, helped develop the method, contributed to writing. AlpacaEval Win Rate versus Text-Davinci-003 for LLaMA-2 trained on different datasets, using GPT-4 as the evaluator, showing an average improvement of 15% across all datasets.</figDesc><table><row><cell>AUTHOR CONTRIBUTIONS</cell></row><row><cell>Neel Jain*</cell></row></table><note><p>John Kirchenbauer -Performed evaluation on OpenLLM Leaderboard tasks, diversity analysis, large contributor to the writing. Hong-Min Chu, Gowthami Somepalli -Ran the experiments for overfitting and embedding analysis and contributed to the writing of these sections. Brian R. Bartoldson, Bhavya Kailkhura -Ran experiments on large model sizes and developed parallel implementation. Avi Schwarzschild, Aniruddha Saha, Micah Goldblum -Contributed to writing. Jonas Geiping, Tom Goldstein -Developed the idea, made large contributions to the writing.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 9 :</head><label>9</label><figDesc>LLaMA-2-Chat (7B) and LLaMA-2 (13B) can be finetuned further to improve performance.</figDesc><table><row><cell></cell><cell cols="4">LLaMA-2 (7B) LLaMA-2-Chat (7B) LLaMA-2 (13B) LLaMA-2 (70B)</cell></row><row><cell>Base</cell><cell>-</cell><cell>71.37*</cell><cell>-</cell><cell></cell></row><row><cell>Evol-Instruct</cell><cell>70.34</cell><cell>74.44</cell><cell>72.61</cell><cell>75.03</cell></row><row><cell>+NEFT</cell><cell>79.60</cell><cell>81.74</cell><cell>82.04</cell><cell>88.81</cell></row><row><cell></cell><cell>(? = 5)</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 10 :</head><label>10</label><figDesc>Table 11, we freeze different parts of the model to understand if certain parts of the model are critical for NEFT. AlpacaEval Win Rate with ChatGPT (GPT-4 in parentheses) evaluator under different decoding strategies from this we can see that there seems to be little variation in performance. The WizardLM and LLaMA-Chat hyperparameters were obtained from generation config files from Hugging Face. All sampling techniques had a repetition penalty of 1.2.</figDesc><table><row><cell>Preprint</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Hyper. Source top p temp. LLaMA2-7B (Evolve) LLaMA2-7B-NEFT (Evolve)</cell></row><row><cell>Base</cell><cell cols="2">greedy</cell><cell>62.55 (70.34)</cell><cell>67.58 (79.60)</cell></row><row><cell>HP 0</cell><cell>0.1</cell><cell>0.1</cell><cell>63.11</cell><cell>66.83</cell></row><row><cell>HP 1</cell><cell>0.35</cell><cell>0.5</cell><cell>62.48</cell><cell>66.71</cell></row><row><cell>WizardLM</cell><cell>0.6</cell><cell>0.9</cell><cell>62.05</cell><cell>66.96</cell></row><row><cell>LLaMA-2</cell><cell>0.9</cell><cell>0.6</cell><cell>63.73 (70.49)</cell><cell>65.47</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 11 :</head><label>11</label><figDesc>AlpacaEval Win Rate according to ChatGPT while varying the set of trainable parameters when finetuning LLaMA-2-7B on the Alpaca dataset. The top two rows have all parameters set as trainable.</figDesc><table><row><cell>Setting</cell><cell>AlpacaEval (ChatGPT Eval)</cell></row><row><cell>standard finetuning</cell><cell>48.26</cell></row><row><cell>NEFT</cell><cell>62.55</cell></row><row><cell>NEFT+Embed frozen</cell><cell>61.06</cell></row><row><cell>NEFT+LM-head frozen</cell><cell>61.12</cell></row><row><cell>NEFT+Attention blocks frozen</cell><cell>22.17</cell></row><row><cell>LLaMA-2 (no finetuning)</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 12 :</head><label>12</label><figDesc>NEFT performs better than FreeLB.</figDesc><table><row><cell></cell><cell>ChatGPT Win Rate</cell></row><row><cell>LLaMA-1-7B (Evolve)</cell><cell>62.30</cell></row><row><cell>+NEFT</cell><cell>67.45</cell></row><row><cell>+FreeLB (after hparam tuning)</cell><cell>63.48</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Table 13 :</head><label>13</label><figDesc>Using ChatGPT as the evaluator, we observe a slight performance increase when training with longer sequences on the ShareGPT data compared to standard finetuning at the same sequence length.</figDesc><table><row><cell cols="3">LLaMA-2 (7B) Split 512 Split 1024</cell></row><row><cell>ShareGPT</cell><cell>63.48</cell><cell>61.68</cell></row><row><cell>+NEFT</cell><cell>64.22</cell><cell>64.35</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head>Table 14 :</head><label>14</label><figDesc>AlpacaEval ChatGPT Win Rate as a function of the number of finetuning epochs.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell cols="6">Epochs LLaMA-2 (7B) Alpaca +NEFT</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell>40.50</cell><cell></cell><cell></cell><cell>55.09</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>3</cell><cell></cell><cell>48.26</cell><cell></cell><cell></cell><cell>62.55</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>5</cell><cell></cell><cell>48.94</cell><cell></cell><cell></cell><cell>62.24</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>7</cell><cell></cell><cell>48.63</cell><cell></cell><cell></cell><cell>60.50</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>9</cell><cell></cell><cell>47.45</cell><cell></cell><cell></cell><cell>58.14</cell><cell></cell><cell></cell></row><row><cell># Embed. flips</cell><cell>110 120 130</cell><cell>2 1</cell><cell>2 3 LLaMA-2</cell><cell>2 5</cell><cell>sequence len. 512 256 128 64 32</cell><cell># Embed. flips</cell><cell>120 130</cell><cell>2 1 LLaMA-2 Alpaca 2 3</cell><cell>2 5</cell><cell>sequence len. 512 256 128 64 32</cell></row><row><cell></cell><cell></cell><cell cols="3">Noise scaling factor</cell><cell></cell><cell></cell><cell></cell><cell>Noise scaling factor</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell># Embed. flips</cell><cell>110 120 130</cell><cell cols="3">2 1 LLaMA-2 Evol-Instruct 2 3 2 5</cell><cell>sequence len. 512 256 128 64 32</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">Noise scaling factor</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Code is available on Github: https://github.com/neelsjain/NEFTune. Correspondence to Neel Jain: &lt;njain17@umd.edu&gt;.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Note that for all models we performed generation with a repetition penalty of 1.2, held constant across all experiments.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>ACKNOWLEDGMENTS</head><p>This work was made possible by the <rs type="funder">ONR MURI program</rs>, the <rs type="institution">Office of Naval Research</rs> (<rs type="grantNumber">N000142112557</rs>), and the <rs type="funder">AFOSR MURI program</rs>. Commercial support was provided by <rs type="funder">Capital One Bank</rs>, the <rs type="funder">Amazon</rs> <rs type="programName">Research Award program</rs>, and <rs type="person">Open Philanthropy</rs>. Further support was provided by the <rs type="funder">National Science Foundation</rs> (<rs type="grantNumber">IIS-2212182</rs>), and by the <rs type="institution">NSF TRAILS Institute</rs> (<rs type="grantNumber">2229885</rs>).</p><p>Furthermore, this work was performed under the auspices of the <rs type="funder">U.S. Department of Energy</rs> by the <rs type="funder">Lawrence Livermore National Laboratory</rs> under Contract No. <rs type="grantNumber">DE-AC52-07NA27344</rs>. <rs type="person">Brian Bartoldson</rs>'s and <rs type="person">Bhavya Kailkhura</rs>'s efforts were supported by the <rs type="programName">LLNL-LDRD Program</rs> under Project No. <rs type="grantNumber">24-ERD-010</rs> (<rs type="grantNumber">LLNL-CONF-855498</rs>). We are also grateful to <rs type="person">Amar Saini</rs> who provided HPC support.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_kGrxUQv">
					<idno type="grant-number">N000142112557</idno>
				</org>
				<org type="funding" xml:id="_fZaBpux">
					<orgName type="program" subtype="full">Research Award program</orgName>
				</org>
				<org type="funding" xml:id="_KqCJ7Z7">
					<idno type="grant-number">IIS-2212182</idno>
				</org>
				<org type="funding" xml:id="_Ew3VcR2">
					<idno type="grant-number">2229885</idno>
				</org>
				<org type="funding" xml:id="_sufDp6U">
					<idno type="grant-number">DE-AC52-07NA27344</idno>
					<orgName type="program" subtype="full">LLNL-LDRD Program</orgName>
				</org>
				<org type="funding" xml:id="_RCrf2KU">
					<idno type="grant-number">24-ERD-010</idno>
				</org>
				<org type="funding" xml:id="_JDChWVN">
					<idno type="grant-number">LLNL-CONF-855498</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Here is a case where both LLaMA-2 models trained on Evolve-Instruct cannot output the correct answer:</p><p>To find the value of f(2), we need to substitute x=2 into the function and simplify it. We have: f(2) = 5(2) 3 -2(2) + 3 = 40 -8 + 3 = 45 Therefore, f(2) = 45.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Language models are few-shot learners</title>
		<author>
			<persName><forename type="first">Tom</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nick</forename><surname>Ryder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Melanie</forename><surname>Subbiah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jared</forename><forename type="middle">D</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prafulla</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arvind</forename><surname>Neelakantan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pranav</forename><surname>Shyam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Girish</forename><surname>Sastry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amanda</forename><surname>Askell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="1877" to="1901" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">Lichang</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shiyang</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jun</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hai</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kalpa</forename><surname>Gunaratna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vikas</forename><surname>Yadav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zheng</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vijay</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianyi</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Heng</forename><surname>Huang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2307.08701</idno>
		<title level="m">Training a better alpaca with fewer data</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Vicuna: An open-source chatbot impressing gpt-4 with 90%* chatgpt quality</title>
		<author>
			<persName><forename type="first">Wei-Lin</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhuohan</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zi</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ying</forename><surname>Sheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhanghao</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hao</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lianmin</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siyuan</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yonghao</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">E</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ion</forename><surname>Stoica</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><forename type="middle">P</forename><surname>Xing</surname></persName>
		</author>
		<ptr target="https://lmsys.org/blog/2023-03-30-vicuna/" />
		<imprint>
			<date type="published" when="2023-03">March 2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Scaling instruction-finetuned language models</title>
		<author>
			<persName><forename type="first">Chung</forename><surname>Hyung Won</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Le</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shayne</forename><surname>Longpre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Barret</forename><surname>Zoph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yi</forename><surname>Tay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Fedus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuezhi</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mostafa</forename><surname>Dehghani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siddhartha</forename><surname>Brahma</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2210.11416</idno>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName><forename type="first">Peter</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Isaac</forename><surname>Cowhey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oren</forename><surname>Etzioni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tushar</forename><surname>Khot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ashish</forename><surname>Sabharwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carissa</forename><surname>Schoenick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oyvind</forename><surname>Tafjord</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1803.05457</idno>
		<title level="m">Think you have solved question answering? try arc, the ai2 reasoning challenge</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName><forename type="first">Tim</forename><surname>Dettmers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Artidoro</forename><surname>Pagnoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ari</forename><surname>Holtzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luke</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName><surname>Qlora</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2305.14314</idno>
		<title level="m">Efficient finetuning of quantized llms</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Alpacafarm: A simulation framework for methods that learn from human feedback</title>
		<author>
			<persName><forename type="first">Yann</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuechen</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rohan</forename><surname>Taori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianyi</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ishaan</forename><surname>Gulrajani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlos</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Percy</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tatsunori B</forename><surname>Hashimoto</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2305.14387</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The algorithmic foundations of differential privacy</title>
		<author>
			<persName><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aaron</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Foundations and Trends? in Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3-4</biblScope>
			<biblScope unit="page" from="211" to="407" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">A framework for few-shot language model evaluation</title>
		<author>
			<persName><forename type="first">Leo</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathan</forename><surname>Tow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stella</forename><surname>Biderman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sid</forename><surname>Black</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anthony</forename><surname>Dipofi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Laurence</forename><surname>Golding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kyle</forename><surname>Mcdonell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Niklas</forename><surname>Muennighoff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Phang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Laria</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anish</forename><surname>Thite</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kevin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andy</forename><surname>Zou</surname></persName>
		</author>
		<idno type="DOI">10.5281/zenodo.5371628</idno>
		<ptr target="https://doi.org/10.5281/zenodo.5371628" />
		<imprint>
			<date type="published" when="2021-09">September 2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Measuring massive multitask language understanding</title>
		<author>
			<persName><forename type="first">Dan</forename><surname>Hendrycks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Collin</forename><surname>Burns</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Basart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andy</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mantas</forename><surname>Mazeika</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dawn</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jacob</forename><surname>Steinhardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">On the reliability of watermarks for large language models</title>
		<author>
			<persName><forename type="first">John</forename><surname>Kirchenbauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonas</forename><surname>Geiping</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuxin</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Manli</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Khalid</forename><surname>Saifullah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kezhi</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kasun</forename><surname>Fernando</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aniruddha</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Micah</forename><surname>Goldblum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Goldstein</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2306.04634</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Robust optimization as data augmentation for large-scale graphs</title>
		<author>
			<persName><forename type="first">Kezhi</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guohao</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mucong</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zuxuan</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chen</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bernard</forename><surname>Ghanem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gavin</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Goldstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE/CVF Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="60" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Platypus: Quick, cheap, and powerful refinement of llms</title>
		<author>
			<persName><forename type="first">Ariel</forename><forename type="middle">N</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cole</forename><forename type="middle">J</forename><surname>Hunter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nataniel</forename><surname>Ruiz</surname></persName>
		</author>
		<idno>arxiv:2308.07317</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">Lisa</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ari</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Holtzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Percy</forename><surname>Fried</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tatsunori</forename><surname>Eisner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luke</forename><surname>Hashimoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mike</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName><surname>Lewis</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2210.15097</idno>
		<title level="m">Contrastive decoding: Open-ended text generation as optimization</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">ROUGE: A package for automatic evaluation of summaries</title>
		<author>
			<persName><forename type="first">Chin-Yew</forename><surname>Lin</surname></persName>
		</author>
		<ptr target="https://www.aclweb.org/anthology/W04-1013" />
	</analytic>
	<monogr>
		<title level="m">Association for Computational Linguistics</title>
		<meeting><address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
			<biblScope unit="page" from="74" to="81" />
		</imprint>
	</monogr>
	<note>Text Summarization Branches Out</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">TruthfulQA: Measuring how models mimic human falsehoods</title>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jacob</forename><surname>Hilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Owain</forename><surname>Evans</surname></persName>
		</author>
		<idno type="DOI">10.18653/v1/2022.acl-long.229</idno>
		<ptr target="https://aclanthology.org/2022.acl-long.229" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 60th Annual Meeting of the Association for Computational Linguistics<address><addrLine>Dublin, Ireland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2022-05">May 2022</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="3214" to="3252" />
		</imprint>
	</monogr>
	<note>Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Text-only training for image captioning using noise-injected clip</title>
		<author>
			<persName><forename type="first">David</forename><surname>Nukrai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ron</forename><surname>Mokady</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amir</forename><surname>Globerson</surname></persName>
		</author>
		<idno>ArXiv, abs/2211.00575</idno>
		<ptr target="https://api.semanticscholar.org/CorpusID" />
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page">253244258</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Introducing chatgpt</title>
		<author>
			<persName><surname>Openai</surname></persName>
		</author>
		<ptr target="https://openai.com/blog/chatgpt" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Training language models to follow instructions with human feedback</title>
		<author>
			<persName><forename type="first">Long</forename><surname>Ouyang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xu</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Diogo</forename><surname>Almeida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carroll</forename><surname>Wainwright</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pamela</forename><surname>Mishkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sandhini</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Katarina</forename><surname>Slama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Ray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in Neural Information Processing Systems</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="27730" to="27744" />
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Bleu: a method for automatic evaluation of machine translation</title>
		<author>
			<persName><forename type="first">Kishore</forename><surname>Papineni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salim</forename><surname>Roukos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Todd</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhu</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 40th annual meeting of the Association for Computational Linguistics</title>
		<meeting>the 40th annual meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="311" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Multitask prompted training enables zero-shot task generalization</title>
		<author>
			<persName><forename type="first">Victor</forename><surname>Sanh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Albert</forename><surname>Webson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Colin</forename><surname>Raffel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Bach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lintang</forename><surname>Sutawika</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zaid</forename><surname>Alyafeai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Antoine</forename><surname>Chaffin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arnaud</forename><surname>Stiegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arun</forename><surname>Raja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Manan</forename><surname>Dey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName><surname>Sharegpt</surname></persName>
		</author>
		<ptr target="https://sharegpt.com/" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName><forename type="first">Rohan</forename><surname>Taori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ishaan</forename><surname>Gulrajani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianyi</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yann</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuechen</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlos</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Percy</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tatsunori</forename><forename type="middle">B</forename><surname>Hashimoto</surname></persName>
		</author>
		<ptr target="https://github.com/tatsu-lab/stanford_alpaca" />
		<title level="m">Stanford alpaca: An instruction-following llama model</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">Hugo</forename><surname>Touvron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thibaut</forename><surname>Lavril</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gautier</forename><surname>Izacard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xavier</forename><surname>Martinet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marie-Anne</forename><surname>Lachaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timoth?e</forename><surname>Lacroix</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Baptiste</forename><surname>Rozi?re</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Naman</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Hambro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Faisal</forename><surname>Azhar</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2302.13971</idno>
		<title level="m">Open and efficient foundation language models</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Llama 2: Open foundation and fine-tuned chat models</title>
		<author>
			<persName><forename type="first">Hugo</forename><surname>Touvron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Louis</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kevin</forename><surname>Stone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amjad</forename><surname>Almahairi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yasmine</forename><surname>Babaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nikolay</forename><surname>Bashlykov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Soumya</forename><surname>Batra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prajjwal</forename><surname>Bhargava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shruti</forename><surname>Bhosale</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2307.09288</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Self-instruct: Aligning language model with self generated instructions</title>
		<author>
			<persName><forename type="first">Yizhong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yeganeh</forename><surname>Kordi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Swaroop</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alisa</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Noah</forename><forename type="middle">A</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Khashabi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hannaneh</forename><surname>Hajishirzi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2212.10560</idno>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Finetuned language models are zero-shot learners</title>
		<author>
			<persName><forename type="first">Jason</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maarten</forename><surname>Bosma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vincent</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kelvin</forename><surname>Guu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adams</forename><forename type="middle">Wei</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Lester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nan</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">M</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Quoc V</forename><surname>Le</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">Can</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qingfeng</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiubo</forename><surname>Geng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pu</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiazhan</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chongyang</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daxin</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><surname>Wizardlm</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2304.12244</idno>
		<title level="m">Empowering large language models to follow complex instructions</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Zeroprompt: Scaling prompt-based pretraining to 1,000 tasks improves zero-shot generalization</title>
		<author>
			<persName><forename type="first">Hanwei</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yujun</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yulun</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nan</forename><surname>Shao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wang</forename><surname>Yanggang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haiyu</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhilin</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Findings of the Association for Computational Linguistics: EMNLP 2022</title>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="4235" to="4252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">HellaSwag: Can a machine really finish your sentence?</title>
		<author>
			<persName><forename type="first">Rowan</forename><surname>Zellers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ari</forename><surname>Holtzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yonatan</forename><surname>Bisk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ali</forename><surname>Farhadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yejin</forename><surname>Choi</surname></persName>
		</author>
		<idno type="DOI">10.18653/v1/P19-1472</idno>
		<ptr target="https://aclanthology.org/P19-1472" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 57th Annual Meeting of the Association for Computational Linguistics<address><addrLine>Florence, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2019-07">July 2019</date>
			<biblScope unit="page" from="4791" to="4800" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Opt: Open pre-trained transformer language models</title>
		<author>
			<persName><forename type="first">Susan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Roller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Naman</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mikel</forename><surname>Artetxe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Moya</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shuohui</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Dewan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mona</forename><surname>Diab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xian</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xi</forename><surname>Victoria Lin</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2205.01068</idno>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Freelb: Enhanced adversarial training for natural language understanding</title>
		<author>
			<persName><forename type="first">Chen</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yu</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhe</forename><surname>Gan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siqi</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jingjing</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">mental illness can be difficult to treat, especially in the late 19th century when medical knowledge was limited. Despite his success, it&apos;s unlikely that Van Gogh&apos;s struggles with depression and anxiety would have disappeared. In fact, they may have intensified due to the added pressure and expectations placed upon him by society and his peers</title>
		<author>
			<persName><surname>Unfortunately</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">whether or not Van Gogh became a successful artist during his lifetime wouldn&apos;t necessarily change the impact he made on modern art history. His work has endured through countless exhibitions, books, films, and reproductions, cementing his legacy as one of the most influential painters of all time. AlpacaEval (1st) Instruction: What are the names of some famous actors that</title>
		<author>
			<persName><surname>Ultimately</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">70</biblScope>
		</imprint>
	</monogr>
	<note>started their careers on Broadway? LLaMA-2-Evolve</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">Richard Gere 10</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Al Pacino -He made his stage debut in 1967&apos;s &quot;Does a Tiger Wear a Necktie?</title>
	</analytic>
	<monogr>
		<title level="m">&quot; and went on to star in several other Broadway productions, including &quot;The Indian Wants the Bronx&quot;&quot; (1968), &quot;The Resistible Rise of Arturo Ui&quot; (1969) and &quot;Serpico</title>
		<imprint>
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<author>
			<persName><forename type="first">Meryl</forename><surname>Streep</surname></persName>
		</author>
		<author>
			<persName><forename type="first">-</forename></persName>
		</author>
		<title level="m">She began her career on Broadway in 1975 with the play &quot;Julia,&quot; followed by roles in &quot;Lost in Yonkers&quot; (1991), &quot;A Little Night Music&quot; (2009) and &quot;Three Tall Women</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">James Earl Jones -The actor first appeared on Broadway in 1957&apos;s &quot;The Long Dream,&quot; going on to star in numerous plays and musicals throughout his career, including &quot;Of Mice and Men</title>
		<imprint>
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
	<note>(1974), &quot;Fences&quot; (1987) and &quot;Driving Miss Daisy&quot;</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">He made his Broadway debut in 1985&apos;s &quot;A Funny Thing Happened on the Way to the Forum</title>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Lane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">-</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Other notable shows include &quot;The Producers&quot;&quot; (2001), &quot;The Nance&quot; (2013) and &quot;Angels in America</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note>winning a Tony Award for his performance</note>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">The singer-actress got her start on Broadway in 1965&apos;s &quot;Fiddler on the Roof,&quot; later earning critical acclaim for her performances in &quot;Forbidden Planet</title>
		<author>
			<persName><forename type="first">Bette</forename><surname>Midler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">-</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Golden Age&quot; (2005) and &quot;I&apos;ll Eat You Last: A Chat With Sue Mengers</title>
		<imprint>
			<date type="published" when="1989">1989. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
