<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Leakage-Resilient Mode of Operation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Krzysztof</forename><surname>Pietrzak</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CWI Amsterdam</orgName>
								<address>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Leakage-Resilient Mode of Operation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">6E15D52F79330878BCF17F463BADB4C6</idno>
					<idno type="DOI">10.1007/978-3-642-01001-9_35</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A weak pseudorandom function (wPRF) is a cryptographic primitive similar to -but weaker than -a pseudorandom function: for wPRFs one only requires that the output is pseudorandom when queried on random inputs. We show that unlike "normal" PRFs, wPRFs are seedincompressible, in the sense that the output of a wPRF is pseudorandom even if a bounded amount of information about the key is leaked.</p><p>As an application of this result we construct a simple mode of operation which -when instantiated with any wPRF -gives a leakage-resilient stream-cipher. The implementation of such a cipher is secure against every side-channel attack, as long as the amount of information leaked per round is bounded, but overall can be arbitrary large. The construction is simpler than the previous one (Dziembowski-Pietrzak FOCS'08) as it only uses a single primitive (a wPRF) in a straight forward manner.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Traditionally, cryptographic algorithms are designed to withstand adversaries that can attack the cryptosystem in a black-box fashion. This means that all the adversary can do is to query the system at hand according to the security definition. In many settings this is not a realistic assumption, as real-world adversaries attack concrete implementations of cryptosystems, that possibly leak information which cannot be efficiently computed from black-box access alone. Attacks exploiting such leakage are called side-channel attacks. In the last two decades we saw many cryptanalytic attacks exploiting side-channels as runningtime <ref type="bibr" target="#b31">[31]</ref>, electromagnetic radiation <ref type="bibr" target="#b40">[39,</ref><ref type="bibr" target="#b18">19]</ref>, power consumption <ref type="bibr" target="#b33">[33]</ref> and fault detection <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b2">3]</ref>. A recent example <ref type="bibr" target="#b17">[18]</ref> is the side-channel attack against KeeLoq (which refers to the "KeeLoq block-cipher" and some particular mode in which this cipher is used), which is widely used as e.g. anti-theft mechanisms for cars. Although the KeeLoq block-cipher seems not to be very secure to start with <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b26">27]</ref>, the devastating side-channel attack of <ref type="bibr" target="#b17">[18]</ref> exploits a weakness in the mode in which the cipher is used, rather than a weakness in the cipher itself, and it would still be applicable even if the KeeLoq block-cipher was replaced with a strong block-cipher, say AES ( <ref type="bibr" target="#b17">[18]</ref> Talk of Christof Paar). It is thus an intriguing question whether there exist modes of operation which are provably secure against a wide class of side-channel attacks if instantiated with any block-cipher.</p><p>In this paper we answer this question affirmatively, by proposing a mode of operation (cf. Figure <ref type="figure" target="#fig_0">1</ref>) which turns any weak PRF into a stream-cipher which is provably secure against all side-channel attacks, assuming only that the amount of leakage in each round is bounded, and that only memory which is actually accessed in some round leaks in this round. Such a "leakage-resilient" cipher was recently constructed in <ref type="bibr" target="#b16">[17]</ref>, the main advantage of our new construction is its simplicity, it can be instantiated with any weak PRF (e.g. with a block-cipher like AES), whereas the construction from <ref type="bibr" target="#b16">[17]</ref> additionally required extractors.</p><p>The simplicity of the construction (as compared to <ref type="bibr" target="#b16">[17]</ref>) comes at the price of more involved security proof. Besides the technical tools we already used in <ref type="bibr" target="#b16">[17]</ref>, we will need new results concerning the security of weak PRFs when neither the key nor the inputs are uniform. The technique we use to prove this results can also be applied in other settings, e.g. for encryption schemes, and thus could be of independent interest. Why Leakage-Resilience. Leakage-resilience is an extremely strong security notion considering adversaries who can choose arbitrary leakage functions. To practitioners this may seem like an overkill, after all, why consider unrealistic side-channels which leak some very involved function of the state instead of using some ad-hoc countermeasures against "real" side-channels? A lesson cryptographers have learned in the last decades is that ad-hoc arguments usually result in insecure systems, and this very much applies to the young history of side-channel cryptanalysis. Implementing cryptographic algorithms in a straight forward way, will almost certainly make them very susceptible to side-channel attacks. Often -like in differential power analysis <ref type="bibr" target="#b33">[33,</ref><ref type="bibr" target="#b7">8]</ref> -such attacks extract a little bit of information in each evaluation, and then combine this information to get the secret key. Thus it is crucial that an implementation does not leak even small amounts of (useful) information. In contrast, "leakage-resilient" algorithms as considered in this work guarantee security even if in each invocation a bounded amount of arbitrary information is leaked.</p><p>We advocate the following approach to side-channel security: first cryptographers design a leakage-resilient algorithm C, with the guarantee that whenever you implement C such that in each invocation ≤ λ bits of information leak, the implementation is safe. This still leaves the task of implementing C such that the ≤ λ leakage bound is met. <ref type="foot" target="#foot_0">1</ref> The rationale here is that this task is clearly much more realistic than having to implement an algorithm in way where nothing leaks at all, as it would be necessary if the algorithm would come with no bound on the leakage that can be tolerated. (cf. <ref type="bibr">Kocher [32]</ref> for a similar argument). It is only at this stage that one should consider using ad-hoc measures like masking or blinding, using special circuit designs, and so on. Cryptography seems to be of limited use at this stage, but a background on existing attacks and implementation details is helpful here, thus this task is something that should be left to security researchers and engineers. Some Related Work. Most papers on side-channel security -like <ref type="bibr" target="#b31">[31,</ref><ref type="bibr" target="#b40">39,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b33">33,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b2">3]</ref> mentioned in the introduction -consider attacks and/or countermeasures against a specific side-channel. From the papers considering general models for side-channel attacks, the work of Micali and Reyzin <ref type="bibr" target="#b35">[35]</ref> on "physically observable cryptography" is particularly insightful and written in a language accessible to cryptographers. Their model is based on five "axioms", some of which are (more or less explicitly) used in our model.</p><p>Ishai et al. <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b27">28]</ref> consider a model where the adversary can choose some wires in the circuit, and then learns the values carried by those wires during the computation. What makes their work exceptional is that they were the first to prove how to implement any algorithm secure against an interesting sidechannel (i.e. probing attacks). 2 The field of exposure-resilient cryptography <ref type="bibr" target="#b10">[11]</ref> considers the more restricting case where the adversary could learn some of the input bits.</p><p>Very recently <ref type="bibr" target="#b0">[1]</ref> showed that some particular public-key encryption schemes are surprisingly robust against leakage: the scheme stays secure even if the minentropy of the key is just a constant fraction of the min-entropy of a random key. We prove a similar result for any weak PRFs, but in order prove security even for keys with such low min-entropy, we need the weak PRF to be exponentially hard, whereas <ref type="bibr" target="#b0">[1]</ref> can do so with some particular superpolynomial assumptions (learning with error and lattice assumptions).</p><p>Papers that consider constructions of stream-ciphers which withstand sidechannel attacks (as in this work and <ref type="bibr" target="#b16">[17]</ref>) include <ref type="bibr" target="#b32">[32,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b36">36]</ref>. Kocher <ref type="bibr" target="#b32">[32]</ref> considers a very simple construction where one simply iterates a hash function (SHA256 is suggested). This work is kept informal, with no proofs or even formal claims, but contains several interesting conceptual ideas. Micali and Reyzin <ref type="bibr" target="#b35">[35]</ref> investigate reductions of side-channel resistant primitives, in particular they show that the Blum-Micali construction is secure, assuming the implementation of the underlying permutation already satisfies some strong form of side-channel security. The work which aims at a goal most similar to ours is Petit et al. <ref type="bibr" target="#b36">[36]</ref>. They propose and analyze a block-cipher based construction, where security against sides-channels is achieved by making it hard to "combine" leakages from different rounds. 3 Their underlying model <ref type="bibr" target="#b42">[41]</ref> is motivated by practical considerations, considering leakage-functions and attacks that have been successfully used to break systems. Compared to <ref type="bibr" target="#b36">[36]</ref>, we take a much more theoretical approach, our setting is more general and the underlying assumptions are weaker 2 Formally, Ishai et al. do the following: let t ≥ 0 be some constant and let [X] denote a (t + 1) out of (t + 1) secret sharing of the value X. They construct a general compiler, which turns every circuit G(.) into a circuit Gt(.) (of size</p><formula xml:id="formula_0">t 2 |G|) such that [G(X)] = Gt([X]</formula><p>) for all inputs X, and moreover one does not learn any information on G(X) even when given the value carried by any t wires in the circuit Gt(.) while evaluating the input [X]. This transformation uses multiparty-computation, which is quite different from all other approaches we discuss here. 3 By using a forward secure primitive, one can ensure that past keys cannot be combined with the current key, as they cannot even be computed. For future keys, this is more tricky, as the cipher itself must be able to efficiently derive that keys.</p><p>in several aspects. <ref type="foot" target="#foot_1">4</ref> The tools and techniques from <ref type="bibr" target="#b16">[17]</ref> and this paper cannot be used to prove security of the constructions from <ref type="bibr" target="#b32">[32,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b36">36]</ref> (or any other construction we are aware of), as those constructions are insecure against arbitrary leakage functions as considered in this work, even if the underlying primitives are ideal (e.g. Random oracles in <ref type="bibr" target="#b32">[32]</ref> or ideal ciphers in <ref type="bibr" target="#b36">[36]</ref>) and only one bit of information leaks per invocation of the underlying primitive. (but this does by no means mean that they are insecure against side-channels that arise in practice.) <ref type="foot" target="#foot_2">5</ref>Some interesting recent results in settings which are similar or otherwise relevant to general models of side-channel security include <ref type="bibr" target="#b4">[5]</ref>, who show how to securely realize protocols when perfect deletion is not possible. Goldwasser et al. <ref type="bibr" target="#b21">[22]</ref> construct "one-time programs" from simple hardware satisfying some weak form of side-channel security. Dodis and Wichs <ref type="bibr" target="#b11">[12]</ref> solve the long standing open problem of two round authenticated key-agreement from non-uniform keys. (See the full version <ref type="bibr" target="#b37">[37]</ref> for a more detailed discussion on those papers.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Leakage-Resilient Cryptography</head><p>In this section we informally introduce and motivate the model of "leakageresilient cryptography" from <ref type="bibr" target="#b16">[17]</ref>.</p><p>Consider some keyed cryptographic primitive CP. The most general sidechannel attack against CP(S 0 ) -where S 0 denotes the secret initial state -is to allow an attacker to choose any leakage function f , which then is evaluated on the initial state S 0 , and the adversary receives f (S 0 ). <ref type="foot" target="#foot_3">6</ref> Clearly we cannot hope for any security at all here, as f could simply output the complete state f (S 0 ) = S 0 . Thus, it is necessary to somehow restrict the range of the leakage function, we will consider functions with range {0, 1} λ , where λ |S 0 | is some parameter. The idea to define the set of leakage functions by restricting the output length was inspired by the bounded-retrieval model <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b15">16]</ref>, which in turn was inspired by the bounded-storage model <ref type="bibr" target="#b34">[34,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b43">42]</ref>.</p><p>As the implementation of any cryptosystem will leak more information the longer it runs, we want to allow the attacker A to adaptively choose different leakage functions during the lifetime of the system. For this, we assume that CP runs in rounds (where a "round" is just some well defined part of the computation), and denote with S i the state of CP after round i (to simplify the exposition we assume that the size of the state remains constant).</p><p>The attacker A we consider can adaptively choose a leakage function f i before the ith round, and after round i receives f i (S i-1 ), i.e. the leakage function evaluated on the state at the beginning of round i. Unfortunately also here no security is possible beyond round t, where t • λ ≥ |S 0 |, as A can simply define the f i 's such that f i (S i-1 ) will be some λ bits of S t . (note that for i ≤ t, f i can compute the future state S t from its input S i-1 .) After round t the attacker A has learned the entire state S t , and no security is possible beyond this point.</p><p>Thus if we want security even after (much) more than |S 0 | bits have leaked, we need to further restrict the leakage functions. The restriction we use is one of the "axioms" from <ref type="bibr" target="#b35">[35]</ref>, and states that "only computation leaks information". This means that f i does not get the entire state S i-1 as input, but only the part of the state that is actually accessed by CP in the ith round.</p><p>On Efficient Leakage Functions. As we consider a computational primitive, and the total leakage can be larger than the entire state, we can only allow efficient leakage functions. 7 This is not explicitly stated, but naturally comes up in the model, where the main result (Theorem 2) puts an upper bound on the size of a circuit computing the entire random experiment in which the cipher is attacked.</p><p>On (non)-Uniformity. Throughout, we always consider non-uniform adversaries. 8 In particular, our main reduction is non-uniform, which means we prove that if an adversary exists who breaks the stream-cipher, then an adversary (of related complexity) exists who breaks the underlying weak PRF. The only step in the proof where we need non-uniformity is a lemma from <ref type="bibr" target="#b1">[2]</ref> which relates two types of pseudoentropy notions. As <ref type="bibr" target="#b1">[2]</ref> also prove this lemma in a uniform setting (albeit which much worse parameters), it should be possible (though we didn't check the details) to make our reduction uniform, that is to show how to efficiently construct an adversary against the weak PRF from any adversary against the stream-cipher. (we refer to Goldreich's article <ref type="bibr" target="#b19">[20]</ref> as to why such a reduction is desirable.) 7 A computationally unbounded leakage function could simply compute and output the initial state from the output of the stream cipher. If one assumes that the total leakage is smaller than the key <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b11">12]</ref>, considering computationally unbounded leakage functions is meaningful. 8 Recall that a uniform adversary can be modelled as a Turing-machine which as input gets a security parameter, whereas (more powerful) non-uniform adversaries will, for each security parameter, additionally get a different polynomial-length advice string. Equivalently, we can model non-uniform adversaries as a sequence of circuits (indexed by the security parameter), which is what we will do.</p><p>Relaxing Bounded Leakage. As described above, in each round we allow the adversary to choose any function f with range {0, 1} λ , and she then learns the leakage f (S), where S is the state accessed in this round. Note that this also captures any efficient leakage function g, where there exists another (efficient) leakage function f with range {0, 1} λ such that S → f (S) → g(S) is a Markov chain and where one can efficiently sample g(S) given f (S) (as an adversary in our model can ask for f (S), and then compute g(S) himself). This e.g. covers the case where the leakage function outputs a noisy version of S.</p><p>We chose to work with bounded leakage as it is a very clean and intuitive model, but for the proof we actually only require that f (S) does not contain more than λ bits of "useful" information on S. Formally, "useful" means that the HILL-pseudoentropy (a notion to be defined in Section 4) of S does not drop by much more than λ bits given f (S). Unfortunately this most general notion is quite unintuitive to work with.<ref type="foot" target="#foot_4">9</ref> </p><p>Relaxing the "only computation leaks information" Axiom. The leakage function in round i gets as input only that part of the state which is accessed in that round. This translates to the requirement on the implementation that memory which is not accessed, must not leak at all. In our model and for our particular construction (and also <ref type="bibr" target="#b16">[17]</ref>) allowing the adversary to choose a single leakage function f with λ bits output, and then giving her the leakage f (S + ) (where with S + we denote the part of the state which is accessed and S -denotes the remaining state) is equivalent to let her choose two function f and f with λ/2 bits output respectively, and then output the leakage f (S + ) and f (S -). Thus it is o.k. if the entire state leaks as long the leakage of S + and S -is independent. In particular, we also get security against attacks which seem not to obey the "only computation leaks information" axiom, like the cold boot attack from <ref type="bibr" target="#b22">[23]</ref> (see also <ref type="bibr" target="#b0">[1]</ref>), who show how measure significant parts of a key that was stored on some memory, even after power is turned off.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Seed Incompressibility</head><p>As main new technical tools we prove bounds on the security of weak PRFs when the key (or the inputs) are not uniformly random as assumed in the security definition for weak PRFs.</p><p>Recall that the standard security notion for a pseudorandom function (PRF) F : {0, 1} κ × {0, 1} n → {0, 1} m requires that for a random key k ∈ {0, 1} κ no efficient attacker can distinguish F(k, .) from a uniformly random function. Motivated by the question if random-oracles can (in some settings) be instantiated with efficient functions, Halevi et al. <ref type="bibr" target="#b23">[24]</ref> investigate the question whether "seed-incompressible" functions exist. They consider a setting where an adversary initially gets a "compressed key" f (k) (where f : {0, 1} κ → {0, 1} λ and λ &lt; κ). A simple observation is that by giving this extra input to an adversary, no function F(k, .) can possibly be a PRF, as f (k) could e.g. encode the first λ bits of F(k, X) (for some fixed X), and thus F(k, .) becomes easily distinguishable from random.</p><p>In this paper we revisit the concept of seed incompressibility, but for weak pseudorandom functions (wPRF): F is a wPRF, if F(k, .) cannot be distinguished from random, if queried on random inputs. Thus an adversary gets to see X 1 , . . . , X q and Z 1 , . . . , Z q , and then must guess whether</p><formula xml:id="formula_1">Z i = F(k, X i ) or Z i = R(X i )</formula><p>where R is a uniformly random function. Unlike for normal PRFs, for wPRFs it is not clear if and how a compressed seed f (k) helps the distinguisher, e.g. now simply setting f (k) to denote the λ first bits of F(k, X) for some fixed input X will not trivially break the security of F(k, .) as here the adversary cannot choose the inputs X for which she gets to see F(k, X).</p><p>Of course by leaking λ bits of the key, we must tolerate some security loss. In particular, if we use the trivial attack just described (leaking λ bits of F(k, X)), the adversary can get "lucky", and one of the q queries X 1 , . . . , X q will hit the fixed input X. Because of that, the adversary has some extra advantage of roughly q/2 n (compared to an adversary not getting f (k)). Further, if we assume that the best attack against F is brute-force search over the keyspace, then leaking λ bits of the key will degrade the security by a factor of 2 λ . As we prove in Lemma 2, it doesn't get much worse than that: if F(k, .) cannot be distinguished with advantage more than , then the advantage (against somewhat smaller adversaries) is still bounded by roughly 2 λ ( + q 2 /2 n+1 ) (here we set t from Lemma 2 to n, and assume that n is large enough so that the last term in (3) can be ignored.)</p><p>We actually do not consider the setting where the key k is random, and then f (k), |f (k)| = λ is leaked, but the more general case where k is sampled from some distribution with min-entropy at least |k|λ. (and we need this more general case later when proving the security of the leakage-resilient streamcipher), as for any function f and uniformly random k, k has still (expected) min-entropy at least |k|λ given f (k).</p><p>We then prove a similar result (Lemma 3) concerning the security of wPRFs assuming the inputs (as opposed to the key) are not uniformly random.</p><p>Proof Sketch. We show that any wPRF is secure even when the secret key is only sampled from some distribution with min-entropy |k|λ by a (uniform) reduction. Assume an adversary A can distinguish F(k, .) from a random function (when queried on random inputs X 1 , . . . , X q ) with advantage . Using the Markov bound one can show that this implies that a key k sampled from the above distribution is "weak" with probability at least /2, where a key k is said to be weak, if the distinguishing advantage of A, conditioned on the key being k, is at least /2. If k is now sampled from the uniform distribution (and not a distribution with min-entropy |k|λ), then k will be weak with probability at least /2 λ+1 , i.e. we loose at most a factor 2 λ . The crucial point is that when observing the output of a function g(.) on sufficiently many random inputs, then (using the Hoeffiding bound) one can almost certainly distinguish the cases where g(.) is f (k, .) for a weak k and the case where g(.) is a random oracle, as by definition of a weak key, the probability of A outputting 1 differs by at least /2 for both cases. Thus we can define an adversary which does the above sampling and outputs 0 and 1 respectively in the two above cases. As outlined, this adversary has a distinguishing advantage of at least /2 λ+1 . 10 In the above argument it is important that in the case where g(.) is a random oracle, we can sample many independent guess bits of A. This is not possible when considering "normal" PRFs, as then the adversary A can simply query g(.) on some fixed inputs, and her guess bits will be completely dependent. This is the point in the proof where we exploit the fact that we consider weak PRFs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Applications and Reductions</head><p>The unpredictability and indistinguishability based notions used in this paper are the strongest possible considering general leakage-functions, and a stream cipher satisfying them is sufficient to realize important primitives like stateful leakage-resilient symmetric authentication and encryption. 11  It would be very interesting to construct a leakage-resilient pseudorandom function, as then we could implement those symmetric primitives in a stateless way. Let us mention here that cryptographic reductions, like the GGM construction of PRFs form PRGs <ref type="bibr" target="#b20">[21]</ref>, will in general not preserve leakage-resilience.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4">Notation</head><p>For a set X , we denote with X * ← X that X is assigned a value sampled uniformly at random from X . To save on notation, we write X i to denote a sequence X 1 , . . . , X i . R n,m denotes a uniformly random function {0, 1} n → {0, 1} m , R n denotes R n,n .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Leakage-Resilient Stream-Cipher from a Weak PRF</head><p>Figure <ref type="figure" target="#fig_0">1</ref> illustrates the mode of operation for which we prove that it gives a leakage-resilient stream cipher if instantiated with any weak PRF. Below we first 10 The expression (3) in Lemma 2 is a bit more complicated than that. The last term in (3) is the error from the Hoeffding bound, and the second to last term is due to the fact that the sampled outputs are not completely independent as required by the Hoeffding bound. 11 For authentication it is sufficient that the secret Xi used is unpredictable, thus here we can allow the adversary to observe the leakage in the round where Xi is computed. For semantically secure encryption, e.g. when using a one-time pad C = M ⊕ Xi, we need Xi to be indistinguishable, thus here the adversary cannot get the leakage in round i, but can so for all other rounds j &lt; i (and, as we have forward security, also j &gt; i). define this construction, and state a Theorem which bounds the security of S F as a normal stream-cipher. We then define what a leakage-resilient stream-cipher is. Then we state our main theorem (Theorem 2) which bounds the security of S F as a leakage-resilient stream-cipher in terms of the security of F as a weak PRF.</p><p>The Construction: Let F : {0, 1} κ × {0, 1} n → {0, 1} κ+n be a function. Then, with S F we denote the following simple construction of a stream cipher.</p><formula xml:id="formula_2">Initialization: The initial state is S 0 = [K 0 , K 1 , X 0 ], where K 0 , K 1 * ← {0, 1} κ and X 0 * ← {0, 1} n . Only K 0 , K 1 must be secret, X 0 can be public. State: The state before the ith round is S i-1 = [K i-1 , K i , X i-1 ]. Computation: In the ith round, S F (S i-1 ) computes (K i+1 , X i ) := F(K i-1 , X i-1 )</formula><p>and outputs X i . Then the state</p><formula xml:id="formula_3">S i-1 = [K i-1 , K i , X i-1 ] is replaced with S i = [K i , K i+1 , X i ] (note that K i is not accessed in the ith round).</formula><p>Security of S without Side-Channels: Theorem 1 below states that the output of S F is pseudorandom (i.e. is a secure stream-cipher in the "classical" sense) if F is a secure weak pseudorandom function. The proof of this theorem is a straight forward hybrid argument and for space reasons only give in the full version of this paper <ref type="bibr" target="#b37">[37]</ref>. The security of S F is stated in terms of the security of F as a weak pseudorandom function (wPRF), which is defined like a normal PRF except that the inputs are random and not adversarially chosen. Definition 1 (wPRF). F : {0, 1} κ ×{0, 1} n → {0, 1} m is a weak ( prf , s prf , q prf )secure pseudorandom function (wPRF) if for all A of size s prf and for random variables K * ← {0, 1} κ and for i = 1, . . . , q prf</p><formula xml:id="formula_4">X i * ← {0, 1} m Y i = F(K, X i ) R i = R n,m (X i ) we have Pr[A(X q prf , Y q prf ) = 1] -Pr[A(X q prf , R q prf ) = 1] ≤ prf</formula><p>Theorem 1 (Security without Leakage). If F is a ( prf , s prf , 1) secure wPRF, then for any ∈ N, no adversary of size s prf -• |F| can distinguish the first + 1 blocks as output by S F from uniformly random with advantage more than • prf .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Side-Channel Adversary:</head><p>As outlined in Section 1.1, we consider an adversary A who can attack S F by choosing any function f i : {0, 1} κ → {0, 1} λ before round i, and at the end of the round receives the normal output X i of S F and also the leakage</p><formula xml:id="formula_5">Λ i def = f i (K i-1</formula><p>). In round i, S F (S i-1 ) only access K i-1 and X i-1 , thus giving K i-1 as input to f i means that f i can use the entire state that S F accesses in round i. Note that we don't have to explicitly give X i-1 as input to f i , as A must only decide on f i after she got X i-1 and thus can hard-code it into f i . We denote with A λ the set of adversaries as just described restricted to choose leakage functions with range {0, 1} λ .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Leakage-Resilient Security Notion:</head><p>Let view denote the view of the adversary after X has been computed, i.e. view = [X 0 , . . . , X , Λ 1 , . . . , Λ ].</p><p>With view -= view \ X we denote view but without the last output X . The security notion we consider requires that X +1 is indistinguishable from random, even when given view (which will imply that it is unpredictable given view - +1 ). We denote with S(S 0 )</p><p>A the random experiment where an adversary A ∈ A λ attacks S (initialized with S 0 = [K 0 , K 1 , X 0 ]) for rounds (cf. </p><formula xml:id="formula_6">p rand def = Pr S0 [D(view(S(S 0 ) -1 A), U n ) = 1] p real def = Pr S0 [D(view(S(S 0 ) -1 A), X ) = 1]</formula><p>Security of S against Side-Channel Attacks: The security of S F will depend on the security of F as a weak pseudorandom function. Recall that the complexity a non-uniform adversary is captured by the size of a circuit describing it. For a circuit D, we let size(D) denote its size. We will also write size(S -1 A) to denote the size of a circuit needed to implement the entire random experiment S -1 A, as illustrated in Figure <ref type="figure" target="#fig_0">1</ref>, where eval denotes a circuit which on input the description of a function f : {0, 1} κ → {0, 1} λ and K ∈ {0, 1} κ computes and outputs f (K). </p><p>On λ: Note that the amount of leakage λ = log( -1 prf )/6 we tolerate depends on the hardness of the underlying wPRF. Thus if F is secure against adversaries of super-polynomial size, i.e. prf = 2 ω(log κ) , then the amount of leakage is at least super-logarithmic λ = ω(log κ). This already covers many practical attacks like Hamming weight attacks (see e.g. <ref type="bibr" target="#b30">[30]</ref>).</p><p>If F is exponentially hard, i.e. prf = 2 -Ω(κ) , then λ = Ω(κ), and thus we can even leak a constant fraction of the internal state in each round.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Security loss:</head><p>The security loss in the theorem is significant: the 12th root of prf comes up in the distinguishing advantage. In the full version <ref type="bibr" target="#b37">[37]</ref> we discuss several approaches which potentially can be used to prove a much better bound.</p><p>Unpredictability: Theorem 2 states that when given the view of an adversary A who attacked S for -1 rounds, the next value X to be computed is indistinguishable from random. If the adversary is also given Λ = f (K -1 ) (i.e. the leakage computed in round ), X cannot be pseudorandom any more, as Λ could e.g. be the λ first bits of X . In the case where Λ is also leaked, one can still prove (using Lemma 4) that X is unpredictable: for any δ &gt; 0, with probability 1δ the random variable X has nλlog(δ -1 ) bits of "HILL-pseudoentropy" (a notion to be defined in Section 4).</p><p>Forward Security: Like the construction from <ref type="bibr" target="#b16">[17]</ref>, also S F is forward secure: Theorem 2 holds even for a stronger security notion than AdvInd, where the distinguisher D is additionally given entire state of S F after round + 1.</p><p>Instantiation with a block-cipher: Our construction requires a wPRF F : {0, 1} κ × {0, 1} n → {0, 1} κ+n . Such an F can be constructed from any secure block-cipher BC : {0, 1} κ ×{0, 1} n → {0, 1} n like AES. (AES comes with different security parameters κ = n = 128 and κ = n = 256). For this we have to do some range expansion, e.g. by setting ( denotes concatenation)</p><formula xml:id="formula_8">F(K, X) = BC(K, X 0)) BC(K, X 1).<label>(2)</label></formula><p>Here F : {0, 1} κ × {0, 1} n-1 → {0, 1} 2n is a secure PRF (and thus wPRF) assuming that BC : {0, 1} κ × {0, 1} n → {0, 1} n is a pseudorandom permutation, which is the standard security notion for block-ciphers. <ref type="foot" target="#foot_5">12</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">wPRF with Non-uniform Keys and Inputs</head><p>We will need the following classical technical lemma several times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 1 (Hoeffding's inequality [26]</head><p>). Let X 1 , . . . , X t be independent random variables where for</p><formula xml:id="formula_9">1 ≤ i ≤ t : Pr(X i ∈ [a i , b i ]) = 1.</formula><p>Then, for the sum of these variables X = X 1 + • • • + X t we have the inequality:</p><formula xml:id="formula_10">Pr[X -E[X] ≥ t ] ≤ exp - 2 t 2 2 t i=1 (b i -a i ) 2</formula><p>Recall that a random variable Z has min-entropy k, denoted</p><formula xml:id="formula_11">H ∞ (Z) = k if for all z in the range of Z we have Pr[Z = z] ≤ 2 -k .</formula><p>Definition 2 (wPRF with non-uniform keys and inputs). We call a function F : {0, 1} κ × {0, 1} n → {0, 1} m a ( prf , s prf , q prf )-secure wPRF with α-low keys, if it's a wPRF as in Definition 1, whenever the key K comes from any distribution with min-entropy κα (and not uniformly random). Similarly, we say F is a ( prf , s prf , q prf )-secure wPRF with β-low inputs, if it's a wPRF as in Definition 1, except that the inputs X i come from any distribution with min-entropy mβ.</p><p>Non-uniform Keys. By the following lemma, every wPRF (using uniform keys) is a wPRF for α-low keys. The loss in security is roughly 2 α+1 , which is almost optimal. Lemma 2. For any α &gt; 0 and t ∈ N: If F : {0, 1} κ × {0, 1} n → {0, 1} m is a ( prf , s prf , q prf )-secure wPRF (for uniform keys), then it is a ( prf , s prf , q prf )-secure wPRF with α-low keys if the following holds 13</p><formula xml:id="formula_12">q prf ≥ q prf • t prf ≤ prf /2 α+1 - q 2 prf 2 n+1 -2 • exp - t 2 • 2 prf 8<label>(3)</label></formula><formula xml:id="formula_13">s prf ≥ s prf • t Proof.</formula><p>Assume there exists a random variable K α where H ∞ (K α ) = κα, but where F is not a ( prf , s prf , q prf )-secure wPRF if the key is K α . To prove the Lemma, we must show that then F is not ( prf , s prf , q prf )-secure wPRF for uniformly random keys. By assumption, there exists an adversary A, |A| ≤ s prf such that</p><formula xml:id="formula_14">k∈{0,1} κ Pr[k = K α ] • ξ k &gt; prf<label>(4)</label></formula><p>13 As prf appears twice in eq.( <ref type="formula" target="#formula_12">3</ref>), we cannot easily express prf as a function of prf . One can get a closed expression at the price of a worse bound by e.g. replacing prf in (3) with prf , one then gets (for t ∈ N of our choice): q prf := q prf /t, s prf := s prf /t, prf :=</p><formula xml:id="formula_15">2 α+1 prf + q 2 prf /2 n+1 + 2 • exp -t 2 • 2 prf /8 .</formula><p>where ξ k denotes A's advantage conditioned on the key being k, i.e. with</p><formula xml:id="formula_16">X i * ← {0, 1} n , Y i = F(k, X i ), R i ← R n,m (X i ) (for i = 1, . . . , q prf ) ξ k def = Pr[A(X q prf , Y q prf ) = 1] -Pr[A(X q prf , R q prf ) = 1]</formula><p>We say k ∈ {0, 1} κ is weak if ξ k ≥ prf /2, and let K ⊂ {0, 1} κ denote the set of all weak keys. From (4) we get by Markov</p><formula xml:id="formula_17">Pr[K α ∈ K] ≥ prf /2.</formula><p>Let K be uniform over {0, 1} κ . If we define an event E depending on K by Pr[E|K = k] = Pr[K α = k]/2 α-κ it satisfies (see <ref type="bibr" target="#b37">[37]</ref> for the proof)</p><formula xml:id="formula_18">Pr[E] = 2 -α and Pr[K = k|E] = Pr[K α = k]</formula><p>With this we can lower bound the probability that the uniformly random key K is weak as</p><formula xml:id="formula_19">Pr[K ∈ K] ≥ Pr[E] Pr[K ∈ K|E] = Pr[E] Pr[K α ∈ K] = Pr[K α ∈ K] 2 α ≥ prf 2 α+1</formula><p>(5) We will construct an adversary Ã, where for</p><formula xml:id="formula_20">X i * ← {0, 1} n , Y i = F(k, X i ), R i ← R n,m (X i ) the adversary Ã(X q prf ,</formula><p>R q prf ) (where q prf = q prf • t) will almost always output 0, whereas Ã(X q prf , Y q prf ) will almost always output 1 if k ∈ K. So Ã breaks the security of F as a weak PRF with advantage at</p><formula xml:id="formula_21">least prf ≈ Pr[k ∈ K] ≥ prf /2 α+1 . Let φ = Pr[A(X q prf , R q prf ) = 1]<label>(6)</label></formula><p>where the probability if over the choice of the X i * ← {0, 1} n , the random function R n,m used to compute R i = R n,m (X i ) and also A (if it's not deterministic). Our adversary Ã on input X q prf , Z q prf , does the following.</p><p>-Split the input in t equal parts which we denote ( X1 , Ẑ1 ), . . . , ( Xt , Ẑt ) (so e.g. Xi = X (i-1)q prf +1 , . . . , X i•q prf ).</p><p>-For i = 1, . . . , t compute T i ← A( Xi , Ẑi ) and let</p><formula xml:id="formula_22">T := t i=1 T i If (T -t • φ) ≤ t • prf /4 then Ã outputs 0, otherwise she outputs 1.</formula><p>By the following two claims, Ã will almost never output 1 if the Z i are random, but will output 1 with probability almost prf /2 α+1 if the the Z i were computed by F.</p><formula xml:id="formula_23">Claim 1. Let X i * ← {0, 1} n and R i = R n,m (X i ), then Pr[ Ã(X q prf , R q prf ) = 1] ≤ exp - t 2 • 2 prf 8 + q 2 prf Proof. By definition Ã will output 1 iff (T -t • φ) &gt; t • prf /4.</formula><p>In the case where the Z i are computed as R n,m (X i ) (as it is the case for the R i in this claim) we have by eq.( <ref type="formula" target="#formula_21">6</ref>)</p><formula xml:id="formula_24">t • φ = E[T ], thus Pr[ Ã(X q prf , R q prf ) = 1] = Pr T -E[T ] &gt; t • prf 4<label>(7)</label></formula><p>Let T 1 , . . . , T t be independent binary random variables, where for j = 1, . . . , t the T j is sampled by choosing a uniformly random function R j : {0, 1} n → {0, 1} m and (for i = 1, . . . , q prf ) X j,i * ← {0, 1} n , R j,i = R j (X i ) and setting T j = A(X j,1 , . . . , X j,q prf , R j,1 , . . . , R j,q prf ). Further let T := t j=1 T j . As the T j 's are independent, we can use Hoeffding's inequality (Lemma 1) to upper bound</p><formula xml:id="formula_25">Pr T -E[T ] &gt; t • prf 4 ≤ exp - t 2 • 2 prf 8<label>(8)</label></formula><p>This bound does not apply to <ref type="bibr" target="#b6">(7)</ref>, as unlike the T j , the T j are not completely independent, as we use the same random function R n,m for each T j . We will show that this is not a big problem if the domain is large enough, as conditioned on all the X i 's being different, the R i 's will have the same distribution in the computation of the T j and T j ; Let E denote the event, which holds if all the q prf = q prf • t values X j,i (sampled to compute T or T ) are pairwise distinct. As those values are all sampled independently and uniformly from {0, 1} n , by the birthday bound</p><formula xml:id="formula_26">Pr[¬E] ≤ q 2 prf 2 n+1 (9)</formula><p>Conditioned on E, the distribution of the T i 's and T i (and thus of T and T ) is identical, in particular</p><formula xml:id="formula_27">Pr T -E[T ] &gt; t • prf 4 E = Pr T -E[T ] &gt; t • prf 4 E<label>(10)</label></formula><p>The claim now follows from (7)- <ref type="bibr" target="#b9">(10)</ref>.</p><formula xml:id="formula_28">Claim 2. Let K * ← {0, 1} κ and for i = 1, . . . , q prf : X i * ← {0, 1} n and Y i = F(K, X i ), then Pr[ Ã(X q prf , Y q prf ) = 1] ≥ prf 2 α+1 1 -exp - t 2 • 2 prf 8 Proof. We have Pr[ Ã(X q prf , Y q prf ) = 1] ≥ Pr[K ∈ K] • Pr[ Ã(X q prf , Y q prf ) = 1|K ∈ K]<label>(11)</label></formula><p>By <ref type="bibr" target="#b4">(5)</ref> we can lower bound the first term on the right side in <ref type="bibr" target="#b10">(11)</ref> as</p><formula xml:id="formula_29">Pr[K ∈ K] ≥ prf /2 α+1 (<label>12</label></formula><formula xml:id="formula_30">)</formula><p>It remains to upper bound the second term. For this recall that Ã outputs 0 if |Tt • φ| &gt; t • prf /4, where T = t j=1 T j and each T j is the output of A(X q prf , Y q prf ) where Y i = F(K, X i ) (here the X q prf are independent for each j but K is fixed). If K ∈ K, then by definition of K we have |E[T j ] -φ| ≥ prf /2, and thus Ã will only output 0, if the value of T is bounded away by at least t • prf /4 from its expectation, again using the Hoeffding bound</p><formula xml:id="formula_31">Pr[ Ã(X q prf , Y q prf ) = 0|K ∈ K] = Pr T -φ &gt; t • prf 4 ≤ exp - t 2 • 2 prf 8</formula><p>The claim follows from this equation and (11), <ref type="bibr" target="#b11">(12)</ref>.</p><p>The bound on Ã's advantage prf as claimed in the lemma follows from the two claims above. The bound on the size s prf and number of queries q prf made by Ã follows directly from the definition of Ã.</p><p>Non-uniform Inputs. We just showed that a wPRF stays secure even if the key is not uniform. In the full version of the paper we prove a similar result for the case where the inputs are not uniformly random. We only consider the case where the adversary gets a single input/output pair.</p><formula xml:id="formula_32">Lemma 3. Let β &gt; 0, then if F : {0, 1} κ × {0, 1} n → {0, 1} m is a ( prf , s prf<label>, 1)</label></formula><p>secure wPRF (for uniform inputs), it's also a ( prf , s prf , 1)-secure wPRF for β-low entropy input, where for any t</p><formula xml:id="formula_33">∈ N prf ≤ prf /2 β+1 -2 • exp - 2 • t 2 • 2 prf 64 s prf ≥ s prf • 2t</formula><p>4 Proof of Theorem 2</p><p>Proof Sketch. We will prove the security of S F (cf. Figure <ref type="figure" target="#fig_0">1</ref>) by proving that if the state X i-1 , K i-1 accessed in round i is independent and has HILLpseudoentropy n-2λ and κ-2λ, respectively, then also the output X i , K i+1 has such a HILL-pseudoentropy given the leakage Λ</p><formula xml:id="formula_34">i = f (X i-1 , K i-1 ) (Lemma 7).</formula><p>Though we unavoidably get some degradation in the "quality" of the pseudoentropy (in terms of , s in Definition 3 below), this degradation is only additive, and thus we can sum it up over all rounds. </p><formula xml:id="formula_35">(F(K, X)|X, f (K, X)) ≥ m -2λ] ≥ 1 -2 -λ/2+1</formula><p>with = 2 -λ/2+2 and s = s prf /2 λ+3 (n + κ) 3 .</p><p>Proof. We set Δ := 2λ and = HILL := 2 -λ/2+1 , and require that</p><formula xml:id="formula_36">λ ≤ 2 + log( -1 prg )/2<label>(15)</label></formula><p>so that it satisfies the condition prg ≤ 2 2 λ -2 -Δ from Lemma 4, where now we can write <ref type="bibr" target="#b12">(13)</ref> as</p><formula xml:id="formula_37">Pr Z * ←{0,1} n [H HILL 2 -λ/2+2 ,ŝ (prg(Z)|f (Z)) ≥ m -2λ] ≥ 1 -2 -λ/2+1 (<label>16</label></formula><formula xml:id="formula_38">)</formula><p>where ŝ = s prg /2 λ+1 (n + κ). Now consider the wPRF F from the statement of the lemma, first we apply Lemma 2 with t = n/ prf and q prf = t to get for a uniformly random X (in the second step below we use eq.( <ref type="formula">14</ref>)).</p><formula xml:id="formula_39">δ s prf prf /n (F(K, X ) X ; U m X ) ≤ prf • 2 Δ+1 + 2 Δ+1 n 2 /2 n+1 • 2 prf + 2 exp -n 2 /8 ≤ prf • 2 Δ+2</formula><p>Thus F is a (s prf prf /n, prf • 2 Δ+1 , 1) secure wPRF even if we use a non-uniform key K. Now we apply Lemma 3 (again with t = n/ prf and using eq.( <ref type="formula">14</ref>) in the second step)</p><formula xml:id="formula_40">δ s prf 2 prf /2n 2 (F(K, X) X ; U m X) ≤ prf • 2 2Δ+3 + 2 Δ+1 • 2 • exp(-n 2 /32) ≤ prf • 2 2Δ+4</formula><p>Thus we can see F on input K, X as an ( prg , s prg )-secure pseudorandom generator where s prg = s prf 2 prf /2n 2 and prg = prf • 2 2Δ+4 (note that eq.( <ref type="formula" target="#formula_36">15</ref>) is still satisfied as in the statement of the lemma we require λ ≤ log( -1 prf )/6). Now consider any function f : {0, 1} κ+n → {0, 1} λ , by (16)</p><formula xml:id="formula_41">Pr K,X [H HILL ,s (F(K, X)|f (K, X), X) ≥ m -2λ] ≥ 1 -2 -λ/2+1</formula><p>with = 2 -λ/2+2 and s = s prg /2 λ+1 (n + κ) &gt; s prf 2 prf /2 λ+2 (n + κ) 3 .</p><p>The following lemma quantifies the security loss in one round of our stream cipher. Let size i denote the size of the circuit realizing the ith round of the experiment S F A, then i=1 size i = size(S A).</p><p>Lemma 7 (The ith round). Consider the random experiment S F A. Then if before round i ≤ for some s i-1 ≤ s (with s , , λ are as in the previous lemma)</p><formula xml:id="formula_42">H HILL i-1,si-1 (K i-1 |view i-1 ) ≥ κ -2λ H HILL i-1,si-1 (X i-1 |view - i-1 ) ≥ n -2λ</formula><p>then with probability 1 -2 -λ/2+1 the output (K i+1 , X i ) = F(K i-1 , X i-1 ) satisfies H HILL i,si (F(K i-1 , X i-1 )|view - i ) ≥ κ + n -2λ where i = i-1 + , s i = s i-1 + size i Proof. Consider random variables K i-1 , X i-1 which have high min-entropy</p><formula xml:id="formula_43">H ∞ (K i-1 |view i-1 ) ≥ κ -λ and H ∞ (X i-1 |view - i-1 ) ≥ n -λ</formula><p>By Lemma 6 with probability at least 1 -2 -λ/2+1 H HILL ,s (F(K i-1 , X i-1 )|view - i ) ≥ κ + n -2λ holds with = 2 -λ/2+2 and s = s prf 2 λ+3 •(n+κ) 3 . If we now use the random variables K i-1 , X i-1 (only having high HILL-pseudoentropy) instead of K i-1 , X i-1 , we get (recall that s i-1 &lt; s )</p><formula xml:id="formula_44">H HILL + i-1,si-1-sizei (F(K i-1 , X i-1 )|view - i ) ≥ κ + n -2λ</formula><p>Let us stress that here the new error i is + i-1 , and not + 2 i-1 , as one would think because we must add an error term of i-1 for K i-1 and X i-1 respectively. Such a weaker bound would render the lemma useless, as then i would grow exponentially in i. The reason we only have to add i-1 , is that in round i-1, F outputs (X i-1 , K i ), and it's this tuple that cannot be distinguished with advantage more than i-1 . Thus by adding an error i-1 for X i-1 in round i, we also account for K i to be used in the next round, and we won't have to add an extra error term there.</p><p>The bound on the security of S F as stated in Theorem 2 now follows by summing up the security decrease in each round as stated in the previous lemma. To apply the lemma, one must show that for each i, the K i and X i are independent given the view of the adversary, this follows from Lemma 5 by identifying A i (from the Lemma) with K 2(i-1) (as computed by S F ), identifying B i with K 2(i-1)+1 and V i with view i . In particular, after round, the error adds up to AdvInd(D, A, S, ) ≤ • 2 -λ/2+3 . Note that this is a bit strange, as the advantage decreases by increasing the leakage λ, but this is only due to the fact that we explicitly set the error parameters and HILL as functions of λ in the proof of Lemma 6 in order to keep the number of parameters down. Setting λ = log( -1 prf )/6 (note that this is the largest value allowed in the statement of Lemma 6), we get the bound as claimed in the theorem.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Leakage resilient stream-cipher S F from a seed-incompressible weak pseudorandom function F. The regular evaluation is shown in black, the attack related part is shown in gray with dashed lines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 )</head><label>1</label><figDesc>, and with view(S(S 0 ) A) we denote the view view of A at the end of the attack. For any circuit D : {0, 1} * → {0, 1} (with one bit output), we denote with AdvInd(D, A, S, ) the advantage of D in distinguishing K from a random U n * ← {0, 1} n given view(S(S 0 )S -1 A), formally AdvInd(D, A, S, ) = |p realp rand | where</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>1} κ × {0, 1} n → {0, 1} κ+n be a ( prf , s prf , n/ prf )-secure wPRF where prf ≥ n • 2 -n/3 and n ≥ 20. Let λ = log( -1 prf )/6 and s = s prf 2 prf /2 λ+2 (n + κ)3 . Then for any adversary A ∈ A λ and distinguisher D where size(S -1 A) + size(D) ≤ s we have for any ∈ N</figDesc><table><row><cell>AdvInd(D, A, S, ) ≤ 8 • •</cell><cell>1/12 prf</cell></row></table><note><p>Theorem 2 (Security with Leakage). Let F : {0,</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Let F : {0, 1} κ × {0, 1} n → {0, 1} m be a ( prf , s prf , n/ prf )-secure wPRF. Let K ∈ {0, 1} κ and X ∈ {0, 1} n be independent where H ∞ (K) = κ -2λ and H ∞ (X) = n -2λ and let f : {0, 1} κ+n → {0, 1} λ be any leakage function, then for large enough n (as just described) and λ ≤ log( -1</figDesc><table><row><cell></cell><cell>prf )/6</cell></row><row><cell>Pr X,Y</cell><cell>[H HILL ,s</cell></row></table><note><p><p>14  </p>Lemma 6.</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Note that this is unavoidable, as when one cannot keep at least some uncertainty about the internal state, one cannot hope to get a secure implementation.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>In particular 1. We prove security in the standard model, whereas<ref type="bibr" target="#b36">[36]</ref> work in the idealcipher model 2. The security notion considered in<ref type="bibr" target="#b36">[36]</ref> is key-recovery, whereas we use unpredictability (and, in a limited context, indistinguishability). 3. The leakage functions considered in<ref type="bibr" target="#b36">[36]</ref> (namely Hamming weight or identity plus noise) are motivated by leakages observed in practice, whereas we bound only the amount, not the type of information leaked 4. Finally, and most importantly, our approach differs in how the observed leakage (cf. point 3.) can be exploited in order to break the security notion (cf. point 2.).<ref type="bibr" target="#b36">[36]</ref> show that a so called template attack<ref type="bibr" target="#b6">[7]</ref> cannot recover the key, whereas we prove security against every efficient</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>adversary.<ref type="bibr" target="#b4">5</ref> A crucial requirement we need from the construction in order to prove leakageresilience, is that the state can be split in (at least) two parts, and this parts evolve independently, in the sense that any interaction between them is public. Formally, one must be able to express the cipher as a process as in Lemma 5</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_3"><p>in this paper.<ref type="bibr" target="#b5">6</ref> Here the leakage function is applied only to the state S0, and not to any internal variables appearing in the computation. This can be done without loss of generality as all the internal variables are simply functions of the state S0, and thus can be computed by f .</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_4"><p>A special more intuitive case -which is still more general than bounded leakageis to consider any (not necessarily) efficient leakage function g where there exists an efficient f with range {0, 1} λ , such that given f (S) one can efficiently sample some "fake" leakage g(S) where [S, g(S)] is computationally indistinguishable from [S, g(S)] (bounded leakage corresponds to g = g). Note that here the sampling algorithm only gets f (S), whereas the distinguisher gets S.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_5"><p>Let us stress, that just assuming that BC is a wPRF is not sufficient as (2) is not a secure range expansion of wPRFs (see e.g.<ref type="bibr" target="#b38">[38]</ref> for some secure constructions).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_6"><p>This summation to bound the degradation in security is quite tedious. It might seem that one could get a much simpler proof using a hybrid argument, where for the jth hybrid one would simply replace the output in the first j rounds (having high HILL-pseudoentropy) with some (indistinguishable) output having high minentropy. Unfortunately we can't make this intuition work, the reason is that high HILL-pseudoentropy only implies existence of an indistinguishable random variable with high min-entropy, but gives no means as to how to sample it. Thus it is not clear how to efficiently sample the hybrids just described.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>I'd like to thank Stefan Dziembowski and Sebastian Faust for some interesting discussions and the authors of <ref type="bibr" target="#b36">[36,</ref><ref type="bibr" target="#b42">41]</ref> for clarifying their work.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4 (PRG). A function prg</head><p>the seed is leaked, then prg(Z) will not look random any more, as e.g. f (Z) could just output some bits of prg(Z). The following lemma states that if the range of f is not too big, then prg(Z) will still have high HILL-pseudoentropy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 4 (Pseudoentropy of a PRG, [17]). Let</head><p>where ŝ ≈ 2 HILL s prg /8m. We will use the following technical lemma about some general random processes to show that the inputs X i and keys K i in the computation of S F are independent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 5 ([16]</head><p>). Let A 0 , B 0 be independent random variables, and φ 1 , φ 2 , . . . be any sequence of functions. Let A 1 , A 2 , . . ., B 1 , B 2 , . . . and V 1 , V 2 , . . . be defined as</p><p>Combining Lemmata 2, 3 and 4, we can prove Lemma 6 below, which states that the output F(K, X) of a wPRF has high HILL-pseudoentropy, even if K and X have high min-entropy (but are independent) and given some leakage f (K, X). We set t = n/ prf in Lemma 2 and 3, moreover we need the domain {0, 1} n of F to be large enough, in particular, we will assume that (with prf as in the lemma below)</p><p>Note that the term on the right side drops exponentially in n, thus this restriction is a very weak one, and is e.g. satisfied for any prf ≥ n • 2 -n/3 and n ≥ 20.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Simultaneous hardcore bits and cryptography against memory attacks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Akavia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Vaikuntanathan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TCC</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Computational analogues of entropy</title>
		<author>
			<persName><forename type="first">B</forename><surname>Barak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Shaltiel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wigderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RANDOM-APPROX</title>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="200" to="215" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Differential fault analysis of secret key cryptosystems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 1997</title>
		<editor>
			<persName><forename type="first">B</forename><forename type="middle">S</forename><surname>Kaliski</surname><genName>Jr</genName></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1294</biblScope>
			<biblScope unit="page" from="513" to="525" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On the importance of checking cryptographic protocols for faults</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Demillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Lipton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 1997</title>
		<editor>
			<persName><forename type="first">W</forename><surname>Fumy</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1233</biblScope>
			<biblScope unit="page" from="37" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">How to protect yourself without perfect shredding</title>
		<author>
			<persName><forename type="first">R</forename><surname>Canetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Eiger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D.-Y</forename><surname>Lim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICALP 2008, Part II</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Aceto</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Damgård</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Goldberg</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Halldórsson</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Ingólfsdóttir</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Walukiewicz</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5126</biblScope>
			<biblScope unit="page" from="511" to="523" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Intrusionresilient key exchange in the bounded retrieval model</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Cash</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">Z</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Dodis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Lipton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Walfish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TCC 2007</title>
		<editor>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Vadhan</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4392</biblScope>
			<biblScope unit="page" from="479" to="498" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Template attacks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rohatgi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES 2002</title>
		<editor>
			<persName><forename type="first">B</forename><forename type="middle">S</forename><surname>Kaliski</surname><genName>Jr</genName></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">¸ K</forename><surname>Koç</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2523</biblScope>
			<biblScope unit="page" from="13" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Resistance against differential power analysis for elliptic curve cryptosystems</title>
		<author>
			<persName><forename type="first">J.-S</forename><surname>Coron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES 1999</title>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">¸ K</forename><surname>Koç</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">1717</biblScope>
			<biblScope unit="page">292</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Algebraic and slide attacks on keeLoq</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">T</forename><surname>Courtois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">V</forename><surname>Bard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FSE 2008</title>
		<editor>
			<persName><forename type="first">K</forename><surname>Nyberg</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5086</biblScope>
			<biblScope unit="page" from="97" to="115" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Perfectly secure password protocols in the bounded retrieval model</title>
		<author>
			<persName><forename type="first">G</forename><surname>Di Crescenzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Lipton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Walfish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TCC 2006</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Halevi</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Rabin</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">3876</biblScope>
			<biblScope unit="page" from="225" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On perfect and adaptive security in exposureresilient cryptography</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Dodis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2001</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Pfitzmann</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2045</biblScope>
			<biblScope unit="page" from="301" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">One-round authenticated key agreement from weak secrets</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Dodis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wichs</surname></persName>
		</author>
		<ptr target="http://eprint.iacr.org/" />
	</analytic>
	<monogr>
		<title level="j">Cryptology ePrint Archive</title>
		<imprint>
			<biblScope unit="issue">503</biblScope>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Intrusion-resilience via the bounded-storage model</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dziembowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TCC 2006</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Halevi</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Rabin</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">3876</biblScope>
			<biblScope unit="page" from="207" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">On forward-secure storage (extended abstract)</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dziembowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2006</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4117</biblScope>
			<biblScope unit="page" from="251" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">On generating the initial key in the boundedstorage model</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dziembowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">M</forename><surname>Maurer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2004</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Cachin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Camenisch</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3027</biblScope>
			<biblScope unit="page" from="126" to="137" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Intrusion-resilient secret sharing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dziembowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pietrzak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="227" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Leakage-resilient cryptography</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dziembowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pietrzak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">FOCS</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">On the power of power analysis in the real world: A complete break of the keeLoq code hopping scheme</title>
		<author>
			<persName><forename type="first">T</forename><surname>Eisenbarth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kasper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Moradi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Salmasizadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T M</forename><surname>Shalmani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2008</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5157</biblScope>
			<biblScope unit="page" from="203" to="220" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Electromagnetic analysis: Concrete results</title>
		<author>
			<persName><forename type="first">K</forename><surname>Gandolfi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mourtel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Olivier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="251" to="261" />
		</imprint>
		<respStmt>
			<orgName>CHES</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A uniform-complexity treatment of encryption and zero-knowledge</title>
		<author>
			<persName><forename type="first">O</forename><surname>Goldreich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="21" to="53" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">How to construct random functions</title>
		<author>
			<persName><forename type="first">O</forename><surname>Goldreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Micali</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
			<biblScope unit="page" from="464" to="479" />
		</imprint>
		<respStmt>
			<orgName>FOCS</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">One-time programs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">T</forename><surname>Kalai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">N</forename><surname>Rothblum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2008</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5157</biblScope>
			<biblScope unit="page" from="39" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Lest we remember: Cold boot attacks on encryption keys</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Halderman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Schoen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Heninger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Clarkson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Paul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Calandrino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Appelbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">W</forename><surname>Felten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="45" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">On seed-incompressible functions</title>
		<author>
			<persName><forename type="first">S</forename><surname>Halevi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rackoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TCC 2008</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Canetti</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">4948</biblScope>
			<biblScope unit="page" from="19" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A pseudorandom generator from any one-way function</title>
		<author>
			<persName><forename type="first">J</forename><surname>Håstad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Impagliazzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Luby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1364" to="1396" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Probability inequalities for sums of bounded random variables</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hoeffding</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">301</biblScope>
			<biblScope unit="page" from="13" to="30" />
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A practical attack on KeeLoq</title>
		<author>
			<persName><forename type="first">S</forename><surname>Indesteege</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Dunkelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Biham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Preneel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2001</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Pfitzmann</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2045</biblScope>
			<biblScope unit="page" from="1" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Private circuits II: Keeping secrets in tamperable circuits</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Ishai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Prabhakaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2006</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Vaudenay</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4004</biblScope>
			<biblScope unit="page" from="308" to="327" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Private circuits: Securing hardware against probing attacks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Ishai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2003</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">2729</biblScope>
			<biblScope unit="page" from="463" to="481" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Side channel cryptanalysis of product ciphers</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kelsey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Schneier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ESORICS 1998</title>
		<editor>
			<persName><forename type="first">J.-J</forename><surname>Quisquater</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Y</forename><surname>Deswarte</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Meadows</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Gollmann</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1485</biblScope>
			<biblScope unit="page" from="97" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Kocher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 1996</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Koblitz</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">1109</biblScope>
			<biblScope unit="page" from="104" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Design and validation strategies for obtaining assurance in countermeasures to power analysis and related attacks</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Kocher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the NIST Physical Security Workshop</title>
		<meeting>the NIST Physical Security Workshop</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Kocher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jaffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Differential Power Analysis</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Wiener</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">1666</biblScope>
			<biblScope unit="page" from="388" to="397" />
		</imprint>
	</monogr>
	<note>CRYPTO 1999</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A provably-secure strongly-randomized cipher</title>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">M</forename><surname>Maurer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 1990</title>
		<editor>
			<persName><forename type="first">I</forename><forename type="middle">B</forename><surname>Damgård</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1991">1991</date>
			<biblScope unit="volume">473</biblScope>
			<biblScope unit="page" from="361" to="373" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Physically observable cryptography (extended abstract)</title>
		<author>
			<persName><forename type="first">S</forename><surname>Micali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Reyzin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TCC 2004</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">2951</biblScope>
			<biblScope unit="page" from="278" to="296" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">A block cipher based pseudo random number generator secure against side-channel key recovery</title>
		<author>
			<persName><forename type="first">C</forename><surname>Petit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F.-X</forename><surname>Standaert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Malkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yung</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>ASIACCS</publisher>
			<biblScope unit="page" from="56" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Full version of this paper</title>
		<author>
			<persName><forename type="first">K</forename><surname>Pietrzak</surname></persName>
		</author>
		<ptr target="http://homepages.cwi.nl/pietrzak/publications.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Range extension for weak pRFs; the good, the bad, and the ugly</title>
		<author>
			<persName><forename type="first">K</forename><surname>Pietrzak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sjödin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2007</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">4515</biblScope>
			<biblScope unit="page" from="517" to="533" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Electromagnetic analysis (ema): Measures and counter-measures for smart cards</title>
		<author>
			<persName><forename type="first">J.-J</forename><surname>Quisquater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Samyde</surname></persName>
		</author>
		<editor>E-smart</editor>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="200" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Dense subsets of pseudorandom sets</title>
		<author>
			<persName><forename type="first">O</forename><surname>Reingold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Trevisan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tulsiani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Vadhan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="76" to="85" />
		</imprint>
		<respStmt>
			<orgName>FOCS</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">A unified framework for the analysis of side-channel key recovery attacks</title>
		<author>
			<persName><forename type="first">F.-X</forename><surname>Standaert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Malkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2009</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Joux</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">5479</biblScope>
			<biblScope unit="page" from="443" to="461" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Constructing locally computable extractors and cryptosystems in the bounded-storage model</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Vadhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="43" to="77" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
