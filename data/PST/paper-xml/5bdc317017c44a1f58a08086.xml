<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Learning Cloud Dynamics to Optimize Spot Instance Bidding Strategies</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Mikhail</forename><surname>Khodak</surname></persName>
							<email>mkhodak@princeton.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Princeton University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Liang</forename><surname>Zheng</surname></persName>
							<email>liangz@princeton.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Princeton University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Andrew</forename><forename type="middle">S</forename><surname>Lan</surname></persName>
							<email>andrew.lan@princeton.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Princeton University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Carlee</forename><surname>Joe-Wong</surname></persName>
							<email>cjoewong@andrew.cmu.edu</email>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mung</forename><surname>Chiang</surname></persName>
							<email>chiang@purdue.edu</email>
							<affiliation key="aff2">
								<orgName type="institution">Purdue University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Learning Cloud Dynamics to Optimize Spot Instance Bidding Strategies</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T13:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>As infrastructure-as-a-service clouds become more popular, cloud providers face the complicated problem of maximizing their resource utilization by handling the dynamics of user demand. Auction-based pricing, such as Amazon EC2 spot pricing, provides an option for users to use idle resources at highly reduced yet dynamic prices; under such a pricing scheme, users place bids for cloud resources, and the provider chooses a threshold "spot" price above which bids are admitted. In this paper, we propose a nonlinear dynamical system model for the time-evolution of the spot price as a function of latent states that characterize user demand in the spot and on-demand markets. This model enables us to adaptively predict future spot prices given past spot price observations, allowing us to derive user bidding strategies for heterogeneous cloud resources that minimize the cost to complete a job with negligible probability of interruption. Along the way, the model also yields novel, empirically verifiable insights into cloud provider behavior. We experimentally validate our model and bidding strategy on two months of Amazon EC2 spot price data and find that our proposed bidding strategy is up to 4 times closer to the optimal strategy in hindsight compared to a baseline regression approach while incurring the same negligible probability of interruption.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>As businesses increasingly utilize cloud infrastructure to run their applications, cloud providers (CPs) have begun to offer them a variety of cloud-based services <ref type="bibr" target="#b0">[1]</ref>- <ref type="bibr" target="#b2">[3]</ref>. Infrastructureas-a-service (IaaS), as its name suggests, provides users with time on virtualized compute resources that are hosted on the CP's physical servers. Since users can freely choose the amount of compute resources that they rent from the CP, IaaS can provide them with on-demand resource elasticity, i.e., virtualization of computing resources that can expand or contract to meet real-time user demands. For instance, a business running data analytics on its webpage browsing patterns might decide to rent more compute resources at times when many users are accessing its website.</p><p>However, this resource elasticity comes with a significant challenge as IaaS becomes more popular: how can the CP simultaneously meet the resource needs of many jobs, each of which may experience large, possibly unpredictable fluctuations in their resource needs? Many works on cloud operations have attempted to address this issue, e.g., through job scheduling <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref> or optimized virtual machine placement The work in this paper was in part supported by DARPA DCOMP Program under Contract No. HR001117C0052 and No. HR001117C0048, NSF grants CCF-1302518 and CCF-1527371, and ONR-N00014-16-1-2329. <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>. In this work, we propose another solution: using pricing policies to shape resource demands.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Cloud Pricing and Resource Utilization</head><p>CPs today offer a variety of different IaaS pricing policies that can incentivize different types of user behavior. For instance, volume-discounted pricing charges users at a reduced unit price per instance if their usage exceeds a given threshold; such a pricing policy then incentivizes users to submit larger, longer-lived jobs that can take advantage of the volume discount. Examples of such pricing include Google Cloud Platform's sustained-use discount <ref type="bibr" target="#b0">[1]</ref> and Amazon EC2's reserved instances <ref type="bibr" target="#b1">[2]</ref>. However, while CPs can help to stabilize their resource demands with volume discounts, they cannot entirely avoid fluctuations in users' resource needs. Since datacenters have a fixed physical capacity at an hour-to-hour or day-to-day timescale, the CP must provision their infrastructure to users' peak demands, leaving some idle resources at off-peak times.</p><p>To improve off-peak utilization, CPs can offer their users reduced prices at these times, e.g., Google's preemptible virtual machines' <ref type="bibr" target="#b7">[8]</ref> and Amazon EC2 spot instances' auction-based spot pricing <ref type="bibr" target="#b2">[3]</ref>. Since it would be difficult for the CP to predict its amount of idle resources at any given time, neither of these schemes guarantees their users access to cloud resources; instead, they promise to provide resources to users if they are available in the future. Users then accept a lower price in exchange for unpredictable resource availability. Spot instance auctions in particular, however, allow users to optimize their bids so as to reduce the amount of job interruptions due to resources being unavailable. Indeed, by modeling spot dynamics, we can derive insights into not only spot instance markets but the operations of the cloud itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Our Contributions</head><p>In the cloud spot market, the CP dynamically sets "spot" prices according to changes in supply, i.e., available spare resources in the on-demand market, and demand, i.e., bid arrivals and departures. Users submit bids at their chosen bid prices; their jobs start running if their bid prices exceed the current spot price, until the spot price exceeds their bid prices. When that occurs, their jobs are interrupted and resume once their bid prices again exceed the given spot price. Users are always charged at the current spot price when their jobs are running. By predicting the future spot prices, they can predict the number of times their jobs will be interrupted, using this knowledge to optimize their bids.</p><p>Predicting future spot price dynamics, however, is difficult, as the value of the spot price is impacted by many factors. Generally, more demand for on-demand resources means there are fewer spare resources available for the spot market, resulting in higher spot prices. Job arrivals and departures can also impact the spot prices. For example, a large number of new bids in one time slot can significantly affect the spot price at the next time slot; since user bids are reconsidered in every time slot until their associated jobs complete, current bids can affect the future spot prices, introducing temporal correlations between the spot prices at different times.</p><p>It is unclear how the CP uses these factors to determine the spot prices. On the one hand, the CP may set high spot prices to increase their per-job profit at the expense of idle cloud resources; on the other hand, the CP may set low, "clearance" spot prices to fully utilize their available resources. CPs in general do not reveal their pricing strategies publicly, but Amazon EC2 does allow users to view its spot price history for the past two months. In this paper, we use these historical traces to answer two key questions: first, how should we model demand dynamics in both the on-demand market and the spot market so as to predict future spot prices? Second, given this predictive ability, how should a user bid in order to complete a job at minimal cost? In answering these questions, we make the following research contributions:</p><p>Prediction of spot prices (Section III): We first prove under very general assumptions that the statistics of Amazon EC2's spot price history do not correspond to a CP profitmaximizing approach for setting spot prices. This confirms observations made in <ref type="bibr" target="#b8">[9]</ref> and justifies an assumption that the CP sets spot prices to fully utilize cloud capacity. We proceed to develop a hidden Markov model that views the spot price as a stochastic function of latent states corresponding to user demand in both the on-demand and spot models, which themselves evolve stochastically as cloud users arrive and depart the bidding queue. This model is posed as a nonlinear dynamical system parameterized by variables associated with the supply and demand for cloud resources. Thus, unlike prior works on bidding optimization <ref type="bibr" target="#b9">[10]</ref>, our model not only explicitly accounts for the interplay between the on-demand and spot markets under a resource capacity constraint but also handles time correlations between spot prices.</p><p>Optimal bidding strategies (Section IV): To lowers users' costs of using spot instances while maintaining a low probability of job interruption, we next consider bidding among heterogeneous machine types. Amazon EC2 offers general purpose m3. * instances, compute optimized c3. * instances, memory optimized r3. * instances, and storage optimized i3. * instances, with different configurations for different resources. Given a family of instance types (e.g., c3. * ), we use our spot price prediction model to optimally choose the type of instance to bid for in this family. For example, c3.2xlarge has double the vCPU of c3.xlarge and thus can reduce a CPU-constrained job's runtime. Although the spot price for a higher-configuration instance like c3.2xlarge is usually higher than for a lower-configuration instance, the shorter job runtime on the higher-configuration instance combined with the price fluctuations captured by our model may make it more cost-effective to bid for this instance. Additionally, jobs may experience less variance in spot prices across a shorter runtime.</p><p>To experimentally verify both of these results, we download the Amazon EC2 spot price history from 16 February to 26 July, 2017. We divide this dataset into training and testing sets of equal size, with the former comprising the data up to 7 May. The test set is used to evaluate our optimal bidding strategies using a spot price model trained on the training set, and we show that it fits the empirical spot prices well. We also compare the bidding results to an auto regressive baseline <ref type="bibr" target="#b8">[9]</ref>, showing that bidding strategies made with our prediction method outperforms, especially for volatile instances. We conclude the paper in Section V. All proofs and technical details can be found in the technical report <ref type="bibr" target="#b10">[11]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>Since the advent of Amazon EC2 spot pricing in 2009, many works <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b11">[12]</ref>- <ref type="bibr" target="#b13">[14]</ref> have characterized spot prices from a statistical perspective. These approaches, however, have limited predictive power, as they do not consider the dynamics between the supply and demand of cloud instances. As we discuss above, spot pricing reflects fluctuations in cloud resource utilization, requiring a model that considers these dynamics. Moreoever, the assumptions of uncorrelated Gaussian noise needed by auto-regressive models, such as used by <ref type="bibr" target="#b8">[9]</ref>, do not hold on 2017 spot data (see Figure <ref type="figure" target="#fig_4">3</ref>).</p><p>The authors of <ref type="bibr" target="#b9">[10]</ref> used a profit-maximization model to understand spot price distributions; however, they considered only the asymptotic (time-invariant) user demand regime and made fairly restrictive assumptions on spot user arrival and bid distributions. Moreover, there has been evidence showing that the CP may not use the profit-maximizing spot prices <ref type="bibr" target="#b8">[9]</ref>. Since a purely statistical understanding of spot prices may not capture their true origins, we model spot prices as a function of supply and demand by characterizing the dynamics of both the on-demand and spot markets.</p><p>A few works have argued that the cost benefits brought by spot offerings can be realized with intuitive bidding strategies <ref type="bibr" target="#b14">[15]</ref>. However, choosing between spot instances and bid levels affects both the cost and interruptibility of users' jobs and may allow users to realize significant cost savings, making the bidding problem non-trivial. Other works have derived more in-depth bidding strategies for resources in the cloud spot market by explicitly considering job deadlines <ref type="bibr" target="#b15">[16]</ref>, cost minimization <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b16">[17]</ref>, and task dependency <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>. Some works have attempted to bid across different geographical regions and instance types <ref type="bibr" target="#b19">[20]</ref>. To limit the variance in the allocated resources, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref> suggest that users rent resources in both the on-demand market and the spot market. However, the spot price models used in these works are fairly simplistic and achieve limited predictive power, limiting the performance achieved by their proposed bidding strategies. Our work differs from these past efforts by first learning a spot price model that is rooted in understanding CPs' decision criteria, and then devising a bidding strategy that considers cost minimization in the more natural setting of heterogeneous cloud resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. A DYNAMICAL MODEL FOR SPOT PRICES</head><p>In this section, we develop a dynamical model for the way in which a CP sets spot prices by considering both its cloud computing resources and user demand in the on-demand and spot markets. These cloud resources are sold in the unit of instances, which are remote virtual machines (VMs) with specified amounts of CPU, memory, storage, etc. We suppose that there are in total N instances of the same VM type that are offered to all users requesting it over discrete time slots t ∈ {0, 1, . . .}. Each instance is assumed to have operational cost π incurred by the CP per unit per hour. At each time slot t, user requests for on-demand instances are satisfied instantaneously and charged at the on-demand price π &gt; π, while user requests for spot instances at their bid prices are allocated to spare resources. Bids with bid prices higher than the current spot price π t ≥ π are regarded as successful and can start running. We summarize our notation in Table <ref type="table">I</ref>.</p><p>When setting the spot price, the CP needs to take into account both the N (d) t currently running on-demand instances and a set B t ⊂ R + of bids from B t = |B t | spot instance requests. Many works <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref> assume that the CP's objective is to maximize its own profit under some capacity constraint, which we show is inconsistent with empirical spot price distributions in Section III-A. Since unsuccessful bids are pushed into a queue and considered together with new bids in the next time slot, there will be auto-correlation for spot instance demand across time. By formalizing the relationship between user demands and spot prices in Section III-B, we characterize this time correlation and its effect on spot prices via a dynamical system. We then describe an approach to solving the dual problem of estimating both the hidden states and the parameters characterizing request arrival and job completion rates via the expectation-maximization (EM) algorithm in Section III-C. Learning this cloud dynamics model will facilitate our bidding strategy design in Section IV.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Provider Profit Optimization</head><p>We first construct a model for how the CP sets the price. At a given time slot t, the CP determines the spot price π t given the on-demand usage N (d) t and the set of bids B t . It then receives profit</p><formula xml:id="formula_0">(π − π) N (d) t + (π t − π) N (s) t ,<label>(1)</label></formula><p>where we define the spot market usage as</p><formula xml:id="formula_1">N (s) t = |{b ∈ B t : b ≥ π t }| ,<label>(2)</label></formula><p>i.e., the number of successful bids at time t. Since π and π are fixed (as long as the timescale is not too large) and</p><formula xml:id="formula_2">N (d) t</formula><p>is determined exogenously by user demand, the CP's spot price decision affects only the second term, which is thus the objective of the maximization problem.</p><p>We now need to determine the constraint on this maximization problem. Since for certain B t the CP can potentially make more profit selling fewer instances at a higher spot price, the profit-maximizing constraint is N</p><formula xml:id="formula_3">(d) t + N (s) t</formula><p>≤ N . However, the CP may wish to sell all of its excess capacity, e.g., to have a larger market share or for other economic considerations, even if this means a lower profit. Assuming N</p><formula xml:id="formula_4">(d) t + B t ≥ N the corresponding full capacity constraint is N (d) t + N (s) t = N .</formula><p>Although both settings are economically interesting, we next show that under some reasonable assumptions, Amazon EC2 spot price data indicates that Amazon is not using the profitmaximizing constraint with high probability (in B t ), justifying our use of the full capacity constraint instead.</p><p>To motivate this decision, we first make the assumption that each spot bid b ∈ B t is drawn independently from a (possibly time-varying) distribution that weakly stochastically dominates the uniform distribution over the interval [π, π] (henceforth denoted U[π, π]), where we employ the following definition:</p><p>Definition 1: The distribution of a real-valued random variable X with cumulative density function F X is said to weakly stochastically dominate (WSD) the distribution of a realvalued random variable Y with cumulative density function</p><formula xml:id="formula_5">F Y if F X (x) ≤ F Y (x) ∀ x ∈ R.</formula><p>WSD implies that for any x ∈ R, a random variable drawn from the dominating distribution is more likely to take a value above x than one drawn from the dominated distribution. Distributions with support in [π, π] that dominate U[π, π] are more concentrated on the upper half of the interval (in general any distribution whose density function is supported and nondecreasing on [π, π], including U[π, π] itself, satisfies our assumption).</p><p>Our use of this weak assumption has basis in both previous analyses of spot markets and other auctions (e.g. <ref type="bibr" target="#b9">[10]</ref> assumes bids are drawn from U[π, π]) as well in the simple bidding strategy of bidding the on-demand price since the user only pays the spot price anyway, as is commonly advocated (e.g. in <ref type="bibr" target="#b14">[15]</ref>) and used in practice. Under the given model, the WSD assumption yields the following proposition, which, informally, shows that if the CP is using a profit-maximizing constraint then the spot price is bounded away from π with high probability: Proposition 1: Suppose at time slot t, all bids b ∈ B t are drawn independently from a distribution that weakly stochastically dominates U[π, π]. Then, defining π (ρ) = ρπ +(1−ρ)π for ρ ∈ [0, 1], if the CP sets the spot price π t so as to maximize (1) subject to the profit-maximizing constraint</p><formula xml:id="formula_6">N (d) t + N (s) t</formula><p>≤ N , then for any ρ ≤ 1  4 we have that</p><formula xml:id="formula_7">P π t ≤ π (ρ) ≤ exp −2 1 2 − 2ρ 2 B t .<label>(3)</label></formula><p>Under the WSD assumption this proposition gives us the following explicit condition that must be satisfied in order to assume that a CP operating under our model sets a profitmaximizing constraint: given some ρ, if there are always at least B spot users for each instance, then the proportion of all time slots at which we have π t ≤ π (ρ) must be less than exp −2 1  2 − 2ρ 2 B . We start by examining the spot price history of the general purpose computing instance m3.medium in the US-East-1 region (zone a). We find that the condition is violated even if B = 1: choosing π to be the minimum price, for ρ = 0.15, we find that π t ≤ π (ρ) around 96% of the time (Figure <ref type="figure" target="#fig_0">1</ref>) while the condition predicts this event to occur at most 92% of the time. More generally, letting B = 10 we find that 81% of the spot price histories of all active instance types in the US-East-1 region (zone a) violate the condition (Figure <ref type="figure" target="#fig_0">1</ref>). Since the bound in Proposition 1 is not tight and since the number of spot users B may be much larger than 10, this is strong empirical evidence that Amazon EC2 spot prices are not set using a profit-maximizing constraint; instead, we postulate that they are using the spot market only to use up excess capacity, i.e. they set the full capacity-utilizing constraint. Such a strategy may be driven by longer term profit maximization, e.g. if the CP expects that risk-averse users will not use the spot market if the spot price is often very close to the ondemand price, or by the desire for a larger market share.</p><p>Following these observations and assuming B t ≥ N − N (d) t</p><p>(i.e. there is always enough spot-demand to fill capacity), we formulate the CP profit optimization problem as:</p><formula xml:id="formula_8">maximize πt (π t − π)N (s) t subject to N (d) t + N (s) t = N.<label>(4)</label></formula><p>Assuming the CP knows B t , the solution to this optimization problem is given by</p><formula xml:id="formula_9">π t = max |{b∈Bt:b≥π}|=N −N (d) t π. (<label>5</label></formula><formula xml:id="formula_10">)</formula><p>Our goal is to model the evolution of the spot price as an observed variable depending on hidden stochastic state variables N (d) t and B t . To simplify terminology we first normalize these variables by the total number of instances, i.e. define n t = N b t instead of B t ), we follow <ref type="bibr" target="#b9">[10]</ref> and assume that all bids b ∈ B t are drawn independently from the uniform distribution on [π, π]. We can then view π t as a noisy observation of a function of n t and b t , as stated in the following Lemma:</p><formula xml:id="formula_11">Lemma 1: Fixing N −N (d) t Bt = C t for some constant C t ≤ 1, as B t → ∞ the distribution of π t conditioned on n t and b t converges in distribution to N π − (π − π) 1−nt bt , (π−π) 2 4N bt .</formula><p>Thus, assuming there are always enough spot bids to fill up excess capacity, this lemma implies that for large enough B t the spot price π t will be approximately normally distributed with mean π − (π − π) 1−nt bt . However, since this is an asymptotic limit and in practice there may not be enough spot bids to cover unused instances (i.e.</p><formula xml:id="formula_12">B t &lt; N − N (d) t ⇐⇒ 1−nt bt &gt; 1)</formula><p>, we use Lemma 1 to inform the construction of the following conditional model for the observed spot price:</p><formula xml:id="formula_13">π t =    π n t + b t ≤ 1 π − (π − π) 1−nt bt + ε t 0 &lt; 1 − n t &lt; b t π n t ≥ 1<label>(6)</label></formula><p>where ε t ∼ N 0, σ 2 bt is normally distributed with learnable variance parameter σ 2 corresponding to the noise in Lemma 1. Note that in this expression, the spot price rises to the ondemand price when the on-demand requests take up all the cloud capacity (n t = 1) and is the minimum possible price when there is not enough spot demand to take up fill up excess capacity (n t +b t ≤ 1). We next discuss how to model the time evolution of n t and b t in order to understand the temporal dynamics of π t .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Job Arrival and Departure</head><p>To capture the temporal evolution of the spot price, we now model the dynamics of cloud instance utilization. The dynamics consists of two parts: job arrival, which stems from user requests in the on-demand market and user bids in the spot market, and job departure, which occurs when jobs in either market are completed.</p><p>Over the course of one time slot t, a number, Λ</p><p>t , of users' jobs will arrive in the on-demand market to start running, while a number, Λ(d) t , of currently-running on-demand jobs will finish and exit the system. Thus, the number of running on-demand jobs evolves as</p><formula xml:id="formula_15">N t+1 = N t + Λ (d) t − Λ(d) t .</formula><p>For spot instances, we model the dynamics of the number of active bids B t , i.e., a queue of jobs competing with each other over spot instances via their bids. Over each time slot t, a number, Λ (s) t , of new users will submit bids, and a number, Λ(s) t , of existing bids will leave, either due to job completion or manual termination by users. Thus, the number of active bids evolves as</p><formula xml:id="formula_16">B t+1 = B t +Λ (s) t − Λ(s) t .</formula><p>We note that these B t bids also include the jobs that are running on spot instances, since they will be interrupted by the system once their bid prices fall below future spot prices.</p><p>As before, we normalize all variables by the total amount of instances, i.e., define λ(d)</p><formula xml:id="formula_17">t = Λ(d) t /N , b t = B t /N , λ (s) t = Λ (s)</formula><p>t /N , and λ(s) t = Λ(s) t /N , and use these notations throughout the rest of the paper. Hence, we arrive at the following dynamical system:</p><formula xml:id="formula_18">n t+1 = n t + λ (d) t − λ(d) t b t+1 = b t + λ (s) t − λ(s) t .<label>(7)</label></formula><p>Since the unnormalized arrival-departure random variables are likely best captured by Poisson distributions <ref type="bibr" target="#b24">[25]</ref>- <ref type="bibr" target="#b26">[27]</ref>, we find the closest counterparts for λ</p><formula xml:id="formula_19">(d) t , λ(d) t , λ<label>(s)</label></formula><p>t , and λ(s) t and model them as independent time-invariant exponential random variables with parameters θ d , θd , θ s , and θs , respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. State and Parameter Estimation</head><p>Our proposed model on hidden state evolution <ref type="bibr" target="#b6">(7)</ref> and spot price observation (6) defines a nonlinear dynamical system (NDS) parametrized by Θ = {θ d , θd , θ s , θs , σ 2 }. In this section, we provide a more detailed discussion of our model setup and describe how to jointly infer the hidden states and parameters of the model using EM.</p><p>First, we note that the spot prices of many types of cloud instances have a unique but fairly consistent lower bound, e.g. as shown in Figure <ref type="figure" target="#fig_0">1</ref>. It is thus reasonable to regard the lowest spot price for each instance type as the operation cost π for that instance. More notably, there are times at which the spot price goes above the on-demand price; for example the spot price time series shown in Figure <ref type="figure" target="#fig_0">1</ref> experienced two such peaks, once in mid-March and once in late June. These events are likely caused by all cloud capacity being taken up by ondemand use, i.e. n t = 1. At such times, the arrival-departure model is no longer valid, since no more on-demand instances can be started and no spot jobs can be completed. However, our model does handle the probability of arriving at such a state -it is P λ</p><formula xml:id="formula_20">(d) t − λ(d) t ≥<label>1</label></formula><p>− n t -and the spot prices in the duration between such outliers are our data of interest.</p><p>We thus divide the data into a series of m timespans {{τ is the last time slot of a period when π t ≥ π occurs and τ (j) 0 + T j is the next time slot of observing such an extreme price, which serves as the end of this timespan but the beginning of the next timespan, i.e., τ (j+1) 0 = τ (j) 0 + T i (the very first and last time slots are excluded). We use T j to denote the length of the jth timespan, so we index the numbers of running on-demand instances n t and active spot bids b t within each timespan by t = 0, 1, . . . , T j . With the above notation, we can denote the observed spot prices by</p><formula xml:id="formula_21">Π = π (j) t Tj t=0 m j=1<label>(8)</label></formula><p>and the hidden states by</p><formula xml:id="formula_22">X =    n (j) t b (j) t Tj t=0    m j=1 ,<label>(9)</label></formula><p>where the states and prices during each timespan j are indicated by the superscript (j). Note that we must have ∀ j &gt; 1 that π</p><formula xml:id="formula_23">(j) 0 = π, n<label>(j)</label></formula><p>0 = 1 and ∀ j &lt; m that π (j)</p><formula xml:id="formula_24">Tj = π, n<label>(j)</label></formula><p>Tj = 1. Together with nonnegativity constraints on n (j) t and b (j) t , we thus have the linear inequalities defining the feasible set of hidden states:</p><formula xml:id="formula_25">n (j) t ≥ 0 ∀ j, t b (j) t ≥ 0 ∀ j, t n (j) 0 = 1 ∀ j &gt; 1 n (j) Tj = 1 ∀ j &lt; m.<label>(10)</label></formula><p>We solve the problem of jointly estimating the hidden states X and the model parameters Θ using the EM algorithm, which is a two step iterative algorithm that is guaranteed to converge to a (possibly sub-optimal) solution in terms of the expected log-likelihood <ref type="bibr" target="#b27">[28]</ref>. In the E-step, we estimate the distribution over hidden states given the current estimates of the model parameters Θ; in the M-step, we use these estimated distributions to update the parameter estimates by maximizing the expected log-likelihood. If the estimated state distribution is given as an empirical distribution by sets of samples, the M-step parameter update admits a closed-form solution, as detailed in the Appendix of the technical report <ref type="bibr" target="#b10">[11]</ref>.</p><p>Estimating the distributions of these hidden states is a more challenging task. Although one can extend the Kalman filter to nonlinear dynamical systems via linearization, i.e., using the Extended Kalman Filter <ref type="bibr" target="#b28">[29]</ref> or the Unscented Kalman Filter <ref type="bibr" target="#b29">[30]</ref>, they are likely to perform poorly on our model. The reason is that our spot price observation function ( <ref type="formula" target="#formula_13">6</ref>) is non-smooth and possibly ill-posed (it tends to −∞ as b t → 0), and the fact that we have constraints on the state space <ref type="bibr" target="#b9">(10)</ref>. Therefore, we need to resort to algorithms that support more modeling flexibility. We make use of Sequential Monte Carlo (SMC) methods (i.e. particle filters), which use sample trajectories (particle paths) over time to approximate the hidden state distributions; each sample is weighted by the probability that it generates the observed data <ref type="bibr" target="#b30">[31]</ref>.</p><p>While SMC has been most widely and successfully used in robotics, the low dimensionality of our model means that we only need a small number of particles to well-approximate the hidden state distributions. In Algorithm 1 we describe an SMC algorithm that takes as input an observed series of spot prices at each time slot t and returns K particles that are used to approximate the hidden states X(k) </p><formula xml:id="formula_26">(k) ∝ p (k) • P π t X(k) t if p (k) &lt; then with probability p (k ) assign X(k) t0:t = X(k ) t0:t and p (k) = p (k ) with probability p (k ) assign X(k) t0:t0+L = X(k ) t0:t0+L</formula><p>set new trajectory start time t 0 = t 0 + L L using the dynamical equations ( <ref type="formula" target="#formula_18">7</ref>) and replaces those with negligible probability (below a threshold 1) of generating the observed data with more likely trajectories. To mitigate the sample degeneracy problem in SMC methods, in which eventually only one trajectory is left after resampling, we do not resample the full state history but only up to the past L time slots. Although in the general case this may cause lowprobability transitions between trajectories, this is mitigated in our case by the (usually) slow evolution of the spot price.</p><p>Figure <ref type="figure">2</ref> shows the results of our spot price prediction algorithm and the associated hidden states n t and b t for two instance types in the g2 family. For particle filtering we use K = 10 4 particles, a trajectory length L = 16, and machine precision for . The left figures show the results for a less-volatile general purpose computing instance (m3.medium) while the right figures are those for a GPU instance (g2.2xlarge) with a highly variable spot price From the bottom two figures, we see that our predictions for both configurations closely track the actual spot prices; from the top figures, we observe that the hidden states also track changes in the spot prices. For instance, the spike around March 1 for m3.medium is accompanied by similarly dramatic changes in n t and b t . We further observe that g2.2xlarge has much greater fluctuation in the spot prices with corresponding higher fluctuations in the hidden states, possibly due to a smaller total capacity compared to exogenous demand. Overall these numerical results combined with the dicussion on full capacity-utilization in Section III-A suggest that much of the cloud is usually used by spot users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. BIDDING STRATEGIES FOR INSTANCE FAMILIES</head><p>For many spot users, simply bidding the on-demand price is a reasonable strategy; the spot price is usually lower than the on-demand price, so this limits the number of job interruptions is also much lower. The similarity of the arrival and departure parameters (θ v.s. θ), which implies that requests arrive and jobs complete at roughly similar rates, will be important for the bidding strategies discussed in Section IV.</p><p>while ensuring that completing the job costs less than in the on-demand market. However, this strategy does not necessarily minimize users' costs, particularly if users myopically bid on a given instance type instead of optimizing over other instances in the same family. A better strategy would be to consider the collective behavior of the spot prices over time <ref type="bibr" target="#b9">[10]</ref>, which we do in this section by accounting for their temporal dynamics.</p><p>In this section, we propose bidding strategies that leverage the cloud dynamics model from Section III in a practical setting. We then compare the cost achieved by our approach to that of an auto-regressive baseline approach <ref type="bibr" target="#b8">[9]</ref> and show superior performance across different instance families. Since minimizing the cost of a job is highly dependent on the ability to predict several time slots into the future, these results are indicative of the superior predictive power of our model, compared to the auto-regressive baseline.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Choosing Between Instances</head><p>We consider the following task. Suppose we have instance types indexed by i ∈ [I] for I &gt; 1, each with on-demand price π (i) , and a user at time τ with a job that runs in time T i on instance i. <ref type="foot" target="#foot_0">1</ref> Throughout this section, we use the superscript (i) to index the instance. For simplicity, we assume that the user wishes to start a job immediately, incurs a negligible probability of job interruption (as can be assured by bidding the on-demand price), and has a loose deadline, i.e., the job should be completed by some time &gt; τ + max i∈I T i . The user then wishes to minimize the cost</p><formula xml:id="formula_27">P (i) τ = t+Ti t=τ +1 π (i) t<label>(11)</label></formula><p>needed to complete his job. Given the spot price π (i) τ for each instance type i at time τ , we assume a conditional distribution on the future prices π</p><formula xml:id="formula_28">(i) τ +1 , . . . , π (i)</formula><p>τ +Ti . The optimal strategy is then to choose instance</p><formula xml:id="formula_29">i * τ = arg min i∈I E π (i) τ P (i) τ (12)</formula><p>and bid the on-demand price π (i * ) . Here the subscript π (i) τ denotes the conditional expectation.</p><p>This bidding scenario can readily be applied to a realistic setting in which Amazon EC2 offers a family of machines in the same region <ref type="foot" target="#foot_1">2</ref> . We define a "family" of instances as a set of instance types that emphasize a certain aspect of performance, such as compute optimized c3. * instances, memory optimized r3. * instances, and storage optimized i3. * instances. Instance types in each family offer different amounts of compute, memory, and storage resources in the same ratio, e.g., micro, small, medium, large, xlarge, and 2xlarge. For example, the m3. * family of general computing instances includes types medium, large, xlarge, and 2xlarge, offering 1, 2, 4, and 8 vCPUs, respectively. We can then suppose that jobs' running times increase linearly in the scale of the resources offered, e.g., that we have a perfectly parallelizable job that does not require more memory than available in any m3. * instance. If the job runs in time T on the m3.medium instance, it can be expected to run in times T 2 , T 4 , and T 8 , respectively, on the other instance types in the m3 family. The linear scaling of the on-demand price for these instances with the number of vCPUs (0.067, 0.133, 0.266, and 0.532 US cents, respectively) is consistent with this assumption <ref type="bibr" target="#b31">[32]</ref>.</p><p>More formally, consider a family of instance types indexed by i ∈ [I] in ascending order by number of CPUs the instance contains, where C i ∀ i denotes the scaling of instance i compared to instance 1. Then, if a perfectly parallelizable job runs in time T on instance 1, the cost minimization problem is to find an instance in the family yielding the least cost:</p><formula xml:id="formula_30">i * τ = arg min i∈[I] E π (i) τ P (i) τ = arg min i∈[I] τ + T C i t=τ +1 E π (i) τ π (i) t (13)</formula><p>We now consider three approaches to solving this problem given the spot prices π Monte Carlo Simulation: After we have used EM as in Section III to learn parameter estimates Θi for each instance i, we can directly estimate the distribution of the hidden states n</p><formula xml:id="formula_31">(i) τ , b<label>(i)</label></formula><p>τ at time τ as in Algorithm 1 and then approximate the expectation of each future price E π (i) τ π (i) t by simple Monte Carlo simulation. ( <ref type="formula">13</ref>) can then be solved by substituting these simulated expectations.</p><p>Taylor Approximation: While the above approach most closely follows the cloud dynamics model, under reasonable assumptions on the parameters Θ i that can be empirically observed, we can construct a second-order approximation to E π (i)</p><formula xml:id="formula_32">τ π (i) t</formula><p>that is less noisy and less computationally complex than the Monte Carlo approach:</p><p>Lemma 2: Suppose for some instance i (where with slight abuse of notation, we drop the superscript (i) for simplification) the parameters of the arrival-departure model satisfy θ d ≈ θd and θ s ≈ θ ≈ θs and that the spot price π τ is in the interval (π, π). If we have unbiased estimates nτ of n τ , bτ of b τ , and S 2 τ of (b τ − E πτ (b τ )) 2 then for small enough δ we can approximate the expected spot price at time t = τ + δ by</p><formula xml:id="formula_33">E πτ (π t ) ≈ π − (π − π) 1 − nτ bτ 1 + S 2 τ + 2δ θ 2 b2 τ<label>(14)</label></formula><p>The unbiased estimates of nτ , bτ , and S 2 τ can be found by drawing samples using the approach in Algorithm 1 and taking the first and second sample moments. Furthermore, as noted in Figure <ref type="figure">2</ref>, the values of θ and θ that parameterize the arrival and departure rates, respectively, in the model were found to be roughly the same for tested instances, allowing the approximation for this bidding strategy to be made.</p><p>Since we do not want to bid below the lower bound π, when estimating the expected payment we correct <ref type="bibr" target="#b13">(14)</ref> by taking the maximum of it and π, yielding the following approximation:</p><formula xml:id="formula_34">E π (i) τ P (i) τ ≈ t+ T C i t=τ +1 max π (i) , E π (i) τ π (i) t<label>(15)</label></formula><p>This approximation can then be substituted into <ref type="bibr" target="#b12">(13)</ref> in order to easily find the lowest-cost instance type to pick.</p><p>Linear Auto-Regression: Linear auto-regression (AR) models assume that at all times t, the spot price π (i) t is a linear function of the previous price points along with a mean-zero independent noise term. In our case, given π</p><formula xml:id="formula_35">(i) τ the next step forecast is π (i) τ +1 = c (i) + φ (i) π (i) τ + ε (i) t<label>(16)</label></formula><p>where c (i) and φ (i) are learnable parameters and ε (i) t is white noise. Using this approach, the expected spot price Although the assumptions of this AR model do not hold when the model is applied to spot price data (see Figure <ref type="figure" target="#fig_4">3</ref>), the , where the latter is chosen via the Akaike Information Criterion <ref type="bibr" target="#b32">[33]</ref>. Both models were fit on m3.medium data from the US-East-1 region (zone a). The distributions are clearly skewed and there is correlation between residuals at different timesteps, thus violating two main assumptions on the errors in auto-regression models.</p><p>model is widely used, including to predict spot prices (notably in <ref type="bibr" target="#b8">[9]</ref>) and thus serves as useful baseline for comparison.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Bidding Strategy Evaluation</head><p>We evaluate each of the three bidding strategies introduced in the previous section on 160 days of spot price data. First we train a separate model (either the one in Section III or an AR model) for each instance i in a family of instance [I] on the first half of the spot price data. Then at each timestep τ in the second half of the data, we solve (13) by computing the expected payment needed to finish the job for each instance in the family and taking the one with the lowest value (i.e. i * τ ). Then to compare the cost of the selected instance with that of the best strategy to use in hindsight we look T  Ci steps ahead and compute the a posteriori payment <ref type="bibr" target="#b10">(11)</ref> for each instance type i. Finally, we compare the job completion cost of our bidding strategy compared to that of the best strategy by computing the regret</p><formula xml:id="formula_36">R τ = P (i * τ ) τ − min i∈[I] P (i) τ = T i * τ t=τ +1 π (i * τ ) t − min i∈[I] Ti t=τ +1 π (i) t . (17)</formula><p>Note that R τ = 0 when our bidding strategy succesfully selects the optimal instance type to use hindsight, i.e. when i * τ = arg min</p><formula xml:id="formula_37">i∈[I] P (i)</formula><p>τ , and is positive otherwise.</p><p>We evaluate all three bidding strategies on five popular instance familes and report the average regret over the test data in Table <ref type="table" target="#tab_3">II</ref>, along with plots of relative error for several settings in Figure <ref type="figure" target="#fig_5">4</ref>. From the results we observe that either Monte Carlo simulation or Taylor approximation almost always outperforms the auto regressive baseline (i.e., yields lower average regret), especially on longer timescales (bigger T ). The poor forecasting performance on many instance families by the auto-regression model confirms the analysis in Figure <ref type="figure" target="#fig_4">3</ref> that it is a poor approximation for the evolution of spot prices.</p><p>Our evaluation considers jobs with lowest-configuration runtimes T = 8, 16, 32, and 64. As expected, regret increases  with larger T , when overall payments are also higher. More notably, we find that while Monte Carlo simulation performs well at lower T , at higher T it is usually better to use the Taylor approximation strategy. This is likely because probabilistic simulation becomes more noisy with each additional timestep. Since longer timescales provide more return due to strategic bidding and the Taylor approximation approach requires less computation, it is likely to be preferred for most users.</p><p>To gain a deeper understanding of why our model performs similarly to auto-regression on some instance families (e.g. c3. * ) but consistently better on others (e.g. i3. * ,g2. * ), we plot in Figure <ref type="figure" target="#fig_6">5</ref> kernel density estimates of the distributions over all time of the realized payment for each instance in each of the five families. We see that instance families on which our bidding strategies perform especially well are those with significant overlap in the payment distributions of different instances, in which case there is no single instance type that consistently yields the lowest cost in that family. Unsurprisingly, these instance families also tend to be those whose spot price dynamics are more volatile (see for example the history of g2.2xlarge in Figure <ref type="figure">2</ref>), which are thus also more likely to experience price fluctuations that allow for strategic selection between instances. The fact that our model is especially good at payment prediction in such cases, achieiving 1.7 and 4.7 times lower regret on i.3 * and g.2 * , respectively, is further indication of the forecasting power of the cloud dynamics model as well as the importance of accurate spot price predictions for optimizing user cost, particularly when the spot prices are volatile.</p><p>V. CONCLUSION Cloud spot pricing, as a mechanism for CPs to auction off spare resources at highly reduced prices, creates opportunities not only for CPs to improve resource utilization but also for users to minimize the cost of their jobs with sophisticated bidding strategies. In this work, we first developed a nonlinear dynamical system model to capture the dynamics of spot pricing, by formulating the spot price as a function of latent states characterizing user demands in both on-demand and spot markets. Our model enables us to predict future spot prices on observations of past spot prices. Then, we designed user bidding strategies by leveraging these predictions and trading off between completion time and price dynamics across all instances in the same instance family. These strategies can further lower user costs, as compared to bidding on a single instance type. We validated our dynamic spot price model on 80 days of Amazon EC2's spot price data and simulated our bidding strategies on another 80 days of data. An analysis of our bidding strategies shows that for difficult-to-predict volatile instances we are able to a 4 times larger user cost reduction than auto-regressive forecasting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>b (j) t</head><p>where f µ,ν (x) is the probability density function of the difference of random variables drawn from exponential distributions with parameters µ, ν, which is expressed as</p><formula xml:id="formula_38">f µ,ν (x) = µν µ + ν exp(νx)</formula><p>x &lt; 0 exp(−µx)</p><p>x ≥ 0 and g Σ is the probability density function of a normally distributed random variable with mean zero and covariance Σ. Note that the index restrictions placed above and below the last product sign in the likelihood are to account for states for which the spot price conditioned on the states satisfies π (j) t ∈ {π, π} with probability 1 (following ( <ref type="formula" target="#formula_13">6</ref>)) and which can thus be excluded from the product. Now since in EM we only know the (approximate) distribution over the hidden states, we will be maximizing the expected log-likelihood E X log L Θ (Π, X ). We approximate this expectation by taking average of the log of the above expression over K samples n (j,k) t and b (j,k) t returned by SMC. We apply first-order optimality conditions to find the system solved by the parameter estimates:  The approximately optimal expected log-likelihood is thus  Assuming δ is small enough such that π t ∈ (π, π), we define ε t ∼ N 0, σ 2 bt and apply Equation <ref type="formula" target="#formula_13">6</ref>) along with the independence of the hidden states to get that</p><formula xml:id="formula_39">θd = T K √ n + √ n + + √ n − θd = T K √ n − √ n + + √ n − θs = T K √ b + √ b + + √ b − θs = T K √ b − √ b + + √ b −</formula><formula xml:id="formula_40">E X log L Θ (</formula><formula xml:id="formula_41">E πτ (π t ) = E πτ π − (π − π) 1 − n t b t + ε t = π − (π − π) E πτ 1 − n t b t = π − (π − π) E πτ (1 − n t ) E πτ 1 b t = π − (π − π) (1 − nτ ) E πτ 1 bτ − b t − bτ b2 τ + (b t − bτ ) 2 b3 τ − . . . ≈ π − (π − π) 1 − nτ bτ E πτ 1 − b t − bτ bτ + (b t − bτ ) 2 b2 τ = π − (π − π) 1 − nτ bτ 1 + E πτ (b t − bτ ) 2 b2 τ</formula><p>where we have taken a 2nd-order Taylor approximation of where recall that δ = t − τ and note that 2 θ 2 is the variance of the Laplace distribution with scale parameter 1 θ . Substituting this equation into the previous approximation yields the result.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig.1. Left: Time evolution of m3.medium spot price over 5 months in 2017. Note how the spot price πt is usually less than π (ρ) for ρ = 0.15. Right: Histogram of spot prices gathered from all instance types (normalized to lie within the same price range) from the US-East-1 region (zone a). Most of the mass is below π (ρ) for ρ = 0.15.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>first two are based on the cloud dynamics model introduced in Section III, while the second is a baseline auto-regression model used for comparison.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>time τ + δ can be found by iteratively applying (16) (removing the noise term) to successive estimates π τ , . . . , π τ +δ−1 , and the expected payment E π (i) τ P (i) T C i is then the sum of the resulting estimates.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. Plots of residual distribution (left) and auto-correlation (right) of an AR(1) (top) and an AR(17) (bottom), where the latter is chosen via the Akaike Information Criterion<ref type="bibr" target="#b32">[33]</ref>. Both models were fit on m3.medium data from the US-East-1 region (zone a). The distributions are clearly skewed and there is correlation between residuals at different timesteps, thus violating two main assumptions on the errors in auto-regression models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Relative error of payment estimate on 80 days of spot price data for i3. * (left) and m3. * (right) families and T = 8 (top) and T = 16 (bottom).Note that despite the spot price of the former family being much more volatile the error is still quite small and sharply concentrated around zero.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 5 .</head><label>5</label><figDesc>Distribution of payments for different instance types in five instance</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>T≤ 1 .</head><label>1</label><figDesc>j and R = (j, k) : n (j,k) t + b (j,k) t Solving this system for Θ = {θ d , θd , θ s , θs , σ 2 } yields the following parameter estimates:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>− θd n + + θd n − + θs b + + θs b − K − (T − m + 2)K − R 2K 1 + log 2πσ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Partial Trajectory Particle Filter Data: spot prices π 0 , . . . , π T , model parameters Θ, particle count K, trajectory length L, threshold</figDesc><table><row><cell cols="4">Result: state distribution samples</cell><cell>X(1) 0 , . . . ,</cell><cell>X(K) T</cell><cell>∈ R 2</cell></row><row><cell>begin</cell><cell></cell><cell></cell><cell></cell></row><row><cell>draw state</cell><cell>X(k) 0</cell><cell cols="3">∈ R 2 with probability P π 0</cell><cell>X(k) 0</cell></row><row><cell cols="4">set trajectory start time t 0 = 0</cell></row><row><cell cols="3">while t 0 &lt; T do</cell><cell></cell></row><row><cell cols="5">initialize probabilities p (k) ∝ P π t0</cell><cell>X(k) t0</cell></row><row><cell cols="5">for t = t 0 + 1, . . . , t 0 + 2L do</cell></row><row><cell cols="3">sample state update</cell><cell cols="2">X(k) t</cell><cell>X(k) t−1 using (7)</cell></row><row><cell cols="4">update probabilities p</cell></row></table><note>t ∈ R 2 .The filter computes K trajectories in state space of length Algorithm 1:</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Fig. 2. Evolution of the hidden state estimates (top) and predicted spot price (bottom) for instance types m3.medium (left) and g2.2xlarge (right) in the US-East-1 region (zone a) over 3 months in 2017. Parameter estimates for m3.medium: θ d = 98.6, θd = 94.8, θs = 79.1, θs = 82.2, σ 2 = 3.15 × 10 −6 ; parameter estimates for instance type g2.2xlarge: θ d = 13.0, θd = 12.2, θs = 11.4, θs = 13.1, σ 2 = 2.83 × 10 −3. The larger values of the exponential distribution parameters (θ) for the first instance reflect the lower volatility of the m3.medium instance, which as can be seen from the bottom plots reaches its on-demand price ($0.067) much less than g2.2xlarge reaches its own ($0.65). The spot price observation noise (σ 2 )</figDesc><table><row><cell>no. of request (prop. of N)</cell><cell>1.4 1.2 1.0 0.8 0.6 0.4 0.2 0.0</cell><cell>Feb. 19</cell><cell>date Mar. 19</cell><cell>Apr. 16</cell><cell>no. of request (prop. of N)</cell><cell>2.5 2.0 1.5 1.0 0.5 0.0</cell><cell>Feb. 19</cell><cell>date Mar. 19</cell><cell>Apr. 16</cell></row><row><cell cols="2">0.10</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.4</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">0.08</cell><cell></cell><cell></cell><cell>prediction (95% conf.)</cell><cell></cell><cell>1.2</cell><cell cols="2">prediction (95% conf.)</cell><cell></cell></row><row><cell cols="2">0.06 dollars 0.04</cell><cell></cell><cell></cell><cell></cell><cell>dollars</cell><cell>1.0 0.8 0.6</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">0.02</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">0.00</cell><cell>Feb. 19</cell><cell>date Mar. 19</cell><cell>Apr. 16</cell><cell></cell><cell>0.0</cell><cell>Feb. 19</cell><cell>date Mar. 19</cell><cell>Apr. 16</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE II AVERAGE</head><label>II</label><figDesc>REGRET (IN US CENTS). THE LOWEST REGRET IN EACH INSTANCE FAMILY FOR EACH JOB LENGTH IS BOLDED.</figDesc><table><row><cell>T  *</cell><cell>Bidding Strategy</cell><cell>m3</cell><cell cols="3">Instance Family c3 r3 i3</cell><cell>g2</cell></row><row><cell></cell><cell cols="2">Monte Carlo Simulation 0.68</cell><cell>0.25</cell><cell>0.18</cell><cell>0.21</cell><cell>11.09</cell></row><row><cell>8</cell><cell>Taylor Approximation</cell><cell cols="2">0.97 0.20</cell><cell cols="2">0.59 0.26</cell><cell>12.91</cell></row><row><cell></cell><cell>Auto-Regression [9]</cell><cell cols="3">0.95 0.25 0.33</cell><cell>0.18</cell><cell>17.2</cell></row><row><cell></cell><cell cols="2">Monte Carlo Simulation 1.49</cell><cell>0.43</cell><cell cols="2">0.40 0.50</cell><cell>26.20</cell></row><row><cell>16</cell><cell>Taylor Approximation</cell><cell cols="2">1.89 0.39</cell><cell cols="2">1.11 0.55</cell><cell>52.40</cell></row><row><cell></cell><cell>Auto-Regression [9]</cell><cell cols="4">1.89 0.43 1.00 0.51</cell><cell>77.64</cell></row><row><cell></cell><cell cols="2">Monte Carlo Simulation 2.95</cell><cell>0.55</cell><cell>1.28</cell><cell>1.53</cell><cell>78.94</cell></row><row><cell>32</cell><cell>Taylor Approximation</cell><cell cols="2">3.76 0.54</cell><cell>2.42</cell><cell>0.87</cell><cell>69.88</cell></row><row><cell></cell><cell>Auto-Regression [9]</cell><cell cols="5">3.76 0.55 1.89 1.52 328.10</cell></row><row><cell></cell><cell cols="3">Monte Carlo Simulation 5.86 0.49</cell><cell cols="3">9.78 4.50 234.02</cell></row><row><cell>64</cell><cell>Taylor Approximation</cell><cell cols="5">7.32 0.53 4.77 2.23 180.85</cell></row><row><cell></cell><cell>Auto-Regression [9]</cell><cell>7.32</cell><cell cols="2">0.49 3.11</cell><cell cols="2">2.72 663.39</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note>* Time (in hours) required to run the job to completion on the lowestconfiguration instance in the family.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Under the assumptions θ d ≈ θd and θ s ≈ θ ≈ θs we have that η zero-mean Laplace distributions at all times t , with the distribution of η (s) t having scale parameter 1 θ . Thus by applying Equation 7 repeatedly and the fact that nτ and bτ are unbiased estimators of n τ and b τ , respectively, we have thatE (n τ − n t ) = E nτ − n τ − E bτ − b t = E bτ − b τ −</figDesc><table><row><cell>D. Proof of Lemma 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="6">Proof: (d) t</cell><cell cols="2">= λ (d) t</cell><cell cols="2">−</cell><cell>λ(d) t</cell><cell>and</cell><cell>(s) t</cell><cell>= λ (s) t</cell><cell>−</cell><cell>λ(s)</cell></row><row><cell>t</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">t</cell><cell></cell></row><row><cell cols="3">λ (d) t −</cell><cell>λ(d)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>E η</cell><cell>(d) t</cell><cell>= 0</cell></row><row><cell>t =τ +1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">t =τ +1</cell><cell></cell></row><row><cell>t</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>t</cell><cell></cell><cell></cell></row><row><cell>λ</cell><cell>(s) t −</cell><cell cols="2">λ(s)</cell><cell></cell><cell></cell><cell></cell><cell cols="3">E η t (s)</cell><cell>= 0</cell></row><row><cell>t =τ +1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">t =τ +1</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>2 +</cell><cell>1 2K</cell><cell>K k=1</cell><cell>m j=1</cell><cell cols="3">Tj −1j&lt;m t=1j&gt;1</cell><cell>log b</cell><cell>(j,k) t</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>n</cell><cell cols="2">(j,k) t</cell><cell>+b</cell><cell>(j,k) t</cell><cell>&gt;1</cell></row></table><note>t approximately follow t = E (n τ − n τ ) + t = E bτ − b τ +</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>1 bt around bτ . By the independence of b τ , η</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">(s) τ +1 , . . . , η</cell><cell>(s) t</cell><cell>we have</cell></row><row><cell>E πτ b t − bτ</cell><cell>2 = E πτ b τ +</cell><cell>t t =τ +1</cell><cell>η</cell><cell>(s) t − bτ</cell><cell>2</cell><cell>= E πτ b t − bτ</cell><cell>2 +</cell><cell>t t =τ +1</cell><cell>E πτ η</cell><cell>(s) t</cell><cell>2</cell><cell>= S 2 τ +</cell><cell>2δ θ 2</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">Clearly, jobs on different instance types have different completion times. The exact relationship of time T i on different instances depends on a job's particular resource requirements and the instances' resource configurations.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1">Bidding across regions can lead to high communication latency, which is out of the scope of this paper. If we neglect communication latency, we can optimize across regions by finding the optimal bid and associated expected payment in each region and choosing the one with the least expected payment.</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head><p>Throughout the appendix we will be assuming the cloud provider model as described in Section III. We define the indicator function b≥π = 1 ⇐⇒ b ≥ π and will make use of the following identity that follows from (2):</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Proof Proposition 1</head><p>Proof: By Definition 1 we have ∀ b ∈ B t and any π that if b ∼ U[π, π] then</p><p>) and so it follows that</p><p>for any π t and x. Combining this with the fact that</p><p>&lt; B t , and Z t the event that</p><p>so the second conditional probability is bounded by the first. Combining terms and applying Hoeffding's inequality gives</p><p>and B t , define the random variables X t = 1</p><p>Bt b∈Bt</p><p>and let f Xt and f Yt be their respective probability density functions. Now since</p><p>we have by the Strong Law of Large Numbers that X t and Y t converge almost surely to the same limit as B t → ∞. Therefore using the Bounded Convergence Theorem we have that ∀ x</p><p>Following Equation <ref type="formula">5</ref>and using the above identity we have</p><p>where the random variable Z</p><p>. Then it follows from the previous equalities and the equivalence between convergence in distribution and pointwise convergence of the cumulative density function that</p><p>Rewriting this last expression in terms of the normalizations n t and b t of N (d) t and B t completes the proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Estimating Parameters via Expectation-Maximization</head><p>Given the spot price data Π (8) and the inferred hidden states X (9), the model likelihood given the parameters Θ is expressed as </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Compute Engine Pricing</title>
		<author>
			<persName><forename type="first">Google</forename><surname>Cloud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Platform</forename></persName>
		</author>
		<ptr target="https://cloud.google.com/compute/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Reserved Instances</title>
		<author>
			<persName><forename type="first">Ec2</forename><surname>Amazon</surname></persName>
		</author>
		<ptr target="https://aws.amazon.com/ec2/purchasing-options/reserved-instances/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Spot Instances</title>
		<author>
			<persName><forename type="first">Ec2</forename><surname>Amazon</surname></persName>
		</author>
		<ptr target="https://aws.amazon.com/ec2/spot/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Decentralized task-aware scheduling for data center networks</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">R</forename><surname>Dogar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Karagiannis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ballani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rowstron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGCOMM</title>
				<meeting>of ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Discovering valuations and enforcing truthfulness in a deadline-aware scheduler</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Weinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Joe-Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM</title>
				<meeting>of IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Improving the scalability of data center networks with traffic-aware virtual machine placement</title>
		<author>
			<persName><forename type="first">X</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pappas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM</title>
				<meeting>of IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Multi-objective virtual machine placement in virtualized data center environments</title>
		<author>
			<persName><forename type="first">J</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Fortes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE/ACM GREENCOM-CPSCOM</title>
				<meeting>of IEEE/ACM GREENCOM-CPSCOM</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Preemptible Virtual Machines</title>
		<author>
			<persName><forename type="first">Google</forename><surname>Cloud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Platform</forename></persName>
		</author>
		<ptr target="https://cloud.google.com/preemptible-vms/" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Deconstructing Amazon EC2 spot instance pricing</title>
		<author>
			<persName><forename type="first">O</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Agmon</forename><surname>Ben-Yehuda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ben-Yehuda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tsafrir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Economics and Computation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">16</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">How to bid the cloud</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Joe-Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGCOMM</title>
				<meeting>of ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Learning and leveraging spot price dynamics for bidding strategy optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Khodak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Lan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Joe-Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
		<ptr target="https://1drv.ms/b/s!Aise2pW0Yvrda7t-8QQHaJiJxDc" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Statistical modeling of spot instance prices in public cloud environments</title>
		<author>
			<persName><forename type="first">B</forename><surname>Javadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Thulasiramy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE UCC</title>
				<meeting>of IEEE UCC</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Debunking real-time pricing in cloud computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE/ACM CCGrid</title>
				<meeting>of IEEE/ACM CCGrid</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Prediction of Amazon spot price based on chaos theory using ANFIS model</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Amekraz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Hadi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE/ACS AICCSA</title>
				<meeting>of IEEE/ACS AICCSA</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">How not to bid the cloud</title>
		<author>
			<persName><forename type="first">P</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Irwin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of HotCloud</title>
				<meeting>of HotCloud</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Optimal bids for spot VMs in a cloud for deadline constrained jobs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zafer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE CLOUD</title>
				<meeting>of IEEE CLOUD</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">On estimating minimum bids for Amazon EC2 spot instances</title>
		<author>
			<persName><forename type="first">M</forename><surname>Lumpe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Chhetri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">B</forename><surname>Vo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kowalczyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE/ACM CCGrid</title>
				<meeting>of IEEE/ACM CCGrid</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Decision model for cloud computing under SLA constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Andrzejak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kondo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE MASCOTS</title>
				<meeting>of IEEE MASCOTS</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Performance and reliability effects of multitier bidding on MapReduce in auction-based clouds</title>
		<author>
			<persName><forename type="first">M</forename><surname>Taifi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE SOSE</title>
				<meeting>of IEEE SOSE</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Spotlight: An information service for the cloud</title>
		<author>
			<persName><forename type="first">X</forename><surname>Ouyang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Irwin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE ICDCS</title>
				<meeting>of IEEE ICDCS</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On-demand, spot, or both: Dynamic resource allocation for executing batch jobs in the cloud</title>
		<author>
			<persName><forename type="first">I</forename><surname>Menache</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE ICAC</title>
				<meeting>of IEEE ICAC</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Flexible instance: Meeting deadlines of delay tolerant jobs in the cloud with dynamic pricing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE ICDCS</title>
				<meeting>of IEEE ICDCS</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Online auctions in IaaS clouds: Welfare and profit maximization with server costs</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Lau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGMETRICS</title>
				<meeting>of ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A truthful (1-ε)-optimal mechanism for on-demand cloud resource provisioning</title>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">C</forename><surname>Lau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM</title>
				<meeting>of IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A survey of mathematical models, simulation approaches and testbeds used for research in cloud computing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Sakellari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Loukas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Simulation Modelling Practice and Theory</title>
				<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="92" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">On the viability of a cloud virtual service provider</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Joe-Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">G</forename><surname>Brinton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGMETRICS</title>
				<meeting>of ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Data centers power reduction: A two time scale approach for delay tolerant workloads</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Golubchik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE INFOCOM</title>
				<meeting>of IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Maximum likelihood from incomplete data via the EM algorithm</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Demster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M</forename><surname>Laird</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Rubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Royal Statistical Society. Series B (Methodological)</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="38" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Learning nonlinear dynamical systems using an EM algorithm</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ghahramani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">T</forename><surname>Roweis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of NIPS</title>
				<meeting>of NIPS</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The unscented Kalman filter for nonlinear estimation</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Van Der Merwe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE AS-SPCC</title>
				<meeting>of IEEE AS-SPCC</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Particle filters in robotics</title>
		<author>
			<persName><forename type="first">S</forename><surname>Thrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of UAI</title>
				<meeting>of UAI</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Pricing for amazon emr and amazon ec2 (on-demand)</title>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
		<ptr target="https://aws.amazon.com/emr/pricing" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Information theory and an extension of the maximum likelihood principle</title>
		<author>
			<persName><forename type="first">H</forename><surname>Akaike</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ISIT</title>
				<meeting>of ISIT</meeting>
		<imprint>
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
