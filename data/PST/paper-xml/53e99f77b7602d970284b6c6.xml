<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A new approach to solve hybrid flow shop scheduling problems by artificial immune system</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Orhan</forename><surname>Engin</surname></persName>
							<email>orhanengin@yahoo.com</email>
						</author>
						<author>
							<persName><forename type="first">Alper</forename><surname>Döyen</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Industrial Engineering</orgName>
								<orgName type="institution">Selçuk University</orgName>
								<address>
									<addrLine>Alaaddin Keykubad Campus</addrLine>
									<postCode>42250</postCode>
									<settlement>Konya</settlement>
									<country key="TR">Turkey</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Industrial Engineering Department</orgName>
								<orgName type="institution">Selçuk University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department" key="dep1">Indus-trial Engineering Department of Selçuk University. His main research areas are Scheduling</orgName>
								<orgName type="department" key="dep2">Metaheuristics and Simula-tion</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A new approach to solve hybrid flow shop scheduling problems by artificial immune system</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">E8CD288CD6977DEF5AE3BF52260752C8</idno>
					<idno type="DOI">10.1016/j.future.2004.03.014</idno>
					<note type="submission">Received 30 July 2003; received in revised form 27 February 2004; accepted 5 March 2004</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Hybrid flow shop scheduling</term>
					<term>Artificial immune systems</term>
					<term>Clonal selection</term>
					<term>Experimental design</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Artificial immune system (AIS) is an intelligent problem-solving technique that has been used in scheduling problems for about 10 years. AIS are computational systems inspired by theoretical immunology, observed immune functions, principles and mechanisms in order to solve problems. In this research, a computational method based on clonal selection principle and affinity maturation mechanism of the immune response is used. The n-job, k-stage hybrid flow shop problem is one of the general production scheduling problems. Hybrid flow shop (HFS) problems are NP-Hard when the objective is to minimize the makespan [Two-stage hybrid flowshop scheduling problem, Oper. Res. Soc. 39 (1988) 359]. The research deals with the criterion of makespan minimization for the HFS scheduling problems. The operating parameters of meta-heuristics have an important role on the quality of the solution. In this paper we present a generic systematic procedure which is based on a multi-step experimental design approach for determining the optimum system parameters of AIS. AIS algorithm is tested with benchmark problems. Experimental results show that the artificial immune system algorithm is an effective and efficient method for solving HFS problems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In this study, a new method for solving hybrid flow shop problem is presented. In hybrid flow shop, machines are arranged into s stages in series. In each stage k (k = 1, . . . , s) there are m k identical machines in parallel. Job j, j = 1, . . . , n, has to be processed on any one machine at each stage. Job j has finite processing times in each stage (p 1j, p 2j , . . . , p sj ). Preemption is not allowed and each machine can process at most one operation at a time. The objective is to minimize the makespan. The hybrid flow shop problems have been proved to be NP-Hard <ref type="bibr" target="#b20">[21]</ref> when the objective is to minimize the makespan in case of max(M (1) , M (2) ) &gt; 1.</p><p>M (l ) is the number of machines at the stage l. The Branch &amp; Bound (B&amp;B) and heuristics are the most used methods to solve HFS problems because of the NP-Hard nature of the problem <ref type="bibr" target="#b25">[26]</ref>.</p><p>In the first study on hybrid flow shop <ref type="bibr" target="#b1">[2]</ref>, a B&amp;B method has been proposed. Authors have showed that minimum makespan is attained at least for one member of the set of schedules called preferred schedules. Preferred schedules ensures less searching effort. Later a different B&amp;B algorithm which consists of three parts has been presented <ref type="bibr" target="#b2">[3]</ref>. The three parts of the algorithm are lower bound calculation, branching and node elimination. The LB values found in the study have been improved by Portmann et al. <ref type="bibr" target="#b31">[32]</ref>. In the study, several heuristics have been introduced to compute an initial upper bound and a genetic algorithm (GA) has been implemented to improve the value of upper bound during the search. Global lower bounds for C max minimization have been proposed in <ref type="bibr" target="#b34">[35]</ref>. The global lower bounds can be used to assess the quality of a heuristic solution when the optimal solution is not available. In an effort to restrict the size of the search tree for a B&amp;B, a branching rule has been adopted and 13 heuristic methods have been used to generate an initial lower bound <ref type="bibr" target="#b22">[23]</ref>. In another study to enhance the efficiency of B&amp;B procedures, satisfiability tests and time-bound adjustments based on energetic reasoning and global operations have been implemented <ref type="bibr" target="#b30">[31]</ref>. A new B&amp;B algorithm <ref type="bibr" target="#b27">[28]</ref> has reduced the initial gap between upper and lower bounds to half in a few minutes of running time.</p><p>Gupta and Tunç <ref type="bibr" target="#b21">[22]</ref> developed two polynomial bounded heuristic algorithms to find an acceptable solution in order to minimize makespan. The algorithm could solve a problem with only two stages, where the first stage had only one machine and the second stage allowed multiple identical machines. Later in 1994, they presented four heuristic algorithms to minimize makespan for the problem with separable setup and removal times <ref type="bibr" target="#b23">[24]</ref>. In <ref type="bibr" target="#b14">[15]</ref>, three heuristic algorithms have been presented and their results have been compared. The first two heuristic algorithms have applied the rules used in <ref type="bibr" target="#b4">[5]</ref> and the third one was an extension of <ref type="bibr" target="#b19">[20]</ref>. In <ref type="bibr" target="#b3">[4]</ref>, five heuristics have been tested for their performances of makespan and mean flow time criteria. The effects of problem characteristics and the performance of heuristics have been examined using regression analysis. It has been found that structural characteristics of the problems have greater effect than the type of used heuristics on performance. A real world problem of particular structure (one machine in the first and third stages and two dedicated machines in stage 2) has been considered <ref type="bibr" target="#b32">[33]</ref>. Two heuristic methods have been proposed for this problem. In <ref type="bibr" target="#b29">[30]</ref>, the local search methods, which are used to solve flow shop and job scheduling, were adapted to HFS problems. Search methods were compared and it was resulted that variable-depth and tabu search out-performed other algorithms. Recently, a tabu search algorithm for HFS problem with limited buffer capacities <ref type="bibr" target="#b37">[38]</ref> has been proposed.</p><p>In this study, we present a new search algorithm, which is inspired by vertebrate immune system. The mechanisms of the vertebrate immune system, which give way to the proposed algorithm, are explained in Section 2. Also the artificial immune system studies aimed to solve scheduling problems are reviewed in this section. The proposed AIS algorithm, and the applied parameter optimization method is described in Section 3. In Section 4, we present an extensive computational study with the proposed algorithm. Experiments and the computational results are presented. In Section 5 we conclude the paper with some comments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Artificial immune systems (AISs)</head><p>The operative mechanisms of immune system are very efficient from a computational standpoint. The proposed algorithm in this paper was built on the clonal selection and affinity maturation principles of the immune system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Clonal selection principle</head><p>The immune system mostly consists of the immune cells. The most common type of immune cells are lymphocytes (B-cells and T-cells). Both cells have receptor molecules on their surfaces (the B-cell receptor molecule also called as antibody). These receptor molecules are able to recognize disease causing pathogens. When antigens and receptor molecules have complementary shapes, they can bind together. Once the binding ensures the recognition of the antigen, the immune response proceeds. After an antigen is recognized by immune cell receptors, the antigen stimulates the B-cell to proliferate (divide) and mature into terminal (non-dividing) antibody secreting cells (plasma cells) <ref type="bibr" target="#b10">[11]</ref>. The proliferation in the immune system is succeeded by cell divisions (mitosis). After the proliferation, the system has a clone of cells that are copies of each other. The proliferation rate of a cell is directly proportional to its recognizing degree of the antigen. The immune cell learns by raising the population size and affinity (the degree of the cell recognition with the antigen) of the cells. Also there is another Fig. <ref type="figure" target="#fig_1">1</ref>. The clonal selection principle <ref type="bibr" target="#b10">[11]</ref>.</p><p>way of learning: the effectiveness of the immune response to secondary encounters could be considerably enhanced by storing some high affinity antibody producing cells from the first infection (memory cells), so as to form a large initial clone for subsequent encounters <ref type="bibr" target="#b0">[1]</ref>. This feature of the clonal selection is not integrated into the proposed algorithm, so it will no longer be mentioned in the paper. The whole clonal selection principle has been shown <ref type="bibr" target="#b10">[11]</ref> as in Fig. <ref type="figure" target="#fig_1">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Affinity maturation</head><p>Affinity maturation is the whole mutation processes and selection of the variant offspring that better recognizes the antigen <ref type="bibr" target="#b13">[14]</ref>. The two basic mechanisms of affinity maturation are those: hypermutation and receptor editing <ref type="bibr" target="#b11">[12]</ref>. Random changes (mutations) take place in the variable region genes of antibody molecules. These random changes are mutational events and cause structurally different cells. Occasionally, one such change will lead to an increase for the affinity of the antibody. The mutation processes on lymphocytes are named as somatic hypermutation. The somatic hypermutation rate is inversely proportional to the cell affinity: the higher the affinity a cell receptor has with an antigen the lower the mutation rate and vice versa. By the help of this strategy, the immune system keeps in hand the high affinity offspring cells and also ensures large mutations for the low affinity ones in order to get better affinity cells. Due to the random nature of the somatic mutation processes, a large proportion of mutating genes become non-functional or develop into harmful anti-self specifities. Those cells are eliminated by a programmed death process. However, all cells with low affinities and anti-self specifities are not eliminated. There is a process known as receptor editing: B-cells delete their self-reactive receptors and develop entirely new receptors <ref type="bibr" target="#b10">[11]</ref>. This process of receptor editing may cause a receptor with a better or worse affinity. Point mutations are good for exploring local regions, while editing may rescue immune responses stuck on unsatisfactory local optima <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Using AIS in scheduling</head><p>Similarly to the artificial neural networks which was inspired of nervous system, AIS was developed as a novel computational intelligence approach. AIS are defined as computational systems inspired by theoretical immunology and observed immune functions, principles, and models, applied to problem solving <ref type="bibr" target="#b12">[13]</ref>. The main application domains of AIS are computer and network security <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref>, fault and anomaly detection <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>, optimization <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b36">37]</ref>, data analysis and data mining <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b35">36]</ref> and scheduling <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b33">34]</ref>.</p><p>The efficient mechanisms of immune system (the clonal selection, learning ability, memory, robustness and flexibility) make artificial immune systems useful for scheduling problems. To control a semiconductor production line an AIS approach <ref type="bibr" target="#b26">[27]</ref> has been proposed. The control of the production line was done by a set of agents. Each agent interacted with the production line and with other agents. This system was a copy of the immune system. In <ref type="bibr" target="#b24">[25]</ref>, an AIS approach has been used to solve job shop problems. Problems where each job has associated release and due dates has been used in the study. Their goal was finding schedules that minimizes maximum tardiness. Each solution (a complete schedule) was an antibody. They built a number of libraries. Each library contains a number of genetic strings, each string being a part of solutions to a set of job shop problems. By concatenating strings from each library an antibody (schedule) is constructed. Thousand clones of the best individual found were generated. The clones were mutated and the best clone found was selected as the solution of the problem. The representation of schedules are not different from a GA. Although, in general, AIS algorithms and GAs are similar in representation, they differs in evolutionary processes. In Section 3.2 we described the differences between our AIS algorithm and GA. An AIS model for task allocation in computer systems with the goal of designing a system that is enable to adapt changing conditions is proposed in <ref type="bibr" target="#b33">[34]</ref>. A set of agents which are interacted with the system and themselves were used. An immune-based approach to minimize makespan on parallel processors has been presented in <ref type="bibr" target="#b6">[7]</ref>. Authors defined an affinity function based on makespan values of the schedules. Also they have given a function to calculate the number of clones that would be proliferated. They have compared the performance of their algorithm with other heuristics: longest processing time, multifit, local search and simulated annealing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The algorithm and parameter optimization</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Proposed AIS approach</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1.">Algorithm</head><p>In this study, possible schedules are represented by integer-valued strings of length n (jobs). The n elements of the strings are the jobs which will be sequenced. Therefore, the strings are composed of permutations of n (jobs) elements. Those strings are accepted as antibodies of the AIS. The algorithm goes up to solution by the evolution of these antibodies. Evolution is based on two basic principles of the vertebrate immune system: clonal selection and affinity maturation. The proposed algorithm is presented below: Create a population of A antibodies (A is the parameter of antibody population size):</p><p>For ) change the new created ones with the eliminated ones: while stopping criteria = false:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.">Cloning selection processes of the algorithm</head><p>Each schedule (antibody) has a makespan value that refers to the affinity value of that antibody. Affinity value of each schedule is calculated from the affinity function. The affinity function is defined as</p><formula xml:id="formula_0">Affinity(z) = 1 makespan(z)</formula><p>where z is the considered antibody.</p><p>From the equation, it can be noticed that the lower makespan value equals higher affinity value. In the algorithm, the cloning of antibodies is done directly proportional to their affinity function values, as if it is in the vertebrate immune system.</p><p>We improved a cloning process for the algorithm. The procedure is a special version of the roulette wheel method <ref type="bibr" target="#b18">[19]</ref>. Here, makespan values of schedules are used rather than an objective function value. Opposite to maximization problems, the procedure gives more chance to the ones with lower makespan (C max ) values for selecting and cloning. Therefore, there will be more clones of antibodies that have lower C max values than those of with higher C max values in the new generated clone population.</p><p>The selection probability of each antibody is calculated due to the following procedure: In the algorithm, a fixed size of antibody population was used. Also the generated set of clones has the same size with antibody population. The number of generated clones from each antibody, changes due to the selection probability of antibody. It is expected that the antibodies with greater selection probabilities will have more clone (copy) in the clone set. Because of the fixed size of the clone set, some of the antibodies with high C max values may have no clones in the clone set, while the antibodies with lower C max values may have lots of clones. Inverse mutation. Given a sequence s, let i and j be two positions in the sequence s. A neighbor of s is obtained by inversing the sequence of jobs between i and j positions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3.">Affinity maturation processes of the algorithm</head><p>If the makespan value of the mutated sequence (after inverse mutation) is smaller than that of the original sequence (a generated clone from an antibody), then the mutated one is stored in the place of the original one. Otherwise, the sequence will be mutated again with random pairwise interchange mutation method.</p><p>Pairwise interchange mutation. Given a sequence s, let i and j be randomly selected two positions in the sequence s. A neighbor of s is obtained by interchanging the jobs in positions i and j.</p><p>If the makespan value of the mutated sequence (after pairwise interchange mutation) is smaller than that of the original sequence, then store the mutated one in the place of the original one.</p><p>In the case where the algorithm could not find a better sequence after the two mutation procedure, then it stores the original sequence (generated clone).</p><p>In the inverse mutation phase, the considered sequence is not allowed to be mutated if |j -i| &lt; 2. This constraint maintains a higher mutation rate for inverse mutation than the pairwise interchange mutation, because it allows to change the places of more than two jobs. In the early steps of our algorithm, it is more possible to find a better sequence by employing the inverse mutation, because the algorithm is still far away from the good solutions and the large mutations may cause to find better job sequences. In later steps, the algorithm will have good solutions. The possibility of finding better sequences by the use of large mutations is low, because large mutations may cause to lose good partial job sequences and escape from optimal. Therefore, in the later steps, it is more efficient to make relatively small mutations. In the proposed algorithm, this efficiency is secured by using the pairwise interchange mutation method when the inverse mutation does not give a better solution.</p><p>As described above, by the time, the algorithm secures a decrease in mutation number, contrary to the relatively increase (decrease in makespan values) in affinity function values. As it was explained in Section 2.2; in the vertebrate immune system the mutations on receptor molecules are done inversely proportional to the affinity degree of that receptor molecule. The approach in the algorithm fits well with this mechanism.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3.2.">Receptor editing.</head><p>After cloning and mutation processes, a percentage of the antibodies (worst %B of the whole population) in the antibody population are eliminated and randomly created antibodies are replaced with them. This mechanism is also a vertebrate immune system mechanism, named receptor editing and described in Section 2.2. This mechanism allows to find new schedules that corresponds to new search regions in the total search space. Exploring new search regions may help the algorithm to escape from local optimals.</p><p>The clone set is accepted as an antibody population set for the next generation after these cloning selection, mutation and receptor editing processes. Thus, the clones, which have had the mutation process, are assigned as antibodies for the next generation. In the next generation the clones will be generated from these antibodies. This is succeeded by the statement: antibody = clone in the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Artificial immune system vs. genetic algorithms</head><p>Both AIS and GA are population based, evolutionary and biologically inspired algorithms. In <ref type="bibr" target="#b13">[14]</ref>, it is stated that designing a computationally inspired algorithm requires, at least, the following elements:</p><p>• A representation for the components of the system, • A set of mechanisms to evaluate the interaction of individuals with the environment and each other (fitness functions, affinity functions, etc.), • Procedures of adaptation. These are algorithms that govern the dynamics of the system, such as evolution, mutation.</p><p>There is no difference between a chromosome in a GA and an antibody in the AIS, thus they do not differ in representation of the components. Also, GA have a fitness function and, similarly, AIS have an affinity function to evaluate the quality of each individual. But their evolutionary search procedures differ from each other. Here, we point out the differences between our AIS approach and a GA in the following paragraphs.</p><p>First of all, reproduction and selection of new generations are different. In a standart GA, crossover and mutation are the basic tools for creating new solutions, in AIS it is achieved by cloning and mutating antibodies due to their affinity function values. In GA, reproductive parents are selected due to their fitness values, they are crossovered and new offsprings are created. Differentiation is mostly achieved by crossovering. After applying mutation operator, individuals for the next generation are selected from the whole population.</p><p>In the proposed AIS algorithm, the antibodies are cloned due to their selection probabilities, thus the number of clones for each antibody differs in the clone set. The clone set has the same number of individuals with the original antibody set, thus some of the worse antibodies may not be represented in the clone set, while some of the better antibodies may be represented by several clones. Mutation is applied to the clones in the clone set. If mutation results a better string, then mutation is accepted (mutated string replaces with the clone), else the clone remains with no change. Then these mutated clones are replaced with the original antibodies and accepted as new generation individuals.</p><p>In AIS, mutations are immediately tested for acceptance or rejection, rather than a phase where a new generation is selected as in GA.</p><p>In the proposed algorithm, when compared with GA, it takes into account affinity values, in order to define the mutation rate. It may not be permitted to apply any mutations to a high affinity antibody and also it is more encouraged to apply larger mutations to low affinity ones. In a standart GA, the mutation rate does not change for different individuals, usually it is a constant rate for each individual.</p><p>Probably, the most remarkable characteristic of the algorithm is using the mutation rate as a self-adapting parameter, similarly as in natural immune system. In the logic of the algorithm, the mutation number decreases contrary to the relative increase in affinity function values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Multi-step experimental design approach-MSEDA</head><p>For obtaining optimal or near-optimal solutions of any combinatorial optimization problem in the shortest time, one should use the optimal set of parameters. In this study, the parameters of the AIS algorithm were improved by multi-step experimental design approach <ref type="bibr" target="#b15">[16]</ref>. The experimental design uses an orthogonal array (OA) which prescribes series of trials to perform. In our algorithm, there are two parameters which affect the solution. These variable factors (parameters) that were used at two levels L4 OA are: size of antibody population (A) and elimination ratio of antibodies (B). In Table <ref type="table" target="#tab_1">1</ref>, the L4 is presented.</p><p>In this study, all possible combinations of A and B factors at each of the levels 1 and 2, were tested as a full factorial experiment. The lower and upper bounds of parameter ranges corresponds to the factor levels. The ranges of each used parameter are given in Table <ref type="table">2</ref>.</p><p>The used MSEDA for determining the optimal parameter set is explained as follows:</p><p>• Step 1: Quadripartite the whole range for each parameter and, take the end points of the first and the third quadriparts as the levels of first step of the experimental design.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Parameter optimization for AIS</head><p>The benchmark problems given in <ref type="bibr" target="#b5">[6]</ref> are considered in the study. The problem sizes varies from 10 job × 5 stages to 15 job × 10 stages. Processing times have a uniform distribution in the range of <ref type="bibr" target="#b2">(3,</ref><ref type="bibr" target="#b19">20)</ref>. Three characteristics that define a problem are no. of jobs, no. of stages and no. of identical machines at each stage. Total 77 problems are classified into 13 groups according to their characteristics. An instance problem was taken from each of the groups. Parameter optimization was implemented and best parameter set was found for the instance. The parameter set found for an instance was generalized and used for other problems in the same group. Therefore, parameter optimization was implemented for 13 instances.</p><p>For each of the instances, four trials were implemented due to the L4 OA. Each trials were run five times for each step. For each of the problems the MSEDA was proceeded until the algorithm stops. Thus, for each of the problems different number of iterations were implemented. Totally, 39 iterations were implemented among the 13 problems. A total of 5 × 4 × 39 = 780 runs were made among the 13 problems.</p><p>For each of the problems, the MSEDA was applied to obtain efficient parameter sets. A sample implementation for j15c5a2 problem is shown in Table <ref type="table" target="#tab_2">3</ref>. In each step, the trial with minimum mean C max value is selected and SRLP procedure is applied to its parameter set. If the mean C max values for all of the trials are equal then mean CPU times are considered as performance measurement. SRLP limits the half of the search range for each parameter in each step. The half range which contains the effective level for any parameter is limited to a new search. The effective half range is quadripartited for each parameter, and the end points of the first and the third quadriparts are taken as the levels of the new experiment. This procedure continues until average of mean values that belongs to four trials (AMEV) of the current step becomes higher than the prior step's AMEV. The parameter set of the trial with the lowest mean value in the last decreasing step is accepted as the efficient parameter set.</p><p>In the beginning (first step) parameter A ranged from 1 to 50 and parameter B ranged from 1 to 100. After the whole ranges for each parameter were quadripartited, the end points of the first and third quadriparts were taken as the first and second level of the experimental design (for parameter A, the levels were 13 and 38, for parameter B, the levels were 25 and 75). Four trials were prepared due to L4 OA. After five runs for each of the trials, the second trial which corresponds to 1-2 (13-75) parameter levels gave the minimum mean. Afterwards, the SRLP procedure was applied to that parameter set, new parameter levels for the following step were obtained. For parameter A, the effective level was chosen as 13. The search range was lowered to 1-25 as 13 was the mid-point of the range. This new range was quadripartited and new levels were determined (which were 7 and 19). Similarly, for the parameter B also the new levels were determined for the second step experimental design. This process was proceeded until there was an increase in the average of mean values of the four trials (AMEV). In each step for each of the trials the optimal C max value was found (152), so that the mean CPU times were chosen as performance measurement. The average of mean CPU times were taken as AMEV value for each step. From Table <ref type="table" target="#tab_2">3</ref>, it is seen that the fourth step AMEV is higher than the third step AMEV, so process is stopped here. The parameter set of the trial with the lowest mean value in the third step (this was the first trial) was taken as the efficient parameter set (this parameter set is  for that instance problem.</p><p>This instance problem; j15c5b2, is a 15 job, 5 stages and b type problem. The found efficient parameter set would be used for other instances in the same group problems. In Table <ref type="table" target="#tab_3">4</ref>, for j15c5b2 instance, the best parameter set found in each step is seen in bold letters.</p><p>It should be noted that, in the fourth step the AMEV was increased, so that best parameter set of the previous step was accepted as the efficient parameter set which was 16-82.</p><p>For all problems and all steps a multivariate variance analysis was implemented to investigate parameter interactions. Tests were done with 5% significance level. Only in one step (step 2 of the j10c5c5 problem) of the total 39 steps, it was seen that the two parameters have meaningful interaction. This is a strong evidence of no interaction between the two parameters. The observed one interaction is related with the stochastic structure of the problem. Therefore, param-eter interactions were not considered in the parameter optimization study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Experiments and results</head><p>The test problems used in experiments are the benchmark problems which are presented in <ref type="bibr" target="#b5">[6]</ref>. Same problems were also studied by Neron et al. <ref type="bibr" target="#b30">[31]</ref>. They used a branch and bound method which was improved with the use of satisfability tests and time-bound adjustments. They limited their algorithm with 1600 s. If an optimal solution was not found within 1600 s, the search was stopped and the best solution was accepted as the final schedule. They calculated lower bounds of the problems and the relative gap from lower bounds (LBs) for the non-optimally solved instances.</p><p>In our study, we also used the lower bounds which they computed and calculated the percentage deviation from LB which is calculated as</p><formula xml:id="formula_1">% Deviation = Best C max -Lower Bound Lower Bound</formula><p>We received the solution files of <ref type="bibr" target="#b30">[31]</ref> from the authors to make a comparison with our solutions. We also run our algorithm for 1600 s and accepted the solution which was reached so far as the best C max value. In Table <ref type="table" target="#tab_4">5</ref> , for all the 77 problems, the best C max values and CPU times that are resulted by our proposed AIS algorithm and the B&amp;B methods of Neron et al. <ref type="bibr" target="#b30">[31]</ref> are presented. The lower bounds and % deviations from lower bounds are given at the last two columns. As it will be noticed from the table, for a and b type problems more better results have been found than c and d type problems. The machine configurations have an important effect on complexity of problems that affects solution quality. Thus we analyzed the problems due to machine configurations. As it is seen in Table <ref type="table" target="#tab_4">5</ref>; AIS algorithm has found the optimal solutions for all the a and b type problems (47 problems), although B&amp;B <ref type="bibr" target="#b30">[31]</ref> has found for 46 problems. c and d type problems are relatively hard problems not respect to problem size. In <ref type="bibr" target="#b30">[31]</ref>, they grouped some of the problems as hard problems. For these problems, they could not reach the optimal solutions in a short time. The difference of these problems is mainly sourced from their machine configurations (all these problems are c or d type problems). There are 24 problems in that There are 53 easy problems. Both of the methods could not reach to LB values for six of the problems. But average % deviation from LB for AIS algorithm is more smaller than B&amp;B method. In Table <ref type="table" target="#tab_5">6</ref>, the percentage of optimally (or reached to LBs) solved problems (% solved) and the average % deviation values for easy and hard problems are presented.</p><p>If all problems are considered; the average deviation of AIS algorithm is 1.657% while the average deviation of B&amp;B is 3.6%. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions</head><p>In the paper, firstly the vertebrate immune system mechanisms, which give inspiration to AIS as a problem-solving technique, were presented. Using the given theoretic knowledge an AIS algorithm was coded to solve the hybrid flow shop scheduling problem with the objective of minimizing makespan. The considered problem is a NP-Hard problem. Most of the studies to solve that problem are approximate methods rather than an exact method, which guarantees optimal solution. The test problems were benchmarking problems used in literature. The percentage deviations from lower bounds were calculated. The findings were compared with another study that tested same problems. We resulted better solutions with the proposed AIS algorithm. The proposed AIS algorithm is a good problem-solving technique for a scheduling problem and may be used for some other industrial problems.</p><p>Some changes may be done in the cloning (e.g. selection procedure may be improved) and mutation procedures or the algorithm may be hibritted with another method to improve solution quality. To determine the cloning and mutation ratios optimally in a dynamic environment while the algorithm is running, learning algorithms or evolutionary algorithms (e.g. genetic algorithms) may be used. In spite of deleting worse antibodies, a tabu list may be integrated with the algorithm not to lose those antibodies. And fuzzy logic may be integrated with AIS to get more effective systems that can work with non-exact affinity function values.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>(a) For each antibody in the population calculate the makespan value, (b) Find the maximum makespan value (Max C max ), (c) For each antibody calculate the fitness value which is presented as fitness value = (Max C max + 1) makespan of antibody (d) For each antibody find the selection probability. Selection probability is given as fitness value of antibody total of fitness values of antibodies in the population</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>3. 1</head><label>1</label><figDesc>.3.1. Mutations. A two phased mutation procedure was used. The generated clones undergo an inverse mutation procedure at first.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>• Step 2 :</head><label>2</label><figDesc>Solve the problem five times by using L4 orthogonal design-parameter set determined in Step 1. • Step 3: Select the best parameter set depending on the mean values of makespans (or CPU times) for 5 solutions from 4 experiments. • Step 4: For each parameter in the best parameter set apply the search range limitation procedure (SRLP) for determining the new parameter set as shown in Fig. 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .• Step 5 :</head><label>25</label><figDesc>Fig. 2. Search range limitation procedure (SRLP).</figDesc><graphic coords="7,74.00,421.02,390.96,219.31" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell>L4 OA for experiments</cell><cell></cell><cell></cell></row><row><cell>Trial no.</cell><cell>A</cell><cell>B</cell></row><row><cell>1</cell><cell>1</cell><cell>1</cell></row><row><cell>2</cell><cell>1</cell><cell>2</cell></row><row><cell>3</cell><cell>2</cell><cell>1</cell></row><row><cell>4</cell><cell>2</cell><cell>2</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>Implementation of MSEDA for j15c5b2 problem</figDesc><table><row><cell>Trial no.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4</head><label>4</label><figDesc>The best parameter sets of each phase of experimental design for j15c5b2 problem</figDesc><table><row><cell>Step</cell><cell>No. of trial with</cell><cell>Average of mean</cell><cell>A</cell><cell>B</cell></row><row><cell></cell><cell>min. mean value</cell><cell>values of trials</cell><cell></cell><cell></cell></row><row><cell>1</cell><cell>2</cell><cell>2.5564188</cell><cell>13</cell><cell>25</cell></row><row><cell></cell><cell></cell><cell></cell><cell>38</cell><cell>75</cell></row><row><cell>2</cell><cell>4</cell><cell>1.9110375</cell><cell>7</cell><cell>63</cell></row><row><cell></cell><cell></cell><cell></cell><cell>19</cell><cell>88</cell></row><row><cell>3</cell><cell>1</cell><cell>1.3579063</cell><cell>16</cell><cell>82</cell></row><row><cell></cell><cell></cell><cell></cell><cell>22</cell><cell>94</cell></row><row><cell>4</cell><cell>3</cell><cell>2.1008313</cell><cell>15</cell><cell>79</cell></row><row><cell></cell><cell></cell><cell></cell><cell>18</cell><cell>85</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5</head><label>5</label><figDesc>Solutions of test problems (bold represented problems are hard problems) (the c and d types of 10×5 and 15×5 problems). The rest of the problems (all a, b types and 10 × 10 c type problems) are referred as easy problems.For hard problems, the proposed AIS algorithm found LB value for 17 of the 24 problems, although B&amp;B reached to LB values in 18 problems. But average % deviation from LB for AIS algorithm is much smaller than B&amp;B method.</figDesc><table><row><cell>Problem</cell><cell>AIS</cell><cell></cell><cell>B&amp;B</cell><cell></cell><cell>LB of C max</cell><cell>% Deviation</cell><cell></cell></row><row><cell></cell><cell>C max</cell><cell>CPU</cell><cell>C max</cell><cell>CPU</cell><cell></cell><cell>AIS</cell><cell>B&amp;B</cell></row><row><cell>j10c5a2</cell><cell>88</cell><cell>1</cell><cell>88</cell><cell>13</cell><cell>88</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5a3</cell><cell>117</cell><cell>1</cell><cell>117</cell><cell>7</cell><cell>117</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5a4</cell><cell>121</cell><cell>1</cell><cell>121</cell><cell>6</cell><cell>121</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5a5</cell><cell>122</cell><cell>1</cell><cell>122</cell><cell>11</cell><cell>122</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5a6</cell><cell>110</cell><cell>4</cell><cell>110</cell><cell>6</cell><cell>110</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5b1</cell><cell>130</cell><cell>1</cell><cell>130</cell><cell>13</cell><cell>130</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5b2</cell><cell>107</cell><cell>1</cell><cell>107</cell><cell>6</cell><cell>107</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5b3</cell><cell>109</cell><cell>1</cell><cell>109</cell><cell>9</cell><cell>109</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5b4</cell><cell>122</cell><cell>2</cell><cell>122</cell><cell>6</cell><cell>122</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5b5</cell><cell>153</cell><cell>1</cell><cell>153</cell><cell>6</cell><cell>153</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5b6</cell><cell>115</cell><cell>1</cell><cell>115</cell><cell>11</cell><cell>115</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5c1</cell><cell>68</cell><cell>32</cell><cell>68</cell><cell>28</cell><cell>68</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5c2</cell><cell>74</cell><cell>4</cell><cell>74</cell><cell>19</cell><cell>74</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5c3</cell><cell>72</cell><cell>a</cell><cell>71</cell><cell>240</cell><cell>71</cell><cell>1.4</cell><cell>0</cell></row><row><cell>j10c5c4</cell><cell>66</cell><cell>3</cell><cell>66</cell><cell>1017</cell><cell>66</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5c5</cell><cell>78</cell><cell>14</cell><cell>78</cell><cell>42</cell><cell>78</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5c6</cell><cell>69</cell><cell>12</cell><cell>69</cell><cell>4865 b</cell><cell>69</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5d1</cell><cell>66</cell><cell>5</cell><cell>66</cell><cell>6490 b</cell><cell>66</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5d2</cell><cell>73</cell><cell>31</cell><cell>73</cell><cell>2617 b</cell><cell>73</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5d3</cell><cell>64</cell><cell>15</cell><cell>64</cell><cell>481</cell><cell>64</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5d4</cell><cell>70</cell><cell>5</cell><cell>70</cell><cell>393</cell><cell>70</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5d5</cell><cell>66</cell><cell>1446</cell><cell>66</cell><cell>1627 b</cell><cell>66</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c5d6</cell><cell>62</cell><cell>8</cell><cell>62</cell><cell>6861 b</cell><cell>62</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10a1</cell><cell>139</cell><cell>1</cell><cell>139</cell><cell>41</cell><cell>139</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10a2</cell><cell>158</cell><cell>18</cell><cell>158</cell><cell>21</cell><cell>158</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10a3</cell><cell>148</cell><cell>1</cell><cell>148</cell><cell>58</cell><cell>148</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10a4</cell><cell>149</cell><cell>2</cell><cell>149</cell><cell>21</cell><cell>149</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10a5</cell><cell>148</cell><cell>1</cell><cell>148</cell><cell>36</cell><cell>148</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10a6</cell><cell>146</cell><cell>4</cell><cell>146</cell><cell>20</cell><cell>146</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10b1</cell><cell>163</cell><cell>1</cell><cell>163</cell><cell>36</cell><cell>163</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10b2</cell><cell>157</cell><cell>1</cell><cell></cell><cell>66</cell><cell>157</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10b3</cell><cell>169</cell><cell>1</cell><cell>169</cell><cell>19</cell><cell>169</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10b4</cell><cell>159</cell><cell>1</cell><cell>159</cell><cell>20</cell><cell>159</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10b5</cell><cell>165</cell><cell>1</cell><cell>165</cell><cell>33</cell><cell>165</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10b6</cell><cell>165</cell><cell>1</cell><cell>165</cell><cell>34</cell><cell>165</cell><cell>0</cell><cell>0</cell></row><row><cell>j10c10c1</cell><cell>115</cell><cell>a</cell><cell>127</cell><cell>c</cell><cell>113</cell><cell>1.8</cell><cell>12.4</cell></row><row><cell>j10c10c2</cell><cell>119</cell><cell>a</cell><cell>116</cell><cell>1100</cell><cell>116</cell><cell>2.6</cell><cell>0</cell></row><row><cell>j10c10c3</cell><cell>116</cell><cell>a</cell><cell>133</cell><cell>c</cell><cell>98</cell><cell>18.4</cell><cell>35.7</cell></row><row><cell>j10c10c4</cell><cell>120</cell><cell>a</cell><cell>135</cell><cell>c</cell><cell>103</cell><cell>16.5</cell><cell>31.1</cell></row><row><cell>j10c10c5</cell><cell>126</cell><cell>a</cell><cell>145</cell><cell>c</cell><cell>121</cell><cell>4.1</cell><cell>19.8</cell></row><row><cell>j10c10c6</cell><cell>106</cell><cell>a</cell><cell>112</cell><cell>c</cell><cell>97</cell><cell>9.3</cell><cell>15.5</cell></row><row><cell>j15c5a1</cell><cell>178</cell><cell>1</cell><cell>178</cell><cell>18</cell><cell>178</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5a2</cell><cell>165</cell><cell>1</cell><cell>165</cell><cell>35</cell><cell>165</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5a3</cell><cell>130</cell><cell>1</cell><cell>130</cell><cell>34</cell><cell>130</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5a4</cell><cell>156</cell><cell>2</cell><cell>156</cell><cell>21</cell><cell>156</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5a5</cell><cell>164</cell><cell>1</cell><cell>164</cell><cell>34</cell><cell>164</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5a6</cell><cell>178</cell><cell>1</cell><cell>178</cell><cell>38</cell><cell>178</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5b1</cell><cell>170</cell><cell>1</cell><cell>170</cell><cell>16</cell><cell>170</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5b2</cell><cell>152</cell><cell>1</cell><cell>152</cell><cell>25</cell><cell>152</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5b3</cell><cell>157</cell><cell>1</cell><cell>157</cell><cell>15</cell><cell>157</cell><cell>0</cell><cell>0</cell></row><row><cell>j15c5b4</cell><cell>147</cell><cell>1</cell><cell>147</cell><cell>37</cell><cell>147</cell><cell>0</cell><cell>0</cell></row></table><note><p>a AIS could not reach LB value in 1600 s. b B&amp;B reaches LB value more than 1600 s. c B&amp;B could not reach LB value, B&amp;B CPU. group</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6</head><label>6</label><figDesc>Performances of the two methods</figDesc><table><row><cell cols="3">Method Easy problems</cell><cell cols="2">Hard problems</cell></row><row><cell></cell><cell cols="4">% Solved % Deviation % Solved % Deviation</cell></row><row><cell>AIS</cell><cell>88.7</cell><cell>0.99</cell><cell>66.7</cell><cell>3.13</cell></row><row><cell>B&amp;B</cell><cell>88.7</cell><cell>2.17</cell><cell>70.8</cell><cell>6.88</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors would like to thank Jacques Carlier and Emmanuel Neron for the benchmark problems, solution files and any kind of help.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>He received the MS and PhD degrees from İstanbul Technical University. His main research areas are Scheduling, Metaheuristics and Quality Control.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The clonal selection theory</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Ada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sci. Am</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="50" to="57" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An extension of two machines sequencing problem</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Arthanari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Ramamurthy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Opsearch</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="10" to="22" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Branch and bound algorithm for the flow shop with multiple processors</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Brah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Hunsucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="88" to="99" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Heuristics for scheduling in a flow shop with multiple processors</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Brah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Loo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">113</biblScope>
			<biblScope unit="page" from="113" to="122" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A heuristic algorithm for the n-job, m-machine sequencing problem</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">G</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Dudek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manage. Sci. B</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="630" to="637" />
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">An exact method for solving the multiprocessor flowshop, R.A.I</title>
		<author>
			<persName><forename type="first">J</forename><surname>Carlier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Neron</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="1" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Makespan minimization on parallel processors: an immune based approach</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Costa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Vargas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Von Zuben</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>França</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Special Sessions on Artificial Immune Systems in the 2002 Congress on Evolutionary Computation</title>
		<meeting>the Special Sessions on Artificial Immune Systems in the 2002 Congress on Evolutionary Computation<address><addrLine>Honolulu, Hawaii</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="115" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Novelty detection in time series data using ideas from immunology</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Forrest</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ISCA&apos;96</title>
		<meeting>the ISCA&apos;96<address><addrLine>Reno, Nevada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">June 19-21, 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Artificial immune systems in industrial applications</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Forrest</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second International Conference on Intelligent Processing and Manufacturing Materials (IPMM)</title>
		<meeting>the Second International Conference on Intelligent Processing and Manufacturing Materials (IPMM)<address><addrLine>Honolulu</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">July 10-15, 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Artificial immune systems, Part 1, Basic theory and applications</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>De Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Von Zuben</surname></persName>
		</author>
		<idno>TR-DCA 01/99</idno>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The clonal selection algorithm with engineering applications</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>De Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Von Zuben</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on GECCO 2000</title>
		<meeting>the Workshop on GECCO 2000<address><addrLine>Las Vegas</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">July 8-12, 2000</date>
			<biblScope unit="page" from="36" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Learning and optimization using the clonal selection principle</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>De Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Von Zuben</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput., Special Issue on Artif. Immune Syst</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="239" to="251" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Artificial immune systems: a novel paradigm for pattern recognition</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>De Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">I</forename><surname>Timmis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Artificial Neural Networks in Pattern Recognition</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Alonso</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Corchado</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Fyfe</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="67" to="84" />
		</imprint>
		<respStmt>
			<orgName>University of Paisley</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Artificial immune systems as a novel soft computing paradigm</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>De Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">I</forename><surname>Timmis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soft Comput. J</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="526" to="544" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Heuristics for scheduling flexible flow lines</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">Y</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kittichartphayak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Ind. Eng</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="27" to="34" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A systematic procedure for setting ant system parameters</title>
		<author>
			<persName><forename type="first">A</forename><surname>Figlalı</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Engin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">A</forename><surname>Figlalı</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Fuzzy Systems and Soft Computational Intelligence in Management and Industrial Engineering</title>
		<meeting>the International Conference on Fuzzy Systems and Soft Computational Intelligence in Management and Industrial Engineering<address><addrLine>İstanbul, Turkey</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="342" to="351" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Self-nonself discrimination in a computer</title>
		<author>
			<persName><forename type="first">S</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Allen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cherukuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Research in Security and Privacy</title>
		<meeting>the IEEE Symposium on Research in Security and Privacy<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="202" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Engineering an immune system</title>
		<author>
			<persName><forename type="first">S</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Hoffmeyr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graft</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="5" to="9" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<title level="m">Genetic Algorithms in Search Optimization and Machine Learning</title>
		<meeting><address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A functional heuristic algorithm for the n-job, m-machine flow shop problem</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Quart</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="39" to="47" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Two-stage hybrid flowshop scheduling problem</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="359" to="364" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Schedules for a two stage hybrid flowshop with parallel machines at the second stage</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Tunç</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Prod. Res</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1489" to="1502" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Scheduling a two stage hybrid flow shop with parallel machines at the first stage</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M A</forename><surname>Hariri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">N</forename><surname>Potts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="171" to="191" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Scheduling a two-stage hybrid flow shop with separable setup and removal times</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">A</forename><surname>Tunç</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="415" to="428" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Producing robust schedules via an artificial immune system</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Nelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ICEC&apos;98</title>
		<meeting>the ICEC&apos;98<address><addrLine>Anchorage, AK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-09">May 5-9, 1998</date>
			<biblScope unit="page" from="464" to="469" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hybrid flow shop scheduling: a survey</title>
		<author>
			<persName><forename type="first">R</forename><surname>Linn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Ind. Eng</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="57" to="61" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Artificial immunity based management system for a semiconductor production line</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tsukiyama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Fukuda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Systems, Man and Cybernetics Conference</title>
		<meeting>the IEEE Systems, Man and Cybernetics Conference</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="851" to="855" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Branch and bound algorithm for the hybrid flowshop</title>
		<author>
			<persName><forename type="first">O</forename><surname>Moursli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">A</forename><surname>Pochet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Prod. Econ</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="113" to="125" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The promise and challenges of artificial immune system based web-usage mining: preliminary results</title>
		<author>
			<persName><forename type="first">O</forename><surname>Nasaroui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gonzales</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Web Analytics at Second SIAM International Conference on Data Mining (SDM)</title>
		<meeting>the Workshop on Web Analytics at Second SIAM International Conference on Data Mining (SDM)<address><addrLine>Arlington, VA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">April 11-13, 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Local search algorithms for the multiprocessor flow shop scheduling problem</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Negenmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">128</biblScope>
			<biblScope unit="page" from="147" to="158" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Solving hybrid flow shop problem using energetic reasoning and global operations</title>
		<author>
			<persName><forename type="first">E</forename><surname>Neron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Baptiste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Omega</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="501" to="511" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Branch and bound crossed with GA to solve hybrid flowshops</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Portmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vignier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dardilhac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dezalay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">107</biblScope>
			<biblScope unit="page" from="389" to="400" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A hybrid three-stage flowshop problem: efficient heuristics to minimize makespan</title>
		<author>
			<persName><forename type="first">F</forename><surname>Riane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Artiba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Elmaghraby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">109</biblScope>
			<biblScope unit="page" from="321" to="329" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">An artificial immune system model for task allocation</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Russ</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lambert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rajan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Reese</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on High Performance Distributed Computing</title>
		<meeting>the Symposium on High Performance Distributed Computing<address><addrLine>CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-06">August 3-6. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Global lower bounds for flow shops with multiple processors</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Hunsucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Deal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="112" to="120" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A resource limited artificial immune system for data analysis</title>
		<author>
			<persName><forename type="first">J</forename><surname>Timmis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Research and Development in Intelligent Systems XVII, Proceedings of the ES2000</title>
		<meeting><address><addrLine>Cambridge, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="19" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Searching for memory in artificial immune system</title>
		<author>
			<persName><forename type="first">K</forename><surname>Trojanowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">T</forename><surname>Wierzchon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th International Symposium on Intelligent Information Systems</title>
		<meeting>the 11th International Symposium on Intelligent Information Systems</meeting>
		<imprint>
			<date type="published" when="2002">June 3-6, 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Tabu search algorithm for the multi-stage parallel machine problem with limited buffer capacities</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wardono</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">A</forename><surname>Fathi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">155</biblScope>
			<biblScope unit="page" from="380" to="401" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
