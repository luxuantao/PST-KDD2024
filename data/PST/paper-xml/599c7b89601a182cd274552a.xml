<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Teaching Programming with Gamified Semantics</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ian</forename><surname>Arawjo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Information Science</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Cheng-Yao</forename><surname>Wang</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Cornell University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Andrew</forename><forename type="middle">C</forename><surname>Myers</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Cornell University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Erik</forename><surname>Andersen</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Cornell University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">François</forename><surname>Guimbretière</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Information Science</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Teaching Programming with Gamified Semantics</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">39D0BB75E545FAB73AEC38EFA61017F0</idno>
					<idno type="DOI">10.1145/3025453.3025711</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>K.3.2 Computer and Information Science Education: Computer Science Education</term>
					<term>K.8.0 Personal Computing: Games Educational games</term>
					<term>block-based programming</term>
					<term>concreteness fading</term>
					<term>novice programming</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Dominant approaches to programming education emphasize program construction over language comprehension. We present Reduct, an educational game embodying a new, comprehension-first approach to teaching novices core programming concepts which include functions, Booleans, equality, conditionals, and mapping functions over sets. In this novel teaching strategy, the player executes code using reductionbased operational semantics. During gameplay, code representations fade from concrete, block-based graphics to the actual syntax of JavaScript ES2015. We describe our design rationale and report on the results of a study evaluating the efficacy of our approach on young adults (18+) without prior coding experience. In a short timeframe, novices demonstrated promising learning of core concepts expressed in actual JavaScript. We also present results from an online deployment. Finally, we discuss ramifications for the design of future computational thinking games.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>There is a long tradition of constructionist approaches to teaching programming languages. Perhaps the most famous example is the language LOGO, introduced by Seymour Papert <ref type="bibr" target="#b62">[61]</ref>. While specifics vary, these approaches focus on providing an engaging, interactive environment fostering selfdiscovery of basic programming concepts by trial and error. Some recent educational systems that take this approach are Alice <ref type="bibr" target="#b23">[24]</ref> and Scratch <ref type="bibr" target="#b71">[70]</ref>. Constructionist approaches have achieved widespread adoption in introductory programming classes <ref type="bibr" target="#b1">[2]</ref> and online <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b20">21]</ref>, while visual feedback mechanisms inspired by Papert <ref type="bibr" target="#b62">[61]</ref> continue to be integrated into widely-accessed beginner environments <ref type="bibr" target="#b44">[44]</ref>.</p><p>However, without mentorship or other external structure, construction-first approaches tend to expose learners only to a Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. subset of the concepts that are important for general-purpose programming. Purely constructionist approaches are not well suited to teaching more challenging concepts, such as function definitions, variables, and higher-order functions <ref type="bibr" target="#b64">[63,</ref><ref type="bibr" target="#b54">54,</ref><ref type="bibr" target="#b60">59</ref>].</p><p>Analyses of online Scratch programs show that many remain simplistic, often use no conditional statements, and overuse concurrency (among other issues) <ref type="bibr" target="#b58">[58,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b3">4]</ref>.</p><p>Part of the challenge of teaching programming is that more advanced programming constructs have complex semantics and are therefore not easily discoverable. Absent explicit instruction, beginning programmers will learn them-if at all-only through patient, tedious experimentation <ref type="bibr" target="#b14">[15]</ref>. Understanding execution semantics is key to successful programming; a mismatch between what programs do and what novices think they do has long been recognized as a primary hurdle for novices <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b68">67,</ref><ref type="bibr" target="#b40">40]</ref>.</p><p>In this paper, we explore the feasibility of a new approach: to embed comprehension of language semantics into a game in which students manually execute code. Building on the formal framework of structural operational semantics <ref type="bibr" target="#b66">[65]</ref>, we introduce computation as a succession of basic reduction steps. We present an example implementation of this approach: Reduct, a puzzle game that builds student understanding of programming concepts. Our design utilizes theories of progression design and skill acquisition to scaffold concepts while incentivizing players to build correct mental models of code.</p><p>The current end goal of the game is to teach up to the level of JavaScript's Map, a sophisticated functional programming construct.</p><p>Serious + Educational + Exer Games CHI 2017, May 6-11, 2017, Denver, CO, USA</p><p>We evaluated our prototype's educational impact. For a population of young adults with no prior Computer Science knowledge, we found that after playing the game for a median time of about 34 minutes, participants correctly solved programming comprehension, recall, and JavaScript near-transfer posttest problems with an average accuracy of 75%. Moreover, quantitative and qualitative feedback, coupled with qualitative results of an online deployment, shows that overall, learners found the game engaging and wanted to play more. However, we found our application of concreteness fading <ref type="bibr" target="#b31">[32]</ref>, where graphics fade from concrete to abstract representations over time, showed little impact on the perception of the game or on learning outcomes. We discuss beneficial aspects of our design and implications from our study results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RELATED WORK</head><p>Our research is informed by three primary threads of prior work: construction-first approaches, comprehension-first approaches, and methods for reducing barriers to entry. In this section we review prior research in each of these three threads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Construction-first approaches</head><p>A construction-first approach focuses on the feedback loop of program construction: a programmer writes code, runs it, observes the output, and revises their program in an iterative process <ref type="bibr" target="#b63">[62]</ref>. Seymour Papert first introduced this method of programming-by-discovery to children with his theory of constructionism <ref type="bibr" target="#b14">[15]</ref>. A key feature of his work is the "turtle," an embodied feedback mechanism representing the current draw position on the computer screen <ref type="bibr" target="#b56">[56,</ref><ref type="bibr" target="#b70">69]</ref>. The turtle provided children a body to reason about the logical world in a way analogous to their own bodies <ref type="bibr" target="#b62">[61]</ref>.</p><p>The constructionist method of teaching programming has been applied to educational technology in the proceeding decades.</p><p>It is perhaps best exemplified by LOGO's successor Scratch <ref type="bibr" target="#b71">[70]</ref>. Scratch builds on LOGO's initial ideas, such as allowing users to customize the appearance of their feedback cursor, direct multiple cursors, and snap together blocks of code. Scratch's ideas and approach have achieved widespread adoption for entry-level programmers, particularly at the K-12 level <ref type="bibr" target="#b47">[47]</ref>. While we cannot survey all construction-first approaches here, some representative examples are <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b42">42,</ref><ref type="bibr" target="#b76">75,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b80">79,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b43">43,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b77">76]</ref> and the most prominent tutorials featured on Code.org for the 2016 Hour of Code event <ref type="bibr" target="#b22">[23]</ref>.</p><p>One drawback of the constructionist approach is that language semantics can only be inferred indirectly through program output: i.e., by trial and error. Historically, construction-first environments were meant to be used in close consultation with a skilled mentor <ref type="bibr" target="#b63">[62]</ref>. Without outside structure or mentorship, students are unlikely to discover the semantics and utility of higher-level concepts <ref type="bibr" target="#b54">[54]</ref>. The danger of this is that novices can end up fiddling with their program until it does what they want <ref type="bibr" target="#b14">[15]</ref>, often without understanding why it works <ref type="bibr" target="#b67">[66]</ref>. Empirical analyses show that constructionist learning environments struggle to teach higher-level concepts, such as boolean comparison, variables, and functions, and can over-encourage use of concurrency <ref type="bibr" target="#b54">[54,</ref><ref type="bibr" target="#b58">58,</ref><ref type="bibr" target="#b60">59,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b3">4]</ref>. Moreover, students can be distracted by entertaining but extraneous features such as choosing sprites and drawing <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b26">27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Comprehension-first approaches</head><p>In contrast, a comprehension-first approach focuses first on building an accurate mental model of language semantics, with the goal of building intuition that students can later use to effectively write programs with less semantic misconceptions <ref type="bibr" target="#b29">[30]</ref>. In other words, it first teaches novices how to read code before letting novices write code from scratch. Through comprehension-first approaches, programmers may be exposed to common patterns that they can later use to solve problems, rather than having to come up with those patterns themselves <ref type="bibr" target="#b61">[60,</ref><ref type="bibr" target="#b39">39]</ref>.</p><p>Instances of this approach include example-based learning, in which novices modify lines of existing code to achieve a goal rather than writing code from scratch <ref type="bibr" target="#b78">[77,</ref><ref type="bibr" target="#b67">66,</ref><ref type="bibr" target="#b49">49]</ref>. Existing tools such as Online Python Tutor <ref type="bibr" target="#b36">[36]</ref> improve comprehension by visualizing execution traces, although these tools remain either supplementary or for more advanced programmers. A recent exception is Gidget <ref type="bibr" target="#b49">[49]</ref>, a debugging-first puzzle game for teaching programming concepts. Though it indirectly teaches the semantics of a custom rather than a general-purpose language, Gidget showed promising results for teaching novices to use loops and functions in a short amount of time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Reducing barriers to entry</head><p>Educational technology can provide structured learning environments in the absence of direct mentorship. Approaches include puzzle games, tutorials, and cognitive tutors (e.g., <ref type="bibr" target="#b35">[35,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b8">9]</ref>, respectively). Prior research suggests that puzzlebased learning of code concepts can be faster and more effective than tutorial-based learning <ref type="bibr" target="#b37">[37]</ref>, and that puzzle-based, comprehension-first approaches can potentially teach novices faster than a tutorial-based, construction-first approach <ref type="bibr" target="#b50">[50]</ref>. Tutorials can also be detrimental in games where behaviors can be discovered through play alone <ref type="bibr" target="#b5">[6]</ref>. Furthermore, puzzlebased approaches can introduce concepts with minimal natural language explanations, potentially reducing barriers to learning for non-English users and underrepresented populations <ref type="bibr" target="#b57">[57]</ref>. We note that non-English speaking populations are often ignored in the US-based computer science education literature. Partly as a result of this prior research, we chose to design a puzzle game.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Block-based programming</head><p>Syntax is a known barrier to entry for novices <ref type="bibr" target="#b65">[64]</ref>. To combat this, a long trend of research has developed graphical, blockbased manipulatives whose visual properties signal how they snap together <ref type="bibr" target="#b56">[56]</ref>. These manipulatives make syntactic errors impossible. Block-based code is well-represented in novice programming environments today, for instance by the puzzlepiece metaphors in Scratch <ref type="bibr" target="#b71">[70]</ref>, Blockly <ref type="bibr" target="#b34">[34]</ref>, and Tern <ref type="bibr" target="#b38">[38]</ref>.</p><p>Research suggests that block-based environments also improve engagement and comprehension over text-based environments, even outside of programming <ref type="bibr" target="#b46">[46,</ref><ref type="bibr" target="#b81">80]</ref>. Our design also adopts block-based manipulatives, in line with prior work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Concreteness fading</head><p>When learning mathematics, novices have been known to "self-handicap," or be discouraged by the appearance of mathematical notation <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b72">71]</ref>. Partially to overcome this barrier, Serious + Educational + Exer Games CHI 2017, May 6-11, 2017, Denver, CO, USA concreteness fading (CF), first conceptualized by Bruner <ref type="bibr" target="#b16">[17]</ref>, teaches abstractions by gradually "fading" concrete representations to symbolic abstractions <ref type="bibr" target="#b55">[55]</ref>. Recently, the game DragonBox <ref type="bibr" target="#b79">[78]</ref> applied concreteness fading to algebra, becoming the #1 bestselling game in the Apple App Store in its home country of Norway <ref type="bibr" target="#b51">[51]</ref>. DragonBox gamifies algebra by teaching linear equation solving via equations that are initially presented in a pictorial form and gradually faded to mathematical notation. In a large study, 96% of K-12 students who played for more than 90 minutes were able to solve three linear equations in a row with no errors in the game interface <ref type="bibr" target="#b52">[52]</ref>.</p><p>However, while some studies provide support for CF <ref type="bibr" target="#b30">[31]</ref>, other studies have not shown positive results, and so evidence remains divided on concreteness fading's effectiveness <ref type="bibr" target="#b31">[32]</ref>. A study of DragonBox that examined whether students improve on pen-and-paper tests did not find a statistically significant effect <ref type="bibr" target="#b53">[53]</ref>. Fyfe et al. <ref type="bibr" target="#b31">[32]</ref> speculate that effectiveness may vary based on demographics and the number of fade stages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DESIGN</head><p>We set out to design a comprehension-first approach to teaching programming that departed from previous work. Rather than using example-based learning <ref type="bibr" target="#b49">[49]</ref>, our key design idea was to gamify the evaluation steps a computer takes to execute code. During gameplay, the player performs the steps of computation; in effect, the player takes the role of the computer executing code. Players internalize the semantics of each rule by solving a series of puzzles using these rules in combination.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Choice of computational model</head><p>Programming language theory offers several models of computation that break down execution into a recursive series of deterministic rules. After reviewing several formalisms such as lambda calculus <ref type="bibr" target="#b18">[19]</ref> and linear logic <ref type="bibr" target="#b0">[1]</ref>, we settled on using the rules of small-step operational semantics <ref type="bibr" target="#b66">[65]</ref> to provide the basic units of gameplay. This semantics defines a set of reduction rules that provide an algorithm for the evaluation of program expressions (see the Appendix for a brief overview). Our game progressively introduces reduction rules for a subset of JavaScript ES2015, allowing the player to construct increasingly complex computations. We settled on JavaScript ES2015 for its notational brevity, functional flavor, versatility, and widespread adoption. In 2015, JavaScript was the most active programming language on GitHub.com <ref type="bibr" target="#b48">[48]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Performing reductions in practice</head><p>We now illustrate reduction rules in practice with the example shown in Figure <ref type="figure" target="#fig_1">2</ref>. Here we see the player perform two reduction steps using our block-based manipulatives, which were inspired by Scratch <ref type="bibr" target="#b71">[70]</ref>. First, the player binds a star value to the input of an anonymous function:  ((x) =&gt; x == x)(star) → (star == star)</p><p>The player enacts this rule by dropping star over the function parameter to perform substitution in the function body. The player can click the resulting expression to reduce it to the boolean value true:</p><p>(star == star) → true Unwittingly, the player is simultaneously building an execution that follows the operational semantics of the JavaScript language.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Gameplay overview</head><p>In each level of Reduct, the player sees three areas of gameplay: a board (a), a goal (b), and a toolbox (c) (Figure <ref type="figure" target="#fig_2">3</ref>). The player is presented with a set of expressions in all three areas. For every level, the player's goal is to successively reduce expressions on the main board to create an exact match between what is on the board and the expressions in the goal box. This match can be achieved by dropping an expression into another expression (for example to bind an expression to x), by deconstructing an expression, or by clicking on an expression to trigger a reduction. The toolbox is used to encourage forward planning and will be described in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example levels</head><p>Figure <ref type="figure" target="#fig_2">3</ref> shows a typical level that players are presented with almost halfway through the Conditionals section. On the game board are incomplete equality and ternary (conditional) statements, concepts introduced in prior levels. With the goal of getting a single star value on the board, the player must select the appropriate primitive from their toolbox to complete the equality statement. For the solution, the player executes the following reductions: To illustrate a more challenging puzzle, the final and hardest level in the Boolean section is depicted in Figure <ref type="figure" target="#fig_3">4</ref>. In this level, it is not at first clear how to reach the goal. A forwardthinking strategy is to realize that in order to get one key and one broken key (true and false, respectively), one needs 3 of one primitive (e.g., 3 squares) and 1 of the other. Once the player recognizes this fact, the solution follows: duplicate one primitive, place one of the resulting primitives into the equality expression, and duplicate that expression. The player can then put the remaining two primitives into the two equalities and click them to reduce, producing one key and one broken key.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fostering Learning</head><p>Our core motivation when designing Reduct was to develop the player's mental model of language constructs over the course of gameplay. This design choice was motivated by substantial research which suggests that incorrect mental models of code are the main cause of novice misconceptions <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b68">67,</ref><ref type="bibr" target="#b40">40]</ref>. To accomplish this goal, we applied theories of skill acquisition and progression design, described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Skill Acquisition</head><p>According to theories of skill acquisition, if the search space of a problem becomes too large, novices must develop coping strategies to progress <ref type="bibr" target="#b6">[7]</ref>. When mastering games, players gain expertise by developing "maxims" to reduce complexity and think several moves ahead, which in turn depends on competence in basic game rules <ref type="bibr" target="#b27">[28]</ref>. Our design utilizes this principle to cement novices' competence in language semantics over time. From a puzzle design standpoint, this approach requires presenting levels with search spaces too large for players to brute-force.</p><p>Unfortunately, programming constructs are heavily deterministic and lead to only a few possible combinations. Thus to increase the complexity of search space in many levels, our design introduces two features: "holes" or partial writing of expressions (e.g., _==_), as well as the ability to replicate expressions. Replication was inspired by lambda calculus <ref type="bibr" target="#b18">[19]</ref>, where λ x. (x x) is a function in whose body the parameter x appears twice. In Reduct, unlike lambda calculus, the expression (x) =&gt; x x signifies a function that outputs two copies of its input.Note that this is one point of difference from JavaScript, where one cannot write (x) =&gt; x x x to construct a function with multiple return values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Toolbox</head><p>To further limit the player's ability to brute-force the solution, we introduced the toolbox as a means to foster forward planning <ref type="bibr" target="#b74">[73]</ref>. Expressions in the toolbox do not count toward or against the goal. The player can move expressions out of the toolbox and onto the board as they choose; however, once moved, an expression cannot be placed back into the toolbox. The decision is irreversible-the placed expression now counts toward the goal-and the player must use Reset (top right corner) if they have made a mistake. Because of this, players must plan the solution in their mind before executing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Reward structure</head><p>When the player succeeds, the pieces on both the board and goal box glow, a short victory chime plays, and "You Win!" text fills the screen. This is the only reward structure in the game. We adopted this minimal reward structure in response to criticisms of gamification, which urge caution when prematurely adopting secondary reward structures <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b17">18]</ref>. We also hoped to avoid factors which might complicate analysis of our evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Concreteness Fading</head><p>To address the potential problem of self-handicapping <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b72">71]</ref>, a unique feature of our approach is the application of concreteness fading (CF) to programming education. While prior tools like Toontalk <ref type="bibr" target="#b41">[41]</ref> have explored accessible concretizations of abstractions, these abstractions have not been faded to abstract forms over time.</p><p>In implementing CF, we drew inspiration from DragonBox (DB) <ref type="bibr" target="#b79">[78]</ref>, a game to teach algebra. DB fades representations from cartoon monsters, to dice, to numbers and variables. We applied this approach to constructs in Reduct (e.g., Figure <ref type="figure" target="#fig_3">4</ref>).</p><p>In Table <ref type="table" target="#tab_1">1</ref> we show the different representations of concepts introduced in Reduct, including the metaphor behind each concrete variant. We show in Figure <ref type="figure" target="#fig_4">5</ref> side-by-side the different stages of fading for functions, equality, and conditionals. Functions are first introduced with holes for input and a pipe for output, while equality is introduced as a mirror, and conditionals are introduced as a lock opened by a key representing a Boolean value. The function and conditional concepts have three or more stages of fading, while all other concepts have two. Some concrete variants can be seen in context in Figure <ref type="figure" target="#fig_3">4</ref>.</p><p>To reinforce the correspondence between variations, Reduct includes an explicit transition between one level of concreteness to the next. Animations between concrete and abstract variants have shown higher transfer results than fading without such animations <ref type="bibr" target="#b73">[72]</ref>. When a new level of abstraction is introduced, the element sparkles with green stars, as shown in Figure <ref type="figure" target="#fig_5">6</ref>. Note that the transition between levels of concreteness is not perfectly aligned with each concept's introduction, as a concept must first be instilled before it can be appropriately faded.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Serious</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Special considerations</head><p>We should note that throughout the game, we sometimes deviate from a strict interpretation of a given construct in deference to simplicity and improving player engagement. For example, rather than returning an array, our Map function "spills" the contents of the array onto the board. As instances of null automatically disappear in a 'poof' animation in the game, the player can effectively construct a filter function by mapping over a collection and returning null for those elements that don't fulfill the specified condition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Progression Design</head><p>In total, Reduct contains 72 levels stretching across multiple programming concepts. Our ultimate goal was to introduce the player to the basic notion of Map to filter elements in a bag. More specifically, we set forth to have participants understand the following JavaScript statement: We felt that the Map concept represented a good balance between expressiveness and complexity (Map is typically introduced at around the sixth lecture in an advanced programming class). The different concepts present in the filter statement produce a dependency graph (e.g., conditionals require Booleans). While there are many different ways to traverse this graph, after several iterations in which members of the team played the game repetitively, we settled on introducing concepts in the following order: Functions and Primitives, Booleans and Equality, Conditionals, Collections, Map.</p><p>In our design, each concept shown in Table <ref type="table" target="#tab_1">1</ref> is introduced over roughly ten levels, often starting with a single-step reduction and progressively exploring increasingly complex aspects of the concept. We show in Figure <ref type="figure" target="#fig_6">7</ref> where each concept is faded in the CF version of the game. Unlike textual introductions which must present many concepts "at once"-the complexity of which may unnecessarily hamper or confuse novices <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b1">2]</ref>our approach manages cognitive complexity by introducing concepts in relative isolation, then gradually mixing previously learned concepts to strengthen understanding of the whole, in a repeating pattern informed by theories of elaboration and flow <ref type="bibr" target="#b69">[68,</ref><ref type="bibr" target="#b24">25]</ref> and lessons from cognitive tutors <ref type="bibr" target="#b8">[9]</ref>.</p><p>For example, the first level contains only the identity function must now also understand replication and first-class function application (functions as input to other functions). The solution path is not as straightforward; instead of solving the level in one move, at least three are required. Similarly, equality is introduced in a level where the only move is to click the expression, while in the final level of that sequence, participants in our online evaluation reached over 500 unique game states in their search for the solution. The bottom of Figure <ref type="figure" target="#fig_6">7</ref> shows the expected difficulty as the relative number of optimal moves per level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Implementation</head><p>Reduct was implemented in HTML5 and JavaScript ES2015, the language it teaches. It has been tested on desktop Chrome and Safari web browsers, and the version of the game as presented in this paper is publicly available online as of this writing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IN-LAB EVALUATION</head><p>To evaluate how well Reduct's design addresses our objective of teaching code comprehension, we conducted an in-lab evaluation focusing on how players react to the game's basic principles, the game dynamics, and the ability of players to transfer what they learn in the game to an out-of-game problem. We were also interested in the potential impact of concreteness fading on learning, engagement, and play behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experimental Design and Procedure</head><p>Each participant was asked to play the game from the beginning until they reached the final level (72 levels in total), taking as long as they wanted to perform the task. For each game level, participants could press a reset button to reset the current level if they made an error. They could also use a "Skip" button in case they got stuck on a particularly difficult level. After completing the game, there was a 5-minute break before completing a performance survey testing recognition, recall, and near-transfer of concepts, described in the post-test design section below.</p><p>To avoid any skill transfer, we used a between-subject design to evaluate the impact of concreteness fading: half of our participants ran a game using concreteness fading (referred as CF henceforth), while the other half played the same game but with all visuals fully faded (referred to as FF henceforth) (see Table <ref type="table" target="#tab_1">1</ref>). Allocation was randomized. Participants were given the same procedure in both conditions, although participants in the CF group took an extra post-test on their knowledge of the concrete representations, which was later removed from the analysis. This test was administered after the abstract post test to reduce priming bias for the abstract post-test; thus, the two groups' abstract post-tests could be directly compared. Finally, after the performance assessment we interviewed participants about their engagement using Likert scales as starting point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Post-test design</head><p>Our abstract post-test contains 24 total questions, grouped into 3 sections testing recognition, recall, and near-transfer of programming concepts found in the game (Figure <ref type="figure" target="#fig_7">8</ref>). There were an additional 2 difficult recall questions that served to probe players' understanding, which we did not count towards our analysis. Our questionnaire used 9 multiple-choice questions to test recognition (Figure <ref type="figure" target="#fig_7">8a</ref>), 9 fill-in-the blank questions to test recall (Figure <ref type="figure" target="#fig_7">8b</ref>), 4 near-transfer comprehension questions, asking the participant to evaluate pure JavaScript code snippets without graphical scaffolding and type their response in the blank (Figure <ref type="figure" target="#fig_7">8c</ref>), and 2 questions asking the participant to write a small JavaScript function to isolate an item in a collection (Figure <ref type="figure" target="#fig_7">8d</ref>). Participants in the CF condition also  took a concrete post-test after the abstract post-test designed to identify where concreteness fading was the most useful. This had the same questions, but in concrete form.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Qualitative measures</head><p>At the very end of the evaluation, we asked participants whether the game was fun, easy-to-understand, whether they would play more, how difficult they found the game and whether the game was visually appealing. Participants in the CF condition were also asked whether they found the visualized metaphors helpful to their understanding. These questions were answered using a Likert scale from 1 to 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Participants</head><p>We recruited 24 mostly young undergraduates (18-25 years old, 16 female) at a large US university. Most participants signed up via an online recruitment system, while some signed up via flyers posted around campus. Participants were screened to have no recent experience in programming. Our exclusion criteria was the question: In the last two or three years, have you written a program longer than 20 lines in any of the following languages or similar? The programming languages explicitly listed were Python, JavaScript, Ruby, Java, C, C++, Lisp, Scheme, Racket, Matlab, Mathematica, and R. 22 of our participants came from non-mathematical majors such as Public Policy, Psychology, Biology, and Human Development; one came from Economics; one did not wish to mention their major.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results</head><p>When computing averages and playtimes, we removed the first level from consideration due to possible confounding effects (e.g., the researcher may still be explaining the interface). Any level played for more than 5min was considered an outlier and its time replaced with the maximum time for that cell.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Playing the game</head><p>Using a paired t-test with Bonferroni correction, there was no significant difference (p = 0.443) between play time for CF and FF: median playtimes were 33m37s and 34m33s, respectively. To understand how the players performed during the game, we analyzed our logs as a two-way Concept X Concreteness mixed design. We first consider the completion rate of each level and for this dependent variable, a mixed design two-way ANOVA shows no main effect of Concept (F(6, 154) = 1.168, p = 0.326, η 2 P = 0.044) or Concreteness (F(1, 154) = 0.551, p = 0.459, η 2 P = 0.004). There were no interactions between the two variables (F(6, 154) = 0.551, p = 0.769, η 2 P = 0.021). We also looked at effort, which we define as the relative number of reduction steps players took for a given level over the minimum number of steps required to win ((actual_moves -optimum) / optimum). The raw data is presented in Figure <ref type="figure" target="#fig_8">9</ref> and closely followed the expected difficulty of each level.</p><p>We also show the same data aggregated per concepts in Figure <ref type="figure" target="#fig_9">10</ref>. A two-way Concept X Concreteness mixed design two-way ANOVA on this dependent variable shows no effect of Concreteness (F(1, 154) = 0.069, p = 0.794, η 2 P = 0.0004) but a main effect of Concept (F(6, 154) = 20.878, p &lt; 0.01, η 2 P = 0.449) with Map and Map2 being significantly lower than the other level (p &lt; 0.001). These interactions between the two variables did not reach significance (F(6, 154) = 1.953, p = 0.08, η 2 P = 0.071). We further remark that the η 2 P effect size for these analyses was less than or equal to .006, which was very low effect sizes. To reach significance for playtime between CF and FF, we would need 205 participants per condition for a power of 0.9. To explore this eventuality, we performed an online study with much larger group sizes (described in the next section).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Learning Outcomes</head><p>Since the game did not test the recall of syntax (for instance by asking them to type), on the post-test some participants entered minor syntax errors. We cleaned data in the following manner: For recall and near-transfer tests, we ignored capitalization errors (e.g. TRUE versus true). For one near transfer question whose answer was a String, we ignored whether or not quotes were around the solution (since our game did not teach the distinction).</p><p>We evaluated three primary type of learning outcomes using our post-questionnaire: recognition, recall, and near transfer. This data shown Figure <ref type="figure" target="#fig_10">11</ref> was analyzed using a twoway LearningOutcome X Concreteness mixed-design ANOVA. This test shows an effect of LearningOutcome with the near transfer being the weakest, as can be expected, but no main effect of Concreteness (F(1, 66) = 0.404, p = 0.527, η 2 P = 0.006) and no interaction between Concreteness and LearningOutcome. Overall, participants answered about 82% of the recognition questions, 75% of the recall questions and 58% of the Near-transfer function.</p><p>This expected trend was confirmed by direct participant feedback. 20 of 24 participants mentioned that the recall questions were more difficult for them in the interview. One participant stated, "The game was fun and addictive. I was focusing on figuring out the solutions by dragging those objects. I didn't try to memorize them." Another participant reported, "The second type of post-test questions were difficult. If I knew there would be questions like that, I would have paid more attention to those symbols in the game while I played it."</p><p>For the two optional hard recall questions, only a few participants (one CF participant and three FF participants) were able to come up with an answer similar in syntax to the correct answer. This was consistent with our expectation. A consistent feature of their responses is the absence of the "(x) =&gt;" arrow syntax. For those that remembered the syntax of equality, they jumped directly to equality, suggesting that they considered the function binding implicitly a part of Map.</p><p>Overall these results lead us to believe that our game was a success in introducing participants to basic concepts of programming. Probably the most surprising result was related to the low impact of concreteness fading on the outcome, a result mirrored in the online deployment (presented below).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Player perception</head><p>We now look at our participants' perception of the game. As shown on Figure <ref type="figure" target="#fig_11">12</ref>, players believed that both versions of the game were easy to understand (average rating here), fun (average rating here), and overall they would like to play more of the game. A two way ANOVA showed no effect of type of game (F(1, 110) = 0.04, p = 0.843, η 2 P = 0.0003) but a main effect of measures (F(4, 110) = 4.395, p = 0.002, η 2 P = 0.138) with difficulty measure being significantly lower than easyto-understand measure. There were no interactions between the type of game and these measures (F(4, 110) = 0.560, p = 0.692, η 2 P = 0.02). These findings were reinforced by direct feedback from users. One participant said "Please publish the game on App Store. I will totally go for it." Another participant reported that "if I want to learn more about programming concepts, I definitely will play this game more." Without being prompted, 9 participants (CF P6, 13, 19, 23; FF P12, <ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b23">24)</ref> particularly mentioned that they like the difficulty progression of the game. They said that they got a strong sense of satisfaction when they completed the difficult puzzles with the knowledge they had learned in the earlier, simpler levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Mathematics interference</head><p>During our study, participants in both conditions exhibited a tendency to attempt to directly substitute for x by dragging a primitive over top of it. This is despite repeated levels which require players to apply an expression to the leftmost part of the lambda function (its input) to perform substitution indirectly. We further observed that 17 out of 24 participants reported the correct answer to the final near-transfer question, mapping the add function (x) =&gt; x + 5 over an array of numbers, despite both numbers and addition not being a part of the game. Moreover, the equality operator == was consistently confused for = in responses to the optional questions. Given the prominence of direct substitution for x in mathematics and the = sign for equality, we believe that this behavior may be the result of interference from mathematics knowledge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ONLINE DEPLOYMENT</head><p>In order to evaluate Reduct on a larger scale, we posted a link to it through Reddit. 2942 players played Reduct as a result.</p><p>The post received more than 100 comments. The two highestrated comments started with "I love it!" and "This is cool."</p><p>The rating score increased to approximately 480 and the post hit the top of the front page. The median player played for 3 minutes and completed 8 levels. About 10% finished the game. In online deployments, when players are choosing to play, a sharp falloff with a long tail is common <ref type="bibr" target="#b4">[5]</ref>.</p><p>The online deployment contained an A/B test to further examine the impact of CF. 1502 players played the version with CF, and 1440 played the version without. We analyzed whether there was an effect for CF across concepts. In total, 355 players finished every level in the game (190 FF/165 CF). Looking at time to completion among these players (Figure <ref type="figure" target="#fig_12">13</ref>), a two-way Concept X Concreteness mixed design ANOVA showed no effect for CF (F(1, 2471) = .689, p = .407, η 2 P = .0003). The analysis also showed a main effect of Concept (F(6, 2471) = 104.793, p &lt; 0.01, η 2 P = .203) and a small interaction (F(1, 2471) = 4.837, p &lt; 0.01, η 2 P = 0.012). These results are in-line with a similar trend from the in-lab study.</p><p>We also examined the impact of CF on player engagement, measured as time played and levels completed. Using a Wilcoxon-Kruskal-Wallis two-tailed test, we did not find an effect for number of levels completed (Z = 0.32, p = 0.75) or time played (Z = -0.20, p = 0.84).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DISCUSSION AND LIMITATIONS</head><p>The results of our two evaluations seem to confirm that gamifying the operational semantics of a programming language such as JavaScript can be an engaging method of teaching programming concepts. In a larger context, our results provide evidence for the viability of comprehension-first approaches in programming education. This builds on prior work <ref type="bibr" target="#b78">[77,</ref><ref type="bibr" target="#b37">37,</ref><ref type="bibr" target="#b50">50]</ref> suggesting comprehension-first approaches can be just as effective as construction-only models for teaching language semantics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Distinguishing features</head><p>As mentioned in Related Work, many previous approaches rely on an embodied feedback mechanism <ref type="bibr" target="#b56">[56,</ref><ref type="bibr" target="#b47">47]</ref> (with some exceptions e.g. <ref type="bibr" target="#b75">[74,</ref><ref type="bibr" target="#b77">76]</ref>). While embodied feedback is a great introductory method for novices, especially children <ref type="bibr" target="#b56">[56,</ref><ref type="bibr" target="#b70">69]</ref>, one drawback is that it can only teach language semantics indirectly. By gamifying reduction rules, our approach was able to teach semantics directly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bridging block-based and general-purpose languages</head><p>Our work represents an important stepping stone towards bridging the gap between block-based and textual environments <ref type="bibr" target="#b15">[16]</ref>. Many previous tools (e.g. <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b71">70,</ref><ref type="bibr" target="#b49">49]</ref>) teach custom languages to lower barriers to entry <ref type="bibr" target="#b65">[64]</ref>, with the tradeoff that novices cannot directly apply their coding knowledge outside of the learning environment <ref type="bibr" target="#b45">[45]</ref>. To help mitigate this trade-off, some block-based environments now offer a correspondence between visual and general-purpose languages <ref type="bibr" target="#b34">[34,</ref><ref type="bibr" target="#b11">12]</ref>. Building on the benefits of block-based approaches, our design was able to introduce basic semantics of a generalpurpose language directly by introducing and elaborating on concepts one-by-one <ref type="bibr" target="#b69">[68]</ref>. In future work we hope to test whether an extension of our approach can eventually transfer novices to an actual JavaScript coding environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Minimal reward structure</head><p>A common concern <ref type="bibr" target="#b17">[18]</ref> with educational games is whether they can introduce concepts without relying on secondary reward structures-such as badges, points, or narrative-to improve engagement, as these structures can distract from learning goals <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b10">11]</ref>. We believe this work illustrates that one can gamify programming without a secondary reward structure and still remain engaging. Our approach was able to introduce language concepts through construct behavior alone, and without tutorials that hinder applicability to non-English contexts <ref type="bibr" target="#b57">[57]</ref>. Key enabling features are our progression design and our code replication and partial writing mechanics.</p><p>Taken together, these allowed us to scaffold complexity to keep players engaged <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b25">26]</ref> while fostering development of accurate mental models of language semantics <ref type="bibr" target="#b27">[28]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ineffectiveness of concreteness fading</head><p>Although participants found our approach engaging and our post-test results seem promising, our comparative evaluations showed no effect for concreteness fading. This is especially significant in the online case, where we had over 150 participants in each condition. Below, we discuss three possibilities for why we did not find an effect for CF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Implementation of CF</head><p>There has been debate over how CF should be implemented <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b30">31]</ref>. When implementing CF for Reduct, we tried to adhere closely to DragonBox's (DB) implementation. However, our CF design differs from DB in two respects: concepts remain faded once faded (a feature of almost all previous studies <ref type="bibr" target="#b31">[32]</ref>), and several concepts have only two graphic variants. Regarding the latter point, two previous studies with undergraduates and two variants found conflicting results <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b13">14]</ref>. Fyfe et al. <ref type="bibr" target="#b31">[32]</ref> speculate that three fade stages are necessary to achieve consistent success. Our fading was constrained by the length of our progression, where oftentimes there was only room for two variants. Future work could explore whether sporadic fading or the amount of fade stages alters CF's effectiveness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Study demographics</head><p>Fyfe et al. <ref type="bibr" target="#b31">[32]</ref> speculate that the effectiveness of CF may depend on student background and readiness for abstract representations. Even though many of our participants were not in technical majors, their acceptance into university, predicated on high performance in standardized tests (e.g. SAT), required prior achievement in mathematics. The study may also have a selection effect where those afraid of programming most likely did not show up. As such, our sample may by-and-large not experience self-handicapping. Similarly, our online participants came from a novice programming forum, likely causing the same selection effect and demographic skew. A new study with children would need to be conducted to help determine whether CF has an effect for a population that self-handicaps <ref type="bibr" target="#b30">[31]</ref>. However, we note that a few prior studies with undergraduates did show an effect for CF <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b55">55]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Evaluation of near-transfer</head><p>Our post-test recognition and recall questions included Reduct's graphical scaffolding around code snippets. While our near-transfer questions tested transfer to code without scaffolding, in retrospect, the number of questions and sample size was not large enough to detect an effect. We note that some prior studies found that CF's effectiveness was limited to transfer of concepts to new representations <ref type="bibr" target="#b55">[55,</ref><ref type="bibr" target="#b31">32]</ref>, while Fyfe et al. <ref type="bibr" target="#b30">[31]</ref> found that participants with high prior knowledge only showed benefits for CF when given a more challenging problem. Future work in this space might explore the effect of game-based CF on near-transfer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Design limitations</head><p>Our results for recall and optional question types suggest that we should extend our design to incentivize recall ability, for Serious + Educational + Exer Games CHI 2017, May 6-11, 2017, Denver, CO, USA instance by requiring players to type out the syntax of an expression in order to attain or activate it. Though our design focused solely on recognition, in order to become programmers novices must also learn how to construct programs to solve problems <ref type="bibr" target="#b14">[15]</ref>. With our approach, it is currently unclear what the optimal sequence and balance between construction and comprehension would be. Future research in this space might investigate how an oscillating mix of construction-and comprehension-based approaches compares to prior models.</p><p>As well, while Reduct fades to JavaScript text, the graphical scaffolding (e.g., colors, the shape for boolean type, etc.) is not completely faded. A longer version of the game could fade even the colors and shapes to approximate the look of real code (which might include a syntax coloring scheme common to plain text editors). The appearance of brackets &lt;&gt; in one participant's (P8) optional question response suggests that some of the graphics interfere with learning syntax and should become standardized in the late game. As an aside, we also neglected quotes when representing literal string constants, which is a distinction that could appear later.</p><p>As presented here, Reduct did not cover core concepts of sequential execution, variables, function naming, and assignment. A future progression would need to incorporate these concepts in order to move from program comprehension to programming in full.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSION AND FUTURE WORK</head><p>We presented Reduct, a comprehension-first approach to teaching programming by gamifying operational semantics. We presented results from a lab study demonstrating that novices can learn programming concepts by playing the game. We also presented results from an online deployment showing that the game was well received. However, we found inconclusive evidence for the impact of concreteness fading.</p><p>We believe that we have only scratched the surface of gamifying operational semantics. In future work, we plan to further investigate the potential benefits of concreteness fading for programming by testing it on younger audiences who may be more initially averse to programming formalism. We also intend to expand the content of the game. Ideally, players will eventually be able to learn the core set of constructs for commonly-used programming languages through continued play. Furthermore, to improve recall, we also intend to add fading of not just the visual elements but also the input mechanisms, so that the player learns new concepts through blockbased manipulatives but eventually types code directly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX Operational Semantics</head><p>An operational semantics for a programming language is a precise description of how to carry out the execution of a program written in that language. It differs from other kinds of language semantics such as axiomatic or denotational semantics in that it describes the mechanical steps involved in running a program.</p><p>A popular form of operational semantics is structural operational semantics, introduced by Plotkin <ref type="bibr" target="#b66">[65]</ref>. While not all operational semantics needs to be mathematical, this style of operational semantics defines program execution as a set of rules for rewriting the syntax of a program. In particular, reduction rules specify how to rewrite certain program expressions into equivalent, but simpler expressions. By applying these rules repeatedly, the execution of the program makes forward progress, eventually arriving (if the program terminates) in an expression that represents the final state or result of the program.</p><p>For example, a structural operational semantics for arithmetic might allow reductions such as "2 + 2 -→ 4" and "3 + 4 -→ 7." Both of these allowed reductions would be expressed as instances of a more general rule:</p><formula xml:id="formula_0">(n 3 = n 1 + n 2 ) n 1 + n 2 → n 3</formula><p>This rule states that the expression n 1 +n 2 , where n 1 and n 2 are any numbers, may be replaced with the expression n 3 , where n 3 is the number that is the sum of n 1 and n 2 . Note that the symbol + in the conclusion (bottom) of the rule is just a symbol, whereas the + in the premise of the rule represents actual addition.</p><p>The Reduct language is based on the lambda calculus <ref type="bibr" target="#b18">[19]</ref>, which has only three syntactic forms (variables, function definitions, and function applications), and just one reduction rule, known as β reduction. Using the syntax of Reduct, this rule appears as follows:</p><p>((x) =&gt; e) e -→ e{e /x} Note that the expression to the right of the arrow is not syntax in the language; rather, it represents the result of substituting expression e for all free occurrences of x in the function body e. Remarkably, this single reduction rule is powerful enough to express all possible computations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A level of the Reduct programming game, faded to the syntax of Javascript ES2015.</figDesc><graphic coords="1,321.09,155.01,243.06,183.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: From left to right: A star constant is dropped over an anonymous function as input, binding x and producing star == star. Next, the player clicks to reduce the equality statement, producing the terminal value of true.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Level 25 with fully-faded representations. (a) The goal, a star value. (b) The game board, with equality and ternary expressions.(c) The toolbox, with two primitives. Players must construct a true value to unlock the star.</figDesc><graphic coords="3,321.09,62.36,243.06,183.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>(Figure 4 :</head><label>4</label><figDesc>Figure 4: The hardest level in the Boolean section, with concrete representations. Reduction steps are not clear and require the player to recall how the elements on the board reduce to values.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: From left to right: Pieces of the game at progressive stages of concreteness fading, starting from the most concrete and ending at the most abstract.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>[Figure 6 :</head><label>6</label><figDesc>Figure 6: Concreteness fading in practice. When players mouse over the green sparkles, the piece fades to a more abstract representation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: The progression of concepts as they appear in the game, where concepts are mapped to colors. A box indicates the appearance that concept in the level. Change in color strength marks the point at which that concept was faded.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Example questions from our post-test, one per question type: (a) recognition, (b) recall, (c) near-transfer, and (d) optional.</figDesc><graphic coords="6,53.93,580.79,510.25,114.61" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Progression of difficulty in each concept. A larger bar indicates a higher degree of average effort (see text for details). First level data was removed for confounding reasons.</figDesc><graphic coords="7,53.93,62.36,510.26,60.83" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Game difficulty per section, plotted as relative effort (See text for details).</figDesc><graphic coords="7,53.93,607.54,243.06,90.23" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Mean percentage post-test scores.</figDesc><graphic coords="8,53.93,62.36,243.07,101.87" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Mean of 5-Likert scale subjective rating on fun, easy to learn, play more, difficulty, and visual appeal.</figDesc><graphic coords="8,321.09,62.36,243.07,90.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Average playtime per section for players that completed every level in the online study.</figDesc><graphic coords="8,321.09,600.79,243.06,96.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>+ Educational + Exer Games CHI 2017, May 6-11, 2017, Denver, CO, USA</head><label></label><figDesc></figDesc><table><row><cell>Concept</cell><cell>Concrete Variant Metaphor</cell><cell>Abstract Variant</cell><cell>JavaScript ES2015</cell></row><row><cell>Primitives</cell><cell>Shapes as types</cell><cell></cell><cell>Strings e.g. "star," "rect"</cell></row><row><cell>Booleans</cell><cell>Key / Broken key</cell><cell></cell><cell>true and false</cell></row><row><cell>Equality</cell><cell>Reflecting glass</cell><cell></cell><cell>Equal to ==</cell></row><row><cell>Conditional</cell><cell>Lock and Key</cell><cell></cell><cell>Ternary if ?:</cell></row><row><cell>Function</cell><cell>Hole and Pipe</cell><cell></cell><cell>One-parameter arrow function (x) =&gt;</cell></row><row><cell>Collection</cell><cell>Bag of items</cell><cell></cell><cell>Bracket syntax e.g. [1, 2, 3]</cell></row><row><cell>Map over a set</cell><cell>Factory</cell><cell></cell><cell>Array.prototype.map()</cell></row><row><cell>Null</cell><cell>(does not appear)</cell><cell></cell><cell>null</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Concepts in the game and their JavaScript equivalents.</figDesc><table /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Computational interpretations of linear logic</title>
		<author>
			<persName><forename type="first">Samson</forename><surname>Abramsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical computer science</title>
		<imprint>
			<biblScope unit="volume">111</biblScope>
			<biblScope unit="page" from="3" to="57" />
			<date type="published" when="1993">1993. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Computer science curricula</title>
		<author>
			<orgName type="collaboration">ACM/IEEE-CS Joint Task Force on Computing Curricula</orgName>
		</author>
		<ptr target="http://www.acm.org/education/CS2013-final-report.pdf" />
		<imprint>
			<date type="published" when="2013">2013. 2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Changing Culture: Educating the Next Computer Scientists</title>
		<author>
			<persName><forename type="first">Deborah</forename><surname>Adshead</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><surname>Boisvert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Love</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Phil</forename><surname>Spencer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education</title>
		<meeting>the 2015 ACM Conference on Innovation and Technology in Computer Science Education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="33" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">How Kids Code and How We Know: An Exploratory Study on the Scratch Repository</title>
		<author>
			<persName><forename type="first">Efthimia</forename><surname>Aivaloglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Felienne</forename><surname>Hermans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 ACM Conference on International Computing Education Research</title>
		<meeting>the 2016 ACM Conference on International Computing Education Research</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="53" to="61" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On the harmfulness of secondary game objectives</title>
		<author>
			<persName><forename type="first">Erik</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yun-En</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><surname>Snider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename><surname>Szeto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seth</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zoran</forename><surname>Popović</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USA Proceedings of the 6th International Conference on Foundations of Digital Games</title>
		<meeting><address><addrLine>Denver, CO</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011-05-06">2011. May 6-11, 2017</date>
			<biblScope unit="page" from="30" to="37" />
		</imprint>
	</monogr>
	<note>Serious + Educational + Exer Games CHI 2017</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The impact of tutorials on games of varying complexity</title>
		<author>
			<persName><forename type="first">Erik</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eleanor</forename><forename type="middle">O</forename><surname>'rourke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yun-En</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rich</forename><surname>Snider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeff</forename><surname>Lowdermilk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Truong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seth</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zoran</forename><surname>Popovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="59" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Learning and memory</title>
		<author>
			<persName><forename type="first">John</forename><surname>Robert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anderson</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Skill acquisition and the LISP tutor</title>
		<author>
			<persName><forename type="first">Frederick</forename><forename type="middle">G</forename><surname>John R Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Albert</forename><forename type="middle">T</forename><surname>Conrad</surname></persName>
		</author>
		<author>
			<persName><surname>Corbett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cognitive Science</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="467" to="505" />
			<date type="published" when="1989">1989. 1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cognitive tutors: Lessons learned</title>
		<author>
			<persName><forename type="first">Albert</forename><forename type="middle">T</forename><surname>John R Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenneth</forename><forename type="middle">R</forename><surname>Corbett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ray</forename><surname>Koedinger</surname></persName>
		</author>
		<author>
			<persName><surname>Pelletier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The journal of the learning sciences</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="167" to="207" />
			<date type="published" when="1995">1995. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Math anxiety: Personal, educational, and cognitive consequences</title>
		<author>
			<persName><forename type="first">H</forename><surname>Mark</surname></persName>
		</author>
		<author>
			<persName><surname>Ashcraft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Current directions in psychological science</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="181" to="185" />
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Perspective on Blending Programming Environments and Games: Beyond Points, Badges, and Leaderboards</title>
		<author>
			<persName><forename type="first">Titus</forename><surname>Barik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emerson</forename><surname>Murphy-Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Zimmermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 IEEE Symposium on Visual Languages and Human-Centric Computing</title>
		<meeting>the 2016 IEEE Symposium on Visual Languages and Human-Centric Computing</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Pencil code: block code for a text world</title>
		<author>
			<persName><forename type="first">David</forename><surname>Bau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anthony</forename><surname>Bau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mathew</forename><surname>Dawson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Pickens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Interaction Design and Children</title>
		<meeting>the 14th International Conference on Interaction Design and Children</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="445" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Diagnosis of Beginning Programmers&apos; Misconceptions of BASIC Programming Statements</title>
		<author>
			<persName><forename type="first">Piraye</forename><surname>Bayman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">E</forename><surname>Mayer</surname></persName>
		</author>
		<idno type="DOI">10.1145/358172.358408</idno>
		<ptr target="http://dx.doi.org/10.1145/358172.358408" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="677" to="679" />
			<date type="published" when="1983-09">1983. Sept. 1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Integrating formal and grounded representations in combinatorics learning</title>
		<author>
			<persName><forename type="first">W</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><forename type="middle">L</forename><surname>Braithwaite</surname></persName>
		</author>
		<author>
			<persName><surname>Goldstone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Educational Psychology</title>
		<imprint>
			<biblScope unit="volume">105</biblScope>
			<biblScope unit="page">666</biblScope>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Best of both worlds: Issues of structure and agency in computational creation, in and out of school</title>
		<author>
			<persName><forename type="first">Ann</forename><surname>Karen</surname></persName>
		</author>
		<author>
			<persName><surname>Brennan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note>Ph.D. Dissertation. Massachusetts Institute of Technology</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Panel: Future Directions of Block-based Programming</title>
		<author>
			<persName><forename type="first">Jens</forename><surname>Neil Cc Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anthony</forename><surname>Mönig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Bau</surname></persName>
		</author>
		<author>
			<persName><surname>Weintrop</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 47th ACM Technical Symposium on Computing Science Education</title>
		<meeting>the 47th ACM Technical Symposium on Computing Science Education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="315" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Toward a theory of instruction</title>
		<author>
			<persName><forename type="first">Jerome</forename><surname>Seymour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bruner</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1966">1966</date>
			<publisher>Harvard University Press</publisher>
			<biblScope unit="volume">59</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Challenges persist when gamifying education</title>
		<author>
			<persName><forename type="first">Shalina</forename><surname>Chatlani</surname></persName>
		</author>
		<ptr target="http://www.educationdive.com/news/challenges-persist-when-gamifying-education/430817/" />
		<imprint>
			<date type="published" when="2016-12">2016. December 2016</date>
		</imprint>
	</monogr>
	<note>Online; posted 5-Dec-2016</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">The calculi of lambda-conversion</title>
		<author>
			<persName><forename type="first">Alonzo</forename><surname>Church</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1941">1941</date>
			<publisher>Princeton University Press</publisher>
			<biblScope unit="volume">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Misconceptions and attitudes that interfere with learning to program</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Clancy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer science education research</title>
		<imprint>
			<biblScope unit="page" from="85" to="100" />
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName><surname>Codeacademy</surname></persName>
		</author>
		<ptr target="http://www.codeacademy.org" />
		<title level="m">Codeacademy</title>
		<imprint>
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">CodeCombat. 2014. Code Combat. PC Game.</orgName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName><surname>Code</surname></persName>
		</author>
		<author>
			<persName><surname>Org</surname></persName>
		</author>
		<ptr target="http://www.code.org" />
		<title level="m">Code.org</title>
		<imprint>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Alice: a 3-D tool for introductory programming concepts</title>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wanda</forename><surname>Dann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Randy</forename><surname>Pausch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Consortium for Computing Sciences in Colleges</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="107" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Flow: The psychology of optimal experience</title>
		<author>
			<persName><forename type="first">Mihaly</forename><surname>Csikszentmihalyi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>HarperPerennial</publisher>
			<biblScope unit="volume">41</biblScope>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Flow and the psychology of discovery and invention</title>
		<author>
			<persName><forename type="first">Mihaly</forename><surname>Csikszentmihalyi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996. 1996</date>
			<publisher>Harper Collins</publisher>
			<pubPlace>New Yprk</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Remixing as a pathway to computational thinking</title>
		<author>
			<persName><forename type="first">Sayamindu</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Hale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrés</forename><surname>Monroy-Hernández</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><forename type="middle">Mako</forename><surname>Hill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th ACM Conference on Computer-Supported Cooperative Work &amp; Social Computing</title>
		<meeting>the 19th ACM Conference on Computer-Supported Cooperative Work &amp; Social Computing</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1438" to="1449" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A five-stage model of the mental activities involved in directed skill acquisition</title>
		<author>
			<persName><forename type="first">E</forename><surname>Stuart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hubert</forename><forename type="middle">L</forename><surname>Dreyfus</surname></persName>
		</author>
		<author>
			<persName><surname>Dreyfus</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980">1980</date>
		</imprint>
		<respStmt>
			<orgName>DTIC Document</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">CodeSpells: embodying the metaphor of wizardry for programming</title>
		<author>
			<persName><forename type="first">Sarah</forename><surname>Esper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><forename type="middle">R</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">G</forename><surname>Griswold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th ACM conference on Innovation and technology in computer science education</title>
		<meeting>the 18th ACM conference on Innovation and technology in computer science education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Learning LOGO: A cognitive analysis</title>
		<author>
			<persName><forename type="first">Anne L</forename><surname>Fay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">E</forename><surname>Mayer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Benefits of &quot;concreteness fading&quot; for children&apos;s mathematics understanding</title>
		<author>
			<persName><forename type="first">Nicole</forename><forename type="middle">M</forename><surname>Emily R Fyfe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Mcneil</surname></persName>
		</author>
		<author>
			<persName><surname>Borjas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Learning and Instruction</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="104" to="120" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Concreteness fading in mathematics and science instruction: A systematic review</title>
		<author>
			<persName><forename type="first">Nicole</forename><forename type="middle">M</forename><surname>Emily R Fyfe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ji</forename><forename type="middle">Y</forename><surname>Mcneil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><forename type="middle">L</forename><surname>Son</surname></persName>
		</author>
		<author>
			<persName><surname>Goldstone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Educational Psychology Review</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="9" to="25" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">The transfer of scientific principles using concrete and idealized simulations</title>
		<author>
			<persName><forename type="first">L</forename><surname>Robert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ji</forename><forename type="middle">Y</forename><surname>Goldstone</surname></persName>
		</author>
		<author>
			<persName><surname>Son</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of the Learning Sciences</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="69" to="110" />
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m">Serious + Educational + Exer Games CHI 2017</title>
		<meeting><address><addrLine>Denver, CO, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">May 6-11, 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title/>
		<author>
			<persName><surname>Google</surname></persName>
		</author>
		<ptr target="https://developers.google.com/blockly/" />
		<imprint>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Computational thinking in educational activities: an evaluation of the educational game light-bot</title>
		<author>
			<persName><forename type="first">Ann</forename><surname>Lindsey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karen</forename><surname>Gouws</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Bradshaw</surname></persName>
		</author>
		<author>
			<persName><surname>Wentworth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th ACM conference on Innovation and technology in computer science education</title>
		<meeting>the 18th ACM conference on Innovation and technology in computer science education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="10" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Online python tutor: embeddable web-based program visualization for cs education</title>
		<author>
			<persName><forename type="first">J</forename><surname>Philip</surname></persName>
		</author>
		<author>
			<persName><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of the 44th ACM technical symposium on Computer science education</title>
		<meeting>eeding of the 44th ACM technical symposium on Computer science education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="579" to="584" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Enabling independent learning of programming concepts through programming completion puzzles</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Noah</forename><surname>Harms</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Caitlin</forename><surname>Rowlett</surname></persName>
		</author>
		<author>
			<persName><surname>Kelleher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visual Languages and Human-Centric Computing (VL/HCC), 2015 IEEE Symposium</title>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="271" to="279" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Comparing the use of tangible and graphical programming languages for informal science education</title>
		<author>
			<persName><forename type="first">Erin</forename><forename type="middle">Treacy</forename><surname>Michael S Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jordan</forename><surname>Solovey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert Jk</forename><surname>Crouser</surname></persName>
		</author>
		<author>
			<persName><surname>Jacob</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="975" to="984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<author>
			<persName><forename type="first">Hansen</forename><surname>Hsu</surname></persName>
		</author>
		<title level="m">The Appsmiths: Community, Identity, Affect And Ideology Among Cocoa Developers From Next To Iphone</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
		<respStmt>
			<orgName>Cornell University</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Identifying student misconceptions of programming</title>
		<author>
			<persName><forename type="first">Lisa</forename><forename type="middle">C</forename><surname>Kaczmarczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elizabeth</forename><forename type="middle">R</forename><surname>Petrick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><surname>East</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><forename type="middle">L</forename><surname>Herman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 41st ACM technical symposium on Computer science education</title>
		<meeting>the 41st ACM technical symposium on Computer science education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="107" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Toontalk: An animated programming environment for children</title>
		<author>
			<persName><forename type="first">Ken</forename><surname>Kahn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages &amp; Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="197" to="217" />
			<date type="published" when="1996">1996. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Storytelling alice motivates middle school girls to learn computer programming</title>
		<author>
			<persName><forename type="first">Caitlin</forename><surname>Kelleher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Randy</forename><surname>Pausch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sara</forename><surname>Kiesler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI conference on Human factors in computing systems</title>
		<meeting>the SIGCHI conference on Human factors in computing systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="1455" to="1464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Setting the scene: scaffolding stories to benefit middle school students learning to program</title>
		<author>
			<persName><forename type="first">Jordana</forename><surname>Kerr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reilly</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Caitlin</forename><surname>Kelleher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE Symposium on Visual Languages and Human Centric Computing</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="95" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Khan</forename><surname>Academy</surname></persName>
		</author>
		<ptr target="https://www.khanacademy.org/" />
		<imprint>
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Frame-based editing: Easing the transition from blocks to text-based programming</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Kölling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Neil Cc</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amjad</forename><surname>Altadmri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop in Primary and Secondary Computing Education</title>
		<meeting>the Workshop in Primary and Secondary Computing Education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="29" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Combining visual block programming and graph manipulation for clinical alert rule building</title>
		<author>
			<persName><forename type="first">Dave</forename><surname>Krebs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Conrad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jingtao</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHI&apos;12 Extended Abstracts on Human Factors in Computing Systems</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="2453" to="2458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Digital playgrounds for early computing education</title>
		<author>
			<persName><forename type="first">Deepak</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Inroads</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="20" to="21" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<author>
			<persName><forename type="first">Alyson</forename><surname>La</surname></persName>
		</author>
		<ptr target="https://github.com/blog/2047-language-trends-on-github" />
		<title level="m">Language trends on GitHub</title>
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Principles of a debugging-first puzzle game for computing education</title>
		<author>
			<persName><forename type="first">Faezeh</forename><surname>Michael J Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Irwin</forename><surname>Bahmani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jilian</forename><surname>Kwan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Polina</forename><surname>Laferte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amber</forename><surname>Charters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fanny</forename><surname>Horvath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jill</forename><surname>Luor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Catherine</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><surname>Beswetherick</surname></persName>
		</author>
		<author>
			<persName><surname>Others</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Comparing the effectiveness of online learning approaches on cs1 learning outcomes</title>
		<author>
			<persName><forename type="first">J</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><surname>Ko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the eleventh annual International Conference on International Computing Education Research</title>
		<meeting>the eleventh annual International Conference on International Computing Education Research</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="237" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Dragonbox: Algebra beats angry birds</title>
		<author>
			<persName><forename type="first">Jonathan</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wired</title>
		<imprint>
			<date type="published" when="2012-06">2012. June (2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Large-Scale Educational Campaigns</title>
		<author>
			<persName><forename type="first">Yun-En</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christy</forename><surname>Ballweber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eleanor</forename><forename type="middle">O</forename><surname>'rourke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Butler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Phonraphee</forename><surname>Thummaphan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zoran</forename><surname>Popović</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Computer-Human Interaction (TOCHI)</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page">8</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Gamification of Joint Student/System Control over Problem Selection in a Linear Equation Tutor</title>
		<author>
			<persName><forename type="first">Yanjin</forename><surname>Long</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vincent</forename><surname>Aleven</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Tutoring Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="378" to="387" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<monogr>
		<title level="m" type="main">Programming by choice: urban youth learning programming with scratch</title>
		<author>
			<persName><forename type="first">Kylie</forename><surname>John H Maloney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yasmin</forename><surname>Peppler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mitchel</forename><surname>Kafai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Natalie</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName><surname>Rusk</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>ACM</publisher>
			<biblScope unit="volume">40</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Nicole</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emily</forename><forename type="middle">R</forename><surname>Mcneil</surname></persName>
		</author>
		<author>
			<persName><surname>Fyfe</surname></persName>
		</author>
		<title level="m">Concreteness fading&quot; promotes transfer of mathematical knowledge. Learning and Instruction</title>
		<imprint>
			<date type="published" when="2012">2012. 2012</date>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="440" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">From turtles to Tangible Programming Bricks: explorations in physical language design</title>
		<author>
			<persName><forename type="first">Timothy</forename><forename type="middle">S</forename><surname>Mcnerney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Personal and Ubiquitous Computing</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="326" to="337" />
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Text-free user interfaces for illiterate and semi-literate users</title>
		<author>
			<persName><forename type="first">Indrani</forename><surname>Medhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aman</forename><surname>Sagar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kentaro</forename><surname>Toyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2006 International Conference on Information and Communication Technologies and Development</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="72" to="82" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Habits of programming in scratch</title>
		<author>
			<persName><forename type="first">Orni</forename><surname>Meerbaum-Salant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michal</forename><surname>Armoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mordechai</forename><surname>Ben-Ari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th annual joint conference on Innovation and technology in computer science education</title>
		<meeting>the 16th annual joint conference on Innovation and technology in computer science education</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="168" to="172" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m">Serious + Educational + Exer Games CHI 2017</title>
		<meeting><address><addrLine>Denver, CO, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">May 6-11, 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Learning computer science concepts with Scratch</title>
		<author>
			<persName><forename type="first">Orni</forename><surname>Meerbaum-Salant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michal</forename><surname>Armoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mordechai</forename><surname>Ben-Ari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Science Education</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="239" to="264" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<monogr>
		<title level="m" type="main">Introduction to LogoWorks</title>
		<author>
			<persName><forename type="first">Marvin</forename><surname>Minsky</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986. 1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<title level="m" type="main">Mindstorms: Children, computers, and powerful ideas</title>
		<author>
			<persName><forename type="first">Seymour</forename><surname>Papert</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980">1980</date>
			<publisher>Basic Books, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<title level="m" type="main">Seymour Papert: On Logo</title>
		<author>
			<persName><forename type="first">Seymour</forename><surname>Papert</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986. 1986</date>
		</imprint>
	</monogr>
	<note>Video series</note>
</biblStruct>

<biblStruct xml:id="b64">
	<monogr>
		<title level="m" type="main">Mirrors of minds: Patterns of experience in educational computing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karen</forename><surname>Pea</surname></persName>
		</author>
		<author>
			<persName><surname>Sheingold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987">1987</date>
			<publisher>ERIC</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A survey of literature on the teaching of introductory programming</title>
		<author>
			<persName><forename type="first">Arnold</forename><surname>Pears</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Seidman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lauri</forename><surname>Malmi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Linda</forename><surname>Mannila</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elizabeth</forename><surname>Adams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jens</forename><surname>Bennedsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marie</forename><surname>Devlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Paterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCSE Bulletin</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="204" to="223" />
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<monogr>
		<title level="m" type="main">A structural approach to operational semantics</title>
		<author>
			<persName><surname>Gordon D Plotkin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981">1981. 1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Degrees of comprehension: children&apos;s understanding of a visual programming environment</title>
		<author>
			<persName><forename type="first">Cyndi</forename><surname>Rader</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cathy</forename><surname>Brand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Clayton</forename><surname>Lewis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGCHI Conference on Human factors in computing systems</title>
		<meeting>the ACM SIGCHI Conference on Human factors in computing systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="351" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Self-efficacy and mental models in learning to program</title>
		<author>
			<persName><forename type="first">Deborah</forename><surname>Vennila Ramalingam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Susan</forename><surname>Labelle</surname></persName>
		</author>
		<author>
			<persName><surname>Wiedenbeck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGCSE Bulletin</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="171" to="175" />
			<date type="published" when="2004">2004</date>
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<monogr>
		<title level="m" type="main">Elaboration theory. Instructional-design theories and models: An overview of their current status</title>
		<author>
			<persName><forename type="first">C</forename><surname>Reigeluth</surname></persName>
		</author>
		<author>
			<persName><surname>Stein</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983">1983. 1983</date>
			<biblScope unit="page" from="335" to="381" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">All I really need to know (about creative thinking) I learned (by studying how children learn) in kindergarten</title>
		<author>
			<persName><forename type="first">Mitchel</forename><surname>Resnick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th ACM SIGCHI conference on Creativity &amp; cognition</title>
		<meeting>the 6th ACM SIGCHI conference on Creativity &amp; cognition</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Scratch: programming for all</title>
		<author>
			<persName><forename type="first">Mitchel</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Maloney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrés</forename><surname>Monroy-Hernández</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Natalie</forename><surname>Rusk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Evelyn</forename><surname>Eastmond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karen</forename><surname>Brennan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amon</forename><surname>Millner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Rosenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jay</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Silverman</surname></persName>
		</author>
		<author>
			<persName><surname>Others</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="60" to="67" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Computer self-efficacy, computer anxiety, and attitudes toward the Internet: A study among undergraduates in Unimas</title>
		<author>
			<persName><forename type="first">Hong</forename><surname>Kian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sam</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Educational Technology &amp; Society</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="205" to="219" />
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">The acquisition of problem-solving skills in mathematics: How animations can aid understanding of structural problem features and solution procedures</title>
		<author>
			<persName><forename type="first">Katharina</forename><surname>Scheiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Gerjets</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julia</forename><surname>Schuh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Instructional Science</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="487" to="502" />
			<date type="published" when="2010">2010. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Novice mistakes: Are the folk wisdoms correct?</title>
		<author>
			<persName><forename type="first">C</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elliot</forename><surname>Spohrer</surname></persName>
		</author>
		<author>
			<persName><surname>Soloway</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="624" to="632" />
			<date type="published" when="1986">1986. 1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Teaching and learning programming and software engineering via interactive gaming</title>
		<author>
			<persName><forename type="first">Nikolai</forename><surname>Tillmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathan</forename><forename type="middle">De</forename><surname>Halleux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tao</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sumit</forename><surname>Gulwani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Judith</forename><surname>Bishop</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 35th International Conference on Software Engineering (ICSE)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="1117" to="1126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Teaching distributed artificial intelligence with RoboRally</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ingo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tjorben</forename><surname>Timm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andreas</forename><forename type="middle">D</forename><surname>Bogon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">René</forename><surname>Lattner</surname></persName>
		</author>
		<author>
			<persName><surname>Schumann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Multiagent System Technologies</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="171" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<monogr>
		<title level="m" type="main">Human Resource Machine. PC Game</title>
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
		<respStmt>
			<orgName>Tomorrow Corporation</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Strategies for programming instruction in high school: Program completion vs. program generation</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Jeroen</surname></persName>
		</author>
		<author>
			<persName><surname>Van Merriënboer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of educational computing research</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="265" to="285" />
			<date type="published" when="1990">1990. 1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">We Want To Know</title>
	</analytic>
	<monogr>
		<title level="m">DragonBox. PC Game</title>
		<imprint>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Wizards of the Coast. 1995. RoboRally. Board Game.</orgName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Ingenium: Engaging Novice Students with Latin Grammar</title>
		<author>
			<persName><forename type="first">Sharon</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ivy</forename><forename type="middle">J</forename><surname>Livingston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Schiefsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stuart</forename><forename type="middle">M</forename><surname>Shieber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Krzysztof</forename><forename type="middle">Z</forename><surname>Gajos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems</title>
		<meeting>the 2016 CHI Conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="944" to="956" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<monogr>
		<title level="m">Serious + Educational + Exer Games CHI 2017</title>
		<meeting><address><addrLine>Denver, CO, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">May 6-11, 2017</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
